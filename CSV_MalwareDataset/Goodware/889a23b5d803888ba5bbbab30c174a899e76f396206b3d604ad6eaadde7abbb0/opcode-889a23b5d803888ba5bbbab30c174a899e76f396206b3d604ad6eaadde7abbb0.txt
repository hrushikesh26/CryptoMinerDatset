push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and (bad) scas arpl enter cli dec adc rep or popf adc xchg nop leave stos push cs sarl cmp push pop xchg mov outsl and (bad) insb push mov xor aam sub dec add fildll test mov and mov mov fildll lods fisttpll call pop repnz iret (bad) mov cmp fistl fildl arpl mov test jae loopne push sti out (bad) neg lock jno lahf mov (bad) data16 shlb cmpsb sbb mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret enter jmp push inc jo mov jns jae inc pop in mov xor jno inc cmc sub sbb mov push lret mov (bad) ss iret or mov mov dec mov sub in das sub fidivrl ja pop xor or ret push mov add mov test lods add stc (bad) mov clc or (bad) int in or ret pop dec mov out aas shlb xor push out sar jb pushf in shrl loop dec sbb repnz push test and fnop (bad) adc sub mov jno pop push lods cmp (bad) enter push faddl mov fidivr inc adc shl add js pop pop stos jle,pt fisub cli rorl clc cmp in jno stos push xlat popf push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 ret enter incb push inc jo mov jns jae inc pop in lods leave scas jo xor rolb xor push pop daa cld inc es call mov (bad) rorb das sarl jo ljmp pop int3 cmp mov into xor and (bad) iret inc in mov scas movsb add pop ljmp sbb imul xchg scas sbb cmp push xchg fimul dec out mov les mov fisttp cmp aas mov in sbb jnp (bad) hlt dec jno pop int3 clc mov dec add lea loopne scas mov movsl sbb sahf push push gs fwait mov jp std xchg ret and cmovno or (bad) xlat push jb gs mov popa imul lret cmpsb ljmp adc add call jbe loopne sbb rcrb and aas das mov xchg pop adc push adc xchg movsb pop mov cmpsl xor pop movsb xor into pop ret mov cmp mov addb movsl insb pop mov xchg dec dec sbb out mov fild cmpsb pop dec jg lahf ja sbb mov pop cmpsb out sub and push dec loopne inc mov xor pop js push mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret enter pop adc jo movsl xor xchg (bad) push inc sbb push dec push mov movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl adc xchg xchg mov sbb js out adc mov or add enter loopne adc cmc mov outsb xor push mov mov ret mov rclb mov xchg aas xchg mov repz scas mov decb cmp adc add xchg movsb mov inc insl movsb push mov js cmpsl cmc ljmp rol dec push das push je pop mov leave aas std sub pop mov mov xor pop lret mov xchg jecxz (bad) hlt leave std push add cld xor addr16 fstps mov outsb loop test push cld jp aas cmpsl shrb xchg sbbl outsb ss rcll leave addr16 mov lds jne rclb aas int and rclb popa pop dec push inc jmp add jle add popa (bad) mov daa mov or outsb mov insb mov lods push fisttpl push ss mov or mov or scas cltd sarl int adc and sbb rcrl jns cmc xchg fisttpl or aas inc add xchg mov cmc push movsb fistl mov int pop arpl movsl adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and mov arpl enter cli dec inc (bad) mov adc sub jge pop jge leave imul or push scas mov int xchg xor adc insb push sbb push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret sarl sbb outsb sub xchg repnz xchg pop in dec dec mov fsubl mov testl push mov push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and repnz arpl enter cli dec inc (bad) mov jecxz mov sarb fsubr mov or fs sbb push push mov nop and fnstenv mov jae bound orl out pop sub cwtl je jle mov jns inc mov out clc xor aaa jmp jo insl sub dec fdiv clc cmp lods sti int stos xor cmp pop sub fcmovne aas dec out xor pop enter outsb mov cld push ds lahf imul les repnz popf sbb repz data16 jnp cld jo jne mov mov movsb stc out movsb icebp pop stc sub fmull fdivs nop adc push cmp cmpsb out pop xor loopne cmp test inc ds or xor in xor fnstcw jle cmpsb sar push add enter stos ss mov adcl cs fistpll sub sbb into dec cmp aaa jge shrl and mov or jns (bad) pop andl mov call cmc xchg mov cmp es mov pushf lea mov xchg dec cmpsb rcll out or insb loope add movsl mov cmpsb in adc and loopne xor adc mov push push hlt cmc fbld das dec rorb mov outsl roll ja adc out std iret popf bound ja cmp sub jp test mov push lahf jne push xchg inc add jecxz loopne and orl fsubl stos (bad) cmp rcrb inc std lea add push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret jp xlat fsubrl mov push mov push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret ret (bad) mov push out loop sahf cs mov js sti scas inc sbb aas mov add jo jnp mov aaa pop imul adc mov nop push mov push push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret ret sar jl ds popl lods shr bound push pusha inc adc jno bound mov cmc push (bad) fs cmp inc xor push cld hlt mov mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc ficom push in add jo mov jns jae inc pop in call enter scas dec cmc sub repnz mov mov gs and or jne pusha jbe xor int3 addl jb adc push cmp pop (bad) pop xor ss addr16 push or js ret shrl cmp das scas mov push (bad) cltd push inc sarl jo mov or in mov pushf sahf clc xor (bad) xchg xchg pusha imul xor lods nop imul outsb or cld push outsl jbe (bad) adc adc or fwait push imul xchg lock enter mov cmpsb outsb arpl in ret (bad) out xchg (bad) sbb sub nop mov fiadd jle popa inc xchg enter jmp cs adc aad jns or xor je mov cmp inc lahf jle and addr16 or push xchg jb adc test mov cmp icebp out cli out jle ret ret or inc mov sarl ja lcall rcll repz data16 cmp xor mov mov and cld adc aas mov clc cmpsb and addr16 or aam mov enter (bad) push pop pop sbb jbe sahf (bad) pop mov mov in rcll lcall out stc mov into and jg dec cmp ss mov mov lahf jno adc mov sub into icebp inc pop xor clc in pop cmp mov pop pop cwtl lea sbb push adc xchg jmp xorb jns mov sub stc pop cld pusha test xor mov xchg loopne imul dec popf add push stc pushf ficoml fimul aam xor in mov cmpsb pop and cmpsl add sbb (bad) cwtl pop jae push insl push xchg mov sahf mov loopne pop push jecxz or pop fldenv imul fcmove push loope jae je mov mov leave fisub shl xchg sub cmp int data16 cld sbb dec fwait adc or mov imul in xor movsb push jp jmp cmpsb and jns call nop (bad) push call mov add add inc stc mov push nop jle push add inc dec mov pop dec ds sub xchg or je jno mov fbstp adc pushl cmp cmp push push add loope inc vaddps je cmovp add das repnz xchg jbe imul cs nop jo repz aam mov mov jecxz ja ja xor je mov push xor cmp imul cmp (bad) out repz lods push es repnz push jmp jg (bad) in pop dec in rolb fs cmpsl xor gs inc pop inc sbb aaa pop stc sbb int push fldenv (bad) lds jb cmp (bad) xor and adcb mov out cmp jge pushf jne jge pop insb sub loop aam popf adc xor inc data16 popf arpl cmp (bad) aad pop or mov dec iret ret add inc and inc inc mov xchg js hlt aam scas in test or sbb das test cmp mov jbe lret cmp sbb or mov stos mov iret dec js adc cmp (bad) imul fdiv outsb int pop mov fnstsw (bad) cli jmp adc inc shrb jmp mov outsl shrl push movb mov out les pop cmp hlt sbb mov lcall cmp rcll lret mov shlb repz jle pop lret lret push inc xchg adc leave mov sarb adc sbb (bad) loop sbb jne mov xor xchg shrl test cmp jb jle jns jae mov outsl sub pop (bad) mov mov sar dec std pop push xor enter ds subl dec in lcall xor push loope mov fcmovnbe xchg mov fcoms fcoml xchg add inc or or lds inc repz adc lea in and sbb std paddw imul (bad) push jne push mov and ffreep jl pop xchg lods mov fxch dec xchg fimul js fmull les or (bad) gs dec mov or inc rcl out in and pop test imul inc out push fmuls add push popl movswl lds jg cmp movsb (bad) fist add pop or out imul pop inc sub push dec (bad) fbld push jp jbe imul pop push and lcall push sbb lcall xor ja sbb ljmp adc addr16 lock in fstp push sbb pop inc out mov xchg out pop sub loop in or mov int3 ror andb jns mov test std cmpsl push pop (bad) ret jae (bad) jbe loopne inc das (bad) sbb sarl adc push push in and inc ret mov lcall push sub test xchg scas ljmp in aad cmp lods (bad) mov test sbb movsb and add outsb push cmp ret jb inc sub movsb les int cmp test (bad) icebp push in sbb sbb loope rorl in (bad) mov arpl jmp inc lret xor mov daa sbb jne dec loope fwait sti (bad) ljmp ss aam jmp inc jb popl jns movsl or jne cmpsb mov sti adc push loopne push test out mov sbb and adc aaa mov dec jnp inc mov movsl add sub xchg mov jo jge adc add jp shlb rorl mov daa mov xor mov loope loop mov mov and loopne inc dec adc int add pop shr call arpl and adc push dec ja sarb fimull inc mov jbe stc popa lret roll decl lods movsl rclb dec stos mov mov push aad or xor movsb xor inc popa loopne add push mov ja xor imul push jb dec xchg pop mov leave test add mov sub lock sbb fs loop (bad) aad rol sbb cmp loop add pop pop ss inc sub push add sbb pop lcall xchg cmp push popf pop lret ss sub icebp out fwait adc lea jb cmp mov lds in pop jbe or xlat inc inc fs cmp sub das adc xlat push mov or pop int3 (bad) inc adc sahf lahf insb scas rclb or movsl sbb xor clc pop dec adc mov mov fmuls in daa xchg test cld insb mov push outsb cld push push cmpsl adc add xlat loopne or aam pop mov lods test stc in fcmovnbe gs scas out add push sub fadd pop rcl out add call pusha dec movsb fadds aam mov mov test sub xchg xchg push push ss dec xor loopne pop rorb nop mov into or movsb lcall rcll callw iret xchg xor ds in test or xor sarl aad stc fild mov out cs addb push clc inc lock xorb rcll cmp movsl dec (bad) mov and xor pop les pop repz dec repnz in add jecxz popf inc sbb rcrb daa mov inc pop mov sub cld sbb lock rolb cmpsl arpl xor push cltd movsl int xor push jge cwtl sub mov je pop add or daa add test push cmp push lods ret push jmp fisub mov add sarb jns in or (bad) out cmpsl iret cmp data16 inc cltd sarb aas iret push fdivr jl jno (bad) aaa jecxz sbb lods sahf mov test xchg outsl je xor test lret jns push gs movsb xchg sub arpl sbb rcrb mov lock inc (bad) ds and rorb ret rorl aaa mov mov and push jecxz pop dec push in pushf mov aas repz je sbb int3 dec sub in adc dec jmp dec outsb mov ret stc jne push out notl and unpckhps xor enter mov popa jp xor cli sbb push js and cmp cltd mov mov cmc dec insb xchg mov jnp call or (bad) xor and xor xor dec arpl je lret xchg stos cmp fsubrp adc dec inc sahf mov xor inc inc mov push outsb js adc dec leave ss cmpsl xlat in test cmpl pop xor dec aas int3 mov xor in inc xchg mov pop pop ljmp pop mov dec sbb push aas (bad) sbb mov cli test (bad) inc pop cmpsb pop sub decl xlat mov jmp frstor mov les add test add sub jecxz hlt rol pop (bad) jnp cli sbb adc arpl lods sbb pop stos ss pop dec fldcw mov push out adc into mov pop nop mov adc mov jl cmp dec repnz sub enter mov (bad) aas xor mov adc out shr mov in mov arpl sub int3 mov push adc add cmp inc test sub mov std dec ja xor xor xor imul push pop dec gs or daa mov arpl fisttpll (bad) imul mov loopne jno pop ja rdpmc fldl2t cmpsl adc jno pop jbe ficoml or inc and jnp ret sbb jo add repz rcll mov fstl xchg pop (bad) mov jp mov jge mov aas outsb shll (bad) call lods xchg ss loop mov mov in xlat sbb aad or pop push outsl sub push push or stc (bad) cli lods fbld cltd push icebp rorl cmp pop pop daa mov inc sbb mov inc push call cmp insb fwait movsb call xchg adc stc iret rcrl and fs dec hlt adc lods jle out xchg dec xor out pop pop mov or push mov out inc cli test pop sub popf aaa or fsubs scas pop add mov jno leave je mov inc hlt xlat lock sbb dec jnp inc (bad) xchg lret push insb sbb sti in rcr popa shlb ja movsb (bad) repz lahf outsl cmpsl outsl pop (bad) xor xor jl and xor loop cmp aam pop push test lods pop pop jecxz dec pop lea cmp mov adc cltd fs mov js mov pop or (bad) repnz xchg inc push xor xor jns push imul push out test sti sahf or push cltd cmc inc and mov (bad) sbb xchg cmp adc jp in jle dec bound pop push stos mov sub cmpsb int3 jno mov scas dec xchg adc fsubl movl lds es add loopne mov or dec push scas (bad) bound (bad) xor xor (bad) cmc xor or adc xor xchg aad push (bad) stos mov dec or jo adc mov loopne xor lahf and xchg inc (bad) in insb or jge sub mov xchg enter mov jmp lahf sub dec das mov dec jle xchg inc inc mov sub imull mov adc cmpsl sbb pop xchg add jne outsl dec cwtl fisubl in nop and push bswap add jmp push mov iret mov fdivrl movsb jl mov fsubrl dec ret or lds rorl cmc stc test sub add movsb movsl push shrb xchg ljmp pushf (bad) cli out imul das ljmp push xor dec mov icebp jg inc push inc sbb jbe xchg leave and out rcl aad add pop adc fnsave enter mov or sbb sahf cmp xchg out or jge pop test jmp push mov add pusha dec jg dec nop hlt ss xchg cmpsb adc mov std xor mov std inc inc hlt shrb ret mov xor enter xchg dec fcmovb mov or cmp decb mov mov sbb mov (bad) jb adc cli je cmp out pusha cmp mov mov mov cmp fldt inc jne xchg push jo jecxz jmp fnsave xor mov mov sbb pop pop add pop push mov aaa mov into xor adc call sbb add sbb mov aad aas adc push push orl pop pop jnp out pop cmpsl xor mov out adc repz jns or aaa flds xchg pop lcall and and pop jnp insl pop (bad) and adc (bad) call pop int in (bad) pop or insb sbb mov das popf jae test movsl idivb (bad) mov hlt cmc jbe push movb jmp cmp mov sahf js clc xor sar and loopne outsl mov mov or js push jae cltd fwait (bad) in nop cltd aad cwtl push push mov popa sub out fcom xlat add enter scas sub adc inc adc scas jge addr16 int mov jle mov imul cwtl inc adc push cltd cs cmpsb sub or enter jl,pn movsb popf mov and xchg sub push push add fsubrs sbb (bad) out test jl loop mov repnz imul clc ficompl scas aam popf cmc xchg fisubrl push mov or insb cli testl xor outsb fs mov int sbb hlt loop subl ret and inc and mov ljmp es dec jmp aaa leave scas dec push adc orb test fldl enter sbb cld mov xor push adc jl nopl inc (bad) pop or cmpl push imul mov cld cwtl jecxz lcall sahf xchg mov add lds pop fs insb pop sub imul adc mov ljmp repz bound enter pushf aas daa popf and ficoml stos cmp arpl sahf scas (bad) lahf mov int3 mov push mov push sub in pop mov jl nop push cld jae xchg scas pop mov test pop popf sbb xor xor sbb mov xchg ljmp bswap cmp or insb pop pop push mov scas in mov rcrb test leave (bad) lret imul es jge and into jg lock ficoml push and push cmp nop or adc mov inc lahf (bad) outsl dec clc jg jle mov ds in push mov sub pop iret (bad) add push xchg lret jmp jp push les sbb cmp jmp sbb add mov sub loope adc xchg push pop arpl ljmp push or adcl int3 fiaddl test xchg pusha aaa addr16 mov and push das sub xor mov pushf cmp xor cmp imull sub sbb in fcmovu das lret (bad) out aas (bad) fistl out scas mov out adc and shrl mov in outsl mov mov ljmp insb xchg rcrb cwtl rcrl push xlat subl or rorl popf ja inc lret mov jmp mov into push mov mov add in jne mov addr16 lock jne (bad) sub dec scas scas in adc cmp xchg mov cmp out es fldl xchg pusha dec push cli mov pop popa xchg push mov or dec scas aaa mov sub add mov stos push or pop (bad) repz (bad) addr16 (bad) insl or int fsts inc mov lock std lahf jo in push xchg ljmp or aas cmp adc sub jae mov pop movb iret pop jmp sub or dec sub lods mov mov mov ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 ret lods adc dec dec outsb leave cmp inc (bad) pushf call clc scas push xchg jbe loop sub jbe mov mov cmp jge or mov sub scas cmp xor jo push mov add mov (bad) popa sbb iret inc in mov sbb (bad) jno inc fwait sub push aaa out stc mov xchg push mov cmp lock (bad) push subb push (bad) adc insb mov mov push enter xor nop fwait cmp sbb add dec mov xadd dec cs addl lock jbe jne mov imul les push sbb mov test aad (bad) cmp loop jns mov imul out add je inc sub mov aaa cs jne fsubp inc pop fstpl mov xor add jmp sub cmp and jle popa inc gs lcall iret xor sub jp hlt or pop and push movsl fnstenv jl sbb xchg ret mov jl add pop and xchg stos sbb xchg xchg clc rcrb outsl (bad) mov jnp mov std leave test (bad) fisttp in xchg dec fmull adc movsb lahf loopne loopne jb aam push aad out push or xlat sub pop xchg jae sahf push pop (bad) idivl inc adc mov pop dec mov and inc mov fwait movsb push push (bad) mov sub adc imull jle in cmp and xchg add and cmp lret pop inc lods xchg cmc add test imul cmp xchg fwait adc test psubsw ja icebp rcrl enter std cmc aad sbb (bad) lret cltd inc aaa lret push jo mov cltd xor sub sub (bad) sbb test pop cmpsl inc sbb mov cmp add sarb addr16 stos xchg and mov (bad) xor xor sbb or jp lea and mov sub das lods jl xchg adc pop xchg jl test mov arpl loopne add arpl adc sarb cmp rcll jae push dec add loope test add (bad) push mov aas lcall jae inc cltd mov scas pop dec (bad) sti inc sahf fcmovnb lods cs mov (bad) and insl xchg lahf lock adc jo imul cmpsb out cli or push fwait (bad) pop push insb inc mov mov pop push in sahf aad push lods push iret mov mov pop jl add out pop stos ret xor jge outsl sbb out and xchg sub jae iret mov (bad) lahf ja (bad) jno xchg pop leave (bad) cmp or fsubs and sbb fdiv ds shrb cwtl push add test (bad) aam out xor mov insb mov (bad) scas push adc xor es test mov (bad) pop insl mov or loope fsubl fisttpll jae (bad) mov es xor mov repz ja lods sub add mov cmovb roll (bad) mov jb mov push rclb outsl out imulb jnp mov out inc loop cmp cmpsb xor scas inc lods push and daa push and or subl pop or stc mov xchg push xchg insb jecxz cld jb pop xor pop inc add ret jmp movlps pshufw (bad) dec push push dec lahf or insb lret cmc jp iret xchg pop pop jle jp push mov xlat dec loopne les lods cmpsb jge aam cwtl add adc int3 jo movsb lret mov push in dec repz sar scas adc pop fbld xchg or cs xchg in jne imul (bad) cltd lahf xchg push lds outsl push jo sarb dec (bad) rol js add sbb pop xchg into mov xchg mov mov movl cmp mov dec xor push aaa (bad) aaa adc pop cs pop jno and ss pop sahf dec lret enter sub add testl repz and das call push gs lret subl cmp jmp cld ret mov push rcr movsb fldenv push push push cld push push push and mov clc dec ret int loop mov std (bad) and adc xor dec sbb and data16 add setp pop dec mov js xor pop ror mov mov push xor ljmp scas into sbb dec pop scas insl push fwait push sub add xchg fcom push push test sti sbbb and fxch sbb mov aas into pop ret sub int hlt movsl cmpsb dec sbb lret xlat subl mov lret push sub decl lods dec sbb out add mov add icebp ja cmp mul stos mov out push push mov sbb test mov loop test push jge popa scas pop lock sbb insl add xor pushf movsl inc mov mov cmp cmp int add sbb xor xchg push aam rorl inc insb and or mov mov out sti jl sub adc rclb push je inc sub jmp or adcl repz and cltd arpl cmp lcall cli xor add mov dec adc adc sahf data16 jl (bad) jb scas push aas in mov dec dec dec inc and rol imull jnp push cltd push fdivl cmp es lret dec cmc sbb imul popa dec pop xchg cmp test outsb inc cwtl fisttp popf cmc pop adc sbb mov ljmp (bad) jns fcomi or mov jg lea sub mov mov fild push in xchg scas ficompl aaa nop into xorl pop hlt andl mov dec in mov sub in sti popl sti (bad) or sti (bad) jb xchg push mov add dec xor mov (bad) fnstcw lea cmp pop push movb stos arpl pop push movsl sub sub enter fwait movsb or push loop (bad) jb inc sub xor imul insb add xor cmc fcoms dec les or cmp cmp movsb lods xor mov or (bad) and es cli sarl sahf daa jnp repz adc and cmpsw repnz add xchg mov jge es jae mov inc ret sar lds xchg cmc adc mov pop dec aad sbb out aas mov fadds sub outsl or gs fsubl mov xor cmc std insl das xchg mov and movsb pop xchg jl je je mov pushf fwait rol cmpsl (bad) cmp ss or je and sbb xlat rcll into lods aaa lock das cmp aam insl mov bound xchg sti xlat sbb mov xchg imul jb or icebp adc mov sub das push insl (bad) (bad) push pop dec and and rcrb jmp jp imul ret sbb push inc ficoml movsb mov loop cwtl push jbe movb cli mov push mov push jae cltd add scas pop lea cs lock jg jmp xchg sbb add mov mov fs lret mov jge push stc sarl aam loope mov out rclb or in dec mov popa jbe push push lret int jnp (bad) fsts mov xchg aaa jne sbb or push stos adc jae jge push inc stos hlt push push out sbb mull pop dec addr16 in dec pop ja lcall sub dec add mov sbb push or mov jle pop fldenv add mov jo cmp dec scas or lds xchg inc xlat xchg addr16 sbb movb popa mov sarl dec cs xchg push fdivl xor dec and mov out dec cwtl mov inc and ret sahf add inc fist sbb push mov leave sub mov aad mov int mov imul mov cld outsl mov cmp mov xor adc js lods int fdivr int3 or push pop lcall lods dec out mov inc test or push movsb insb xor (bad) repnz rolb imul lahf ss mov fsubrl lds jle,pt sbb outsb sarb push ja (bad) imul test or xchg add lock clc push sbb adc xchg (bad) loope push xchg mov sbb xlat xchg push jg dec inc dec (bad) dec mov adc inc sbb lock jl fisubl xchg and sarw sub jns cltd mov out jae cwtl inc in je popa scas test int sub mov ja and xor lret mov add xor inc les jne stos jno stos test jl pop sub pop xor pop or inc dec jg pop xor das push inc (bad) ret push cmp aaa bound sbb xchg xchg xor mov mov (bad) stos cld mov xor outsl ficomp (bad) mov ds js or lea int3 mov ret lret (bad) fsts xchg cmpsb xor call jmp dec pushf sub outsb adcl sbb cmp insb sub mov in pop mov call xor arpl mov movsl repz outsb xor pop jge hlt mov inc cmpsl push lods sub jae jmp pop push test push cmpsl lcall jge and lods icebp push stos and out ret movsb imul fwait inc inc mov adc sub adc stc pop popf jb icebp pop xchg lods rolb mulb mov aad fwait add scas in lret out stos pop xchg movsb outsb xchg out dec pop cmp outsl inc dec jmp mov mov pop inc and xlat adc lea push aaa inc mov adc mov insl aad mov sub cmp ror push fldt pop mov loopne sbbl pop insl ljmp mov jo adc pop test adc or out or mov dec fcomps sub (bad) add or adc sub cwtl (bad) cmp outsb enter cs out push mov cltd gs sub sub pop or mov mov jp aam cs cmp jbe sub push insb push sbb pop xchg je pushf les out mov xchg push loop cmp pop dec or mulb stos sahf loopne xchg cmp mov pop adc mov jl (bad) sarb dec jmp fnstsw sub sub sbb lods push mov add fsubrs xchg jmp inc xchg popf daa pop or adc jb (bad) xor je sbb add xor jl sbb lcall fs lcall sub push (bad) sbb dec sti in inc idivl dec flds outsl sarb push cmp insl cmpsl dec pop (bad) or hlt cmpsb jno pushf jl (bad) xlat adc imul pop jle test lcall sub mov xchg fldt and bound mov test add mov fldenv cmpsb push lds (bad) divl (bad) fcompl inc sub push sub scas fcos jle cmp lret (bad) xor ss sbb inc int push popl (bad) xchg daa fwait sbb inc adc or enter loopne push fisubrl sub pop jnp xchg jg mov fstpt mov inc je sarl mov push out mov stos push jns andb scas mov scas sbb popa out adc and dec mov jge lahf test inc pop sbb mov mov iret inc sbb (bad) sub (bad) xlat (bad) gs sbb jb add in into int or xor or add dec adc dec add (bad) cld push std mov pop or or in cmp lds inc push push enter cs dec insl mov add in stc xor xchg mov adc loope jno or in addr16 jmp lcall stos dec and (bad) xchg in add pop aam in and shll pop xorl das inc ret gs dec lcall dec call mov jbe arpl push ljmp aam or sub fiadd in mov xchg push sarb movsb adc out sbb js js stos adc adc jo cltd mov fiadd mov pop xor jo mov or int3 (bad) imul fldenv add lahf cmp sbbb test xor jmp pop outsb imul icebp xchg xchg scas outsb das push call cli push bound (bad) sbb push in pop sub lds mov inc repz xlat cmpsb jecxz jb test inc insb push pop sbbl xchg mov stos and push pop mov ss test mov pop sub mov jle mov jb cmp push call push xor lret stos scas xchg push cmp leave pop loopw or sbb jg adc jbe push adc mov rorb pop xchg in cwtl xchg (bad) jl daa mov mov mov lods xchg pop adc push jnp mov ret (bad) cmp jno xor popa pop push sbb mov xor ja sbb addb and add (bad) mov loopne ja dec fcmovnb mov pop mov imul mov lock gs jp data16 fadd jmp (bad) pop in nop push pop sbb and push outsb aad shll inc aaa hlt fisubrl xchg jg pop cmp mov push lret pop pop push push sub dec mov add notb and jge pop and fwait (bad) and aam jb sub mov dec gs push inc adc icebp insb rcrb mov pop (bad) mov in push xor daa jnp fnstenv ja pop das call inc cmp jmp jne fisttpl mov imul xor dec aad (bad) rcl mov and ret rcll add aam mov (bad) xchg mov outsb mov mov jae stos push mov pop xchg cli sbb xchg mov mov out rcl push repz dec pop jbe cmp jns add sbb rol mov mov push xchg shrl cmp leave cmc pop mov inc cld mov scas mov cmpl dec inc and inc test xchg or lahf sub dec enter das cmc popa push cmpsb lret lods jle (bad) and mov aad pop mov mov push sub add cs idivb jl cltd outsb cmpsb mov mov rcll mov mov dec aad or sub imull adc aas dec cmpsl sbb gs dec sahf sti add clc fdivr push ljmp pop into add xchg and sarl mov das (bad) (bad) ret inc add xor idivl imul and jp jbe jbe xlat jp mov inc jo add pop or dec ret into (bad) dec adc mov mov mov lock push jae mov outsb push imul and in into jmp push jp lret mov inc leave mov adc cwtl sbb clc dec aaa dec std ficomp inc mov bound out (bad) mov pop fsubrs sub (bad) js cmp test shlb xchg push test aas add mov fcmovu sahf aam cmpsl mov bound aaa (bad) hlt pop rol cld jo loope sub popa ficoml adc stc icebp xor push in jbe inc mov jge push loop and sub inc fwait cmp les dec pop dec and jmp pop dec xor pushf out dec sbb mov mov inc rclb or into sbb cmp in js sbb mov add and ret push ljmp fildl std inc mov addr16 in jmp xor inc pop (bad) sbb leave lret jb adc sti loope mulb inc and loopne jge pop movsl aam test add cmp insb das ficoml cmp mov rcrw cmp cmp ss mov ja sub (bad) addr16 arpl jno push dec and sti loope (bad) xor into push popa insb push xor sub xchg mov cmpsb dec adc or dec les xchg lods aam push inc push popf adc inc inc jle repz je push fldcw push test or and xchg mov sbb test sub push pop sbb stos adc jnp jo jp push dec movsb adc or repz in imul loopne dec subb fiaddl mov mov lcall and cmp mov (bad) je push xor test jmp adc xor incl (bad) jne call lahf (bad) mov jg push add jmp mov jecxz mov mov movsl fimull ds lods (bad) dec xor outsl cwtl push and or rcrb mov int shrl mov mov int3 call mov popf mov adc or popa and test sbb inc into xor (bad) cmp sbb adc or sub test adc xchg cmp (bad) or scas cltd lds jo pop movsl aam mov pop mov add cmp inc movsb out (bad) mov mov mov cmc pop mov cmp aaa shlb inc adc dec mov fwait adc mov jne or cld mov popf jg xchg dec lahf inc push xchg pop mov cmp sub add (bad) cmp sete cmpsb xlat iret pop lods jmp aaa hlt mov mov jns jb adc sub test pop testb dec and cmp and add aam sarl xchg fbld fbstp repz pop loop lock mov dec inc inc xlat jg outsl jl popa insl push loop cwtl add test fisubl xlat jo loopne aas push fisubr sbb std stc or push popf sbb cmpsl lret leave iret mov icebp xorb pop cli jbe xchg inc sbb mov bound mov cwtl (bad) xor xchg jmp push insl insl pop and or sub push cmp inc lret pushf inc adc cmp test sahf leave addr16 addl paddusw add jbe sub in push dec aad fwait pop psubd out int3 mov pop je mov in inc and lahf mov xor das jmp ss jmp rolb in cmp jns fstl mov aas popf jp push add pusha mov dec push cli ds (bad) mov out jnp ss pop pusha xor in mov or aad push lods sarb popa stos fimull mov jge out stos push cmp outsl and inc jmp imul and movsb push ret fmull in push adc xchg mov insb push dec cmp mov push je arpl leave mov popa sub stc mov fbstp in mov sarl sbb les ja jg,pn inc add cmp pop cmp jecxz enter cmp jnp hlt int3 aad push vcvtps2dq sub mov pop inc mov lods lret cmpsb mov jmp js and lea pop mov push pop aas adc loop dec dec fwait adc cmp ret aas dec pushf lea pop mov iret pop add out rolb jno (bad) cmp jg shlb xlat pop div in xor stc cmp popf xor roll pop fmul lret mov mov daa insl mov and pusha jb add cwtl pop ficompl sub outsb cmp or out mov inc arpl imul fdivrl jnp jl call cmp nop mul mov pop mov popa pushl fimull and arpl push or aaa xchg (bad) fist movsb outsb adc sbb mov jnp mov test arpl cmc cmp clc mov aaa push mov aad pop sub (bad) lods push or test push push xor adc sbbl sub push mov pushf and inc xchg sbb cmp ja or pop xor enter ss or push inc lods inc xchg loopne jno pop rol dec cwtl lret jae dec movsl jl jmp inc inc push push add leave (bad) (bad) leave jp cli sbb mov push mov int add push mov xlat (bad) or scas inc cli add jge and ja push mov fbld sub sub sti cmp xchg popa jecxz cmp leave dec xor fimul and test out jbe cmp jnp jge mov dec (bad) mov fdivl mov adc add or mov stos test adc cli mov lret mov gs or sub adc push cmp inc ret inc sbbb inc cltd loop popa fstl push jns test mov mov mov sub adc jno and jecxz dec pusha adc loopne xor hlt sub stos mov pop cld mov int inc (bad) in test inc popf add push test int shrl sti dec faddp dec sti sub aam add lock clc push mov popa ljmp push jmp out xchg (bad) xchg dec jp dec xor adc insl std lods pop mov dec sbbb clc mov mov mov pop scas es pop sbb loope dec pushf cmc (bad) adc jns negl sbb test lret lock in cwtl adc rolb dec sbb aas push push inc div push xor pusha aam xchg (bad) and push sbb lcall stos push ret mov int3 or and lahf cmp rcrb test outsl xor je xlat add cli mov cli lds lret aas jl push push inc out jno je scas ret (bad) cmc dec (bad) mov xchg fs mov (bad) mov rcrl pushl xlat out out mov loope xor iret pop pop xchg pop inc push xor into (bad) out push xor fsubl out pusha jae addr16 sbb (bad) test jae push popf sbb mov sbb jecxz push xchg fstpl cmp adc mov mov inc xchg pop adc rorl jbe cwtl sbb mov jnp imul (bad) bound (bad) arpl and test stc mov icebp out aaa ficomp dec pushl xor test mov test ficompl sbb cmp aad out in sbb pop popf addr16 dec xchg fadds mov (bad) cmp js aaa les shrb push jmp mov cmp mov mov add sahf dec sub inc jle inc pop vunpcklps dec push rcr repnz in push test outsl lods scas cwtl roll ss add cmp sbb cwtl scas gs xor sub int3 mov add or sub outsb loop mov sub hlt cmp aad and xor pushf pusha lret daa or pop mov mov mov in sbb popa adc lds stc test xor or push sub jg jecxz inc dec movsb bound lods ret push stos push inc cmp or sbb jle scas cmpsb xlat push icebp scas mov daa xlat push ljmp jecxz or ret push imul and add xchg fstps stc lods mov sbb sub sub loop or clc scas xchg sub inc jbe dec jns inc ja jmp mov sbb das stc (bad) jae inc mov mov mov inc fsubrl jge cmpsb pop mov or sbb xchg (bad) jno je popf leave pop (bad) xchg push ret (bad) adc sarl outsl pop mov push bound lret and or xchg inc popf or outsl clc mov add fucomi inc dec push add clc push and mov incl xchg xor hlt sbb es pop xchg push imul repz adc (bad) scas xor push mov nop ds pop and jns sub notl jbe jp loope cmp mov fbld in mov inc xchg out jmp xchg pop cmp jecxz cmc neg popf mov or pop or out or loop nop inc mov mov cmpsb jne cmp and and mov lcall xor (bad) in inc sub divb xchg pusha leave push repz fbstp sub mov pushf cli stos sbb test mov rorl add and inc adc cwtl fsubrs sbb pop loop cmc or daa fisubr leave loop inc dec xlat jge mov imull insl lds (bad) cltd pop push sub xchg sti ret aam adc mov (bad) mov xchg ljmp jle xor ss jge je jmp and sbb das roll pop out jbe jp adc leave loopne lret or jb scas cmp scas loop out in test lret jno bound aas inc xchg pop addr16 sub pop dec cs cmp mov mov fcmovne mov xchg popa mov (bad) xlat cmp jnp lods scas pop pop mov xchg mov mov ret cli dec aad jmp ljmp enter mov shll out jecxz lods andl add icebp jmp ret sbb sub jmp and xchg pop xor dec push inc xchg scas pop rcl cwtl inc lds adc mov jle xchg cmp icebp cwtl (bad) fnop movsl shrb mov push pop mov push test aam push aaa push out and mov out fild pop dec jge fmuls pop dec cmp aad jo jge repnz and pop and lret movzbl xlat xor jns je loop in repz inc loop or add insl or cwtl lahf xchg test fstp test outsb adc inc pushf movsb ljmp push lea sbb enter fdivl (bad) xor jge aas dec stc mov mov add add or imul jno mov cltd cltd jge mov mov ss mov cld stos int3 and sti mov sti leave popf fcoml bound cmpsb sbb repz xor push pop pop sbb test jl ljmp ljmp push ffree js cmpsl mov mov cld out adc mov jb mov lock in fwait loopne pop cs push sbb adc pop sub and adc sbb inc insl dec (bad) xchg sbb jg fwait cmp inc mov sub dec pop push lret pop and mov mov or pushl and test adc jle mov xor test or fcoml mov pop add mov (bad) mov xchg dec add ficoml inc enter fnstcw aas cmp (bad) jnp sbb in out mov fadds jge insw and aas into lretw xchg and inc jp pop adc jp dec or ret aas mov xorl push ss test or fisubrl jg bound repz into push fistpl lds push and rcll call ret or insb pop lret push xor hlt shr bound push stos sbb cmp and or out push rcrb pop repz mov pop cmpsb or les (bad) jl lcall pop pop scas insb push cmp xchg or mov pop mov fs scas cltd addr16 sahf subl loope adc scas mov mov int jmp in aad repnz mov mov xor sbb leave mov fstpt popf fistl orl cltd sub xchg xchg xor aas add jo dec pop sbbl std in jg push add lret mov pop adc fadds insl fistpll jecxz or jecxz (bad) divb push ja cmpsl movl mov leave dec add popa in imul and dec sub push push push leave add nop call mov dec pop stc inc das repz inc push cli mov push out sub cmp lds movb shrl and orb mov sub jmp cmp fwait xchg pop jae cmpsl movsb lods jno outsl movsl sbb pop jl xchg clc pop loop test ss dec jmp rcrl add mov adc jp cmp cmpsl fidiv sub ds cmp mov push (bad) stc icebp xor and push and dec mov jae cmp mov or popa inc pop sub or (bad) fsubr or movsb sarb mov out sbb inc addr16 out rorb cmpb out jl push and in daa sbb push lods out aas ffreep (bad) repnz mov add pop movl mov and arpl xchg xor (bad) rcrb in xchg push fs rolb inc cltd dec dec iret mov outsl sbb ret cmp xor aas and fidivr fwait mov fcoml cmpsl int add pop mov dec push pop pop cmc inc stos dec add subb push xor mov inc inc outsb in jl or xchg in mov int enter scas jne and sub push cltd push fsub adc xchg mov clc sbb loope loope leave push out xlat iret jns dec cld mov pop test sarl mov cmp sub pop cwtl adcl mov sbbl int3 sbb cwtl jp cmp push sub mov cmp push and cltd aad lea js stos insl dec dec adc pop or jo jbe pop movsb nop loop les lods loope inc mov inc pusha jne add imul roll push and shl shrb adc or push test clc vmulss lahf cmp (bad) dec mov mov addr16 pop or dec std loopne pusha sub addr16 insl jb xchg aaa imul clc push pushf (bad) jle je fs add jl repnz pop (bad) es shrl mov mov mov jmp mov fdivrs test lds gs push and pop add clc and stc jo cld pop xor loope test jb jl jge pop or dec fldt mov mov pushf adc dec mov in shll mov jbe into pusha std sub push pop xchg pop sub xchg sub xor call push mov hlt aas loop dec sbb push or sbb neg dec lods lahf es xchg ret rcll push lret xchg pop test clc dec and jge ret out leave fldt push mov fsubrs jnp ljmp test movl loopne jle jmp jg add cmp pop push jne mov and dec and or popa push and mov xchg into jns push mov aam xlat std leave jns out cmp sub sub jecxz cmp mov push sub int push repnz or (bad) test pop push xchg lret mov das xor outsl xchg dec mov cld jno gs push or mov sti inc inc pop push in sbb test inc jp pop dec aas sbb jg lahf mov inc push je add dec ljmp roll std mov stos loop mov and sbbl pusha xor push (bad) sahf add push push or lea lock push das push dec (bad) xor cwtl sti push nop pop xor pop inc fwait repnz cmp or sub push cli out adc push mov cmc cld ljmp sub push cmp mov sub cld adc xchg xor fmuls hlt (bad) jmp mov call jg leave or push lret lods mov shrl pushl imul jl pop mov mov xchg scas adc ret xchg inc (bad) and xor mov ljmp imul inc lret int3 pop sub xor loopne (bad) enter mov out mov movsb mov mov xchg and clc iret dec fwait mov bound sub push or lods ficomp mov pop popa mov stc lods adc in cmc push (bad) (bad) imul push mov popa lea aad repnz ret pop mov jp mov insb push aaa in fnstsw icebp mov outsl mov mov loop ds bound in js sub int stos jl ss inc (bad) lock push fsubs ljmp lret mov xchg insb inc mov and jo cld lcall test cs and or sub jge in add add sbb popf or xchg xor movsb ret test rorl in and lret std loop cmp xor outsb mov push cmc cs ds notl xchg xor add aad enter sub icebp shlb mov sbb bound push mov cmpsb fcmovnb leave popa (bad) aam cmpsb out les (bad) pushf sbb dec xchg pop sahf mov mov out xchg aaa cld push pop fstpl repz gs push xor mov loope (bad) adc lret sub gs fmuls mov imulb shrb arpl xchg add ds addb insl sbb pop call shrl sub cmp xchg adc dec rcll scas xchg in mov sahf in out add inc jg xor repnz cmpsb outsl mov push mov test and dec ss mov inc js inc out out pop mov cld fnsave add jnp shlb rolb jp pop push cmp jbe cmpl sbb mov and pop sub push mov (bad) push ret js repz or lret insl icebp cmpsb mov stos add in mov inc dec std cmp ret cmpsb xchg xchg jb xor ret jbe jp scas popf (bad) (bad) divl xchg imull fnstsw push cmpsl jbe sbb movsb test test xor xchg movsl (bad) jecxz and dec bound sub mov mov dec xchg pop fisub aam ljmp int3 test dec mov aaa push or cwtl data16 ret dec sbb rcr out mov add aad ljmp pushf in outsl xor sahf sar cmp sbb adc loope nop adc xorl insb pop (bad) lea sbbl and xor pop sbb mov pop mov or dec out sbb lcall in into das sti (bad) jle (bad) iret imul fdivs sub ret jl loopne pop fsubrl dec roll pop in std lret (bad) jne adc mov ss jp imul dec movsb movsl mov xchg mov popa outsl jge jmp adc mov icebp pop xchg fldl jae test add imul sti fwait imul repz int3 dec sub xchg inc fbstp jmp mov sbb or cmp stos jg or xor insb inc xlat sub xchg mov fisubr push repz cltd or cltd outsl stc fldt add das lock sbb lock xlat aam push lcall pop cmp mov gs imul xchg push dec pop data16 pop std mov pop mov xchg sub xchg popa stos dec fadds pop pop movl lods push sub add popf sub pop out leave out and mov and (bad) iret pusha (bad) pop leave mov and lock gs xchg cld sub mov dec dec inc inc or mov enter push mov (bad) jmp and adc loope hlt mov mov outsl test in into fisttpll movsl dec (bad) sbb jle jmp mov jo push sub je push sbbl lret (bad) dec mov add sti (bad) mov cs clc push scas sub inc sar cmp (bad) fs and cltd push mov push mov xchg mov pushf out push xor adc pusha fcmovu or stos xchg idivb push lock sub out push push int3 sahf adc mov sbb mov test mov cltd jle cmp enter cmp bound inc xor sarl cmc fdivrp call pushl pop or pushf inc push cmp in mov (bad) fcoms xchg mov or js jl xchg mov lcall out push pop inc add insl xchg dec and jbe jp (bad) or pusha jmp inc cmp jno rcr stos cmc sub outsb sub movsl cmp loop sub in arpl add arpl cmp int3 inc sub cwtl nop int push hlt mov imul pop and jecxz js sub sub bound int clc xor and mov repnz jb out gs inc les cmpsl lock in std nop loop xchg out mov mov (bad) repz movsl rcll pop lea add or mov push cmp dec sbb xorl and mov cwtl push sub jb lcall (bad) sub (bad) fisttp les jg or (bad) xor (bad) test inc (bad) fld in push cmp push cmp jle insb outsl ja xchg mov xchg pop pop lret clc fs mov or call dec aam insl xlat ljmp imul mov and repnz xorb repnz dec mov ret sub push das in or cmp jmp aam hlt jns and aas out adc lea pop pop mov add mov sbb mov cmp pop xchg jmp xchg cmp push push (bad) std out inc dec out test adc jl jp inc pop pop xor pop jmp jl jle movsb mov pop cli jmp roll scas sahf mov popa inc aaa xchg pop adc inc cwtl mov mov xchg xchg into mov sti ret mov push dec xor xchg adc stc sbbb out push out dec (bad) aas mul iret or jle adc inc dec and js jmp in mov adc or lret push sbb mov lret add pop leave loop pop cli inc cmp push mov mov and adc (bad) dec sbb adc test xchg jbe mov (bad) int3 jnp xlat inc daa dec or mov sbb test icebp and mov arpl aas out push sub pop repnz stos pop shll sub pusha adc popl subb dec cld lahf sbb lods iret out test scas out jnp pop fadd add cltd sbb pop scas or push adc add adc loop bound in subl push jg jns outsl cmp mov mov int scas adc fwait dec inc enter push insl (bad) cmc xor int (bad) dec js dec mov aaa xchg add insl lods (bad) or adc or mov push add jne lea iret push sub cli fwait add lods ret mov jns in dec fidivl or add rcl loopne mov stc iret pop fstl loop repz pop fimul cwtl xlat inc cltd cli fsts cmp sub mov call ja dec inc sbb stos push pop push sbb inc in scas mov mov push pop xchg mov in jnp bound xorb into mulb cmp mov jns adc fistpl outsl pop stos inc in jno aaa adc sub mov ror mov cmpsl stos sub xor popa xchg jg and rcrb lcall mov outsb ss jbe test insb xchg aad ret in mov mov sbb pop in out mov test pushf lods popa dec (bad) je fadds add mov xchg aam fs imull (bad) pop in dec cmp pop sub mov pusha iret xchg pop jge (bad) or and or repz pop out jbe,pn xchg pop pop push adc and push xchg movsl daa imul loope cli rcll cwtl xchg mov cld imul push rcrl jno test adc cmpsb xchg arpl cmp clc test jmp movsb fs aad mov mov jb mov repz scas fwait ljmp cmp or sbb mov das mov pop sti les cwtl adc aam jo test mov jno cs mov ljmp push mov dec or xchg inc or push cmp mov repz test out sbbl pop xor add fnstsw out movsl test testl sub inc jno sbb outsb pop ja jg xchg pop or xor pop shrb inc pusha cs gs mov insl cltd xchg gs mov ret inc fwait ja iret dec push xorl lock mov mov addl jns xor fcmovu push sub rcrl stc mov inc (bad) lock leave outsb das aad scas hlt arpl iret cli inc mov je fist cli rcll mov push cmp clc enter pop jbe sahf loopne stos pop sbb hlt cmc test pusha rcr mov scas dec test int inc sbbl (bad) xor into fwait pop push in (bad) push cwtl scas movsb lret (bad) and push rorb stc orl sbb (bad) out or xchg aas stos mov mov mov mov jno pop mov loope daa pop inc fmull movsl stos and data16 sbb subb dec and mov jle sbb cmp and (bad) popa icebp mov pushl xor mov cmp fs aam aam mov loope ficom adc xchg xor push jge sub in xlat ss pop inc cltd repz rcrl add xor cli jmp or aas popf pop mov cmp out data16 mov or shr sub or fstps test lods dec (bad) xchg cmpsb push push cmpsb cltd jns outsb mov rolb nop (bad) je imul fadd icebp imul insb inc dec jmp push mov inc and sbb stc fisttp leave sub sbb xor mov (bad) or or imul dec mov dec sbb test adc popf data16 jl inc sbb gs fsubrl cld js pop jle cmpsl pop xchg and ja jno ds divl out fisubl fcompl pusha mov jb xor lret sub inc loop xor leave xor sbb sub lods xor xor inc mov xor (bad) xor ret mov cld mov mov sub pop mov xchg jo lret jno sbb mov hlt xor dec cmp adc lcall mov (bad) lock fwait lods mov ja xor sti dec fisttpl sbb addr16 lea or pop mov sub jne mov cmp sbb pop rolb sub stos adc es jp arpl push test dec sahf sar xchg adc sti mov aas xchg in mov fs out bound jg (bad) in pop aad jno ss leave sbb jo lods scas faddl jle push sub popa aam mov adcl test jb les jbe nop push ret mov stos mov jecxz rcr dec jmp cld mov dec loope and clc mov dec or fisubrl icebp out pop mov imul mov sub shll xchg and lds mov add testl addr16 or jmp std mov in rclb inc pushf (bad) xor mov test data16 inc lock push mov int fisubrl lret push (bad) and cwtl xchg imul call mov (bad) daa pop and add jns mov ja rolb cmp rcll cmpsb pop pop xor pop push inc dec (bad) aam divl stos in daa adc xor scas lea enter call dec xor xchg pop dec (bad) xor xor movsl (bad) mov ficomp pop ljmp adcb sbb adc stc int mov cmp cwtd cmp (bad) cltd inc lahf pop sbb clc aaa xchg cmp test loopne int3 sarl and xor fstpl out or mov lret test (bad) adc pop std mov jne pop dec mov outsb lods adc pop fwait pop daa inc xchg cmp js mov or pop ret daa out int xchg mov mov out fnstcw ljmp pop cmp mov sbb inc push (bad) adc (bad) mov mov ss (bad) sbb icebp push mov cmp out adc dec mov mov jo add dec xor jns push jmp movl adc jae jmp cmp in bound sub mov les lea (bad) dec inc jmp lcall push daa repz xor mov xchg adc and (bad) mov test loopne mov ds cwtl outsl mov testb mov pop cltd cltd das pop push pusha cltd and sbb (bad) or arpl pop test dec xchg scas mov fwait push outsl xchg push (bad) stc fcoml xor push mov ja xor push xchg aaa inc xchg pushf mov (bad) rorl push mov jb jg daa sbb and (bad) dec scas pop push mov mov push xor sbb and je cmp mov fwait push cmp pop mov outsb arpl pop jno loop pop ja xor insb dec lahf lret xchg repz jns daa inc popa pop inc jb movsb push cltd addr16 xor movsl xchg aam data16 enter pop jl adc (bad) jbe adc sub add mov mov cmp clc mov jb lret cmpsb jae cmc cltd pop jle lea (bad) sbb movsl rcr daa cmp mov out push sub lods in push or dec jnp sbb or push jae pusha cmc lcall aam mov test loop lret data16 out mov lret push imul sub add enter mov pusha xor push push lock mov jecxz ret add lods fs mov ret (bad) add in popf mov mov daa jmp adc xchg inc xchg dec jb mov mov mov iret in aam jbe jo (bad) outsl jno test mov into mov jns jl je cmp fwait adc mov bound ja or and or or jo cmp pusha insl pop dec xlat jbe push (bad) je pop mov es (bad) (bad) or sbb (bad) negl add rorl sbb jne inc mov add mov rcl scas (bad) shrb aad fnsave ucomiss mov div (bad) addr16 fistpll (bad) ja push loopne pop add mov push xchg xor xchg icebp (bad) pop push sub jge sub fisubrl orl pop psrlw xor mov call aad pop leave mov push inc dec insl bound mov stos mov (bad) hlt jb repnz inc popf mov add cld push aas call add mov cmp dec jge out push push xor mov cmp mull idivl test add stos fdivrl xchg add mov cmp pop xor lcall (bad) xor or sti jp scas dec and mov int lea push xchg mov (bad) outsb adc mov (bad) mov lret cmpsl sub fldt lret out insb ja xor mov push (bad) test mov sbb loope orl jmp lret jno out stos pop ret lret lods push fwait popf jno pushf xchg out add cmp push add push out fs arpl mov mov lahf (bad) mov push call dec lcall xchg mov lods and jns repz xchg cmp in pop rclb jo pusha pop push cli or push sbb mov and cmpsl fnop adc sbb and js jl gs ja dec jmp push mov pusha je xor stos mov stc cmp mov mov jle mov aas dec jb lret cmp inc add jno (bad) out inc (bad) or sbb inc cli mov mov mov push enter call mov in cmp push cmp mov aas arpl mov (bad) stc (bad) cli dec jb jnp fmull ja (bad) mov cli adc mov jmp fcompl ja xor aaa push jmp xchg imul sub sahf jmp inc mov pop lods cmp cmp mov int3 (bad) dec pop icebp lds push push inc pop jge add ret adc pop mov lea and mov cltd cltd mov pop add dec pop mov mov leave xchg mov shll cmp imul xchg inc or std fldl2t rorl and inc cmp enter or cmp ret je jp mov (bad) mov jg clc xchg push mov dec int push imul mov nop fildll pop xor lock roll sub fwait mov jns sbb in lea or xchg add popf jmp mov pop (bad) sub aaa pop mov (bad) adc push cmp xchg and mov adc inc arpl test xor (bad) add fcoms mov mov insb add and pop shll stos into jp ffreep aaa iret pop dec mov outsl inc fistl lock xchg inc xchg sub les sub mov and fcomps or pop daa jmp repz scas dec and imul jne and pop push push inc adc jo movsb adc cmp stc mov and sub mov repz jle mov dec xor or sbb cmpl jp jo dec or xchg loop inc inc jle xchg adc lods push cmc xor sti rcl cmp lret jge ss divb push dec add btc xor neg out incl adc and sub cld lods lds add outsb push std cs ss je lods adc xor cmp xchg (bad) mov sub addr16 pop mov inc jns push fnstsw cmpsb xchg sub and scas fcompl (bad) xlat in pop xor stc aas insb fadds jecxz,pn sub or sub dec sub xchg mov (bad) jbe jp sub cmp cmc dec sbb enter int das ss jae adc or addr16 orl add jo lock les les ds repz push mov sarl mov pop mov (bad) xor and sub mov xchg jne das mov sbb xchg sbb sub mov dec jg shrb mov mov jg ds ret push pusha test mov jg vpshad lods (bad) push js pop add in imul aam jb pop mov insb cli dec cmpsl add push pop scas stos add sbb pop inc add popf jnp leave mov dec mov and scas ret adcb cwtl mov inc sbb mov test sbb or mov idivb mov rcrl mov jmp and xor stos and fwait sbb decb stos jle scas or mov ret out pop lock enter sahf lock dec push clc pusha cmp mov test xlat je jno aaa lock mov repz cmp enter jmp enter sub aad and cmp es int mov cmp sbbl mov shll icebp adc clc lock outsb data16 cmpb adc push pop das cmp das inc mov cli nop popa cmpsb or fcmovb adc push mov push aaa je mov push lds xchg xor pushf das nop inc loopne es aaa std ror adc dec sub xor push out jb mov out dec xchg dec movsl and dec xor push mov mov push call popa mov fcoms xor fidivr (bad) mov movsb out pop sahf or and adc cmp jmp push pop lcall lea dec push lahf loope fidivrl daa scas mov push xor or dec dec sbbb jmp or scas xor mov or sbb das loopne sahf dec push les gs pop or cli sub xchg es sti jmp data16 in xchg idivl mov mov adc es sub setno and xor addl stc add add jmp and push jbe push xor pop rolb lds xchg in mov sbb fs test xchg or loopne adc pop mov mov jo xchg mov or nop sbb xor ja hlt cmp push lcall daa std add ja and add imulb pop negl or fcmovb outsb aas mov xchg pop inc pop dec jp push mov out xchg in gs dec dec test push push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret ret enter adc push fisubl mov jb enter cld and mov sahf mov testb push call pop ret (bad) mov (bad) ljmp mov jo sub sbb jl cwtl fmul and (bad) mov cltd mov call push call pop ret push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp push mov inc stos gs xor push aas push xchg lret cmp pusha or inc or inc or ja and adc ds inc jno adc insb push sbb lds clc int3 or stc int mov daa sub adc iret inc mov test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret and xchg inc mov jne jl adc push popw pop mov popa jbe hlt mov push cld dec inc test or pop fwait dec pop fidivrl stos in and stos dec mov mov insl sbb and inc and push mov dec (bad) pop jbe iret push xchg out int3 inc lock pusha xor loopne mov mov loope daa add sahf mov push mov inc mov dec arpl (bad) pop xchg enter ffreep arpl jmp sub xor pop inc cmp (bad) addr16 and in lds popf sub (bad) scas andl sbb xor xchg dec ss aad xchg sbb add mov fs or daa outsl ss stos pop int3 cmp cmpsl mov shrb fldenv sub cmp das xchg push (bad) mul in popf call pop sub and mov ret imul sarb sti (bad) dec and lcall pop shr outsl std sub or rclb jmp (bad) xchg fsubs mov cltd add add xor rclb lahf or lea popf dec shlb leave add lahf or dec dec mov jmp push repnz xchg jbe (bad) (bad) aam outsb in popa add movsb adc pop mov loop out cld sub scas pop scas dec pushf mul lcall jae pop mov jb enter cmp cld inc fs leave add aaa enter push lods cmp std pop add mov mov std pop pushl fldt inc xor clc sbb lock sub cmp dec jo cmp xchg add inc xchg mov dec daa adc arpl iret das push mov mov inc stos inc sti arpl xor and or (bad) mov cmp insb outsl push mov into push mov rclb roll rcr mov and pop movsb movsl jbe int3 xor lret in jns mov dec ljmp inc inc ss xor add push jp inc les es repz aas adc aaa adc pop stos sub sub in push push in pop cwtl pop jo mov js and push in sti cmp sub xor pop cwtl mov cmp aaa push les addl sbb mov mov aam mov add mov lret push pop mov lods (bad) imul incb iret adc in adc xchg into fstpt in mov jo ljmp mov xchg jo lahf mov data16 jne call fwait mov xchg inc aaa xchg cld (bad) fcoml into and mov movsl xchg fisubl ds leave jecxz lods test ds pop pop add mov cmp and mov or xor add es repz shlb push mov int3 xlat or xchg test fsubrs rcll add sahf xchg dec push mov test popf push jle cltd cs call mov jp mov insl dec and fisubr daa xorl push jae ljmp call lret inc xchg jae add xor lahf pop jecxz in mov arpl mov cmpsb cmp sub mov pop lret lcall jae imul push xchg adc mov pop (bad) pop pop sbb pusha mov and and cmc cmpl js pop cmp popa mov cmp ret mov mov adc pop mov (bad) cmp stc add jge (bad) (bad) push fs cmovno mov mov jp xor xorl pop push xor adc cmp cvtpi2ps pop (bad) aas push test cltd sub sbb outsl pop (bad) inc ljmp les int3 and into xlat repz dec stc adc addr16 push jb mov or fnstenv adc movsb pop cmp popa push loope push aas shll push pop or pop sub cmp (bad) or mov sub aas aaa cmp call cli (bad) (bad) pop bound push sub loopne adc push mov sahf xor or jp mov jne je or ret sbb pop out popf cwtl (bad) sbb loop sub dec sbb lds or jg cmp ficoml adc out pop xor stos push push (bad) and call lods adc cli push sub inc and test mov sbb inc dec pop add pop mov cmc lea cs jg sbb psllq cwtl mov cmp dec cli cmpsl js jb test loopne pop (bad) sbb rorl popa add jp pop xchg in arpl les or cmpsl push inc xorl lods xor inc div popa and push adc (bad) lret cltd xor and loop imul mov mov in and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 ret enter stc add jo mov jns jae inc pop mov pushf adc pop mov mov mov mov mov push pop mov fdivrl sarb and cld push insb pop das mov lock iret inc cmpl jne xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 ret enter stc add jo mov jns jae inc pop mov (bad) hlt push int3 add pop test lret dec mov nop in jbe add mov cmc data16 icebp jb jmp cmp cvtps2pi cs lret scas cmp mov int cmp adc add mov push push push mov inc inc insl movsb cltd jno clc xor ljmp push ret mov add adc mov cmp sub xor jge faddl push dec mov repnz mov and or add sub dec push loopne xor cmpsb xor pop xor mov pusha push mov mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 ret and xchg insl adc mov jns jge sbb jecxz lods lret mov sahf jl pop in shl mov inc aaa or inc adc add add inc adc add add add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 rcr xchg in pop push (bad) bnd jge fwait adc add xchg sub loopne push rdmsr mov dec jl lds stc mov jbe stos insb (bad) repnz into aaa jb pusha insl cmp push lret in arpl lods outsl repnz push lahf lret and (bad) jno dec fist add mov lock and xor pusha inc push or (bad) popa sbb test push mov sub and add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg arpl adc xorl adc push inc push ds add pusha or pop and push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 ret and xchg mov (bad) xor sar rorl cmpsl mov daa das or (bad) sbb aaa scas sub and add dec mov or mov mov mov xchg mov xor clc int3 or stc int mov push aaa and inc push push jae fildll add jl inc ljmp gs adc (bad) dec cmp sub andb stos imul xor cmpsb test repz push add insb negb xchg xor (bad) push popw int repnz bound out jle and stos mov mov popl out lods mov adc clc jae in pop mov daa jne iret sti imul push mov cmpl xchg ret and xchg and in inc and cld movsl aad loope fdiv fcomps push fcompl jne mov pop xchg mov dec movsb pop mov adc push push movsb dec xor jecxz outsl mov stos mov stos mov xchg repnz cmp fs add dec mov sub std daa aam das cwtl lahf ja scas mov out cmpb hlt std leave jae inc xchg test aas mov cmp loop jb jb jmp dec adc cld inc int loopne clc mov or in dec inc push mov inc jns jns sub lods add movsb insl (bad) cld loopne mov test add xor mov daa mov add push cld enter ficompl lcall cmpsb in mov inc mov and and std das jae jae xorl sti adc cli xchg add mov (bad) mov pop lock mov ffreep rclb nop mov lock out cwtl (bad) cltd movsl jmp jp ds pushf adcl jno stc aam jb sbb sahf inc xchg xchg popf and cld add sbb (bad) (bad) push iret pop gs adc pop out adc dec push stos into fstpt gs jne (bad) sbb add mov and add int3 subb xor mov mov outsl sti cmc stos mov dec mov mov (bad) jle push pusha imul adc or mov out icebp jnp (bad) cmp mov cmc and push sbb pop mov repz sub sahf sub mov fcmovbe inc loop xorl dec enter jbe sbb and aas (bad) jbe xchg fbstp enter adc adc adc jne sbb jge adc jb stos (bad) mov cs mov mov repz lods mul mov mov sbb and dec jbe imul rcrb shll dec cwtl cmpsb jmp add mov repz mov insl adc js popa stc add lock lcall test inc call sbb rcrl inc add insb mov adc jns xchg lret jge adc sub push js inc into push add push pop mov ret loop pusha mov (bad) xor cmp xor andb mov mov outsb iret pop mov arpl inc adc mov inc mov leave sahf adc xchg and es jp (bad) mov popa mov imul xor xchg mov adc pop cmp repnz push inc and sub adc fsubl push lahf call dec inc mov in dec mov xchg movsl sbb into or sub das sbb push (bad) mov mov dec jmp add ret insb sahf xor sub pushf xlat and shr fs ljmp mov icebp adc ss andl loope pusha fs push jge ret test gs (bad) outsl pop push dec and scas sub repz xchg bound pop and mov sbb inc das xor cmp out lods imul test or (bad) hlt cmp cwtl scas jl mov dec cld iret in enter xchg ret fs push xor aas aaa dec or mov mov mov dec fwait aaa sbb mov mov aas cltd jp cmp fwait in xchg mov sub push dec and and bound in lret insl in fisubl das pop aas push push dec std adc movsl add stos rorb das inc jo push out jno pop (bad) mov sbb push aam sub in add mov ja gs add and mov imul pop dec adc fdivl test adc ja add inc mov cltd push ds out imul add popf ret push xchg cmc push sbb flds xchg pop pop push movsb out in in or mov stc sub mov push scas xchg xor mov cwtl (bad) movsb jmp or shrb popa cmpb lret ret rcll mov not icebp loopne ficomp mov sti xor xchg and dec roll mov out pop pop dec and sub sub cmp adc lods pop adc ret bound lock dec mov or dec mov jge insl pushf pop enter fxch mov cmp inc jle insl mov fldt sbb mov out pop fiadd sbb imul iret ds ja push push xchg and int3 iret push jae int3 jae mov pusha mov mov jno popa int sub sub xchg cmpsl (bad) dec pop jae push pop scas xchg pop sbb or adcl xor or enter iret mov cmp nop xchg movl adc add lock jmp sbb jl sahf (bad) ret les mov mov xchg push sar addr16 cmpsl mov sub add jae (bad) push xor xor nop xchg jp mov dec cld xchg les xor mov out adc fs and and mov jno xor xor stc sti jbe ss pop pushf sub test les loop mov hlt push test jle jle stos stos sub loop cmp or push out lret outsb shrb jecxz mov jnp fnsave ja loop jmp mov and xor int3 repnz jl inc leave push in out or call dec (bad) dec and (bad) jecxz cli and dec mov sbbl cmp pop dec insl mov lret mov pop (bad) jno mov sub or imul xor xor add mov xchg pop hlt push gs or mov sbb hlt mov orl loop mov mov hlt push dec mov mov jl (bad) jp jle add sub mov scas insb add (bad) repz mov pop lcall jmp fmul mov jae push push leave lret xchg les xchg cmp adc gs jne sarl cmpsb jp das fwait mov icebp mov arpl push adc mov scas jne adc push xor std jle cltd loopne mov jb push imul test mov dec sti pop jne or mov mov nop sub fsubs or xor adc loopw rorl jnp repnz push fcmovnbe movsb aad fstl lock int3 xchg ret stc dec mov mov adc call mull adc jg in xchg (bad) xchg mov popa jg rorl jnp inc mov out sbb loopne sub pop cmc pushf inc add and cld popf loopne jg addr16 mov addr16 out sub orb jbe movsb dec pop popa call in push aaa xchg lock mov in add fstps aam mov adcl cmc ficomp xchg dec pop pop mov add or mov lock jl push std xchg add enter xlat sbb fist adc mov imul pop sbb pop js pop outsb inc inc xchg mov adc test push cwtl aaa inc push sub jl rol movsl fdivp mov in jo test mov lret nop arpl mov bound sub jle sub rcrl dec push add (bad) mov rcrl imul or rorl sbb rcll (bad) and or sbb mov sub lods mov lret test push jo add xchg scas xchg jge sbb mov loopne repz faddl add mov icebp mov jne arpl push addb sub int3 and call push jp jp xchg push xor xlat mov in (bad) fucomip cwtl in pop aaa in fnstsw int mov and int3 pop scas fs and or xchg sub mov (bad) sbb mov jge xor cmp xor mov push or gs xor lods or repz outsl dec fdiv lea pushf fbstp inc mov mov test or cmp test sahf test test push nop push mov sub push jmp shr loop rcr dec jg dec inc loop mov jecxz aaa push and into jmp mov lods out mov inc sub cmc stc xchg mov push push ja mov out cld pop ja outsb mov mov jp cmpsl outsb imul pop lods sbb arpl cmp daa xchg xor adc into stc jbe sub add xchg mov (bad) popf pusha int mov inc test inc dec dec sub jns and scas ficompl dec arpl xor in or mov sar xor arpl sti repnz sub push inc out sbb mov loop je mov xchg mov mov mov adc insl dec (bad) xor mov and pop and shrb stos mov loop mov stc or mov pop mov or aad std push cmp inc mov and movsl mov hlt and (bad) sbb push enter arpl sub out mov and je pop pop lock cmp adc jb adc (bad) lret lea xor cmp je inc or push and ficoml lock dec push sbb pop popf loope stc aad imul pushf cwtl test fnop sbb xchg cmp pop add mov ret push push nop sbb hlt mov xchg lods movsl ret cmp popf iret into sbb inc loopne push push fwait or in inc repnz adc mov je insl (bad) xor cmp sub add mov stos loop jge inc outsl or mov adc add and clc in les xchg dec cmp js xchg xor cmp xor out das and in or insb rolb push cmp aaa push and xor push daa dec mov jne je mov jg jmp xchg stos push out ds mov sub mov push sbb sahf xchg imul cmp jnp (bad) jb cmpsb mov jae add and jns and push adc bound stc xchg mov shl (bad) mov dec push repnz (bad) dec jg in shlb sub popa cmp shlb les jbe jmp test lods outsl mov sahf mov mov cmpsl cmpsb xlat inc jae inc (bad) lock or pop mov mov add pop push test and push lods outsl into jl mov cmpl (bad) call pop into pop adc jmp or imul dec cmpsb jo int inc lret jo jnp sub and push sahf popf xchg fldt fdivl xor out sub mov mov fnstcw sbb xchg sar push fild jae pop jmp je and push or outsb inc mov in sub mov xchg (bad) cmpsl pop daa insb push adc dec jne mov or shrl cli dec lea (bad) jge rclb cmp pop sbb adc adc push scas mov adc jg (bad) ljmp mov and out xor jno and jp jne mov shl mov dec cmp adc daa push arpl stos xchg test or (bad) mov xorps in jbe sub cs incl jno stos hlt (bad) add jle les mov stos cmp add stc shl sbb shl mov popf test fcom mov mov cmp and mov test mov sub dec sar shrb ficoml dec sbb es hlt cmp xchg jl aas lret and pop dec add or popa and imul jmp jnp dec lods mov mov imul cmp mov scas mov int3 xchg lds fsubrl mov out fstp mov mov jle lds mov adc mov mov dec push scas xchg jp fmul jns fwait adc nop add xchg mov lahf or rol imul lea repnz mov xchg and mov inc clc imul lds iret stos jns enter sub dec cmp xor adc loope movl stc data16 cli cld repz jne es adc (bad) mov stc jb fidivr data16 push mov adc fistl subb imul dec hlt mov daa das pop push les and pop ja data16 gs fidivrl iret imul in pop imul scas movsl sub mov jge mov je arpl pop adc pop nop stc addr16 out stos cmp xor mov push in daa sbb lcall jnp jmp mov lock jae cmp stc jne push adc xor outsl adc insb inc (bad) sbb ds jg xor subl shrl mov aaa lahf mov add add mov pusha jp sub push fstps dec dec jae cmp int3 xor repz mov rcl (bad) arpl sbb test cmp xor jae pop sbb jl cmc sti fstpl fidivr push mov movsb jns mov aad (bad) jno das push stos dec push pop push fstps cmovae fs cmp sub or (bad) popa push (bad) negl and and mov mov lret cmpsb movsl std push pop dec push mov adc xor dec dec push sbb gs jecxz push js jle rcll lds pop sub dec in arpl mov xchg test mov xorl add sub iret mov push jne lret mov or xchg aam mov xchg ret mov adc adc lret outsl dec xchg cmpsb cmp mov je lods adc push push push or int cmp sbbb js adc pop loope adc faddl dec (bad) jb out loope xchg lcall ret sbb mov (bad) into cmp stos xchg std (bad) mov mov mov xor jnp dec add in out pop cmc int cmc les js pop lods inc das jge xlat (bad) xchg dec clts dec mulb es dec fdivrs cmp movsb (bad) popa push jb inc rcll movsb mov push call stos jno inc fstpt pop cmp popa ljmp pusha xchg jmp xor xchg sbb aad mov int ljmp loop out sbbb imul sbb xchg lods sbb xchg inc test or ret sbb (bad) xor sub aaa int push push ret lret mov inc jl fnop bnd or push mov (bad) mov pop insl xor xchg bound push mov stos inc es dec imull popa and sarb push notb (bad) rcrb fistl aam je bound pusha outsb shll inc outsb mov scas test mov mov pop mov test mov mov sub fcom sbb jecxz aad movsb xor adc sti cmp repz and pop xor dec sbb insb mov lret and int3 and std mov ret lcall int and dec adc mov nop ret pop pop push and mov or pop lahf in pop sbb setno sub aam xor adc flds out fcomps testl mov imul push fprem1 lea cmp stos cltd out loop mov mov jecxz not mov push decl sbbl lods int3 (bad) pushf push (bad) loopne jae jne popf and inc repz jmp rcl je int3 insl jne mov or xchg pop lods sbb or jp push cli add test popa cld cmp mov leave imul fs or rcrb cmp sub shll loope push pop mov out inc or imul cmp jl mov xchg cmp cmc mov cmp pop pushf cmp jns out inc jo inc push sub xor mov push or insl leave push pushf data16 inc mov add adc cmp fstl subl repnz lahf mov sub and pusha jno mov jbe jmp icebp sub mov test jecxz mov sbb cmp mov fsts adc mov sub cmp sar popf incl pusha (bad) push add mov shll out or adc lcall jns cld or in in dec or orl lea sub leave or xchg mov fisttpl movsl jbe test (bad) fcoms bound aas ljmp rcll out fs icebp rcrb sbb pop imul mov adc imul push jo (bad) std and xchg pop fdivs mov repz jmp cmpsb mov iret push pop xor (bad) mov jbe jo,pt stos sti fsubs jbe dec pop pop push les ds popa xchg in fdivs gs lret adc pushf mov inc dec std int mov lods cmp xchg int3 fimul (bad) in (bad) repz hlt sbb and push (bad) jns jl subl push popa les xor xchg gs enter add lds into lods inc add jae movsb mov ss xor movsb (bad) call pop arpl lahf cmpsb (bad) leave cmc daa or out sub dec and xor roll test ja inc fnstcw loope imulb jle jle andl jecxz push stos jl out or push pop je add jne inc push out (bad) xchg pusha cmpsl pop xor clc ja lea dec and xchg mov into shlb (bad) sbb loopne icebp sbb mov xlat out popf xor loope push leave adc push push in repnz pop push movsb pusha mov dec lret mov iret lcall repnz adc cmp mov mov mov xor into pop dec cwtl cmp cmpsb fucom mov into insl bound arpl lahf jb and fnstsw mov outsl nop mov daa sarb dec repnz adcl xchg adc xor cld adc add push lea fldcw fwait jnp push pop (bad) jns mov dec in sti (bad) adc stos pop mov (bad) inc movsl call data16 repnz xor cltd test pop shr xor outsl decb mov test lock and inc in mov movsl ret or dec gs (bad) mov inc mov ds mov add cs ja mov cmc adc aad sub sbb pop fildl mov leave mov xlat stc adcb adc mov push ficomp ja and movsb adc das decb imul mov cwtl jle (bad) push cmp sti das inc (bad) jbe mov pop xor into jg mov xchg fistpll pop pushf cmpsl loopne xchg mov popf fadds inc xlat lods daa int3 jns and fwait mov dec cmp out test dec sbb aam cmc in aad movsl arpl lret nop aad jae sbb push push push lcall roll in mov mov imul xlat pop dec mov int3 rcll fstps jge pop push mov fild sbb lahf mov (bad) add bound or push cmp repnz es lock cmpsb or push adc rcrl or ss nop jmp add fistl and sub pop loopne jbe mov in in pop flds aam mov dec lahf mov fbstp pop and push push lock shr test addr16 lret pop add push ds stc ja xchg push not ja jp in mov xchg mov mov (bad) dec push inc xor gs insl sti pop icebp arpl or inc pop mov repz push stos in mov arpl scas xchg sub (bad) inc dec js (bad) xor mov xor sub pop ja sub sub inc mov pop mov sahf (bad) fistp imul out insl aad popf nop add push adc sbb mov mov adc repz xor or jo push adcl xor inc (bad) fcomps adcl push sub mov hlt imul rcrb add mov imul adc ret add into pop arpl outsl mov and sbb mov cmc ja fimull into jmp in xor jl addl sbb sti mov sub loope aad dec mov and fwait lods adc jle add int3 int3 int3 int3 int3 int3 ret ficomp cmc xor mov je xchg rep mov add sub dec jno popa sbb (bad) mov insb xchg xor addr16 out cli and pop dec inc test jecxz ret add (bad) cs aaa mov sbb mov dec push cmp inc adc cld jne or xchg movsb dec roll out sti xor ljmp xlat lock jne push fdivs scas add jo cltd jne movsl pop jg add jns ds cmp jl push fdivs inc sbb roll (bad) std in adc je and and xorl rorb and jge push sub jns fucomp pop outsl push subl cmp mov les rolb push rcrl jae mov pop (bad) sbb xor loope aas fstpl pop mov (bad) repnz xchg mov popa add sub mov pop jmp sbb (bad) jp sbb sbb ja scas jne push dec mov popf iret int aaa loopne fmul scas popf lock mov ret inc sbbl imul add daa inc mov jo push jmp push scas insb adc and out movsl mov mov mov int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 ja dec outsb aas jb loop (bad) ds mov bound dec nop lods pop jge xchg outsb jle bound aas add xor mov mov sub jl (bad) iret and hlt or or sar mov pop (bad) xchg add xchg ljmp cmpsb fsubs and sub jb inc insl sub xchg sahf mov jmp xlat jecxz dec ret out jne inc xchg jmp fdivl pop loop fiaddl mov sti cmpsl xchg mov rclb mov push int3 cmp mov outsl sti stos movsb push imulb and jnp ret sub xor pusha push mov push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor (bad) mov lea enter cmp shrl fcmove adc js (bad) sub mov mov jg sub push imul jne xchg jg dec loope sbb stos dec outsl or pushf cmp out or dec cmp scas xchg fcmovnbe repnz mov fstps lods push cmpsl xor arpl cltd (bad) fmuls mov inc sbb lock xchg pop rorb rcrl sahf adc push push loope inc push scas xchg mov lret dec data16 jns xor dec xor aad loopne dec push dec xchg and xchg out movsb sbb gs dec pop (bad) pop adc or adc lret xor jns ret add xor (bad) pop call cmp cs mov roll lcall in push outsl cmpsb mov mov xor loopne add xchg outsl sbb dec sarb mulb push push jno cwtl ss jmp nop int decb hlt hlt xchg aam imulb or mov cmp jnp mov (bad) cmp xor xlat (bad) adc mov pop insb (bad) xchg out or mov inc xor and mov mov pusha push stos (bad) mov daa jmp mov inc cmp lea cli mov (bad) daa push or pop test pop dec sahf xor dec add loop lcall sarl add push jae mov add jae xchg mov adc inc ffree mov repz movsb in mov inc ljmp or xchg xchg movsl inc fstl shr push testl pushf push arpl mov or stos stos adc aad cmp pushf mov sbb mov mov sbb and (bad) dec shll jne pop cltd sub jg jecxz push push (bad) (bad) sub xchg popl stc mov ret inc sub jl or fwait shrl jbe jae pop jmp cmp dec adc inc push xor sub adc ja ljmp sti insb sub mov cmp sarb pop cmpl in pop das (bad) mov ficom xchg or cli mov dec int int3 (bad) xor sbb mov in int3 lods and mov notl mov into push xor push cmp push xchg sub insb test dec and dec mov pop mov adc (bad) cmpsl aad and jp or xor sbb pop aam dec xor arpl (bad) add fninit arpl fistpll es (bad) xor xchg mov idivl jns aam adc in jo cmp ret push int3 stos dec (bad) cmp and test les int3 idivl cld inc jbe mov lods pop jb stos fistp mov dec add ret sahf xchg mov add push shll xchg pop arpl push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 ret and xchg mov jl in das inc or jnp enter xchg scas jne daa push jp jne iret mov push add jae inc jl xchg xor adc insb push sbb repnz (bad) mov adc stos sbb jle icebp adc (bad) iret inc in mov mov hlt outsl dec push or or jl push mov jecxz ja xchg sbb inc jne cmpsl cmpsb cwtl fcoms pop fnop in stos xor push push mov outsb mov leave cwtl mov or daa jge jae jo mov dec xor (bad) jecxz fistp mov scas es fildll add adc cwtl es dec cmp xor ljmp xchg mov jo sbb rep shlb push xchg push adc test dec push inc push mov xor in popf gs out inc cwtl sub push push cltd pop cltd sub imul sbb enter push mov repz cmp sub dec adc test pop jecxz lods push and lds iret jnp sbb jge or enter inc mov jbe loopne inc mov xor pop js mov sub inc jb gs push mov cld inc int add xchg adc adc test mov add in pusha adc test (bad) jg cltd pop jns stos (bad) push test aam mov fmul mov mov sahf push pop shll dec pushf mov clc jmp shrl inc outsl mov je mov sahf dec sbb subb insl mov mov ds in cmp mov cmp xchg add xchg push gs aad cmp popf jo dec xor addl outsb repnz mov mov aaa mov xor mov cld or sbb rcrb dec push insb mov pop sarb sbb popf or cmp push xor jb lock bndstx fwait xchg jmp xorb js in pop inc into jmp adc xchg and insl fwait jmp scas mov jecxz dec andl jge jns fsubs and mov mov dec jbe out icebp loope fistpl (bad) mov cltd push orb std jge pop adc pop xorl xor push sub lods push xor inc loop iret mov push dec imul inc mov (bad) and xor pop cmc push popf fcomps movsl insb sahf sub add loop mov scas addl sub inc and sub xchg pop jecxz sub ucomiss popf mov dec push push gs pop jl dec mov orl das jae dec or and push jmp (bad) in dec int3 test divb insb (bad) aad cmp and push loope iret (bad) iret dec sar jle sbb (bad) test pop push pusha mov call leave sub in mov inc or xchg imul mov lods sub fildl lret add es jb inc shlb (bad) (bad) nop lods lcall sbb aad add rcrb mov jmp (bad) lcall sbb lret lret sahf adc sbb push mov mov incl lret ja xchg mov stos jno out rdmsr fldt adc jne push mov push jnp inc mov scas push or xchg cmpsb arpl fidivl inc lret mov mov push push out in sbb xor mov sti mov mov sbb imul pop (bad) ss cltd (bad) int daa cld stc adc dec jl adcl in (bad) dec push cmpsb mov lret cli jmp insb data16 mov mov popa or cmp dec loopne shl mov jecxz adc (bad) inc sbb sbb mov sub jbe out push jl mov into cltd outsb sbb cmpsb fstp and cmp add test ds pop cmpb and add sbb mov sbb sahf (bad) push nop ds jae push insb rcrb xor xchg aad repnz lods ja gs fsubrp in or push pop rcrb jb jle mov and push jle adc aas stos pop aam in push cs mov mov mov cmp ljmp bswap aaa jbe dec xor inc push loop stc mov xchg xchg mov cmp push rol xchg push repnz (bad) xchg inc test xor pushl sbb and and add jp xor mov popf rclb inc xor jge str jl mov and in and push add or cmp inc aaa dec fidivl mov sub gs fwait lods add xor arpl aam aad ja ret dec xchg ret mov ss lods lahf push lret pop cwtl notb scas lods nop aas mov fsubrs cli jnp fiadd xchg jle xchg jb movsl imul mov movsl insl scas shrl jo ret push fwait and mov mov jle jb daa mov mov pop xor lods ror ficom mov pop mov inc and mov mov in and into test fadds (bad) in fcompl orl iret std mov push xor sahf shrl push lods fnop jecxz push inc mov int rorb jg or sub xchg pusha jg lret xor inc jns pop loope addb or cmp sub fcmovnu int3 sbb subl xlat mov push rclb ficom das cwtl pop adc es jp sub movl sbb lods dec test xchg in fs (bad) gs hlt xor sahf addr16 dec jbe (bad) xor inc add mov in add mov aaa es orl test pop add pusha xchg mov pop xor adc pop mov jg cmc imul sbb pop mov adc loope scas xor fnsave dec cmpsb repz scas fisubl loopne mov lret inc movsl mull push mov jmp inc push aas xor je hlt in lcall popf push sub ret cld jns cmpsb sub sub aam daa imul icebp std mov pop push jb fsubrs aaa testl fistpl subb jae sbb leave and rol xchg sub test lahf and dec push mul (bad) sub popf cmp outsl pop je jne testl mov inc loopne jo xor ljmp movsl xchg xchg pop mov out push sub movb pop inc mov icebp or push fcmovbe jnp insb push ja (bad) in ss sbb jae out fs jb push lcall stos cmc lea lods add andl ffree push adc popa inc call les (bad) repz xchg ficomp inc es scas mov push mov xorb mov or jg jno repnz shl lods aaa into imul pushf inc mov shl xor push in pushf pop inc call in inc xor inc sti pop iret mov sub out cmp inc mov sti std push int3 jp sub loope scas in mov mov loope pop xor xchg jae pop adc sti addr16 sti add fwait push cmp add std (bad) lret aas add cld sbb in inc loopne out je inc add adc jl xor push push xchg jo xchg mov and mov jnp mov sub mov out inc add decb jmp or insb std aad mov lahf jmp cmpsb fist pusha call adc push icebp stc cmpsb ret insb in sbb mov jb hlt mov mov jo push mov rcrb push mov add jo gs pop dec push xchg push in xchg sahf push push dec aaa in jne adc das insl stos dec into (bad) sbb cmp xchg push mov add sahf loope arpl movsl push lods and push int mov jp jne outsl add or cwtl jg cmp movsl popa insl mov lret test push add inc mov inc jno mov sti jo imul rcl pop movsl dec jg dec les sbb movsb sub mov sbb out xchg sbb lock push mov fdivr push fprem1 xchg int jnp and mov fldcw (bad) sti and lock add fisttpl jle push shlb xor push ss inc mov (bad) (bad) cli stos pop pop test mov mov mov jb sub xor popa lahf js cmp addl hlt scas jmp cmp xlat cmp in int xchg bound add inc mov cmp pusha xor sub jbe jle mov add or daa out add lret movsl lahf testl sbb jne les mov mov fiaddl fistpll lea daa jbe dec inc mov fisttpl cmpsb dec aas xlat push fwait mov ljmp mov push adc xlat (bad) mov inc sti pusha bound add lret pop int3 xchg movsl scas jns repz in (bad) mov dec xchg je hlt stos add add stos jns mov or lea mov push mov sahf mulb dec fidivl adc cmc adc jg xor mov add es jmp (bad) shrb adc mov (bad) mov cwtl mov jns sub (bad) je imul xchg (bad) in (bad) cs movsl sub cmp movl (bad) repnz cltd mov out lret sbb dec sbb pop mov xlat es pop (bad) std and lahf pop cmp js lock pop pop sub pop stc movsb jmp mov sub mov mov (bad) mov push scas add sbb dec jp push cs dec jmp xor mov adc mov mov cmp out adc push in cltd bnd xchg int mov jg hlt in jl jbe pop dec push insb sub cmp aam fsubl test cld repz add daa xchg notl xor sahf cmp push mov mov mov xchg inc mov mov loopne stc or sub mov cmp inc std ret scas clc jbe test cs jns cli xlat insl dec push mov xchg shrl add xchg movsb xor jb and mov jmp cltd data16 mov xor sbb dec cmpsl out push and inc loop or mov dec cli xchg adc hlt outsl lods imul (bad) in lds arpl adc dec pop test inc push mov out cmp fs xchg mov or xor and aam loopne push sub push out (bad) (bad) repz or push push xchg jo nop dec ret xchg cmc cltd dec jnp mov sbb pop int3 mov jl add (bad) adc in add inc addr16 xor js gs cmp movsl shrb aaa jg inc icebp add outsb lret scas dec or repnz dec mov stc jno push mov push or popa arpl cmp jnp hlt mov les dec push movsl jp dec mov stos push addr16 sbb xchg inc or mov jg inc mov pop inc jnp ret pop cli or fmulp mov outsb iret pusha lahf fs pop gs pop xchg fistpll nop ficom les cmpsb movl or imul mov mov (bad) mov sub mov inc into cmc imul xchg js cmpsb jae jge mov (bad) test addr16 pop outsl pop pushf push push cmp mov mov inc test insb ror jns lods stos add jae xchg nop dec jb mov lods (bad) fcoms lcall insb push jae mov pop mov fsub call divb pop lahf jbe repnz pusha push push jb push or xchg cld pop mov shrl imul sbb mov sbb fildl pop pop inc out jns fsubrs outsl js repnz jle or into (bad) repz xchg mulps cmc adcb inc sbb sbb (bad) bound ffree stos (bad) mov lahf fistl int sahf push shlb pop add add dec insl or add dec adc pop add scas outsb jge jmp je mov mov outsl mov dec cmp outsl mov inc mov cs loope loop sbb jmp cmp dec jns (bad) xor fadd ja mov sbbb cmpsb xor xchg bound mov jg cmpsb and dec cmp (bad) push dec dec and xor lock push pusha ret (bad) scas ja test and jnp out mov notl cmp into ret lds fimul push push mov aad mov (bad) adc pop repz xchg ret je es ret pop (bad) push adc ds pop out add or out ficoml jmp leave add xchg push or pop add dec and pop adc mov les and add repnz in fcmovb and ret sbb addr16 das mov inc shll rorl mov mov xchg dec push std add dec das mov lock out mov or cmp mov push (bad) int3 jle cwtl lret xor or dec loop rcll in lods xchg jbe jae xchg mov imul or je loopne xchg mov cmpsl jl aas jecxz ret mov mov scas or in test xor ds push dec std dec mov xor mov push sti js push mov inc inc pop jb xchg mov sub cmpsb push jbe cmp ret jae jl ret lcall mov js imul xchg cmp cmp enter xchg xchg in lret (bad) pop mov mov add add ss push adc into sbbb (bad) adc pop daa (bad) push sbb out out add les (bad) stos cmp int or pusha sbb into rcll popf jae jp cmp push push xor scas (bad) cmp push inc mov cmp jl leave pushaw add dec jge aad mov push stos dec push pop push fstps movl inc js cltd in enter (bad) popa push fdiv sbb and mov mov fs xor outsb lock cltd stos out fcoml add xchg add add jmp sub pop jp bound sbb cld jnp jg xor jl in imull inc sbb xchg inc push stos inc push dec push sar sarb fwait (bad) lods int3 push aaa (bad) loop mov cmp adc mov in adc inc add enter fistp dec mov je mov aas sbb push mov mov or adc popf fistp aad adc rol push int3 xchg in out mov fstps fstl cltd aaa dec test mov adc sti pop lods jp and and and xchg jnp or test test add pop aam mov or cmpsl sub push dec and popf es (bad) or mov jno (bad) mov insb or pusha cmp mov gs push inc (bad) ja stc push divl or (bad) xchg dec inc jge clc jecxz or dec inc sarb or mov fadds pop popf push push jo xor cmc sbb mov inc mov cwtl push jle xchg and lret aaa hlt sub data16 cs addr16 jnp fisttpll jns or repz (bad) (bad) pop sahf jp js lret xor jmp mov push insb jbe loope imul js enter fist insl sub das and lret aam andb fisubl rorb bnd (bad) insb mov lods add mov int (bad) and loope ret adc test movsb cwtl mov sub jnp push add test stc or or push lcall and dec dec sub xor dec xchg adc int3 adc xchg lods mov data16 push bound lock jmp in cli mov mov sbb jns xchg cmp dec mov and movsb aad lea in cmp outsb or xor ret stos mov fwait xor xchg cmp push inc lcall ret cmpsl push or in push pop mov dec mov cmp ljmp fildl stos xchg mov jmp int out outsl dec cmp inc addr16 cmpl fimull mov js pop test and xor cmp mov xchg jp jae sahf xor ss lret xchg jae jp or fsubs (bad) mov imul or sbb test push sahf mov idiv lods inc ret mov in iret lods in add cmpsb fistpll stos sbb jno push ret push (bad) in sub rcll nop cmp ja jno leave add add stc ret repnz lods (bad) pop adc into ljmp mov repnz leave movsb push shll ja add std sub mov inc int3 push inc bound std mov mov fs pop cmpsl mov rclb jno sub jle popf (bad) push add adc movb cmpsb cmp pop (bad) cmpl mov jns pushf lahf jmp pushf out adc mov and aaa xor mov fxch pusha xor and add mov cmp mov sbb lahf sbb fidiv jecxz shr adc fcmovnu clc xchg inc mov int3 dec data16 daa lcall loope bound popf out movsl insb call in out jp cmc les xor mov movsb stos fcompl in mov push ds insb or scas jo scas nop (bad) (bad) repnz sbb jno or fistpl jo add sub mov or das mov es data16 xchg iret push clc loopne and mov dec loopne jmp mov jg popf sub repz jne push movd lea push jp xlat int3 inc (bad) fxch das sub and cmp rcll cmp cwtl mov jmp adc cmp and outsb sub sbb lcall fcomps add or ret inc in aam pushf mov ja xchg lahf cltd ss data16 push adc sar dec fstpl outsl cmpsl aad outsb mov fs stc mov inc out fidivl mov stos cmc xchg fbld pushf bound aad insb outsl js xor xor mov inc push xchg pop lcall (bad) xchg push loopne lret sbb fisubrl sbb (bad) jnp xor addr16 movsb push lret mov into inc (bad) mov mov test int push pushf arpl pop gs and pop push cmp es push jae stos loope push jns stc ljmp sbb pcmpgtb pop lds dec leave dec cltd cmp mov pop jmp lret xchg jae popf pop fwait push rorl aaa add popa jne cmp cld pop sbb xchg rclb leave nop mov (bad) sub xchg sbb pusha ror adc inc cmp sti rorb cltd cmpsl out ja cs in out cld xchg fisubr xor pop mov fstl mov sbb add mull and stos cltd cmp add (bad) sbb setp pop pop loopne xor fwait in in or mov loopne pop cmc loopne imul inc cmp push in mov jp push ret cltd fistp push fildl rcr cs std outsb cmpsl addr16 sti insb jns xchg repnz into mov cmp loop mov mov dec sahf das nop jge out lods fdivp lcall pop mov leave cmc int3 popa mov (bad) jl push add mov pop aas pop cmp repz ljmp mov bound xor sti xor sti or inc xchg jnp cmpsl nop inc push (bad) gs mov xor in (bad) fdivrl repnz pop pop pop clc jmp lods sbb or pushf test cmp adc cli add (bad) sbb mov and and push inc int add cwtl xor or aad and inc shrb sarb sbb loop std push lahf dec mov add (bad) mov xchg xchg pop jmp (bad) sub jno hlt out repnz push loopne,pn pusha test or lea mov adc sub sti movsb jl dec xor aas pop test call inc orl sbb pop cmp lock ret cwtl jae test int3 xor cmpsl mov lea sbb nop adc jg adc jns movsb sbb cld mov js sub dec xchg mov push fistl jl xchg or repz les pop sub xchg addr16 sub popf shrb push and mov add xchg js sub mov rorb xchg jp int cld mov (bad) aad mov or xor sar in aas add cwtl test mov je or rorl mov lods sbb xchg jle repnz addr16 loope lea jecxz and cmp or sarb pop jnp test cltd mov out dec (bad) ja dec pop in push sbb sbb xor or dec push and push pushf pop xchg jle inc scas int and outsb (bad) sbb xchg and bound pop mov addr16 jo rcr insl hlt lock pop sbb test stc out les dec mov mov add xor inc stos repnz test jb insb push stos addl add shr es xchg mov push sub sub stos jle fdivrp (bad) flds into out mov cli hlt in dec jg loopne fdivl and mov lds rcr inc cmp mov daa jnp dec ss iret (bad) jmp pop fcoml lds inc jecxz dec xchg add adc es shrb mov ret stos pusha repz sbb add add jmp mov es repnz (bad) in jmp test outsl negb dec insb or ret push scas test out dec pop jmp aam mov ds mov ret and xor push xchg xchg cmpsb fmuls shll sub (bad) popa mov arpl xor and rcrl rcrl inc pop stos push nop mov fdivr mov inc cwtl inc push mov xor add mov mov adc jns in mov jns jbe cmpsb ja jg aaa add popf data16 (bad) xor (bad) mov in pop das mov cmpsb fs leave jnp insb fnsave test mov subb fild xchg dec (bad) notb sbb jge mov xchg jbe loop into aam in cltd push jae loope mov dec push mov push icebp adc inc adc and xlat add mov out inc fmull jnp jmp jmp dec sbb clc adc je mov ret mov ja or out pushf out scas jl and and and and jecxz nop in cld mov add xor je jo ja cmpl or push jle pop out scas xchg cltd push pop out js sub pushf cmp scas add inc push push dec add mov cwtl sbbl and ffreep iret xchg sbb push rcl adc imul inc cmp lock pop inc pop lahf push or or mov xchg and rcrl rorb dec dec or or mov add shrb sbb cwtl js or lock push nop in xchg lcall sub push orl leave or loope push xchg aaa jo mov imul inc adc out mov cmp sub jg insb adc push test push jnp es mov mov sbb dec inc ljmp xchg or in adc mov lds push or lahf adc dec fmuls mov jno int syscall icebp addr16 fsubs pushw adc cmpsl repnz popf cld cld std mov iret inc lahf lock mov cmpsl (bad) dec inc add int cmp orl xchg inc (bad) or das push inc popf test xchg pop push cmp out jle mov stos push stc sbb fiaddl or in lds icebp ret and jg data16 and rorl push btc cmp jl jbe or hlt sub xchg repz loopne ffreep addl (bad) mov dec mov out shll insb or push xor lods addb stos push loopne add cmp (bad) dec arpl xchg xlat cmpsl daa xchg cli imul nop imul mul push aaa jo xchg pop jle mov mov (bad) xchg pop cmp scas (bad) fldcw fwait cli je loopne xchg mov inc mov cld push outsl push repz sti loop movsl xchg push xchg jle mov dec sahf push sub ja pop movsb fs fdivs and cmp orb mov scas ret dec popf popf cli das aad lods leave and mov outsb dec sbb xchg cmp adc mov cmp mov loopne or jg arpl pop push push sub stos jne loop mov subb dec cmp cmpsl and cltd pop inc mov into jg cmpsb ret faddl add insb inc add std stos aaa add mov repz dec cmp int3 sub cld ret (bad) push dec push inc cmp fldt into mov inc mov fadds in fdivrs push sti adc sbb les outsb test sub jg call xorl mov lds and inc cmp out jnp mov gs dec adc mov and ja adc shrb mov add jge sbb ret aam mov or imul (bad) loop mov ret test sbb inc loop dec loope out pop in insb cmp sbb mov or nop call add aam cmp in or cmpsl pop aaa pop or jns ret mov iret lds sbb icebp (bad) lret push pop xchg das xor gs sbbl push adc loop and mov scas inc fdivrs mov aam movl mov jno pop je movsb xchg int3 sbb movsb adc loopne mov or lret mov repnz sbb cmp gs adc sub cmc sbb mov push jmp loop lcall lods loop xor stos pop out and mov mov aad test repz test or (bad) jmp inc adc sahf les aaa ss rol outsb sbb aaa enter mov inc test nop pop jmp clc jecxz xchg add in mov jb xchg fwait (bad) out jg and sbb imul std adc dec movl mov mov xchg and icebp call loope mov test dec enter (bad) push (bad) fs leave sub (bad) push addr16 (bad) stos xchg icebp add cmp jae xchg sar repnz mov cmc sbb scas or loopne cli pop cmp pop jge lcall xchg or add mov jns jnp inc dec sbb mov and es test (bad) aas jnp dec and add nop sbb test pop mov push loopne (bad) mov mov inc mov and xor popa jnp out push push pop jo out outsb mov pop dec aaa or pop outsl insl cwtl and and std jnp or or fldl push xchg es mov dec jno sub repnz scas jle mov cmpb adc lcall icebp dec fcomps push dec idivb lret push jmp jle inc pop pop lock pop es xchg scas jp mov mov sbb jo dec xor mov push dec cmp push loopne jo (bad) test sub imul je stos lret sbb sbb jp push in je mov into enter jmp insb jns jp stos pop movsl lahf lods or inc xchg nop (bad) lret test rcrl inc sarl aas cmpsb push ja (bad) lret jb push fistl adc lea and push pop sub xchg popa ret fcoml sti mov mov test (bad) pop ja mov jo (bad) scas jge push test sbb (bad) addr16 aas test jl mov pop ror inc sub pop scas out daa push xchg and add adc and sub push cmpsl add or fdivrl in adc mov clc cmp leave or inc repnz lds fadd jae aaa adc mov das rcl mov imul jg ret sbb iret dec mov pop dec and add and push dec int sub add inc pushf icebp addr16 xor push jmp lock jmp (bad) mov push loope and mov pop sub aad pop lret fstl jge jg jmp cmp int3 fdivr inc ds (bad) adc xor jns jb jmp out cmpsb push mov test in dec das bound aas and enter and or lock xor ja mov int3 pop xchg or cwtl push inc outsb lret (bad) popa insb xor fs call in imul shlb loop insl out cmp fistp (bad) mulb cld cltd mov inc daa iret and arpl push adc cmp insb fcoms sti ficoml sbb stos cmp sarb sbb mov push scas pop inc jae rcrl mov jnp (bad) jb scas lock push and xlat inc jmp add int dec add adc xchg rcrb jb,pt popf aad fs cmp aas jne pop jecxz je add adc push in mov push out iret cmp mov push (bad) movaps and add movsb sbb dec inc cmp cmpsl push sub or loop sar xchg in or xchg jecxz push mov std and (bad) mov (bad) and loop or arpl add mov loope in inc lret cmpsb fs and xchg std fcmovnb mov and mov fistp pop cs jl ljmp cli (bad) mov stc dec sub das mov les inc cmc cmc push sub popa and xchg jle out (bad) bnd lahf push clc mov loope fxch or or mov popf call int shl and add data16 (bad) cmc dec jmp mov mov push cmp jne push imul mov mov push fdivs (bad) fwait scas fdivs jp push xor rcl inc pop mov inc push push (bad) out jo cmc mov repz dec cmpsb pop cmc das sub xchg and xor mov fsubrs cli insl idivl loope cmp dec or xlat jg sbb aas mov cltd out (bad) push push in cmp xchg cmp cmp mov divb sub xchg loopne push lcall pop loope (bad) mov sti cmp jg rcrb inc adc ret mov inc pop fild add mov repz pop pop jns sbb subb mov lods or mov rolb popa pop inc out adc jl cmp ss xor cmp repz add aad inc mov push je notl (bad) divl daa iret mov arpl sti push xor pushf pop push lds stos jle sahf cmp jno clc scas leave std movsl ljmp js (bad) fdiv sti pop movsl aad push push cmp (bad) movl sbb jecxz cs sbb mov sub loopne jecxz loopne loope popf pop xor lret pushf push pop mov cltd cmp sti aad rclb scas loope adc or inc cmc test ds add cmp pop mov subl leave xor mov add cli fwait push or lods pop cli das (bad) xor imul pop pop hlt js jns push push push xchg nop or sti nop or fsubl jbe and pop adc xchg or or fcmovu lahf enter mov (bad) jle shll pop lret push mov xor xor ljmp pop or mov push ficomp mov dec jle xchg pop xchg add mov hlt aas pusha jge hlt jo add xor rcrl pop data16 add pop dec in into jnp mov outsb jl pop std sbb sbb or int3 or add mov dec inc sub imulb loope (bad) xlat popf mov jmp test in add cmpsb push cld mov movsl in push push sarl jp iret mov pop sub lods or ds mov rol pushf imul xor fildll cmp mov cmc jbe sbb xchg xchg jp or out pop mov cmc and pushf fsubs insb fistpll cmp push (bad) cwtl imul popf movsl ret adc fidiv push mov adc xchg or int sbb inc test fnop mov (bad) xchg xor mov pop jo aam mov imul dec jnp outsb pop jae jg sti mov xor (bad) lods dec mov add in clc popf and jne sub cmp gs je jae jle cmp xchg add test mov loop cwtl sub pop and cmp scas insl sbb mov inc sbb push fimull add pop sub adc jns rcrb fmuls lcall inc pop aam dec mov mov cs sbb or cmpsb mov subb loope (bad) dec dec push movsb lods mov insb ja xchg jns dec mov mov sbb (bad) mov inc out (bad) gs sbb push jp daa sub lea mov test or lock xchg xor mov repnz test jnp aad outsl fadd push jns fidiv adc mov mov pop psubsw dec cmpsb or gs or cmpsl rclb pop dec scas ss out pop out sbb mov outsb adc sbb mov and test dec call mov test andl pop xchg les cmc adc cwtl addr16 adc je xchg mov push add pop jge mov pop icebp ja and mov mov int mov call in xlat cmc (bad) fidivl test jne xor test pusha xor pop xchg sbb and inc adc mov int xor je cmp ss (bad) pop jmp mov mov popf jbe in movsl jb adc sub xor inc scas jl call xchg inc or popf (bad) and sub cltd sahf movsl mov jae sub (bad) jo pop js pop je or sbb das fdiv fsubrl xor mov push mov cmp pop bound aaa or rolb jo cs or aaa dec lcall loopne dec imul adc dec mov jo fdivrl dec mov fs dec out pusha cld inc imul cwtl js push mov and push jge sub dec mov fmuls test xlat (bad) je pop sbb clc push cmp out mov icebp ret in and mov lods out jae mov enter or repz dec das and and into dec mov inc das jg,pt scas or test push inc outsb xchg ret cmpsl and or xchg pop xchg rcr inc mov dec enter (bad) lds and insl cmp add lods xchg xchg js cmp jmp sbb ja adc mov cwtl push lcall hlt pop or sbb xor mov cwtl arpl jno pop out test inc xor outsl inc jp add xchg mov lret popf sti imul (bad) push into jl cmc lds imull sarb add mov (bad) je jl (bad) cltd inc test lock out das test cmp cmp or jnp pop jae dec daa jmp lods push cmc stos push push sub mov movsl push (bad) pop lock cmp mov (bad) mov test lock xchg ljmp and mov scas cld lods test inc mov rcll ljmp sub popa faddl push dec push xchg push fbstp inc adc and dec xchg adc xchg sub mov enter (bad) out ss add xchg xchg loope inc adc jne jecxz mov nop cmp xchg imul fidivr test ja pusha pop ljmp mov pop pop lock push shrl or rcll adc insl push sub jg push data16 insb out mov push and dec das pop mov inc sub loope lock mov jecxz mov or daa bound push mov jecxz int cmp mov mov lods sahf xchg sti adc mov (bad) negb clc fsubs ja sub dec (bad) lret leave cld and cmpsl fucomp stc and in gs mov cwtl jle jnp adc adc test jmp and lods (bad) and inc push enter loope outsl stos cmc pop test (bad) bound int3 les and ret mov loopne mov stos adc arpl cs xor mov sbb pusha (bad) pushf push cmp push adc add movsb shlb lcall (bad) jg aad adc cmp cmp push jo dec das sti lret mov popf xchg xchg loop inc call inc push ja cltd jb mov push push or test aad outsb push das xchg mov orb sbb mov xor xchg test push mov loope lds dec xchg cli jo adc jb rclb addr16 iret mov pop (bad) push hlt adc mov lods lock push xchg mov inc fmuls gs (bad) rcll sub pop in or or xor add int3 mov mov push push test clc lea call add cmp or push lret hlt mov das push rclb xchg mov xchg test xchg data16 xchg cmc or sbb dec out pop das mov arpl and jg out and rorb push in dec mov pop lret cmpsb sub xor icebp cld andl insl ds mov fsubs ret mov xlat pop pop xor das (bad) xor push (bad) jb cltd cmp loope cmp popf sbb les int3 test fist adc fsubl mov test push cmp int3 aaa test sbb fwait push ret repnz xor dec mov imul mov mov dec shrl jg pmulhuw js scas sarb cmpsl cltd xchg fst out add test pop incl (bad) cmp ja jg lds sub scas and (bad) sbb (bad) xorl (bad) fnop dec cmp lock mov or inc aad in (bad) out sub mov jle,pt mov sbb add xchg adc pop add push or xor lahf cmp jmp sbb fcmovnb jp and mov mov aam xor lcall sbb cli push dec sub je mov push in rcll pop popf or dec cmpsl (bad) adc jmp xor pop ss adc push mov pop es jb mov packssdw jns and fs and mov lds dec xchg and insl nop cmp dec inc pop fucomp jl mov and mov xor jae jl pushf lret aas sub mov movsl in outsl aam call mov mov pop add or cmp mov fstp stos cmp dec aaa mov popa lds or xchg in (bad) or and mov add sub add movsb flds sbb mov dec add loope ficompl ficom jmp les push dec mov mov jle or in mov js push iret icebp pop in out or divb pop xchg xor (bad) jne enter mov lods fsubrs fisubr imull ja inc ret jg imul sbb mov sahf push test jge dec jp sbb pop arpl test jge dec icebp mov cmpl pop and jne orl xchg xor sbbb xchg dec and mov dec cld mov mov cwtl mov ret add adc stos int3 clc test out sbb fadds pop push cmp sahf and xchg bound outsb shrb xor test cmpsl aad pop int es cmp stos cmpsl rorl mov xorb mov js pop ss pop dec jnp rorb out adc test fmul ljmp hlt inc ret int3 movsl sub push int adc fdivrs int3 add xor adc fmul lcall sub jns aam jmp sarb dec inc push shlb jne push inc xlat xchg in mov xor fninit xchg cmpsl xchg add fimull insb push insl jno pop sbb jbe test sbb mov addr16 bnd mov dec cmpb lret or pushf xchg mov mov sbbb cmp dec fs push lds mov repz (bad) xchg dec mov repnz inc out or xchg jbe xchg inc mov adc test jge inc cmp in out add arpl movsl mov push out mov loopne dec mov and and add movsl adc std (bad) movsl aaa push cmpsl in leave (bad) push imul xor pushf adc mov cmpsl mov adc inc push (bad) mov lods loop jnp dec add sub adc cmpsl (bad) out sub jb cld mov pop jno hlt outsl push xchg add xor out imul sbb push xchg or shrl mov outsl sar fstps mov rcrl add jmp add cmc lcall and mov out je mov out xchg ljmp call (bad) mov dec clc call push ss test in nop ljmp movsb hlt fist and mov push sahf loop rclb shrl loopne dec fidivrl jmp dec xchg inc sub sub fisubr std xchg call dec sub adc ret negb push cmp xor xchg ss xor popa xor push int3 dec fnstsw inc in ds add daa xchg inc mov push jbe bound mov xchg mov sarb dec repz jbe inc popf jl add inc test or adc mov fwait mov sbb pop (bad) aad (bad) sub mov pop mov jae inc stos add xor dec (bad) out cs sti adc dec jo pop cmp cwtl mov ret xor lahf dec dec lcall dec mov mov loopne (bad) pop xchg add sti push cmpl fsub or sub test les mov les dec xor pop icebp xchg jmp out xchg shrb faddl inc cmp cmp mov adc hlt iret imul jmp shll (bad) in jecxz jb pop in imul sub xchg loope inc gs (bad) lret cmp addr16 cli mov pop adc ljmp xchg lods and dec dec notl das in lock loop mov mov add dec push in mov cmp sub int lahf push ss dec adc icebp jns mov push and aaa repnz sub mov pop sti orb cwtl loope lods sbb dec ret movsl fs adc aaa pushf xchg ret mov pop and (bad) xchg dec in and xlat fnsave mov mov adc jge lock or in inc sub sbb sbb cmp addr16 push inc pusha fdivrs test sbb cmp out inc mov inc push outsl stc pop jnp mov bound div ffree insb lds jnp xor jecxz lret ds xchg inc lock (bad) and out sub je sbb fmuls adc push inc fwait int3 andl int3 fisttpll inc dec push jbe fcompl xor loopne pop dec jg stos inc jecxz dec stos lods sti xchg mov push (bad) scas psubd adc cmp ret (bad) push leave cmp inc sub mov jne loopne lds mov daa test rcl push (bad) hlt cmp stos and cwtl mov out jmp and push icebp idivl dec cmpsb push sbb xchg flds xor clc rolb movsl stos jo push rclb cmp cld ljmp ret pushf push loopne hlt xchg mov cmp mov sbb mov xor xchg mov bound les faddp inc mov in int3 mov repz inc mov sub loopne movsb or mov ss adcl movsl insl mov in add sbb je imul pop cwtl and enter cmp int3 lahf cmp jbe in test push iret (bad) call repz xchg adc outsl cmp pop ret in mov mov mov mov cli mov xchg push inc jg mov fnstsw stos popf add jo addr16 std mov xchg jecxz and ljmp stos mov jle aam push out pop outsl mov mov sub push inc (bad) cmc les arpl rcll loop jge bound xchg pop es out imul fsubrs aad cltd daa and loopne cmp push push test test mov pusha adc inc leave xchg inc je jmp fidiv sbb loope adc subb mov (bad) sbb ds dec xchg pop iret dec dec pop (bad) lahf sub fwait lcall xor xor arpl daa mov fbstp lahf pop push xor imul sbb dec mov pusha (bad) aam fistpll arpl out hlt mov std pop (bad) pop fstpl push movsb leave push jns test push adc mov repz popf faddp bound ja mov sarl mov lret mov (bad) dec call fstpl cmpsb and or sahf movsl cs lea cmpsl sbb sub dec sub outsb push mov cmp and stos mov inc sub cmpsl cmp into push and mov mov pop push jecxz jbe or xchg dec shrb push push stc data16 insb lcall cmp adc shl nop mov in into nop addr16 mov insl lods dec mov int3 sti push cmp mov cvtpi2ps lock js jbe add loope xchg inc stc and sub push and or jno or test xchg or rcr inc (bad) sbb dec mov (bad) insb jp pop pushf sub push jmp jmp jnp hlt into mov call (bad) addb (bad) xchg jo test rclb pop loop fist aaa cmp jmp add mov out fistpll fistpll fs push (bad) inc lock jg outsb xor cmp iret aad out int shrl ss xchg xor jno add mov inc out xor pop push mov xlat cmpsl sub fadd cmc push ret aas test adc jo pop popf scas lahf pop rclb aad ret add jp std scas xor cltd xchg inc xchg xchg xor mov cmp jb (bad) fdivs movsl xchg movsb push andl stc adc or mov mov push mov xchg jecxz loope repz mov fldenv scas lea jmp xor cmp sbb mov stos lahf cltd cmp inc adc jno or push cli and xchg shrb in fwait or xchg dec cmp mov push or and (bad) lods and jp and enter xchg test mov lret (bad) outsb es xchg sbb inc inc out loopne insl out push xor ss xchg nop jge sar adc sahf mov lea sub outsb or ljmp mov call or and rcll adc gs cwtl jl jns outsl cmp (bad) sarb cs mov (bad) push in out fisubr mov jge dec pop imul cmp les jg data16 jecxz mov int3 subl xor adc add adc lret insl adc jp mov add aad aaa lahf imul fcomi mov out xchg cmpsb mov cmpb in mov inc xchg xchg mov (bad) mov inc pop xor and enter mov sahf xorps andl fsubs mov ss enter sub push xor dec aad popf nop jmp fstpt aas pop fs pop stc pop push hlt scas dec xlat sti pop inc lret sub popf jne dec aas shrl fdivrs hlt mov xor mulb popf ss xlat cli inc and xor adc xor es dec mov mov jecxz mov pushl sbb ds dec lahf mov push cmc jo mov mov push mov xchg xor jp imul mov rolb jl pop dec sub or mov hlt dec lahf push inc (bad) mov cwtl andl pop cmc xchg pop add popa inc mov jne xchg inc lret cmp int scas push andb ss iret lcall cmc icebp dec xor mov std scas scas xchg xchg xor jns push and cmp mov stos jo addr16 sub pop xchg sub jmp popf insl in daa daa in iret adc scas insl in and imul popa xchg xlat pop jp (bad) popa push lea out rcr sbb mov shll and mov pusha pop shll cli rcll (bad) push xchg dec scas push pop je add rcl (bad) loopne push or dec das aad push insl mov push in je js mov cltd lds jne pop insl mov (bad) push test sbb push xchg negl (bad) inc and shlb push inc or imul mov mov arpl push mov lret xchg inc lock stos mov cltd das add ret push outsb sub cmp sbbb mov adc mov jmp js adc pop (bad) and (bad) mov sbb mov repnz call movsl addr16 sub push test ja adc stc ret mov fnstenv jns cmp rep fsts sbb out push rolb cld push (bad) insl mov xor pmaxsw jnp or aaa xchg loopne cmp or ds cmp add mov sub mov rolb sbb pop xlat mov xchg in fadds popa xchg fs fnop and xor loope xchg and add addr16 add test aad neg cmp ficomp xor cmp (bad) xchg dec hlt jmp call notb mov lcall push fadd mov sbb jl adc dec xor push pop dec mov xchg inc (bad) pop les jl aaa mov sbb mov repz imul shr rorl mov in dec loopne fnstenv mov push push pop fdivp push mov mov pop push pop xor pushf pop in (bad) mov cmpsl inc ljmp ret mov das push mov insb mov or mov (bad) sbb imul push fidivr push xor popf pop sub push movsl outsb pop inc int xchg sbb ss push pop xor dec roll dec popa add je inc dec mov (bad) outsb insl push bound out fs addl sbb rcl add stc rcl jno mov push jae mov dec cld mov push es test adc in lahf xor mov repz mov mov je lcall fs ret idivl push fld arpl and add data16 and jmp fsubl out mov adc add bound test add int sub pop loop nop out sbb or add dec xchg (bad) lods mov add add mov xor inc (bad) mov fwait call cmp (bad) or test mov lcall test adc jo xchg pop aam push lcall push lods cwtl push popa rcrl xor scas xor imul mov mov sahf dec insl outsb and mul and test loop rcrl rorl jnp je inc (bad) xor cmp loopne (bad) push pop outsl test pop mov add lods stc jmp cmp push lock adc call add mov jg xchg cmpsb iret test pop sahf mov dec aas leave mov adcl cld lds sti sub ja jle cmp dec ret js insb mov ja xchg pusha sub mov push adc loope mov adc cmp sub dec shll jns lds outsl pop jns sbb jae sarl movsl insl cld fwait pushf stc (bad) jno in mov lock mov test fstpt xor push adc push decb out xor and popf std (bad) sarb mov test pop pop mov xorps and cmp lds mov xor test cmp popa pop cmp inc sub cmp xchg (bad) cltd fs sub loopne hlt jno (bad) mov xchg insb xchg (bad) ljmp pusha jg iret mov int3 and cmp test mov jecxz mov fcomi push pop lea sub das cmc popf (bad) into fstl movsb jge in dec test bound popa out push imul cmc ljmp leave inc sbb sbb jno imul sti loopne ret jl mov mov dec cld enter outsb cld and aam adc pusha jle aas dec push push and push cmp push pop mov add inc xchg or (bad) sub movsb ret jmp movsl iret insb xchg dec push cmpsl dec pop cmp push adc rcrb cmc test test bsf imul fs push pop push dec mov fwait xchg adc test imul shrl daa lret xor fdivs push jne not (bad) lock push stos mov jl int aad pop sub jmp outsb cmpsl pop and out out lds outsl xor mov push sti jp push dec jecxz sub inc jmp mov in cld cltd lahf idivb adc ss rorl jno pusha xchg cmp adc inc mov inc mov or outsb or and sbb stos push xchg pop rolb adc lods aaa aad xor adc cmpsb aaa mulb xor mov cmc loop dec mull hlt jo fdiv dec int3 stos clc movsl mov add jno scas fsubrl pop push shrl inc lcall add and outsl bound mov outsb sahf lds inc cmc ds je sbb out cmp ds fadd (bad) xchg inc fisttpll mov bnd stos sub (bad) (bad) mov lahf rolb inc push push faddl xchg xchg xor bound or add xchg out fdivr pop mov ret enter fbstp cwtl js and popa lds xor repnz adc add or adc xor inc mov jmp aad cmp add fiadd scas movsl sub bswap adc mov pop jo std pop notl in (bad) out inc test stos push ret lds mov fcmovu cmpsb shrl mov mov dec rorb cltd out aaa jno push (bad) cmovl loopne cmp std icebp push test test push xor lods pop dec and cmpsb push mov loop cmpsb popf ror jmp dec or push inc mov mov push add fdivr sbb pop fcoms roll cld outsb pop xchg dec arpl jns (bad) add pop mov iret test push xor inc in movsb inc ljmp cmp jmp loope testb xor nop mov inc (bad) fidiv mov pop inc sbb inc fldt movsb popf mov andb and xor push std cmpl call add enter xchg cmpsb xchg pop lds push pushf mov movl fisttpll hlt hlt mov mov enter sbb mov sub pop or test sbb push cmpl rcl sbb sub lret (bad) lods loopne and or jo xchg sahf cmc jno ficomp pop daa fcoml movsl movsl or mov mov int3 or push in push add or std aad push (bad) outsl daa clc push test sbb mov fwait push inc adc rclb add cmpsl push dec into xchg in push out or (bad) in mov mov cli xor lea jmp ret fist adc ss loope mov mov enter xchg je jb mov xchg insl jge pop test lret jno pop inc jmp jecxz inc sub aaa popf stos sbb push adc adc cmp mov ret dec fldcw sahf xor das adc js add mov cmp out nop jbe push adc xor push push pop aam mov cs (bad) and xchg push cld call dec leave cmp imul xor push lods cmc mov sti loop je cmp cs lods xor out mov mul pop test sub xor stc lea inc push ret jo xchg pusha mov sarl push repz xchg mov rorl adc inc and xor adc outsb daa xchg cmp lcall stc push sbb repz (bad) out loope iret fcmovnb inc sbb lret cmp popf int3 cmp sbb adc roll popa arpl or mov frstor lret dec jbe fcomps and inc cs aaa rol mov adc mov aad adcl cmp mov ret adc push or inc loopne outsb iret mov popf jb fcomip outsl inc outsb lret and push bnd ficoml out fwait push imul roll mov jb dec or (bad) fsts (bad) lahf addl mov xchg xchg (bad) cmc cltd popf insb sbb sbb lahf daa or mov xchg int3 ret cmp adc and adc scas xchg inc loope xchg and xchg jle loop inc fmul sbb add popf pop push scas int3 cmp popa xchg out pusha js (bad) mov mov jmp cmpsl pop sbb pop je or insb bound dec gs pop sbb mov jbe test stos or mov jmp test outsb or jne cs fdivs in push stos loopne jbe js cwtl push pop push sbb cwtl sbbl js pop fmul xchg xor call mov cmp inc and mov sub out sbb scas mov jmp outsl adc inc in adc xchg inc or int3 push push jecxz aad adc sahf and subb pop cs repnz outsl pushw movsl add dec and shl andl add push rol adcb and sahf aas push bound ficom (bad) mov dec jnp push arpl stos jl loop push inc xchg push in mov (bad) enter push lahf lds andb pushl and sahf xchg or dec sbb fldcw xchg out clc mov mov push insb mov (bad) or adc ror cld mov inc leave cmc int3 mulb fnstcw fdivs push in mov lret icebp daa xor mov mov or shrl pop adc cmp mov pop add dec dec rorb jno push out mov jge sbb scas aam and adc mov negl out stos (bad) jbe movsl outsl shrl xorb mov xchg adc iret fidiv xchg cmp and mov inc das mov (bad) mov xor iret in xchg jne mov rcrl sbb xorl cltd sub test loop push fs inc inc fildl cmp mov cmp and lret into ds hlt push cltd xchg mov jp jne fistpl jo data16 or (bad) mov sbb mov mov and jmp popa dec pop rorl fildl add xchg xor les pop leave jle lds dec inc (bad) cltd fimull in aas jl mov mov daa sahf jne ds aad and test dec insb into aas ljmp cwtl jns rcrb pop aam sbb and jnp (bad) jle les scas lahf lea je (bad) or scas test add jne inc fmuls dec jb pop dec cwtl (bad) lock push jb xchg dec and dec in cmp push fcmove jle or cmpsb jne dec push fstp test xchg stc (bad) movsl insl jbe xchg stos (bad) xor roll in shrl push xchg int3 in or mov and mov push test or sub movl stos fisttpl cmp xchg mov push (bad) xlat jns arpl add lret (bad) mov daa out inc pop fistpl popa outsl mov push push mov jae fmulp xchg and mov lahf (bad) sub aaa outsl jp mov fadd cmp cmpxchg jg xchg outsl mov inc push js inc push mov fiadd add jle mov pop (bad) xlat aad rcrb mov push ja cmp mov data16 aam in sti cmp dec jne in jbe mov (bad) pop js ficompl adc push sbb jb outsb rcrb leave shl sbb pop ret mov dec mov popa in mov test repnz adc lret mov push xchg sti xchg mov xchg out xlat mov shrl push rolb xor test pushf sti push rolb mov cltd clc test add stc (bad) jl mov call int3 movsl and jae sbb test add popa xor xor insl sub aas push push push push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov in pop cs xchg or nop and xchg inc pop in lods lret aaa (bad) (bad) jno sub mov testl mov sub cli scas pusha jl pop mov cs test ljmp mov fildll mov out push outsl call jno (bad) leave mov inc insb movsb push (bad) xlat rcrb mov cmp pusha daa stos or inc cs adc mov mov in cmp add mov lods repz xorb xchg jecxz or popf in shrl mov mov loopne xor test out (bad) icebp jp inc mov test xor xchg inc pushf adc fucomp xor scas pop daa dec jecxz cmpsb lcall sub add pop lcall hlt xchg movsb sbb pop aam and mov cmp jbe xchg xlat xlat scas xchg movsl inc cmc rcll add rolb xor jae cmp mov andl push stc sahf addr16 push mov add sbb or mov push dec sub iret xor inc xchg js ss and bound push cmp iret sub hlt cmc ret sub pop ftst mov sub cld mov (bad) mov xchg cmpsb (bad) sub ret mov mov aam adc and arpl lret and mov add jne (bad) mov imul pop sbb xor lock adc cli out ja push xchg push mov push or pop sbb push loopne mov cltd inc sub out mov lock xor and mov pop and je (bad) jne outsl lods negl sbb pop fs mov mov aaa or mov ffreep movsl in or rolb sub aad pop adc add jno (bad) push ret out pop lcall test in cmp add je loop (bad) jbe cmp ja iret nop sbb test mov orl (bad) aad scas and hlt xchg push sbb jo scas incb mov jl mov sub leave xlat sub or mov mov icebp jl rol add aad mov inc aas jne (bad) outsl shl outsl pop pop cmp stos add sarl mov lds xor or rcrb rolb fcmovnb and lea (bad) call fucomp xchg adc or (bad) pop mov mov pop leave sub lds pslld mov sahf mov push mov mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jno and push pop lods sbb pop clc adc xchg or xchg push jbe out outsl mov hlt inc cmc lret mov xor (bad) test cmp dec mov fucomp mov clc (bad) jmp mov add sub sub jbe ds push mov and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov in pop cs mov (bad) into mov jb adc out lret aaa (bad) (bad) jno sub mov testl movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 mov in pop cs pop or nop and cmpsb adc out lret aaa (bad) (bad) jno sub mov testl cld push dec lcall (bad) insb push sbb call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 cmp (bad) bound leave sahf pop xor aas push xchg lret cmp pusha or mov mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and xchg leave or jg jg and mov xchg pop mov push movsb cli enter or push into xchg loopne push (bad) mov ret loop outsl pop das fcompl ret mov cmp cmpsb es repnz mov add bound dec sub mov adc fstl push mov pop (bad) xchg negl lret jne (bad) adc and mov dec sbb inc adc xchg sarl lods clc adc sub (bad) daa mov mov mov les jp pop cld cmp mov mov popa fmull in jg cli sub sub mov xor mov xor sti or sbb sub xchg std mov mov mov mov pop out lahf inc jne fsubp push cmp push out xlat pop out (bad) jne cltd das mov inc cli test ret xor jo scas imul jmp in inc std xchg lds or mov adc std xchg out add cs or push and mov cmp jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret ficomp mov movsb adc xchg cld dec js jns xlat cmp pop dec inc aam pop jo push adc test call call outsl inc daa shrl mov repnz fldl2t stc mov hlt fsubs icebp stc int mov jmp int3 int3 int3 int3 int3 int3 int3 int3 cmp imul jl sub js jb jnp lret insl movsb lret mov imul inc hlt mov dec lahf cltd xchg mov movl movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp enter test bound (bad) sub mov and bound or jne adc or (bad) lea (bad) mov sub inc stc xor insl push (bad) fmull (bad) and jbe (bad) xchg fcom mov sub fwait and push xlat in push push or mov cmp mov and frstor sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and xchg mov jmp rcrb ja jbe push mov jp je imul mov (bad) stc cmc xchg leave (bad) lahf dec das (bad) mov (bad) xchg ljmp jmp stc int mov xchg sbb inc mov cmp adc cs adc outsl dec pop xlat or (bad) mov jnp jp cli xor stos outsb mov mov sbbb mov xor jl faddl dec dec mov notb adc jno jp out shrb sti stos std xor addr16 add xor into xor frstor ret xchg repnz sub subb pop and adc push lock mov mov mov pop orps mov xchg pop dec lret pop cmpsb jne in andl cmpsb pushf inc adc popf fildll pusha mov sti push mov (bad) test int loop in insl dec sbb ja out jle push mov shrb mov test cmp lods jmp es mov add repz jae dec sti cs sbb push add lods inc (bad) push mov mov arpl pop call daa cmp pop scas or mov mov and call repnz scas cmpsl daa test fadds mov test imul imul iret out (bad) popf jg cmp pop xchg xchg stc das adc adc shlb cmc ret jbe bound out xor xor in fdivrs sub and xchg pusha aas ja xchg clc lock adc loopne cmp add jecxz mov or (bad) ljmp xchg into fmulp mov xchg leave and dec sbb jmp dec jmp and add loopne fbld (bad) cmp loopne decb mov mov sub inc icebp int cmp dec jmp movsb push inc enter inc mov fsts and mov cmp (bad) pop or enter sub scas push aaa sbb mov sti push lods add jecxz in sbb add jno cmc mov mov lret insl pop dec test bound rclb or inc call jp push dec jge repz cltd mov and inc lahf xchg dec mov pop sub sti xchg inc ljmp negb fisubr aam mov add cmp hlt sub add adc pop mov ret push jge scas insb into int3 xchg mov orb loope xchg xor jmp lret insl xor stc pop ss cs ljmp in les mov inc xchg and stos dec mov jle fwait dec mov pop (bad) clc insb test push adc andb xchg test pop cmpsl inc repz add (bad) fs les or stc dec xchg ja fildl pop in loopne paddq jge popf cmpsb fdivr mov lret inc repz jno push popf push pop cli push cmc mov cmp dec rcrb sbb sub stos lods mov out stos cmp add inc lds add ret out xchg sbb inc fidivl push cmpsl add leave (bad) lods out rclb (bad) or dec ret mov pop in sbb scas mov out sub sub imul das fwait inc stos pop sub sub push add cmp lds lds ficoml out sub jo add cmp call and pop sti data16 outsl arpl outsb adc in fsubrl adc jo repz sub cld loopne outsl mov pop mov jle movsb xchg insb pop and push add sti adc leave aam ljmp in shrl scas (bad) jmp shrb aad sbb cmpsb jno dec xchg test cmp sbb jle add test aad pop or adc lods and sahf and mov lcall (bad) mov in sbb xchg xor jae imul addr16 out and out cmp imul push aad fnop cmp cmp enter mov inc dec mov jecxz inc mov mov stos lret fsts mov lret leave xchg mov popa dec and mov mov mov out and sbb insb (bad) lret sub loop pop mov adc negb (bad) loope data16 sub out cmp xchg add das in mov mov into bswap jp mov fdivl fldl2e xchg out pop dec fs push sti adcb jg sub xchg cmp int (bad) outsl mov das mov inc cmpsl gs (bad) ja test push jb (bad) lods ret andb xchg push cltd aad jno cmp jns jmp arpl xor (bad) outsb je xor out aaa lretw fcomps int cmp fwait sbb xchg lock xlat inc cmp or xchg lcall inc pop (bad) jbe cwtl lock and scas pop inc rcrl mov adc mov lods inc jmp adc and fildll out mov jns ja jo mov loop sar pop xchg sub sbb out shr add or or xchg add sub stc mov add data16 mov out xchg sub fcmovb test push mov lcall push sub pop pop test mov mov add int3 rcll dec adc and (bad) mov lcall mov test aam xchg (bad) imul sub cmp lret mov pushf shll icebp scas sbb outsl cmp mov sub pop sahf imul arpl or cmp je lcall (bad) js stc jbe clc movsbl or jl sbb roll jb (bad) cld xor jne pusha cmp push out and mov mov mov jp lods mov dec ljmp sti sub inc imul sbb lods int mov aam and mov sub femms in sarb mov cmp dec popf fdivrs ret xor push mov xchg mov add or jne repz sbb and jno inc mov test pop sbb inc push ret popl fidivr call xor sbb in inc mov dec xor in add repnz and and lahf (bad) mov inc jmp mov hlt pop or adc push enter mov sub mov lcall inc or test xchg ja xor (bad) pop lea sub adc xchg jl cmp repz js add gs adc sub inc xor cmpsl mov je push sbb dec pop xchg push scas mov mov fstpt and cmpsl mov aas push movsl xor clc imul jne stc inc xor jp lcall xor dec mov in push pop jns pop mov shl add or iret pop daa notl push rolb fiadd (bad) sbb adcb jge or (bad) popa xchg aaa enter (bad) jge iret xchg adc scas dec imul jl jne (bad) mov pop dec inc jmp in push push pusha mov push jmp (bad) fnop mov xchg xor sub and push xchg mov xlat loope sub mov xor jge jo repz je xchg mov inc mov add lahf scas or (bad) (bad) mov jle mov jmp int3 int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 xor (bad) mov js mov je or lods jg sbb nop adc sti andb int3 cmc call outsb cli lret or pop jmp fucomi lods lahf and fldl mov gs (bad) mov mov lock aaa or or xor mov dec in xlat xchg add lods fistp adc mov repz push cmp or sub or cltd mov xor dec iret push in add leave test clc pushf pop jg sti pop xchg mov ds sti lcall sbb rcr pop and mov int3 test add mov inc stos loopne xchg cmp sbb subl xchg push add mov imul scas and pop pop jns jg nop test mov roll mov adc movsl shll clc mov add push rcll in out ss inc fisttpl pop mov aam jo jns adc es scas mov (bad) jg cwtl inc push frstor mov (bad) aaa xlat or fstps inc cs cmp leave adc cs mov aam out lea xor ds (bad) repnz insb mov or mov popf lcall addr16 lods mov mov int sub and loope push mov stc push and sbb adc imul int3 mov inc jb pushf mov imul or int push cmc lret sub imul js add (bad) cmp mov lahf cmp in mov test inc fist dec pop out (bad) lahf ds lock mov jno jmp fimul inc push adc add clc xor xchg rclb pop add xchg jge sar xor idiv lret fild faddp sbb or push and movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 cmp push std out das sbb pop xor xchg jl out pushf mov (bad) xor push push call popa popa (bad) js mov and inc or push sbb inc pushf fadds sbbl bnd push push ds aas stc loope aas xchg fcmovne mov push scas dec or addr16 jne sub push xor cmpsl adc std add and cmp mov push and or add mov adc jnp mov call in aaa popa mov push push jecxz jp cs or adc mov cmp imul jbe jbe mov cli stos inc stc pop and cwtl sbbl xchg cmpsb clc jae loop cmp (bad) xlat shrl jl call inc adc jo xchg das rorb fwait sbb mov dec push (bad) lea imul mov out mov adc int3 andb mov mov add aad cs ljmp add jnp hlt daa mov or notb leave dec or mov enter sbb arpl sub cltd inc ss and rcll jno inc mov adc lcall out or inc jae mov or jle fldl add inc in addb mov jp and cmp inc inc aas pop dec sahf sbb and sahf push push pop xor add sti jmp mov in push jp sub stc das stc xchg mov aas ffreep js cltd xor mov ljmp or xchg dec and cmp ljmp sbb cmpb push rclb mov jl test lahf mov pop lret mov dec (bad) sahf sbb imul sub sbb or push fildll fldcw push popa mov cmp jg sub shrl mov mov push insw sub int repz jns test sub pop frstor insb test sbb lcall mov mov push push (bad) icebp out add mov push aas fsubrs sbb inc mov mov push ljmp jecxz dec mov or inc push mov notl (bad) push mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov in pop cs sahf or nop and xor out lret aaa (bad) (bad) jno sub mov testl mov push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and xchg push testl add push jns sub pusha pop jge fwait outsb movl inc test enter gs jbe or dec xchg pop insl mov mov inc aad or pop jb mov addr16 ljmp xor rcr pop sbb or inc imul sub in mov movsl scas outsl cmp movsb push adc aad rorb xchg pop pop incb (bad) push xchg (bad) (bad) mov push push popl xchg std insl or outsl add lods sub or add call aaa adc out mov jbe mov xchg cmpsl sbb icebp sbb sbb mov (bad) fwait movsl inc lds aas lock adc and push fcompl push mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 rolb sub jecxz push add adc scas jns pop sub dec push pop jge imul in add dec insb xchg xor mov or pop and nop sbb dec sbb and xor jb orl cmpb pop sub push adc push mov pop inc lcall das and sar pop cmpsl pop ljmp pop jp lret xor cmp xor shrl xor fadd xchg loope jl cs jle xchg cli push lock rcl xchg scas aaa pop rorb test mov out hlt sbb (bad) jle addl xor push jae roll jnp js mov xor xor push push lea loopne xchg push rclb and dec pop negb addb fisttp pushf inc fsubrs fcoms cmpsl mov outsl fdivrl es (bad) fstpl fwait aam fs sub lds out lret jo cmpsb lock adc mov fcmovb fstp outsl in mov sbb sub and aaa aaa pop in std stos cmc xchg lods and and inc add call sti and push xor inc aas decb lcall rcrl arpl psubsb push mov cld inc into jp mov jp iret test rorl add mov cwtl rcrb sub mov pop xchg aam add imul imul cs fimull shll movl pop ds rcrl lcall pop push mov push lahf jno xor das sbb scas mov mov mov in cmp push cmp add xchg push mov ffreep shl aam rclb push ss addb in cmp or or adc sbb cmp fstpl and mov push arpl fmull cmp aaa enter add (bad) lcall int sbb xchg arpl push neg fcomp push mov push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fiadd in and push mov repnz mov or lods pop jge mov mov (bad) hlt pop loope fcomps push add jecxz cmp ljmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 ret (bad) dec xchg ficoml fbld out push mov jne fsubl mov inc aaa or mov and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor das cmpsl ficoml in add adc and push and mov out or lock jecxz or out jae adc cli sbb mov loope pop fldl sub cmp sbb movb and ds flds push inc pop mov ret lds int3 lock (bad) in clc xor adc and jbe push decl fisttpl mov inc rcl adc inc aas mov mov aaa xchg pushf imul test enter addr16 inc negb pop sub cmp div ja fs jmp aam imul mov mov dec push mov fstpt jecxz and or xchg mov js orl ds pop inc adc sbb fcoms dec outsb aaa fstp rorl mov dec daa rcrl pop push dec arpl dec pop ret shrb xor loop dec popf jmp jecxz imulb call mov pop jns cmc xchg sub jg cmp lahf mov mov hlt clc test push rcrb add cli sbb mov cmp xchg mov jbe (bad) lds in fistp mov and lahf fwait sub ret push (bad) aam ret add inc test scas mov xor or push pop jl ret cmp cltd in mov ja (bad) xlat je (bad) jno jmp xor adc lea cmpsl popf jbe xchg jp cmp xchg scas dec xor mov push sbb adc mov enter mov outsl cwtl addr16 and inc (bad) ret sbb testl test cmp popf sub repz incb in inc sbb insl fimul sbb push xor cmp and sub test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov inc mov stos or jp loop add mov fcmovnbe pusha in or in or pop and push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and xchg scas cmovno jecxz,pt and sub xor xor cli sbb dec sub jl mov inc dec leave insl fidivl jno add stc mov dec push popf jno push (bad) test stos aas mov pop pop dec push mov movsl clc dec adc enter mov mov pop cmp inc push les repnz jle test or test dec push inc dec or sub push adc xor fmuls xor scas fisttpl into sbb std or stos xchg inc cmp int3 push les xchg push test popa inc xor and mov sub lods cmp xor loopne (bad) dec xchg int xchg pop scas insl sbb sub sbb pop idivb dec and push in adc inc lret dec mov sbb push add imul (bad) scas push lods push (bad) sub repz push dec insl lock daa orl mov dec cmpsb scas mov in sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and mov shll mov jb lea std fnstenv jno nop mov imul pushf aaa push add xchg inc dec push inc jmp out (bad) rcl sbb or je outsb adc or je leave mov mov jg lods xchg pop jae fucomi xor jmp mov data16 push pop and and fild lret js ds ret jno jne into scas push sbb add and dec or xchg leave popa fs inc mov gs insl stos pop and add jae shlb in dec mov fs xor movsl mov stc xlat pop popa int3 hlt (bad) outsl add mov dec shlb push dec and xchg pushf mov push pop repz lea lret pusha ret cmp scas and nop fs mov xor add enter add cmp addr16 mov xchg xor fcompl inc popa rolb mov decb (bad) jg mov scas pushf or jbe push and jmp lock or pop adc sbb sub mov or inc jb ss addr16 pop xlat lock hlt mov fisubl cwtl mov adc bound aaa lods mov mov fbld and cmp dec fsubrs dec dec mov in pusha icebp xor jmp sbbb dec bnd mov (bad) rolb test jns aas das add pop xor cmp jns mov push adc out jl stos push cmp mov outsl lahf jno xor cli push rorb xchg dec xchg (bad) mov jg aaa dec adc pop test mov and sub push rcll and repnz add lahf ss int loopne test pop mov pop xor cmp movsl mov or cld mov rcr repnz pusha out popf lea aam rcrl aaa mov inc jne pop subl cld sub xchg mov enter xchg cmc (bad) cltd test pop out cmp or xchg push testl int push hlt push lods js push in jl mov fcoms add fsubs pusha mov pop xchg pop mov dec out jne icebp loope ffreep cwtl or jl xlat or (bad) and inc fcmovu clc adc in sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 ret and mov pop mov aad jnp insl or out mov xor mov cmc inc bound xor (bad) jge mov mov nop ja inc and jno pop cmp sbb loop pop (bad) (bad) lock push inc jns mov mov out repnz cmp test sbb and movsl (bad) outsb jmp xor mov pop mov (bad) dec dec notb inc mov in xor addb jno test scas or add lret sbb xor mov or add in roll and push dec inc lods and push test and lcall pop xchg test mov loop cmp and ljmp push xchg jae test stos pop js mov in stos xlat xorl std inc rcrl mov cld sbb pushf mov test push mov movsb cmp xor mov adc or cmp cmp addr16 in scas hlt pop sti mov push lea jbe nop push inc and xchg sti test xchg and adc comiss add xchg cs cltd push jbe sub push jbe jmp xchg shrb or imul push nop pop jo mov sbb cmp subb cld lds les and stos or jge rolb mov lahf imul aas outsl call sbb push mov daa mov fcoms addr16 ficompl arpl xor inc sbb adc pop fdivl adc (bad) mov outsl push repnz xchg dec cwtl outsl out adc fwait mov adc rcr fwait cmp push xchg push das int3 jg jnp sub jns sbb xchg cli and ljmp sbb push or dec iret arpl dec and movsb push sbb xchg jge jnp sub jne les dec (bad) aaa push into mov test cld ljmp cmpsb pusha sbb imul ja push pop sub je adc add jl ss scas lock dec lcall bswap xlat mov xor scas lret mov jp dec jne sub inc std scas jge lds stos mov scas out jnp pop mov leave std jge xor ret dec scas (bad) dec scas adc mov (bad) sub mov jl cmc enter (bad) es jl lahf or mov dec cltd pop cmp into out pop rol push in in pop lahf lock and dec adc (bad) stc sub es xchg adc cmp push icebp repz mov fsts push cmp sub fs sub stc aaa cmp rcrb int3 test dec fisubrl pop jnp or pop xor mov aas outsb (bad) lods rol mov push mov add mov mov (bad) aaa out adc mov leave imul das mov ret jo rcrb lea repz in dec xchg mov xchg adc ret add jmp or jmp sti push xchg sub movsl lods mov ret (bad) (bad) xor or pop fisubr scas in dec inc pop mov dec adc sub xchg scas in mov repz fimul push cmp mov into scas add push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and mov shrl outsb xchg notl xchg test xchg pop jno jmp jge cmc mov (bad) push and shlb sub ficomp dec jl dec das xchg pusha fs in pushf jno es (bad) scas fcomps pop lret cmp addr16 scas insb push imul (bad) mov clc xor sahf aaa cmc ljmp sti (bad) rcrl aam inc push hlt jne mov cmp in xchg dec outsb push (bad) (bad) mov negb inc inc mov ret inc imul mov sbb pusha loop ret repz lods pushf aaa or dec mov in or jae mov cmc mov fbld cmp push pop cmp and addl add loope and pop shlb push push mov jno lds ds int mov sub lds push inc inc int3 ror adc insb stos pop cmpsl scas push cmp or mov nop mov rclb push adc call and pop push ret outsb fld imul out pop xchg call mov cmp or aad mov (bad) sti xor sahf adc divb loope ds imul ds pop leave fstps push cmc pop xchg aad sub icebp (bad) les sahf adc lock jl xchg jle (bad) test cli call xor or mov jg xor mov test and stc jle add xor mov mov iret inc cmpsl pop (bad) in cli xor loope cmp dec and test cmc adc out xchg push xchg or je pop xor pushf mov stos imulb mov iret add stos add repnz test js xor movsl pop adc mov add pushf adc and mov lods insl fdivp out cmp inc mov and or (bad) xor cmp xlat test pop push xabort sahf cmpsb sbb mov dec push mov cld ljmp cmpsb mov xchg and push popf fwait jmp inc xchg lcall and imul loop gs fbld fs es clc cmpsb icebp cltd fadds inc mov mov data16 loope lret xor lahf dec cmp push aas add mov xor pop and aad pop loop xchg icebp in xor or lret mov mov (bad) dec adc inc fisttpl ljmp idivb xchg rol stc pop add jns cmp inc cmp aam mov (bad) loopne enter or jne aad mov xor loope xchg in and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret (bad) xor cmp adc jp or mov data16 rorb enter dec mov xor mov aad adc cmp stc adc adc xchg enter nop sbb mov outsl cmp and (bad) aas stc sbb int cmpsb and popf in test push imul xchg mov and clc mov repz cmp popf out lret push out push divl mov icebp iret mov iret xchg inc jo xchg inc push sbb xchg insb (bad) xchg cltd mov in sar and cmp movsb ret jmp jg (bad) mov cmp adc test das pop jnp cmpsb clc jae rcrb xchg mov (bad) cmc xchg sahf add mov or dec sub (bad) (bad) xor leave popf stos in sub jns pcmpeqb mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 cmp xor xchg jbe pop push mov test jne call test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 jl xchg (bad) jecxz adc fidivrl add xchg repnz test mov nop sahf xor push jle fldenv lea mov push (bad) cmp push negl pop or sub addr16 inc xchg ss movsl xchg loope (bad) cmp mov fwait pop pusha mov add sahf mov in or mov push push push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret (bad) push bound and in lds idivl icebp lock inc imul add int ss or insl mov enter testl rcll sub int3 push fisubrl cmp shll in sub mov sbb dec enter addr16 pop sbb xor mov dec mov stos in cli dec jg pusha loope incb rclb fisub in xor je jne divb or adc pop dec mov and mov xchg out dec or into sub std xor add adc (bad) lods cmp pop stos in add push adc div outsl jns and jnp cmp inc adc xchg aas xlat test mov test pop xchg push inc enter insb out nop aad rclb push xor cmp in sbb pusha mov aad repz sarb dec rcrl sarl (bad) dec xchg mov mov and movsl aam (bad) jmp (bad) repnz into xchg xchg movsl les subb pop loopne test das add xchg cmp (bad) fidivrl hlt fwait out push les sbb add stc pop ds sbb jno inc gs push jmp mov pop call fldcw jecxz cmpsb mov sti pop push mov or jnp lods and sub jg fist mov adc test and inc rolb mov cmc int xchg jge inc mul or adc lods add and add ja (bad) and imul popf in test dec dec sub cli inc fs or sarb (bad) repnz mov add fcoml sbb jne cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 ret and xchg les or in xor std mov mov jl fldcw jo jnp push imul mov int3 insb mov out adc lock (bad) and out lods call mov inc adc pop and fs popa push lds pop fildll js mov mov ljmp in es sub sti add frstor push inc mov nop insb scas sub loope sti xchg std fidivl sbb outsl adc mov mov adc notb pushf mov sbb mov fstpl push jb mov pusha das enter or mov orl xchg sbb testb pop xchg cmp test xchg xor dec mov fmull jmp in dec (bad) cmp jmp push xor shlb lods jge js mov jp pop mov enter push dec fist bound lock push mov inc aaa pop push iret sbb sbb in add jns jb pop imul hlt push mov (bad) cmpsb rol dec mov sub int add addr16 sar mov call jg test xchg sbb inc loop xchg sbb mov (bad) adc lock jbe popa in insl pop mov ss pop fldpi mov loopne mov nop sahf scas aam addr16 cmpsb aas adc (bad) lock je imul std push aam leave in pop sub mov mov xor out add arpl movsl repz mov or scas (bad) stos popf pop sub cmp jl cli cmp sbb mov test jecxz inc iret fiadd mov xor in or fwait mov adc aad cmp pushf (bad) out aas xor jbe arpl fstpl mov adc imul std mov imul es rol xchg ret fldenv enter loope xchg mov mov imul mov ds lea pusha into or adc movsb pop push pop je xchg lds dec mov mul fsubs fldenv add loopne xor shll cld pop movb (bad) xor push aaa pop roll mov ss sbb jmp cwtl add lea pop push fidivr sbb inc loop mov aaa rcrb push les (bad) outsl xor fdiv sub out aam mov lock out gs (bad) stc pop shlb call mov adc mov adc lea adc lea adc mov adc lea adc mov adc mov adc inc and cmp je cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc inc mov sub out pop adc ja outsl add pop mov jo shrb dec out xchg mov and jo inc in mov jae lahf inc scas cli andl int3 or in and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rcr xlat js stos adc (bad) pop rcr mov jne jl sub xchg pusha jns add es inc sbb inc mov lret stc pop jne cmp negl inc or add jnp (bad) cs repnz ds or push xor pushf mov mov out in pop push push lock gs jns mov lret dec icebp xchg fnop (bad) dec mov sbb cmp mov dec push les push mov adc (bad) stos jbe jns gs clc popf inc cmp mov fstps cmp jp jmp movl cmp push add mov leave lret aad scas rcll xchg jmp push cmp rolb pop sub xchg jl mov mov (bad) lahf insl inc mov jg fstpl mov mov push add int das dec loopnew jecxz adc imul outsl jmp std xchg or mov mov test xor test jns add dec mov fimull ret fs dec dec jmp test lcall push mov pop lods movsb dec add inc xor xor leave mov sbb mov jl push mul inc rcr push rolb jns arpl mov lods adc gs inc dec push xchg dec inc test loop push mov push int add jae sbb in cltd jmp inc jno push pop insb inc mov in mov sbb pop jmp or or mov pop or cmc stc aas cmp fiadd cmp inc movsl idiv push sbb jl outsl xchg xor (bad) bnd rcr xor aad pop shrb xor pop sub lcall and imul (bad) icebp and fldcw mov xor add out ret ljmp (bad) popa rcll mov xchg lret loopne sbb fcmovb (bad) sbb mov inc jnp cmp jmp dec (bad) out jbe sub xor jnp test sbb insb test xchg dec movsb cli (bad) mov add pop push aaa pop mov int3 incb (bad) jnp mov pop cmp or std fdivrl leave mov stos pop sub stc cmpsl jg push adc xchg cmpsb adc inc daa scas add int3 push inc in cmp fcmove xchg xchg call cmp cmpsb mov mov mov cmc (bad) repz inc repz mov and repz pop pop mov clc (bad) sbb loope add inc out bound jl es mov pop mov mov jns cmpsb fimul mov xchg mov lds and fs ljmp lea dec (bad) dec jp add (bad) std push loope je jl inc outsl scas andl jp popa fisttpl cltd sar ret push jmp into push push mov mov test sbb cltd cltd addr16 jg int or dec push into mov ds jp or fdivl popa add xor and jg mov es mov out xchg ss leave mov gs cmp aam int or repz shr add xor shrb jl cmp lahf andl inc js fnstsw add add mov packsswb inc lret jge adc rorl xchg mov jnp enter and jae movsl (bad) xor popa cmpsb pop dec dec iret mov lret xchg sti or push roll sbb dec jge icebp fildl inc fwait ljmp dec rcrb insb jb (bad) inc inc sub mov outsb pop mov into jne pop (bad) enter jo es loopne leave push in inc adc xchg (bad) pop mov popf in jmp nop cmp push push or jle out lea and cmp or adc repz pop inc xchg stos cmpsb or add xchg jmp add enter add and scas sub gs add jno in flds stos test xchg dec lcall mov xor ljmp fld hlt push add ret add addr16 lahf inc mov xor (bad) roll lea xchg xchg js push and test adc lea adc or repz in inc mov jnp add test lds pop test adc or pop shl jb or shlb push mov ret and push hlt or inc xlat test loopne ds mov stos test int3 or pop adc (bad) int3 test push mov pop dec (bad) in xchg adc sub cltd cltd pop pop jmp and pop adc iret push dec sbb xchg mov jmp push aaa ss cmpsl adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 ret mov aad mov or xchg sbb pop jle sbb das idivb cmp mov mov or shll loop mov push jmp mov aas std inc (bad) call push int3 mov dec sbb sub pop sahf jne cmp xor rorl inc inc mov adc mov cmp je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl aad adc dec cmpsb sbb inc pop jmp inc add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 cmp test into mov insl loopne fwait lods nop mov pop push pusha pop jge fucomip mov jl inc test faddl lret or add jle sbb test inc ret mov (bad) loopne in repnz outsl xchg int adc pop xchg dec dec xchg sahf mov addr16 push fwait arpl aas xlat outsb mov sti mov mov test mov mov mov (bad) fsts push push loop add pop (bad) sub mov push xor adc mov test jl and or and jns fisubl and inc jnp mov mov (bad) int3 xor insl fwait std or pop xchg in sub mov nop aas push ret adc cli and andl mov fst jns push pop dec (bad) xor pop xchg pop pextrw xchg pop fild movd mov mov jg out cmc lret mov sub mov sbb lret sub mov out arpl xor sub arpl fcoml ss and mov test adc mov pop mov push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret sub and ffreep mov push lock fwait arpl adc ss mov xor shll jb lret popf insl push fistpl sub push inc and test adc inc add (bad) out sub call es add adc in cld xchg xchg pop out cld push (bad) pop lds aaa stc adcl mov sbb aaa mov inc ret xchg bound jo out int cmp pop push pop dec mov out mov xchg jecxz or add push (bad) and cli xchg add xchg inc dec sub sub pop push push push andl (bad) test mov je shll gs dec sub stc jno fwait push leave addr16 cmc xchg (bad) or clc movsb push dec sub inc sub add add jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 (bad) fdivp xchg xor mov fisub imulb inc inc add inc inc mulb arpl push outsb cmc inc call push mov popa faddp and insb test add es insb push sbb cmp xor cmp les (bad) enter jl in push rcrb push xchg pop int3 adc (bad) mov test das gs lds cs cld and cltd inc cmp dec decl xor xor jl inc cli rorl or mov adc inc xchg popf fcompl cmp repnz insb sahf decl leave int3 jnp dec or inc lcall push xor psubsw cmp dec add test fdiv mov xor inc mov cmp and fcoml sub cmpsb in mov xchg sbb and js gs (bad) notl pop inc cmp popf rol cld cmp xor mov sbb cmpsl imul jne test test mov or in sub mov sahf ja adc aaa inc out xchg das mov movsl ss mov dec cmp jns cld adcl iret outsl sbb loop sbb icebp ljmp push sbb inc xchg outsl inc cli mov and add call (bad) lods or pop xor or (bad) mov mov xchg inc sub jmp push test cltd add and fidivr mov sub jnp inc xlat js insl imul lahf pop mov subb std bound clc push push push enter xchg or or add sub roll pop arpl rcll aad addb fdivr nop cwtl pusha hlt inc inc jno xor xchg mov xor mov jecxz inc inc cli je mov lods clc mov scas pop lret push (bad) add and push int3 jge jp outsl add cmp in jl push neg fcomp sub push push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 rolb mov pop out imul adc or arpl (bad) pushf mov aad jl imul adc lret insb xchg scas fistl inc sub fnstenv mov adc mov mov mov imul sub pop jns adc addl sahf lret push xor leave adc mov inc imul addr16 in cmpsl scas jge andl jns inc ret (bad) arpl repz mov lds cli popa jb imul cld adc mov (bad) cmpsb dec aaa push pushf in rclb mov addr16 cltd or mov cmp fcmovnbe mov movsb lret pop sub fwait loope in mov jae mov add orl cmpsb in test es xor rcrb push or inc sub add add cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 ret push inc push and shll cmp mov push xchg pop jno bound sub mov mov inc mov (bad) cmp mov inc dec test mov mov fucomp dec push or lret int3 cmp js js add out mov push ficoml pusha adc push in scas mov sub push adc std pop jl nop mov xor jmp (bad) adc in out mov orl rcll ret and push (bad) push (bad) mov lods loop (bad) pop divb movb je cmp jmp stos rol repnz push das mov clc js mov scas mov lret pop pop lods mov repnz add test aaa mov push mov inc lds xchg sahf pop hlt (bad) je shrl daa (bad) in sbb fsubl ds xchg movsl aad mov xchg sbb mov cmp jmp inc mov add test adc push jl sbb push (bad) cmp fnstenv data16 or mov and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movb jbe (bad) leave rcr mov and xchg imul cmp or sarl mov mov ss push test jb pop insb aad mov jb mov push pop popa dec pop lea cltd call leave push pushl or xchg sub and and jecxz scas pusha dec bnd pop aas jne xchg add (bad) stos jb stc pop jno addr16 and xor nop push inc leave les es scas scas xchg test mov fsubl inc clc js mov outsb mov inc pop insl mov pushf mov mov fdivl cli sbb imul in and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 movb sub push mov jb lds jecxz mov jbe mov js sbb adc mov mov push xor stos outsb int3 pop push cwtl add cmp jle mov dec and add mov loope pop or adc inc decb dec cltd out dec popa cmp leave (bad) push fcoms out clc pop adc stos mov add ror mov jae cwtl test js adc xor xor sbb (bad) mov xchg or mov jge aam std xor mov in pop add and cmp div idivl cli test sub test push movsl js movl xchg push inc leave sbb (bad) push lods in ficompl rcr jmp jne pop movsl push mov jmp cs and inc mov sbb mov or push and add push je out adc xor add test cmpl cmp movl mov mov mov std aam cwtl sub pop fs fcmovu sahf test hlt in xchg cmp cmp dec add xchg stos push (bad) mov or push adc scas inc in je sub aad add ret sbb rorl jnp lods and mov fistpll pop out mov (bad) hlt xor push jmp push fldcw cltd inc cmp inc repz pop scas sbb cli xchg (bad) xlat add jne sahf jo sub xchg popf pop (bad) adc mov cmpl das push mov push and movsl and cld (bad) popf leave ficom lock adc jmp sbb addb loope in ss sbb sub mov cmp sti lock (bad) jne outsl jmp sub lea push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 cmp iret mov push push push mov notl xlat jp inc pop adc pop jno xchg jnp fbstp ret lods xor cmp push push pop jne jnp sbb (bad) rcl idivb xchg adc pop adc cs pushf into sbb loop das adc adc lahf lret in push imul jnp movsb popf (bad) mov insl mov mov inc lahf xor and adc cmp cmp in loop,pn mov insb and pop pushf push sbb jno ror or pushf in mov call mov jne pop push ss pop pop or cwtl (bad) leave inc sub mov popf loope mov pop pop jne or push ret ret jne cmp pop inc clc out inc cmp or push int jge loope iret sbb inc cltd fs cmp popf fbld fisubl ss mov mov sbb dec jecxz stc stos cmp mov ret mov jecxz mov xchg andb cmp lahf ja loop inc mov adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 ret mov in jl xor push pop out xor push aas push xchg lret cmp pusha or imul xchg push ret cld dec inc pop loope out addr16 pop std cmpsb pop push sub pop sbbl bound jae pop add aam push int3 ds inc cmc outsl or sbb push imul sbb push push aaa out mov mov cltd or outsl ret dec dec dec icebp mov mov popa sbb test pusha iret sbb hlt sbb sbb add pop rorb cltd scas xor cmp orb and mov cmp or sub (bad) std add inc movsl (bad) push mov enter adc fist insb scas mov inc popa sub in loope mov add mov xor adc hlt mov daa test mov ds repz cwtl popa push dec mov push pop sub (bad) push loop fwait es mov mov div mov fldenv or push adc mov xchg push xchg sub mov rdmsr sub xchg test aas mov repnz xor push dec daa das push mov pop mov imul lcall cmp dec fdivr cmp dec xchg jae fwait pop (bad) imull xchg (bad) mov daa push xor dec cmc gs xor popa popf test out in fisub cs push pop sbb mov sub mov inc imul mov inc mov cltd sub sahf pop and sbb into add mov mov cs in adc and cmp mov fadds dec cltd out sysenter out addb inc mov lahf ss adc mov and adc fisub aaa sub bndldx and ret imul jge push inc (bad) dec mov lret add (bad) lret mov jle mov mov addr16 cmp in lods imul rcrb pop push out mov inc xchg mov in push addr16 jmp mov ret mov xchg pop movsl add inc inc mov negl mov sbb mov mov or jne pop and fldt xor jmp das rolb push movsl cmp (bad) in cmp sub dec rclb mov pop xor lahf fcmovnb and popa push and fistpl outsb adc cmp jne movl xchg jge push mov sub push imull inc rolb push xor sahf aad sub xor or pop mov outsl test add movsb sub xchg pop or and cs nop xchg inc mov pushl movsb dec mov leave into ret and pusha jns test (bad) test icebp inc loopne (bad) (bad) loop (bad) inc add mov rcr jecxz gs push and test cwtl cmpsb outsb inc enter and push adc xchg cmp or data16 call mov xlat out ret or sbb jmp mov (bad) (bad) push mov (bad) dec push in xchg cltd incl jae insl inc or call pushf xchg fiaddl cltd in faddl setne scas mov jbe fdivl and or inc and daa jo inc mov popa dec in rclb mov mov shlb mov fadds mov add lds rorl dec mov xchg mov xor cmp outsl mov cltd js adc mov xchg imul cmc outsb arpl dec push fisub and bound mov cmp pop push jmp jnp xlat mov mov pop mov mov inc pop dec push in call dec and mov mov cmp xchg mov cmp jle bound or adc add pop sbb add sbb insb in mov ljmp ret jb add and xchg push jbe sub arpl imulb es (bad) pop cld push push push sbb sbb loope into dec or xchg adc xor mov test rol sub mov cs jnp int xlat push fldl cmp adcb mov pop dec cmp dec lret xor sub (bad) lcall stos icebp dec (bad) cs pop mov ljmp popa into dec mov xorps lds adc add pushf xor (bad) iret mov jp add (bad) je xlat or lret insb cmpsl mov mov sbb push sbb in and jne mov adc push outsb and in in lcall dec fsubl sub ret pop faddl (bad) repz mov pop std push pop rcrl movsl loopne cmpsl roll cli insb notb xchg fstpl gs in das movsb cwtl and fstpt mov mov ljmp xchg stos mov mov call cmc adc arpl jge ret das inc mov jbe imul mov jecxz gs mov pushf iret jle (bad) arpl pop sbb out sbb and cmpsb cmpsb lea adc incl or sbb jne fstpt mov or fmul inc mov sbbl inc jno mov sbb hlt cmp mov lret (bad) call push mov and inc aaa out mov jl out xchg outsb xor fwait in xchg out clc sbb mov aas xor push mov mov mov sub subb mov dec push xchg pushf mov lds sahf repz aam pop xor cmp movsl lcall cmpsb mov fdivs pop insb sub mov dec bndldx flds jb cli cld lods mov and jmp add fwait cmpsl adc imul cmp push jle,pt xchg pop adc push push fidivr rcrb xchg push mov sub (bad) mov repz pop cmp cs pushf pop sub aam mov int xchg arpl in out out gs jle stos xchg pop pop in dec sbb insb sub push repnz jno adc sbb lret je test lods in pushf int3 lret lods repz push xchg lcall sbb fstps mov push xchg hlt and cmp jb ret fstps push repnz pop lcall push cmp popa ja cmpsl jle mov dec orl mov mov ljmp push pushf (bad) pop inc dec mov add gs inc lods push cwtl rol sub das mov jnp test add xor mov jne pop movsl daa or sbb adc sbb or cmp sub mov imul mov (bad) mov sub je jns arpl daa cli pop inc lret xor repnz sbb (bad) (bad) mov in mov outsl (bad) aam pushf (bad) pusha lahf xchg popa pop push jle push dec dec pop jge ljmp adc sbb arpl inc adc add int3 rcl pop ja jle xchg shlb mov mov nop pushf ja mov aam leave data16 shll js sub sub xchg adc les test outsl pop push inc out sub mov pop adc pop movsb jge call jge dec aaa pop cmp xchg pop mov mov out mov scas mov inc (bad) negl mov xchg mov cmp aas fisttpl inc push add xor movsl mov out sub inc add je xor sub leave out bound mov pop push cmpsl push xor xor aaa lea lret and clc lock xchg (bad) int3 mov mov scas fsubrs lahf sub cmp adc fs push movsl pop pop int3 or aaa loop jmp (bad) aaa jg js subb pop push cld jle mov ffreep loope aaa mov jns test pop stos inc lods pop jnp and iret and pop sub int insl sbb out push jge mov xor mov aas add loopne add mov lahf rol shll test mov outsl (bad) pop xor push gs fsubrs mov lret jo aas jmp jb test mov test (bad) xchg pushf mov sbb cli pop inc (bad) push nop mov loop je pop dec in in scas test test xchg into jecxz pop xor mov dec inc (bad) xchg inc ljmp or call push push cmp je xchg or cld inc aam and std popf jnp push inc and out inc mov inc (bad) mov adc sub xchg mov mov xor call idiv mov mov aad mov ja fildl clc (bad) dec daa (bad) adc add inc in fldenv popf out (bad) les jno notb js mov pop sub xor imul jecxz dec popf test mov insb iret lret popf ret jo in mov std jo add sub jecxz push dec pusha jle inc adc lret xchg mov xchg setle dec fldcw test repnz sub icebp jbe and sbb adc mov dec xorl fcomip mov ret or push adc fadds add xor inc (bad) data16 (bad) jnp (bad) out sbb dec (bad) dec sbb add into mov mov jno lret pop inc mov add jne (bad) mov outsb test sahf (bad) xchg mov fsubrp mov adc jbe push cmc in pushf dec sub add jp (bad) pop or movsl mov mov jmp sti pushf mov pop mov rol jnp mov inc dec sub into inc in mov push popa sub dec adc mov mov push je xor leave jp jge inc push dec or loopne xchg sbb inc outsb mov rcrb mov stc enter pop insb pop push xchg dec push xor add mov dec mov and mov xchg mov jno jmp (bad) jnp sti cli out in sub xor pop mov cmp or jno ret xchg leave xor fwait dec dec loop subl or sbb (bad) sub push repz hlt pop lahf mov popf stos loop,pn pop ja xor rorb leave adc inc in pop js outsb dec out mov decb lcall stos test test inc stc insb pop pop cmpsl jne xor daa cmc mov test cld inc xor (bad) aad or movsl push jns fs gs push popf push std xchg cli es mov jbe mov lcall mov notl aaa jae repnz push xlat pop pop mov scas push xchg mov sbb mov sahf inc movsb mov (bad) clc add or push pushw xchg xchg push or (bad) inc cli add lods ret ja pusha int aaa adc les and mov mov loopne shl das cmpsb scas lea lock dec mov inc aaa stc dec aaa and (bad) and xchg scas add outsl pusha iret repz scas mov out and movsl mov cmpsl decl mov imul fs push stc sub mov mov (bad) enter fbstp ret or fsubs cmpsb push sbb jle mov lods sbb xor jo jge outsb inc and (bad) subl fisubrl sub roll jae loop inc in or mov or aas mov mov inc in fidivl push or out fimul fistpl cmp stos jno sbb sbb mov mov and mov xor repnz das and gs pushf inc stc add loope (bad) and cmp jge scas dec lock data16 (bad) mov outsl jb or (bad) ss repnz add insb jne jns imul mov data16 lods jo test or imul pop shrl je js push stc add add fldcw je scas cmp push fistpll inc mov jecxz inc xchg addr16 inc xchg cs or mov and gs jp mov (bad) pop stos enter aad dec bound push in lods stos mov xlat cltd loope cmc test shrb loope fadd mov xor repz std int3 xchg mov mov ljmp push sub (bad) pusha adc cs adc push test xor jne jmp es jg sbb push mov addr16 jbe xchg push outsl bound mov mov dec ss and addr16 fdivrl mov ss pushf ret xor stos std lods xor mov dec cmp pop xchg enter or push pusha jge ret (bad) xchg dec pop sbb (bad) nop mov fisubrl movsl xor fs (bad) int3 andl das icebp in les into jmp cli mov rcrb add mov dec outsb ret ret xor cmp jae xchg xchg std je inc adc jno pusha mov sub xchg or iret aaa mov cmp pop std ja stos dec (bad) fcompl mov jo into and mov add orl mov xchg inc std xchg mov xchg jp jp sub lods js loopne xor pop adc push jnp and mov pop les xacquire xor pop mov sub pop out cli cwtl aaa or inc shll scas gs jo adc sbb (bad) mov ret push ret sub push push push fsubs inc in mov scas pop xchg jmp out hlt inc (bad) gs fnstsw xor sti jo sbb bnd je aam adc cmp jecxz int3 jnp sarl push (bad) adc jne mov xor or and loopne das lahf push (bad) mov add xchg mov lcall rclb push sub cmp stos mov cltd cmpsl scas mov dec push jmp cmp cmp dec mov mov pusha jp cwtl mul imul aam mov and aaa lds cmpsb xor cld or sarb lea mov lea cmpsl mov sub movsb adc sbb lock push pop call lods in testb mov test mov pop (bad) outsl loop rcr or loop fdivr cmpsb add mov mov outsb insb adc fcomp fisttpl in cltd aaa rorb xor dec fcomip test fmull outsb pop mov pop imul jns jmp daa dec xchg das (bad) ja jb mov lea arpl cld push imul arpl popa in jnp dec and cmc nop addr16 stc dec inc cmpsb pop test scas add jns mov jg xchg cmp icebp (bad) nop add xlat jl mov mov mov or cmp sbb bswap inc push push xchg clc or call inc pop and outsl andl add mov mov xchg and lret aaa int lods out cmp in out ja cmp add nop push cld cwtl xor jg pop sub mov aam (bad) mov test and outsb (bad) sub jmp stos inc mov jmp cmc jne adc mov insl pop ret cmp xchg push pop mov (bad) rcrb int out push mov pop cwtl sbb push sub sbb gs dec enter mov addr16 mov sub adcl outsl xor std cmp clc sub stc mov (bad) nop add stos in outsl jp sarl xlat rclb cmp mov into lea add cmp pcmpeqb push mov lods int3 mov icebp daa aas cld (bad) fcmovbe imull push pop push add sub or or pop aam scas and (bad) test mov fst out mov jo outsl pop mov data16 push mov push je out lcall stos loop sub push jle sub push ljmp cmpsb add outsl add jbe pop adc sub inc jb sbb xchg inc dec pop data16 clc loope adc pop and fisttp push jne xor (bad) test aaa jge or or pop jbe cmpsl outsb outsl xchg add in outsb jae popa cmp mov jae cmc mov in test int3 sub out xchg jp xchg test imul sub push dec add sub rorb jle outsb mov sbb and lods xchg cmc pop mov lahf ds (bad) mov mov mov jo je inc add adc push mov lods push push adcb popw fcomps jne or rcrb int3 cli adc jecxz cmp fdiv xchg jmp test lods std in movsb jo cmpsb inc lret (bad) and inc pop cmp in mov push pop jmp (bad) or in xchg dec movb sub mov (bad) jecxz sub or xorb jecxz dec ficoml movl mov bnd xchg pop push ret jno push push (bad) fsqrt lahf jns orb xchg jmp mov dec xchg add cmp xchg stos pop ret insb lods sub pop adc pop or mov pusha imul in push out call call xor pusha mov icebp loope mov dec cmp iret push scas pop jo mov movsb mov inc aad pop and sbb rcrb xor dec push shll ret fs les gs mov pop add cmp mov inc (bad) repnz mov and cmp daa insl subl dec sbb push xchg mulb sti (bad) jecxz cmp incl enter loope dec call mov iret sbb in enter lcall (bad) and sbbl add or ss add jge movsl and cmp scas decl inc dec jbe ja sub xchg repz mov ret push outsb mov divl dec (bad) or incl icebp ss outsl scas pop pop add (bad) or ss repz loopne aas fistpll push pop aam stos mov ja out sbb les mov xchg (bad) mov gs jo pushf fisubrl repnz pop and movsl pusha add mov adcb in enter fistpl jno lret ret and jle lods inc stc jae icebp pop enter and pop jcxz mov mov jb sahf icebp xchg mov lcall clc mov stos rcrb lret outsl mov lret mov dec adc jg dec (bad) xor adc icebp add and ss cld pop sahf divb imul sub imul mov arpl push and outsl cs test mov sbb and aam inc lea add sbb negl jle push test pushf sbb cmpsb push cmp push dec push loopne cmp adc push fisubr cltd loopne sub mov mov pop xor imul pushf adc mov cli dec loopne or add and mov xor cltd push push xchg add cs mov cmpsl inc xchg cmp push sub xor push lods test (bad) (bad) cmp popf or xor adc inc pushf rorb movsl adc sbb mov sub fildl test std sbb lds out mov imul rorl stos cld pop or out pop fistl ss cmp push out sub mov push jl ss mov mov xchg iret cld jmp into out das and inc cltd movsl mov pop mov xor bound in fsubl jg mov jle add out stos bound aam adc push mov and mov and mov mov pop pop push sub into mov pop ljmp push or inc int3 dec mov in or inc cld add add mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret and repnz arpl decl cltd mov shrl jmp movsb leave mov cwtl enter outsb inc (bad) mov inc into dec movsb fildll push mov jbe cli aam push adc mov xchg pop mov shrb je cmp icebp movsl call icebp int jbe andl ss mov xor stos insl push sub push mov repz ret mov dec out add adc loope fistpl scas ss fsubl (bad) js (bad) (bad) repz push int ds popa iret call icebp mov movsl add test mov fist or cmpsb loope pop jl mov movsb dec mov xchg in outsl call inc adc mov movsb loop inc adc loope pop iret btl adc lret mov in sbb or mov test push ss add mov add mov jl cmp cmpsl mov jbe mov mov clc and sub push and xor inc push sub push cltd sbb pop lcall inc push push jle (bad) dec lcall pushf stos mov xchg sti jl (bad) jge test add jp ljmp adcb (bad) mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret ret enter incb push inc jo mov jns jae inc pop in aam scas dec cwtl xor sub aaa and js add sbb aas cld push add jnp lock inc push ss pop pushf icebp dec out and cmp jle addr16 jb inc data16 nop xor inc daa orl mov cmp cmpsb mov shrl sbb mov lahf and iret cmp xchg movsb mov bound mov xchg cmp out neg adc outsl inc or std sti (bad) mov adc xchg jo test frstor push jae sub push mov push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret sarl sbb outsb sub xchg repnz mov jmp mov mov inc aaa or push rorb add inc add jl adc add jl adc int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 ret aam add dec outsb (bad) aaa mov cmpsl pop sti and sbb ret movsb ja or in cmp das or dec push or decb push mov mov loop ret arpl dec outsl aas (bad) lods mov icebp stc int push mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 ret enter incb push inc jo mov jns jae inc pop mov inc or xor xchg hlt dec mov lret cs outsb xchg mov jmp imul stc int push mov sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 xor dec mov jns cmp mov inc xor push aas push xchg lret cmp pusha or mov sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp bound aam aad ds push mov mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 ret and mov arpl enter cli cwtd out cwtl imul inc mov fucomip mov in std leave and lea lret adc es aaa and xchg mov movsl stc mov hlt fsubs icebp stc int push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 ret sarl sub inc (bad) fsts aad xchg iret out push pop stc out sbb pop hlt pop call in xchg std add or cltd icebp leave add mov dec fwait loope mov hlt fsubs icebp stc int push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 ret sub push daa sub mov mov test cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 ret enter ljmp xor xor jae inc pop mov fimul int3 out mov test hlt mov dec orb mov mov call frstor mov out jno inc xchg in ljmp adc dec call add push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp fildll out out lods arpl sub mov lcall xchg dec inc xor push jns fnsave push (bad) fs cmp daa cld dec and jo jne repnz mov dec cwtl movsl stc mov hlt fsubs push mov sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 ret and mov arpl enter (bad) cmp scas sub or mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 ret and into scas arpl enter aaa xchg cmp pop push adc jns inc jl test mov push in push jne bnd arpl pusha push cs cmp add add fnstsw (bad) insb xlat pop sub fidivrl pop cli adc loopne dec nop sub push mov (bad) popa ljmp jg pop scas adc ljmp dec scas shrl mov mull sub pop cmp cmpsb das insl inc loope push jge push adc jmp pop rorb test in sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret ret and fisubr fstl cmp pop rcrl jecxz data16 mov sahf xor cmp inc pop or xor push cs stc mov sbb add (bad) jo fdivrl or aas lret mov cmpl sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and mov imul pop pshufw xlat ljmp dec adc int3 dec call loopne mov mov mov dec insb xchg mov lcall flds push xchg mov (bad) push cmpsb divb lea inc mov movb cli xor jp lret mov adc xor fmulp push jns shrl jno cwtl in mov out cmp nop xor (bad) mov icebp push ret or xor jg rcl sbb push bound xchg jecxz or pushf in shll xor call cmp push xor fst jae lahf outsb test cmpsl cmpsb mov out int mov push pop mov fmulp nop out aad jb push int leave jl pop lcall sub cmp lahf push add mov aam mov lahf fcmovb cmp cld fs cmp in jae mov pop dec xor xchg dec and mov pop mov and mov xchg push out xchg cmpsb lods push jo cmp cwtl inc sub dec pop scas cmc xchg add or movsl lret and std pushf mov out mov stos fistpll das push mov pop mov adc out mov fldz jae fldl mov jmp cmp adc mov sub jo mov pop lea inc xlat lock faddp in js fisubrl add inc jl ret sub mov clc cmp mov ja sub push push lret and gs aad adc int out bound sub hlt and adc clc in push xchg sbb loop test in push sub jle movsl sti es push mov mov addr16 in and sti and imul lock xor fcmovbe movsb xor stc lods lret fistpl aad sarl and mov in movsb jle rorl ds or mov ja mov jecxz xor pop scas xchg insb inc lods jno xchg mov jo cmc mov (bad) xlat mov stc je push mov dec fsts pop jmp sahf movsl mov inc dec repz mov arpl sbb test mov (bad) xor or fsubrs xor cmp lahf lcall adc mov (bad) jl mov push cld dec mov into (bad) push scas inc or xor sahf fsubs push pop mov mov pop mov pop leave xchg adc and cmpb into mov xchg fimul inc cs mov call mov add sar or adc int pop xchg je cmp imul icebp mov xchg jne popa popl test push sarb cmp divb movsb inc gs iret inc or jb fs lahf xor mov mov pop int3 out ds and adc mov (bad) mov push mov xor insl xchg xor mov jno pop add push aad out (bad) pop mov or (bad) mov jecxz jl push int3 inc pop movsl xor lahf mov fwait jg cmc jnp mov test and popa (bad) cli lret push cmpsl add leave (bad) lods lods (bad) and mov in inc mov (bad) push sbb and adcl mov scas test imul xchg js pop cmovnp pop pop and mov push push stc mov mov repnz je mov (bad) sbbl rcrb sbb out mov ss cmpsl loop or or mov xor hlt int sub jno data16 mov cld ret das out bound jge icebp ljmp (bad) mov push mov mov ret mov mov stos aad mov insb inc mov jmp inc xor nop xchg inc aad lahf push ret jp bnd xchg cmp or xchg or inc iret cmp test push int3 push fcompl dec jbe insl or dec ljmp push or mov sbb loope stos iret mov jl and cmp sub (bad) std jmp push mov cmp stos push fisubrl dec pop adc and mov xor mov fcoml xchg push jnp lock add test cwtl push mov inc mov jb sub mov mov aas aaa cmp cmp mov mov (bad) mov enter mov xor xchg rcr jne int3 std or xor call out in arpl popf lret or xchg loopne push mov sbb add and cmpsl in mov dec pop cmpsb mov mov int3 inc push and stc push cld xchg jp aam roll xchg sub push cmp jmp loope jb sub cltd mov in movsl cmp adc notb mov mov loope mov out aas xor pop xlat push sbb pop and call shr stos mov (bad) pop scas in jae mov (bad) sub fdivrl arpl xor inc inc push aas cmp xchg xor aaa lea mov lods inc push or xchg es pop mov jb and je mov ret jecxz xchg jno sub rorb inc pop mov dec xor aaa je cmp shll sub imul jns jmp mov fnstenv xchg cld push andl test sub int lret inc mov (bad) das sbb push mov xchg daa (bad) sub pop xchg in lock (bad) dec mov inc add dec int3 mov jno xlat stos jge and xchg int3 call (bad) stc in add add mov dec push es scas sbb data16 or mov lock sbb mov mov fbld ja mov movsl pop jp sbb or lds jle mov pop jbe shlb jp jle (bad) in xor dec jle jae,pn jg cmp inc adc mov or (bad) (bad) mov cld stc subl clc ficomp out sub out mov push and pop pop (bad) sub cmp incl cli (bad) fcomip into and (bad) rcrb cmp icebp add cmpb ja mov mov (bad) leave jl pop stc ret xchg data16 rcrl movsl inc xchg or jnp pop or push add dec cwtl imul mov cmpsl aam or aad mov dec pop xchg call (bad) pushl enter test outsb je push push into clc sub cmp add push test out mov push jae aam xchg adc xchg mov mov cmp push cli jns xor js lods lds lea push cmp flds movsl movsl xchg insl imul lret rclb xor or adc cwtl push mov out dec inc pop adcl in (bad) mov sbb fildll inc repnz push jl mov lahf insl (bad) call adc xchg inc dec adc in int3 in sbb cld cmp das and test cmp hlt add aam enter pop push negl cli out cltd int nop push pop mov mov xchg xchg pop mov or mov pop pushf popa in insl (bad) mov nop add lods xchg insb adc mov stos mov pop arpl pop sub je push push mov (bad) dec add scas ficompl push mov stos fsubs jle in fwait gs aad or xchg jmp outsb insb out lods cld lahf ljmp push mov leave or vpsubb dec aaa lds inc add test add ret ja push xchg aas out add repz push fcmovnbe fs jnp xor and lret hlt inc mov push mov repz rcl orl mov add clc (bad) push ljmp div push push mov divb xor punpcklwd push iret sub (bad) nop inc jp pop mov jmp fidivr sbb jno bound inc lods adc fwait daa les clc (bad) sub mov inc fldenv insl dec dec sar sub xor out pop dec pusha jle inc cli cltd cwtl mov dec cmp push mov mov push sub mov nop fsubrs lock mov or sbb mov mov aaa push mov inc in sbb cli xchg push loopne aas mov repz insb jb (bad) jo and xchg sarb (bad) add rcr aaa mov xchg xor push xlat jl loope popf (bad) cwtl mov pop xchg cmp or test ret leave push das sti out push fidivr add scas xor mov sbb sbb or dec mov xchg cmp fcomps roll fwait mov stos out repnz mov cmp mov pop ss dec je scas daa jbe dec xlat ds orb mov sidtl jp push inc jge dec int mov and test jmp out jne cli mov adc push mov cmpsl scas cmp std iret loopne pop inc push imul ljmp outsl push int fsubs adc dec jo stos cs mov jae ret and xchg sbb pop push and daa in pusha push jns clc or xchg push xor insl ret test push fiadd push shl sbb mov push sub and dec dec sub xor in stos aas pop lods add aaa cmp mov js mov cmp pop jns sub (bad) push or xchg in mov lahf stc jl mov ds sahf push pop cltd inc bound call or pop mov mov je imul xor shrl std or clc mov js icebp shrl insl push adc jecxz and mov mov adc stc popa movsl or push (bad) cmp mov xlat aam mov sahf icebp adc sbb push pmaxsw sbb movsl lret pop rclb adcl xor mov out sbb pop fwait aad cmpsl xchg je push fndisi(8087 sti cld xchg rolb cmp aaa mov inc jg bound xor push push mov (bad) and cwtl sbb dec (bad) dec in cmp jbe sub adc jg outsl mov xchg mov ret in out xor loope fisttpll shrl and sbb mov and clc outsl push lret and nop push adc add xchg cmp xor lods mov scas (bad) ja outsl sub jp outsb xor sahf fsubrs ds lcall lret scas xor arpl repz adc out xchg ja cmc mull mov ljmp test push add insl xor aam mov push push insb dec cmp mov (bad) mov adc add pop and xchg ja rcrl nop addb adc sub in cmp or (bad) sti jne lock or xchg (bad) jle lret mov sbb cs cmp testb mov mov jb out in push xlat push mov lcall dec roll mul push pop insb or movsl dec push jb jae xor repz sub lret sub xor repz test insl dec out ja arpl fmuls scas loopne and iret jl pop clc mov xor int cld scas in iret insb mov (bad) sbb or adc inc stos lods cwtl xchg std ja hlt mov scas mov bound loopne push dec sub scas into jno cmpsl lock or mov enter hlt inc lret fwait mull mov stc mov mov movsl mov les mov sub in add dec push pop pop outsl add (bad) in fdivr pop inc cmp je inc add push mov test push test mov add pop (bad) or and mov lret inc scas mov enter cmp imul clc jns movsb xor push ja mov fs pop mov jb test push cmp xor imul cs and xchg mov or push int3 sbb stos mov cmpsl faddl cmp popl jge mov or ficomp popa inc mov mov inc adc stos sbb mov add pop sub inc mov loope inc inc mov and test int sbb bound xor mov and mov jl mov push daa sub sbb rclb push call in jnp lods xchg jno adc lock insl jge mov loop mov mov sub xorb push lret push sbb dec push rclb mov fsubrl cwtl push or xchg cmc jb (bad) lret lcall jno or jbe orl (bad) sub cmp add adc lods push scas scas jbe xor adc xor mov xor das sarb jbe jl out jecxz mov add cmp and jmp mov push dec cmp pop push out and mov cmp xor or or fwait dec push ret bound sbb jns in (bad) mov aaa in mov sahf mov inc xor or xchg (bad) repnz out xorl mov sarl jecxz sbb gs addl cwtl imul mov jnp xchg (bad) mov bound sti push sub inc pusha (bad) in jge adc inc adc ss daa shrb fsubrs lea (bad) mov movsl ljmp pushf lods std pminsw jmp jnp cmpsb and xor mov mov sti inc imul mov cmp adc mov fsubrl adc inc clc mov xchg bnd add jne jbe inc (bad) mov in push pop or mov xor lahf jns sarl xor addr16 add (bad) xchg mov rcrb xor fiaddl out mov imul sbb and sbb pop lods test push and aaa mov test xchg dec push mov xchg int3 inc leave out push sti and test enter mov shlb and add testl data16 gs test jecxz mov fmul xor lods sub lock (bad) mov fisubl lcall jle cmp sbb idivl lret pop loopne xor sub icebp aaa cli xor iret int3 sbb fildll jns inc lea adc adc arpl adc shrl cmp push sbb push mov jo movsb lahf add or jp xchg (bad) sbb (bad) or xchg and and pop test (bad) fidivl mov in out mov inc out pusha sbb ss or popf (bad) adc xchg sub jge stos nop xor jns fs pop adc dec add sar pop adc (bad) aad lret sbb inc sub pushf sbb fidivr in fwait notb inc push pop and cmc add inc cli jae xchg inc xor jp inc mov in cwtl adc xchg std push sbb and cmpsl jl stc jecxz and xchg dec sbb aam push cltd inc rolb or ss shll ret and pusha lcall mov fwait and xor fsubrs and cmp lods jp cmp scas in pop mov nop mov dec in lret testl add (bad) scas cs sub add jbe das je (bad) aas outsb (bad) jmp inc inc rclb pop adc xchg pop and popf cmp lret rolb cmpsb rcrb xor aad inc leave mov xchg pop inc cmc jge dec nop push arpl mov aaa arpl push xor mov in adc imul dec imul movsl stc cmpsl sub push xor cmp push cmpsl aam loop cwtl bound sub hlt int sbb and cmpsb mov das jns sbb adc unpcklps sbb lods mov jb mov pop repnz lcall cld mov and xchg shr fstpt jl insb xor dec pop inc push xor cld mov xor pop pop fwait mov inc data16 mov imul cmpsl push push push cmpsb cmp stc mov insb lret clc xchg inc outsb lds lretw sub inc mov addr16 mov jl mov inc pop (bad) pop lahf pop xor test int icebp pop mov dec scas popa sub jmp push adc dec xchg pop aad aad movl dec (bad) in or enter or call add lret lds js mov inc cld add fidivl inc jbe mov mov cltd cmpsb xchg jl pop xchg out adc or dec sub test orl lods leave test (bad) mov sub add cwtl fs inc test jp,pt adc dec repnz js jne inc add inc das and mov (bad) std out popa jecxz cmp pop mov push lods sub shrl popa call dec out mov bswap iret inc jmp and fdivs lds jle adc lret je lret dec push orl loope mov addr16 dec xlat cltd sub push mov and pop jle fucomip stos or lods cmp jmp sbbl sub sbb iret mov stos popa xor cmp fmulp lea (bad) cmpsb push mull (bad) sub test fild or add xor cmp in popf rol outsb mov pop mov fisubr and push es add push hlt xor sahf and sbb sbb jb push pop fcmovnu sub mov push hlt je mov jmp es or popf sbb (bad) jns xor push call lods (bad) (bad) dec xchg ljmp aaa (bad) sbb fsubrs mul push inc (bad) mov addl inc es dec stc sti sub mov push xor out pop inc imul cmc ds mov ljmp jne push mov mov out sti push arpl add and sub push rclb daa cmp scas inc and gs push lods dec push (bad) dec add subl and or hlt outsl sub aad push fstps mov sub cltd jnp ret mov pop ljmp addr16 movsl pop in or sbb xor loop adc sbb mov movsl mov pop jns sbb push movsl pusha int3 mov (bad) or add js cwtl into or enter stc pop iret jo sub add xchg lods push clc mov adc loope mov jne movsb cmp or xchg dec cmpsb xor jp mov inc inc (bad) imul lock in mov movsb push mov xchg lods mov push add push mov cli sbb xchg out xchg cmpsl subl and je dec or fist sbb and fld push mov jmp dec inc mov loope xor push call call add lret jns sarb ljmp roll pop inc jp (bad) push pop inc (bad) aam repnz les or jecxz,pn dec adc adc inc cmpsl (bad) scas pop sub decb push insl add sarl and dec outsl pusha ret fs testb mov flds lret push sub add ss incb inc xchg cld mov outsb pop or loopne mov sbbl subl out jb ret and pop std mov js inc cmp sarl cwtl push repnz test test mov scas mov cmp add lock and push pusha xor adc push cmpsl call test jg lock scas insb mov fwait movsb stc mov mov pop lods mov call dec bound fiadd push test push repz xlat jns sarl inc and mov daa sti mov jle sub (bad) adc mov pop clc ret std sti mov dec push sti pusha lods push push mov add das mov jmp nop fdivl dec inc jb xchg jge push loope or inc cmp (bad) loope or es shrb test out xor push (bad) insb (bad) repnz (bad) adc (bad) icebp hlt lea ret adc scas ret pop test gs sbbb xor push stc imul (bad) mov add add xchg repnz xlat jle rorl mov mov outsb or pop push hlt mov aas aas fildll outsl push inc jo xchg dec hlt inc xor cwtd lret cmp leave cli xchg dec shl xor cmc fstp pop add pop gs cli lret push sbb fstps pop mov std fs or mov hlt inc pop fstpt jne hlt cmp jns mov les in sahf repz add add mov push leave add sti addr16 add xchg rorb (bad) fnstsw aam push sbb mov mov scas lahf jg sub jge adc push inc xorl jle add jp adc push jmp jne fstl aam insb pop fstpl sub xor mov daa adc lea frstor cld cmp movsb sbb mov mov or inc rol call lods pop xor and ds mov shlb pop add push cltd pop (bad) sarb ret xor push lahf (bad) aas and in mov and sar add jle sarb and addr16 int push dec ljmp push add hlt mov jno cs xor fcmovnu inc lock xor mov xor sub adc sbb xorl jge notb xor lret dec (bad) mov or or test jmp scas push mov in inc mov adc and fidiv dec (bad) imul gs add addl pminub jmp jecxz rclb clc popa rolb mov movsb and lock ljmp out mov jmp cli mov test je xor and sub mov (bad) mov xchg adc hlt int rclb lret das outsl fiaddl test clc dec mov aam jae jle (bad) fistpll (bad) ljmp (bad) dec push xor or fwait mov in push les pop fstpl addr16 mov jp pop movaps push add fistl fild xchg push adc push aaa mov jns in jle movsl out or fdivs arpl cmpsl bound jnp lods xlat movsl and shl idivl int andl xchg neg mov popf mov push addl fcomps lods mov outsb stos popa pop popf mov mov inc xchg and jo push jle arpl jne (bad) rorb xchg inc rolb pop cld dec out fistp xor jno js xor and repnz int3 pusha cmp dec in scas add movsl fcompl sub pop xor popf repnz std mov or and jge jge or popw adc out jb mov push into and mov inc jge xor movsl cmp xlat adc mov mov in jle sbb fsubr dec add orl mov out and sbb pop cmp ret sbb sbb xchg inc lds scas pop cmpsb lock rep sbb sbb mov and sbb insb dec pusha popf arpl nop jle pop push movsb sub ret pusha scas ror cmc stos data16 and or outsb sahf jo lea cmc xchg or inc xchg in (bad) aas in push cmp insl aas std call dec daa fsubl psrad inc xchg icebp adcb iret xchg cmp and aam icebp jmp xor mov mov mov cmp sub lock add repnz fs pop sbb subb outsl out cs idiv into pop inc mov dec out jbe fisttp dec pop sar call mov punpcklwd pop jb (bad) cmovp dec mov sub xchg inc mov mov test inc rorb add ds mov mov jb int or rcrb jmp cmp scas shufps or loop cmp push cmc dec pop in pop data16 rcrl push mov cmp lods adc mov add jae insb pop imul sti sub pop xor adc addr16 mov jle,pt mov dec fcomps in out int3 mov js ss test pop scas orl pop rorl out lock rcr jae dec mov outsb sti mov push pop jecxz mov (bad) jle out xor adc popa movsl or lock push sti addb cmp xchg test js out mov leave lret or (bad) nop insl push jnp test push nop ret sbb pusha gs xchg mov pop dec push in outsb je sub jne nop popf fidivl add repnz shlb clc faddl pop scas sbbl or jns xchg (bad) dec cmpsb lods lahf mov sbb add push jmp xchg push push mov push push xchg hlt jp popw ss aam fsubl mov jle int inc xor sahf push xor jmp push enter mov cmp jnp dec push sti (bad) lret cltd imul rol sahf cmpsb xchg add cmpl and mov mov push lods mov push xchg or outsb mov iret mov mov cmp cs aaa movsb cmp dec aaa sub aas jg std xor iret sbb xor fbstp adc xor aam and and popa rcl mov xchg jle repnz add xlat push mov gs ss dec loope sbb and cmp pushl mov imulb rcll jl (bad) jb lahf or aaa xor pop adc movsb push sbb cmp (bad) out out out dec or or and rclb dec loope dec outsl jae loop aas dec push jno jnp fwait cwtl popa movaps xor imul add ss or and stc jne pop mov mov out mov ja mov aam or das xchg push insl adc leave mov xor (bad) es cld (bad) mov pushf cltd sahf int3 adc push ljmp (bad) repz sbb jmp into shrb (bad) jl pop arpl mov ret sbb ljmp gs loopne push jmp clc or out xchg lahf stc jg mov xchg or out (bad) pop mov xor int3 push xor test loop or xchg push aad fsubl xor insb out lods (bad) push dec out adc inc out test add adc lcall addr16 inc mov icebp mov add out inc sub cs inc mov cmc lahf cmp pop mov pop mov mov into push mov pop fwait pop sub pop pop xchg fidivrl mov jecxz rcll stos inc out mov movsl inc cmovo inc in inc mov xchg imul mov andl neg add pusha or movsl leave orl mov aam clc xchg outsb sub jb jle or sti (bad) mov push pop or ljmp scas jle and imul (bad) movsb sub xchg icebp (bad) iret push lahf cmp aas mov pop mov aad lea jb cwtl (bad) bound lcall stc xor ja mov pop pop (bad) mov sarb push push cltd icebp out repnz pusha sub adc jae aam mov pop jae mov xor std adc xor sbb (bad) mov dec xchg data16 out lret add cld js pop mov jg mov (bad) sbb sbb imul add (bad) mov sbb sub dec lods cs or sub fcoms sahf jo mov adc jno lea popa jbe repnz data16 cmpsl mov xchg xor jae mov mov ja push lds add add adc xchg out ret cmp jbe adc sbb icebp hlt and outsl lcall dec std outsb nopl or dec pop pop out jp mov lods lods shll mov cltd sar inc lret mov stc (bad) mov xchg sbb or (bad) test sbb push movsb or sbb dec or adc mov aaa ja ljmp dec cld call jp xor imul jno inc mov jmp mov or jbe lcall jo add nop xchg mov push push icebp std leave pop inc push pop jecxz add movsl mov inc cmp xchg mov sub in push arpl fcoms add or adc aas outsb mov ljmp outsl enter pop bound sarl adc mov mov sub call jl sub cwtl jns mov jne pop cld (bad) mov or ret and mov lret adc jmp mov cld push mov sub push mov sbb xchg mov out mov jmp hlt (bad) jnp sahf js std xchg push fnstenv clc mov ja mov mov add or jmp aam xor push (bad) icebp add rcrl xor sub mov push mov in add aas aaa xchg test fsubrp adc fadds les xchg insb mov push adc pop call cmp add mov shrl xchg jmp bound fs int (bad) mov into cmpsl arpl adc nop insb fildl mov pop xchg adc xor push add aas cs das sub int ret xchg mov xor js rcrl fs jae fsubrs dec mov inc popf and mov and adc popa lock xchg lods inc pushf test add lock cltd loope rorl shlb push std outsl push xlat (bad) std into es dec bound aas cmp outsb stos xchg loopne push jg (bad) lds rolb cld cmp outsb jbe mov mov arpl out fs pop (bad) dec mov xchg sbb lcall mov in (bad) mov imul inc push aas inc out lret and jb push pushf fstpt xlat xchg mov sub out daa loope mov cmpsl test jns jp lret or xchg cmp sahf shll push jg lcall sahf (bad) mov loop dec jp cwtl push (bad) jns mov outsb jl hlt pop dec imul les outsl push jb inc jns jl sub movsb adc sbb sbb test fidivl (bad) in outsl sub dec jge icebp inc inc std mov push jb push xor xchg sub dec mov lock lea js mov pop ret push or pop pop dec mov loopne shll dec mov dec fistpl ss js sbb gs ret cld (bad) lahf loop sbb dec dec or adc push sbb sti pop gs in mov scas es jae add inc push push (bad) out or xor mov dec stos ret je data16 jge in push inc cmp cmp cmp xchg mov sbb arpl and jo movsl sub notl into inc push (bad) mov (bad) (bad) and fistl and xor pop leave popa insl push sub fcoms dec cmp add add xchg dec xchg out adc inc arpl mov popa daa cli sbb xor frstor push dec mov mov jmp test mov sbb mov mov mov dec add subb sbb xchg or sbb sub jmp icebp push into mov or pop test movsb je stos ss frstor rolb loopne cmpsb clc jnp push or mov out lcall loopne sbb mov and std mov pop cmpxchg and fstl dec sbb xor addr16 std mov stos mov repz arpl fisttpll icebp aam adc pop dec cli dec outsb pop xchg xor jbe push scas cmp push mov cmp fistpl jecxz adc mov jmp push ljmp lea xchg xchg hlt pop in or push dec mov mov pop js mov data16 lea stos in mov insl jle mov push push pop add pop jno cwtl sbb cld js push lahf jbe xor out adc xor mov push fildll push scas xchg sub mov add loopne cmp or sub mov fsubl loope (bad) and (bad) mov mov and push jb and ss call mov in out addr16 mov (bad) aaa xchg repz push adc dec mov leave xchg xchg add pop fwait fs jne in and cmp sub mov jmp mov xchg dec pop rcl dec aaa xchg xor cmp xchg and cmp in sbb xchg outsb es fnop mov fbld cmp or pop xchg xchg mov inc sbb inc and std cs (bad) je hlt mov xor adc pop mov xchg xchg mov mov mov xchg adc push inc addr16 ficomp xchg mov xor sub out mov lods in inc ds (bad) lds pop sbb mov lock push int fistl jns add lret loopne mov push adc jmp and jg test dec mov pop xor dec or cmpsb addl push cmp fdivs js je or dec shrb aam movsb mov pop pop test shrb mov and neg (bad) and jl or clc rcr mov cmp pop sub je add jae aas mov add aad lahf push inc outsb inc sub test scas xchg xchg (bad) daa movsb jecxz movsb push shl lcallw subl je mov ret popa jmp div rclb in add mov mov sub test and lret imull fldcw mov outsb mov dec mov or inc aaa rcrl aaa mov sbb sub push fsubrl stos fwait push adc mov or sti push xor out sub test call stos out dec xor and fnstcw jle jmp push xor in lret add movsl lret iret lea pushf inc pop mov pop andl aaa stc jle or popa mov ljmp jno push (bad) jo dec add test mov push aam lea xchg sub scas inc pop (bad) (bad) sub in repz push mov mov inc jmp mov mov sahf pop mov mov sbb xchg shrl and fs push out jb mov aad mov outsl and mov jae les add jns jl adc js or js jae cltd pop jno js mov mov jle mov rorl sbb xorb sub movsb out pop fstps and jae popa out mov sbb xchg sub rcrl jns mov (bad) xchg push imul inc sbb mov repnz add mov dec insl push data16 jmp mov ss fidivr jmp arpl inc push lret mov mov pop pop pop xchg cmp push xlat or loop daa jo sub in addb mov jge insb and dec outsb arpl xchg adc push mov sub ja xlat (bad) cmc popf loope insb aaa sub (bad) (bad) or enter insl or inc fwait cmc cld jb addr16 and jmp xor scas jl leave dec popa push js mov xor inc (bad) rcrb xchg and movl adc cmp lods add movsb ja movsl sahf loope cli sbb loope (bad) ret dec and mov loop adc jg pop jns inc sbb icebp iret mov push push mov cmp sub dec xor dec out lods fndisi(8087 cmpsl aam lret mov aas loope fiadd push sbb pop push mov add or push push out out out push and and or xchg daa (bad) xchg dec insl sbb push sbb outsl stos dec mov mov loop pop dec mov jno push mov cmp es lods add sub bnd scas enter cmp rclb mov lds xor ds js push ja ja ds (bad) sbb push or test and aas fidivrl cltd ljmp xor mov dec stos pop (bad) js jge js pop nop pop sbb sub cmc arpl nop and pop in lcall shrb push loop outsb (bad) rorl imul mov and in mov dec fwait push rorb push test loop jecxz imul imul mov (bad) xchg iret notb or mov repz jecxz adc cli jo mov call lea inc xchg mov sub orl dec imul aas lahf aas mov jp sahf addl clc sarb push xchg jp jl fldl xchg push cmpl fcompl dec cmpsb and imul outsb cmp pop pushf negl loope add fidiv and sub int push call sbb sbb sub xchg ret jecxz mov (bad) cmp xchg jns inc adc sbb jle xor dec int loop testb pop inc mov xchg mov add repnz cli jae bound push push inc sbb push sbb jl push push out xor in in (bad) jne jnp adc push inc outsb cwtl inc ficompl or aaa outsl xor (bad) jbe jae into lods lahf xor and stc add push stc jp jle enter xchg xor add mov xchg outsb add cmp pop mov ljmp inc mov out and inc xlat adc (bad) mov out xchg push sub popf inc and add addr16 mov shr repz push jge pop mov mov push daa mov or sub adc add rorl xchg xor add (bad) jno jmp sub jns adc mov pop or bound (bad) scas rcrb adc dec outsl push scas sbb sahf xor (bad) insb xchg cmp sub or (bad) dec movsl leave hlt add pop dec jl lret lahf inc addl inc and call xor mov popa popa pop mov push ret es sub mov xor jb pop mov dec imul mov jecxz dec outsl (bad) lods sub aad or ljmp negb (bad) lcall and lods out (bad) fcomp scas in xchg addr16 fstps (bad) fldt or leave sar add xchg dec and cli cmpsb mov leave lods (bad) rcrb mov mov inc jl or stc movsbl sti lahf sub push sbb dec push dec sub xor or js lea repz jb or pop push pop stos xor repnz iret aas push out cli or dec es dec les lods xor loopne scas shll pop popf cmp adc mov add mov in add inc int pop adc sub (bad) xchg mov mov subl lods push scas iret fldcw pop xchg repz rcrl out pushf mov mov push (bad) js mov adc cmp push out pushfw arpl pop xchg sbb push cmp scas jne lds rcl inc ret adc cltd cmpsb (bad) dec inc pop outsb pop adc xchg jb jne cmpsb cmpsl jns sarb xchg je stos addl loopne fstl mov out lea mov int3 int3 inc push cmp andb adc ficomp jb xorl xchg pop mov inc shrl fnsave mov popa pop loop out jne adc mov xlat mov ss iret sti mov fisub mov call int3 sbb ret jbe dec add pop cmp xor stos gs xchg lods dec push out lods in jmp imul imulb addl in and das ret cli call loopne das out stc rorb add out lahf out inc ret xor outsb xor inc shlb dec fisubrl mov add adc movsb leave xor mov lahf outsl in loope dec jl mov call xor xchg and adc mov add adc pop test pushf not lret mov add lcall jo ljmp jns mov push cmp push fcmovne in jno add sbb or test adc (bad) mov cltd jmp les fstps sub mov push (bad) xlat dec flds xchg ss notl std mov sbb xchg movsb push push loope popf sbb inc test cld lods mov ret jmp movsl and xchg dec inc xchg (bad) mov push insb fsubs rcll adc xchg or sbbl out fadds sbb xor push ja stos or test add pop mov pop xor movsl clc aam test clc leave stc ret mov mov popa mov mov cwtl cmp sub (bad) sbb dec cmpsl inc inc fnsave mov repnz adc mov ja mov mov dec dec sub sbb loopne inc xchg pop sbb lock fiadd pop (bad) mov xlat out aas das adc pop sub outsl test sub dec mov fwait ret jbe push (bad) jae aaa pop cmpsl pop and pop clc adcb and fwait pusha out cmpsl (bad) pop rclb loop mov add lahf jo repnz fisub xchg and repz sub imul lods dec mulb mov loopne cs push mov imul pop sub sub fwait inc inc dec jb adc or fistp loop xor mov xor insl dec add sbb mov cmp lret movups mov mov and pusha int ficom icebp pop (bad) arpl mov mov stc sub inc xor jmp scas mov adc cmp mov out mov add xor fldenv aam jmp (bad) call or sbb ds mov xor in mov jo pop es data16 repz mov out sbb ljmp mov xchg add xor dec (bad) and mov add roll fbstp pop pop sbb leave xor xchg and test sbb ljmp pop (bad) mov (bad) (bad) out sub jb inc xor inc fstpl mov (bad) int pop stc ret mov jge jnp inc int3 icebp rorl int3 hlt rcrl dec (bad) sbb ds iret mov mov repnz scas push cmp add int3 sbb int3 or xor lret insl scas in inc mov pop insl and mov js imull sbb call add (bad) xchg test mov fisub xchg pushf mov enter sub push imul repz out inc flds aad (bad) cmc rcrb xchg xchg mov adc sahf mov (bad) outsl in xchg fldt pop outsb lds enter (bad) push or mov push mov movsl pop bound jge cmp jge in int dec fwait test push push scas pushf jno ret jo xchg dec test push test mov push movsl cmc add outsl sub mov mov xor insb lods aad jo popa xlat xor jl sbb loop push lea cmpsl stc add inc jo sub in fbld pop (bad) dec and jp out test mov (bad) mov test and jmp lahf xor (bad) push push dec lret xlat imul movsb fbld cmp jp dec push movsl in mov mov movb out data16 pusha test call pop xchg rcl in sbb das xchg hlt (bad) in fisubrl (bad) cmpsl adc insb jp mov xor data16 mov mov fildll jne hlt stos sub pusha outsl jp (bad) xchg fnsave adcl bound add mov leave mov inc lcall mov xor jl adc cmp adc xlat jg fcomps jne int3 daa cltd adc pop (bad) (bad) mov (bad) jmp outsl fidiv rclb fnsave jmp dec mov lahf aas dec loope sbb sub fimul lret xchg (bad) loopne mov push and (bad) clc sub jge es orb fsubrs or or dec pusha ss mov aas push xchg ret imul jo scas dec push outsb jae loopne loope mov jae popf and lock jle adc (bad) cld popa fs (bad) jne jnp add or daa jns xchg pusha adc pop stos in jl inc imul ror iret cmp cltd mov xlat mov push jmp mov cltd mov out push xchg aam imul inc popa mov sbb mov movl inc pop in dec xor decb cmpsb or out adc xor popa or add pusha addr16 cmpsl xor into and add fildll (bad) push aaa dec (bad) inc mov out into mov insl cwtl popf mov mov pop sub push inc pop jle int xchg loopne or gs xchg call call push xchg jb inc (bad) mov leave fidivr xchg push mov cmp js xchg movsb (bad) mov inc mov xor adc pop out scas (bad) jne cmp and mov xchg jl sbb adc int sti xchg push xchg or sbb pop sahf ljmp in hlt jecxz jl cmpsb mov jo dec add ret stos (bad) in xor and stos les adc add xchg das jle ret and dec push lods add out mov pop jmp arpl inc pop dec xchg sbb push (bad) loope sti ds adc push icebp lea mov xchg enter inc std sbb cmc sbb insl pop jmp loope ret mov push lods inc cmp loopne jmp lock loope xor pop xor lods ficoml in cmpsb sub in mov xchg mov sbb sahf fisttpl loop popf test cli sbb outsb cli and cltd mov dec loop pop imul pop mov daa or and sub int3 inc mov outsl xchg (bad) mov or xchg pop pop fcmovnbe sub fdiv add jae cmp or xor sbbl in sub sbb mov dec iret inc pop jmp or add push mov cmp test arpl cmc adc (bad) std adc sub mov fisubrl (bad) dec mov cli xchg out or repnz lds out xchg mov pushl mov divl push sub stos dec in inc rorb (bad) das mov mov mov cmp lods or mov out rcr ficoml pop push cld aad or push xor and jp dec pusha aad hlt out xor leave cltd cmp iret push mov or popf push aam xchg daa inc mov js xchg jnp pop dec mov pop or repz sbb in inc push js jmp scas mov push (bad) sbb cmc out lahf stc push xor or xor adcl pusha jp xorl mov notb xchg cmpsb push sbb fstpt ret js out pop aaa push rorb mov inc mov sbb insl (bad) cmc jmp or inc test jge dec in out test mov mov mov cmpsb jge shll jl (bad) cmp sbbl mov add jge clc pop pop mov mov jmp jae enter xchg nop jnp in push std sahf enter mov js adc cmp movsl popl pop popf dec in adc cs nop fwait dec mov out push stos arpl push or inc in fcomps sbb hlt jo je (bad) lret pushf and stc sub xor (bad) addr16 dec lahf aam lcall inc cltd lock dec mov sub shrb data16 cs int add mov in jo jge mov test push inc scas inc sub ds xor and pop or mov jmp lss sub xor ret imul xor in in or jbe aas add mov mov add xchg stos dec ja (bad) mov inc lods negl pop aam cld jo jecxz sbb mov push mov (bad) lahf sbb sahf mov push es xor sub stos pop adc fdivrl loop out inc insl mov inc mov pop mov mov push loop push stos push pop dec mov cltd pop iret rcrl adc mov leave pusha lock and loop pop ds lahf inc and leave (bad) sbb pop test loope ficoml and mov stos jp mov and loop imul or adc pop dec inc into or xchg ret mov movsl push xchg iret sti push xor and jb ret jo xor out inc test jle fsubr mov and jge enter lods sbb popf call cmp mov and push in inc stos jb push push ss ss fs pop add mov push jl xlat xchg mov stc sbb mov mov outsb mov sbb test lods (bad) xor mov sbb gs xchg mov mov pop push adc in or pop fcmovbe andl arpl mov or fucompp jmp nop pop cmpsb out jecxz cwtl adc cmp loop add in lcall outsb (bad) rcrl in sbb lds sbb insb test movsl push insb jo cli dec jl add or lea int (bad) inc and push ret ret push cwtl push ljmp inc mov push test iret cmp sbb out roll xor cwtl jb aad aaa test loopne in xchg (bad) ss lock xchg test lods sti popf test xor mov into orl stos pop pusha add cmpsb out xchg nop fcmovnu pop out jge mov xor xchg (bad) iret sbb data16 lret int movl jno xchg add cltd xchg adc scas and push dec mov in sahf xchg (bad) popf scas cmpsb mov pop sub jno sahf dec or inc cmp and add cltd into mov jo sbb or push mov outsl (bad) add cmp pop sbb cli xor nop lret mov imul arpl mov sbb lcall sbb lods mov dec int add mov roll jl icebp daa (bad) imul imul push test jecxz lcall in or dec sti mov cmp dec push rcll je pusha cmpsb xor xlat mov mov (bad) mov enter imul jno (bad) mov lock add sbb les mov sub inc lret and xchg xor sub stc mov push xchg repnz rclb loopne jb sbb cmp sbb sbb mov inc dec mov clc sub ret popf dec sahf movnti sbb lret jns fidivr fwait inc test adc movsl pop pushf push jo jg fnstcw dec nop pop call rcl push xchg cmp jo,pn mov inc stos lods aad lret inc (bad) lods or lds mov out (bad) pop fdivs andl mov mov lret xlat add (bad) lock mov adc xor dec inc test aas mov (bad) xchg add in add repnz ret test movsb mov mov mov (bad) imul jmp or loop popf xchg dec dec push sbb jns push sbb cmp sbb sarl in and loop jecxz adc daa push push pop stos jg in cmp mov enter outsl mov in jae jno nop adc sbb (bad) pusha nop mov loope sub pop ja add mov js aam mov popf or mov ret lock imul cmp fimul sub pop test cmp inc add int mov jbe daa push mov repz push xchg mov (bad) mov (bad) lods adc jp mov sbb mov push and popf repnz daa pop inc out pop aad or cs mov je jb rcll mov jnp cmpsb lock mov clc jg add idiv pushf popa xorl jge lea jb out adc das jmp inc das sub sub gs and loop mov (bad) je test jp cltd and pop jno je push add mov mov sbb leave enter ret xor aam ljmp xchg pop ficoml push js xchg sbb (bad) xor sub mov xlat std stos xchg push mov gs fldt xlat add adc ja dec pop mov jbe int aaa push xchg or sub int mov mov ret or inc divb dec lcall aaa sub test cmc loopne jb jo mov cltd into in jmp pushf (bad) ret test add shrl mov mov mov outsb es lret push sub add jmp mov xor dec mov add jb adc jmp out sahf (bad) lock and stos pop lcall push mov lret mov out clc leave mov inc or loope xchg push sub xchg xor bound lahf xchg hlt add sbb dec adc push and push out pop push mov sbb sub jns,pn je sbb add pop dec outsb and nop pop fisubrl cmp ret pop ret stc mov xchg test dec lods jecxz cld dec cmp cltd inc ret cmpsb adc jge roll ret xchg dec imul out mov push (bad) bswap xchg cmpsl xor hlt repz rcrb push sub test scas mov sbb fnsetpm(287 scas in mov and scas bound stos mov mov hlt cmp jb test loop mov jp das xor ret jge sub cs add addr16 xor xlat pop fwait inc outsb mov mov mov ja push clc and cmp mov nop das jo shrl out into pop shl or pop lcall push dec mov dec ss sbb mov sahf rolb push (bad) leave aad (bad) out std jne sti xor sub cli mov pop sbb sti dec mov jns addr16 mov fnstsw push xchg pop ja pop daa dec adc mov sahf cmpsl pop pop pusha mov out lahf shlb fadd mov or or pop out in loopne daa out ja je out push jg ret sarb (bad) out dec sub clc ror dec int dec lret (bad) xor insl sub out mov mov bound adc mov jle mov add lds dec in lock fnstsw imul adc mov jge movb adc out inc rol sti in jmp push push mov iret call cltd cwtl (bad) lods dec cli jp fs xor sar pop mov scas cmp sub int mov sub xor (bad) leave push push outsb es mov icebp sarb xchg pop jne add outsl sub insb fldl cmc xchg xchg sti lret mov nop ja jmp arpl inc stos pop dec cmp push lods pushf dec xchg jmp cmc lods pop push divl cmp div jns xchg js mulb (bad) in sub cwtl les repz test je arpl dec test pushl roll mov mov (bad) cmp test jmp loopne and pop jl sbb lods sub aam pop xchg adc test mov and mov shll cmp fnstsw dec pushf cltd inc dec aas aad and icebp ja lret mov in cmp dec bound popa or ja dec xchg cli inc into push dec mov (bad) cs jp stos mov push add xchg dec mov mov aas pop push repz in int push cli dec mov aas xor enter insb (bad) ret roll bound enter mov or jb cmpsb xchg lahf cld dec add mov and push clc inc pop inc and xchg pushf (bad) test sti pop mov (bad) aam sbb stc std scas lock fwait popl rcrl ljmp lea adc jecxz into pop pop mov nop jo and movsl wbinvd sti mov imul adc cwtl mov cmc jae ret sbb push sti aam (bad) lret and cmc mov addl movlps cmp jne inc add cld fildll mov push cltd lgs mov (bad) out jp or int sarb inc xchg pushf xor dec rolb fildll jmp stc jne add xchg pop jp jns adc out bound fsubrs xchg xchg jmp rorl dec xchg lahf sub cmpsl scas idivl xchg fwait push mov adc inc push xlat cmpsl lock xchg dec enter pop mov jmp rcll cmp jbe pop loopne imul inc mov add mov inc stos cli mov mov or sahf inc push aam aam ds js xchg sub mov nop roll std lds sub pop aam xchg rcl ret lea sbbl enter and xchg pop sbb add std cmp or (bad) in pushf cld push mov xlat mov cmp insb xor aad push pop leave dec xor or xchg (bad) fldcw repz xchg sub inc cmp sbb dec pop cmc lods xor cmp add xchg mov out pop outsl fdivp addr16 fcomps pop popa pop fsubrl sbb dec dec xchg cmp and pop cmp dec mov jb sahf add push les pop jecxz push cmp xchg mov aad and cltd mov test nop cmp lret cmp adc test lahf lahf sti sbb sti stos aam fdivrs mov iret (bad) icebp cmp or push cli adc mov cmp lock out adcl dec lret adc cmp sahf add xchg mov sub aas sbb mov mov adc jne,pt sbb out test cltd xchg movsl sub int mov and dec repnz nop out push (bad) jno fwait xor in ja cli les cmp stos (bad) jge mov mov movsl subb jmp push sbb sub popf repnz push mov dec aaa sbb daa hlt inc aaa dec and and insb add cli ffreep imul inc mov lahf aad pop scas ret stos sub out dec mov clc repz cmc cmc add (bad) scas es add add ficomp fdivs mov int3 int3 jl jmp mov add stos xchg ret sub je into sub nop stos cmpl cmp mov xor aam mov pop or jns mov cld ret test fs mov push inc jnp scas mov jmp and hlt repz stos mov cltd push mov add scas mov movsl and aas cmp xchg jne (bad) test inc mov (bad) not pop jbe cs jb pusha or lods fwait lods or mov mov push movsb add mov dec push adc insb (bad) jmp icebp jmp dec lods xchg mov pop and inc cwtl fs loop int pop jne sub rcrb in aaa fcomp cli stos mov sbb and mov mov leave sbb divl pop jae pslld xlat mov clc das mov push xor (bad) je pop push shll pop sti mov sub mov sbb ja jl mov es das push loopne cli test push jno arpl setbe mov pop out mov add loopne repnz dec jmp mov loope dec and pusha adc adc mov int3 mov xor xchg jmp imul and outsb rcll movsb in lods cwtl test jmp dec (bad) in loopne test cmp int3 pop mov pop aad fsubrl pushf (bad) push lods aad popf sahf sbb arpl lahf (bad) invlpg out outsb es js jne cmp or add inc lods xchg out jns and (bad) (bad) mov (bad) sbb and in addr16 mov imul dec sarb fmul nop in pop repz pop sub mov loope and or pop mov dec loop mov lcall mov (bad) out jp es dec inc loop or fwait mov xchg cmp xchg mov ret ds add inc dec arpl scas push adc mov sub adc mov test stc push fldl jbe fisub vpaddsw cltd (bad) add loopne stos imul movsl (bad) cmp push push call bound mov lods insb jmp outsl jle push cld jnp jo xor scas test repz std in fdivs adc clc repnz jge scas pop jp push push imul jnp flds movsb loope jp or mov mov add pop push aaa adc mov dec faddl in in or xor xchg inc jbe shr or sbb dec pop mov (bad) mov je loope out arpl out nop sti mov outsl push sub into jo hlt mov push inc dec add fcom jo mov mov into mov std daa mov or cmpsb and aas rcll (bad) rorb sub and fcmove daa loope (bad) lret ficoml das je or cmpsb ret test (bad) scas xor and jae flds out sub jg hlt cltd adc push mov cmp adc incl mov cmp mov push cmp and and or in outsb jnp sbbl jb mov mov pop jg mov inc repz pop cmpsb pop sbb push imul (bad) dec test andl adc repz out lods adc inc inc ja mov mov call adc mov repz sub scas mov mov and (bad) (bad) ss jge (bad) das lock cli out dec inc sti push pop data16 (bad) xchg sub mov (bad) mov test mov jnp inc push xor jl dec or sbb mov adc imul test (bad) lea xchg push ss cwtl dec push cmp add cwtl cmp or rclb adc mov rcrl and pop sbb dec cmp (bad) pop jl pushf das sbb std ret push cld popa mov sub xor adc ds xchg push nop xchg inc cs ret adc mov mov loopne and adc and push js fidivl mov or enter push jl dec and (bad) pushf stc sub jle ja fildll cmpsl mov jnp pusha and xlat push enter in sbb vcomiss add or movsb add cltd push push and xchg pusha sbb loope sbb xchg je mov push cli rcrl xchg in and je fisttpl jae fmull pop (bad) cltd cmpsb js sub popf scas cli arpl inc mov adc js neg and pop icebp push jg pusha push les fwait mov lea mov std fiaddl xchg (bad) flds decb push js sti push xor inc mov add or or dec rolb inc test sti fsts and or arpl pop mulb jns scas jl sti (bad) sub sbb in mov mov mov (bad) or mov mov inc frstor ja pop loop sbb jmp cmp push xchg movsb sub andl push xchg adc xchg inc push daa cmp pop (bad) pop push fucomi inc pushf and stc scas xchg pushl cmc aad stos sbb sti sub cwtl lret negb loope jb insb fldl loop cmp aaa fidivr pop imul leave mov fcmovne insl ljmp pop out jo xor push in fwait insl aas cwtl lods mov lock ret lahf lds push mov add rorb jae clc aam xchg add inc std push (bad) pop and mov jle xchg cmp xchg testl out add aad push add dec adc js push pusha pop adc sbb fnstenv inc jns mov pop (bad) cmp pop xchg jb pop out (bad) cmp jne pop in adc inc push jle test enter inc adc or dec push icebp mov gs enter insb (bad) inc inc nop jle enter cli mov jb testb and dec jmp xchg loopne or mov notl imul push dec fisubrl push xor mov mov (bad) stc std into mov sub (bad) cwtl test stos int je jg sub popa roll fwait xchg imul aaa stos fdivp sub aam dec repz out sub aam or mov jecxz (bad) adc mov sti stc adc cmpsb stc dec cmp inc test ret mov rorl inc jl xchg mov out push mov nop jne or clc add hlt xor jl cli repz lahf (bad) lods cmpsl scas shl pop pop push roll cli imul inc lahf xor mov lock in push mov xchg int3 ret push shl push add stos sub dec lea xchg push scas hlt cmp nop or ljmp mov mov cs stos xlat (bad) push jge sbb sbb sub cmp les int rcl jne (bad) xchg enter push aad push lret inc stc out and pushf insb and cltd rol dec jno inc cmp mov mov sub add push lock sbb mov sub clc sbb sbb push lcall pushf and or sbb xchg stos ficomp iret sbb arpl add movsl xor or mov add jno xchg ret popf xchg aam jb add cltd mov lcall push xor sub and lahf mov xor push stos mov or aam add add fs aad push bound push lods mov mov pop pop in bound shlb jae lahf (bad) or fild cmpsb jp stos (bad) hlt icebp in push fwait push jnp mov fstpt dec sub popf iret push loope rclb xor push jl js lret adc aaa inc (bad) in pop stos or pop sbb xor aam or xor add push pop xchg mov xor in in and inc lcall inc pop (bad) mov lds cmp push (bad) fistl or mov lea mov or dec (bad) scas lock jge and sbb mov jmp mov shlb cli nop xchg add jle mov jp pop xchg mov mov gs xlat or add xchg leave adc xorl adc inc jb outsb xchg addb sti lea pushf mov cmp jle or arpl fs mov lcall in adc and inc ret fldt pop cltd xchg push push or ss inc mov fsub add mov mov test jns add inc in test cmp gs aas adc pop pop enter cld or jge lods ret dec fmull sub fldcw jbe pushf mov negb lea xor ret inc dec (bad) daa dec sub iret in arpl ret xchg jmp and adc shrb add (bad) ljmp movsb ret fcmovnb lods lcall xchg shrb xlat xchg cmpsl push sbb into or mov out jbe and xchg pop mov jae cmp pop adc mov ret mov adc out push push lret stos inc popf bound outsl sub inc stc push sub cmp dec sti pusha cwtl cmp (bad) jl frstor clc adc add push dec test imul ret jge popf xchg inc add int3 sub xchg dec sub in jbe mov and jle jmp and mov test push jecxz addr16 lcall xchg pop test outsl test rorb jae hlt outsl mov mov xchg sub xchg (bad) jns xchg mov xchg mov lahf and mov jns mov and fimul or jne jae outsl out push test fiaddl xor jns add add call iret mov cli cli fist jp repnz inc fistp nop test xor movsl in mov sahf jp mov rolb aad xchg mov daa mov out xchg sub xor jp pop call lea xchg cwtl push mov jp sub and shrl shlb mov mov repz add (bad) mov add jmp in push sub jge dec push jbe les out cmp pop loope movsb adc fdivl pop push push addl inc test in fdivrp inc dec imulb bound mov lret das jnp adc inc (bad) clc int3 addr16 scas push cli push inc aas out pop sahf jbe scas xchg or jge dec insl xchg jne mov and push xchg (bad) icebp fstpl les repz std cmp jl or sub jge push xchg or ret and outsb insb jae test cmp dec test adc push jns imul adc (bad) pop mov pushf outsb push adc test scas ficom shrl push cltd cmp negl js mov cltd fldt xor cmpl fld cwtl xor cmp test loope add iret xchg out mov xchg lea cwtl pop sbb pop imul inc loop es mov jbe xchg push sti out mov (bad) lret sub mov jnp mov mov cmpsl adcb loopne test stos mov in int3 pop insl lock addr16 push loope je iret rcr hlt aas xor test lret not and mov cltd push ljmp mov mov ret loopne mov mov push hlt (bad) fcmovne ja jp xor adc loop cmp push pop xor lds adc int cwtl out xor or aam shll sbb out xor faddl pop mov push fimul mov cmc adc scas dec movsl stos stc mov inc pop nop pop leave icebp adc fwait scas and xor or pusha dec enter inc cli pop and dec mov fcoml add or pop inc (bad) and mov pop jno aas jmp gs jp mov mov stos push shll int lcall out dec cmp clc scas xchg jge dec frstor in or push int3 adc pop test clc mov lea push sub int3 popa rcrb not mov xchg in mov loop mov fisubrl pop ds sbb mov out and out ds mov leave jns or mov push lret dec inc and xor out movsb adc ficomp cmp cmp and iret mov inc sub addr16 int3 loope push nop (bad) xor cmp xchg pop arpl inc sbb sub mov jg fisubrl dec clc or mov add out push sbb xor add dec cltd cld push cmp sub imul sub jg (bad) cmp sub scas push clc and jge mov cmp push cmpsb mov bound cmc (bad) cs and subl or cmpsl xchg push push outsb fadds pusha cld test mov xor add popf popa pushf test push aad add in mov fstpl mov mov mov daa sub and aam cmp sbb xor and dec clc xor add jb mov lock push repz inc repnz pushf in push xor and pushf mov adc jmp sbb sub add push mov mov ret jbe inc xchg dec mov mov pop mov ret popa lret movsl test dec push mov aad fisttp mov jb inc jmp cmp lods jno dec mov outsl aaa push in (bad) scas xor (bad) sbb ss cli icebp mov pop out stos cmp shrb js (bad) hlt inc sbb cltd lret mov (bad) mov lods sbb test mov repnz ret mov add push (bad) movsl (bad) fidiv in dec mov cmp and hlt adc and enter pop cmp lret push lret pop cmp insb fiaddl in add push lock add (bad) and dec lcall xchg loopne data16 dec int outsl inc mov mov arpl add add jp mov imul cmp imul outsl nop sbb dec cmp fnop sbb leave cld (bad) push lea or cwtl cmp stos shrb clc adc lea jmp push mov push pop ss shl stos cmp cltd daa loopne je das stos mov sub push jae mov cmp dec or ja inc (bad) jg sub divl mov mov jmp push sub sbb sar inc or sbb in sub adc xchg cwtl lret out jnp and shrb cmp jnp rorl jne adc je sbb mov sub mov cwtl fwait data16 and in inc in loope add sub inc mov mov arpl sahf push push cmpsb test push cmpsb xor mov (bad) (bad) ja jo xlat cwtl test mov cld aas loope je pusha jecxz aas jno out enter mov mov cld inc jg mov sbb fstpl sub xchg lret xchg adc jmp or icebp sub xor ret jmp push rclb in popa add ficom or (bad) and in push adc cmp fsqrt mov es lahf je push test mov mov jb xor popf sub push mov test lock (bad) mov push bound push sub xor mov pop outsl mov out mov or fstp mov test in inc je pop mov cs cmp xor (bad) fstp jg inc fild enter mov test mov ja shl inc fistpl push outsb loope sub adc or test nop mov aad arpl outsl ret mov loope psubsw aam ret rcll cmp xor xor insb xor out xorl iret out out and add xor movsb pop cmp adc add lock rorb jecxz pop and test fsubl imulb add dec daa xchg int3 mov xchg mov clc jb pop cmp out (bad) lods and bound movsb xor imul jl scas (bad) xor add sbb xchg sbb je sub sub mull inc lock aad popa fistp mov stos mov push shrl je iret shr or lods mov icebp push mov clc stos sub pop ljmp push mov sub adc add xchg cmp cwtl orl add insb in movl jl jmp test outsl mov loopne roll call or push push sbb xchg mov repz dec push mov mov adc insb neg mov int loopne dec mov xor aad adc pop cmc and out cli pop cmp and aas jg jge cmp sbb icebp (bad) ja or divb fstps lods mov dec popa ds mov pop xchg xor iret dec rorl jmp notl pop and push dec imul iret rclb inc in dec mov jp mov movsl sbb lret cmp leave sbb pop and insb shrl push bound sti daa sbb daa lock mov mov sahf aam sub lea out push mov xor aaa bound push mov or xchg mov push jecxz dec bound out lea jge daa push mov mov pop push (bad) int in or adc das sahf into enter or xor sub xor imul mov jp pop fcomps dec lds push sub mov cmp lods mulb ljmp mov push sbb xchg pop shrl pop inc mov jno dec cmp xor pop pop xor insb mov stos mov pop mov fwait and popa decl imul pop sub dec pop int cs mov shrb (bad) iret leave add jmp aas lret movsb sub and std popa mov jo mov xchg jecxz sub std movsl push pop movsl movsb xrelease lods (bad) push mov incl ficom sbb in pop (bad) pop jge mov cmp adcl mov out sbb ds or mov popf pop jmp rcll jbe xor jg jae xchg insl pop xlat loopne decl ljmp push (bad) xor mov dec add mov lods insl dec push stc pop out ja mov pop repz add rorl inc adc mov test sbb rorl ficomp hlt xlat xsha1 cmpsb lret rcrl jo repnz dec add xchg push ss xlat sbb inc adc sti les (bad) and xlat (bad) (bad) lret mov dec iret movnti mov shl xor lea ss pop mov out push pop cmp push mov mov push push es push push shll insl jbe xchg mov dec ret ljmp jl adc aad mov or cld test sbb jecxz xchg sub das mov sahf mov in mov jmp outsb inc cs push pushf lahf test adc leave (bad) sti inc daa orl sbb jb insb test inc sbb jg,pn std imul xchg les sub test js fstp and imul (bad) mulb push test sbb test add cmpsl lds xor sbb mov xchg mov test pop outsb test insl add les lock (bad) arpl fldt inc lods adc sbb sub pop mov inc add loope xor push mov int3 xchg cs inc cltd pop push rorl test negb pusha inc rorb dec jg xor fwait mov test ss xchg push xchg fcoms (bad) xor dec pop xor dec cmp sbb out push in lcall dec fsubs xor cmp add ss pop arpl xor repz xor stos mov or mov mov (bad) out push mov mov stos push aam mov xchg mov mov mov pop mov sub imul arpl scas xchg cmpsb mov jae mov sbb shlb lahf stos or and fidivl mov mov jl outsl test mov (bad) dec lea loopne and sbb xor mov gs xor push pushf mov pop hlt addr16 fisubr jp movzwl xchg jmp jg inc xor ficoml hlt mov ret push push adc push popa imul popf xor pusha test push psubusb mov in xchg jmp pusha lods subl xchg xchg dec lods imul outsb loopne imul (bad) stos jb jo and pop xchg jno mov xchg pushl lock into std adc mov push (bad) mov push sbb mov outsl lea mov adc mov pop movsb push jne (bad) pusha xor loop add mov inc out adc pop iret mov jecxz into ss push lods cld push sahf inc mov dec jo cmp scas add subw in mov lods dec pop nop or or movsb mov mov data16 adc cmpsl sbb in arpl xor xor out inc xor stos add mov ss add add jmp jecxz pop fcomps aam dec adc arpl jmp test add pusha adc sub sbb pop and bound imul (bad) sti repz inc xchg cltd dec push inc mov or flds adc data16 ror sbb jno mov lahf pop jle cmpsb add cmp xchg pop popa adc in test mov dec (bad) out sub loopne xor push imul fisubr inc add in dec ret mov (bad) stos mov out jb fs insl sbb mov mov sarb or or mov mov cmp movsl call mov pop data16 (bad) gs inc push mov sub cmp pop insl lock outsl enter fcomps add inc mov cmp mov sub fcoms testl jns bound mov into (bad) dec ret adc adc mov stc mov in mov jno cltd imul pop scas dec cmc cs inc inc hlt mull sub aaa cmc or sahf jbe jns das mov lret xchg xchg inc xchg or es scas cmp cmp jle sbb nop lods call or push (bad) int3 aam adc add rcr inc gs les jl pop cmpsl or gs iret adc loope imul mov rcll iret add lock stos cmpsl into dec pop pop xor xchg incl stos push out pop insb or js sbb inc lods scas mov or push xchg ret mov push mov es cmp popf dec inc mov inc rclb jl pusha stos cld dec inc call adc jns out out or push mov das mov xchg pop ja push push jp add xor xchg inc ret rcr subl jle inc xchg mov mov cmpsb or pop mov sbb mov test inc dec xor cmp sbb jmp in shlb cltd stos mov aad inc imul and aaa push leave call (bad) sbb add inc and fs push jns je adc xchg clc repnz sar fistpl and xchg dec mov imul sahf push out fiadd cmpsb incl mov pop mov icebp fst pop nop jb mov aas outsb dec leave xchg ss mov add mov ret popfw cmp stc inc cmc sub test movsl dec stos adcb (bad) arpl sub adc jno lods inc or mov xchg and addr16 mov lds pusha cbtw add ficom or mov push push and inc call bnd lds das (bad) push mov mov loop xor fwait inc and sbb insl movsl sbb mov aam inc nop pop cmpsb aas fs cmpl add divps push jae daa add call add int3 cmp lock stos cltd lea (bad) mov mov xchg nop test push adc and rcr push stos out xor and xchg push jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ss cmpsl jecxz jnp bound xor jb inc divl pop mulb add jle jbe xor pop or push cli dec pop xchg mov jne repnz xor fucomp or jmp and add mov (bad) push and jle inc rcr push mov ds int3 mov imul push aaa pop sub mov loopne cmc ljmp jnp test icebp fs add in adc pop push mov les dec jmp fnstcw or shr jge mov pop cs sub push xor and push fnstsw and jo pop cmc fs lret or test mov movsb pushf faddl mov orl movsb ficom daa cmpsb fldcw les mov rol jmp in inc mov loope pop cmp sub fdivl cmp jmp push xchg dec in test testl inc pop or stos mov push je out jle push mov xor sbb call cmp idivl scas cmc into pop sbb add loopne pcmpeqd push jecxz mov movsb test lcall dec sbb out fnsave mov mov out mov addr16 cmpxchg bound aam outsb dec jno cwtl pop in (bad) mov fild enter ret push dec (bad) jne imul sbb add hlt ljmp or xchg mov insb inc mov jae jno xor int stos jle in arpl enter xchg or push push cmp and xchg add fcmovnu add add rorl mov dec mov push sar aam fwait add sbb push loopne xor out and movsl sub mov jge cmp pop aam pusha mov lods cs aam pop xor inc xchg cmp cmp dec movsl cmpsb pop daa scas jp out mov call fiaddl lret mov and pushl pushl call add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret ss mov jno ds mov and jl sbb je push dec in hlt xor sti jl push cmp popf push outsl mov dec (bad) dec leave fstps pop pop adc (bad) xor mov mov inc ret mov sbb cs and repnz ds lods fisttpl or (bad) sbb cmp es je ret and dec icebp add push les jne add and push jo sbb sti pusha jle xor push daa outsl jmp inc sub int3 pop aas mov clc imul sbb and pushf lahf mov fnstsw (bad) and sub cwtl push sub and les fadds push enter pop and rclb in ret mov pop mov sbb outsl fsubs aas fstpl fisubrl xchg pop loope cli (bad) mov inc ljmp jl out jle and mov or je jecxz pop dec test das cwtl xchg ja push jns insb (bad) stos out sub or cmp mov movsb push mov pop add pop test loop sbb inc outsl pop adc ds jbe outsb inc ret test jmp sub cmp sbb fcomip lcall repnz mov push enter out xchg adc loop out bound pop movb mov outsb jl mov push jp je lret sarb lock lcall sub scas aam je rol mov cwtl mov cld addb add xchg aas scas cmp movsb rcr (bad) out push sbb xor xlat lock outsb and or mov cmp xor (bad) leave xor sti sbb test and je dec mov (bad) shrb jmp pushf cltd fisttpll icebp les push jno rol fwait mov ljmp add mov repnz push cs jle (bad) pop subl jo cmp inc inc jno stos mov cwtl lcall hlt xor jbe mov fs lds (bad) sbb pop vpacksswb mov pop xchg push inc rorl lret xchg pop sub loope cmp or sbb and mov xor shrb enter stos cmp jns iret (bad) (bad) iret roll pop ret lret push xchg jnp clc loope mov pop jbe sbb or xchg notb push pushl cwtl icebp lock es ss aam bound je repnz xchg xor mov push cs sbb dec or mov mov test cmp mov fs mov outsl push sbb clc lret mov push cmp ja sbb pop adcb adc jg sbb int cmp mov pop divb xor jecxz pcmpgtb jb rcrl gs pushf xor push insl adc pop and pop jbe add push push ss lret out movsb lods mov stc inc sub std aam mov outsl (bad) cmp jmp inc mov jle test std call dec dec lret mov inc pop imul sbb dec pop sarl sbb mov mov loop push mov mov and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor sarl xor mov jns xor xor dec mov inc enter in das lock js hlt sub jo add enter sbb mov stc adc addr16 adc ret sti cmp dec es bnd jmp or cmpsl sti bound jns lret xchg nop inc push addr16 mov xchg imulb popf and sub sarl fs lock mov fwait push fs (bad) and mov addw icebp stos xchg jecxz or (bad) psrlw loope cli jle das aad std xor pop fnstcw or mov pop shrb jp test and xchg xchg xor fwait js push mov (bad) jp inc inc arpl aaa (bad) jnp ret ds test aaa pop pop dec and jne mov xchg movsl hlt cwtl add cmpsl enter test (bad) xor push mov test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp ret dec (bad) mov lahf rcr or dec inc xchg out jb mov std aad cld std fcomp push repz inc out xlat aas cmp push push mov mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret ret mov sarl cmp pop mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp (bad) fdiv xchg shr mov jecxz inc inc scas mov push mov mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret ret and mov mov pop mov push push clc xchg pop lret in cmp sahf or aas mov pushf (bad) das add mov xchg mov mov xlat xchg enter mov mov cmpsb lret and push call jl add xor pop cld adc hlt push jb std sbb gs sbb pop aaa mov sar (bad) jnp icebp test jge sbb jecxz push das js,pt ret adc jne rcrb fisttp push sbb int dec into xchg jecxz or pop clc shrb fs imul xor sarb data16 cmc imulb push pop jnp mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret ret aam add jmp fsubl pop inc clc sub jp daa xchg andl mov andl movl movl ret int3 int3 cmp popf ret (bad) sbb mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret fucom insl jns xchg add inc dec push call mov orl mov call mov orl mov ret mov ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret ret (bad) mov lcall lcall aas (bad) repnz jmp (bad) jno mov test fimul cmp imul test mov pusha push sarb int shrl and push and shrl add push xor push mov inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret ret jle sub xor fldcw xor or sbb lret xchg js bound pusha push mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret ret rcrl or lret jl push aaa and sarl mov lret scas push je add xchg (bad) das add sahf cltd push mov push mov call xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret fist dec fsts push aad in xor pop pusha or sarl movsb or adc in mov sub mov ds adc dec icebp mov sbb mov mov jbe xor jo xchg xor inc mov mov outsl sti out pop adc (bad) mov loope mov mov clc jae push fist xor push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret ret sub inc push in cli outsb xchg and fistpll or imul les adc in push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret ret sub scas negb aaa pushf int (bad) ss pop sti cmp pushf dec mov pushf push andnps lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret ret (bad) (bad) mov (bad) jl outsb pop fcmove dec inc (bad) jg cltd pop push testl dec les ret iret push test icebp sub (bad) cltd outsl dec sub repz rcr roll scas outsb xchg out mov mov sub mov xor mov push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret fildll xchg mov int sub in push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret ret and fidivr (bad) idiv insb adc les mov adc cmp stos stc sub jo dec jo lds sbb mov insl cmp outsl mov aad scas push mov push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret ret mov xchg loop in popa push mov sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret ret aam lds test cmc adc and out rcll pop jo clc ja jecxz push adc fistp into push mov push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp ret aam lds sbb push xchg test cmc adc repz rcll movsl imul and mov dec xor xchg lods sbb mov xlat fadds or xor loop test jo imul es sbb fs mov inc inc pop (bad) dec in aaa into xor outsl hlt fucom lock add mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret ret aam (bad) adc test cmc adc (bad) sub adc dec mov decl jle loopne inc mov ss or mov push mov sbb fdivrl and aas cld jne jp test sbb out push mov adc sub and rcrl xor mov jg cmp in and std push in outsb (bad) fnstsw lahf incb or xchg mov mov in mov lods cmp lahf add fstpt loop in movsb push dec pusha scas xchg pop aas push mov call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 ret and scas mov rolb xor (bad) mov jae,pt icebp mov push push hlt jbe je imul push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop adc into sub in jmp js (bad) pop lods test push in lods xor xor jmp lret mov dec popl xchg int3 add sub push mov call inc std xchg jo dec insb les (bad) mulb je cmp in cmp add jb push lcall cltd xor clc xor jnp jo out nop insb pop movsb mov inc jmp xchg ficoml cmp cli rcl mov pop fildl notl mov cmpsl push cmp adc cmp adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc push rcrb (bad) dec and rclb dec xchg and jmp mov push mov sar nop adc push pop (bad) loope clc adc or inc sti iret decb sbb cmp lods (bad) adc dec shrd mov int das xchg in mov sbb cmp lret xor mov mov out repnz hlt xor sahf repnz sbb mov mov push test idivl sub dec or push or ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret ret (bad) mov lods mov adc pop (bad) cmp lea adc out sbb int3 and repnz jne iret mov mov fiadd (bad) xor or (bad) fcmovnu ss in mov mov enter leave mov scas stos push sub sub jbe lods inc pop push push cli out ss int3 sub fsub inc stos add rorb mov cmpsl cmp in push push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret ret and mov insb mov (bad) repnz gs add movsb pop (bad) xchg adc arpl out inc cmc and sub push sbb mov inc inc jno adc insb push sbb and push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret cmp sub imulb and sub xor in (bad) decl or (bad) (bad) call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret ret aam add loop (bad) movsl js or repnz jmp test ffreep rorb cmpl jb movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret pop pop mov cmp inc fisubl mov idivl and shl jbe push orb xor cwtl push call pop mov ret push mov cmpb jne call call push call pop mov pop ret pop (bad) mov jecxz push stc and push push mov push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp ret sub pop jns mov pop cltd lock (bad) jp push cmp das or lods mov mov into add into (bad) daa out lea cli mov and xor pop test adc mov pop xchg mov fidivr mov inc in pop gs cltd lock jno loop iret or cwtl stos mov cwtl or add push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret frstor or xchg out (bad) jl xchg shrb jmp lods repz mov mov gs xlat xchg fnsave stc js and adc sub adc mov cmp je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call aam xor es mov cmc and inc pop mov popa dec les pop mov inc push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret ret and cli lods jnp adc push daa pop xor sbb add xchg jmp pusha xchg ja sbb std push cli sub mov pop mov mov std rcpps stc cld lret rcrb cmpsl cmpsb insb call and scas mov inc lds jne sbb mov sub inc mov sbb push test jle mov rclb int fistpll mov in sahf push push sbb popa xlat outsb mov repnz jne inc stc (bad) mov adc idivb cmp es mov jae lods nop lahf add rorb rcr dec pop fist movsb jle pop push lret and add push and imul push mul adc addr16 xor mov fadd jmp inc pop adc xchg xchg leave and pop xor xchg (bad) (bad) fwait sbb jb (bad) out mov sub pop shrl out loopne jp mov cmp inc adc (bad) mov les pop pop cmpsb into jle xor cmp std and stos mov lahf xor jl jae and add loop pop cmp mov mov jmp cmp jp mov lods push cmp mov cmp xchg sarb orl pop or popf jecxz and jl and out cwtl fwait xor test fstpl stc mov add cld jle outsb pop je mov and shlb aam add dec ficomp adc loopne jp cmp loop outsl cltd push jo (bad) repz mov xchg int3 dec sub jp inc adc jmp sub lcall mov and sbb and lea or inc jmp push mov add pop fisttpll fwait xchg cwtl jo or xchg and aam pop or mov scas out repz iret xchg add rcll or mov lret dec cltd jbe dec pop add mov pop lret and daa outsl mov cmp jbe mov cmpl jle rol cmpsb imul loopne outsl push jg popf adc mov cmp sahf mov jns std fcoms dec (bad) inc inc mov cmp scas push jb cmovb repnz out jg scas aas xchg in (bad) scas lret mov pop and loopne push mov sub push cmc das negb mov mov (bad) jl (bad) xlat mov pop cwtl and mov rolb add jle jb xchg dec cmp shrb mov pop mov cwtl pop roll xor cltd cwtl rcll jns mov push stc add repz pop and add cmc bound xchg idivl or jnp jge inc mov xor jbe push int3 sbb mov jbe dec xchg inc stc sbb mov mov jno mov outsb divl (bad) js push mov push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 ret mov in jl in cmp sbb dec pusha and dec jo sbb fldlg2 jbe or sbb adc fwait test decl or cmp jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 cmp sub cmp jo mov jns psubsw pop imul jno stc add enter inc xor mov inc test inc cmp outsl test and jge ret out (bad) xchg mov pop (bad) int3 test je cmp pop sbb xchg lret mov push mov scas jo push mov xchg add out jmp scas bound cli (bad) push repz das inc sub (bad) (bad) test sub jg sti add imul inc jbe add in stos in pop rcl insl xchg mov int and jmp cmp add outsb add rorl inc data16 sub fdivl popf dec push popa mov mov pop shrb (bad) cmp sbb fwait sbb adc push shrl sub scas xor fnsave mov scas push aad setno mov (bad) pop cmpsb inc fistp lahf jp (bad) inc (bad) mov enter mov pushl mov call pop ret cmp sub jmp testb mov (bad) aam das out (bad) jge ret inc or fiadd aas inc push add jge xor mov pop lods and scas iret aas lret les stos in fsubrs cmp jo int3 hlt mov loopne inc nop inc clc push push inc (bad) jge cmp xchg cmc ljmp push push push call add ret cmp icebp aad jnp mov movsl xor movsl pushf sub imul pop sub xchg add test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret cmp sub jmp repnz inc cwtl repz lcall xor jo lret popa inc xchg (bad) or call in push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp cmp sub cmp jo mov jns psubsw pop push adc xchg into inc divb inc in add popf mov imul jb jg sbb insl push cs (bad) add pop addr16 shlb mov repz inc jle mov sahf pop pusha add out ss test mov push ss jg mov popa xor jmp sub (bad) mov inc push dec (bad) mov out ror sahf add pop mov push out mov push push push push in mov fwait out sar mov push data16 xchg fwait aad cmp add sub repnz or mov cmpsb pop pop jge and adc sbb add and inc (bad) or mov xchg lahf popf adc adc and pusha (bad) outsb sub add pop jmp shl adc xchg sub jmp mov inc mov aas xor mov (bad) cmp mov lock popf repnz jg cli cli or jecxz mov cmp jge xor enter sbb mov cmp inc hlt mov outsl mov repz mov xchg daa jbe mov add sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp cmp sub cmp leave (bad) xor xchg in jae mov shrl popa dec mov imul jnp mov mov mov mov push dec pop dec mov vpextrw test clc fmul (bad) or movsl (bad) cmp idiv fcmove loope jne add jb mov push jns inc inc insl mov mov xchg dec ret call in cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret xor dec cmpsb jecxz adc fisub imulb sbb mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret cmp sub jmp aad insl hlt jb push nop imulb out inc bound popf ss data16 loopne bound adc push ljmp or mov out jno pop pusha dec jb in mov sbb fisubl mulb insb pop dec adc push out xorb lahf insl xor push jns xchg int push in (bad) pop (bad) pusha jne mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret cmp sub xor pusha add popf and jecxz repz je je dec bound mov (bad) loope out cmp cmp enter jl aad mov push mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret cmp sub xor pusha add dec pop stos xchg cmc in dec sub pop xor mov jae pop in mov out xor fwait jno inc fwait stos dec lret fisttpll push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret cmp sub jmp jno ret sbb inc (bad) lods ljmp xor movsl push mov dec mov mov mov mov rcrb jecxz arpl call mov mov cmp imul call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc sub xor dec ror jmp jmp lock arpl mov test jecxz cmp mov sub push fldt std (bad) or cld xchg insl ljmp sub je sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret cmp push push pop arpl jb pop inc pop sbb push mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret xor mov ja adc push (bad) movsl xor aad push clc stos push test sub in push das popf inc inc mov xor je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret test (bad) lock xchg repz mov jne jb inc aam pop stos pop jno (bad) cmpsb sahf fdivl pop daa ss xchg dec fwait stc jo and inc push mov pushf jbe and push cs daa ret in fmul aas xchg test test popf aaa or (bad) ds lahf lret mov (bad) jnp ss test (bad) leave pop sub sub idivb xlat sbb jmp in fs test push das mov jl pop pop lahf add cmpsb add or jge (bad) in or pushf in mov loope mov xor and loopne fs or sub addl loop (bad) jge out rorb imul or pop xor nop iret movsl push mov jne mov jnp and cwtl jmp or lds dec fnstenv lds repnz adc aam adc and clc mov fdivs push push movsb dec xor pop push insb call xchg lods std pop icebp sub test adc mov (bad) ret pop sub cwtl adc cwtl lock mov rorl cmpsl mov mov mov inc aas pop int aaa cmp into xchg test in mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret cmp sub jmp dec sub xor mov inc gs push pop xchg lods aaa dec lods jno dec div xchg inc sbb inc mov ret push rcrb (bad) imul mov push hlt mov and add mov add call int stos adc push add lcall hlt dec inc insl movsb fcomip popa (bad) mov js out jns xlat jecxz dec rclb out xchg dec movsb fldl in lahf lahf mov pop mov push mov push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret fildll xchg and dec ds loop sbb inc or xchg lcall call mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret xor loope aad cmp in xor adc xchg sbb push sar test loope push (bad) jmp fistpl fcoml adc cmp add xor ljmp in mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret cmp sub jmp aad pop and or into jg dec out xchg test mov ljmp mov movsb mov mov or daa push ljmp cmp pop iret mov mov dec and std ljmp lds test call dec cmpl shll dec add pusha xor jmp outsl mov lock ret mov push mov push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret cmp sub jmp popa in arpl (bad) iret sbb jmp jecxz nop lret shrl inc push jne loope and mov jae pop (bad) dec data16 mov pop idivb ss and cs sbb (bad) sbb repz aaa and (bad) mov add cmpps aam imul imul scas hlt fucomp jp or adc outsb movsl mov aam dec stos dec repz es outsb pop sub jle push arpl data16 or cwtl arpl in mov std inc push je scas jmp addr16 xor mov sub in jo push cmpsb movsb stc dec mov mov push jecxz lods mov call pop mov mov rcl rdmsr xchg xchg fldcw test inc dec int3 aas push dec and jle xor add mov fs add inc push out ret push shlb mov mov ss push mov sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret cmp sub mov mov inc lret jecxz add sbb sub fnop (bad) ss push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret cmp sub lret rorl dec dec outsb inc mov xchg aaa or xchg mov inc adc xchg pop insl xor aas mov dec xor idiv xchg cmp outsl sub call in xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret cmp sub scas fstpt fimull inc lret ss sarl add mov (bad) loope lmsw mov out push pusha adc fadds jb jb fstps mov repnz jb sbb jo push and repnz and imul test cltd sahf xor cli or (bad) jno ror popa push iret testl xor mov mov or and mov (bad) mov int gs mov jl jg pop dec mov call in sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret cmp sub jmp jge (bad) aaa (bad) je xchg add push inc hlt mov mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret cmp sub xor push std loop dec xor xchg (bad) xlat es movsb pop (bad) xchg decl stc adc nop sub pop push lret and insb push aas jbe repnz xchg xor pop pusha lock xor leave fstl cmp push adc pusha xchg push lret cs xor mov cmp out clc and push lods inc xchg imul mov mov std dec rclb movsb (bad) jae int mov jge test in in add xbegin (bad) rorl xchg stc stos inc daa add movl loopne sub (bad) xor mov inc in (bad) movsl (bad) mov mov cmp jns leave es rcr mov push adc fild test adc iret test adc iret test adc iret test adc iret test adc call in mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret cmp sub cmp xchg (bad) or sbb push out jmp lret sub fnop xorl sbb push push mov sbb pop ljmp mov int and cld out notb jge xchg add sbb sub sub mov sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret cmp sub xor push repnz pop or xchg jg jg add leave mov cwtl xor aaa in int xor repnz jo imul pop test xchg movsl lds cmp mov add mov inc int3 pop jo cmp fidivrl cli pop mov adc jmp sbb add notb (bad) dec imul mov mov mov movzbl push call mov movb mov mov pushl pushl call pop ret cmp aam mov sbb bnd xchg repnz lods pop xchg into push or fistp in leave pop cltd xor pop add xchg cmp add outsl sbb pop test or test fs (bad) pop cs out ljmp sub mov sbb lret mov ja jb lock movsb push mov mov ljmp std ds cs push (bad) adc push mov data16 lds ret xlat (bad) cmpsb das hlt and sbb push xchg mov mov push rorl push aaa xor cs add xchg sti jp push mov push inc lret sbb inc jg int pop movsb inc push dec pusha push pop adc scas mov insb cmpsb (bad) mov or lea shl dec stos dec inc push je jnp xor stos push loop sbb pushf popa popa test jne call cmpb je mov ret push push push push push call int3 xor mov loop jne xor xchg xchg repnz lock or push xor push sbb lret call in mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret cmp sub cmp inc rcl adc mov imul fdiv ss lock mov push inc aad or jl outsb mov clc cmp lahf jns fistl or fistpll outsl iret rdpmc mov shl fistpl sub jle ret push outsb movl pusha pop cmp sub push push mov jnp or outsl ja jmp fisubrl mov fisttp cmp inc jno outsl or sbb mov add stos fs push ret rcll push xor or mov fs in mov fisubr aaa psllw stos cmp push cmp add out push imul cmp bound mov adc cmp xchg scas push mov mov pop sub notb (bad) fldl iret xchg fisub or cs out jb sub stos add das mov (bad) pop mov adc mov pop mov rol test dec and call movsl lds scas repnz cli or ja fwait ss (bad) stos adc mov sbb dec fcom ret cmp jmp fist cwtl mov xchg mov mov jbe dec pop dec pop inc shl xor xor out adc popa xlat xchg inc jmp in in sub mov (bad) aam popa lock push cs in (bad) hlt mov inc (bad) push push in mov cltd push testl popl addr16 lahf jno pop sbb in out mov loopne mov and in loope (bad) test or sbb lret xchg cmp push add sbb xchg imul or cwtl cmp aaa sub mov popf cmp loope jle insl sub ret cli fsubrs mov mov mov or gs lret jne aas cmpsl insl mov adc pop inc scas popf jae aas mov test jg in push dec lret aam test xor push sub call lock and popf in ja cmp aas outsb dec dec imul ds dec xchg jl adc sbb js lea clc add xchg mov xor pop dec xor subb test fcmovu jecxz (bad) mov fwait pusha (bad) cmp cmp mov push sbb pusha mov test dec push enter or xchg xor dec mov pop mov fwait out je es (bad) mov iret xor jnp sbb outsl sbb loopne cld or cltd pop dec add dec mov mov fildl (bad) jle pop jno adc ret (bad) xlat or add xlat outsb cmp stc cmc gs adc movsl add lcall int xor dec jb push and hlt loope add (bad) cmc out lea loopne inc sub mov lcall cwtl mov jmp add inc mov cltd xchg mov loope xor add dec adc mov cltd enter dec sbb xchg cmpsb sub pop pop stc lds cmp aad or pop jl and jg (bad) pop movsb or jmp mov (bad) or cs fnstsw lods enter adc ret scas dec data16 adc mov into leave sbb stos sbb adc jae out pop (bad) mov lcall cwtl and sub inc pusha sub jl inc in mov out cmpsb iret xlat mov sbb ss sbb xchg pop ret and xchg (bad) (bad) test stos push jb addr16 mov dec icebp push loope pop mov rcrb pop test aad and outsl repnz insl xor out mov js push jns adc idivl cmp cmc jns dec cli daa stc loope sbb jmp fldenv in adc pop add lahf subb push lret cltd or push sub push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret cmp sub jmp xchg sub dec shrl shll jnp push in bound ficoml cld xor fmull push mov mulb cmp gs jbe inc add fldl call fmul jb stos decl push cmp popa dec xor jl inc jae loop push mov data16 sub adc bound cld push or sub pop push es pop int outsb xor mov mov mov and int3 sbb lock mov dec push movsl (bad) cmp lock xchg mov pop xor mov inc sub imul mov cmp sub aad (bad) cmp push mov rcl push mov in call lods dec into cmp push and push iret sbb lods stos and ljmp jl jmp mov mov aaa jmp es and repz push or fstpl adc and pop mov scas add add and inc test and aas mov lcall cmp xchg ret xlat lahf scas inc adc shrb aaa (bad) push sbb sbb ds add in fldl jb mov imul sahf adc jns sbb add mov inc xchg xor outsb test orl cmp mov outsb xlat lods xchg aas inc notl pop leave out lds (bad) lock xchg mov fdivrs adc jbe sub lahf out cmp je loopne xchg dec mov (bad) cmp rcll repnz nop sar add mov or adc push in jo lahf orl push mov cli daa mov push lock add mov pop pop bnd sahf cltd stc (bad) or xor mov sub xor in xchg inc insb lods mov sub in xlat mov popf xchg clc dec in daa loopne or xlat cld movsb xor inc push scas add es dec js sbb mov es fs mov inc mov cli adc ds add mov push inc imul call pop popf outsb sarb dec (bad) mov sahf xor les lods cwtl test push (bad) push xchg inc js adc sbb push dec insw lcall jge and inc fisttpl rcrl dec and mov push (bad) and test inc mov push pop out mov jmp jne cs xchg push cld sub daa hlt push movsl outsb aas fstpl push pop sbb jns xchg lahf fdiv inc aaa aaa push popl xlat jb mov cmp push (bad) mov stos push mov cmp stc (bad) adc mov repnz sub cld push or loopne jo into or or repnz add inc outsb push adc ljmp jl das mov pop repz in or dec push mov (bad) scas or ficomp jo call dec ljmp push fadd jne push sub sub ja mov xchg cmp adc imul int3 dec pop mov rcrb mov push and adc push pop jns out pop inc testl cmp in sbb mov shrl enter adc cmc sahf je mov repz mov nop sahf sahf and mov in popa popa orl cmp sub outsl cmpl inc mov sbb rorl divb fdivl or xor jg inc sbb mov in jmp and and nop sub adc divl shrl lret lock loop ds out out cmpsl lock sub sub sub lods arpl test ret jp out mov pop rclb add mov cmp jmp push bound cmpsb mov jb pop cs lods or sbb cltd pop cmp push stos rorb arpl dec inc inc or cmp dec mov or dec aam fmull stc jnp mov gs cmpsl test nop mov int3 or mov aaa xor cmpsl (bad) packuswb ftst mov lds lcall pop lea pop cmp cwtl dec cmp push or add jno or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret cmp inc or (bad) scas and jo push nop inc push push add xor cwtl jle imul or jecxz mov mov scas xchg sub mov rclb and test sarb repnz sub jmp cmp push cmp repz mov dec mov test js cmp jle cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret cmp mov sbb js in pop nop pop inc (bad) add daa dec inc cmp out rorb mov push mov call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret cmp sub xor xchg add inc sarb (bad) sbb cmp pusha lods aad aaa pusha pop and mov call mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret cmp sub xor push cld pop loope outsb xchg outsb jp,pn je sahf fisubr int3 std push test std push shrb pushf or scas sub pop mov jmp mov jmp cmp mov cmp xor sub int3 fcmovne imul inc adc mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret xor push daa aad cmp in xor jb insl or xchg in mov jl imul inc in mov jns adc jp jb mov (bad) in (bad) (bad) insl call mov push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret cmp sub mov jecxz (bad) lcall jg scas cmp cmp mov push mov pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret cmp sub xor mov cmp push clc call push mov adc pusha (bad) cli fdivl mov dec sbb push mov out addr16 mov xchg mov and insl js inc add xor dec cmp std push or loopne call in mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret cmp sub cmp (bad) jmp sbb adc jp cmpsb jg fwait dec mov cmc mov lahf loop xor push pop jne jno popf mov leave fs nop lret addr16 and popf jmp mov sti pop jg mov (bad) mov add ja cmp out cmp cmc cmp mov or (bad) stos test stos nop jns cwtl pop (bad) push mov or jecxz sti inc add dec or pushf ret xchg sub (bad) hlt push and cmpl scas es mov rolb mov fcomps mov jb pushw shrl mov xor ljmp sbb dec pop enter loop inc inc inc add xchg push pop lods jo fadd and push call xor mov test setne test jne call movl call xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp cmp sub sbb jecxz call in mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp cmp sub adc xor (bad) lcall jg fwait mov push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret cmp sub sbb loop xchg jbe mov push test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret dec push sbb (bad) push jg push (bad) dec xor jmp pop jnp repnz dec aam jns popa insb out inc jbe in mov sub cmpsb hlt push xor mov jge,pt das jg sub dec cwtl xor inc repz push mov push call mov push mov call pop mov call mov pop pop ret pop fmuls mov mov or call test jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret cmp sub mov repnz xor (bad) mov fcmovnbe js push mov push mov push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret cmp sub xor bound cmp pop push ret xlat scas jmp push in data16 test call in mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret cmp sub jmp dec leave lcall out mov das pop hlt dec push mov nop bound jg sbb imul ja mov jne scas inc daa jle push cs xchg xor mov inc sbb mov mov call lret sub xlat push jp (bad) scas pop fldcw sbb call in mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret cmp sub inc cmp aad fcmovb mov popf dec inc inc das fstl lods loope in and gs push push mov mov (bad) into sbb lret inc icebp fmuls in xchg fistpl inc lds sarl cmpl sbb sub adc loop leave jp inc xor and cld jno mov enter das push (bad) push mov dec out stc (bad) jle xchg hlt push ret sub mov xor clc mov testb es cmp dec mov and add scas (bad) dec xor jno xchg or fwait xor je lret fmull (bad) sti xor mov outsb int pop inc adc jg ljmp in sub inc ret sbb lock sarl addr16 mov pushf rol adc pop out aad enter add jp aam sti push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret cmp sub cmp push ljmp lahf arpl adc mov sbb adc cmpsb jo or xor mov mov mov outsl xchg cs or (bad) and cwtl push cs das xchg or (bad) mov scas push jne xor test mov xor idivl lcall popa repnz dec dec fs push stc pop les pop (bad) ds jl add adc (bad) mov movsl daa jnp add and (bad) inc rcr xor and push push add mov dec and xchg mov pusha cmp daa cmp int3 pop les jmp rorl push enter mov jl das adc xchg and aas mov mov daa or outsb in adc es mov sub mov xor inc lds mov sbb (bad) dec add shl ret fchs (bad) mov dec pop inc inc daa push push repz xor imul pushf gs xchg push outsb mov mov and imul pop incl call in mov daa in roll dec xchg dec fild cltd jle movb jnp jp lahf adc (bad) test mov mov mov inc roll insb dec fistp aam adc loop cmp jg jge roll imul jp sub jmp add push das dec mov cld fwait andl out fist mov push mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 cmp sub in mov (bad) call add and insl test add (bad) inc inc hlt out jge xlat jno mov xchg lods insl xlat mov push imul mov cwtl xchg and fucomp mov and adc mov sbb mov jp add out popa jl pop call sti and lock mov ds imul repnz es add mov push mov push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret cmp sub jmp testb mov shr out sbb lcall mov inc xchg mov movsl (bad) adc mov add add inc int3 outsb test push call andl push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret cmp sub lret (bad) mov dec inc inc dec (bad) inc nop aaa leave mov or sbb scas adc stos out add jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret cmp sub in mov ret fbld mov dec popf fcmovne imul mov or add fucompp push lods sbb fldcw imul pushf dec addr16 jmp cld xchg and inc dec icebp or sbbb push mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret xor mov xor push and sub pop xchg repnz out dec bound arpl mov lcall and mov add xchg out ja in cmpsb insb add and adc adc aam mov stc pop pop sub bound addl push ss data16 xor nop sub nop insl adc popa fsubrl push mov jae push ret mov stos sbb aad call mov push imul mov mov fldenv arpl mov aam xor repz or pop jbe dec iret and sbb mov cmp mov mov pop call gs fwait call pop nop rcrb ret sbb out in adc dec mov test in dec aam call xchg xlat sbb enter adc jl (bad) repnz fs jecxz jp mov and testb cmp or xor sbb mov inc sub out cmp sbb mov lods js sarb inc push xor outsb (bad) dec icebp rolb (bad) lret push jae test sub les (bad) pushl (bad) mov test push xchg outsl pop mov and or into pop out test push push andl sar popa ljmp lret fiaddl out imul shrb adc cmp jns add outsl lods xchg push arpl das pop lds mov out mov push adc push inc jg call dec mov fwait jae jg pop cmp inc stos cmp (bad) fldt fsts inc sbb loope add push cmpsl addl push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret cmp sub cmp insb sub sbb dec dec imul jno aaa cwtl fdivp xchg (bad) hlt sub push dec outsb mov mov lret mov xchg pop jle jl dec jae pop xchg iret aas inc mov mov mov mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret cmp sub jmp mov fcompl lcall lods mov mov push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret fst push jns xchg xchg xor cli dec and jecxz or gs (bad) sti (bad) pushl ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret cmp sub cmp jmp (bad) test jnp push mov push mov cmc stc jp cmpsb in mov push jno mov pop out cmp dec mov aam rolb aas test jnp mov pushf pop mov or adc shrb je insl imul fldenv xor clc inc jns in scas cmc ljmp adc jecxz leave movsb mov pop repz sarb (bad) cwtl pop dec adc sbb inc cld xlat adc in lea pop out lret std sub mov push or cmp xlat adcl mov jl jo fstps jg (bad) es jne scas lret adc push mov xchg dec cmp stos addl push dec jbe,pn es sub cmp xchg mov fstpl inc jl fistp and jnp je mov and xorb add (bad) fbld popa xor rolb mov dec clc in cmp cli lds xchg pop int jge rcll dec sub or int adc cmpsl jecxz mov mov into ficom andl or cmp mov xchg std (bad) das gs bnd hlt cltd push or push jnp fld (bad) sbb loop lock out sahf test nop iret nop xchg scas adc sahf push mov mov aam jo sbb scas lods sub in enter xchg xor add stc cltd lock push sbb cltd mov mov lahf out call in mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret cmp sub xor push (bad) xchg push sub pop lret movsb pushf jge jae jbe call xchg xor pop push or mov mov sahf aad fiadd sub xor rolb es repz xor add mov loop pop ret outsb cmpsl int push mov in lock out fnsave jmp cmp dec in repz push imul sub xchg mov mov lds in mov gs mov push mov push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret cmp sub in mov (bad) call xor int3 mov push popa xchg push inc movsl insl out in loopne xchg dec loope stos fnstsw push push stos xchg inc adc jl stc sub add jmp ljmp in shrl aad jge dec in das mov lock adc inc push imul frstor mov arpl jge inc lahf push sbb push gs clc mov insb cmp and int jo push (bad) (bad) cwtl xchg lcall outsb sub (bad) push call mov mov lea push push call mov pop pop add mov pop ret cmp sub cmp push ljmp test lcall dec cwtl sub push loopne mov inc cmc sub in mov daa lret (bad) rcr int and pop pop mov inc push in inc and inc lds loope sub push mov test dec xchg stos cmpsb push jae jge inc fcmovu pop out testb mov pop test add cmc (bad) mov pop cmp adc ret insl test sub pop mov add sbb xor gs aaa push ljmp lds pop mov leave fsubrs scas xor leave mov imul dec clc cmpsb iret push mov sbb mov orl mov test push adc pop into es push fstps mov mov int imul mov mov (bad) shll add loop push div int3 dec xor das cmp daa push sub adc outsb or imul rclb cwtl sbb pop sbb out jae ss inc pop (bad) fdivl cmp fdivr adc or stos in rcrl gs mov js cmp sbb in hlt mov jbe inc push inc cmc xchg popa sbb cld lahf and xchg in sbb (bad) mov int or adc sub icebp or fcmove pop mov push jmp pop sbb sarb aad inc push mov rcrb sbb xchg xor pop or jecxz (bad) bound add xchg xor mov stos xor pop adc and std pop fistl cwtl jo test stos (bad) int stos inc stos iret xchg xchg push jo dec movsl fldl (bad) pushf add test or push jecxz mov ficoml dec (bad) add push test push cmpsb jge lock cli inc out jbe sub lahf and in jp push dec mov and add fild lea repz dec js jae into mov imul setp in xor pop lock jmp cli mov fs dec inc mov dec jbe js jne inc ret mov clc jmp or jo mov test es std jp,pn jns lcall fldenv xor mov leave mov iret pop push into pop jnp sbb lods jmp dec inc push ss jle lahf lock stc pop mov jmp adc ret jl cmpsl arpl stos jnp sub sub lret fisttpll inc mov mov xor jmp jl mov data16 into dec das dec popa outsl scas scas sub (bad) dec dec lods push icebp pop outsb jmp sbb repnz daa adc das cwtl out inc xchg subl push movl rcrl lret cmpsl cmp xor or sub push jge test aas addr16 aam call in push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 fisttp and loopne fildll inc cltd inc pushf and mov lcall dec sbb xchg inc cmc mov inc lret (bad) mov mov std gs xor inc aad rorb loope or jno imul xor ss lahf outsl cmp cltd push mov (bad) sbb inc inc call cmp neg dec in jge push sbb or and or popf stos mov mov sub add scas (bad) pop clc in sti mov test (bad) in aam dec divl cmp icebp mov push xor xchg xor push loop clc clc fild or add test sbb dec push pushf ret lods mov dec pop push sub clc inc scas mov in divps in sub outsb adc in rcrb cmpl (bad) aas mov jne inc xchg jns sbb aam xor std jns xchg in movsb dec push ss and (bad) (bad) mov push mov sub test int cltd fsubr les cmpl xchg in icebp cmp mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret cmp sub cmp rolb movsb or loope jge pop inc add inc inc mulb bound inc imulb lods or insl mov add push faddl or push sub push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret cmp xchg aad cmp pop adc lret pop add jno idivb int3 icebp js fldenv push mov dec imull push mov mov add cmpsb insb mov (bad) mov cmp mov and dec mov xor in das cwtl or mov cmp add mov cmp inc push call gs pusha cwtl mov es das jae xchg imul lahf ffreep insb cmp sbb es xchg sbb sbb or sbb pop jle adc out or shlb ja out mov loop cmp jo mov dec sbbl (bad) sbb xchg push dec push cli mov cmpsb enter leave push mov das dec xchg arpl fstps imul jl adc rcrl jnp lea jo pop ss jle aam iretw mov jae pop outsb pop inc in js negl outsl pop outsb cmc stos stos cmp imul (bad) jnp or adc scas pop sbb cltd pushf push inc sbb jecxz cli test leave stos jno pusha add cmc imul hlt sub add mov lcall (bad) mov or in (bad) jne incb add mov (bad) mov bound lea imul test and dec lahf test lods mov imul movl mov sub mov jp and into jne scas sti insl daa jge pop pop push push mov push stos scas aam outsb mov push mov sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret cmp sub cmp insb sub sbb dec dec imul jno aaa cwtl fdivp mov push mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret cmp sub in mov shlb cs dec fcomps mov dec clc mov xor js xchg sub dec movsb aas dec mov pop fdivl rorb jge clc pop mov inc imul adc clc pushl push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 cmp aam mov imulb rcll inc lock jl mov pop mov sbb jecxz sub mov and jb in and outsl pop dec mov sub mov stos cli pop adc mov xchg and mov add scas push aam (bad) testb or ljmp hlt div fisttpll sbb pop test adc loop add mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret cmp sub cmp push ljmp insl xchg jp scas loope dec inc xor imul or mov push and popa nop jns,pt push ljmp js jp int3 cmp jl rcll loop dec lcall fisttp or enter fisubrl mov mov (bad) xor daa push cmp adc lds adc pop cmp sahf (bad) mov mov jae cwtl sahf js rcll lods pop inc push sub add xor jo daa sti inc mov dec incl stos ss mov fs pop or mov push mov push mov mov cmp je mov mov test jne call mov pop pop ret cmp sub in mov enter ljmp mov cld mov jge inc imul test mull push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret cmp sub cmp sbb mov mov ja sbb xor push lret pusha sahf sub inc jp dec addb xchg int3 fisttpll pop mov mov push and inc sub dec jno pop cmp mov add out xchg push xchg inc (bad) pop push cmp mov jne dec push sti int dec inc cmp clc mov js out negb or mov aaa and jo mov es cwtl sbb (bad) mov pop xchg mov int3 in jl cmp pop adc adc das out stos mov movsb mov sbb test repz cli fdivp and jmp enter stos aam adc sbb mov or xchg das mov ret xlat ljmp sub push outsb and (bad) mov sbb adc xchg push mov jmp and pop mov dec lods js ljmp int cmpsb pop push cmp mov ss repnz div aam xchg (bad) jb mov add mov scas dec lea mov in cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 cmp sub cmp jo mov jns psrlw or fstps lea mov into daa sub mov incl jne ds and movsb insb push mov out xor mov (bad) enter repz das mov pop push cmp scas push ljmp movsb ds and lret lock cmpsl cmc inc outsl jmp popf sub imul inc aaa hlt lahf or add xor addr16 dec and les pushf addr16 or mov adc aam out and repnz je loopne mov movsl mov fisubl fwait add stos inc ficompl aam outsl lret adc xchg test pusha xor mov and and out and adc bound pusha pop mov and add loop push int jmp cltd mov shrl pop pop push dec lds mov mov arpl inc int mov stos mov push (bad) cmpsl in xchg fdivrl cwtl (bad) imul xor test test inc and adc popa enter sub (bad) ss pop test stos push mov mov cmp ret lret test sbb adc ror mov cld adc roll sub in outsb or add fwait pop sbb fsubrs fildll push push dec cs push ja fcoms xor mov insl mov inc scas mov stos enter pop sbb xchg push daa inc outsb mov or jne push iret jmp jl mov bound icebp lock jno push inc or sbb clc mov (bad) push gs rcrb xchg popl cmp loope sti movsb xchg or pop mov mov pop cmp pop lods and sub mov push push push imul jae inc sub fmul ja xor mov insl stos xchg dec ds (bad) orl insl push xchg or and lret data16 cld daa pop in push jbe mov scas adc mov or sbb add sub mov xor rol andb fbld lods pandn mov ljmp mov hlt mov int3 aam ljmp lods add dec jecxz lret push aas mov push mov sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret cmp sub cmp insb sub sbb dec dec imul jno aaa cwtl fdivp gs xchg pop inc cmp push sbb jae xchg std ja mov int mov bound dec icebp jle jge sarw stc xchg and push rorb add mov jnp dec add aas ffreep (bad) cld mov dec cli aaa (bad) shlb mov icebp fs xchg push gs jg stc cmp subb imul jle ret out mov fldenv xor lcall test push mov or out and shrb in push inc push and jae jbe (bad) or jo enter call in mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret cmp sub jmp testb cmp outsb fistp xchg mov or sub xor sub xor (bad) push rorb rol insl adc (bad) jb pop les dec cmp xchg jns xchg lock sub mov fimull mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret cmp sub jmp testb cmp outsb fistp scas insb iret mov add in dec jmp shrl push xor lret gs push lret add jge xor mov testb outsb dec xor pop outsl andl sub mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret cmp sub jmp testb cmp outsl fistp aas outsl iret mov add in sbb sbb scas jge,pt fs push lret add cmp jb pop les rolb or push lret push jns aad jne sub sbb es in push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret push (bad) mov mul (bad) push push adcl xchg cmc adc sbb sbb aaa les mov gs jnp inc sub arpl loope es shrl inc cmpsl scas popf imul push icebp insl xchg sbb loope rorl jmp cltd adc sahf lret push pop sub popa adc das (bad) enter adc pop mov jnp hlt mull pushf jle and sbbl mov jmp pusha in or jp lret imull adcb in jnp mov xchg lcall cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret cmp sub cmp in daa cmp pop mulb or xor adc jnp add jo mov fbstp lret nop push fdivr add (bad) in ja add outsl leave add pusha pop stos or aas sarb test out pop insb comiss ja (bad) cmp adc cmp call jae cmp out add inc inc sbb fnop xor push ljmp movsb cli inc outsb inc jmp test mov cmp int3 stc inc lcall out movsl sbb push adc fs push xor jmp clc add adc lret gs stos xchg (bad) ss stos pop hlt fidivrl mov test inc movsb ret jae inc (bad) iret cmp int lock mov inc das add adc cmpsb add xor fwait dec outsb stos jp dec lds push scas fwait add ja jecxz cwtl add shlb mov mov mov aad xchg (bad) mov push mov push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret cmp sub cmp pop out aas xor jno xchg insl stc or and jno (bad) fcmovnu xor adc or jae mov inc movb dec test mov (bad) xor ljmp test mov mov jge out repz mov rolb adc mov outsl jne inc fnop inc (bad) fisub pop push shrl lea jno pusha aam push dec shrl jae mov add insb mov es add test clc push adc loop stos or lret or mov dec out mulb cs mov cmpsl push hlt jno cmc cmpsl mov mov loopne stc lret inc sbb push jecxz mov mov jnp jp in push sbb dec mov sbb sub (bad) cmp pop jp (bad) les push addr16 outsl mov repz cmpsl scas jnp add imul xchg xor mov jp or stc es repz lods stos aas (bad) pop xor loopne mov push mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret cmp icebp aad stos out sarl (bad) pop push or clc (bad) pop cld mov jno fidivl inc cmc xor call and ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret cmp sub jmp pop (bad) mov xor push xchg in pushl mov call pushl mov call pushl mov call pushl mov call pop ret pop jp mov sub sahf dec sahf ret (bad) pusha push mov mov sub xor inc dec add jnp out inc mov fisubrl int fisubrl out rorl push and cltd or mov mov cmp push aad dec or repz push cmp fistpll push push pop int pop (bad) mov jb cmc ljmp cli movl inc (bad) ret mov das ret xchg or adc aas pop rol fwait sbb test mov dec in dec mov fld1 and pop dec xchg push stos out inc mov idivl cs in mov test mov loopne sub repnz jo fcompl jecxz xor xchg lods jae mov insl and adc and frstor aad ficompl mov sub xchg and das out lods xor add cmp or loop call sysexit aam fwait dec xchg and fnsave data16 inc dec lods lea pop sbb cmp lcall jns add idivl jae mov aaa push and pop lods adc adc xor adc dec fsubs inc mov imull lea pop cmc lret sub mov dec (bad) hlt push das jne mov icebp es outsb dec xbegin insb jecxz pop jb xchg jnp scas sub mov push jmp je rorl push ss out outsb jl ss push dec mov mov out cmp inc pop pop leave jge aaa rcr lds in sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret fucomp fsubs adc add xor imulb jl pop mov mov jae jle rolb popf xchg mov cmp sbb scas inc mov repz xchg pop (bad) cli adc out mov inc (bad) xchg xor or fstpt jmp lahf lret cmp fdivs add sub in xor stos gs xor push (bad) insl (bad) mov sbb adc mov xor xor sahf mov xor lahf mov pop or fwait rol dec icebp (bad) test push mov imul in sub jns xchg or outsb xor rcll js jle insl in lahf or in sub xchg sbb push mov outsb ja pop nop aam stos push pop push clc cmp outsl xor sbb daa lods adc call in push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret cmp sub cmp loope mov pop jb inc nop out sub xchg (bad) mov xor push pop jne loopnew and andl and and aad add (bad) repz mov push push cmp push inc rcll jae inc insl movsb mov scas daa in cmpsl cmc jmp jle aad mov clc (bad) arpl ret mov jl dec stos jno add add lea fidiv pushf and lods lret das xlat pop or xchg jge mov adc inc mov mov sbb scas mov fdiv aam call test and orl pop mov loopne lock adc cli pop adc xchg dec mov flds jns jecxz and pusha sbb mov fisubl pop out (bad) fldcw mov push sahf add outsb sti mov push mov mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret cmp sub in mov (bad) call iret notl imul and loope push scas lret sub cld popa je fstpt jge jmp lds fldl inc (bad) sbb push call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret push daa pop jns jnp xor sub and jb out inc sbb and and xchg push scas (bad) das sbb int3 fwait xor rcrb push dec and dec arpl in loope inc cwtl push test hlt add and cmpsl jle lea mov push mov push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret cmp sub xor push (bad) mov fistpll jge jae clc dec data16 fnsave fdivp inc cmc sub add push lret mov loopne aam inc std pop movl mov gs xchg dec jle push mov xchg sub insl and adc lret xchg imul push inc push (bad) js sub lods les repnz jl ror out fs lret or into cmp in mov mov insl xchg test mov movmskps iret dec aaa sub nop lret ja (bad) popf jmp mov xor mov mov mov movsb stc daa jns dec fwait mov adc dec sbb cmp orl jno or xchg pop stc les adc jmp pop cli inc movl jo data16 mov out xchg pop dec cltd xchg mov notb subl dec repnz frstor enter fisubrl xorb xor mov cmp inc jae (bad) movsb cmp or mov in adc insl adc lcall scas loope adc outsb push aas and add sub mov iret push aaa or inc out mov adc sti into push fwait into mov (bad) dec or popf stos cltd xchg push lods mov push mov push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret cmp sub out mov cmp dec mov ja jae jae lea jle fsubr repz mov int3 cmc rorb rclb roll sarb adc add test aas inc inc inc and pushf stc or dec loop notl push mov sub jbe mov popa in (bad) xor jge sbb scas adc jge icebp xor pop add dec dec inc mov idivl cmp push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret cmp sub adc outsb push cli (bad) jae jge pop rcll test sbb push mov mov mov and dec imul sbb out shr rcrl adc std mov aam loop int and cld icebp in sahf sub or push ret idiv rorb jae pop mov push aaa out sub (bad) repz jge pop fisttp adc addr16 jmp pushw jo mov cmp or fisubl or mov sbb mov iret xchg stc cmc (bad) sub les popf push scas clc inc rolb rorl inc or je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret cmp sub jmp xchg in adc xor xchg jge imul pop ljmp std iret mov mov arpl inc cmc insb scas push xor jg mov mov jb out mov xor cs std icebp in pop lods mov xor cmp sub sub call in sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret cmp sub cmp push ljmp test pop mov das mov jl adc mov jmp fucom xlat xchg aaa pop mov jmp push fldl jb and ret and jo xchg in (bad) dec sub jmp jns test loop sbb xor pop enter cmp sahf push lret sub dec push mov push aaa fbstp aaa push sahf push mulb loop sti (bad) mov xor bound inc mov sbb jge pop dec mov mov orb inc adc sbb pop lock push push fnstcw push test sub insl pop pop mov movsb pop rclb cs js mulb setns jle push lcall shrb fmull jecxz scas adc in (bad) and pop shrl mov sbb leave incb loope fstpl add xchg dec dec movsl dec fsubrs lahf xor mov cmp and lea lds dec or jns mov mov scas test mov push (bad) stos imul jno jbe inc push pop out inc cwtl or xor add subl dec pop adc mov dec mov sbb in mov out test rcll ja ss repz pop in fisttp sbb arpl add dec cmpsb daa popa or push mov adc jecxz popf mov jae cwtl adc fistl xchg gs inc mov enter into inc imul fstl test call in mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret cmp sub jmp testb sbb (bad) jp push je,pt cmp add mov (bad) ss sti fs das lret adc pop jae push sub dec movsl (bad) push adc mov push mov fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret cmp sub jmp (bad) lahf pushl cltd ror mov call in push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret cmp sub cmp push ljmp test mov sbbl xchg inc xchg aam nop sub dec movsl aas inc (bad) push pop mov dec jb addr16 popf pop xchg shl cs mov out std adc dec repnz in xor pop cltd mov pop adc ja mov imul movsl vsqrtsd inc push pop out cmp ljmp jecxz sahf jmp dec and data16 or pushf push daa mov lcall lods je gs lods pop jb push jle xor inc add pushf add hlt push pop inc std arpl icebp mov pop xlat jmp add repnz fildll orl sub ljmp rcrb mov push mov sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret fist push inc mov das in bound push aas push xchg lret cmp pusha or sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop jae fdivrs (bad) imulb jns movb xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp dec add fcomp sub movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp dec add and fcomp fcomp out test je fchs ret fstp fstp fld1 ret dec sub mov dec jl rol aas stos or jnp fldcw and in xchg fnsave fs (bad) mov leave fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg jae fdivrs sub fstp fstp fldt or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret shr test cmp xchg and cmp and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret cmp sub jmp cli mov notl aaa jge mov stc push sbb stos iret int and iret xor pop mov ja and jmp mov and push lret add es cltd and outsb or sahf nop pop dec scas dec dec into jo inc sub test mov out sbb push mul mov or cs push inc rclb shl mov jge mov imul add sbb dec xchg jecxz dec fs push stos cmpsl add mov movsb test xor mov repz cld fbld js sub jl leave jge adc xchg xchg pop push jbe mov pop fchs cmpsb test out (bad) mov sub xchg pop mov add imul mov (bad) inc gs (bad) xchg cs mov adc test fs mov mov push das and jg xor jle (bad) fidivrl fsubrs insb daa inc inc lds mov mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret cmp sub cmp jmp jle xchg scas jb dec pop jp ljmp in add cmp je jl inc mov add add dec leave (bad) fsubl sub aaa jae int3 or lds mov outsl popa add xor adc ja and (bad) pop cmc jns rorl fbstp out jg dec sbb (bad) xor insl mov xchg das cmc sub hlt sahf inc mov mov (bad) add xor fnstenv lock (bad) add sar clc jle,pn ljmp scas inc in pop stos cmpsb jl aaa dec adc pushf push pop cmpsl or mov dec inc ds mov and repz insl sbb movsb loop popa (bad) mov data16 jecxz sbb xchg and xor cli cmp and push sbb lcall ficompl xor fs inc ficompl mov mov call roll mov mull stos xor inc fnsave add adc or (bad) mov add cmp pop gs mov (bad) mov cltd sti sub lcall push pop xor hlt xchg dec and cmp mov leave sbb cltd pop loop sub dec adc or test push sub mov jmp ljmp mov or cs ss aaa or dec mov adc push lret dec mov (bad) outsb push scas pop sbb cmpsl loope insl xor into arpl out lret sti (bad) out add ja or mov xchg rcll cmpl pop cs push mov xor dec faddl cmp pop or cmp icebp pop add cmpsl jo or adc jmp jo push xchg sarb (bad) mov and cmp or pop mov xchg ret mov fldl pop aad xchg imul mov ret (bad) cmc xor push adc jae push cmp lcall lds mov add xor sbb inc mov mov pop cmp mov cmp (bad) push into xor rcll lods jnp scas rorl adc ss leave in pop xor push mov (bad) ja push push lea out add add bound sbb repz xchg jecxz mov pop out jp insl in push jle mov jl cmpsb mov xchg (bad) adc insb aaa sub cmpsb jp adc dec mov mov fdivs jmp lds cmpsb add cmp push mov loope xchg movsl icebp in pop or les imul test jp hlt cmp (bad) aam aaa or sub test fstps xchg test inc mov cmp lds jae sub test shll ficompl out sbb mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret cmp sub cmp jmp jle lcall and (bad) fdivl fucom sub imul push (bad) hlt jnp inc lahf dec and pusha dec movsb push ljmp scas mov test std bnd cmpsl mov addl mov sub push push imul test loope xor push sbb mov mov pop or adc and xor outsl sbb pop dec add aaa imul sahf mov xchg mov xor pop or stos xor add stos loope movsb xchg sarb gs sbb jns sysexit cmp gs gs mov inc daa mov loopne mov push or pop dec dec fs xor (bad) vmaxps mov ffree (bad) test jb ds and inc or mov roll fndisi(8087 cltd arpl mov jle xor adc fs mov push jns (bad) jns rorb mov mull scas hlt or popf icebp outsb push (bad) cmp or inc roll inc or roll clc lcall inc push incb pushf sub or mov mov leave test out cmp insb mov cmp out push sbb sub cmp push jecxz,pt mov mov and adc sub and pop xchg xchg in and pushf andb jmp pop sti cmp imull mov jmp gs push iret cltd add xor jmp fucom push dec or cs not lahf dec dec out mov mov in fs imul aaa jle sbb inc std stos gs or stos mov mov inc mov fisubrl inc add por bound aas cs fist cmpsl push jbe add into add sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret cmp sub cmp jo mov jns setl mov sub mov dec inc idivb xchg lods fwait jbe nop xor test popf and rclb jae or xchg dec pop cs jle int3 mov aas push jp sahf pop xchg push aam push ficompl xlat out clc xor sarl dec jmp movsb add scas (bad) push xchg push inc push ret mov mov (bad) lret jg lds imul (bad) xor lods adc notl lcall adc sub push scas imul in xor bound in dec cmp (bad) aad inc mov adc cmp jmp adc mov adc pop sbb push cli jns xor lahf (bad) vpcmpeqw and int3 lahf movsb fwait pop loop imul insb sbb in das mov and es jne xor cltd scas cmp push repz sbb or push ds dec test prefetcht1 pushf jbe sbb fildll lods out iret cmp add add inc xor (bad) mov mov pop xchg jmp push or hlt jmp xchg mulb dec xchg dec fcoms mov addr16 add sub (bad) xchg cmp les push insl pop dec add rcrl adc lods inc push sbb arpl jns aas fsub sub sub jp inc adc add mov ljmp les insl pop pop aad and mov std dec mov scas adc or adc in test iret or cwtl test jle pop adcl or ljmp sbb add xchg lcall je mov mov ljmp or pop fldt aam pop jg jo cmpsb rcr ret scas add (bad) sbb sub mov test mov out dec js pop out jo mov mov pusha leave jle push pop mov mov sbb fs idiv jle loope and mov std pop daa inc cmpsl fildll (bad) push push mov adc mov rorl mov adc jnp or and stos fisttpl mov push mov sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 cmp sub jmp dec push xchg mov lods notl push jns cmp pusha aad or jle pop sub inc xlat ficomp dec push aad mov addr16 lods stos sub push mov in xchg inc mov fildl sub inc out ror out (bad) fisubl sub push (bad) shrl push lds (bad) popa (bad) xor lahf arpl inc popa jl mov push xchg push lock outsb shrb adc push lods cmp mov mov les sbb jp pop maskmovq imull aam jmp pop adc scas gs insl data16 imulb sub dec loope xor lods ret jmp dec es aad mov push mov sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret cmp sub jmp dec push xchg mov scas notl push jns daa pop jno aad or jle pop sub inc xlat ficomp dec push aad mov addr16 lods stos sub push mov in xchg inc mov fildl sub inc out ror out (bad) fisubl sub push (bad) shrl push lds (bad) popa (bad) xor lahf arpl inc popa jl mov push xchg push lock outsb (bad) jbe adc push lods cmp lods inc mov cli pop clc in repz fdivr push dec push lahf xor cmp and and mov or jns add sub mov cmp ret push inc int jg insb movsb enter mov push mov mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp cmp sub cmp push ljmp xchg jg sarl cltd das movsl imul sub and jge push push lret sahf sub in repz sti add mov out or jmp addl stc or lahf cmp or cltd dec fdivrs dec decb xor movsb mov outsb movsl push mov xchg jns aaa cli lock cs cmp pop adc xor movsl int3 cmp test push sub repz subl ds fnstenv aam xor add push mov dec xor enter add jae dec dec movsl jp inc mov cwtl mov (bad) mov push in push loopne insl scas test (bad) bound movsb xchg (bad) adc jne test inc hlt fiadd stc sub aas fidiv call enter mov pop (bad) mov add fcmovne adc out ljmp or cmp aad test and pop in mov imull pop jl pop jb mov daa ret xchg sub dec stos jnp aaa mov js push out movsl jnp fs loopne dec push hlt clc and pushf movsb rorb mov js and mov cltd dec or xchg std jbe clc push in (bad) loop inc xor dec jmp mov call (bad) ret iret in xor mov lcall pop insl lret mov jmp or sbb ljmp jo mov mov fnstsw sub xchg add mov push mov sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret cmp sub xor mov mov xor push pop push pusha pop jge inc lds loope lret push dec mov xor cmp outsl sbb fwait data16 mov cmp mov and mov push xor test inc pusha sar jge in push mov ret or mov aam stos addr16 in insb and fs sbb adc jo sub popa jge add sbb sbb gs es push mov mov push mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret cmp sub cmp jo mov jns setns jp scas and sub repz mov movsl or add mov mov inc mov fdivr mov xor or cmp sub nopl jl in aas es lcall xchg xchg push (bad) cld popa (bad) sub push jl push insl push xchg inc ret xor movsb pop (bad) pop push rclb sti mov mov xchg outsl cmp cmp or lret loopew inc push (bad) aas jno and or add insb xor stos in dec push loopne or mov lods adc call sbbl mov enter xacquire pushf or ret scas mov fs addr16 es add jle sar fcomps iret sub mov sbb pushf (bad) xchg mov ja mov sbb sbb or hlt daa je jno fstpt xlat out loope test adc jmp scas lahf ja adc rol push in sub (bad) dec cmp mov add xor xor adc xchg rcrl bound and xor test loop fdiv add addr16 mov insb adc (bad) (bad) stc out adcb ljmp subl sbb sub inc movl repz popa xlat xchg push pop jnp xchg pop xor jle lret ja lods pop mov cmp sub das push push test mov sbb cmp ficom cmc lret push jge out push sbb mov jle test add adc inc test rorb xor inc out xchg xchg cli fdivs xor xor (bad) shrl mov aaa iret pop test sbb inc add add sub mov push lods out xchg lea shlb sbb das xchg ljmp sbb mov inc loopne mov pop (bad) dec sub divl pop mov jno push loop (bad) xor cs or ds ja js in pop inc testl pop (bad) jge or jo stos inc mov int3 ja sarl adc xchg stos add and push addr16 xor jl outsb inc jns enter adc jbe mov pop fsubl cs (bad) mov call arpl jbe movsl sbb fwait std sub (bad) jge fwait aam cmc push sbb mov into sbb jecxz aaa aas or aam mov push bound push test jmp sbb ret mov and ja jge dec pop das repnz in or gs and cmp inc add popa add mov rorl pop or pop movsb dec xchg pop cmp in lock push arpl (bad) mov xchg sub pop jmp or ret scas sub (bad) mov jle repnz cmpsl loopne repnz xchg push inc pop sbb aam int cmpl inc scas or movb and (bad) pusha mov repz pop dec mov shr cmp add sbb (bad) scas cmp pop leave pusha jb lock push sub or inc arpl pop xchg movsb xlat mov (bad) pop mov shl push mov sbb pop loope rcrl push (bad) arpl (bad) adc cmpsb outsb and xor stos xchg das test pusha loope cmp insl pushf scas xchg fnstcw sub mov inc gs addb jecxz sub add or in push movsl push pop mov and mov mov inc outsb or flds loope loopne xchg in xor int3 xchg stos jb add dec jp mov pop mov data16 xor dec stos fstpl xchg add cmp (bad) in in push jmp sub test or scas adc fldenv sbb js xchg (bad) stos mov int3 int3 xchg addr16 pop sub and in (bad) jle scas iret pop pop xchg std push jg int3 arpl cmp (bad) xor (bad) pop mov add pop inc mov xchg inc cmp dec mov bound std (bad) cltd jbe dec (bad) cmpsb xor test fistl (bad) cmp mov icebp push movsl mov das xor insl or out dec inc addr16 dec inc mov and xchg sbb jle cmp daa bound dec add outsl sub lret push xor pop jg lds sbb pop add mov test jecxz loopne scas pop and jecxz pop imul stc jne add sarl aas movsb andl mov std jnp arpl (bad) fdiv fstpl fdivrl into dec cmpsl in call fmull jno cltd mov ja (bad) lods sbb mov stos mov hlt lcall xchg cltd (bad) dec outsb daa data16 mov sub cmpsl sub imul sbb ret es dec lods cmovle bound scas lcall ror (bad) fldt out add dec (bad) push dec jmp push subl add int ret imul sbb insb leave xor xor sti lea adc aad cs mov push xchg jle cmp or sbb daa (bad) out repz std cmp pop cltd push aas cmc mov lea jo jg ficompl mov fidivl int3 lds inc push dec jmp cmc jmp in lret incb pop lods sarb scas dec add push jecxz test bound popl pushf inc push xchg fs pop scas sbb adc push aam push lret call repz add je pop cli and in ljmp and xchg ljmp and mov dec or cmp lock push add sti cs xlat mov cmp popa and test or push dec lret pop clc sar das cmp sub and cmp mov shrl pop andb fwait lret test fistl ljmp sub mov sub out jge push mov fucompp dec inc jnp xor imul frstor mov push jecxz push sahf insb or jnp aaa inc push and test (bad) push cmp in aaa sub lock pop jp in add and sub cmp sbb xor xchg in jne add jne cmp sub pop outsb fidivrl cmp rorb fist outsl jo icebp les cmpl out pop loop,pn jbe adc push mov iret adcl push sub clc dec lock or lahf lds jbe xor aam outsl push mov fldl sbb and or push adc mov mov xchg sub call cmp loop xor sbb aam or fcmove ss mov pop mov inc adc add sbb sbb cmpl gs jbe push mov add sbb in push imul or mov cmp cmp push subl dec sub in in jnp sbb arpl pop or outsb (bad) pusha lea cmp aad pop in test push pop cmp aam sbb xor pop data16 inc popf dec iret xor lea out addr16 xchg test xor cmp adc dec fimul adc push and xchg lods pop enter mov pop nop test sub bound shrl iret cmp adc sti sub xor lds push loop sbb pop ret pop add mov xchg xchg inc sub mov loopne adc and in add mov (bad) cmp fimul je mov cmp jg sub cmp add add jo bound inc lds in inc inc ljmp movsb jle jmp add push adc or (bad) imulb jecxz pop push pop jle sub (bad) jns popa dec pop or ss sub inc xchg adc and mov mov push xchg dec fwait jle cld imul lcall out add mov jmp push xor gs or dec out fdivrs ja imul xchg sbb lock lahf xor xchg pushf lods and xchg aas and (bad) int hlt test cmp adc dec mov (bad) dec mov mov jg into or test cmpsl xor add pop mov dec cmp nop imul je push leave dec dec ljmp cmp loope sbb jl sub push push cld pushf sbb ffreep sub jno sti add add cmc ficomp mov ret scas test clc rcrl sbb pusha fnsave (bad) repz xor lahf stos test in mov sbb cmc xchg xor or ss jbe inc pop dec arpl int3 les or cld out adc cmp jl int3 cmpsl inc mov movsl fadd (bad) fnop enter jmp (bad) jno jns jne je push loope mov mov fimull sub push out mov (bad) ljmp mov data16 out pop std add sbb repz jl loop in cmc stc gs (bad) sbb push push push es cmp xchg out aam sub (bad) sub mov pusha das pop clc fwait push mov inc mov mov repnz clc xchg mov inc or cld aaa ja pop add xor fstp ds or call nop cmp add cwtl cmp cwtl lock jae into cmp ror jns adc into scas int3 and fsubl jp xor adc dec loop nop arpl dec imul repnz ret cld rorb push pop or mov jae aas lcall test sub jmp mov push mov jge pop mov pop cmpsb push lods adc (bad) js dec sbbl ds lret pop xor push inc insl lods cli jle jp fs std (bad) mov fnop xchg aaa lods mov cmp loope dec scas (bad) movq (bad) xlat dec mov in cmp xor cmpsb inc sub jmp pop sub popa mov xchg xor xchg fldl2e pop fisubl push push or lds xchg ss ds dec xor faddl cld dec hlt dec jne push in xor push stos add inc xchg inc lahf and imull adc ret shlb inc outsb xorl stos fwait pusha jecxz mov cmc movsl fs in dec sbb bound dec fcoml leave in xor xchg push mov xchg mov inc pop adc call push repnz js xor out (bad) in xor sti xchg aas cwtl mov outsb mov pop push cs ret imul push xchg ret inc mov push xor ret mov sub dec push mov fdivrs pushf mov cmp aas ret dec mov xchg fcomip mov fcoml out cmc add js data16 insb fwait movsb rcrb es push cltd jnp (bad) sbb xor dec (bad) cmp xor and mov in js push jbe mov mov and ss sti fcomps mov mov push mov arpl lock jl lds and dec test sub icebp pusha pop gs or shlb das cmp lds inc repnz xchg lods sub out fdivrs push pop and or lods xlat pop test add pop fidivrl pushw fcompl adc cmpsb in cmpsb push fwait push mov dec jecxz (bad) cmpsb push insb mov and leave shll jecxz dec mov fdivl jae scas xorb adc cs (bad) int ljmp adc xchg and xor hlt popa xchg insl popf pop pop sarl mov or rorb lret cmp sub jnp mov nop jo mov push ljmp fisubr cwtl cmp push mov pop stos ss sarb xchg sbb add pop cli lock ficomp (bad) out push sbb movsb mov jns pop gs loope aaa pop cmc pop jmp es call xor add arpl lea sub std and mov fwait inc xchg (bad) sbb push mov rcrb inc add fs ss xchg add jo insb lret fcomps sbb mov jp popf or push add mov sub mov je push mov cmp sub inc jecxz and fmull mov xor pop jle (bad) dec sar sub sbb aaa mov pop and arpl loop or adc inc jb inc clc out enter test fcoml ret addb mov inc nop and pop mov (bad) adc jae das lods mov jmp gs in cwtl pop mov cltd sub sti cltd (bad) fwait ja jne int3 inc xor xorb mov scas jg mov adc xchg mov popf xchg int mov (bad) xchg inc or push rclb movsl lods dec (bad) loopne repnz pop dec push enter add mov ss loope faddp and data16 addr16 shrb xchg adc test cli js push xchg sub (bad) pop or push das pop or sbb ret lds leave ds push sub pop mov into xor inc decb sub in ja add xor lds jns (bad) fild arpl lret pop dec fcmovu mov mov push xacquire adc leave xchg out cltd jle cmp sub xorl push dec push mov pushf sahf pop push inc mov mov popa or pop pop push int3 sahf rcrb cmp ss sahf das mov out cmpsl scas rolb pop dec outsl pop mov jns das sub cmp repz dec aaa xchg add sub ficom adc dec enter and and aad xor pusha hlt (bad) adc nop (bad) jl add fisubl ljmp leave movsb push int3 scas aas xor or ret outsb xor dec mov pop std shrl pusha jmp jp cmp xor and jnp jge insb jecxz out out sbb movsb mov (bad) ljmp inc and ss inc fnop test leave adc scas gs js cli mov cmp daa pop xchg sub les push dec ret outsb test outsl imul add jecxz out dec shrl mov xor mov add insl icebp xor arpl (bad) subl or dec je lock or jmp hlt cmp (bad) outsb popf fisubrl and movb test clc sub pop jne (bad) sbb lahf mov xchg adc sub (bad) loope inc pop imul cmp mov lret ret loope push arpl pop mov pop loop xchg sbb sub test mov outsl (bad) ficomp push ror sti jbe or push and or int cltd movsb push addr16 pop scas inc pop and je cmp xor bound or xchg int3 stos cmp fstpt ror and and in xchg or ficom scas adc outsl cmpsb ror frstor (bad) xor jg frndint jne jg sti xor xchg bound mov mov int3 push mov cmp or inc push xchg fwait xchg jmp addl push inc xor in shlb in lods cmc popa cmp mov in push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret cmp sub in mov (bad) call mul mov sub xchg popf out xlat jmp jno mov cmp mov loop mov hlt lods lahf sbb int xchg mov pop aas inc shlb push stos clc push dec lcall push aam mov cs push mov push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret cmp sub adc xor (bad) lcall jg fwait mov push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret cmp sub xor bound cli cmpsb and adc (bad) imul imul lds inc bound incl push jg pushf inc lea add sti (bad) mov jae mov pushf or pop sub xchg daa mov (bad) int3 cmp ja xor (bad) sub and fldlg2 add pop arpl clc or les ljmp pop sbb mov rorb mov mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop xor mov push xchg and sbb mov dec (bad) pushf push pusha pop loopne daa xor arpl mov aad or outsl sbb and loop (bad) (bad) call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp ret mov mov push in popa push mov cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 ret sub adc dec inc in xor cmp mov loope imul jp lea add mov mov test sti sub dec xor hlt hlt fsubs icebp stc int push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret ret and mov push lock push mov scas add leave cmp lock sahf fcoms adc lret dec mov (bad) test clc cli (bad) shll scas cli andl idivb lock add pop and mov and cmp jne fnstcw mov and cmp lea jne jmp mov mov rorb (bad) into test lahf pop adc pop bound or adc mov out xlat mov xchg pop cmp mov imul xor ljmp cmp imulb xor (bad) mov aas (bad) mov xor loop stc aaa add ret lods cmp cmp jmp mov lcall xchg hlt in xor and xlat in sahf pop xlat push dec ror pop jno hlt mov fistp add xor bound fwait shrb push dec jb sbb sarb mov pushf mov jp add (bad) mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret enter loope push inc jo mov jns jae inc pop in mov in jnp clc mov or jmp push mov jnp adc mov jecxz insb push frstor mov in jno inc (bad) pusha jns repnz loope mov adc or inc cmpsb sbb xor popa bound xlat outsb mov or (bad) adc jg movsb mov mov es add sub dec push aam sbb jb add or pushf in shrl mov mov adc xor stos xor pop cld div outsl jbe aas jg pop test cwtl leave push mov test pop mov fdivs imul pop rorl clc out ret fistpl pop dec push je shll xor sub cld mov aas ds adc lods xchg movsb pop cmc adc dec xor add lret pop ljmp jl out mov cwtl xchg repnz insb fldt les into call test mov sahf ja scas mov out sub or cmp xchg test aas mov jb into xchg test loop push cli adc jmp mov sbb mov addl add ds pusha test mov dec push in (bad) mov fidivr add imul adc ljmp es cmp add jno or sbb pop mov inc (bad) ja mov int3 and xor sbb stos push jmp cs orb mov (bad) cmp push fsts in leave (bad) shl lds xchg fimul addb cmpl adc mov int ds mov pusha add cmpsl daa push mov inc pop mul negl insl fimul jbe jmp or test mov mov ja xchg xor and lcall or xor or sti es shll repnz sbb mull rep sbb mov bound mov int mov stc stc enter fldt inc js and inc incl cmp shll inc shrd mov mov ja xchg sub xchg ret loop mov shl ss add imul xor ds cmc (bad) pop (bad) mov jmp arpl mov (bad) mov lock cltd cmp dec clc (bad) mov fxch inc (bad) adcb adc or mov test icebp xchg js xor jecxz mov cwtl inc sub pop sbb gs shl test fistl pop push xor sbb add mov cmp push jl scas (bad) cmc fs xchg roll fmull mov xchg test xchg xorl es js cmp fadds flds stc xbegin xchg sbb sub lret push test push and cltd stc ret inc scas jg adc pop das adcb (bad) jmp jle jmp push adc ss cmp test pop rol adc inc scas cmc or (bad) lds pop dec inc dec fiadd clc arpl ret and adc mov mov pop sbb lcall punpckhbw push add mov sub adc scas push cmpsb inc mov dec shrb pop popa push scas frstor inc jo xor lds neg cmp (bad) and add cmpsl dec cmp jbe add nop mov mov pop fcomi loopne xor and (bad) or imul test and sbb outsl icebp mov push cs std test push fsubrl (bad) ds or mov dec daa xchg inc jecxz stc pop lret adc mov and dec popf xchg push aad (bad) jne std mov mov sub lret subl adc popa lahf cmp pop (bad) out fidivl lds xchg xchg sbb lds adcl icebp ja jp shrl cmp xchg dec sub mov push js push fstpt push leave or mov repz inc rorb xor pop shll pop dec and and mov push clc ret test int3 cmp pushf in ret arpl adc ret sti fidiv fsts lret popa addr16 ret nop add outsb imul sarl mov repz jl les sbb push sahf xor push pop or lds stos idivl xchg std jnp jb sarl outsl add ret jo cmp push mov push or stos lods stc sbb mov int3 ljmp mov push aad ljmp mov loopne es in out movsb xor or sbb cwtl inc fildl pop push push sbb and pop fistp in adc mov add (bad) lods in pop (bad) mov shll in inc lahf sbb sbb push ret mov bound dec scas and mov and outsl or sbb call jnp ret inc mov cmp into lds jle xor gs cmp loope mov xor dec dec sbb mov les mov out mov add pop and and fwait lea xchg (bad) cmc mov mov lret mov adc pand xor adc ror (bad) iret scas jecxz cwtl lods loopne sarb xchg jno adc fsubr xchg dec push mov pop scas and addr16 xor add imull mov ljmp int lods jmp call mov and (bad) loopnew add and mov mov xchg xor jae bound (bad) divb pop jl mov mov aam push jne lods xchg sahf cmp dec (bad) xchg cmp adc in pop mov ss xchg mov je push xchg adc sbb bound cmc outsl out xor cmp loop pop add mov inc cmp jge sub add jmp into sub and rorb lcall jne fiadd lds bound hlt (bad) xor inc and leave in xor inc mov mov jno pop mov dec scas fwait mov jno xor ret sti dec push jmp sahf pop xchg mov mov arpl ja mov clc xorl (bad) ja mov inc mov add fsubr xlat enter cld pop adc test mov mov xor pop or and (bad) (bad) repnz repnz ljmp stc cmovp mov lret das scas in fistp lret leave lret aad mov popa lcall sub add mov popf arpl xlat add add repnz xor out jle push movsl out inc xchg bnd xor mov test call jmp hlt mov dec xor xchg lret jmp idivl mov jg test pop mov sbb mov aaa jns inc add add aas movsb inc jbe je xchg jl ds mov add icebp es sbb lret adc (bad) pop call pop inc pop push pusha int sub mov mov lcall movsb xchg sahf xchg pop xor mov pop loope leave sti inc dec adc jns imul in cmp lcall cld push lahf repz jb adcl inc push cwtl jp es fwait int hlt mov pop jecxz clc xchg js icebp mov xor inc push (bad) or movsl outsb adc fld enter cli add or iret shlb fdivr adc mov daa fisub ret fwait in iret dec and das lds int dec push pop ret aad nop enter adc rcrl push fcmovnb xchg jnp mov test cltd mov jo sahf mov sub test add cmpsb jp call mov sbb dec cli xchg cmpsb cmpsb pop pusha pop fsts xor outsl mov mov jns pop mov inc in cmp push adc push les cmc mov stc push out icebp cmpsl mov pop hlt mov outsl cmpsl inc lods xchg sbb ja outsl stos or or sbb xchg leave mov cmp lods call mov pop nop iret fisttpll pop fcmovne xor shr dec sbb mov das jno cltd (bad) dec ret imul xchg xor lret ret int lods adc sbb inc sbb inc fucomip sahf ret push sbb sbb jnp sarb push pushf into cmp bound xor lret ljmp push out faddl out (bad) xor or insb mov fidivrl cmpsl pushf add ret negb mov push sbb jns scas mov notl xor xor mov dec mov mov stos cmp repz pop js xor rorb xor roll imul mov jbe cmc test mov sarb out xor xchg rcl cmpsb aas jge (bad) incl push cmpb lods fs shll pop and mov adc pushf enter sbb adc add jne push lods xchg push xchg loop xor mov cmpsl ds cld xor movb js bound (bad) push sub jbe int3 push xor xchg xchg inc and cmp test inc and cmp ficom stos mov shl mov xchg mov sub xchg cmp fnop dec bound popl mov les (bad) jae adc stos iret and mov xchg dec ja cwtl pop xchg ds gs mov jae xchg sub test in or fstps outsb repnz cmpsb cmpsb jmp ja sbb fwait and pop sarl xor inc sub lret xchg pop sub in pop pushf out xor les ficompl lahf es sbb aaa cmc add dec pop mov je add imul sbb mov xchg stc mov clc push mov inc fcompl bound pop dec bnd sub sub and fidivrl mov (bad) out (bad) loopne pop inc inc fldcw fcoml in and outsl inc cli jg fadds je jmp add pop mov add fucomp sbb jno (bad) sbb or xor add sbb jb mov stos mov (bad) xor push cmc mov enter cmpl mov push mulb in outsl dec and add pop mov dec pop lock scas lret sar fisub and dec (bad) adc or adc mov pop inc pop or cmp sub fwait mov in xchg push cltd mov adc out bound jecxz and push push xchg loopne call shlb dec sti pop inc fwait lcall (bad) xchg adc inc mov lea sbb jnp push sbb out mov pop push (bad) icebp inc (bad) jmp cwtl (bad) ljmp sbb mov dec push mov sbb lret xchg mov popf ljmp jo add jae mov xchg cmc mov call std andb mov push ret pop les ljmp mov jbe std cmp jge fwait rcl mov rorl push add pop pop mov outsb fidiv add rcl shlb lods add outsl adc adc jecxz lcall cmpsl leave loopne out and (bad) icebp cld scas hlt fcmove insb mov imul fstpl or loopne add sti leave mov fidivr jl sub data16 xor jg jae fwait xor shrl push fnstenv mov (bad) ret iret xchg xor test imul imul aaa hlt negb enter je dec dec adc pop adc jno sub cmp addr16 rorl mov sbb lods and xor jecxz stos cmpsl mov cmpsb dec mov adc sbb iret lea mov adc and mov sbb xchg shll xor xchg add jmp push in inc sub arpl (bad) repz push jbe in mov xchg inc mov mov mov int3 out sti cwtl xchg mov loopne imul lods idivb push cwtl addr16 mov dec dec ret or mov bound sub bound inc movsb insl fimull es dec dec mov and nop fsubr fisttpl mov mov sbb mov leave push inc ret mov fbld js mov or mov fistp inc insb pop ret repnz dec ret dec mov arpl jne inc sbb cltd aas pop sbb (bad) mov gs lret xchg sub shrb test sub push pop fsubrs shll fmuls test pcmpeqd bound adc xor xchg sub adc fdivrl sahf fmul rcll push scas lods sub rcr jg lea fisubr fucom repnz mov xor jae je sbb push add pop push fcomip push andb or fwait sub jle inc ss xor nop imul ud2 pop adc rol fiaddl sbbl xchg lods mull mov es mov mov mov (bad) xchg int xor ss xor sahf mov js fisubl cmpsb pusha xor jne push cmc inc mov inc jne xchg xchg cld repz sub sarl jmp es inc dec push or inc mov cmp es jmp pop inc in xchg loope push lret xchg xchg xchg or add clc fstps clc dec (bad) inc mov addr16 sub pop outsb or jmp mov popa repz pop mov jmp rorb xchg jne cmpsl dec xchg adc xchg or imul add repnz inc lds leave mov mov lea lret mov pop sbbb pop daa adc xchg push iret test pop push in in insl iret jp pop into and lcall stc push outsb in mov insb xchg dec and ret mov push cmp js adc dec jecxz fild pop clc std xchg scas fs das add xor arpl mov jmp insb sbbl stc (bad) outsl push or pop nop cltd lods push cmp sbb cmp pop xor cli adc fidivl lret xor adc push mov mov jl xchg in mov nopl jge (bad) mov push cmp loope pop pop mov mov (bad) enter mov jge in pushf mov mov orl mov add (bad) je and push inc dec fsubrp dec xchg mov sbb test jle mov lea xchg das pop in push repz sti jge inc lahf fildll xchg imul inc jmp outsl sahf pop cmp mov mov jge movsl xor outsl or mov stos mov cmp out xor xor out pop pop jmp pop sub pop pusha jmp pusha sbbl add inc (bad) in cmpsb jmp repz pop les pop xlat bound push fiadd loope arpl je mov shl xor xchg dec imulb add add cmp pop into mov push inc sbb mov push les (bad) push jl test in mov inc cltd ret out cmp add aad push paddb push sub in sub add and xchg xor in mov adc and dec and test xor incl out push pop je and nopl mov pop cs (bad) sbb and shl or and (bad) mov in mov fs jl xchg scas fiaddl pop cmp out popf scas push notb xchg addr16 mov aam pop mov pushf add jge stc les (bad) insb sti dec cwtl pop mov clc push dec dec sbbb shr cwtl cmp fisubl aam inc add adc and insb jmp push (bad) cltd jg leave push nop outsl pop pop test inc sbb mov inc ret adc mov sbb inc adc xor jnp mov jae mov mov popf ljmp sarb pop inc push push or ljmp sar cmp and movsl int jmp bound or lods or xchg xor out pop imul add out and push sub (bad) sbb xchg xchg je push push out sub push lds ds data16 pushf stc inc aaa sub sub push outsl loop or sub mov sti mov test and dec push mov xchg ds cltd lret add xorl lcall cmp inc push dec scas mov fiadd aam fstpl ja sub dec insb sbb imul out sbb (bad) pop subl xchg mov mov ja or loope pop test add daa mov call lcall xor adc dec cmp sub test dec lds insl jo je push sub aas repnz test push add xor icebp pop mov shl arpl fldt inc mov inc mov jb xor fimull dec fwait jp lret mov inc rcrl (bad) lock lret push enter imul jae jno adc xlat ret out sarl push mov scas xchg aaa pusha cmc addr16 ret je xchg and lahf call pop sbb inc das (bad) mov pop rcrl loope xchg xchg (bad) mov mov xor lcall shrl mov or test imull sbb movsb mov lea es mov mov sti jp sarb test dec jae xchg cmp fcoms ss adc test xchg mov xlat lds js mov cmp mov movsl jp xchg xchg xor or insb popf mov cld (bad) in stos lock push fistpll je jo jmp es dec mov fucomi dec cs dec add lea inc lea sbb pop pop jecxz xchg adc addr16 cmp push insb stos scas fmuls fisubl es sbb sub mov test scas aas adc inc in pushl mov in divl sahf repnz mov jb es cli adcb jb mov cmp or or cli cmpsb or movsb adc mov popf mov mov insl lods pop cmpsl adc cs mov roll jge jno cmp dec imul ja imulb ficompl nop adc cmp xchg sbb fcompl mov inc nop cli cmp je and dec push test daa jo (bad) and outsl push mov pop iret pusha cmpsl lret push adc push fisttpl pushf mov sbb roll sbb inc pop sahf fimul cmp cmpsb inc hlt outsb inc dec adcl mov mov mov mov loopne (bad) mov cmp dec mov fldt or mov incl xchg fnstcw lcall rep dec lds sbb pop je ret mov push cmp out jne mov pop pop sub lahf idivb and cmp fdivrl xchg int3 out pushf insb test dec and rorb rolb jle imulb arpl push popa stos orl push gs pop leave in push lea pusha (bad) dec and sbb add add jmp cmp lahf mov pop dec jl gs and adc iret or shrl lods in movsl xor jno push scas insb pop lahf sbb fadds sbb xchg imul adcl mov mov sahf in lret arpl pop test sub lods inc cli lods lds sarl lea insl inc test jae sub out xor mov stos (bad) xchg pop adc sub mov fidivrl jle mov das fwait popf add cs push or inc into jp cmp push fistpll xorl (bad) mov arpl lret out dec stc lods clc adc sbb das pop cli divb leave sti or sbb ljmp fist xchg and adc test xchg mov cld dec jnp push daa bound inc (bad) add mov jmp int3 push jge,pt gs js add pusha ret mov add mov push xchg out clc fdivr (bad) sub xchg jle dec mov sub cld loope pop roll fwait dec jg cmp xlat and xchg (bad) scas push cltd dec push push int3 jae jmp add xlat cwtl aad pop adc inc sub lret aam daa sbb (bad) lock (bad) xchg dec inc je call mov mov push xor pushf mov inc add leave sub mov arpl sub sahf rorl inc dec mov std in fdivl lahf and jp ss sub and hlt sbb int3 push jns mov mov and lret cmp xor loopne loope xor pop mov push xchg mov mov insb mov lahf or push fisttp cmp test scas fiaddl movsb pop and scas gs test jnp add mov add aas jle mov sbb mov jge xchg mov scas lea xlat pop cli ret sahf fdecstp or int nop shr sub dec pop jmp imul les clc sub inc aam data16 jns lret into cli mov loop cmp into dec adc lret leave jle jne pop aaa pop pop adc sbb std jne jbe rol push ljmp dec aas push test pop lock and (bad) dec mov icebp add test pop mov pusha out pop pop push mov cmp xor lea pop jb cltd inc xchg inc add aam lahf add jle fldcw jae (bad) push repz je test dec xor and sbb cmp or pop cmpsb f2xm1 (bad) pop push rol xchg (bad) dec ja cmpsl int3 adcb idivb and (bad) cmp jno iret insl fwait iret mov sbb pusha xchg fidivrl jno inc aam repnz fmulp jp xor sbb enter stc fdivr shr movl sub aad sbbl add push fnsave hlt sti sbb mov add dec pop push data16 or mov pusha popa mov mov fwait push aas rcr cmp loopne push pop test push add imul lock mov dec fsubrs push imul jl rol mov test movsb out test sbb leave nop mov sub addr16 ret nop imul (bad) (bad) mov and cmpsb cli aam call inc mov mov ss or out add dec dec lret (bad) lods xchg sbb xchg iret sub dec lods jne push or mov stc jp subl nop outsb pushl push add (bad) mov pop sbb dec fdivl add mov pop in pop lock data16 cmp dec push adcl sbb or mov adc outsl out add sub fldcw inc repnz mov nop sub dec mov jo adc lds mov mov notl xchg ret pop mov pop sbbb pop add adc jns movsl (bad) cld arpl je adc inc lret ret (bad) iret inc dec dec add jb out shr sbb pop jl jmp rol ret mov sbb shrb mov insl jecxz push sbb inc sahf jne das and sub jnp dec xchg repnz jmp dec addl adc adc cmpsl xor (bad) ds daa inc push ret push into repnz fwait aam scas leave mov shll in push jge (bad) xchg movsb scas mov jl lcall and stc in or stc sub lret xorl xchg outsb cwtl leave insb call xor ret xchg xchg scas jge adc imul icebp aas push mov movl mov jg or cli or ret (bad) mov pop mov lods pop xchg mov insb fcoml int3 mov stc jmp (bad) enter shlb jns gs imul int cmp xchg mov test jae jae lods jb mov fucomip clc sub push add aaa cs cltd or pop sar push movb out cmp sbb lret sahf or and rcl push dec out adc dec push mov push xchg out adc iret jl mov bound stc das inc or add add cwtl jmp cld lret lods (bad) clc stos mov add fwait push sbb stos cmp adc inc mov or dec push push dec ja test enter fcmovne or mov inc pusha sarb inc cmc leave std cmp in lret push aad cmp pop js dec adc (bad) movsl (bad) loopne scas mov cmp stos rol push addr16 dec fsubr dec in pop leave imul scas push (bad) dec xor pop xor bound in or push in (bad) mov call mov sbb in not rcrl stos popa pop cmp sbb mov lcall xchg sti stos sbb mov mov or inc les in iret mov data16 sub test xchg xchg (bad) jge and sti xor adc aaa push lods push out ja mov mov xchg cmp sub fstl xor mov (bad) dec push sti cli popa repz jle aas data16 js or jp cmp lods dec jns jecxz imul ret es xchg adc push jge mov jbe mov cmc inc adc or in call lods lea scas or pushf dec adc pop mov cli das les outsb sub aad (bad) jae movsl mov lret outsb and (bad) fdivl lds pop (bad) mov or mov test loope dec (bad) mov popa (bad) ja scas rcr add dec aas add jg (bad) mov insl xchg outsl stos xlat lret cltd fwait sub fbld or in popa (bad) dec mov fsubr aas cmp repz pop fs inc lret lods sub sahf add inc dec dec gs and stos scas cmp xchg jl test ficom rcrl (bad) or in and jb push stos clc decb test pop mov mov sar xlat imul adc out mov pop movsl adc daa adc aad sbb mov mov sub test outsb loop inc scas enter adc fnstenv xchg and nop jp cmp jb sbb mov push fidivl xor ss mov lahf ja sarb (bad) std repnz je push mov push cmp dec jns popa xchg push clc fisttp shlb pusha sbb sub mov fisubr xchg test cmp jae mov arpl cltd cltd jge shll loopne add aas mov insb into mov push in push out cmp scas in lods sbb push add (bad) shr dec xchg jg popa push xchg dec and pop (bad) sbb mov pop mov ljmp (bad) or je push (bad) repnz dec fdiv dec lods gs inc ljmp cmp xchg test jge adc js js adc or add mov or mov and sbb adc mov test mov addr16 outsl dec sub adc cs call lock push xchg inc cli pushf and cs mov push pop mov mov or loopne cmp rcr or clc push push pop jp add mov in outsl cmc push ficomp xchg rep push or lock enter fucomp and dec xchg adc jl mov inc mov sub dec iret sbb rorl js or adc loope xchg and int3 or dec jb rcrb jne jl nop pop adc pop adc pop out pop scas sahf jno pop mov jle inc pop pop lock aaa cs xchg dec enter sub cmp cld push or loop or and pop out and std mov fcmovnbe cltd xor adc dec mov push insb aaa scas lcall lea leave mov aas xchg hlt stos mov add cwtl sbb stc or scas pop lret cmovbe pop and sbb shr push ret aas call and sub int cmp addr16 fucomp inc lock and push mov aas add mov and mov sbbl push jp mov nop leave xchg mov cmp or dec fxch rolb ljmp inc aad xchg xchg imul jmp imul mov aad dec dec push mov nop cmc insb sub push cs cwtl gs repz popa lret push fiadd std dec testl cs mov sub scas ja sbb inc test jnp lret jl or lods pushf sbb xor push xchg cmpsb iret sub sub xchg inc pusha pop mov out or push jno jnp movsl pop or xlat push dec outsl ljmp stos stos xchg stc cld cli jo leave insl sbb mov addr16 enter (bad) nop inc push imulb and sti adc and pop outsl dec inc aaa add pusha xchg cmp sub add lods lock adc adc dec fisttpl or adc pop mov mov or cwtl shrl (bad) mov popf cmp push fisttpl std in inc mov fdivl mulb jb rolb xchg cmp (bad) mov daa pop cli jl adc sarl and adc daa sub inc call in and pop xchg push mov mov jmp insl sti push jno popf cmp add mov dec pop pushf mov arpl xchg adc and sti xchg sub xchg movsb jp xlat int jmp inc mov pop lea mov sbb pusha xchg test cmp xor in xchg adc mov sub or ficompl gs iret jb dec sti stc pop push push and adc jns clc mov (bad) sbb push mov mov push lahf std dec mov fistpll sti (bad) sbb push dec divb mov cmpsl les ret repz and jns leave repnz cmp cmp int3 adc push aam lock out inc cmp loopew loop ret mov loop add mov adc jo dec arpl cmp sarb (bad) in jae jmp ja clc mov xor cli repnz jbe jns fcmovu jmp divb jl sub loope dec mov xor hlt daa inc scas sbb jl push dec mov xchg hlt push push pop xchg stc stos inc pop pusha scas ret jmp js xlat mov adc push out mov data16 std mov loop add in incl sar in lcall push dec lcall push scas mov xor jno add sub fsubr rcrl pop (bad) out mov stos dec xor push inc jp jne jg rclb cmp sahf lea jne lret outsb cmpsl gs fs jg,pn push iret xor int mov js pop mov sub cwtl mov sub pop cmp bound mov cmpsb shrb sub adc inc push sbb jmp lds push js stos ja lret mov into test mov sbb arpl js lahf cmp dec in loop (bad) rcrl test (bad) pushf sub mov mov push arpl push fsubrl push popa (bad) ds dec lock (bad) cmp jno jns cmp or inc sbb dec repnz cmp insl inc jge ljmp (bad) imul xchg jae jnp dec jno xchg scas cwtl (bad) fisub (bad) lds cltd adc inc dec popa and and jnp sub (bad) ret push adc xor daa daa dec in xchg lret xor pop retw jns xadd adc inc in xchg cwtl in mov xor or inc sbb andb std ds adcb ss je les imul add jns lock cmpsb pop sub or gs out imul stos push fdivrs cwtl scas (bad) scas test mov lods bswap fisttpll mov aas enter stc xchg mov dec negl cmpsb out inc (bad) les jne lahf sub pop inc adc pop jl repz repz leave sub cmp sahf jmp fildl pop cmc fisubl rep lahf rcl dec pop adc inc dec pop jp (bad) and loop push data16 clc repnz scas and outsl jge jg push fs jg xchg sahf lds hlt scas or in aad lods jp pop out sti loop jne cmp push mov sub mov mov push jbe iret cmpb pop lcall dec sbb inc xchg mov sub mov mov cli add test jno into adc dec arpl insl frstor add pop sarl add cmp xor scas hlt mov repnz sub or icebp xor gs push dec or adc jg pushf add das mov dec mov jmp dec xor sti lock lcall dec push cwtl icebp add fidivrl mov mov stos sbb mov in sub jo sbb out (bad) in mov mov dec inc push inc add pop shlb out jno add jg outsb push (bad) rcl pop (bad) imul jne (bad) movsb bound push dec stos dec test mov rcrb mov jle inc (bad) mov mov xchg push mov inc adc pop xchg imul sub lret cmp mov inc mov dec shll cmc jno loop pop icebp fistl out test sbb push pop cwtl add call inc outsl adc enter jae dec loope,pt xchg cmpsl popa sbb dec add dec dec cmp xchg gs mov mov (bad) popa sti pop cmp xchg (bad) dec leave push jb xchg test mull cmp out lret sbb jmp xchg in inc jge cmp pop sarl mov cwtl fadds lods sub ja stc and lcall jnp inc xrelease dec add shr cmp sub cmpsl cli push jp or xor (bad) pop fadds popa inc out rcrl stc adc movsl inc sahf pop mov jecxz mov adc adc mov in mov inc in push add or mov adc data16 push ret and insb lea jae (bad) stos mov jmp xchg push movb pop jmp dec push xor xor dec cmp cmp shl mov jb mov fstl or mov xchg push inc lcall push notl and mov (bad) nop fstpt jnp jle inc imul and scas js cwtl cs iret test xchg sbb cld insl add mov or int or aad lods add or push dec mov adc mov jp and inc notl insl out into mov rolb mov lods push cmp and push lock stos test jle lods ror jbe ja and dec mov inc pop data16 addb dec (bad) push mov (bad) popl inc pop fbstp (bad) mov xlat and push sub mov cmp sahf loope xor repz inc out mov push jne mov int3 sti cmp add and lret xor pop push dec mov ja dec aaa sbb add pushf imul les push cmp fmull aaa add add pop out outsl lds sarl jp xchg inc movsl sub mull mov or pop sahf mov jno jbe movaps lahf es mov sub xlat xor fildll mov and mov lods adc stc dec add fwait or pop daa sbb xor ret sbb cmp mov inc push dec test mov lods mov test pop sub jge in std into pusha rolb loope orl pushf arpl mov push pusha call cmp out xchg adc mov xor (bad) mov mov inc pop add mov xor inc das aad movsb stc bnd loope mov les imul inc es ffreep inc pop mov fwait lods popf pusha ds mov gs pop daa ljmp clc insb icebp cs je adc cmp mov adc scas cwtl push sub out jg test jne mull (bad) xchg push sub xchg mov in sarl jns outsb mov inc sahf cmpl dec or inc rol scas (bad) jl jmp sub adc fstpt sbb adc or aad sar sub das lock cltd es mov jle pop (bad) pop mov xchg scas mov mov push leave (bad) sub sub enter sbb xchg (bad) push stc xchg imul push mov scas adc popf xchg mov sti push mov sbb sbb push push leave gs jl dec (bad) jae lds in and or call neg jae push movsb add les dec push mov lods dec clc std cmp jnp cmp out push or test xor je mov jno pushf inc outsl fneni(8087 (bad) jle jp ret lds or repnz mov shrl add fsub sub push lcall mov and mov mov jne sti lret add push push cmp jo or or mov and push outsb lret lcall scas in scas sbb push pushf stc inc push xor jge std xchg xor pop mov mov mov jb ret jp,pt aad dec dec sbb test lds lret sub inc loope adc xadd inc push gs sub cs pop push sub inc imull data16 pop fstpl jnp cmpsl sbb xchg lret pop push or pushf cwtl mov cmp stos xchg or push sub cmc sarb mov pop and stc jb ja mov mov cli sbb insl and shl add fldcw scas gs popa adc das inc push in mov xor test out xchg mov div mov (bad) mov in out push (bad) lret or mov and sbb mov add cmp mov pop stc (bad) cmp mov xor push (bad) mov roll sub cmpsb jmp cld push lods xchg pop dec pop into push popa sti mov mov loopne repnz add mov jg popl scas jb pop sahf mov jl mov rcl ja xchg lods cmp popa dec jl mov dec hlt scas mov inc cmp xchg test aad inc ret push repz push cltd dec (bad) leave xor sbb sbb mov inc lcall lret fcoml mov test push cmp mov pushf mov andl fcmovb sub mov out pinsrw cmp push or push add inc jae leave out les mov xchg outsb adc data16 mov push mov mov mov das inc xor or mov sub mov xor mov popa sub pop out inc jno dec sbb pop jb mov jg (bad) adc lds popa ret push (bad) push push pop iret mov or (bad) adc xchg aad sti mov jno popa movsb stos iret (bad) repnz scas movsb mov jb push jmp and icebp (bad) js loope inc repz pop cmc cmp add scas pop daa es pop scas insb repz aam pop sbb out mov imul cs fidivl aad mov into push aam mov lock inc push pop lods stc push dec inc jmp stc stos out mov cwtl add fisubl dec roll scas shll xor xor mov xor nop es mov xchg mov or ficompl out aam ret mov pushf (bad) stos push dec mov ds push incl daa push out iret xchg push (bad) jmp out dec mov inc pop fsubr scas std cs xchg jp jecxz jecxz jae decl stos inc jmp aam mov ficompl push stos (bad) dec jp mov inc sub cs pop and arpl rol mov pop lea cmp xchg in (bad) mov popf jecxz bound cmp mov xchg enterw cmp inc bound mov sbb lahf jne inc pop aas ret sarb pop mov cmp mov int3 aam dec out fwait dec fxch (bad) or adc lods (bad) and incl mov lret std pop and xchg and lea pop sub xchg out lock lea lret in (bad) xor jbe cmp jne andb repnz ljmp insb scas pop adc test mov pushf sahf ljmp fsts jl bound cli inc add jle xchg push ret cmpsb jbe xchg mov xchg fisttp push cmp fdivrp test push inc mov sbb (bad) stc inc pop and ds mov shrb popa sub fistl in leave shrl (bad) fwait int3 xor xor enter adc push mov int3 push add aam mov sub aaa push mov cwtl dec xchg outsl jno xchg push fadds sti lods iret sbb lret cmp sub cmp cmp or jae cmp dec mov arpl inc insb (bad) jae out jmp pop std mov movsb dec rcr sbb ja mov out int3 cltd and (bad) push mov add in and or or out and sbb pop stos dec mov mov mov or or fiaddl mov les or mov pushf cmc sbb pop iret xor sti push pusha mov std inc mov or inc in inc adc scas mov arpl lea leave inc test aas repz push sub lods testl aas mov call ss sub addr16 cld mov mov cmp int jo stos add pcmpeqd into or aaa mov daa and movsb and in push pop inc pop cwtl pop cs add push xchg pop clc sbb xor cmp mov jnp cmp cmp inc mov jnp xchg (bad) xor jmp stc enter push nop or fs fistp test int test fisubr push ds cmp mov dec sub clc sbbl inc imul cmc movsl decb push jp outsb adc ljmp add xchg push loop aas xlat push cmpsb movsb inc repz test mov ljmp pop sahf adc mov mov cltd out and and jecxz lret dec lock push lods mov xor subb call or les jle push xor movsl dec out cmc cwtl cmpsb test stos pushf fst insl mov cwtl enter fstpl sti mov scas ljmp mov mov or sub out mov insb rcll and setg out xor js shr xor pop pop inc loop lea mov dec and pop xchg jne (bad) (bad) (bad) in mov dec repz dec pushf mov aam push mov sub cmp cmp xor xor push mov jle and pop add mov test fs mov jmp mov mov cmp inc mov jae mov pop mov decl add les aas lcall mov add jmp xchg sbb pop test hlt aaa push leave inc jle insl add dec shll fneni(8087 mov aas imul sub loope xlat (bad) mov adc ja popa fstps fisubrl daa sbb and mov lret rcr mov scas shll cmp mov lods push xor sbb pop sbb in lods mov jnp shrl cmp test push stc or repnz lods lock mov jnp outsl icebp sbb pushf pushf imul dec rorl inc xor xor inc ret jb cli push popf popa sbb ss mov jbe cmc pop dec in inc cmp inc enter inc cmpsb ss cmp push or lods in xor sbb mov data16 aam xchg lcall addr16 cmp je add mov jge push cld cs cld mov fnop xchg in les push outsl incb scas test cmpsl add xchg cmp std xchg ret in xchg roll gs sub mov pushl inc cmp cmp aad sarb mov cmp push iret dec imul cmp pop pop adc aad ljmp vdivsd xor sub aad push es popf sub lcall dec sub inc ja cmp bswap xchg sub sbb int3 adc jmp xchg ljmp leave and popf xchg adc mov mov inc mov inc rorw std mov or cmpsl jecxz or dec pop jb sub cmc mov mov lods mov xchg lret xor fimull repz fwait pop sub test sbb je ret test mov cmpsl and mov add cmp add outsl inc cmpsl fdivrs xor out sahf inc shr lahf and cmpsl and mov insl cmc nop ljmp cmp jae inc enter jo jmp jmp lea sahf cs and stos enter mov pop mov cmp push cld ja push aas (bad) les enter outsl mov iret lret loop pop mov or xchg in adc mov cmp and psubq lea dec leave xchg mov jge lcall insb lods jp add inc scas pusha jg mov lods push mov sahf out mov or dec aaa lret into rorb push add rcr inc sub cmp hlt sbb xchg cmp shr insb (bad) pusha mov xchg iret add pushf mov outsb scas inc xor ss and sub adc icebp adc daa sub orb rcrb mov add inc sbb push xchg pop xor test inc pop sbb sub nop sub dec popf (bad) sti cmp jo jg imul leave icebp mov jl mov ja jmpw xlat xchg dec cmp addr16 inc inc (bad) xlat xchg dec mov lea push sbb lods sbb test clc mov push mov xchg sub mov std rolb data16 push iret cmc in imul fistl xchg ja enter arpl xor jo daa call xchg mov (bad) or fisttpl movsb leave push pop ja test sbb insl mov or mov inc xchg adc cmc mov in xor dec sbb test loop daa cltd cmp push and popa movsb cmp sti lods repz ret int3 mov or in fist les test cmp jbe in shlb test hlt fs enter and or mov and push mov mov mov xor test cmpsb dec sbb ret pop rcrb call xchg es loope out add (bad) mov popa pushf icebp scas aad ljmp outsb dec fiadd pushf and subb sub inc test dec (bad) dec mov in (bad) add inc add mov (bad) mov in mov lods pop mov xor xor or xchg test movsb pusha inc loope outsl add call inc pop mov mov mov movsl (bad) sbb insb lock insb test jns fdivl pop push sub test aam jp scas dec sub packuswb add dec pop out xchg mov sub add testb sbb std mov pop or mov lods es dec aam or inc test (bad) lret adc mov xor insb mov mov push (bad) ja pop mov ficompl mov add hlt xlat call fwait xchg mov movsl sub lods scas adc jae inc and fwait mov xchg stos pop lds sub ds xchg andl or aaa sub das and xchg push push mov xchg hlt stc mov out inc mov pop and or (bad) nop mov lahf add icebp gs (bad) push loop fcomip pop dec add xor jg or hlt push std xchg mov and mov xchg pop and subb mov add and incb cli xchg lret mov cmpb icebp pop xchg daa mov mov fistpll je dec shrb or add pushw or mov and inc ds divb cmpsl stc jge clc mov ds mov mov ljmp adc and movsl mov pop inc ficompl and mov out or pop insl xor (bad) das lods imul jnp or cmp adc fldl adc jnp loopne (bad) or test subb jmp lahf imul sti add cld mov fild mov push int3 das jecxz push imul mov jne pop orb aad mov cmp aas xor xor jge pop mov rclb popf jg dec (bad) data16 mov mov stc sub fwait test (bad) icebp (bad) xor rorl or daa hlt sbb fisub fwait (bad) clc mov lea mov add (bad) pusha test adc jle cwtl mov movb jns movsb cmp (bad) mov lock jmp xchg test dec pop (bad) adc (bad) mov fisubr mov push popa or and bound inc ret test add loopne adc mov mov aaa scas das fcmovb gs sbb pop leave in fistp cld sbb cld outsb inc fnsave arpl and hlt lods jbe mov adc xlat mov loope lcall int pop repz pop push rorb mov fistp cmp adc fcom sub ss xor mov int test xor or sbb cli mov mov ja fcomi movsb add inc (bad) (bad) outsl xchg xchg xor lret mov lahf adc and fs cmp outsb js xor mov adc jae dec xchg shrb out mov pop andb sub pop xchg outsb jl push fbld test lds dec mov cmp add in xlat cld fdivrs loope jb call adc xlat xchg outsb (bad) or add lods mov call lea xchg test mov nop fmull or push add push mov pop jo push mov add das call and scas dec pop mov cs cmpsl arpl lret push adc inc mov std push sbb data16 adc sbb lahf push ss mov out imul pop cmpsl and dec jmp outsb and imul (bad) mov les jo,pn jo sbb daa sub xchg (bad) inc repnz sbb ret and popf sub ss xor cld ret loopne push mov push jae jno add fwait add xchg adc mov mov xor dec push fs mov notl adc push lea shrb test repz daa hlt pop loope imul gs icebp (bad) imul inc imul and sub jg mov and or aam mov stos int mov dec add cmpsb loope data16 jecxz movsb jg push in mov add add pop xchg inc dec push lahf aam ljmp mov cltd out scas add sbb add into shll adc push lcall cmp pusha push add or mov jne scas ret push (bad) jb cwtl pop in (bad) aaa data16 sub push adc or push aam xchg push and loopw sub mov iret fidivl mov jns sti cmp mov cltd mov shr pop sbb js xchg cmc lock inc cmp ds jge mov fisubl mov dec scas lods rorl mov jo ss incb adc add arpl mov arpl or pop xor jmp cmp cltd stc jae ret lock fistpl ss popf mov bound mov popa out int inc xor or sar jmp mov loopne scas xchg lret cmp (bad) int das xchg push lods cmp or gs cmp cmpsb add jecxz and sbb sbb popf jg xchg jbe add push outsl getsec jg ret out mov pop adc add out ffree push fistpl std aam ljmp and cli out mov cli sbb adc out ret in leave mov pop sti mov jnp popf dec push or xor xchg icebp je lret (bad) lea stc inc (bad) and push inc leave jns jnp pop bnd inc pop lods push mov je ss jno xchg aad inc dec mov outsb jmp dec scas sbb add repnz cmp stos add aas jb jbe cmp scas mov jl (bad) xacquire pop dec lds push ds mov call sbb nop (bad) sbb mov jne addr16 push xor push fsubs loopne aad sarl (bad) movsl outsb mov imul lods ljmp xchg pusha movsb sub mov mov sbb jmp adc ja mov nop orl addb and and pop inc xchg mov in inc jnp cmp adc xor cmc and push mov push mov jg loope mov in cmp scas call lods mov sbb xchg pop (bad) bound sbb inc or xlat lds ret cltd jne das push inc je lret into xchg pop std sbb sub loopne insl push stos lcall and addl cltd fs pop les or sub daa shrl push xor inc loopne int gs aaa xor pop dec dec mov subl cltd or fistpll dec jns add repz hlt cmp das dec mov and cmc push je aad push ret into xchg es aad cmp rorb mov pusha inc shlb sbb inc hlt (bad) (bad) dec cld aad in leave enter mov add outsl push mov adc out pop pop shrd xchg loope lret test inc jbe mov clc test (bad) jg xchg pop lock idivl int (bad) lock inc shll sbb mov jnp (bad) mov xor movsl jmp js leave out push fyl2x jae out push inc call fidivr popw in loopne in push popa (bad) aas mov in cltd inc cltd popa xchg ds call mov sbbl or pop and out (bad) rclb push or arpl nop add int xor add sbb fnop idivb cltd rcl (bad) pop lods add clc and dec cmp inc push shlb shl pop inc shr or shrl mov and cltd xchg mov (bad) mov inc jb or enter mov ret gs or sbb push lret xchg ds cmp or scas dec cmpsl xor jle je gs xor int3 push imul je pop lret ds mov push xor ficom xchg mov mov push sahf sub pop dec pop xor fldenv push aaa mov add add or mov call mov xchg sbb jle mov dec aas mov mov cltd cmp icebp iret clc aaa ret imull arpl das push das loop push shrb mov jnp xchg and xchg adc lret adc mov mov sub xor dec dec push test xchg not scas addr16 repz mov in pop mov sbb mov mov lods cmp mov mov xor or cmp pushf mov dec inc mov add mov xchg jbe inc or add dec outsl fidivrl mov mov imul lret mov mov sub pop mov enter mov mov (bad) icebp insb jecxz add mov int mov pop fisttpl mov es loopne cs adc inc mov pop jns rcr xor mov cltd (bad) xchg cmc mov inc sbb jb mov add mov data16 xchg mov repz fs inc in les mov das and in jmp (bad) mov mov sub movsl mov push sbb inc sahf das lock mov cmp int3 inc in nop shl pop loop shrb xchg loop jbe es aas (bad) fcoml sbb push icebp (bad) out ja or mov bound into je fmull ljmp sbb (bad) std push push addr16 push rep sbb adc pop sub iret rcrb fcoml fiadd lret idivl psubb jl les push pop push mov xchg dec xchg gs scas xchg pop sbb enter mov inc xchg ja popa js inc outsb sub adc (bad) push jns (bad) (bad) jb dec repnz out js push sub icebp adc sub lea mov sbb push and test mov mov frstor out iret out pop loopne aad call fisttp sbb push push leave adc dec mov xchg add push push sbb lods pushf gs jle sti jno pop xor aaa mov jno push or sbb cmp jl mov (bad) jg inc test loop add and lds or test lcall xchg das iret sbb lret loope add lods inc dec mov and jmp and push insl into xor sbb daa dec test mov test sub imul hlt inc aam sbb daa mov and ljmp sub ss jmp scas or rorb add sbb fs es jns mov jb mov sbb xor mov in dec inc cwtl sub hlt xchg movsl mov daa mov push sbb or jmp popf int3 bound mov das (bad) jmp push add and out repnz sbb inc mov fstpl add xor sahf cmp lds clc fistl push int negl push lods inc push test adc mov push cltd fadd in or movsl jno push outsb mov pushf sahf push adc sub lea xchg mov and mov lret mulb jle icebp jb cmp mov loop in jge sbb pop mov inc out test lods dec xchg cmp push dec fidivr cs sub dec mov fmuls je cmp mov pop stos decl cmpsl pop dec cltd fisttp adcl dec add aas lahf movb inc ret je jb dec (bad) jl test std out std mov ljmp insb movsl (bad) out sub push lods mov daa test add pop out pop lea into rorb test sbb cli jmp loop aas jle inc push pop cmp and hlt dec jge stos pop lcall sbb mov into popf out aaa or leave add cmp pop pop addr16 add fs lahf xor mov sbb leave lock dec arpl lds shrb rcr add lret mov test and inc jecxz or fildl pop sub push lods out mov mov pop pop push jb loope or movsl dec ret movsl pop sbb mov push test fdivrs jo pop cmp arpl out mov push mov add test mov mov das hlt xchg jmp sbb inc jg pop in mov sbb xchg and lock jle test std dec sbb lcall int loop ds mov scas (bad) and cwtl sbb mov arpl lcall cwtl xchg adc mov call test jbe in inc shrb or mov mov mov adc bound lods mov add inc xor (bad) stos lahf add sbb cld adc call imull outsb out push lret and fdiv pop fmuls mov pop inc and bound hlt sub xchg cmpsb movb push mov (bad) pop sub cmp mov add mov (bad) push or or cmpl cmp cmp mov pop mov call xor movsl lahf mov xchg cltd adc pop addr16 xor adc lods sbb or fisubrl ret cmpsl xor ret push fadd jge scas in jge pushf (bad) aam mov dec adc les sub ret outsb insb adc mov lahf jle les out and mov sarb enter insb mov mov outsl xor mov aas es and ds sbbb push push (bad) mov cmc and inc mov xor subl cltd inc mov adc ss ror pushf inc fsubrl test mov xor fisubl in xchg push push inc pop icebp addr16 (bad) hlt add inc repnz adc in iret fstpt (bad) mov addr16 scas xchg outsl adc dec hlt stos imul push ret cmpsb mov inc jae or add xor mov lods outsl adc pop frstor inc xor sub frstor ud1 fidivr in jb sub fistl sbb test mov fadds mov cmpl (bad) mov imul hlt sub loopne inc mov inc mov mov inc push mov bound cmpb ret imul jo fbld lret and jae mov push neg xor lret pop jl loopne adc cmpsl push ds mov dec and and and (bad) fdivs xchg sub mov (bad) mov mov (bad) movsl mov sub leave (bad) jae fs xor add xor pop mov jno rep in add add clc inc cmc jnp sti and daa inc mov inc pop sbb push sbb loopne js repnz ss subl cmp sbb imul pop rorl push lea mov fs fdivs insb cmc pop imul int inc movsb sbb jg mov pop mov push mov fsubrl xchg pop jae das xlat xchg add aad xor add jecxz xchg jno mov rorl fmuls cltd loope outsb outsb outsb icebp pop add mov xor inc cmc adc mov iret inc dec int xor mov jmp cmp ss inc (bad) dec and jo ret loop dec daa cld mov test cmpsb adc dec (bad) mov add mov stos mov jno out repnz adc in jno faddl or mov lods fst cmp sarl out push in pop dec jle and test lcall pop pop scas dec ljmp ror xor push ja into leave xchg add in pop (bad) mov jecxz and lock sub fwait add xchg in push hlt pop aad or ret pusha jecxz xor jae cmp movsb aas dec scas fnstsw dec stos movsb dec (bad) fimul repnz and mov imul jle in jl popf mov cwtl inc (bad) out js aad pop jb sub push and (bad) jae jne inc addr16 dec add pop add stc jl shll (bad) dec jp mov inc jp and adc test pusha jns mov loop stos mov adc fsubrs pop pop jo sub aaa fild inc sub mov nop outsl jl cmpsb dec mov jecxz out aam call jae inc xchg xorb pop aas and mov ljmp push xor xor adc cmpsl popf iret jmp xchg jl test cld clc scas sbb (bad) (bad) mov popa and loopne adc stos nop mov fcompl idivl mov mov test dec or mov dec dec nop ret idivb inc mov sub not jmp push sbb into and xor cmp sbb cmp push std (bad) in clc xor inc pop je and jnp scas gs cmp pop push mov inc push inc cli rep (bad) cmc push lret (bad) mov xchg xchg xchg test cld lock aaa (bad) mov es aad push lahf push xor xchg in or and int adc xor jmp or ret jae adcl rolb fdecstp nop mov xor xlat sub mov lods push pop mov push push andl test inc push mov imul popa jbe lret and jl iret inc (bad) aaa hlt jne lahf fiadd repz inc push icebp push add loopne xchg popa (bad) (bad) adc dec ret loop jae dec xor cmc cli jecxz jbe lds rcr lods (bad) in outsl dec or fstps fstpl push push fiadd xchg inc and push std pop decl sbb mov xor cmp sbbl aas repz add xchg mov aam xor sub (bad) aaa aaa pop jne scas js es test jecxz inc cwtl pop test in je cmp out in enter ljmp push shlb xor push and cli jns fsubr mov out lods in arpl pushf iret stos sbb xchg mov jae dec out inc test and insb mov cli jo (bad) fldt int3 sbb call popa add outsb dec and aad cld cs sbb push int3 pop ss outsl fcmove stc jne vpmaxsw jno inc es loopne in gs ss incb xor fcmovb add stos imul inc add dec jae jmp lods jl (bad) and mov (bad) scas lret xor add pop pop cmp cwtl sub loop sbb push jmp add or fbld jl je cmp (bad) notb lahf mov je add stc xchg jmp jl dec xadd mov cltd imul in je adc xchg shrb popf (bad) stos pop lret push dec dec mov sub xor fs push rcll lods test cltd xchg lods xor dec dec mov int scas popf aas stc and cmp pop mov dec aas mov (bad) cmp mov movzwl dec add int cmc mov cli test mov add sub data16 or aas gs adc jle fcmovnb mov stc mov les aas ret mov adc neg test jge xor (bad) aaa js adc loope adc sbb mov cmpsb repnz or aaa pop sti sbb cmp pop cmp and test push mov fldl2t movsb xchg pop sti movsl push jnp (bad) fsubl push push inc (bad) mov fnsave inc push add cld cltd (bad) fstl out insb cli or inc lock test sti dec push inc (bad) or mov rorl repz jb pop push jecxz jne sti add inc fs xor data16 das xor xchg dec and addr16 (bad) sub ret or outsb loope sbb lcall (bad) pop cmc insb loop outsl lret xor sbb push or in jo push push sti sbb xor aas arpl fildll (bad) adc pop sbb hlt mov lcall int shll sub mov add es xchg mov xchg pop insb in jnp cmp inc stc out sbb fwait inc es pop icebp cmp (bad) pop jb addr16 xchg lret movsb xchg addr16 push mov jmp das mov inc or or sub jmp (bad) or push mov and sbb mov jmp mov push negl test imul fidiv loope ds imul cmp jmp stos je inc sbb mulb sarb xchg int (bad) xchg add icebp js jbe mov jnp mov add xor push pop xchg ds add ja cmp cmp adc cmp sub and out arpl lds lret mov add xor imul sbb (bad) push add out insb jbe inc jmp mov dec mov sub test dec popf cltd xchg mov in insb dec lods add xor daa js dec out sbbl loopne and dec sti test std sti push cwtl dec fdivr mov out mov dec push sub xchg push pop jbe icebp out js pop dec into or and jmp inc scas mov (bad) jae sbb mov mov fstpt cmp fwait into in push push and adc repz cmp fcoml add jg jmp insl ret dec xchg popf sbb stc add mov out mov jae lea pop add mov inc (bad) adc mov sub testb xor push in xor test mov imul cwtl mov cmp jmp jo sub add lcall pop fucomip andnps idivl push push sbb and push (bad) add push and imul (bad) mov push int mov je fucomip push and das pusha mov out dec jo dec cmp lock test lret js jp icebp pop jo gs lea movsb dec cmpsb add jns pop sbb jmp push (bad) adc mov push mov nop outsl jl mov adc mov fimull (bad) pop mov mov mov icebp sarb xor fwait xchg mov jbe jl jo fldcw mov or jp mov icebp int pop aad js ret (bad) lock sbb xchg mov out mov outsb mov inc push inc sub or (bad) popa add or pop das sbb xor or daa in into jbe pop roll lock sub ror jmp dec xor dec sbb (bad) lahf lcall imul fxch inc test push (bad) dec xchg ret daa fistl sarb (bad) push inc out sub cmp loope shll aas and rcl enter out lods add hlt pop pushf insl fldt data16 add push int test daa sub jbe data16 cmp and mov stc outsb popf sbb (bad) imul push ljmp cmc pop jnp stos push cli pop jge jmp dec cli jecxz mov adcl lret lahf cmp xor cmpsl jne insl fldenv cmp cmpb inc stos mov dec add mov add mov pushf sbb mov int3 test shlb jb (bad) scas cmp pop out mov mov inc inc jbe test int3 out es dec mov dec cli imul int3 xchg push mov scas adc mov (bad) jbe push sbb (bad) mov popf fcmovbe cltd xchg and sbb and cs rol fcompl jp inc loop dec mov push dec bound js into mov mov mov and inc jbe dec xor add adc fnstenv xor sahf cmp push xor mov adc adc or mov out out add pop push hlt scas lds ja dec jb das bound xchg jns (bad) test outsb cmpsb movsl cltd loope je sbb rcrb lods pop repz sti shlb inc arpl push lds dec int call xor adc sbb enter mov mov dec fwait in pop mov inc sub inc int3 inc fmul mulb aas pop and fdivs ss sbbb icebp sti fsubs pop das mov jnp (bad) int3 fwait les pop js in (bad) push jbe (bad) in aad movsl call add pop add cmp mov or xchg bound icebp pop (bad) incb xchg movsl push call rcll (bad) insb and adc lds dec in xchg pop xor xor mov in mov scas loop cmc popl stos (bad) (bad) dec push repz loope insb inc cmc lea rcl add lds iret add or mov test sbb pushf add movsb cmpsl sbb rclb sub insl xor movsb pop add push jne fmull mov test and mov jbe inc jns push fs lret push inc mov sub ss int jle adc stc add aad push lret sbb mov loopne inc data16 and sbb xchg jnp loope mull xor inc inc test inc scas mov add cmc outsl fsubs and sahf iret jo bts inc push and fistp xor inc inc dec dec loop inc stos pop mov and push pop cmpsb in imul inc repnz shlb inc lret cmc enter sub xor jecxz push push mov repz jge std pushf mov xchg std xchg cwtl repz fisttpl cmp xor xor in xor or loop es (bad) sbb cmp sbb push ret mov or cltd imul adc enter lods lahf in inc adc inc test loopne cmp add (bad) lods add lea add cmp xor leave lea add mov (bad) push cwtl inc mov mov ret mov gs mov pushf jb clc nop sti sti int fucomip fisubr dec (bad) insl mov cmpsl and lds sahf std addr16 jge xchg pop push push and out adc sti mov rorb dec inc jnp pop dec imul mov sbb in mov jg rorl and adc adc stc pop add push xor xchg inc cs dec fwait mov fs pusha jecxz jae push cmp adcl dec into (bad) enter enter add aaa mov repz shrl push mov push add mov dec mov xchg je cwtl jecxz les insl (bad) sti adc lret jg and rcl jg lods and out push push and lds push xor movb dec lret test push adc xchg jno dec aad fcmovnbe jge andb pop (bad) imul mov sahf aas nop sub sbb xlat mov sub cmc mov ret xlat insb add lcall leave push repz rol push lahf repz mov push mov int3 into pushf push into push icebp mov push mov rorl movsb pop add adc mov lret lods mov adc pop pusha in roll mov idivl or cltd out mov cmp inc (bad) cmp aad int xor dec mov roll mov push lahf lock adc (bad) cmpsb vmovaps xchg xor push inc scas xchg sarl int mov (bad) pushf dec jmp aad mov inc and dec mov pop int push sbb loope cld and and aas push je mov (bad) fsubs (bad) out mov rcll push sarl sub lock dec (bad) adc repnz shrb sbb loope inc iret and sub ror pop movsb ds loopne fbstp add sti sub lcall or lods dec mov pop and fcomps call cltd loopne jns lods pushl lods or or inc pop jl outsb int aaa (bad) gs jne movl ja scas ret loope pop or xchg add lods inc jne in in test mov cmc push mov das sbb sub and (bad) mov and loope sahf in push dec xorb mov mov adc (bad) xor bound mov cmp iret xchg rcrb out pop imul je or ss push push dec mov ficoml stos (bad) loope (bad) pop enter jecxz mov add clc std mov mov xchg adc sbb push dec mov test mov imul fs ss inc adc sahf mov (bad) out cmp jbe inc mov xor jbe nop mov adc (bad) aad mov cmpsb (bad) dec sub lret pop mov jmp cmp mov pop sbb clc mov hlt and jns ret aaa sbb pop cmp sbb xchg sbb or push enter loope outsb push je sub scas sbb mov mov xchg xchg dec xchg push cmpsb xchg dec and jmp stos jp cmpsl imul stos mov shrb mov lahf ja jmp push insb movsl pop lds mov xchg das mov nop and pop (bad) jecxz add jge outsl dec cmpsb out mov add insl imul sarl out mov jae aaa imul lcall insl cmp mov sahf jno sbb data16 inc insl xor scas mov adc addr16 fcomp je orb inc adc push inc xor pop dec cwtl mov adc clc lret ljmp or (bad) or push ret mov sti jns xchg mov repz mov pushf sahf std mov cmp movsl xchg adc pusha shrb fwait mov pop or hlt inc fsts jne (bad) inc and add or (bad) (bad) fisubl out mov xchg stos cli mov and or adc inc pop cmp cmpsb inc jg (bad) mov lea aas adc sti jnp xor dec scas or mov repnz les pop outsl arpl dec data16 push adc push cld pusha nop lods int3 ret mov or fmuls fdivrl xor out add dec hlt push dec or scas into mov push (bad) xor adc mov jno clc add call pop inc inc fwait (bad) lds movb push jecxz xor adc pop sub cmp xchg xor sbb cs out hlt insb sub xchg idivb lahf (bad) jb test subb sub jl pushf lock lea push jl inc ret popa mov mov push cmpsb outsl sar mov lahf cmp cmpl ljmp mov pushf es dec (bad) pop mov adc push js mov dec mov movsl cwtl and pop xchg dec loop mov push hlt lahf shll popa (bad) jnp xchg inc int3 ljmp push out test xor cld inc jbe adc cwtl mov ror cmp add nop jle pushf adc addr16 mov xchg dec imul sbb ja adc mov or mov ljmp aaa aam out mov in mov pop and mov and cmp sbb rclb pushl mov adc xlat fimull push jno sub add (bad) arpl cmp mov ja mov jmp pop lods imul push popf mov jbe testb sarl adc jo sub aaa rdtsc push outsl gs ss pop leave inc ljmp aam and mov (bad) in repnz add or in and repnz loope pop and (bad) cmc rorb dec data16 inc pop inc cwtl mov inc mov jmp xchg pop fidivl mov rcrb add jne fnstcw jne push dec or sub imulb leave cmpsb sub xor adc sarb cmp bound xchg or ret repnz (bad) pop sbb dec (bad) repz and xchg scas out ficomp cmp lds add sbb jl or arpl ds dec jbe xor ljmp jns fs sub js inc pop out pop sti cmp loope jno xchg fldcw test cmp into push or (bad) xchg into pop enter sub adc data16 mov lods xor sbb in adc outsl add aas add xor stc out lods pop inc rcl adc inc push or cli push ret jecxz inc jbe out or xchg (bad) (bad) insb pop cmp stos mov mov gs bound push adc icebp push (bad) lret inc adc xchg (bad) gs shll gs cmpsb shlb (bad) lods inc cmp or repz mov aam xor push mov adc inc mov out mov js cmp cmpsb mov adc cmp cld out fmul rcrl inc daa mov bound mulb (bad) mov repz sbb jb out dec mov and pop push sub shlb xchg adc in add inc fnsave add enter mov inc rclb lods adc orl cmpsb loopne jle jg in outsl sbb test and adc scas jbe mov adc xor addr16 push call inc pop test push dec dec enter fs dec inc js sub daa mov push sbb xchg pop aad ret jae es cmp push jnp std and mov xor adc mov mov test nop or pushf mov cmp jp and adc bound cld adc xor movsl (bad) stc and adc xor stc sub pop (bad) jnp mov dec rcrl popa xchg dec movsl push das out mulps push mov inc imul test outsb add sub ret addr16 lods shll jge mov stos sbb je mov in dec sbb push jg leave jmp pop inc rorb lods adc sahf pop aaa ficomp popl push dec (bad) into adc in or mov fcoml in das fucomi pop mov adc push or dec xor cmpsb sbb sub cmp imul das lds in cmc inc jo paddsw fsts mov adc mov loopne xchg in pop test lock jge adc lods add or out bound (bad) jns gs fwait dec push cmpsl cltd out xchg ret shrl nop pop ror and sahf out cmc out out into sbbb aam or lret jbe stc jmp sub and negl sahf xchg lods add and adc aaa fstpl sub add and sbb scas mov cmp pop adc movsl in push add xor xorl cmc cmp mov jnp jnp xchg push rol lock mov lods mov xchg dec pop pop (bad) sti and lcall inc movsb movl out test clc fistp fwait add sbb shll out sub lea xor int3 popf ja cmp orl push sarb add dec adc ja push punpckldq test in push dec in pop test cmc or fnstsw inc cmp jmp mov andb leave pop dec pop adc adc (bad) ds pop jne cmc adc out roll repz mov in mov or cmp sbbb shrl xchg push push mov test ficoml ljmp sub sub aaa pop jae dec jbe add or dec mov leave jae int3 mov jp ret inc jbe mov cmp mov movsl dec or or iret mov (bad) xor sub push or (bad) ficomp hlt inc popa push ss mov imul daa lret pop mov das or in por or fiadd leave gs ds fadds rcrb (bad) lds js xchg mov sysexit add repz and and clc sub (bad) in les inc sar add jbe xchg sub inc (bad) mov xchg mov cmp lret push outsl dec or push lea cwtl or mov mov mov rcrb push stc sub adc sbb jmp mov call pop and add adc push out push mov push mov jne into pop (bad) in xor aad mov and adc lret xchg xor xchg cmp mov xchg inc mov (bad) inc mov jle sbb push out data16 mov mov repz adc adc repz adc mov hlt cli out insb cld fldenv xor insb push fs stos mov and ret ja jb js popf fldt daa enter (bad) in cmp cmp in fsts dec sub dec in xor repz pand pop cli inc cmpsb iret pusha pop adc jge pop xor pop gs pop add repz iret xchg mov outsb jmp inc dec adc scas push xchg cmp sub lret das jno lret mov aam insb lea or pop sbb xchg sub or icebp fwait push fild and mov mov (bad) mov mov xlat and pop dec mov imull dec dec pop add ja or cmp xor pop push and out jl and mov add loop cmp testb push push or outsl jg nop mov je pop fdivs je hlt into scas pushf mov call (bad) outsb mov (bad) daa sub mov inc int add xchg sahf add push pop mov mov xorl out inc cltd pop (bad) fdivrs ljmp jmp jno cmpsl jbe pop mov mov and dec sbb add popa mov adc mov jl cmp inc mov outsb lea es loopew in inc push xchg sub and (bad) cmp inc or lret arpl push push pusha enter std stos jnp,pn pop lea pop movsl insl sub or push fnstenv addr16 xchg rorb xor jg add mov sub aad mov add xor xchg pushw jmp jecxz lds mov push pop enter and sub inc clc inc into loopne das popf les xor addr16 clc sbb sbb test xchg lcall jecxz xlat out (bad) popf pop jno sub rcl fs sbb mov popf add mov loop push push ss mov mov cmpsl mov mov (bad) clc sahf adc cmp inc sbb testb and repz (bad) pop mov cmp cmc das fwait xlat dec outsb pop rcrb int3 dec adc mov inc sbb lock in out cmp mov imul outsb dec mov cmpsb pop movsl xor pop xor (bad) js sbb gs scas mov addr16 sbb lds ds pushf xchg or cmp jb sarl adc outsb pop add jle les and cmp push sub jecxz sub dec ljmp insl data16 inc loopne sub add movsb pop rorl les out mov sti fidiv push xchg scas or jns and sahf sbb jg add cld inc fidivl xchg cmpsl popa xchg scas dec or mull jge sbb subb hlt popa out ja pushl xor imul push rolb pusha mov in lods lods sbb les mov ffree adc out sub ljmp sar stc mov jg sbb lahf mov mov mov sarl dec dec xchg aaa mov jl stos sub or out insb sbb cwtl push xchg insb add ret fnsave imul push mov out jecxz inc xchg mov xchg aaa in xchg ret movsb pop dec push sti das adc xor fnstsw jae and test in das jg push mov lcall ret xor pop loopne xchg divb icebp inc (bad) mov lods sbb cs div shrb pop int mov (bad) mov (bad) lret mov scas (bad) mov std je mov popa iret cmp (bad) xor mov add hlt addr16 in outsb inc xchg adc negb sub pop or or adc adc enter or pop orl xchg mov inc imul ljmp fnstsw movsb mov add pop in xor jecxz and data16 call mov dec imul sti adc movsl ss sub pop loope inc xchg mov ljmp mov push sahf sbb push arpl adc inc dec mov mov popa add add lret sub or in sbb dec adc cmp iret es inc repnz or negb pop mov jecxz addb in out xchg add test sub das jmp mov lret shll stc jg lods nop movsb inc dec cwtl cltd fsubs idiv fnstenv mov or divl (bad) pusha xchg scas ss (bad) cmp repnz mov push fsubrs adc pop pop subl lock hlt dec insb in out add mov fistpll icebp push push xchg repnz inc push xor cmp xor add js push aam fs test loopne xor lea (bad) sbb adc cli not or push insb cld inc sub iret push dec or (bad) clc jno xchg push fdivl push mov fimull fcoms fcoms mov (bad) lcall loop pop in lahf add into out or sbb sub fs dec dec enter push subb daa jbe aas dec cmp add jns das mov movsb mov sti dec cmpsl frstor mov pop push (bad) sbb cmp jecxz jne rclb jle rcrl cmp cmp in call inc outsb subl mov push in ja js mov xchg xchg movsb negb imul mov xchg lock (bad) push push data16 lods popa cmp jnp xor rcrb (bad) cmpsl call fcompl cmc pushf dec mov dec jne movhlps xchg inc aam sub mov fdivs je ja pop push les mov pop adc and flds and push lds mov int3 mov in sub and mov repnz or adc sbb lcall jae data16 call in push (bad) and pop cmp outsb add popf addr16 jge xor stc sbb jl rcrl pushf test out mov ss ljmp fmuls dec cmp les cmp mov (bad) sbb test bound rcrb sbb popf dec mov arpl jg dec and dec in or cmp (bad) sbb xchg stos inc (bad) mov flds pop call xlat adc movsl mov adc mov inc dec pop fld sub xchg cmp aaa (bad) mov xor (bad) jl pop jns decb and jns movsl adc (bad) cmp mov js mov pcmpeqb (bad) jae or push dec jmp pushf (bad) mov enter (bad) testl adc sbb gs or cmp fnsave stos stc adc lds mov push (bad) fcmovne xchg pop dec (bad) repz flds push icebp xlat movsb dec into xchg sarb cmp cs ds mov inc xchg adc test mov xchg adc cmp imul ljmp pop cltd mov arpl idiv mov jae adc xor (bad) scas icebp mov adc adc sub and sbb mov pusha sbb (bad) (bad) enter mov hlt mov push movsb cmp jmp (bad) jle xchg lea cmpsl loopne adcl icebp or push or pop loop xlat cmpsb insb ljmp movsb movsb jnp (bad) test fsubrs and mov jle mov inc fadds adc cmpsb mov loope pop enter and sbb inc fistpl (bad) mov daa lock or aas cmp sti xchg lahf dec mov into popa inc orl mov shl inc fistpll sub jns js stc pop mov jp les inc cmp insl pop mov aad loope fildll into mov pop fcompl pop pop addr16 jge outsb ljmp mov incb daa or adc movsl imulb repz imul pushf sub pushl dec lret imul ljmp jl mov push clc sbb imul jmp in jp ret in add cld adc push cli fcmovne pop dec outsl (bad) cmp imul lret movsl pop mov xor movsb push push sub fnstsw ret sbb pop pop add cmp add fnstenv (bad) or sbb (bad) (bad) js inc pusha (bad) dec sub lock fisttp sbb rorl dec outsb pop out es push inc in in mov lock push and mov dec jg arpl push jl repnz inc out dec in mov sbb pminsw stos xor pop mov xor or pop into test (bad) and ret lock add (bad) inc push movsb fisttpl sub pop (bad) aas jnp rep outsl adc mov clc pop jp test pop mov mov repz cld andl decb imul mov pop feni(8087 aas fs xchg cmpsl testb adc inc popa imul fistl addr16 iret or aad stc mov mov (bad) and pusha dec mov mov xchg lods pop jmp or lret cmpsb idivl mov dec ja pop mov inc (bad) push lret jns je (bad) xchg push das add push sbb and iret enter add cmpsb fmuls inc test and fsubrs mov mov repnz sarl dec cmp mov (bad) aad aad push in inc cmp add push jae mov cwtl or test (bad) dec cmp aaa adcl popa jns push adc out push (bad) pusha and addr16 iret jge lea ret and cli jo (bad) (bad) cmp (bad) sbb mov es (bad) cmpsb lods aad pop or clc adc cmpsb daa pop xchg cmpsb daa cmp dec ret pop lea mov icebp pop or repz jp gs and mov xchg cmpsb notb fidivr xchg or test bound sub sbb mov shll sti cld dec pop xor mov xchg fdivrp int3 inc lahf mov jge mov push std (bad) into mov jl (bad) hlt pushf in imul dec xor fs dec cmp into adc cmpsl in imul (bad) or sub into rcrl (bad) fdiv aas mov stos addl lock sbb test std imul jg movsl cmpsl out xor gs sbb sbb mov adc fwait test iret test popa je jmp or aaa xor push loop int sbb (bad) mulb inc test mov outsl rcrb mov xchg xchg mov lret cltd add push iret dec xor sub into loope cs add (bad) jle jmp lods aas lock fwait xchg incl push loopne jnp arpl jg leave xchg mov clc out hlt int3 adc push add into add popa inc ljmp sbb adc aaa sub pop addr16 push shl jecxz mov mov mov pop adc push and mov mov xchg xor xchg mov sbb pause pop or push adc iret ds loop add xchg clc lret mov jg ja call cmp lsl xchg inc iret sbb pop cs rcrb cwtl inc enter add movsl adc mov add shl xchg dec inc pop rolb pop cli ljmp call push pop mov dec adc sbb les sub sti cmp pop and inc dec repnz or mov mov cmp mov mov insl mov mov into dec out and int3 sbb xchg sbb shll out add (bad) hlt into pop jns pusha lods dec lds sub test cmp mov sarb and repnz lock push out inc addl and push out repz push xor daa bound jge push outsl jmp roll ret and sbb xor popf and in fidivrl push jno movsb jmp push mov jae inc xchg in pop inc sti jne jno icebp mov movsl movsb pusha movq adc and lret pop ds out mov cmc push test arpl mov pop aaa mov dec and ds out scas fcoms movaps xorb dec loopne loop push xchg movsl or movsb inc cmp ffreep jb je imul jg or jns or cli xor (bad) shr jecxz dec pop mov jmp adc xor into not sub gs push add and cld sahf icebp cmp and in cmpsb mov jnp rolb pop scas cmpl cmpb testl xor xor jno mov sub xchg push (bad) mov or popa test or xor lods ss xchg fwait jbe (bad) in mov xchg (bad) mov and xorl mov pop arpl inc dec and in xlat dec scas pushf or inc lds adc pushf clc cmpsl push push insb lods mov mov xchg xlat ds push dec xor (bad) js ja in inc das sub arpl inc cmp in sbb sub cmp inc out arpl push push dec lods imul cmp xchg dec xor fs inc xlat fldl2t add (bad) cmpsl gs xor adc jo sbb jo icebp mov nop xchg inc push outsl sbb dec push aad leave mov adc clc dec sub ret imul test mov insb fwait cmp adc ja sub les dec cltd jbe xchg mov test sbb in xchg push xor mov dec lods ds lea adc push fnop add add jle add enter push push loope call out nop jae das adc aaa lret faddl in imul fcmovnbe imull jmp adc mov mov pop fmul mov add sbb mov sub bound in sbb scas mov daa les mov xor dec sub jge leave cmp pop xchg cmp pop lods and push imul inc pop mov jnp jae mov cmpsl inc mov jne adc push add mov imul mov lds test (bad) aaa mov mov and dec adc mov loope sbb lods xor xor lods inc (bad) mov lea cmc and mov iret (bad) jge int3 vaddpd movsb push mov stc (bad) mov enter bound ficompl enter pop imul nop xchg xchg sbb jle jp test in jmp stos xor lret push mov dec icebp sbb repz dec aas mov dec xchg jg cltd mov outsb mov scas rolb mov xchg pop aaa cmpsl (bad) dec xchg out and xor sub cld add movsl pop call jb add data16 mov pop cmpsw and imul roll cwtl add fadds insl sarl or mov sbb (bad) je inc xchg jno and jnp pop jb pop fsubs push inc (bad) pop pop ljmp test mov and outsl cmp jnp mov dec pop je aas xchg and and test xchg call std mov pop and mov sbb push into aas or aad xchg inc out out mov or int stos outsb std fcoml in insb mov lret enter or pop mov arpl xor mov cmpsb aas in pop pop test push jae sar or fiadd pop stc jbe push lea sbb andb or jecxz pop xchg xor xchg cwtl sbb (bad) iret push or loope aad fidivrl (bad) and push (bad) in xchg pop inc xor xor fwait (bad) sbb loope cmp xchg notb imul dec cmpsb (bad) fisttp outsb xor mov cmc int in inc sarl (bad) ss cli icebp or les dec sbb (bad) mov xchg (bad) mov shll int3 sbb ret pop and stos mov fs and stc mov xor out nop fs fwait imul pop mov (bad) out mov daa inc mov mov mov jp lret les jmp or lret stos mov out cmp xor push shll and outsb sub sbb pop sbb divb icebp mov adcb addr16 sahf push xor add sub out in mov mov (bad) test add mov js les das sbb insl mov jae dec aam xchg xchg leave dec mov mov aas and mov mov lds pop inc fdivrs inc fs std jb arpl pop push sarb xchg jne cmpsb in jecxz es ss sbb arpl add shl negl daa cmp (bad) cmp mov xchg popa in (bad) sbb mov popa dec test pop xlat mov into jecxz add xchg jg xchg jb inc xchg adc jno inc popa add enter dec xchg mov les inc xlat popf js lcall adc roll sub mov xchg xchg and mov les and cmp add loope loopne (bad) mov out push testl sbb icebp out mov vcvtpd2ps cmpsb loop insl xchg call add in jo xchg out test mov mul movsl data16 arpl imul sarb (bad) fdivrs cmpsb icebp xchg sahf lcall add sahf mov out or das adc scas cmp sub lret pop mov rolb outsb in addr16 js jmp adc fwait mov test jmp inc add and xchg daa adc add loop fild sub add mov ficoml and inc out imul outsl shrb lock push sbb or lcall jmp pop mov jg or inc xchg adc dec js sbb mov lods inc lods sub aas lret (bad) jge mov daa push sti cmp jge dec mov jmp lret jmp mov (bad) ss mov xchg loope in mov pop pop dec adc xlat sub add imul les mov adc fisubrl jns or int xor inc lods insl xor outsl push mov mov sbb nop push inc std mov dec jecxz ret test ret fadds es push inc jno rcll mov das jnp sarl adc sarb in (bad) pop adc cmc lock mov mov push fild dec adc call and jmp xchg shr scas (bad) jo stos mov inc imul xchg cwtl and imull frstor repz xor pop or xorl jne addb loope daa cmp sub imul (bad) push jbe,pt mov into dec xchg out bswap mov add push pusha cli loope jge mov push pop mov mov xor std inc mov sub mov sbb push (bad) sbb je and jo adc pop outsb test pop je xor movsb inc push scas jge cmp icebp test in lods sub into inc lahf add fs dec pop ret pop fsubrl shl mov (bad) or int icebp mov mov sub bound sub cmp cmp and movsb clc movsl repz loopne xchg mov ljmp adc and mov push out fs and sar (bad) jg mov push fcmovb adc js push xor or and inc das cs dec mov inc imul sub push aas das insl or nop fadd es outsl cmp aad ret rclb (bad) out xchg cs imul and or adc adc sbb daa jnp mov fiaddl xchg mov xchg nop movsl push mov xchg bound xlat rolb jbe and sbb mov in int3 mov pushf (bad) cmp sbb jo mov jb ret into out cmp sarb cmpsl inc stc js or ret or add ljmp xchg sbb ds aas cmpsb mov inc scas sbb fs xchg cmpl jb cmp xor (bad) jo mov ficompl ja jns cli test or add push data16 test hlt insl ds (bad) sub mov aas int3 cmc fsubrl xorl add pop sbb test sub imul outsb or lret pop lds rcr fs jbe ficom rorb xchg out xchg jle mov (bad) jo nop jns sub ljmp rcl add jl pand (bad) lods bound fidivrl or mov es inc cmp rcrb fimull mov lret add in cmp imul scas lret push test outsb loope mov push inc jg adc orl shl cmp mov pop and fldcw movsl inc cmp push xchg ss xor aaa stos xchg mov lock sub jle add inc mov lds and movsb add movsl std sub (bad) int3 pop push adc (bad) inc xchg fcoml xor aas lret stc cmp mov mov xor out mov inc add pop inc outsl inc mov (bad) inc mov sub mov bound add xor mov jb notb nop imul (bad) sbb lret lods ljmp cmp mov xchg cmpsl dec cmp fiadd aad int3 adc hlt mov inc inc push pop dec insb movsb fistl dec test gs or sub inc int3 pusha arpl adc roll insl cmp lret mov pop push mov mov aas jl pop or clc lds cmp mov mov push inc fcomps add add pop xchg inc pushf gs adc hlt aad movsl test or pop les enter cmc cld movsw movsb test xchg dec lds xchg mulb mov sbb cs in dec in inc cli xor inc push xchg and rcrb pop iret dec aam jmp push pop dec outsb fmulp push fsubrs scas sbb jg sub pusha mov sar mov add mov mov movsb mov cmp test mov ds cs orl pop mov mov sahf and int aad fistp pop xchg lock pop iret push leave leave (bad) cld xchg hlt pop out sbb fisttp mov push jae add cmp dec popa mov or lea pop pop sti dec iret (bad) fidivrl adc cld xchg mov sub jecxz add ds xchg lahf mov inc sub pop scas and rolb and loop dec push jp cld push ljmp daa testl pop (bad) ja add aam xor add inc movsl dec xchg mov in outsl out jle jo jmp fucomi dec cmp faddl icebp iret adc das imul xor clc sub ds leave cwtl push fmull popa int les mov mov lcall (bad) addr16 (bad) pop mov pop ljmp dec (bad) sbb pop shrb mov and jbe xor mov add pop cmc in hlt ret adc (bad) insl add imul jecxz xchg imul dec cld test or push push push test xlat xchg pop (bad) in inc cltd add rcrl pop jne mov les mov aas mov xchg jg loop sub xor xor dec mov sub cmpl cwtl stc add pop je cmp movsb sub inc sbb fwait int3 inc pop mov sets inc sarl ror cld aad jl addr16 and mov sub push jb and pop push push stos enter pusha push jae sub imul cwtl inc lods lock inc cmpl movsb push lcall adc push lds gs movsl fbstp daa fimul fdivs data16 lret pop push and imul push test mov popa notb sarl and jmp shl xchg xor mov fwait sub push lcall xchg jecxz push (bad) cmp fimul mov and adc sbb inc mov fwait and adc inc xorl in xchg fidiv xchg cld cmpsl adc sub lahf enter fwait inc loop mov roll inc addr16 xchg push test sahf repz into out stc pop mov lret inc dec pop int clc fbld mov cli cs or sbb jbe rcrb outsb pop cmp xchg cs jle add cmp repnz push pop mov lahf divl ja fisub int in in dec push xor cltd mov push pop push std inc sub loope inc jae adc or xlat (bad) pusha sbb (bad) push jg inc pop and in imul sbb cmp mov push je mov jns and xchg xchg dec es aad dec mov inc sub popf leave cli xor mov pop movsl imulb sub and xor loopne xchg or add in cmpsb cwtl mov ficompl pop jae mov test xchg inc mov rorb call cmc ret loope dec and aad das test pop add call jmp dec lods pop push nop inc clc lock ss shll mov test (bad) dec (bad) xor mov sbb or push out sub sub (bad) push mov mov cmp sbb pop sub pop mov mov fsubrs lds (bad) jecxz lock popa cltd sysenter arpl mov std fisubl test in (bad) out sahf scas xchg lods in adc in (bad) fsts (bad) lret fisubl hlt out neg mov add repz inc cmp push fimul call lcall mov int3 out test cltd int3 sub ret popa inc add pop mov and mov or push xor lahf mov adc sub out es movb outsl in pusha js push loop sbb scas imul ret mov into sub dec add (bad) pusha dec push je jne,pn inc stos jb (bad) and sub add sahf ret imul pop jp cltd jno jo jp add and pushf cmp jns jp loope push aam icebp lds mov lock or xchg push mov fsts ljmp cltd xchg mov push cmp aas jne or jecxz mov dec and add stc iret mov pop jb pop cld stos jns sti jg faddl xchg out mov out sbb add jnp scas mov inc xchg in add sub dec sub ret in mov mov xlat or pop enterw jge jb mov lock and arpl lods dec xchg bound sbb mov cmp fcmovnb aas movsb mov jno adc or jmp into movb push gs imul jbe in jle addl pop add decl sub les sbb sub xor imul inc mov and (bad) dec jae inc sti outsb and leave xchg xor enter fisub (bad) movsl inc test push fsubs lods xchg add js loope pushf xchg movsb push mov push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret insl xor notl ds js (bad) (bad) jmp lea jmp cmp xor ljmp push aas push xchg lret cmp pusha or clc sar decl sbb int stc (bad) mov jmp int3 int3 int3 lea jmp lea jmp insl xchg imul sarb xchg jbe pop js sahf jmp insl cmp add mov inc aaa or mov dec (bad) rcll mov or out aam aas enter mov (bad) repz inc mov repz push jo dec dec scas add sahf mov and pop hlt jg cmp cli push adc call dec inc testl mov inc xlat aad pop (bad) sbb sbb pop cmp or dec aad inc out loope lretw mull lcall (bad) hlt mov pusha cmp sub push int3 data16 push inc jl cmp js adc cmp popf sbb sub push (bad) push jno cmc cld mov jo in es (bad) cmp push pop fisubrl sub (bad) je subl sub xor inc mov jmp mov adc (bad) jmp add (bad) sub mov test cld shl popa pop iret jnp adc mov push sub sub add hlt pop jae test mov sub xchg aaa inc or jle sub das push mov pop data16 rorb orl fs dec lea stos sbb sbb addr16 push fdivl aaa imul dec pop lds cli test ss ret jne or fiadd aas add rorb jmp add iret out mov out push outsb js insl xor jge gs jle xor jnp pop nop test repz test mov rclb in daa (bad) pop sub pop xorl dec fidivl xchg adc into dec cwtl pop fwait jecxz loop data16 (bad) sbb xor (bad) jne outsl jmp daa mov adc mov scas adc push bound scas bound cmp imul repz gs (bad) xchg idivb jb (bad) testl jo out cmp addr16 aam enter int3 push or sbb stos mov (bad) dec push cmp scas mov mov (bad) outsb pop addr16 mov ja in call nop pop xor xchg or cld push add mov and mov mov push arpl (bad) jle pusha xor jl xor pop or (bad) insb lret mov in notb mov (bad) mov icebp test fsqrt xchg addb mov popf (bad) jge int mov mov xor xor mov orb loope xchg cmp pop sub pop (bad) out test subb fldcw jle cmp jne dec jle pop and popl sbbl dec add cmp jnp scas fldenv and bound imul pop add xchg cmp inc lock push xlat xor and jmp rorb ljmp and pop sbb cwtl jmp inc icebp xchg cwtl mov stos int jo cmp popa push jl xchg iret je aad aad and je add mov test out addb ret add (bad) (bad) lock adc cmp inc test scas js and cld mov cltd xchg jne mov jmp les cmp jmp mov lods adc scas cmp push push scas (bad) (bad) jb popf jmp push call test cmp xchg and xor cli cmp cmpsl jno orb int3 into push cmp or pop jo (bad) xor popf xchg ss mov fidivr xlat repz cltd cld out scas popa mov loope xlat fistl mov jne mov (bad) mov iret push jno fidiv dec push fdivs xor mov adc (bad) je ret lcall pop jns (bad) iret push sub push lret or (bad) pop stos xlat fcoml fwait jmp pushf stos mov pusha fmul cli bound insl mov mov pop lock cmp sub add jl int (bad) repnz lret xor pop ljmp loop push outsb cmp push and nop jl pop lahf pop outsb or xchg jmp xlat and addl push (bad) xor stos xlat jmp roll movsb in pop dec cmp cmp test inc (bad) sub (bad) cmp pop gs sub lods shrb pop mov mov adc mov mov movsb dec sarb inc ljmp dec adc stos sub cmc das ss pop mov push andl push sub sub insb xchg xor fxch movsb mov (bad) bound scas or sbb inc mov jmp mov add jmp mov add jmp push mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 fildll or xchg jle push lcall sub or and lea xor mov mov pop fistp insl imul nop mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp data16 cmp add sbb iret mov popa nop mov adc xchg lods xchg inc or cmp mov outsb (bad) insb push sbb inc (bad) mov aas lret test aam add sub mov cmp and inc adc je push jge loop mov out jo movsb js cli cli addr16 outsb mov clc gs stos mov cmp cltd sbb sub int3 cmc inc pop or add add push fwait or cwtl out inc aas and daa addr16 pop cmp push pop frstor aad into not mov sub mov into push mov xchg (bad) jge aam fildll pop pop fstpt jmp add pop and dec cmpsl (bad) mov adc mov adc popf fbstp adc cmpsl ds cmpsl dec xor rol aaa mov xchg or hlt fxch scas dec (bad) cmp mov lret add movsl mov iret jnp adc sub mov inc jae and adc mov es xorl cwtl mov pop outsl out adc jge cld test lds jne and sbb out sarb lahf adc push xchg adc mov stos inc loop push fmull push ret jne or stos shlb out xlat xorb or sbb push repz mov shlb jnp je ljmp pusha add cmc lock xchg jmp cmp fidiv fiadd movsl imul jmp jle imul jl fcoml push sbb xchg mov adc xor mov pushl movsl cld and leave std cmp adc es aaa cld mov cltd push sub push lods bound adc bound cmp sbb stc cmp or add and (bad) faddl add les in loope adc xor outsl test xor mov int3 mov repz pusha fwait lcall into (bad) jno insb mov mov mov inc mov inc test dec ret nop sbb lea cs xadd adc mov and mov push sbb pop pop xor test jecxz andl movsl jns adc cli xchg cmp frstor aam rol sarl xchg xchg mov sub repz mov xchg stc pop xor adc push icebp mov pop jp pop outsb or cs pop fwait cmp out mov xor lods test xchg pop mov mov scas inc int3 jl enter into cmpsb push push test es daa rcll jge or or mov stc (bad) pop add xchg cmp lds (bad) mov and pop xor sbb lret repz cmpsb and and and sbb in sub inc icebp xchg mov stos or out ljmp clc cmpsl (bad) lret xor jecxz or repz push push test ret jg push adc lods cli jbe mov in and out in mov paddb fild or push in inc (bad) fcoml fstpt andps scas lods mov jmp push sub jns mov pusha mov inc test mov cmp mov (bad) jae and into xor and adc jbe sub pop jmp push adc andb (bad) outsl xchg movsl insb js in out (bad) jbe sub pop out aam push push mov loop mov sahf push ja xlat pop or outsl pop stos push xchg lock mov jne,pn loopne fwait push sbb inc push popa callw movsl mov push sub out je add (bad) sub out es test sub lea mov std fcomip push enter and callw xor out sbb add outsb pop push scas pop dec enter or scas (bad) inc jbe or add xchg adc mov mov pop rcrb popf dec cmp mov repnz addr16 subl jp cmpsl push loope xchg mov pop popa (bad) ljmp cmc (bad) arpl cmpsl js cmp bound mov mov and (bad) dec mov lock push mov add pop loop repnz sub mov mov dec outsl stc mov mov movsb dec sarb inc ljmp dec adc push mov lods adc jge std dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp cmp mov jg mov add jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 cmp xor adc mov int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 fild out out or pushf jle push lcall inc dec std decl ss decl ss decl ss decl ss (bad) cmp xor sub cld (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 insl push inc maskmovq notl ds jp inc jae sub ljmp sub out jle dec cwtl jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp xor xorb lods adc movsl mov dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp cmp xor dec (bad) decl (bad) jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp cmp xor mov or adc lods mov dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 cmp xor mov or adc gs dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp data16 and fbld push add mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp insl jnp maskmovq notl ds lea jmp lea jmp lea jmp lea jmp cmp xor adc lods xchg dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret cmp xor ljmp push aas push xchg lret cmp pusha or mov push call add ret push mov push call add ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 fist out out or lahf jle push lcall adc xchg xchg dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp insl incl notl ds cmp push aas push xchg lret mov jmp int3 int3 int3 int3 int3 int3 insl sbb notl ds mov jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp cmp xor (bad) ss adc mov int3 int3 push mov push call add ret insl cmovo notl jno inc movsl xor or movsb std lods adc jno std (bad) cmp xor adc pop test decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp cmp data16 and fbld push add insb push push fstpl mov sub xchg scas movsl aaa cmp in push pop xor dec and xchg cltd dec mov jge ja jge outsl (bad) repnz nop test stc int mov fisttp mov iret movsl testb push sbb into fcoms pop and pop hlt jg cltd cmp movsl xor bound les rorl cmp jg or daa dec sub out mov and push in xchg out inc ljmp and insb push pop xchg xchg popa mov loope fdiv push or push pop jge test int3 push stos cmp xchg xchg xor add cltd data16 xlat and ljmp gs sbb iret popf xor mov lods push sbb or mov mov dec out movsl sarl ja les rcrl xlat pusha js ret sbb push xchg jbe lret add ret mov nop xor or xchg add add hlt idivb and (bad) icebp adc mov jecxz xor mov adc xor stc pop xor push mov ficompl lock (bad) jbe adc push cs mov or mov sbb lods in aad loop pop sbb mov les fisttp dec fldcw pushf sub in flds cmpsl pop dec sub jb fwait stos xchg push mov popa mov rclb ret mov stos push leave aas dec or xchg movsb rcll mov (bad) (bad) pop xchg cmpsl (bad) mov inc mov adc sbb mov cmp push movsl iret mov stc jnp push mov adc or aaa test sbb ljmp adc or push mov xchg add ds insb push adc add shrb insl mov mov cmp mov jo hlt outsb sbb sub js,pt lret pushf lret mov dec fcoms adc sbb jp mov push xchg mov dec fs (bad) hlt sub cmpsl adc sbb xchg aas nop dec mov lds loop push push shl loop fstpl inc adc mov addr16 adc push dec push clc xchg adc wrmsr pusha into out into mov push or test rol test (bad) push add cmpsb fidivrl jecxz ja icebp sub pop (bad) je test add push pop adc (bad) jo fiadd sbb sbb jecxz adc xchg (bad) shlb test adc test push mov dec push adc hlt cltd jnp aad lods fmuls sub xchg jmp mov xor xor cltd adc insl test mov lret jo xor dec dec xchg fnstsw inc (bad) insb ffreep repnz lret or (bad) hlt jns lahf repz mov loope jg add sbb lods or sub dec jmpw nop neg pop mov cmp (bad) pop dec inc xchg push mul pusha fistl scas sbb jae in or mov mov dec mov add mov repz mov lds pushf xlat xchg (bad) xor addr16 sub fnstcw jp dec jecxz enter dec in ljmp pop loopne or push nop inc xchg movsl outsl cmp daa push jns aad loope mov test je inc mov cmp daa inc xlat orb enter cmp or pop jo rcll pop sub sti (bad) out repz dec sub repz or cmp pop cmp jle test push push mov rorl add scas jne insb mov and fisttpll xor (bad) data16 push out sub lock rcr mov sbb mov jle aas cmp xor orb mov (bad) cmp sbb sbb pop or adc sub add bound mov push stos push bound imul ffreep inc jb add adc sbb pop rorl ja xor outsl popa dec popl mov icebp inc push ret les xor cmc mov loop mov mov push repz jb aam test adc inc or jo jae push adc inc pop xchg fdivl sub xlat jo in sub mov mov mov stc mov or lds movsb cmp dec sarb inc ljmp dec adc lret cmpl sub mov push (bad) xchg rorl fisttp (bad) (bad) mov ss jle push mov (bad) (bad) cmp ss int push fisttpll xor fisubr bound xor test sarl pop xchg es sti mov movsl mov dec xchg push mov pop sub dec add test inc les fmull fs cltd lea add fs sbb mov (bad) call iret into mov and mov leave sti outsb test (bad) cmp cltd sub sbb (bad) sbb icebp enter std jb aaa mov add outsb jno inc mov test sbb (bad) cli (bad) in js lods xor inc and lea leave adc push ja out xchg (bad) icebp nop mov and jl sti cmc mov mov and mov out inc dec cmpsb test and jb push movsl test inc test mov jmp push aad xor test adc sahf push outsb sbb lret or lea addr16 mov test xchg lahf xlat fcomip xchg fsts cmp into add aad fimull outsb imul dec leave adc or test xor push push push inc imul cld or bound shrb jge (bad) cltd adc sub or cmp sub pop insl outsb fwait in shl fs xor jbe imul cli imul leave int dec dec stc add test js mov fmuls (bad) inc push and imul jb sbb lods test mov jg mov orl cmp cmp push pushf hlt lcall imulb (bad) icebp mov (bad) mov out mov out inc sub decb pop xchg fwait jae pop mov add fsubs pusha in dec lret mov inc comiss pushf jmp xchg lret (bad) movsb ja jb fnsave ja repz cmp and clc jg enter and adc sub xor push stos pop enter mov push fimull cmp dec das cmc jg (bad) lods mov dec mov mov out jge and xchg lret aaa sub jmp lret bound mov adc popa (bad) cs ss jmp int mov insl add jae inc mov adc pusha add fadds adcb inc imul pusha mov mov loop sti daa and stos std popf and mov cmp ljmp sbb movsb ret mov das pop mov push sbb (bad) repnz pushl call xor fisubr inc lret xor ja pop aad test icebp or dec iret or or comiss mov lret jne pop ljmp arpl inc inc or xchg sbb fistl push dec and in mov aas jns or mov mov mov mov mov jl xor lock js push popf test clc xlat mov in or mov imul push jp loopne cmp mov mov cmp push aad pop test fcoms into adc sbb test or mov jle aad jno das cmp dec push mov (bad) pop iret fnstsw sbb inc sub testl les jl dec mov or lock jmp push dec pop jg js push sbb cwtl lcall (bad) jnp out adc test div push push mov hlt ficoml int movsb arpl ret out fsubrs test (bad) mov int fistp pop and mov xchg mov xlat xor pop jmp push dec pop movsb lahf pop lret addr16 mov xchg cmp jne mov stc mov mov (bad) in dec add aaa and sub test cld scas mov add cmpsb or adc mov test out clc or nop (bad) jae repnz jle lods stos cmp jbe jo fbstp ljmp sub mov add cmp sbb mov push mov ja pop (bad) push fcoml lock ljmp xor dec mov repz mov (bad) and lret pop and insb jbe aam loop imul rcrb mov stos sahf dec adc inc dec xor pop in ss fcmovnb xchg ds xor out inc mov inc (bad) mov adc xchg (bad) mov cmp dec cmpsb roll js xor shll and mov add pushf mov jl push popf daa jno push addr16 test push scas add jne ret cltd and sub inc push xchg push (bad) ss mov cmp adc scas inc (bad) dec rcll push cs repnz stc xor sahf mov out daa push and mov setbe (bad) jb pop cs gs clc sub lock jle ja push xchg sarl daa add repz inc and mov push (bad) int3 pop clc repz int3 and push mov xchg sub cmp xchg (bad) in nop movb adcl cmp (bad) or mov enter adc int3 shrb hlt jmp ret xor adc je inc lds notl xchg fs (bad) pusha jae repnz fldenv test in xor mov repz jg leave lods lds int3 rcll das fbld inc pusha pop cmpsb push xor repnz fidiv lea and dec pop mov je dec mov push dec add movsl movsl dec xor jbe std clc cmc and cwtl cmp inc fsub sti push adc flds lea leave dec sub lret fist mov jb mov inc ds cmp and mov aad clc int3 dec scas jmp mov inc aaa aas cmp jns add and (bad) mov inc mov or pop dec ja pop adc ret adc mov add mov mov cmp inc hlt inc cmp cld xlat movsb lret clc mov fdivs cmpsb out popf mov movl xor ss lock dec sbb inc divb imul movsb sub mov dec sti incb fs orb loop jns and ljmp sub and aaa add inc xor add or sub mov jne inc jno cli lods (bad) pop push (bad) lret mov popa mov sub mov push pusha adc xchg cmp mov or mov (bad) xor jns xchg stos add sub imul icebp add (bad) (bad) mov xchg cmp inc push jle (bad) mov (bad) hlt pop xor jb repz mov xchg cmc imul xchg cld add and out hlt insl les sbb lret push movsl or mov das aaa sbb (bad) dec icebp repz xchg loope pop adc pop rcll int push xlat lods repnz inc push inc cli outsb fwait rcll outsb or cs or cmpsb mov mov pop pop jg pop icebp lahf rcl dec push pop mov xor (bad) xchg push add loop mov sbb dec stos sub loope xchg fisubrl and xchg push add mov rclb jns out adc jne xor cmp test pop pop xor movsl push rdmsr sub mov rcll and push ret shrb sbb in and lahf cmc and dec pop rcrb or mov cwtl jae mov mov pop add shrl cmp ds daa cmpsl fidivr orl ljmp cli inc outsb enter aam cld or hlt jge in popa mov into in jg mov (bad) cmp pop out bound jmp in out imul loop inc cmp mov pushf adc jge int3 xor pop std call mov arpl inc jge cmp pop add imul and loop cs push xor cmp mov sub loope (bad) loope call mov sub push push mov ljmp test (bad) divl out pop push imul xor pop jg mov inc and movsl hlt cmp xlat add arpl ljmp adc push or js xor aas scas or decl iret les sahf add mov stc es xor rolb jle sbb cmp sub fnstenv mov das xchg lcall decb je enter pusha je or jl dec stos mov add mov gs xchg int dec sub fstpt pop cmp sbb add push loop xlat int dec jae bound sbbl sub in lret dec es pop je or inc cmp adc mov xchg les (bad) (bad) (bad) mov in jae push mov dec (bad) data16 out mov das cmpxchg and in or (bad) xor lds mov xor stos jp push mov dec ret icebp imul lods add jge sbb imul xacquire sbb scas jecxz ret rep adc cmpl clc stos and dec addl mov je stc push mov xor ja bound add add push xchg dec rcrb iret dec or lock mov sbb xchg (bad) jbe pop test into adc add mov mov in (bad) cmp in push jl sub pop stos (bad) iret leave cmp adc in and or fnstcw call ljmp ds mov or daa jno mov jnp (bad) fcoml sbb cld xor jns mov (bad) xor fwait insl jbe in nop popa aas or push mov clc movsb jp mov cmp fmul out andb jo adc mov add fxch insb imul jecxz sbb push sbb jg jno xchg pusha pushf or or jbe add roll mov mov clc pop xchg and lods clc cltd push repz ret or enter jo or jmp inc jbe and lret outsb (bad) jmp sbb mov xor fs jb insb lods lods out xor mov cmc aam inc enter in dec movsl push iret mov lret stos and outsb push dec inc mov inc ljmp push (bad) cli mov ret ret pop fs cmp jge loop fsubr scas and push mov jg ja test pop lahf fsubrl fmul jbe,pt pop xchg push or and push xchg sbb sbb dec into dec (bad) fcomi loop cmpsl sub cmp mov rorl mov (bad) movsb (bad) pop push orl insb in jo sarb popa mov das dec cmp xchg and adc daa les popf arpl fisubr jne bound mov aas xor inc cmpsl mov jbe std sub inc mov inc add rcll xor xlat in (bad) in cld mov (bad) add add iret ficom inc dec stos mov adc mulb cmp add pop or pop mov mov test xchg push rorb dec lock cmp sub sub insb xor pop mov lea jmp mov lea mov xor call mov jmp cmp sub sub insb outsb ja pop mov mov lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and mov arpl test or (bad) sbb and xor push lea sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret and scas scas arpl enter cli mov pop rcll out mov pop jo push jg xchg jno mov (bad) mov dec push pop pop inc jle fdivr (bad) push (bad) pop or outsb shlb in jl dec or cmp or jo jae jne (bad) and out movsl clc das dec stc rorb or inc loop test gs and jnp (bad) xor mov pop cmpsb push sub mov repz sub xchg cmp (bad) in mov push jge mov mov into and inc imul pop mov inc enter ja lret jae (bad) ja push ds sub xor and popa (bad) in pop or adc in or clc mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 ret and mov arpl enter idivl cltd cmpsl fmul fwait mov ficoml mov cwtl xor iret repz cmp or add ret mov addr16 out fisubl ss cmp jae add jbe insl mov jle mov sub jae lret arpl orl cmp sub jg dec add pop (bad) adc cld mov outsb mov je xchg inc mov fcomi or xor sbb out mov xchg aaa pop rorb test insb and sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp outsb pop push jns xchg mov aad imul mov test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret enter push add jo mov jns jae inc pop in fcompl popa and jl test cmp dec and stc pop jne mov nop push cs out jae clc and ret dec jae push jno in jmp cmpsb cli push aad mov scas nopl push mov dec insl movsb push aaa push add xchg out xor ret rclb sub repnz mov pop test cmp push mov mov aaa fmull mov sbb pop sub insb add cmp daa fwait dec xor cmp xchg js in in add neg pop cmc bound cmpsl sub test in cmp jb aas (bad) push imull divb mov loop pop in ret inc mov jmp cmp mov lea push jmp stos fdivl sub cli lods push test fs jle aam dec xor sti dec int pop insb popa cmp xor mov stos add cmovns (bad) outsl (bad) in out std clc pusha adc cwtl lahf scas cmp in rol loope sbb push pop fidivr dec mov fmul call mov leave (bad) sub pop into ret adc push push int3 sar mov push mov and movsl push cmp and sub (bad) or cmp add test sub outsl push sahf sbb or lock mov lcall fsubrs lea imul roll mov jle in bound (bad) shlb popa mov xor lcall cmp xchg adc fsub sbbl xchg test pop xchg dec pop add fcoml sahf lahf xor cmc std mov aas mov adc add lret sti mov mov cmpsb push fisttp fnstsw aam lock push mov aas insl cmpsl adc sahf fs push and (bad) fmul rol outsb repnz adc (bad) xor addr16 rcll xor insl sbb movsl pop (bad) xor fisttpll mov repnz xor inc mov xor mov push cmp xchg movsl mov inc xlat fwait dec or into test add (bad) adc jg lret cld jp pop jnp loope clc ret aam shr xor (bad) mov add and adc lods push lcall (bad) and jp xchg (bad) pusha pushf add mov push popf sub sub mov pop lds xor sbb test repz lret sti addr16 inc in sub (bad) in mov push insb ss cs out sub inc dec das xor adc and cmpsb test add fwait xchg fstl imul mov sbb out inc lock lcall push push shrb ja scas dec es or jle lret pushf cwtl cmpxchg cmp ss aam in mov push (bad) and pop inc pushf in jne mov push pusha lds xchg iret and aad insl or mov pushf insl cmpsb divl repnz sbb adc pop mov ss (bad) sub sti andw ficompl mov loope sub mov out xadd inc cld fild pop dec fwait mulps stc ret jns in int cmp aam (bad) mov xchg inc out xor xchg jae sub out xor js mov mov loope cli adc mov xor idivl inc mov popf mov adc lods xlat aad sub inc dec jae mov int3 jnp fucomip or (bad) ja sbb call insb pusha aam loope loop sarb xor xchg rcrb popf hlt ret cs dec push scas jne icebp and aad add xchg and push push mov (bad) mov mov push (bad) into (bad) aam nop xor mov sub cmp shll into add movsl adc outsb cmp out fidivl pop or adc mov inc out ds push dec stc cli into rcl push out add xchg jp stc add iret or rcrb (bad) fnsave push std xchg int mov jg jp decb mov sub push loope xchg jmp leave cmpsl enter pop pop dec fistpl bound sub imulb repz mov gs sub rcrl sub and setle mov push push jno,pn jns int3 (bad) push rclb cmp mov clc ficompl frstor jns fcmovnu movsl mov mov pop xchg and arpl cmpsw inc push xor imul jle insl cmc shll mov push mov cwtl lock mov pop cmp lods js addr16 (bad) into fs out fcomp scas or jne sarl shrl mov inc cs outsb nop sub sar pushf call movsl sbb sbb dec mov pop lods lea add lods jmp mov sbb push jnp cld ljmp fwait push (bad) jbe inc aas les sarb mov xor in data16 push xor xor pop hlt mov mov or xchg dec and add cltd sbbl push inc stos pmaxsw andl dec pop mov in ds sub jae repz lock and jnp sub fildll insb mov mov jno,pt fisttpl out mov call test out mov sbb cwtl jnp mov mov frstor js pop and movsb fist lods cmp xor adc dec (bad) cmp jae jbe mov cltd push and jle mov jo,pt add cmpsb sub test loope data16 insb mov fist inc gs fisttpll pop test pop into (bad) cmp mov sahf xchg insb out and repz sbb cmp pushf sub or jb cmpsl fdivr test lods imul js xlat ret into push adc mov inc pusha adc scas mov clc jno mov add (bad) or add (bad) in add out out mov call inc cmp test push push mov ds lea cmc push arpl out jne into lahf mov test mov loope lret xor jmp mov xor add mov fsincos mov mov clc pop mov jns xor add xor mov aad mov push adc jmp aam rcll push mov lret sahf jge mov imul sub bound and mov mov mov lcallw stos push out push pushf aad in test jge add negb pop (bad) das jne test in xorl (bad) out xchg jo jo sub xchg cmp jbe and pop int3 jb cs push dec test int3 movsb ret ss pop pop adc aad loopne ds sti imul movsl adc cmp xchg mov pop out sbb mov cmp dec dec jg notl mov adc bound pop dec dec adc int cmpsl sub fstpl dec xchg or fwait subb loop and leave les inc mov xchg cmp add mov mov mov arpl xchg lret cmpsl mov lcall jne and mov cmpsl dec adc int out ss and fildll xchg in sub js cmpsl xor mov push lock cmp pop cmpsl push sbb in int3 loope sub out imul ret inc or loopne cltd jo lds fwait (bad) and out push fcmovnb add jle loopne sub fsts mov nop adcb add shr inc pop jle and push lds push cmp pop test cmpsl xor test adc dec add jg (bad) and jo xchg inc pop and out mov and sub inc xor add pop mov arpl scas ss lods mov (bad) ja xchg xchg sub leave push mov (bad) xor dec es call ss sub imul ss dec sbb jg adc pushl mov addl pop (bad) fwait push scas int3 test adc nop testb gs mov loope imul sbb sbb fabs sub jl dec pop lcall pop addl out pop out gs sub test jne xor add scas dec pop or or cmp xor jbe pop xchg aam cmpsb sahf push test test mov jne out mov das sub into mov ficoml adc mull insl ds sub mov enter jge je and xchg add lret les mov (bad) xor or mov push out adc cmpl pop stc (bad) pusha repnz sub ret les cmc adc lds or bound adc ds hlt sbb aaa jb repz sub dec push push int sbb fstl aas (bad) push arpl sub sub loop outsb std inc add lret push and dec mov add aas adc cmp ds (bad) push inc lcall pop je sub std jns jno cmp test (bad) idiv adc fs out sbb lea pop daa incb sub xlat adc (bad) lock in jmp add test push test dec stc ss jnp dec enter or jp sub cmpsb movsl imulb js mov arpl push repz dec jno test mov lods cwtl and or jbe cmp test jnp jb cmp adc jbe les cmp clc adc cmpsb addr16 push and xor test inc mov cli jl xlat dec ret es and and fadd jmp cmp pop pop lds mov xchg test aad cwtl cmp mov fld (bad) lcall aas cmp and jne add adc pop xlat popf mov ja hlt dec inc and xor mov and adc or repz leave mov sbb mov stc cmpsl pop ja push pop mov dec mov push mov push or (bad) mov lock mov ret in xchg or in int3 xchg xor es icebp mov aad lock data16 or out mov xor in (bad) mov mov add das addl jge mov add and jmp shll outsb add jp rclb jb fstpt push (bad) test inc mov insl sub jo repz cwtl sub cs popa movsb xchg das jg add movsl pop mov cmp vpshuflw imul (bad) mov fadds xchg fidivl dec in pop jne data16 test sbb xor aaa js (bad) int3 sub (bad) popf mov inc cmp pushf mov xlat cltd fwait loop jbe js (bad) icebp lahf xchg cmp cmc pop or push icebp jg inc nopl cmp mov into jbe pop pop pop pop (bad) ljmp and push (bad) cld xor lcall stos ja dec sti adc scas push test fcoms ja pushf xchg lret xchg fstpl add sub dec pop inc orb mov cmpsb xchg lea sti and pop movsb cmpsb outsl inc add leave jo scas dec and mov dec sub dec subl mov pop fs adc aas repnz movaps fdivr pop inc add dec pop insb push test jg lret stos clc fsubrs arpl mov xorl fs push aaa mov cmpsb fucompp shr jmp cld jne xor out enter imul adc test negl sub repnz add xor push jle jmp inc jbe dec cs cmp push and inc xor dec add into dec push inc jns sbb mov pop out shrb cwtl movl push mov cmpl inc or divl add add in xchg fwait and and jle or sbb sbb mov jmp lret jmp cmp sbb mov xor sub mov push out cmpsb dec out xor hlt cwtl ret subl test xchg stc jb sahf jge xchg loop xchg popf push jns outsb push sbb fsubp cs pop leave jle add insb sbb fcmovb leave jmp (bad) icebp insb (bad) cli mov and cmpsb sbb adc cmp fxam push and aad jbe push adc add add fs xchg icebp jg add rcll movb xchg add adc in jge inc mov int dec mov (bad) es push (bad) mov nop sbb cmp lock pop lods ret sub movsl dec cmp call xchg fistp sub rolb dec push sar sbb shufps cmp shlb out lea sub outsl lahf jmp scas ret xor mov iret ljmp int das xchg outsl test jmp adc outsb ret xor mov call and stc imulb test mov xor push pop sarb sti mov lock cmp push dec rorl into rorl fbstp jp and sub jp bound aad clc mov (bad) dec (bad) in stc adc loope or inc ja cmp je and scas aad sarb out sbb add sbb sub xchg mov aad mov fdivl inc ljmp (bad) loopne int xchg imul push dec addr16 push pop adc loope mov mov es mov mov sbb ja insb push sbb push cmp sub sbb daa xor mov add nop mov sub push sbb inc and cmp idivl mov les jae stos sub clc scas std jmp adc ljmp push decb jp xor rcrl and scas rorl add xor mov (bad) lahf cmp int3 dec mov sbb jp adc aaa mov mov dec mov jg lea repz in mov mull add popf int inc stc sub sti push hlt rclb sbb aaa push mov or shrl or inc pop dec cmpsl or mov setnp scas aam jl push push jbe mov insb adc or inc dec lock xor into xchg cltd push fldenv aam dec test push jg test jns mov push leave rorl imul scas insl rclb cmp mov xor hlt jnp (bad) fstl xchg sbb push pusha fbld fcoms lock in (bad) in cmp mov pusha push incb cld clc movsl pop pop outsl mov add scas mov fwait xchg verr je jl mov mov dec pop push pop sbb loopne aam sbb scas aaa jl cmp add or adc add sbb mov dec jmp cmp sarl pop es xor enter cmp xchg sub mov pop stos ds xchg mov mov aam push (bad) imul (bad) mov outsb xor cmp insb (bad) adc fdivl test fistp mov adc mov popf cmp (bad) aaa xchg je lock das int3 jae push dec lret dec xor cwtl mov dec dec sub dec pop je popa (bad) mov adc sahf adc (bad) notl jecxz mov in pop fcmovnb test into jg mov ss fidivrl or setp or ja inc aam not das lds hlt pop and nop jae stos sub dec mov dec xchg int test sub lret push push out sub and and sub (bad) dec test push cmp mov sbb (bad) hlt mov lds (bad) sub stos jno imul adc mov cmp cmpsl (bad) out imul and xchg lods jp or negb xchg and pop jno aas sub sahf int3 xchg cli sub inc int mov aad pop or hlt insl inc jnp and xlat xchg in xchg daa popa cmp bound jbe or xchg push lret jb pop mov ss idivb sub fucomp cmc in outsl sub cmpsl and call cwtl push aaa out or mov fild out sub push clc pushl pop xor push fwait and dec lea cmp aad mov movsb popf cmp pop lret pop ss mov push in enter (bad) pop arpl lret (bad) sbb decb and stos xchg xorl gs push (bad) mov jno ret xchg adc mov aaa call mov dec lock insl mov rol jle ret sbbl lret and sub imul rorl push sub mov jo sub or or shr adc xor add add fisttp dec and imul lea orl ret hlt and dec loop cwtl rolb cmp fsubs icebp push in jl lock movsb lds out xchg imul jge push xchg push dec cld (bad) repnz test cltd and or repz loope cmp jb xor cmp arpl adc add pop nop push cs push lds out gs push loop pop mov mov mov sub pop insb test (bad) std and repnz fdivrl cwtl jae mov dec jns popa mov fldcw mov xchg iret and in test jmp push (bad) xrelease shlb xlat pop inc sub mov push lret hlt jp movsl pop jmp lods loopne cmpsb jne mov (bad) outsb repz cmpsl dec mov inc add repz dec lds adc dec and xor add ret dec aas dec into xchg cwtl push xor inc mov dec and sub dec adc stos sub pushf mov add fs insb push push enter lret ja sub rcrl push add mov xor pop inc cmp pop sbb imul jmp pop stos inc movb mov mov xchg daa shll mov movsb (bad) mov mov imul mov fsubs fwait push sub (bad) jae or and or push into pop mov dec lods mov mov jp ror sbb int3 out cmpl aad in movsb out add and movsb mov fisttpll and push enter sub and insb aad sub notl ret repz outsb shrl jbe xchg (bad) jb sub lret out andb cmpsb push rclb inc mov jmp ja stos mov mov (bad) jbe jge push and xchg or cwtl cmp pop pop leave pop inc jno sub push sar ljmp (bad) (bad) hlt lret dec inc push popf pop jge and loop fbld pop outsb or mov aas dec clc pop repnz aad (bad) stc or mov jo lahf mov testb enter out jmp daa or sbb mov insl jno mov dec movsb mov mov mull pop loopne fldcw or test mov jl mov sbb lret or cwtl fsubs (bad) das jae push sahf push and arpl cmpsb clc cltd sub mov xor fs cmc insb leave jbe addr16 jg iret in pop pop and daa sub push pushf mov ja fwait popf lods mov (bad) mov and lcall popa adc cmp cld cmp shll and push in xchg mov call cmp insb lods scas sar dec xor sbb inc jp push out push sub mov loope inc clc fdivrl insl mov push cs fstp sbb mov lds push add aaa fsubs je push in addl xchg jo jbe shlb call shlb jb hlt icebp negl stc xor adc test das lods mov rolb and icebp adc pop xlat cli imul lods xor mov daa dec into in jl xor push dec (bad) std inc lret xchg shlb fstps call pop mov cltd sbb and push test cmp std js imul outsb xchg js sub mov clc test rcll cld mov (bad) aad mov adc pushf stos lods xchg and (bad) sbb imul nop add rcrb add enter (bad) mov imul lahf cld mov xchg lods or inc flds ljmp inc ficompl and out loopne les jne sub pop mov pmulhw popa inc int3 (bad) pop ja arpl xor mov mov call jns cli adcl cmp mov cmp jno or ret cmp pop sbb inc cmp inc xlat sti loopne mov push jmp lahf out sbb cmp inc pop add or mov jl sbb push xchg adc and int jae pop xchg jmp sbb pop mov (bad) mov adc test das add hlt and pop add push lahf loop sub lock push dec gs lret (bad) xor movsb in xor inc (bad) mov sub jp aad or notl fildl insl push cmpsb fsubrl mov sbb cmpsl and xorl dec (bad) arpl pop inc outsl inc stc or rcll test aam enter fstpt ljmp jmp jae jnp xor data16 inc add inc gs imul add icebp aad outsb mov addl test inc ds lods fidivr lds stc ljmp mov and mov mov mov loop scas fs lods sub and adc cmp mov icebp test jge repz cmp hlt mov cmpsb jno mov cmp mov push sub scas jb fucomp stc dec xchg popa dec or push cmpsb and ljmp xlat jno lods xchg mov jno jns lcall sub imul outsl mov or cmpsl in adc in imul stc adc jo sub xor xchg (bad) xor xor xchg stos idivl data16 push sarb inc inc and sub jg fwait add push ljmp mov mov daa cmp dec dec dec mov mov (bad) jp in and in arpl adc stos mov mov daa out mov xor jno or lods and or mov inc pop pusha subl (bad) jl dec daa seta lds pop fcom out fstpt or mov cs jmp test mov mov mov mov and sub xor cld addl mov (bad) jecxz inc ret dec sbb pop arpl mov repnz roll fwait mov js les ret mov fdivl lds cwtl push or push xor ret xchg call push inc push repz inc mov sub pop test lahf rcll pop jne jle rcll add inc addr16 push jge daa sub or sub aas xor fbstp out cmc pop jbe push loop xchg add inc outsb sub mov pop jns push cld add div dec enter xor pop jnp xor cmpsl pop dec mov inc and pop call sbb lahf mov dec lods js cmc insl mov mov repz jl push ljmp lea aas das rclb and xchg push lods sbb es rorb push in in mov jbe mov adc into push pop bound sub nopl in lea int outsb sahf sbb cmpsb mov xor mov outsl pop mov push adc faddp xchg movsb ss jns mov mov test jecxz push sub inc or sarl (bad) scas dec cld insl aam rorb sar push rcrl xbegin lea cs xor test dec stos add faddl mov imul push cmpl adc test lds cwtl in or scas xchg sub mov push sub push daa rorb fsub inc push leave cmpsb jb mov ss add ljmp and jle pop mov outsl cmp aad ret call aad jae add mov adc test lock dec xchg jge clc das sub inc mov in mov ds js lret mov adc dec pop xchg pop add jne mov lock loop xor pop neg jg mov mov inc mov and mov xchg into dec add fmull stc lods fwait ds aad mov add or jl pop mov lods fisubr or push pop push or shlb rolb xor shrl popa jbe xchg pop mov inc mov test cmp jl call or cmp push scas or pop sahf push dec repnz inc dec cmp sbb sarl stc outsb out mov clc cmp das pushf (bad) imul ss push mov xor out aam outsb and das jl and mov (bad) push ja es and clc mov pop fisubr pop mov in iret and int3 push cmp xor sub imul dec lret (bad) repz mov imul pop test (bad) stos push ret js xorl (bad) and adc sub test mov fnsetpm(287 jne outsl pop aam or sub (bad) xor sbb repnz push cld push out xlat loop mov and scas inc fdivs mov dec push jnp jno inc push (bad) mov jbe push icebp jecxz lret aad mov aam inc out in lret sbbb daa (bad) mov xor and dec fcompl cs stos and orl mov pop xlat mov sahf inc pop cs js xchg aam mov mov ret push mov lahf sub or repz sub pop out pop dec push ja mov int inc incb and or lahf pop ror cmc xchg push enter pushf mov in subl push out dec or xchg data16 test and xor test push pop push jb insl les dec (bad) mov adc insl push push decl and bound cmp (bad) mov push int pop fiadd sbb ja stc ret xchg sbb fwait push sbb mov jp and xchg cld mov (bad) out sbb out es sub pop and push aad mov push daa add jns cld fiaddl lods es repnz and jp fdivs lods dec int3 ret cwtl pop jb cmpsl rcrl mov dec lea mov or adc inc ja lds pusha cmpsb enter sbb ficoml subb sub dec test adc cmp sub hlt jo cmp dec cmp push lods add mov shll and add nop addr16 test pop pushf mov mov inc (bad) icebp (bad) adc in sbb push dec fmuls scas pop (bad) (bad) mov and cmc pop fwait iret cmpsl xlat and jns lock mov je mov pop leave test xchg out incb in jge test popf inc mov cmc dec push inc fnstsw es iret mov fwait sub mov stos add fisub cmova jbe adc dec insb pop scas dec and pop stc inc jnp fnstenv mov mov mov test popw enter je adc sbb (bad) mov test sub add arpl enter or adc xchg aaa mov ss bswap dec cmp and or jmp adc std jl cmp mov jae cmp jmp cmp ficompl dec inc or add add lock aaa jmp repz pop lahf (bad) int3 xchg push jns push sub mov js out mov into jne ds cwtl cwtl push mov (bad) mov lea jmp aam adc inc and (bad) push cmp orl outsl fsubrl adc sub inc mov aam pop loope mov cwtl into lea adc fidivr inc and dec mov ret mov and iret cmpsl movsb and test push mov pop clc out iret and insl fbld outsl out mov mov mov jg jle out ja sub or cmp cli push jecxz leave leave gs jo mov cltd call xchg imul cld aam jle jle or jecxz adc adc mov fmull aam hlt push inc andl lods dec roll xorl mov cmpsb iret xchg pop adc mov leave daa aad fldt dec sub push xchg aaa aas xchg adcb in lds movsl mov mov pushf cmp mov popa sar in xor pop sub mov push scas mov jno aad or jmp or jl ljmp stos xor daa mov mov mov js les and rclb (bad) xor sbbl shll enter in push imul cmp cmp or dec sbb xchg pop out xchg scas adc xorl cmc mov clc jecxz dec ds and jo sbb aad xchg adc pop lea mov mov add call inc dec ljmp dec repz lods dec add leave xchg fnsave (bad) jo (bad) dec mov adc or stos aam fstp mov cli in pop inc fs lahf icebp or or or int pop imull mov std testb inc pop add push aad xor jg push pop jnp ret dec loope arpl iret (bad) loopne fdivs jle cmpsl cmp rorb push (bad) and popf fiaddl insb xor and aam inc in cmp and (bad) mov inc out stos movsb stos insb inc lods xchg jg jecxz jnp mov jge test in fdivs aas xchg cs or push shrl pop dec sub pop inc cld lcall iret je xor addr16 and mov imull add ror jmp out mov and (bad) push dec (bad) stc shrl rorb ss test imul ret mov aaa arpl lea sub test jbe stos loope dec or mov or xor mov out mov divb sbb xchg sti push ds add mov cs das aam inc mov sub or (bad) xchg imul repnz lret aas adc mov pushf xchg cmp orl mov fsubrs (bad) sub fstpl jns fisttp push leave mov ret stos out push inc push ret lret dec push cli dec leave xlat xor lret pop enter (bad) xor in insb mov cmp nop sub jge hlt pop gs and mov repnz div loop rol and add sub inc dec out push (bad) or int out push adc sub or pop lret jle lahf xchg cmp out stc lods stos dec add xchg cmp jp test cld icebp fs xchg push push inc cltd jo dec imul sti sub in lods mov cmc mov imul stc test fnstcw add in or jb pop test and sub adc sub sub mov pop add adc lds sub mov jne push mov adc fistl mov je daa inc adc sbb mov lea dec repz jns daa jne jbe decl test mov and jmp xorl xor mov pushf sub xchg mov addr16 pushf jmp adc add int3 pop pop cltd (bad) jle insb mov xchg pusha mov loopne xlat cmp in out jle jecxz call aas (bad) jmp hlt int sub fiaddl inc std es movsb pop aad mov sub pusha mov scas jbe,pn push xchg pop pop lea mov int3 push mov repz push aad sahf cmp (bad) cld int fwait inc repz cs add in sbb scas jge xchg or (bad) dec in push (bad) xor ret and sarl arpl sub cmpsb stc loope ss daa mov aam xor aaa cmp stos imul movsb jmp into adc push sub aaa scas mov cmpsl or loopne jnp rolb add push sbb imulb fimul mov inc (bad) mov push fxch push jno int3 into mov xor xchg jae jle,pn movsb add std lcall pop les xor xchg (bad) mov mov bswap sbb cmp lret in mov mov lea jnp rcrb and push out popl adc dec or into sbbb rcrb mov adc adc push in xchg xchg push mov aam popa incl xchg xor pop jl test jl,pt scas or jle jns fildl fisttpll sub or enter mov adcl popa into mov adc lock stos mov cwtl shrb xchg (bad) dec jne jbe es mov andl inc imul ficom subl cmp xchg insb iret mov cld call lods scas shl jmp mov scas or jg popl pop (bad) fstpl jae in and mov cltd dec xchg scas mov sub pmaxsw cs inc cmpsl adc divl xor mov lahf mov xchg pop xchg test mov jns mov xchg std stc pushf ror jg inc xchg (bad) cmc adc adc jecxz dec (bad) out js mov clc and ss ret xchg pop jnp mov inc xchg xor stos daa jb sbb mov flds test adc add dec add sarl fdivs je pop je pop jp pushf ret test fs mov mov push frstor addr16 xor xchg loopne and mov ja bound test push xor add pop dec jge loope ds mov xchg jecxz in jae inc xchg xchg mov fsub push (bad) aaa ficompl and les pop lods mov test sarl sbb lret (bad) jne stos lret cwtl xor in xlat inc mov je call decb pusha cmp pop lea pusha cmpsl push mov xchg das dec sub nop lods xchg mov add testb inc inc bound stos lret xchg scas out cmp mov pusha and clc outsb or adc movsl mov xchg data16 (bad) popa cmpsl outsb nop and in mov out jno add fnsave aaa add (bad) lret outsl or test stos and movsl test pop les (bad) stos addr16 jge in insb aam popf mov dec cmp or popl mov cmp mov into jmp push pop jg ret jnp in bound adcl sub push mov xor sbb mov inc jmp dec and cmp bound out pop push imul push addr16 lods add push jbe pop insl loopne push outsb mov movsb lret mov or push clc sub jg dec loopne adc imul movsl adc mov into int lret call push flds insl (bad) in push jl pop fmulp dec mov fdivrs or dec mov pop js dec pop roll jb jno rcr dec lock jl sbb jecxz dec mov bound push lods jb ja mov add inc pop jb js sub repnz inc in stos cmp xchg (bad) and lret lods adc adc data16 mov or popa or mov mov mov jno ret and je jl add insb ja outsl test fidivrl aad lcall cld lods dec mov mov decb in and jno adc std xor addl imul and repnz rol jle jg and pop lret mov add les xchg test (bad) stos inc shlb jmp push imul pop jl (bad) fwait xor jle inc lods testb mov jmp (bad) ret push jmp dec ret lret jmp (bad) xchg cmp xchg (bad) cld push or fdivrs push (bad) jno and test and push jge aam mov inc sbb mov inc call sub push adc inc sub cmpsb mov rorb mov inc popa repnz insb xlat lcallw scas mov push addl cwtl cmp xchg mov mov clc pop dec jmp shll popf cltd leave jecxz les cmc arpl push test in or lds jl es dec cmc jg outsb std ficompl les push arpl loope fmull lret pop (bad) push popa push and mov xchg and in fidivrl adc daa aaa call popa andl jge inc out faddp enter xor or push enter out aam imul aaa pusha and jp mov rcrb imul imulb cltd push mov sbb frstor aam push jbe xchg cmpsl das out sbb cmp fstl incb les pop scas dec bound cli mov shl (bad) mov dec inc sbb cmp sbb dec cmp and mov adc and scas inc lret and testb subb sub mov rorl cmp gs divb jbe push adc push andl mov or mov jo push rcr sarl mov pushf pop sbb jns xorb mov cmp cmp and jmp xchg test pop call xor push in std or jg xorl (bad) shr enter iret orl popf xor stos mov fs mov cmp cltd adc or (bad) fsubrl inc les fwait xchg out notl pop jne stc fnsave xor es sbb sahf push jl xor cmp sub sar incl lock mov pop jp inc or in mov sar push push jmp push lods dec cltd mov in stc cmp add outsl std mov push cmc (bad) add pop or xchg popa xchg je add pusha and scas test jo adc int3 sarb cmp std xchg and test cli mov repz sahf inc cmpsb sbb rcr nop cs addr16 test ret (bad) mov fs pop mov cmp mov outsb add jp dec outsl inc fidiv (bad) pop xorl mov iret push jmp mov ja jecxz daa loopne lea xor lahf mov jo jmp xor fdivp push scas sarb stc adc lahf cmp pushf lret cltd xchg lods iret inc in mov inc pop xor sbb mov and lret imul add xor stos out jo aad shrb ljmp pop sbb scas mov pop xor inc xchg roll jmp sbb incl jae pop iret jne stos (bad) push sahf lahf jb and in fstl push outsl pop stc cmp sub sub idivl jo cmp fbstp add mov mov fstl adc sub loopne and jmp mov mov xor jl or xor jnp lea rolb leave (bad) xor fs out fwait (bad) sbb xchg jbe adc mov jb nop add or into sbb loopne mov mov adc enter sbb popf in mov je cmp (bad) jae lea lar push push inc mov movsl loope (bad) mov jb dec call call mov inc cmp xchg dec or pop xchg loopne jno xchg sbb mov (bad) cld sbb and (bad) mov (bad) in icebp xchg cld jecxz sub push cs sub jg push mov loopne pop xor je pop cmpsb jns jne jb cwtl insb push int3 stos js imul rdtsc in push popf adc pop xor cmp inc int3 push mov jbe (bad) jp xlat push inc fucomi test out jle gs dec ret cld jl enter jle loopne or or adc mov test sub xor into pop loope inc (bad) mov pop repz mov imul stc popa lock sbb push jnp mov jmp inc je (bad) dec (bad) lret popf (bad) sbb push lret add pop outsl xchg or scas pop push addr16 rol xor xchg push popa or scas mov push stos mov xor mov adc (bad) jb jecxz ret or (bad) into mov ljmp fistpl pusha in dec scas loop pop xor jle loopne cmp stos in jnp (bad) mov mov add in lret pop repnz mov pop lock push add addr16 dec (bad) std pop daa lret mov dec lcall jnp push (bad) aad sahf cs sbb dec cltd pop popa fdivrp jmp pop imul (bad) jbe in adcl inc ficompl addr16 and cmpsl mov xchg mov adc mov xor cmp lret cltd arpl or mov pop add push repz jno aas add xor stc pusha sbb adc std jl jl gs mov sbb sbb mov xchg (bad) and (bad) xor (bad) mov aad call mov fidivr out push fcomi jb pop fdivs xchg jl mov fnsave push inc nopl call aaa std test out sub mov mov xlat leave or mov adc sbb push xchg xchg test and dec inc pop cmp fsubrl ss mov inc fsubp outsl add js mov pop xchg lods push push mov ret movsl push pop repz push cli pop mov nop xor xchg gs movl push ret sti xor icebp shr hlt ret movsl ret sbb aad mov sub push sub xor scas dec jecxz mov dec mov popf adc bswap or add (bad) jbe daa push into inc add fimul jmp push lods cmpsb ret jp imull std lcall adc stc pop pushf cmp fimull movsb dec or add pop idivl fiaddl fiadd mov ret mov inc mov and mov xlat ds ja mov mov popa das jp xor mov mov pusha inc push aad mov clc imul aad xchg in add xor fndisi(8087 push jo arpl pop ds push fidivrl fstps inc into sub inc push add add pop and jge mov jmp xchg test pop jne orl ljmp adc outsb outsl sbb jmp add xchg and stos nop fs mov sub addr16 arpl test cmp lret cwtl loope add (bad) jb int xlat stos jl mov shrl push mov movsb add repz add mov or jno mov test mov jno push shrl sub pop mov cltd (bad) mov mov adcl xchg push lds inc pop cli pop nop and cs daa jb rorb push adc xor imul or fildll and int3 js push mov jne inc cmp aam xchg jae dec mov inc out or cmp out add jecxz add add sub push lds mov cmpsl (bad) hlt cmp jo scas sub sbb in repnz xchg repz pop xchg jne jle clc lock fwait sbb and dec loop ss pop pop push cld xchg ficomp cwtl adc std sub and xlat popa lock push or xlat fmul dec or mov lods shr ja cmovne lret js xor negb out dec mov repz add cmc cmpsl fiadd xlat sbb in int3 scas mov add mov push adc je iret aam and xor inc jge les jecxz mov mov and xor mov aas push ja inc test mov ret daa fidivrl inc fldl jne addr16 (bad) out adc iret add rcl int (bad) or aas jb jp (bad) mov cli sahf cwtl insl outsl pop sbb loope cmpsl (bad) sbb repz xchg mov adc dec lea jmp popl dec jnp out lock or adc lock sub test mov in xor add adc aaa (bad) jg add jecxz sti sti push icebp sti fidivl inc in mov dec js aaa aas cmp pop xor adc or add fabs imul ljmp pop jle sbb push lret in out lret int3 pop xchg push call cli outsb scas mov or movsl nop in rcrb gs addr16 xchg xor fwait leave mov pop add xlat ljmp ret xchg pop cmp xor dec (bad) out out dec inc dec mov mov sahf (bad) jle or cwtl mov leave jb mov vpavgw sahf std xchg inc js fcomps jne and into (bad) xchg push adc xchg jb (bad) (bad) dec cmpsb lods or sbb das xchg das leave stc push ret icebp cmp mov pop enter sarl add test roll jns insb call mov push adc cmpsb rol push cmpsb add add xor adc (bad) xchg nop test mov iret xor mov xchg dec or cmpsb fucomp ss xchg aam lods decb xchg stos pop sbb or stc (bad) lret (bad) fdivl inc shrb ret ret adc cmpsb jge outsb mov xor push fisttpl call or (bad) mov call (bad) and lock xor in mov sub inc cmpsb and (bad) push sub adc imul or xchg push cmp inc adc insl (bad) in cwtl cli or cmp and scas dec jae push lds xor cmpps mov cmp jmp sub je and adc notb push out push push sti (bad) mov rorb sbb shrb mov out mov arpl fdivrs pop out ja and xor push aad pop aaa fdivp movsb cltd sahf fiaddl std loop loopne inc loope inc lret and aaa xor adcl pop ficom pcmpeqd mov cld push cmpl cmc jl faddp xchg inc and sbb xchg arpl jbe inc xchg fsubrl cmp dec loop testb shrb lret pusha sub into leave dec push (bad) cmp sbb pop inc xchg jb mov pushl lcall call nop (bad) jg or fldcw out or rolb xchg pop dec and pop gs fwait call jmp push mov icebp mov addr16 je pop xchg insl or jae mov sub out jle pushf add dec jnp add mov js mov or dec fcompl dec inc cmp lock sub or ljmp pop mov xchg sbb jne jb pop mov adc ja ret fs orl repnz jle test or lret or xor sbb xchg into cmp mov lret mov out pop mov mov ss int sub aam out mov movsb leave xchg mov out cmp xchg mov sbb je and ljmp or imul mov mov and in dec mov and pop pop or xchg daa mov rol push std mov push aaa icebp mov test test xor sub outsl jge fildl fidivrl std mov lret add shlb mov or aad xchg jl sub dec fcompl adc incb popf pop leave fnstsw andl insb pop push aam stos or mov (bad) hlt in sbb push sahf (bad) in add xor push ret sub gs jbe cltd (bad) mov arpl sub jbe add push loopne pop daa dec call les pusha add insl pop xchg stos jp and push push insl (bad) leave or outsl sub dec sti popa push je call or test ds out fnstenv mov pop mov outsl mov or pop cltd lea das jnp pop add xchg xor add shll pusha xchg stos xor es push mov sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 ret sarl sbb aad mov adc fistp pop pusha and or xor mov xor (bad) pop mov push sub insb push sbb fildll aas out xchg cmc in xor or sbb mov (bad) fisubl ss pop or clc scas pop inc sbb ret mov in mov xlat jns push (bad) fnstenv xchg push sbb scas movsb add mov and test push jmp std push cmp xchg jecxz out xchg xchg lcall adc outsb outsl pop add in sub push aaa mov aas mov mov xor sub push push cmpsb dec scas mov xchg stos lods mov mov leave and sub (bad) or imul out daa lods adc mov xor imul dec push push scas push mov test inc push adc pop pop xor subb test or mov push loop repnz aas xlat loop jno xchg into inc dec notl rcrb mov adc mov pop lds jb fisttp outsb mov inc xchg negl sub add sub cwtl mov in (bad) cmp cltd and jae jge (bad) mov mov inc dec movsl aaa mov or push test roll outsb iret sub adc gs add xchg mov and cmp pop jnp pop sbb (bad) sbb push clc jmp or cmp adcl ljmp mov and or pop pusha push pop or sbb inc lds xor lcall add mov mov aad push push pushf lea mov int3 pop js ss jne push pusha or ljmp mov xor dec mov jle cmp mov jb jae adc sahf cmp mov push inc push jge jbe (bad) add push arpl sbb cmpsl rcrb leave inc movsl sbb pushf push bound insb aad lret dec xchg (bad) test mov sti jae sbb jle fisttpl xchg push or in mov ljmp pop fs push push mov outsl aad out cmp fadds jbe adc inc push mov notl (bad) xchg cld mov dec lock in push xor clc cmp lds orl pop mov xchg call sub fistl mov es jmp inc lods (bad) ja cs aad (bad) add xchg adc xchg mov inc dec sub inc lods xor fs xor inc loop icebp mov cltd sub incl sub push push mov dec xchg scas push inc sti cli pop adc mov xor aam cmp jg mov fsubrl gs xchg adc adc das int3 shrl sbb xchg test jl movsl lcall push icebp (bad) adc mov (bad) in pop mov cmp xchg push and negl jbe test outsb sbb mov std mov inc xchg mov or mov (bad) mov int inc icebp inc andb ljmp and pop repz sbb mov inc push push outsl xchg push out inc cmp data16 cs push sbb stos test loop fisub pop sub adc lcall inc or add mov aas sub sub enter cmp test xor jp cs aas jp push stos mov in add outsl cmp cwtl js adc mov sub shll pop aaa xlat xor mov shr mov add mov inc push mov shll pop push divl mov cmpsb jnp pop rcll (bad) aam pop sub inc (bad) xchg (bad) cmc cmpsl fst lods mul inc mov bound (bad) int3 mov jno xchg divl lret std sub pop adc inc and pop (bad) mov cld cld nop das push cltd and pop push pushf and hlt jg arpl push aad and (bad) into cmp icebp inc jne fldcw sbb inc cmp arpl dec cmp lret mov ret out cmc adc test icebp add ret push (bad) push mov push mov push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 