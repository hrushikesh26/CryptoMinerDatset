push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and idivb fdivp scas pushf pushw jno pop inc cmpsb mov xor mov mov flds insb fisubl pop dec jg popl cltd xor push jae cmpsl xor gs mov push leave fwait pushf pop sub mov shll mov stc movsb notb and mov pop scas push push in and xor enter push les data16 imul xlat adc insb call cmc arpl xor cmp adc cmc sbb push push lds mov outsl lret cmp xor jbe push into push inc lcall and mov adc in push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and and arpl out or sub decl jmp mov xchg imul movsb aad lds add in mov cmp mov cmc adc stos and ret mov outsl in add xchg (bad) adc mov insb cmpsb cmp and or and fwait icebp inc mulb or pop je adc mov shll or xor bnd adc out int3 lahf and pop sub push push insl (bad) jne les push xchg jno rorl idivb mov jnp fs pop js flds pop shl gs lcall push mov add jb (bad) dec xor xchg ret mov nop mov lock mov test pop xchg sbb jb clc nop push in sub jl mov push push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 aad and and arpl out or sub out push jmp add mov cli repz (bad) sbb dec jo (bad) push stos pop jbe add inc rorl jle dec js ret int imulb lds sbb mov add inc int cs loopne add mov mov jo inc stos and (bad) bound mov inc es jmp add push push sbb jge inc xor (bad) cltd sti out adc sbb xchg lret xor xor mov in push sbb push movsb push lahf adc cmp pop (bad) nop stos xor cmp dec lock lock xor fisttpll push pop cwtl jmp and in push fisttpl lods je dec pop sbb or jae aad add mov stos xchg addr16 gs mov cmp mov (bad) fiadd mov jle push pop test (bad) pop sbb in xchg stos dec inc mov insl cmp inc cmp (bad) les jmp push lea lret pop icebp setb push inc (bad) lock (bad) in adc cmpsb int3 dec std lret out (bad) icebp or sbb mov add sub push mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and xor dec std sbb push inc pop add sub xchg cltd out sbb in movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl add data16 aas cmp inc jo mov push cltd xor imulb outsl aaa add add sti lret sbb popa adcl pop pop cmp rol lods in add (bad) popa es loop pop xlat sub lcall cmovno xlat nop popa into out jb or dec cmpsb je inc das or test jo in mov xlat adc ss nop es test loop pushf mov inc jnp xchg leave sbb outsb (bad) or lods pop lret xor mov leave call or sub inc test mov mov ror stos inc and xlat push dec mov push or stc push stos or bound cmp adc int mov xchg mov fldt jne push pop in push pop xchg mov pop inc (bad) call mov xchg out into cli (bad) es sub out add sbb mov jp add dec push popa inc fiaddl lret and outsl outsb fdiv sub inc cmp dec mov stos int3 cli incb pop lcall out in inc test mov arpl mov mov jbe into push pop in sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and negb pushf bound jno pop pop in xor sbb jmp bound dec lcall insb fisubl pop dec fsubs mov adc fistl xor push mov push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 aad and push inc xor sub sbb inc cmpsl inc mov loopne cltd stos test loopne (bad) push inc iret sahf (bad) ljmp icebp adc in push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and negb fdivrp scas pushf bound jno pop pop in xor fsubrl jge nop daa and (bad) leave mov add or push fistpl add ds cmpsl and ja or xchg sahf insb inc pop mov (bad) in rcll push hlt inc xchg cmpsb fsubrl xor loope push push dec bound scas adc push or imul xor std sbb sbb pop dec in out pop rcll movl cmp push out sbb insb int3 das cmp mov sbb xchg adc call add ja push ds imul inc dec xchg pop mull dec and pop dec xchg dec lea ret test rol test sbb (bad) mov adc mov cmpl push mov mov and xor sbb push pop pop inc sahf test jg cld mov dec inc jecxz xor (bad) insl sub (bad) push addr16 mov das push es lods js sbb es (bad) int3 add and or gs iret stc insb inc mov ja out ja fwait gs push (bad) sub mov loopne cmp mov xor (bad) jmp lret jne cltd cmp or leave dec clc mov jb iret push add bswap inc mul test stos mov int fs and mov (bad) cmp clc movb mov mov cmp test or test mov insl and add outsb dec push lcall bound xchg jge cld sbb fadds and cltd fdivp sti (bad) lods loop add insl or push das cmp aad mov push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and xchg out mov push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret aad and fwait cwtl inc add (bad) out cmpsl xchg pop sub sub rcll stos bound ss adc popa cs inc dec sbb xorb adc orb mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret aad and aad inc orl push (bad) fnsave cmp cltd ss pop and loopne mov rcr push dec js (bad) jecxz xchg push mov mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc das and and arpl out or sub stos push jmp addr16 jl ljmp negb js inc data16 mov jp push rcrl lods pusha in cmp dec adc inc in cmp and mov jl inc ds sarl in mulb add inc (bad) or xlat bound jge sub out arpl and pop movl or mov dec mov mov xchg add (bad) ljmp lret shll (bad) cmc push ficom sub jae inc bound popa dec inc push sbb push fwait pusha fs movb movsl lret xchg inc dec xchg dec call into addr16 pop sbb add adc adcb loope adc or mov jmp in or mov in lods add mov lock xchg fimul lds jl sbb sbb cwtl int insb fsts lret push pop sub push jae mov out cmpsl lea adc loope sbb xchg pop test push mov je and aaa sbb or repz push dec mov sub outsb push lret mov jnp fucomi or clc xchg repz push leave pushw out gs jle cwtl (bad) mov cmp jge lcall popl cmp push clc xchg fistpll in imul std sub sbb pop es cmp outsb mov add xor in cmpl arpl pop gs adc in inc dec mov test xchg pop pop into pushf cmp xor mov cmp and ss fwait call lods daa xor cmpsl lods pop lock stos ret fbstp xor into mov ja repz loop das (bad) int fwait adc push rcl (bad) out call (bad) jecxz cld inc cmp pop es jne mov sub push fadds int loope xlat mov (bad) xchg loope add mov push push xor fadds inc test int frstor cmpsl cs out pushf sti andb or stos and and jno push xchg jle call gs dec xchg js clc out mov sub cmp iret dec push adc insl faddl mov lahf xchg mov and dec jae aaa outsb lahf jmp div cmp dec test jne mov ret stc ret jge push ljmp inc shl fs mov outsl cmp add test mov xlat xchg mov imul (bad) dec cmp (bad) and mov xor mov loopne je push das mov ficomp lds repz gs das (bad) (bad) lods insb xchg mov lret mov lcall cwtl push xchg jle mov cs mov mov movsb hlt xchg jne loope lret jns fdivr (bad) or sbb bound mov xor adc add mov push push jmp out mov xchg jns and movsb outsb push sarb cmp aad outsl cmp aad lret ret je or (bad) arpl or pop aaa insl test pop roll fidivl hlt xchg or jl or jo sbb mov lcall pop test mov lds push sahf out pop fsubs enter mov pop enter ret les mov lock mov gs mov ret jmp dec cld (bad) dec mov cwtl dec and push fwait ret ss push dec jle imull xor cmp es mov mov sub (bad) lods xor pop lock aam inc inc push dec (bad) dec cmp in in hlt mov cmpsb adc jno mov rorb pop lock insb imul mov dec cwtl mov lahf xor sub fisubr cmc push pop sub enter jge jo xor ret (bad) je cmpsb ss fisubl outsb dec rorl push leave rclb aad test pop (bad) loop loope lret xor out daa adc push dec int3 jbe iret cmp add out stos jge ljmp fidivl mov mov lock repnz xchg icebp mov pop push sbb push sbb inc push pop inc push mov jmp push jae out jns leave call push mov mov sub test outsb fiadd mov inc rolb xchg ficoml ja cmpsl push mov jmp call std or and sbb xor mov add xchg sub and out ret lods mov jecxz mov lds jmp in fmuls int mov popa mov lcall and aas cmc andb not mov push jae clc (bad) and mov adc jo sarb mov lods mov fsubrl mov jp js cmp sub cmpsb sbb pop jns push popa cli sub sub jno pop shrb out int sub pop pushf add jnp stos inc rcrl xchg aaa mov leave test cmp js pop ret cmp addr16 jb addb jo mov mov push mov jecxz xchg pop push sbb adc sbb fsubrs mul mov aam test sub xchg (bad) ret inc pop clc jo aad cmpsl mov lcall mov adc add gs scas and (bad) add cmp inc jecxz xor cmp data16 addr16 sbb or jno mov mov jecxz scas push insl jno stc repnz jp xchg ret mov popf mov scas repnz gs inc aaa stc (bad) stc xor in jecxz dec stos dec int sub (bad) or mov mov mov xchg add sbb addr16 inc sbbl aas xchg cmp nop xchg stc stc cld in cmp xchg push iret lcall mov xor stc ds popa in xchg jae add bound inc inc mov xchg rclb roll jge negb (bad) mov lcall mov jnp push jbe mov xlat or xchg cs lods and jmp insl add mov out (bad) fcomp es mov mov mov push push mov adc pushf insl jb negb xor rcll xchg push mov icebp addr16 ficomp cmp arpl mov rcr in mov (bad) or in and push push jl lret jo xor pop sarl jnp sub sahf jmp mov sub fist das data16 pop sbb (bad) out inc push and mull xor into int3 clc push mov mov jno lea fstl lahf negb xor in out cmp scas sbb (bad) sbb gs cltd arpl orb push xor mov adc (bad) ss inc int3 lods pop int push xor (bad) jecxz pop test sub mov mov add mov push loopne lahf mov out pop cmp xor jo jo sbb imul addl or lock movsb inc aas and sub fsubl bnd jl or popf mov add fstps lret mov outsl loop movsb mov lods inc (bad) and imul cmc int les jne inc and add (bad) std cmp inc pop cmp sbb in adc and mov inc mov insb sbb pop aam call notl inc loopne dec xchg push shll ss enter in jp dec dec out and test adc mov je int3 sbb push lds sbb jne inc pushf out fcoms les cmp popa loop adc data16 dec std call sbb pushf shrb mov jle aam pop imul popf enter mov cs scas scas fs push pop or sbb popf mov aas sub inc and mov clc cmp and cmp pop test sti imul in jmp cmp sub push into or iret mov mov insb sbb xor cmp das or mov ret add jmp adc sbb insb pop and cmpsb (bad) lahf (bad) xchg dec push pop movsl rolb add ja inc loopne sarb lods mov push xchg mov idivl xor push insl pop mov fwait or add dec pop pop dec out mov add (bad) mov push or pop stos push pop lods ret push sti cli xor push dec cwtl mov outsb (bad) or les dec jl lods ret imul jmp pop icebp jle,pt leave in add jnp pop xchg dec daa sub add inc test out dec mov in pop or int or mov movsl mov xchg cltd (bad) push popf xlat add cmc inc js cmp js mov stos lea lret mov adc ljmp aaa (bad) pop push pop stc cmp xorl push mov stos leave stos iret push mov cmp push cmp fdivl adc xor push dec aaa cld jg mov or mov mov std out add or or in test pusha jbe cmp jmp mov sub inc pop and xchg fldt sbb loopne pop push mov mov lret scas add and sarl cli dec xchg in sub sbb sbb stc sahf push mov imul pop add out jp xchg shrl idivl lods scas enter mov or pop xchg sub add stc push push mov mov mov cmpsl push mov adc jg mov push push xchg pop push stc mov sbb add fucomp out (bad) out mov mov (bad) xor mov aas jle adc adc cld xchg cltd sbb mov call repnz sub in cmpsl jle dec scas popa add int3 cmpsl hlt lock sbb add mov mov and or or or jbe xchg add xchg sahf mov cmc pop inc test mov mov pop mov add repz imul std jg and push sbb inc movsl clc xor jl scas out inc xor jno test stc add jne push sbb into push jl xor imul xor xor sub roll pusha or fiadd inc mov (bad) out xchg mov nop push xor test enter cmp cmpb mov or sub rcr mov lods scas scas ficompl fmuls ja test cmp pop aad test scas mov or push js pop lods inc popa cli ss idiv aad daa push xchg or push sbb pusha jae dec test cmc stc sbbl adc pop jge pop gs movsl cmp and mov je mov mov sbb test cmp xchg movsb mov and mov hlt fldl2t repnz mov mov imul daa mov cmpl das jnp push xor xchg mov jnp pop mov sbb sbb mov aad ret stc cmpsl add adc in push imul dec test push pushf data16 sbb fdivrl jecxz mov shlb sarl jecxz dec sbb pop les bound lods inc sub es push or mov int3 test mov enter jmp movsl jns mov daa leave xchg xchg rcrl add push lods add iret fs cmp mov int3 dec push sbb pop rorb sub stos lds pop xchg lahf pop ss mov cwtl ja loopne lods adc xchg dec lret aaa mov (bad) stc inc xlat sahf inc cmp sbb mov insl pop aas cltd decb nop int3 aaa addr16 fs jle int3 dec enter fdiv jno (bad) cwtl aam arpl cli mov inc (bad) jge in mov (bad) sbb pusha fnstenv jle js cmp mov lea xchg enter add xor pop data16 and sub stc andl sbb mov jl imull fs in mov movsl and cltd xlat xchg and mov pop aaa or adc jnp xchg mov push xchg dec pop pop inc cmp cmpsl mov or and ljmp mov ss in sti (bad) jo rclb push hlt dec lahf jge cld cltd lahf ja ret cltd insb in imul ror sub sbb cmp mul or inc enter clc shll sub inc lret cmc dec nop sbb outsb out addr16 scas xchg (bad) repz dec test push aad ret dec aam cltd shl leave sub insl js outsb pop mov outsl mov jle push mov mov sub mov sbb (bad) mov (bad) pop mov push fcmovnbe jmp pop and (bad) xchg jmp add pushf mulb pop outsl jmp add fldcw sbb xor cs or notb xor push or aas les mov sub adc or cmc pop mov aam add jbe repz sarb pop ja ljmp cmp adc ret dec shlb jne add push dec fsubp and sbb jns jno lds ljmp rclb (bad) (bad) addr16 mov (bad) mov push mov in mov mov lret push fistpl mov fwait jecxz,pt imul aam out ss mov imul stos into push or rcl ffreep jbe sub scas std xor push inc fisubr in sbb mov in loop sti shrl cs fistpl inc mov mov mov push neg mov and (bad) xor insl xchg rclb pop adc outsb mov loop movl call cs imul hlt add imul push or mov inc xchg test xchg mov fisttp call mov adc insb sbb adc dec cmp into lods mov subb add cli iret fwait outsb dec divb xchg clc jl sub add or cltd mov cmc mov enter test orl lahf pushl xchg pop fbstp out inc in sbb lods test push cmp clc mov shr cmpsl lret lock jp scas jbe push or or adc addr16 insb sub or cmp push aas (bad) pop xor insb enter icebp sub adc (bad) sbb add subl mov clc cmp fildll push fs pop inc addl push push test nop dec sub adc jo mov rcr rcrl sbb fistpll test stos or dec lods xchg or seto pop imul out mov popa outsl cmpsl sub mov or fprem1 cmpsb mov and or pop mov add xor iret aas ret movsl mov lahf mov mov jle mov jle ss bound lret sub push mov in pop jo pop repz popa stc xchg test xor pop jae inc cs cmp test cmpsb jmp xor sahf mov xchg jb (bad) pop insb inc adc pop ss iret push adc mov jl xor inc movsb (bad) or test cmp movsb mov repnz test xor imul pop test (bad) movsb ss mov stos dec (bad) lock cmp inc mov stos test lods lahf cs inc repz leave or (bad) js stos pop mov push pop push add jae testl pusha inc and enter pop lock xchg sbb shll sbb or and xor pop ret mov jne addl cwtl mov push inc xchg test (bad) pusha adc cmp sub or test cmpsb mov or je sub jno inc mov (bad) or and jg shlb xchg das xchg insb (bad) (bad) cld pop push xchg mov mov out push dec fwait je xchg adc mov adc add mov push sub pop into or rorl mov dec lock fdivr sar popa xchg mov lods repnz fistl sbb fs out popa into pop or test loope mov lods cmp imul dec inc mov movsl push clc loope outsb and cmc stos sbb dec (bad) lock xor cmpsl out test lock lea repnz jecxz push push mov xor adc pusha fdivrl imul xor push rorl shr movsl mov int3 fild or xor xor xchg xorb lods jl or dec adc push nop push cmpsl cmp adc mov js movsb incl mov adc inc mov sub syscall lods jns push xchg xor jno xchg xor mov push stos arpl or pop cmp pop jae rcrl dec mov ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and pop push sbb sub lock pop dec stos iret mov imul dec xor add insb fisubrl ret pushf push xchg mov movsb xchg lret cwtl mov lcall add sbb adc in inc mov add repz lods xchg insl pusha jl ret inc mov mov mov cmp iret ljmp popa popa xor es mov hlt popa (bad) push push fwait mov push inc loop mov hlt xchg mov out pop pushf mov xor lds push inc xor pop pop add xchg add pop ret mov lds cwtl daa pop popa push xchg pop iret mov (bad) std pop fisttpl mov mov arpl daa daa out jae inc stos jmp setno fistp mov mov push adc cltd jle fimul or icebp das push outsb mov (bad) loope loope ja push les iret sti das jne xchg arpl jp lods cmp in inc icebp cmpsl jbe pop mov mov push add lret fwait lock inc popf (bad) and outsb pop mov jp fidivrl push int3 xor xlat or sbb dec dec dec hlt mov add (bad) fistp jae lods mov lcall insl and jbe xchg loopne mov cmpsb in jge outsb movsl hlt mov xlat fwait inc ret movsb mov loope fiaddl jnp mov stc mov orb xor adc std mov fwait lea mov mov (bad) fwait cmp xchg (bad) dec cmp sti int3 adc mov test jg mov clc cmc pop pop mov mov inc jle and fdivl jns sub cmp xor mov add rcl aam sub push inc sarb dec jg mov mov cli cmp mov pusha pusha dec (bad) test outsl xor in and test addl mov fwait jb cmp inc dec inc dec inc add cmp pusha sub dec int3 nop or adc jp fildl xchg (bad) mov fdivl jmp call inc sbb inc jl mov test cmp jnp sti ss push iret aad sub adc arpl add mov mov push and mov into mov leave int stos push sub pop inc cmp icebp adc mov mov mov mov into dec (bad) push gs sbb outsl push (bad) lahf (bad) (bad) pop jae hlt fxch mov inc dec orl jmp cltd mov pop cmp rcrl add xchg cmp lahf push mov mov div inc jp mov (bad) mov ret test xor movsb jp call adc mov leave shrl daa sub call jnp sub and xor mov (bad) add test xchg cmp cmp popf rcl das push ror sbb pushf xchg xchg call sub inc es sbb pop pop jmp push int3 ljmp es pop in popa movsb or sbb or and (bad) icebp jne add adc cld (bad) cmc add mov xor test pop popa and adc cs push or mov fcomps mov inc lcall cmp mov les movsb stc ret ret inc (bad) xor sbb lds imul sub call pop js fcmovu xlat pop xor das and adc pop sbb sti outsb imul dec pop or js push lds and xor mov (bad) dec jge sahf test mov xchg xchg call xor xor pop and lock sti inc jnp mov test fstpl stc rcll xchg jnp mov (bad) adc add dec (bad) sub xor mov pop pop stos jl jnp test jg sti lahf (bad) js mov ss jge inc imul aas sub pop jp (bad) and mov cltd lret jb jnp test mov out xchg fisubrl sub push jecxz push inc jb ljmp mov in mov sahf dec data16 inc jb and push cmp fidiv xchg push push daa xlat and nop ficoml sub or pop (bad) adc push jl xchg inc sbb xor xor pusha data16 (bad) and cmp mov sub rcll loope scas clc xor insb cmp or inc mov pop sbb cld lock hlt lret jno outsl (bad) xchg mov add cmp mov loop call test add sbb fisubl and add or pop dec mov jo pop ds push add jmp jnp pusha jnp push aad or aaa sub mov (bad) repnz ljmp movsb ljmp in int fcompl (bad) fs push inc push jle mov scas pop sub pop lea cltd sub inc dec inc cmp jne xor jmp inc rorl cld daa js movsl test dec in mov mov add lret adc sti cld xchg pusha push or in (bad) jnp mov and gs cmp cmp add xor imul cmc xor dec aam ret xchg fcoml adc mov ret pushf mov xchg mul xor mov scas adc fisttpl push sbb cmp repnz pop xchg mov (bad) mov outsl pop jmp int mov mov sub gs inc push sahf dec (bad) cmc xchg out data16 xor jno ljmp dec jmp pop mov jl les cmp scas cmp xor addb ljmp test in and inc dec lcall js sahf dec loopw adc out iret jmp fs sbb inc idivb fwait divb lahf das negl push out cmp mov setae aam xor push sub mov pop xchg ja roll sub cli jnp push cmpsb call sarl fwait mov lahf ret adc call sub push mov out repnz cmc sub dec stc fidiv push loopne (bad) xor aad jnp mov jbe xor loop mov push push mov xor (bad) fisttpll jmp arpl mov in adc lds andl nop sbb or mov mov add leave xchg sbb cmpsb push lock mov dec lock nop push push dec pop pop insb or shr push pop std ret and scas mov ss pushf sahf add add xor push jg sbb cmp inc pusha mov push dec sub jp popa outsb jae cmc adc sbb rorl add adc lahf ljmp mov hlt xchg daa dec add fldenv lock jnp cmp adcl (bad) dec test jne mov insl scas xorl xlat pop ss mov gs adc call inc jmp std enter loop push and jp dec sub or sahf push inc ret xor movsl ss jmp das andb sbb dec jnp pop push movsl xchg in dec stos gs sbb test popa loop mov sbb adc sub pop outsl es jmp pop fsubrl and mov push push inc xchg (bad) (bad) mov jl stc mov jmp jge push adc pop sbb dec cmc cmp dec sub adc sbb into xor aam lods dec loop rol mov cmp or (bad) lret pop divl dec mov movsl add cli inc clc adc ret leave js cmpsl mov scas jmp cmpsl adc cs movsb insb fild int3 dec outsl movsl neg addr16 stc inc enter int3 fildll mov cmp mov mov xchg int inc out inc adc pop in mov xchg insb adcb sbb pusha cmpsl cs ja aas lret popf pop or movsb mov dec stos loopne adc add jg adcl outsb jae ret sub fistpl in mov xchg popa adc in sub adc push jecxz push hlt jecxz out std or sub icebp inc ret and push dec lods lea add mov test pop push push cwtl jne (bad) pusha mov xchg ja jb push xlat dec xlat mov ja or mov push out dec movsl adc push xor cmpsl dec inc arpl pop pop cmp arpl mov prefetchwt1 or mov add out mov and test test in sbb inc and mov jmp jo xor loope add mov ret sbb out (bad) int3 nop cltd dec sub fisttpl mov push mov or pop inc popf pop imul je push stos out js mov mov fcomps adc shll dec daa push addr16 and push cld lock int3 test arpl mov jl fnop js hlt mov xor cltd stos sub gs push incb pop cs in push movsl cmpsb (bad) pop cmp pop dec out or dec into xchg mov and mov mov sahf pop jbe adc stos mov das fwait cmp ret imul inc sbb mov sub jg mov sub jnp inc (bad) or push pop xorb int test inc jo clc out xor inc xor push jg mov inc pop sub cmp jecxz jl sub fwait pop daa inc push mov jmp sbb push loopne icebp push (bad) mov mov out pusha dec orl cmp add pushf arpl sub popa rolb ret mov rorb (bad) or ret imul pop jl lcall loope inc ja push iret mov push sbb sbb dec ljmp pop adc loop popf inc pop lods jb repnz push out subl pop (bad) aaa stos jg (bad) lret lods jp add dec mov dec out loop (bad) cltd or sti mov xor bound popa ss add ret dec pop inc popf lcall fist enter loop lea pop push into arpl test movsb xor mov pusha sub adc xor in rolb les lahf pop rorl xchg push pushf xchg (bad) data16 push sahf inc push adc into iret (bad) jb sbb and (bad) and pop das stos lret cmp insl or rol mov pop scas popf imul sbb add inc das rcll pop jns add xchg pushf mov inc inc adc fsubp sbb ds fisttpll fsubs mov add mov aad rcl or jl lods (bad) mov mov leave lock adc aaa test mov add test cmc mov ja repz pop inc cmpsb ds pop pop into (bad) mov test int xor int3 or outsb leave das (bad) sbb jmp imul fidiv es insb aad or push or dec sub (bad) cmp mov add pop add enter cmp inc jle arpl imul lods pop insb cmpsb push int push adc rolb js lods les push dec mov push enter inc dec lods leave test sbb jmp aad stos xor mov movsl inc insl sahf scas lret dec test in push (bad) out xor stos mov add jo push pushf insl mov stc (bad) (bad) (bad) jo out pop stos and pop shlb dec mov lret inc pop ss xchg dec fcmovnu pop adc mov or inc test pusha push out popf inc lds mov jns xor dec xchg xor fsubr scas cltd dec adc rol les xchg rclb pop or pop mov rcrl sbb lods sub push xchg add cmpsb sahf cmpsl insl lret cmp or dec iret cs shlb dec lcall mov adc add push or mov cmp (bad) into jnp pop pop divb sbb pushl popf or fild or sbb mov daa mov inc inc test rorb cmp lea mov xor or cmc cld jae fadds rorl mov dec or xchg jne cwtl push (bad) out hlt xchg push mov stc cmp or xor mov jecxz addl fisubr cmp xor xchg dec pop pop and call into test xchg in sub or mov xorl es pusha adc jnp nop aam out or jle daa fisttpl mov cltd enter pop sbb jle (bad) push dec or andl mov push xchg fwait mov flds cli push leave test pop mov ja mov push add mov int3 push add clc mov or mov ja mov fwait mov inc into xchg cmp mov sbb (bad) gs lods inc dec fcomps lock pop and out push lret lcall mov cmc inc xchg adc and pop add enter inc cmc xor into push add adc or push icebp or and mov sbb mov add mov inc mov and mov and inc in int3 jge imul jl lods movsb or sti lahf fildll (bad) pop ja add rcll jecxz xchg lret sub dec push dec push mov or outsl mov fs mov sbb (bad) lods jge push daa fimull mov in out xchg out sub aad push cli dec outsl idivl fisub test jmp sub fcoml or push sbb fdivrp mov sbb ret sahf data16 push test mov or xor jmp js jb cli je sub scas mov aas cmp test ror sub pop mov or cmc jecxz add dec test cmc mov std dec push loope xchg sbb sbb xchg cmp mov hlt bound add cmp jno movsl scas insl ret add enter (bad) mov pop sbb out sbbb loop push push mov or in pop outsb and icebp mov (bad) add (bad) stc fnstcw dec jle cs loopne dec push push cmp and cmp repz imul (bad) and outsb scas or pop mov or dec sbb sbb (bad) lret pop and xor in sbb (bad) in cmp pop mov inc ds movsb or lret mov rcrl je test aam repnz (bad) xchg and pop and dec rcll xchg add sbb fmuls lret daa (bad) popa sbb sub mov (bad) adc or xor test divb or xor cwtl push add decl jmp test mov mov push or adc xor jae loope jo test test or xor outsl out push dec pop (bad) sarl pop inc xchg ss inc adc cld adcl xchg popf sbb imul or xchg stos jle iret xchg aam mov xor cmp sub mov cmp adc scas dec dec dec cmp cltd mov xchg call mov je cmp cmp pop arpl movsl imul outsb enter cmc mov enter sbb push test dec std (bad) mov push es mov sub push lahf cs (bad) lahf cmpsb movsb pusha adc pop leave lret aaa inc and lahf cs mov sbb fucomp inc mov test cwtl sti xor xor sub sbb lock inc repnz xor mov jne xor gs push lds mov pop js mov loope mov mov in mov inc xlat dec adc cmpsb cltd sub mov sub leave jno adc cmp push in xlat movsb inc mov inc cmpsl cli xchg fbld rcrl test jno adc adc leave fiaddl jg mov adcl sarb dec fstl push cmp xor xchg add cmpsl pop loop cmp imulb sbb adc mov jo (bad) ja jo mov inc dec ljmp cs fwait inc cmp subl pop adc or jmp or arpl inc xchg or or pop and hlt mov popf fs mov int push add push inc sub sub xchg pushf shrb stc loop add aam mov test sbb push mov sbb loopne xchg jo jmp addb push (bad) xchg in inc mov rcrb push movsb or imul xchg or mov cmp jp adc repz fwait out mov xchg jge mov dec repnz mov xlat lret negl (bad) (bad) iret ljmp mov add mov or (bad) outsb sti dec jnp mov add sub imul ss je lahf mov mov fucomip ret out jb frstor cmp movl or or add mov lock fmul (bad) mov mov or dec (bad) outsb mov fsub insb xchg push mov mov scas orl mov inc xchg pop (bad) in inc fistl inc nop jnp pop cmp clc xorb pop cmc cmp (bad) mov pop fnsave shlb pop fmul push je push test push sahf mov mov pop pop (bad) pop es jmp ds dec fstpt mov jnp loopne aad rolb dec pop xchg pusha aas mov imul andl clc mov (bad) out or xchg pop cmp je cmp ret arpl jbe hlt xchg js push sbb jnp inc cmp outsb sbb mov loope sbb aad aaa stc push loop xchg inc nop icebp lds repz sub xor leave pop fcoms test data16 mov out push pop xchg test push (bad) jno sbb lcall arpl mov xlat ret xor lods bound xor fildl jae in add and push lods adc add push jl inc sti inc lock movsl or mov mov jae gs imul mov xchg mov jbe cs adc jmp fistpll sbb jp popa fwait xchg scas sbb push mov cmpsl jae inc gs inc mov (bad) test sub (bad) ror dec mov shrl das mov and in mov nop xor ja xchg or movsb repnz xchg scas icebp add mov push push test mov loopne icebp arpl and jge lret cmpsb fistp int3 sbb mov xchg out leave mov pop jl adc (bad) mov xchg ss jmp push mov xor sbb sbb test lock mov nop outsl inc adc mov call ljmp fdivrp cs mov or adc cmp jno mov movsb out mov hlt xchg jmp test (bad) mov cmp test mov movsl movsb jno sub es pop scas sbb mov push mov mov (bad) dec ja xchg shrl ja inc inc movsb scas call xchg add inc outsb xor pop sub popf xchg fist (bad) lds mov lds pop jle xchg push repnz xchg adc adc int push dec fwait (bad) xsha1 cmpsb mov (bad) xchg adc outsb test and push leave pop cmpsb nop pop push add repz mov adc loop push mov loope,pn cmp mov fnstsw insb int xlat push dec cmp cmpsb xor mov jns stc push or shlb jbe push push icebp pusha xchg inc in (bad) mov sub xchg jge mov mov add push cmp sub cmp sbb daa mov fcomp push lds nopl imul leave addr16 push dec and and or imul and ret gs mov pop (bad) loopne mov (bad) mov push jmp mov lret sub pop imul int3 leave divb mov xor dec sahf pop loop cmp or test dec xchg lcall or adc les insl mov lods mov (bad) inc enter (bad) icebp mov mov inc out cmpsl loop jb pop sub mov mov cmpsb inc mov sbb pusha push pop dec shrl mov cmpsb cmp jmp or dec add xchg inc lea lret int3 xor call or mov adc mov pusha lea insl bound loope or (bad) and sub lcall and push lods and bnd mov pop (bad) push push and mov (bad) popf cmp xor mov out pop fiaddl and sti test xor mov cmp arpl orl dec push imul add mov jno cwtl int (bad) adc popl scas xchg cmc out out xchg sub and xchg js cmpsb mov mov loope push adc mov add stc addr16 test mov push movsl out adc inc cmp into test sbb push into xchg sbb jne out adc movsl jecxz das add stc in rclb lock pusha std jnp imul movsl insl xor stos outsl dec xor das inc aas icebp push cmp sbb or std xor or sbb or add mov push loopne xchg cli insl sti push sbb jl ret adc push cmpsl and mov jbe mov sbb mov cmp or jg ror fdivl pop dec bnd lret dec aaa mov dec fistpl cmp repz or arpl and or je dec dec arpl xor rclb mov xchg fs loopne std and mov popf add cmp das imul pop mov (bad) (bad) iret popa (bad) (bad) sbb aam loope (bad) test cmp sbb aad std call call inc xchg data16 int3 sbb or out mov nop push push xchg pop xchg lahf aaa push jne (bad) aad leave (bad) cmp mov jb test sbb add sub pushf mov adc stc in incb jne inc mov testl and ret push jl fldenv fstl inc (bad) xor sub jo mov lods xchg rclb fisubl in stc rcl daa sbb insl (bad) xlat mov lock pop mov sbb adc and mov lods (bad) sbb mov in cld cmp sbb push mov scas (bad) notl inc jge fucom xor push in xchg mov in lds mov imul pop lock (bad) movsb fcmovbe lds sub loop (bad) or jmp push cmp xchg sbb rorl mov sbb pop rcrb inc sub dec nop loop mov adc pop and stos xchg pushf je adc adc xchg mov and scas sbb das mov outsl fisttp je je push (bad) xchg stos outsl inc xor cmp leave xchg ljmp cmp mov cmpsl ret insb ljmp aas xchg dec pop les push stos mov push dec fmull dec mov gs and mov loopne dec or mov mov adc inc icebp jl icebp inc mov daa nop adc out or adc icebp sub jmp inc insl dec mov and scas ljmp sub repnz inc pushf into dec test cmp outsb fdivp add iret adc mov add (bad) imul loop movsb (bad) jmp stc push adc dec (bad) stc sbb btc cmp inc add lahf mov rolb mov addl leave scas (bad) repnz mov nop xlat js jecxz addr16 cmp popa imul mov and cmc les fisubl mulb xor or and rcrl cld xor mov mov or jns arpl repz cmp push pop and sub jns mov pushf jle stos movsl dec roll loop sbb add (bad) lds jnp sbb (bad) cmp test pop test jle add inc push pop push mov dec enter mov push cld in inc sbb jecxz jb sarb push jnp push mov sarl loope inc xor adc loopne cli dec inc xchg mov xlat lods daa (bad) incb and sti xchg test xchg mov (bad) adc xor add push stc int mov stos pop test daa mov add adc movsl jecxz push insl push mov (bad) je mov xor jg mov push popa dec sbb inc mov test adc pop lods or adc mul ss (bad) dec test enter ret jge mov lret ja ja iret push aas test in dec imul sbb mov jbe (bad) into lods push jae jg (bad) dec add ret aaa pop sbb jge inc (bad) adc push jl shll mov das push imul push pop xchg ret push stos dec or jnp (bad) or add imul cwtl test inc jle (bad) adc leave sbb imul hlt mov stos jnp add sbb adc inc mull add xor jp loop test dec ss mov movsb mov and adc fstpl aaa hlt push call xchg cmp sub xlat cld gs jb jae push loopne std push insb inc call xorl ds mov in fidivr call stos sahf pusha xor and fwait cltd sti pop and scas jbe dec lods pop xchg xor arpl (bad) ss ljmp xor aad fimull addr16 int3 add mov imul roll pop insl in mov lcall push iret push cmp enter negb popa pop (bad) cmp and lret add mov (bad) mov pusha or xlat cmpsl add cmpsb in mov mov push mov test daa ljmp inc and add sbb mul cmp pop sbb and and adc sbb imul test stc lds (bad) outsb gs jo xor into inc popf pushl (bad) fwait sbb and cs incb mov aam out pusha fwait and jmp out test xchg mov jb hlt jb pop and out fisub out mul mov push add add cmp int ljmp icebp lret mov xchg imul es mov pop ror pop sti push lret push pop xor into jecxz jb out xor icebp (bad) jle hlt roll ja inc out jb ret jg in fldl jmp xlat ret sbb pop cmc push in adc jle daa out ds aaa adc sub cmc jl add inc loope pop test pop es add xor cltd mov mov incb lock hlt push jg mov pop sbb push pop pop inc lret mov jmp pop loop xchg enter outsl inc jb cmpsb fucom mov daa add rcll cmpsl sub rorb out faddl jmp mov ret into mov movsb push lods aam lods das mov inc enter outsb in add mov icebp mov jg push sbb push jg adc cli jo (bad) pop jmp bound xor xchg movsl mov fiaddl mov lds xor aad lahf inc (bad) mov iret push push jo mov mov pop test jl (bad) jle lahf xchg fildl dec lds ret outsl add xor stos xor out daa ss mov in xchg std xchg (bad) adc arpl push (bad) (bad) xor adc in pop (bad) pop pop inc lods loopne add fmull out dec xlat ja dec (bad) mov mov inc imul (bad) mov lret jmp and mov lret and shlb shll les xor jne mov pop nop pusha outsb adc pop xlat rcll pop jmp movsb outsl jne lcall sbb loopne repnz jno scas lret jno xor xchg movsb out push testb xor movsl adc and mov jne cmp inc in and dec inc ljmp push lods or out pop lahf fldcw push push cli das aad cmp test cs aas addr16 pop dec xchg jl xchg scas push add fisttpll add js dec rcrb jns cmpsb xor insb mov jns cmpsb repz cmp cmpsl (bad) insb bound fcompl popa pop push ret cwtl xchg sub out adc pop mov das imul andb hlt cmpsb or (bad) jb in insl (bad) adc int3 imul pop jge adc or stc (bad) (bad) mov inc jnp or jnp lea fidiv inc mov ja xchg dec scas jo xchg lods insl cs (bad) pop rorl lret jbe sbb icebp stos std mov repz and push pop adc inc (bad) lret jno in or out push adc or dec rcll add and sbb xor cmc cmp ret push ret pop or xlat mov sahf pop sbb xor lock mov sar (bad) outsl cmc fsubrl dec test frstor dec push inc mov loope adc ret dec xchg lret inc cmp roll int jnp fs mov adc stos or (bad) or iret pop mov jno data16 pop mov and leave lea pop icebp dec lret sarl mov out mov or sub mov ss or jle cld mov mul xor adc fsubl push sbb rclb cwtl pop test insb ja jg mul or pop outsl mov popf jecxz sti jp xchg cmp pop mov std out arpl lret icebp fistpl ss pop xchg shrb ret cmp pop jae push in push insb xchg mov xor add aam sub out mov dec enter adc stos dec xchg ret popf cmpsl fs lret xlat mov push into cmp add popf sahf repz cmc mov cmp call js mov cmpsb push pop push mov cmp mov sub sbb vmread mov scas add imul imul xchg cs leave popf mov out lods mov push arpl sbb mov jle bound aad dec orl jb inc mov in push jp imul add jecxz mov xor aad jmp xchg inc cltd cs repnz add bound mov jmp bnd inc xchg jecxz sbb rcrl sti mov mov cli aas outsl mov cmp lods out rcll lds aam cmp or xor xchg cmp les popf xchg push dec (bad) fwait mov (bad) jle dec lds or (bad) cld loop stc fwait mov and fs std scas add dec add std in cwtl push cltd imul cli or out mov test orps inc mov pop adc dec in jmp loop clc add fwait jmp inc push lret inc test push xchg in dec rorb jg cli (bad) cld shlb test ljmp jae cwtl mov xor push mov add dec cmp js pop iret or fstps pop movsl fcmovnb mov pop int3 repz push pop pusha fldl dec sahf aad insb int3 hlt or mov push mov out and mov dec or push inc hlt jge fdivl cmc movsb pop cmp pop clc adcb xor lods add mov mov insw ja fcmovbe push (bad) dec rcll mov push lret dec fincstp mov sar jns mov hlt imul loope sahf push arpl mov adc jp idivl inc fidivr ds lret test jns jne inc ret cmp mov xor mov xor icebp stos les pop (bad) cmp aam sbb dec adc (bad) iret outsb shll test xchg cltd imul dec adcl jo jmp jbe fidivrl fiadd test ret sbb add sub pop lcall sbb cli (bad) jmp inc jl xlat sub test (bad) xor ret movsl push push cmp cli int3 in push loope mov cmp addl inc dec xchg sahf pusha adc add loope cs scas ficoml mov aam sub lret fmull xor icebp dec lods in cmp ljmp (bad) lock adc cmp jns xor add fisttpll xchg lods mov daa dec sbb push add pop clc out ret in cltd xchg adc movsb pop daa push bound mov mov pop jno popa nop or (bad) mov mov jns cmp pop add je out je dec add lret cld jns nop pop cltd jecxz mov or cmp mov mov mov inc xchg push xor inc sahf enter js jae cli pop mov lcall cmp sub xlat fidivr (bad) xchg data16 lret add nop jno xchg popa outsb xor push shrb outsb mov movb cmp clc sbb lods inc andl sub pusha iret fwait loop pop stos pop imul adc stc cld adc fidivl xchg sub inc sub pop mov mov adc test popf cmc lock sbb sub vmwrite test inc hlt push mov test pop loop mov std cltd insl or in mov (bad) push adc bound dec imul push aam repz push jp out dec scas fmull adc imul jo xor (bad) mov mov and mov fcmovnu mov fisttp xchg xor and stos test out imull dec ja adc into xchg sub push loope addr16 out sub sub fcoms (bad) xchg stos and loopne cmp mov ja lds xor mov mov cmp push pop push xor sub cwtl jg push or lret push lods test lcall push pushf lret mov adc rcll in sbb sbb dec cltd das imul enter dec dec jne lahf mov mov cld lret pop or js test sbb mov mov jecxz jns subl push xchg test pop lds mov mov aam lcall pop lds test (bad) divl or push lret fstpl dec ficoml fcomps into inc pop xor daa mov jle iret inc out mov into int fisubl dec and jg fisttp push movsl mov movq jb lret pop mov sub adc dec ss int3 rclb stos das push add sub push pop daa add push mov fisubr (bad) adc stos shrb push pop mov xchg or jg xor lret in repnz lock dec jmp or sti iret mov add push mov (bad) push shlb in sbb dec fimull mov mov ret sbb or scas push inc aas pop push or rorl sbb pop jecxz pop xchg (bad) repz dec mov add adc mov bound mov rorl ds inc rcrb xchg jmp xor or cmp dec cmp push xorl or cmp pop test leave in cs pop aam test push mov vmread mov push jle pop add testl ss clc in add (bad) xor lods nop aaa jmp in and test out mov cli push movsb inc inc or xchg or enter mov loopne nop push aad test sub and and cmp addr16 cmpsl fcoms sbb mov push mov xchg pop mov hlt daa fsubr insb cmp jge mov lods pop sbb pop inc push pushf movsl (bad) mov jne sbb lcall aad sbb test xor negl in imul sbb add pop pop mov int lods cmp push inc fisttpl pop mov sti add add scas mov (bad) xchg call cld fadds xchg ss rclb lock mov push lret xor pop pop bound mov into out sar push mov repz cmpsb adc adc mov fild xor xor test idiv pop adc call insl mov adc mov sti jl dec inc push mov xchg das mov test or and pop cmp mov and cmp and mov mov xchg pop push pop into jo adc dec cmpsl inc dec mov xchg pop out fildl push cmp hlt add jmp dec test push std in pop pop and (bad) inc out cmp loop mov pop jno (bad) int3 pop or jle repnz inc arpl adc (bad) repnz and movsl jnp test call addr16 subl repz cmc inc imul gs push ja pop jnp mov mov inc insb jns,pt fisubrl aad ret and pop es imul fcoms into mov xchg sbb mov cmp ja jg push mov add in adc xchg push loope repz xchg out cmp stc jl das cmpsb cld adc push lds inc outsb rclb lea and lods jmp arpl push ds lock test xor mov fldenv lret push mov xorl jp (bad) xchg leave mov xor cwtl fwait dec sbb jecxz xor push cmp ficomp dec aam mov icebp outsb jg jne leave inc jnp jmp loopne xchg sbb cmp xchg or mov stos add outsb in push push xor xor mov dec hlt mov sarb fs xchg std fisttpll sub ljmp dec and xchg int3 inc dec or mov cmpl je inc pusha adc push pop aas and push ljmp push cltd pop loopne dec (bad) xchg sbb mov in loopne xchg mov test xchg sbb popa je nop je xchg mov pushf movsl loop test jge mov cmpsb stos push shrl arpl out fisubl out fucomip ljmp ja cmp sbb outsb cld in jmp insb bound mov repz pop mov and push fsub insl mov or inc mov push inc insb jnp or out adc scas xchg xchg xlat mov popf (bad) repnz inc dec js xor jbe inc pop mov and call push dec pop mov (bad) cmp cmpsb mov lret test nop dec cli stc pop mov test scas and push movsl mov lret ret sbb inc inc in or in mov jl les or push pop and mov mov inc jle cwtl into cs (bad) mov jbe fwait insl mov imul insb mov ss mov push out adcb imul or sub rcrb push lea sbb sbb mov or pop mov inc vandnps mov push xchg in mov push popf call push xchg inc lret xchg aas rorl inc pop inc mov sbb movsb (bad) or gs movsb or (bad) lahf mov mov cmp lock and adc shrl out repz dec cmc js rcrb loop xorb mov and cmp mov sti fcmovb mov xchg pusha stos addr16 out xchg enter xchg mov or xorl or cmp iret sub fsubl enter in cmpsl nop pop sarb lcall sti mov aam (bad) insl imulb push push sar call in xchg subl jno and and fsts dec push fs and add ja call arpl bound (bad) pusha sub aaa lret insb lret cmp pop out cmpsb jnp leave lods stc lea jne lcall popf aaa push mov test sub inc mov add das in mov pop cmp fcomps imul adc es iret or pop jae mov inc pop sub xchg stos movsl fcmovu xchg jle lds cltd xchg in jle lea repz adc fcoms pop pushf lea arpl pop aam (bad) pushf jg sub or std mov sarl mov call fcoml lods pop pop shrl (bad) cli das mov icebp inc mov outsb cwtl repz leave and and mov bound inc and adc xchg outsb pop add fstl pop popa dec repz cmp pop lahf sbb nop sub mov push insb in add pop jl sti adc pop mov lret fdivrl shrb adc inc (bad) xor adc repz pop xor sbb push and sub pop push stos imul rcrb cs daa adc cltd out rol cmpsl std xor jo pop aad jb shll xchg in add sbb adc outsl push nop sbb popa fdiv mov mov pushf mov testl xchg pop xchg fs mov movsb xlat xor out adc arpl jge add xchg or shl bound push js sahf fimull adc cmpl inc xor leave out xor push mov pop jae (bad) in gs mov js out fcom repnz or dec fisubr jl imul push pop mov ret fstps outsl (bad) push repnz jp movsl xor sahf sub sub and cltd fistpl jne enter mov ret fmull mov aad push mov test (bad) in int3 pop cwtl push inc cs and lahf int3 fbld (bad) addr16 insl xlat loop shr ss (bad) je iret inc mov test cmp dec mov mov sub popa or mov push out xchg daa test icebp fidiv insl call std pop jno mov in mov xor aad jno mov outsl cmp mov push mov mov pop int3 pop dec scas aam fldt mull adc rcr fcompl jecxz (bad) mov ret adcl in inc rol push jle pop lock cmp sahf test gs xchg leave outsb cmp rclb sbb call sub jne xchg pop scas testb popf pop cmp cmc jbe int mov scas mov adc insb mov pop inc cmpsl loop les scas ficomp es inc and int repz add dec pop adc movsl and in inc xchg and pop lret sbb popl or mov xor test mov ds mov stc xlat mov (bad) in adc out and add das cmp adc or pop sbb dec sbb xor cs xchg addl lods (bad) icebp iret mov adc iret inc cs nop popf pop push xchg hlt and out out cli in sub xchg inc adc xchg cwtl mov frstor out std daa push fdivrs fs std adc mov test loopne and and into ds pop fcmove mov push sbb sub sub pop (bad) mov mov arpl xchg xchg adc in inc idivb rorl adcl push jb roll mov cmp (bad) and fbld sub aaa sub repz dec and cmp or pop jae ss scas fidiv sarb sbb adc inc loope mov outsb jo (bad) imul sub shrl jno (bad) mov data16 int3 mov stc mov dec inc or testl (bad) xor int3 pop push js cltd xchg jbe lea test rcrl out cmpb in cld xor mov mov scas xchg jae and inc add (bad) mov out pop into (bad) push jmp imul and test lods or xchg rclb not mov xchg xchg in mov jb mov ret sub cwtl popf sub std test cltd and dec push ss inc xor mov inc mov popa mov pop add movsb add rolb orl mov arpl fcomi test in loope push popf je jo ficoml inc xor dec push lret push mov lods lods push jge loop sbb mov xlat push push (bad) inc lock nop and mov push or mov das daa xor dec je jno cmpsl push mov add jg jmp inc sub leave fxch sub or jae pop in mov cmc das add push outsl and inc ja insb es scas fsubrs aam pop sub dec cmp pop jg jne push add cmp jecxz (bad) ds outsl cmpsb jno add dec out inc orb pop out jecxz sub mov xchg mov pop (bad) mov sub inc imul push fild inc push (bad) arpl xor mov dec popa push add out inc jns push xchg leave cmc adc ret ficomp push into adc xor rcll (bad) test xchg data16 scas out sbb imul add inc add rcll arpl jecxz xor or xchg and loop rolb out out aaa subl in or lea jne mov inc push icebp shrb or cmp aam lods mov adc adc push sub add das mov out js out rolb (bad) mov popa lret pop mov subl jge push int fidivl int adc icebp gs sbbl mov or in cld push xchg or dec cmp fistl and mov mov inc ret xchg addr16 jl (bad) push push cltd in pusha jge sbb ljmp xor call popa add in clc loop and imul mov call insl xchg pushf dec aam (bad) out mov lods jmp (bad) sbb jle cmp (bad) mov push or mov pop mov js divl mov outsb jbe out mov jmp lods mov and mov mov mov lock scas add push sbb aaa xchg xor xchg or cs pop clc inc cmpsb sarb pcmpgtd jg push mov mov push xlat repnz nop cltd or xchg and add inc call adc out stos aaa sub cmp or insb bound sub or aas ljmp call (bad) incl and fcmovnb cmc adc lret pop out out fnstenv xlat mov mov inc sbb xchg lock fsubrs (bad) les aas mov ja dec dec mov mov mov clc gs xchg pop jmp cmp (bad) adc mov sbb stos fist das movl adc icebp data16 (bad) popf bound inc loope add jb adc mov dec jns (bad) sub imul mov mov add pop dec (bad) fbstp sahf (bad) xor outsb xor push dec mov cmc mov xor pop adc lds mov inc das fsubr jp sbb test mov or fiaddl inc test pop (bad) aam test and or xor pop (bad) pop insb push mov jae sub mov inc xchg out leave add pop bound push sbb daa jge sub and lds and out sahf mov scas cli test movsb pop lcall popf fisttpl mov lods mov arpl or cmp aaa cmp jbe mov lahf (bad) shr insl das lods and insb sub (bad) mov jne xor lods sub xor mov cwtl (bad) or pop inc jne inc call outsb push ja hlt dec push popa pusha fbstp inc popa fsubl pop in aam xchg sub sub fsubrs loop sarl mov dec mov mov inc sbb pop and push ljmp adc or std mov js jl movsb in inc sub xchg cli jb rolb mov jb mov push push or fildl mov pushl sbb stos in mov xchg jecxz inc gs mov and in xor stos (bad) rorl mov mov (bad) fdivrs clc daa inc mov add (bad) bnd sti out ficom adc sbb mov and inc dec adc and std stos cmc push cmp inc adc enter sbb enter mov (bad) sahf int push loope adc or pop mov push int3 dec (bad) stos iret fwait push xchg aam dec xchg enter les imul pop lods fmul or stc and sysexit lods cmp mov out rorl xlat popf pop inc jo mov fldcw and xor cltd pop mov ret imul gs jne push arpl pop xor shlb lods adc hlt rcrb mov pop icebp dec push outsl out jne jmp jo pop mov leave sbb and mov sbb ds inc gs (bad) mov adc sbb leave add cs pop scas ficoml mov jl xchg je ja out jge mov pop push lret mov or xchg pop push inc cs xchg pop cmp or mov jg test lahf jnp rcr xor aad adc pop inc sbb sarl fstl mov aam (bad) lret fwait xor lahf sub in xchg nop xor fsubs mov xchg push pushf ja cs xchg sar xchg mov les movsb stc mov aad push push pop push sbb lahf test push inc cmp or lret add xlat or sbb inc add push into divb inc imul popa js jmp sub ret lret js decl shll dec jl sub bound imul and out push and cmp mov lea fldt or and sbb pushl mov cmp pop int3 pop sub inc fimull xchg lcall rorl fdivrs adc mov sbbl test add ja idiv push jp stos cli stos sbb sbb add inc and mov dec inc mull mov xor xor lcall ljmp mov mov xlat stos daa iret stc xchg xchg stos dec aas lret inc cmp add push nop jo and add and outsb xchg push rcrb stos dec and in cld adc stos in xor and jbe cmc sysret imul push fistpl push push rcrl mov sbb repnz leave adc adc clc mov jo mov pop mov clc xchg popl ljmp shrl jl ret js test arpl push pop sarb sub (bad) lds sub sti cmp mov xor pop mov arpl xchg bound pop das std nop push popl push jb test sbb mov mov orl sub subl bound pop enter push sub xchg add pusha push jmp inc ss fs or data16 (bad) pusha movsl testl bound add loop push cmp gs push pop pop pop setb fstpl mov inc sub jmp mov dec xor dec std mov pop pop dec test inc mov mov add pop and ljmp xor inc addr16 int fcoms andb movsb in sahf xor push dec push lods stc mov lret (bad) roll data16 pop cwtl push test fs rorl sub add lods lahf adc jb and pushf cmovbe push sub xchg movsl mov loop std cmpsb push mov imul enter cmp aam fwait add mov jecxz ret int cmp pop je sub dec jg jmp aas popf jne xor int3 dec shr cmp xchg adc pushf lret rcr mov push pop sbb mov inc sub rcll dec push bound or push sbb adc sub dec sbb jno hlt pop in clc lods stc bound xchg lds aad lahf fildl sub mov es add xchg push jbe inc popa stos repz cmp push mov dec cmpsl movsb addr16 mov add fs add ja adc or add fwait dec inc das dec jbe dec loope push pusha xchg jg or xchg icebp and mov aam in push lock inc mov fwait pop std jae inc mov mov daa shlb leave mov and inc adc cltd xchg out and xchg cmp mulb mov mov jg adc outsl loope out xchg iret jge dec mov sbb mov sub ds test adc aaa mov pop movb decb imul in cld mov ret inc enter sbb pop (bad) or push pusha (bad) mov dec cmp or xchg jle call push in jns outsl test pop mov lds adc pop (bad) mov shlw roll jno cmp mov push push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret aad and xor lcall loope daa aam xchg mov push into push push push push mov adc push call pop ret lret sti fidivr push or insl inc cmp mov pop push clc lret fsubl orl dec (bad) cmp negb arpl lods std xchg call push call pop ret push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 das data16 inc cmp jl pop icebp loope jmp iretw pop add sub int lahf scas sbb std xchg ss into cwtl dec cmp pop sbb int3 jb adc fistl xor adc lock jne xor and jbe push fucomi outsl (bad) pushl neg scas add test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 aad and out sub insl aad add mov xor shrl loopne lea adcb in fcomp xchg push scas (bad) pop lret mov mov (bad) dec or mov jae push sub out xchg mov lahf lds push fnstsw xor mov aad jge lea call jmp icebp daa cld add aaa mov push and mov mov xor mov pop sti scas test (bad) mov andl out pop int add loopne js jnp or int3 add cmp into das cmpsl lods or outsl or ljmp dec mov (bad) nop cmp jbe lods out dec std push icebp mov call enter addb dec cwtl mov les aam pop shlb sub rorb (bad) mov xor cld mov loopne nop xchg xor pop lea push xor dec jb sbbb mov or cmc iret sbb lret hlt or mov aam push (bad) xchg stc outsb (bad) bt scas xchg jb xchg inc (bad) fmulp lahf push and (bad) out sbb popf mov push xchg cli (bad) popf sbb add arpl or roll fcmovne fdivs xchg cli cmpsb mov push mov jbe int3 sbb cmp (bad) in mov or aad sbb jmp adc (bad) std mov cmpsl dec fldcw int xchg jmp ss lahf sti add bnd in mov sbb popa push sbb dec adc movsb mov sub lret inc pushf stos inc fwait cltd mulb lods xlat mov cmc adc (bad) lock add lock cmpsl lret rcr xchg fwait outsl sub mov arpl jecxz push vpsubq rolb stc stos or cld jmp roll cmpsl dec xchg aam push cmp out mov scas dec dec adc jge icebp lea icebp xor add jecxz leave aaa cmp jnp sbb jo push mov das jno mov aam loop mov mov sub and mov sti ret (bad) jge pop pop or adc and or lds iret pop jg add or or or cmpl ficompl mov mov aad (bad) push movsl jmp cmpsb mov pop test into or cmc repz shl testb outsb xlat pop adc cli xor adc repz stc add cld orl das nop mov cltd aad fimul add mov stc dec or fcomp sub pop fwait mov imul cmc cmc xlat add addr16 mov mov std jbe xchg inc inc and lea sub add ficoml xchg pop jns mov pop sti fbstp repz push in sbb fmull jnp xchg dec shlb sub arpl dec mov mov (bad) (bad) sub mov subl mov cltd call ret dec push imul sub sbb call in jae mov pop xchg jno add rorl mov or sbb bound cli or push out btr mov push in adc insb add or xlat and add enter jb mov mov cmpl fildl pop sub jmp add push sbb stos loopne (bad) or imul negb jmp hlt sub cmp push inc arpl xchg je mov or js add cwtl add lea and in xor push dec or (bad) lret dec jp mov ja pop outsb push rcr daa push mov fwait dec sbb xchg icebp cld xchg lea pop push jg pop sbb mov mov dec imul add hlt add adc pusha cli lds ja (bad) xor outsl pop mov ds arpl fmuls fs mov in icebp into mov js adc out mov or in adc xor ret aad mov mov fadds xchg int3 dec fisttpll push mov fcompl std aad repz insb cmp repz add jg ss mov ret push xor lret int xchg mov test aas js mov and push mov pushf inc lret push sub out pop subl jge push push loopne sub sbb sbb and jmp or lret inc out xchg or aaa push in inc push aas mov (bad) adc mov mov xor adc xchg sbb pop push mov adc sti ret mov jmp sbb add and in mov adc mov inc fcom sti adc mov popf jne inc pop xchg ljmp les cmp sbb jnp add shll sahf pop ja sub daa dec gs jb sub aas nop lock ror inc imulb imul dec call sub inc loop movups in sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 aad and and arpl out or sub ja jnp popa push mov jne push repnz insb repnz dec push mov sbb jae mov das gs and (bad) lahf imul xor gs xchg pop in cmp stc add fldcw mov jne xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 aad and and arpl out or sub insb out adc dec or sbb in adc sbb jge pop lahf mov gs inc push sar insl add arpl inc out sbb jne in sbb into out jae dec add mov movsl je mov xor cmp repnz fcmovnbe adc sahf jno sub sub cmpl adc out pop jne cwtl dec outsb sub ss add jb in push call mov adc mov lods pusha dec mov xlat cmp jo js or inc adc clc adc mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 aad and out sub fsubrl sbb daa out sub and aam mov pop jmp xor pop test ficomp (bad) icebp adc inc adc add add inc adc add add add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 xlat das xchg jae dec cmpl push cmpsl or xor movsb (bad) roll loopne daa xor popf mov je sbb push fdivl mov and std push sar insl xor mov pop xor aam call ja stos mov dec mov add push sahf and add push jne out scas add mov lcall ljmp mov sub and add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg je data16 (bad) cmp cmp aam xchg xor jge and push mov push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 aad and out sub jge movb test or cltd in lret sub (bad) nop xchg inc inc (bad) xor pop or lock rorb mov jge or das data16 pop xchg xor add adc fnstenv fwait bound test out dec lcall pushf nop js xchg aam cs leave aad or dec push dec mov inc mov decl ror insb fldcw sub lea mov shrl sbb cmp add xorl outsb dec int3 sub mov push or es lods push fucomp cld sub fnstsw outsl stos clc in xchg push xchg sub push dec out scas push sahf push mov or xchg stc push mov push inc sahf test adc push jae ja in xchg mov iret mov dec mov cmp out (bad) jge push cmpsb pop mov das mov jno int3 mov pop or dec inc dec into cmpsb int3 cli fs or cmpsl lea adc daa lods sbb inc test adc (bad) call mov cmp or sub cli mov xchg imul inc loopne (bad) fucomi in iret inc cmp or adc push sbb ss sahf push sub jae ja xor sbb ljmp fmul adc jno sub popa and mov sub arpl push add inc inc lcall hlt adcl ret (bad) cwtl xor cltd int3 and push pusha adc add movsl add adc fistp js test push pop jae div aaa lret lods and inc bound int3 dec fcomi dec xchg aad jg mov xor call movsl dec dec cmp outsl or inc shrb fwait adc rclb aad test adc incb fisttpl aaa mov and loope xlat mov and jge ret adc (bad) push mov inc xchg xor inc add inc push inc loop adc pop popl pushf dec arpl mov shlb xor (bad) mov adc das xlat mov jbe add out (bad) mov stos jbe call cmp cmc out xor xchg dec dec fidiv jb xchg pop push mov sahf out and rorl pop push ja pop xchg repnz nop jg and sbb repz xchg test in adcl out (bad) dec add xchg or push xchg cmp adc jnp notb sar mov cmp call sub popa lea fidivrl dec iret sahf and and out mov add and cmpsl rorl loop popf aaa push dec je loop dec and pop jge push sbb repz pop push mov pop bound push lahf es das xchg inc out xchg push jb adc repnz sub pushf mov lock mov cltd stos sub mov sub std call mov lds aad rclb dec out dec pop push jno repnz inc comiss (bad) clc pushf fnsave aaa jecxz xor subl xor je jns (bad) ret std dec insl lods lock jg xor fs out xchg or and xchg adc adc fidivrl xor xchg xor xchg es sbb inc popf lret ljmp cmp xchg push mov pusha dec inc negb lds dec movl scas sbb dec loop adc lahf adc jns push daa jae sub sub mov test hlt mov jnp push icebp movsb jns clc movsl jp or test and daa jle inc fsub inc push sub in les push or pop sub leave push xchg dec shrb sarl jge movl ficomp pop sub lret cmpsb mov lret aas push out mov xor jne popa dec js jnp sahf jge inc test shr add call in mov (bad) decl ret ret aaa fs add int3 cmp test jnp or jb sub sbb les mov add jg push sub pusha sub in adc in dec inc ret aas mov lds leave call stos outsb (bad) mov out test jmp pop adc mov push push or sub cmc push xchg fsubr and lea or mov xchg (bad) dec mov or insl cmp (bad) and xor adc add add aad add adc sbb sahf add add dec pusha pop push dec xchg repz sbbl or pop sub cltd xchg test adcl inc add shrb mov rorl cli loope pop pop mulb popa push cmpsb (bad) cld push jns mov daa lods cmpsb fs jno mov xor out mov inc out out lahf cmp int icebp sbb popf into cmp test pushf adc jno jle out jmp (bad) dec xchg and jmp aaa push mov or scas ja inc pop pop mov pop cmp leave push lret mov in mov insb xchg add scas fcomps add aaa lret adc sti lea dec insl sahf mov xchg fwait adc or xchg or inc mov lods push test or aas and cmp idivl dec test pop test out lds movsl mov adc das sub xchg add loopne cmp ds mov pop lea ret xor in rolb adc dec cmp ljmp rclb push sub loopne popf xchg or bnd add jg imul inc cmpsb or xor cli cli adc push aam mov adc mov loopne sub lds inc jg pop pop push test xor sahf (bad) xor enter frstor and cmp inc pop xor cmp mov (bad) imul xor inc cmp jmp cmp mov lods les jns mov jno inc add mov stos mov aas sbb or pusha add pusha jno loop or cwtl add sbb (bad) xor adc (bad) pop inc fdivr jnp mov add outsb insb loop jmp adc dec pushf loop push mov adc aad jg sbb jb in push xchg clc fsubrs adc xor sbb push and jecxz int3 sub and cmc push mov stos repz sub mov dec shr add jbe inc movsb (bad) int mov push aaa std mov mov in in and jbe les adc insl push sbb pop cmc push dec outsb push jo xchg xchg mov inc stos enter adcl sub jno mov xchg xchg mulb (bad) fdiv cmp sbb fs pop pop aad add push cmp push xor sub shrl data16 adc ss mul push push jmp mov std in and nop sbb dec (bad) insb jnp dec mov repz mov inc repnz mov xchg sbb push outsb pop int3 mov testl ljmp repz les out ja cli stos pop fisttpl test mov or ss or rcr mov xor mov enter xchg jne pop sbb cwtl ret ret push pop jmp and mov fs rorl inc inc or dec in cli movsl mov cmp sub pop enter roll pusha ret in scas inc xchg ret dec int sbb inc mov lret adc (bad) out jae inc ds popa pop sbbl aam push imul sahf rclb lahf mov icebp dec add (bad) adc sub xchg outsl jo out invd or push aas popf fstl in xchg pop stos adc scas sub faddp cltd repnz rcll push insl loope xor test gs lret cmp and mov jge pop orb test mov xchg jo mov adc jno push nop push repz xor mov inc push fiaddl movsb mov ret shrl daa and (bad) (bad) xor in jo xchg aad cmp test pop jl jle jle ret scas cmpsl fsubs inc and mov mov adc mov in jbe mov pop cmp mov ja add pop (bad) push addr16 inc cld js inc inc dec ret sbb ljmp ficomp cwtl jo push pop lahf mov sub inc push and aam dec repz jae lods or cwtl int push xor std flds test adc into dec mov cmp pushf mov scas add enter sbb in mov sub dec repz cmp sbb divl popa xlat pop mov popf daa lahf loop mov imull enter jmp push out bound or jmp add cli inc es pop popf push xor iret jecxz mov sub (bad) dec jo,pn movsl push jo negb div or pop inc popa lods sahf insl push stos cld jmp dec mov movsb jp jns fisubrl mov and pop shrl jnp test aas rcrl les mov xor loope pop adc adc sub push imul cmpsb jb jo pop mov cmp lret mov bnd movsb mov out icebp sub clc lock jg xlat in dec pop push jne push (bad) bndldx (bad) xor cmp lods in mov aad xchg popf insb lods (bad) fstps in xor lcall lods pushf out sbb bound out add insb fwait scas call and mov mov mov dec cs fiadd mov out fwait xchg adc cmc ret paddb xchg pop cmc daa das mov mov pop cmp subl sub adc jp std aad fisttp pop sub lahf adc xchg mov pop or adc xchg push sbb add mov dec fwait lcall push js daa in xchg iret xor testl and cmp jb jg aam push inc dec ret cli pop repnz add outsl std fisttpll fnstsw movsb shrl test loop push xchg sub and sar dec pop inc std lret mov test sub xor jmp sbb ss sahf gs adc loopne sti mov mov mov mov xor xor inc sub mov and dec or add pop andl dec or roll in mov jl xchg xor and les cmp (bad) fsubs sar mov ds fwait dec or out or xchg jecxz aas jmp loop mov movsl push jnp imul movsb push int loop cmpsb mov mov lods daa and (bad) fldcw ret jnp bound lea adc loopne push test mov mov cmc stos inc push fnstsw sub xchg sbb test inc push (bad) sub pop jl push mov imul rorb dec (bad) mov inc mov in insb aad lcall lcall mov mov pop (bad) cltd imul sbb mov jae stc xchg mov jmp pop push jb pop mov adc (bad) sbb mov fmull or outsb push scas (bad) sbb loope pop pop jmp aad ljmp stos sbb pop push pop lret enter dec inc imul leave jg fs sti push std jl cmp mov xor mov or in les dec fidivl test sub aas repz cmp cmpsl (bad) fs fsubl test cmp or sbb lock (bad) cmc jge xor adc inc fdiv out xchg mov sub lret imul fwait cmp cmpsl ficompl sub loopne jge dec popa add mov sbb push out in daa (bad) sbb jo ja xchg in mov (bad) (bad) dec xlat (bad) pop (bad) psubd adc shrb stos pop mov mov hlt into cmpsl jae cmp xor sti adc lods pop outsb sbb add lahf sbb push xor aas push (bad) es arpl mov das pop xchg cmpsl mov adc cli mov cmp push jecxz (bad) mov test adc push roll arpl xchg fldcw insb fimul adc or cmp jo xchg dec lock push cmp cmp xchg out mov loope leave adc inc in popf jbe mov inc (bad) fisubr out std mov imul push imul fisubrl mov mov daa cmp sahf mov movsb mov fwait and jbe sub cmp into or and xchg mov inc or loope aas cmp jg xorl or popf js std mov push clc lahf shll cmpsb daa lret mov jae inc sbbb xchg lds mov in xchg std cwtl lahf mov mov add call test sbb xchg adc loope push xchg inc xchg xor test adc and mov dec mov xchg leave mov fwait fs enter aam ljmp inc loop push repz inc jge jmp test dec jl (bad) mov pop lcall xor iret aas jmp pop pop jle jmp mov adc sub aaa jns and dec les lds lea bound xchg cmp enter jle or (bad) ss push mov or jmp xlat inc notb (bad) lcall and in pop icebp gs les stos xor enter xor sub xor mov fdiv cmp insb mov push cmp aad adc rcrb je in inc push shr js scas (bad) push mov imul mov inc lret popa cwtl jno lods sbb pop and mov scas sub imul and mov ret lods lock lcall or addr16 push stos ja pusha push inc cmp sbb or aad dec notl and iret pop fldenv mov mov pop add je fldt gs jbe hlt jmp in test mov push push inc loopne dec sbb adc repz jbe lea and sub sbb jle cmp xor sti fsubl or xor subl je,pt adc (bad) pop push lret inc icebp mov add (bad) xor inc sahf je fcom fnstenv fs aad mov adc (bad) dec adc mov int stc jns xchg aad and xlat sbbl lea push outsb punpckhdq and pop test push lds push negb jb std movsb out test or inc or and sbb into sahf xchg inc lods dec (bad) jne sbb sub cmpsl aam push sarl sbb in jecxz adc clc stos and xlat push adc xchg jl cmp and jns les rorl movl xorb xchg daa adc inc sbb push movsl push add add push push xchg out leave mov mov sub loopne,pn jb jbe iret mov inc mov pop mov cmpsb loope dec cmp sub mov pop inc or dec or (bad) scas repz jo adc pop ljmp rep mov ret cltd jno les push cmp andl popf or mov push dec loope ret xor int lds pop cmpsb ja ret in jge fs mull mov icebp fs cli cltd and loope add fistl insb fdiv lods mov (bad) xor xchg mov mov push clc ja mov jae xchg jmp pop dec sbb sub lcall add inc insb jl lods (bad) sarl sbb (bad) iret pop pop cmp and cld outsb xchg out mov mov aam lret sub cwtl (bad) in in pop adc mov jo cld ds dec xchg dec cmp adc adc push into int push pop mov mov jge leave (bad) aaa sti xchg sbb rorl test pop push push int3 xchg adc cmp or call jle (bad) in jns mov cs xchg sub mov or adc loop dec lret mov add cmpb scas push and xlat hlt dec lret iret jle inc outsb sub add ss jp adc outsl insl mov jge xchg sub mov pop stc insl fildl test sbb jns jno iret mov mov shr cmpsl pushf pop add insb sub inc (bad) fcoms mov fisttpl sub scas nop mov xchg nop in (bad) mov nop or sbb sbb mov adc or das mov jno adc loopne fs jno movsb or sbb loop xor or and in dec push mov sbb or jmp inc into mov mov mov xor je adc test pop xor xchg sub add pop jnp mov in cmpl fnstcw ljmp sti or xchg leave je lods or dec inc sti imul cmp lret mov in (bad) iret sbb push push scas mov inc js jmp pop pushf enter shrl jno add dec jl test adc xchg cmc outsb pop shl sub stc mov lods push dec into mov and adc jp or mov out inc jg dec cltd xchg aad test cmpsb es aas push icebp cmp jl cmp cmp ficomp push sub cmp or sarl cmpsb xchg or xchg scas cmp cmc push dec lahf sbb cmp std inc cltd mov je test mov loopne clc mov in in in ss cmc jp push lcall fsubs add cld cwtl mov adc adc add fbld (bad) xlat sbb cli dec das xchg dec add in cmpsl jb,pt hlt sub inc mov mov mov xor and cld jge dec xchg lret out cli mov or out (bad) cmp cli ja xchg jp add ljmp cmpsb push arpl push inc ss fldt lods xchg scas dec sbb repz mov sub (bad) dec sbb stc mov movsl dec sub xchg xor std jle iret pop adc lcall out jno cmp out test scas cmp jg adc cmp dec mov mov fdivl xor or bound adcl xor mov data16 icebp inc mov cmc inc or cmp mov and ret pop push in lods aas test push adc add je xor incl cmp jno jb sahf les in jns notb les pushf aaa gs nop (bad) into stos frstor lods mov cmc or mov push pop in push roll (bad) jmp push fsubs movsl inc push lods mov add push mov fsubrl sub or data16 insb push fwait jbe dec dec push fs stos (bad) scas loop cwtl hlt xorl lods jmp lret xchg sbb arpl lock icebp pop aas enter mov aam add cmp lahf xor inc test outsl fwait int adc mov movsl aaa lods ja dec bound mov mov aam inc and les test in call or lods dec push jle pop loope sub sbb lods push sbb movsb cmp fiaddl and pop or push push jbe das xchg push (bad) xchg cmp and add sbb cmp (bad) mov fidivl mov fs mov xchg jns dec inc push sahf push sbb push and dec fdivrp je sbb bound outsl aam and imul jle sub pop mov jmp in push js repnz inc sub xchg inc (bad) dec (bad) sahf rorl mov dec fisubrl subl inc inc je mov xor (bad) jo in in dec call jbe pop jecxz cmp mov fs ss cld add cmp xor jno jl mov dec test leave dec cli push shll popa push rcll pop xor xchg inc rcrl or sbb mov jbe mov (bad) xor or (bad) xor enter hlt pop lods xchg lea scas sbb fs mov and sub jae gs mov outsl sbb in or cwtl inc cli test push outsb and (bad) cmp xor or xchg daa mov inc shl out push std inc push roll test adc adc sbb and pop pushf scas out sub test into xchg cmp aad push cmp int3 sbb fsubrl aad dec add xchg or jae (bad) cli jl fs cmpsb hlt lcall repz or stos adc (bad) pcmpeqw fistp das pop mov mov outsb jnp sub test imulb out jb in xchg stos mov mov gs jnp loopne adc iret aam pushf or jb roll dec scas xor movsl je dec js stc sarl (bad) pop das cmp loope xchg push mov icebp popf jns lcall xchg inc (bad) cli push mov subl cld sahf repz cmpsb pop inc cmp mov dec push inc aas dec inc (bad) inc push call int3 int3 int3 int3 int3 int3 aam sub fcompl popf push lret (bad) pop inc cmpsb mov and fildll xlat mov stos adc pop dec out daa pop pop fidivl sbb jns mov push jo push outsb (bad) out int and mov fmulp xchg movsl cs out sbb push in aam xchg push xchg cltd bound mov jge mov gs bound push mov sub stos fimul jmp pop jae add movsl push mov out add push inc xchg test ret and test push mov sub fs dec push xchg iret push dec dec adc xor dec addr16 pop cmp movsl aad aam push cmp xchg push mov or into iret es cmpsb dec in pop shlb hlt mov adc fnstenv les pop enter mov mov (bad) sahf and xorb push push in xchg loopne sbb push nop repnz enter pop mov arpl xchg sbb or arpl (bad) sbb test int3 cli scas repz test dec or push in push aaa cmpsl dec clc pop mov pop xor pop (bad) push cmp inc xor inc cmp cld cmp xor dec mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 pusha cmpsb cmp pop add sbb jae lret xor mov dec mov bound cltd add pop jecxz cld fisub push sbb hlt jl (bad) sub pop add daa jne clc jl rcrl push mov mov leave inc jg mov add leave xor push es arpl (bad) sbb out lds ret and int3 imul or jmp xor cltd (bad) adc inc dec imul mov std je jb lods and dec xchg fild push push mov cmp movb mov push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 daa mov and cwtl mov aad (bad) mov push notb mov gs xchg sti cmp leave mov sbb dec pop movb lahf fdivr mov lock push cltd into and enter aas jl fwait dec xchg scas mov jbe (bad) (bad) mov xor sbb xor stos sarl mov sbb lods cmpsb pop (bad) xor jbe ficoml call jno out lahf sub cwtl sbb add in ljmp mov dec mov cs inc dec push sti int pop sbb xchg out lds pop (bad) jbe setp push iret xchg mov imul or unpcklps movl int3 cmp mov mov lret (bad) sbb or jp add test pushf xchg mov outsl cld push sub stos out popa (bad) push pushf cwtl int3 int3 cmp mov sub in dec mov mov or outsb dec outsb repnz lahf fucomi fiaddl aad mov das call mov cmp sti movsl and xor cmp xchg shrl mov adc sti xchg dec sub lds xorl loop inc lret push jmp aaa xchg or data16 icebp cwtl adc (bad) hlt or jns lret (bad) dec lahf sbb hlt daa stc fisubl pop xlat mov mov rolb imul and repnz jmp aaa bound push in cli sahf inc push subl cld mov scas popf imul out scas int3 xor outsb mov aaa push push inc mov test dec sub loope xor or test jo fs mov mov sti aam loop jl jbe or mov push pop mov and adc or jle jl stos ficom fcmovnbe es mov adc add dec and push mov dec push xchg out lock fsubp xlat mov cmpsb jp mov shl xchg repnz add icebp sbb fistpl and and sub loope popw mov pop sti xor cli add dec cmpsb lahf xchg sbb int3 test sbb cmp jae mov inc into pop xchg xor jno push addb add push insb add adc (bad) cmp jo hlt (bad) fnstcw xor mov das lahf call repnz lods xchg inc (bad) mov add xor test adc add mov es cwtl push push fbld (bad) xor mov sub ja jo imul (bad) inc dec hlt in inc shl mov stos enter cs das out dec xchg xchg fldt fisubr dec and fs xchg adc inc mov sbb jl ret xchg es enter fldl sahf icebp repz fimul dec loope ret cmpsl sahf push mov lods jns rcll dec push jns push daa sbbl adc xchg push lahf mov in xchg ss pop lods decl pop push push push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 aad and out sub dec pop out jns xchg dec cmpsb cmp stos add imul imul in daa add xor pushf mov adc fistl xor std sbb (bad) mov jno sub push xor stc out cmp scas add pusha cmp imul mov sahf lds mov std dec and pop in jmp or xor lds cli test cltd jmp into out xor (bad) aaa outsb mov sbb inc cld in mov in add xorl outsl inc lret and (bad) xchg xacquire (bad) xor cmp or inc add imul pop jle test lret sti mov fcompp adc dec fs pop imul or jmp in push loopne jo or inc popa fwait (bad) jno rclb data16 das mov dec mov lahf mov ds movb fdivp inc imul push jle pushf mov shl call cmp loopne add loope push sbb enter sti xchg push mov inc (bad) mov fs movsl in hlt cs repnz add sub nop and mov cmc add ljmp imul repz roll test pop das inc jl jp data16 inc lods cltd stos lock inc ret loope insl scas stos lods test jbe aad pop int3 fisttpl mov insl and mov push mov push jge cltd imul pop mov xlat xchg jno loopne imul movsl mov js lcall pop inc ret outsl bt sbb lret dec sub jne push or test movsl pop sbb pop mov jl jge into insl adc es xchg js pop mov and mov pop (bad) jno xchg mov lcall cs or das pop mov xchg sti lcall add cli jo std ret jns jg cmp jne in sbb negl arpl sub scas lcall mov xchg js pop push jns movsb pop or cmpsl cmc xchg push adc or adc scas xchg pop inc xchg aaa xor repnz sti xor fs sbb cmp loope outsl mov mov ret (bad) jnp aas leave jecxz xor ret xor jmp mov xchg sarb xchg cld fcom pop aad jl sbb dec xor inc popa cmc pop xchg and pop jae std cmp int push xchg mov iret addr16 and shl (bad) hlt mov xor xor mov cld sahf xlat clc xor mov movsb cmpsl mov push jae cmpsl cmc dec cmc mov push pop cmp add push sbb icebp cmpsb fldt repnz test xlat aaa repz and jmp arpl loop xchg ljmp push push mov or ja jl cmp in icebp mov hlt mov lret push add xor add clc push mov jge cmp lret stos inc jle add xor test adc xchg (bad) cmovg insl xor xchg sub repz movsl cmp fisttpl cltd dec pop nop sbb ret int3 pop out pop popa jno (bad) pop cltd mov ret ds jns xchg xlat test xor pusha fdivrl xlat (bad) int3 sbbl rorb and and or xorl adc fnop out push cwtl test fisttp push add add out jae jnp lea push dec lahf sub xor mov adc pop jne pushf or cmp (bad) repz ja mul popf lcall loop cmp das and cmp sub push jecxz fsubl mov push (bad) shlb popf mov pop mov mov jl jl cmp cltd test ret adc xchg fisttpl or popa sbb push das or jne inc jnp adc cli fnstsw fistp pop (bad) stc adc mov test into push mov aam shlb inc stos dec xchg cmp ret xchg xor xor mov or pop sti and push iret and mov scas inc inc stos pop lea xchg adc out push sbb or xor jno (bad) movsb fnstcw mov cltd pushfw mov jno or adc jecxz (bad) pop adc push push xchg or pop lds sbb (bad) push fistpl int in xchg pop jmp cmp pop mov (bad) cld out movsb in and es adc add xlat inc out mov pop mov inc scas add clc out xchg xor adc push push dec aaa jb scas lret inc xor andb notl sub and jnp enter xchg mov sbbl out pop loopne rclb outsl movsb rcrb mov sbb xchg popf mov cltd push test gs lahf gs jl jp adc insl lods pop frstor imul mov jbe cs adc mov push pushl out cmp jbe xchg imulb push fnstcw mov aam lock not sbb repz in in scas ljmp and notl jo sub orb nop mov enter lret aam cmp mov pop mov push inc cmp stos mov mov je sbb sbb mov int cwtl insb not loopne pop (bad) testl (bad) cmp dec dec dec inc lea xchg fcmovnb pop dec jb fsub stc jne pop or cltd push pop cmp ja push jne shrl adc mov mov test cmp addr16 je pusha mov adc aam test mov (bad) call xchg test dec sar les stc ds jbe cmc (bad) cmpsl lods and lods stc xor movb into jecxz lahf push aad fidivr push mov jnp in mov cmpb jle hlt mov cmpsl sbb or call aaa and daa xchg lods jp fwait rcll outsb test cmc cld mov das and sbb scas jl bound pop dec addr16 fs aaa idivl into aad xor mov clc arpl lcall xchg outsb (bad) mull ljmp pop mov add cmp inc imul cmp cmp dec jnp inc xchg cltd push inc sahf test sbb cmpsl sar iret lods aas jb imul jns mov pop xor das add xchg jp and cmc jmp jecxz inc aaa ret icebp aam leave loopne mov sbb insb rol pop addr16 (bad) rep pop (bad) stos test clc rolb hlt mov rdmsr push adc shrb outsb inc mov add sub inc xchg rorb pusha mov scas dec loopne int3 mov sub jmp add popf sbb jle (bad) dec pushf scas push imul sti jno cmp loope xor fistl in flds sbb mov aad adc lret push js lds popf and dec cmp dec or mov dec fmuls jne in pop sub sub xor mov in inc in (bad) xor mov xor cmpsb cmpsb dec push add add iret js xchg mov int and outsl adc ss jmp popf or xchg and inc and adc rcrl ret xchg mov cmpsl in aad adcl jne jns cmc adc mov (bad) rcl out icebp movsl adc cmp repz clc test adc xor fnsave dec imulb mov test xlat and lret mov jp mov (bad) iret (bad) adc inc sub cmpsb (bad) mov pop mov jne push xor cs or lret inc adc adc sarb movsl inc or outsl loopne insl test mov ja xchg inc jnp or or call dec pop pop xor les jb jp and fdivr sub mov mov mov xor fcompl add dec cmpsb shrb push (bad) fild xor mov adc outsb dec jnp push (bad) aam das imul jnp xchg rcr aaa ljmp (bad) repz adc sarb inc add pop (bad) inc stos ret loope (bad) icebp push jae mov mov xchg fucomp jnp sti dec xchg mov loopne xchg sub mov iret push add adc xchg push xor cmp movsb daa addl cmp mov push movsl cmp cmp xchg push arpl daa hlt in push cltd loope negl test dec pop pushf or arpl nop and fmull cld jp lcall fidivl pusha and mov arpl mov cmp sar mov mov outsb jl adc rolb fdiv push sbb push fistpll jle insb test xchg fstpt mov mov pop xchg adc js xor push shrb lds pop or jnp stos outsb lock insw loopne std pop lds loop fucomi dec mov xor popf lock push push push xchg mov pop iret jbe or mov dec xor addl mov xor mov pop push leave or incb ror sub addr16 sub xchg cmpsb jne test f2xm1 xor out sbb or leave cmp mov jge xchg clc popa (bad) scas daa push out fistpl cmp add insb jle mov negl (bad) js xchg mov out mov scas mov dec adc jns ret scas in mov mov out in insl test pop inc orl sbb or cmp gs repz sbb xlat lea and xchg mov push xchg test shlb fwait dec jne insl jnp repz lret jne insl insl es jns scas lret add aas mov or push pop jp dec pop je push cmp fdivl ja xchg pop add into mov mov test inc test pop les imul out jge jge pop dec inc scas clc mov call add rcrl push aam mov push xchg in js arpl loopne or or (bad) jno mov ljmp xchg sbb and jp mov stos cmp test in je mov in sahf je push or aas fwait (bad) js xchg sub imul rcll popa and mov aad sub cmp sub and sbb xchg mov xor and std xorl xchg scas cmc gs lods mov dec fs fisubrl clc ss insl jecxz xor xchg pop add mov nop mov inc lret and in test leave insb jecxz loop (bad) mov fdivl push aam pop rcll push insl out movsb das adc iret and pop idivb mov in rcr or cmc inc dec mov lea mov sub mov sub pop mov imul sbb jp jne sbb jns pop movsl mov xor dec mov mov orl enter push std mov adc fdivrs imull test outsl out push cmc inc push ret xlat pop (bad) jmp fisttpl add xchg movsb leave (bad) (bad) rcll xchg xor ficompl fildll add stc lock push sbb pusha pop pop xchg pop and fldt sub aad cld int3 aad and aas ficomp sub mov or out mov int xor in test mov mov and shll dec dec xchg pop mov lcall ret (bad) je pop pop pushf pop sub or sub (bad) stos add frstor scas push mov push jmp clc cmp add mov xchg cs jl add xor int dec into mov mov dec jge pusha popa add ret mov loop lahf ret ds call sti mov and and jp mov (bad) adc leave sti cld jl cmpsb mov add jp or fidivl inc test inc es jno loope outsl (bad) aam pop jp sbb call pop mov pop in mov and arpl mov iret (bad) adc push es insb mov inc stos mov cwtl sbb adc test aad fbstp (bad) pushf test jae jno jno push iret or jo cld int les jno xor pop cmp popf jl enter and jg adc or repz jle fisubr out adc rcl mov es ja in push mov adc arpl and mov or (bad) mov mov push push fadds loopne enter pop std adc push addr16 xchg (bad) mov mov xor (bad) lods sarb aas movsb push jb sbb bound and stos insb push push (bad) out mov outsb cmp jo sbb adc and rcll mov andl paddsw jmp mov xchg bound lds loope lock pop fild inc out aam icebp lods cmpsb arpl sub out loopne lea out sbb pop test les push or js imul jb hlt (bad) or fsts cmp or les (bad) xor test sbb aas jns cli in je stos xor push xchg mov sbb outsl lahf stc lret and or xorl loop mov fmull je arpl add sub or xchg pop movsb pop push xor popa rorl inc orb push jp addr16 jmp (bad) or jmp in jno jns scas inc data16 icebp es xchg adc push sahf aas (bad) loopne scas dec sub adc add ret dec int fsub mov jg inc xchg pushw mov and sub fimull nop shrb scas popa or (bad) sbb jns or dec inc and mov or cmp or push xor dec stos ja pusha push inc cmp inc push sub insb dec xchg (bad) pushl add adc cmpsb sub ficom outsl mov into jmp stos jg pop ljmp lea hlt mov cmp stos mov (bad) mov ret jns int popa xchg daa leave push and xchg test jg and mov fwait mov dec data16 sarl cld icebp fs xor lods push icebp out fdivl mov movsl aas cmp je (bad) sub popf mov adc xchg mov in rcll sbb scas dec jge push push les sub mov cli cs je sub pop dec insb xchg mov sub repz xchg add pop sahf or lret dec jp fbld clc ss lods xchg rorl hlt ret push in stos ret jp or cmp icebp mov cmp rorb cld stc xlat dec addr16 out popa pop movsb mov and scas ror jbe je add and idivl adc pusha sti jle aam add mov mov je mov sub popf test ret mov inc fwait jbe mov shrb push icebp dec add sub mov sahf dec sbb arpl push add (bad) pop rol lret subl jns xchg mov sahf dec sbb fisubr inc mov repz jno (bad) adc xor cmp in inc sahf gs jns lods fwait xchg cmpsb or push test lea mov sbb xchg cs inc outsl inc test mov xor push jl imul popf cs aas pop adc adc and stos push fmuls and aaa test xchg mov jmp jo scas (bad) jle xchg mov jecxz ret rorl mov insl inc cmp inc mov pop arpl push mov or hlt lds cmp mov mov add scas loope xchg movsb inc mov adc (bad) hlt lea jge xchg loope jno mov jb xchg jne cmc enter xchg sub cmp (bad) jb nop pop and adc mov fldt roll fs leave sbb stos add sbb sub mov xor xchg mov lods repnz arpl (bad) push mov sahf mov xor (bad) (bad) lret jmp mov add sub mov pop int in mov mov (bad) pop add imul insl dec aaa sti sarb test add xlat pop mov xor insl mov xchg mov push fxch xor push push xchg out cli add (bad) idivl imul ffreep or inc mov jae push int lods pop and or inc cmp pusha pusha mov mov push cmpsb loope mov mov dec fcmovnb js add repnz aas mov sub sbb mov and ss (bad) xor outsb push mov outsl jae add mov sti imul sahf mov cli mov cwtl lock mov (bad) in mov movsb pop dec push (bad) dec loop dec cmp add pop adc cmp lret or adc sub lret add mov or mov iret scas cmp lcall popa add in pop les in cmpsl sub jns mov xlat inc divl dec mov mov gs aaa inc jno fidivl inc (bad) adc outsb inc mov out push int3 xlat add pop xorb xchg jnp and out ds sub mov mov es es mov sub mov jp push fwait scas pop pop mov shlb dec insl sub imul nop push add fwait dec test and imul push js jb cmp lahf in adc cmp aam xchg jne imul jle loope and out xchg xchg add fldenv ret bound insl lret mov xchg js outsl sbb icebp roll addr16 xor rorb nop (bad) sub mov js sbb movsb ja out loope jb enter pusha (bad) jae push mov cmpsl inc push subl (bad) jo and push rol mov pop cmpsb and jne jne mov stc lods sbb pop outsl inc cmp jge sub insl jae cmp lds add push xor sbb in scas pop dec in (bad) fcmove pop movsl or jge,pn sbb outsb push stos clc sub (bad) lea das xchg out ss loope repz push jnp subl or aam scas and hlt xlat mov sarl in or pop arpl dec lahf add jne and cmp inc push ficoml xchg out or repz xor gs jbe or pop dec dec nop adc in (bad) movsb xchg mov repz add dec jl ja pop (bad) (bad) cmp je sarl inc movsb cld fiaddl add ret mov sub lods ljmp fs call clc int3 dec mov xchg (bad) sbb jmp mov push mov mov mov clc and mov adc sahf or xchg push sbb jle mov xor ret sub popa sbb xchg pop add dec ret outsb out loope pop gs popf mov xor enter jb cs xchg dec stc mov adc stos loope int movsb (bad) dec hlt jae cmp out and and mov sbb sbb pop pusha (bad) cli push add repz daa in jle mov test mov subl mov addr16 or mov lret push pop inc sti dec mov jle in or cmp sub jb sar push lahf pop pop inc xor loopne clc (bad) int3 lcall mov sti pop dec and jg out sub clc xor lock daa xor sbb xchg or inc add cmc mov iret push pop test arpl add stc je mov (bad) movsb xchg adc imul and aam inc dec push pop push ffree and pop int3 cmp sub cmp scas lahf adc lret roll sbb add stos cmp mov loope outsb es fstpt xchg (bad) movsb xchg push and out adc in mov ja xchg into or push dec jmp cmp push fnsave sub ds stos xor push ret jecxz lea adc xchg ljmp pop and out mov sarl sahf sub data16 fs in push ja dec adc hlt aam inc out pop push push push scas imul dec call mov or lcall push push jbe mov dec out (bad) xor fildl sub xchg cmc movsb xchg pop cli test cmp add ljmp xchg (bad) push jbe test in dec push les (bad) jno pop sub or sub jae sub lds fidivl jns jne add les and or out mov (bad) fnstcw hlt repnz push xchg push pop out rcpps xchg mov fdivr lea pop imull in fldcw (bad) stos inc xor mov push jmp rclb adc mov das (bad) xor inc imul add nop sbb data16 inc loopne jmp hlt pusha insb rcr dec addr16 mov mov add cmp int mov mov xchg lock jnp out sti jl sahf mov mov push movsl test mov (bad) fwait xchg call lods jecxz and push dec mov lock dec fldt sub xor sahf shrl rorl mov push ret test xor xor test sti xor lret add dec out ja jg enter mov aam xor inc pop in int3 dec lret je sbb or jmp cmpsl xchg jno jg arpl notl sbb lds mov sub iret or sbb cli sbb dec outsl sub pushf xor mov cmp mov dec or and push mov fwait jb je cmc add add ja cwtl rcrb fnstsw add clc mov jl inc pop decb les (bad) popl mov mov pusha lret shr push push xlat jecxz dec ds insb push jae dec cltd aad mov out in data16 jle out call add in jae cmc idivl cltd icebp lea mov sub imul push xchg pop test lret es mov mov mov lret mov lret and inc xor sbb aad pop (bad) icebp nop popf dec jmp bound pop movsb movsb cmp stc xor sub repnz out outsb bound inc sbb in lds rorb cmp movsl loopne scas movsb adc mull xchg sbb (bad) flds stc xchg inc jb es cmp xor jb mov xchg jge (bad) call ss fst push aad mov mov fcomps mov popf push es ret lea les lods insb dec cmp push mov cmpb int3 jmp mov popa jb adc sbb lret or das mov sbb pusha or inc adc js jp and xor push dec les outsl inc popa insl sahf adc jns (bad) js inc cmovl pop inc imul add dec neg mov repnz mov insb inc sub shll ss jge lock jmp fsub xor pop in adc js (bad) mov ss or sub shl jbe insb mov cs loope adc fwait dec inc pushw inc cmp jbe cmp into dec dec repz pop pop sub pop pop sti (bad) sahf out daa cwtl movsb jne cmpsl sbb paddb push xor es inc ret dec lea inc mov cltd pop lahf cmp aad dec adc adc cmp push pop cmp popf adc int3 jp mov jle fcomip int3 fwait inc divb lret addb fwait add (bad) jecxz ss mov inc ljmp dec jl xor lea ja xor inc sbb dec rol mov jnp cmp lock jmp sti lods or (bad) cmp (bad) xor pushl sub sub nop popf or aas pop or addr16 in test (bad) dec mov andb mov sbb push mov mov (bad) in and push insb xchg push pop inc outsb sbb or xchg push cltd jp in loop (bad) mov xor jmp fistpll lret jmp movsl and jl outsb lea mov in pop sub fnstenv mov pushf loope adc add notl or pushl push sbb sbb add jl fnsave lock stos push xchg leave cld das pop mov testl fbld test xchg out jae adcb fnstcw js fisub push push test xchg dec xchg insl addr16 fadds pusha outsb mov stos (bad) aaa (bad) mov cmp test xchg pushf sub rcpps adc in sub push popa bound cmp inc mov xchg sbb pop hlt (bad) jne mov mov mov sub ja xlat mov sub adc sub out in les or mov dec rcrb jle mov out in (bad) jp pop ret pop mov stc push push mov (bad) aaa add pop nop pop les dec mov imul mov clc enter aam xor (bad) popa mov loopne rclb dec loope sbb loopne cmpsb outsl xor scas push inc add pop mov (bad) push ja mov fs outsb jecxz dec pop xorb insl lods lds sub in cmp mov push outsl xor lock sbb and dec adc mov push adcl sub pop sti in pusha jmp (bad) push idivl xor inc mov (bad) sbb test movsb mov mov (bad) ljmp mov adc pop aam js adc nop fs xlat js mov adc arpl nop jg lds push jns lahf sub mov pop addl insl adc sahf xchg inc xchg add test inc into mov push arpl icebp push lea or and rol sbb les (bad) pop enter jmp mov inc shll cmpsl (bad) jmp sub cwtl dec mov adc pop push add fstps outsb aad sbb pop push into inc pop add or lcall jns sbb cmpsl mov scas xlat fcoms nop mov fmull divb and sub cmc push (bad) mov xchg mov test pushf cmp cltd dec lock sbb aam dec test push xchg adc ss mov orl mov mov dec mov in xchg mov stos ja pop mov xor bound add mov xchg cs fwait jbe mov lret mov ss inc push lret xor xor outsl and iret adc push sub mov xor (bad) mov dec iret dec jecxz inc inc add out inc push out or xlat sti dec cli pushl xor mov mov jg and gs test inc icebp shlb outsb mov stc sub dec cmc mov and mov jl rorb sbb out arpl cmpl mov xchg lock ud1 les or xchg (bad) repnz jae mov (bad) popa lock or outsl fdivr or fs je in (bad) repz and aad and adc sbb push mov mov pop jmp inc mov push and fisttpl arpl jbe sbb push aas cmp (bad) in jo ds xchg pop cmpsb out jbe ret lds hlt loopne cli (bad) jbe mov mov imul repnz xorb adc pushf push nop or fs inc mov lret repz lret dec (bad) lods inc call lret ja cmp cmpsb push or stos cli xchg inc mov std adc jne adc mov fs cwtl loopne clc test sub adc mov ds jo jbe loop js dec inc les cmc push enter xor int aad mov mov scas pop insb push jmp mov push stos xorb insb push xchg xchg lods add stos insb mov xchg fnop es mov xchg mov bound and rcrl xchg clc fmul mov pop stos cmpsb jns jl xor xchg mov push call push cmp inc movsb imul dec inc bound rorb add cs scas adc jb js (bad) into outsb sbb or mov inc xor imul add adc hlt cmp mov mov outsb pop or dec (bad) lea dec (bad) add movsl clc mov enter pushf icebp and repnz out cmpsl andl xchg hlt insb mov adc repz push dec mov imul arpl xchg out stos sub xchg dec sbb popf inc cltd outsl xor sub jns stos cmpb dec in or popa outsb repz mov aad lock std xor in arpl or hlt aas outsl je push fidivl mov leave mov jp pop adc xor lea out mov jmp fbld es repz fisub xchg add movsb mov pop icebp inc jecxz fdivl mov stos jb push push scas push (bad) cmp xor dec xbegin dec test and iret push sub inc sbb dec adc add test mov sub rorb dec jo in das loope aam pop mov test xchg imul sbbl mov addr16 jno xchg lods ja icebp ret inc xchg or pop cmpsl cwtl icebp pushf pop lea xchg cmp and pop out inc mov js and sti mov dec add mov mov push pop mov pop xchg (bad) mov jg (bad) xchg repnz mov aam sbb inc and ljmp push mov mov adc cltd stos outsb jl jns jbe sbb (bad) je mov jbe ss mov (bad) popf jle sub jmp fbld popa ds pop cwtl test fucompp cs sbb aaa rcpps int jnp adc ss aam nop iret pop mov push sub push bound imul pop int3 fsub adc das jmp or or mov and test cmp in pop pand or mov adc iret ljmp int leave std adc mov daa inc (bad) scas outsb or push iret dec pop aaa (bad) sub ret data16 inc pop xorl ds (bad) rorl je inc lret lock mov sbb pop lods jp ficom dec call in repz shr jo dec jae add mov sbb dec dec cmp stos fbld mov mov loopne add out pop mov cmp mov fldt add mov jl add ret dec std popf (bad) clc popf cld inc shl inc popf fcomp lret adc sub dec pusha jo mov xchg and outsb sub xor push rcr mov inc add sub xor xor adc out mov fistp fs popf fmull push pop imul sahf inc in push fidiv cmp lea cmp adc jecxz pop lret pop rorl ds mov fidivr jmp push clc xor pop mov nop mov push les push cld stos pop push sub popf jns inc mov and cmp sub mov ret add inc or pop and sar mov shlb push (bad) jo aas mov out mov inc inc aad cmp (bad) cmp xchg add inc push adc adc fstl cltd pop loope add rclb push jle mov xchg inc out stos mov pop test xchg lret fdivrs nop push sbb std cmp repnz push push ret mov in test or scas sbb mov cwtl sbb leave or jmp aad int3 (bad) nop rcll push inc rorb sbb xor xchg in cmp adc adc mov (bad) jge cmp mov or (bad) and cmp loope pop lea cmp xchg xchg fdivrl mov dec dec dec sub xchg lret ljmp lea out and gs test mov pop addr16 inc sbb loop jnp insl test stos inc mov arpl jne shlb jg outsb pop mov add imul jno dec push jle scas add mov shl lret inc adc andl je mov mov icebp into dec add add push add fldcw sub xor cwtl int jl xor fild cli rclb mov xchg push push out jmp xor xchg data16 in test mov jmp cli pop and cld (bad) dec ucomiss push hlt fidivr push shrw popa mov mov popa repnz dec jecxz pop pop dec ret loope xchg scas sbb push xchg pusha fistpl adc iret push fcmovbe jne sbb out or inc push clc aad loope cmp lods fistpl push jg xor repnz loop cltd enter stc pop dec (bad) mov dec divl das scas add jmp cli xchg xor xor lods rol les add ss es enter pop cmp or mov popa push into add ljmp popf out mov test jmp mov pop pop outsb pop mov pop cmp or mov push pop xchg fsts push movl popf rclb adc loop pop xchg mov xchg xlat mov rcrb cmp in xchg xor decl dec out fisttpll inc or push and cmp add dec and fmull mov fwait aaa add xchg push mov lret sbb cmp pusha ss dec xchg jne arpl xchg cmp sub sub mov sbb jg inc jnp mov inc notl lock repz scas jo aas and inc lcall test ds mov pop imul jl cs mov fnsave pop shl xor loopne test pop cmp jg stos mov sbb push out fxch insl push cld fisubl shl stc xlat mov stos cmpsb ja fnstsw incb lcall lods arpl xchg push test inc scas push jmp mov dec inc popf or sahf adc mov shrb iret dec cs pop cmp xlat je (bad) mov nop in cmp adc mov mov cs or push inc or ljmp mov test mov jo sub and movups xor mov push or sbb pop loope mov jne sub jecxz jge and negl and stos dec clc (bad) xor push std movsb cmp arpl xchg adc pminub pop dec jecxz adc aad push xchg cs sub xor repnz sbb mov test jle sub jp cmp icebp movsl jb adc push mov pop outsl or jo fimul cld or insl cmpsl fdivl (bad) jae sbb or push jecxz cltd ret scas fsub mov stos or out test push or std mov mov sbb es jns dec addr16 lods cmc pop inc sub sbb cmp pusha pop cwtl repz push nop adc push add mov xchg ret mov sti std mov arpl in fnstcw in ret std int3 sahf jp pop or aas je movb out dec movsl out adc cmpsb dec (bad) (bad) mov sahf rol in rclb xchg fisttpl jbe loope jae lea test loop cmp pop push fisubr cmpsb cli movsb stos mov lret dec mov sbb hlt js,pn leave lds jnp and add aas ja pushf mov xchg sti adc popa (bad) aaa pop jp mov push dec or js fsubl dec (bad) dec pop pop lcall lahf scas xchg cmc test jg lahf sbb dec repnz dec js pop cld sub xchg and or xor mov and xchg mov out scas adc js cwtl mov out dec movsb lret jno inc (bad) into dec (bad) xchg test push jmp ss mov adc iret leave ss mov inc cltd fimull movsb sti mov loopne sbb aaa test mov pushf add std (bad) pop stc xchg dec repz lods insl addl bound pop ret lret and cmp lret cmp pmaxsw lock stos stc fistpl sub andl push dec js fildl test out frstor mov leave sub mov movsb scas mov mov xchg cmpsb decl in icebp fcoml mov mov jbe pop dec fsts jecxz sbb das pop add pop test in sub hlt leave xchg fsubs inc or add aas mov dec add dec (bad) mov stos repz cwtl push loop jecxz scas dec scas pop rcr rol or jne into jo jns pushf addr16 cmc mov (bad) mov mov orb (bad) push adc and push orl push xor mov (bad) jo in inc popa cld jb fimul repz icebp adc rcrl lods add mov ja push ljmp lahf loop test mov gs popf arpl mulb movsb push mov cli lea sarl xor pop jg and sbb cltd int xor lock push jl leave and fstps xor fcmovnbe lods cs (bad) out push push loope mov and cmpsb mov addr16 das out jno ss mov mov and mov adc or mov pusha loop ja subl lea pop stc lret pop push cmp sub jns inc rcrb xor sub idivl push (bad) lret je push xchg mov cs xor loop mov xchg (bad) jb nop cmp lods jmp add xor call cli add sbb fcmovnbe push cwtl icebp repnz pop int3 mov dec cmc cmc (bad) sub pop and mov pop xchg xchg ljmp mov mov jge jle jg mov mov in xor jno lret xor push pop push push jnp cmp mov ficomp xor xchg mov sarl mov (bad) (bad) mov pop test xchg dec lret pop lods push movsb test imul cmpsl sub sub aam dec (bad) bound hlt xchg cwtl test mov fcmovb (bad) sbb or mov inc xchg or out mov xchg test cwtl sti xorb inc add test cmp fimull loope and pop jmp push in pop push dec lds sbb mov mov dec out xchg mov fnstenv iret dec mov ret out or (bad) (bad) xor data16 ret aas jle and shrb test loopne sbb cmc cwtl cmpsl jecxz and or pop inc add nop lods adc inc and add push outsl add aad hlt mov sbb dec outsb xorb cs es insb inc adc int3 fwait add test inc dec shlb or fnstenv insl cs ss push mov push in data16 ljmp jmp out or mov roll dec jnp int3 mov test out mov dec xor stos ljmp push and cmp imull push push sub sub sarl push iret lret xchg out xchg loope,pn jne (bad) mov int3 lcall mov data16 add pop mov lret sti pusha add mov mov jns or (bad) (bad) fstl pusha pop imul pop and xchg das jmp arpl repz sub or lock mov scas add rolb push xchg test pop pop mov pop adc lret jbe fincstp popf hlt push (bad) cli mov mov (bad) (bad) inc int (bad) dec cmc lods out cmp (bad) (bad) dec (bad) cmc ret sbb daa adc mov xor popa loopne outsl das and not mov pop sti pop sahf sti push pop stc mov out mov gs push xchg and nop inc add xchg repnz cld es movb scas mov test push int3 imul outsb std in cltd call push enter xor xlat lret gs mov (bad) push mov pop push out iret fsub lods (bad) mov sbb fs sub jns sbb xchg in subl pop jns out fcomp int in movsb imul sub push lock cmp pop cmp sbbl ja jp rcrl mov jmp add xor cs mov push pop or or inc adc push mov xchg mov dec fwait dec jns sti dec push popa xchg (bad) leave clc jmp lret lret mov fisubl (bad) addr16 sub inc pop inc decb jp into pusha imul addl add sbb sub (bad) cmp out iret mov push sti sbb pusha das push inc out fwait mov inc js xchg pop mov xor popa cmp ror (bad) mov fnstcw test negb or fistp and and pushf lods xor sbb stc jo cmp add push sarb (bad) into loop inc xchg fiaddl mov jge aas fsub add mov fsubrs out lea mov loop cmp hlt dec mov jno mov data16 arpl cmp icebp cwtl insb adc and stos xchg pop jmp not pop ss sub fsubs ror aam (bad) jb out shll jo xor push fbld leave sub and push xchg sahf cli mov divl scas jecxz pop adc inc inc clc xor jle outsl sti movsb dec push ss cmpsl int xor mov sbb je push std sbb test push mov bound cwtl addr16 sbb push lahf fmuls andnps out jbe xlat and xor pusha or jne jo lock nop adc (bad) jmp mov dec pop xor dec mov mov or xchg dec xor out mov xchg sbb push inc inc mov rol lock fdiv insb loopne test movb ss xchg push test and call xchg lret aas and leave add js mov jae or jle cltd sti adc push sub sub aaa out jmp push cmc mov or loop and adc xchg and test test or das aas dec jae jo fiaddl dec mov mov data16 and dec or into or dec pop sub add pop sub cmpsb andl mov cs (bad) mov into insl push jecxz mov ljmp sbb div (bad) ret mov out popa sti add sub or outsl std pop jle pushf jae pop es jns popa (bad) out xor push lret or sahf add inc in aam jle data16 test push inc mov inc imul lret sbb (bad) push daa cmp jnp ja pushf cmpsb pop push lock and jmp int lea jl xor (bad) icebp jbe fwait adc (bad) adc sbb enter scas stos stos popf in jl jl mov mov lret sub (bad) sti sbb (bad) jg out adc adc push out xor lcall aaa insb adc bnd sbb aas cs pop and xchg mov sbb sti js inc push mov aas adc mov cs and lods jmp push mov pop rep or rolb pop (bad) mov lret jnp sbb sub jnp push jns mov in mov out or daa sub xchg add mov mov (bad) and mov fnop fnstenv cld mov mov mov aad bound test into das xchg or or and test dec sub repz nop jb jne lcall xchg scas int jl jmp pop lret (bad) jle adc push jne dec cltd mov iret fstpt fidivr jg rolb add shr jl jl inc xchg sbb cmp psraw cmp bound (bad) fdivs xchg int and aam lods mov repnz (bad) (bad) jmp repnz push ljmp icebp lahf mov mov xor xchg frstor scas dec scas pop push xlat cmpsl je dec test out sub pop (bad) jo,pt adc xchg jmp test adc les cmpsb jns cmp jmp jo fdivr outsl xchg add out cltd popf inc sti inc push and jmp mov cmp sub jmp cmpsl sbb arpl aam in mov enter lret mov scas xchg lret xor adc xchg pushf pop cmpsb mov shlb sbb ja pop and jae cs adc adc (bad) mov nop cld ret mov inc mul mov sbb out push xchg or insb add daa (bad) or cmp sub xchg sbb add push leave jmp pop fcomps xor test and xor (bad) mov mov ja mov mov pushf popl sbb notb and clc sti mov movsb sub jmp nop fwait sbb pop jg xor pop loop xorb pop sbb sbb sarb addl or xor adc insb adc jecxz xchg out cmp mov ret hlt jne shr lods inc mov in imul stc push sub in das gs outsl jae scas mov (bad) into dec das stos sub mov mov and in (bad) nop mov push lock movsl ds ljmp into mov and inc ss dec push test push ret mov pop popf gs addr16 sub ds aas mov jb xchg fs jne push xchg (bad) adc mov mov in jp (bad) les frstor mov les mov stos sub (bad) leave (bad) aad or rorb push in mov xchg lods add dec jp jl data16 or xchg mov adc pop push fiaddl sahf mov arpl in mov in or (bad) cmp (bad) jae pop (bad) lea push iret jecxz cmp in nop or scas in enter dec dec cld adc or int3 mov test in adc cs xchg and xchg sti mov rcrb cmp movb sbb mov adc into cmp push pop xchg mov insl test sbb mov jg (bad) in popf lahf movsb jmp lcall imul out xor test je add add cmp ret xor push repz pop movsl fs xchg dec xor and mov lcall rorb fiadd fdiv mov popa push push xchg push fdivrl add push test inc dec inc popf mov xor dec push mov insl insl insb fcoml negl stos jne sub sarl or pop xchg or sub es mov push mov cmp fwait jp data16 out mov adc or (bad) xor dec xchg sahf sbb ret into ljmp push mov imull jle xchg subb ljmp inc cmc je mov push outsl lret xchg or mov (bad) loope ljmp (bad) pop push mov sub mov dec adc xor mov loope outsl outsb xchg pushf mov addl outsb (bad) jae pop push xlat or pusha inc mov and adc dec pusha fs jno fidivrl fiadd call sbb insl fisttpll push call notb mov push ret sub fmull sbbl push lret cmc or or call pop imul lret adc cli stos xchg push adc ret outsb xor test (bad) pop dec scas dec mov or mov sub fcomps mov jg fmuls daa loopne es sub sub xchg mov adc test int3 mov fldl lods dec push mov jbe inc outsl xchg adc inc fisubl scas jp cmp sarb les (bad) out leave cmp cmc sbb mov cmpsb fidiv pop pop inc (bad) (bad) jnp push mov (bad) lock ss xorb and test push pop cmpsb dec mov inc jbe jmp pop lahf jp mov mov add insl jne hlt ret decl jnp mov loopne in ljmp daa out xorb sahf xchg or loope xor je fnstenv sub insb int and fcoml ja and inc push mov adc mov popf jae (bad) add rolb adc sbb mov cmp je es ss pop loopne cmpsl pop loopne cmp dec add dec push mov int ret dec add pop (bad) push mov xor jge push dec in es lds aaa jp cmp sub call cwtl pop pop add inc rol cmp adc push dec mov ljmp clc arpl incl sbb adc jl push xor lcall mov jl adc fs mov and cwtl mov in or int lahf mov sub push sbb xor scas lods callw adc mov push into sbb pop mov sahf stos in cmpsb leave jne iret call push pop aam mov rolb pop mov lds int xchg jmp jecxz,pn mov (bad) or pop cmp add fucomp enter int jge ret jbe (bad) and enter scas jmp loop std pop scas pop mov fldl insb in test ds pop and lods ljmp leave repz push out movsl into (bad) jns loopne adc mov mov loopne sbb test push mov mov mov push cwtl mov sub dec (bad) bound dec mov fadd pop arpl ja aas sbb dec mov mov xor pop aad push cltd lea loop test pop inc dec adc cmpsb inc je xchg sbb test (bad) lock cmp mov pusha call cld rclb push hlt pop jmp lods sahf stc out jp adc xchg rolb sub enter dec das inc pop inc and xchg sbb lea test mov jmp xor aam or pop addl pop imul lcall jp repz dec jae xchg jae fcompl arpl dec hlt mov inc scas mov dec or fcmovu lret xor mov xchg dec call inc xchg mov in jbe xchg add icebp pop adc insl sub mov repnz sarl sbb cwtl es mov pop mov mov jnp xlat inc mov test sbb jne push hlt out or sub stos inc cld dec add mov xchg mov in pop inc inc lret ljmp fdivrl jne out das addl stc jb or test push out outsb cmp add mov sbb xor in sub fsubp or in adc ds dec int3 cld out lods sarl fs out adc mov ret bsr testb nop fwait and mov sbb mov add aad dec cmpsb sub jge cmp jg inc stc dec xor ret xchg movsbl test movsl sub ja aam xor (bad) aad mov stos pop leave in add jnp xchg mov pushl xchg clc enter inc lods ss jg mov sarl icebp out daa cmp mov adc clc sbb fildll mov pop out (bad) dec sbb pop cmp jno mov or jl xchg lret push pop pop jl sahf jno push in dec push cmpsl mov inc ficoml xor inc inc jecxz imul sub inc pop jb sbb sub add test mov js lods je test mov test ja sub inc cwtl mov cmp mov ror call lret pop and xchg xlat lcall pusha mov cmp xchg outsl bound lds and sbb push or in cmpsl jo or add mov leave mov test jg cmp (bad) sub inc jne data16 pop cmp sbb add cmp jb aas and ficompl loop mov dec inc jae fs cmp mov add lret and push repz lods int3 jg mov (bad) jle jb add movsb daa cltd and data16 test or insb add and and lods loop hlt add xor lret (bad) popf in out mov xchg mov sbb punpckhwd dec cli sub rorb loop push lds sub (bad) fdivp imul icebp rcr mov dec jg push (bad) (bad) jne jmp test and add gs in pop scas (bad) repnz imul int3 jno test stos pop inc xchg sbb nop inc and lods or int3 adc ror cmp (bad) aaa mov pop cmp ret addr16 add les orl push outsb (bad) cmp mov into fimull sbb lods inc and inc lods mov mov fstpl ds lahf (bad) out cld ja ja adc int in pop (bad) cs std js sahf call xor bound aad xchg cmp fidivr push mov das cmp mov push mov push xchg mov xchg test insl arpl push andb mov sub test push imul and lock push jae cmpb xchg pop mov pushl (bad) lods dec inc mov inc jbe mov mov sbb push push fwait pop in addr16 push push aaa (bad) sbb pop add adc icebp test jmp insl aas dec bound repz sarl push out (bad) xchg dec xor ljmp shr fsts xchg jne push jl push inc cmp dec dec cmp movsb dec std mov adc fs mov jl sbb fdivs xor push repnz orb sbb sbb ss repnz and (bad) cmpsb mov ljmp or mov jbe (bad) movsl mov xchg mov adc adc mov sbb jb cltd pop (bad) sub mov movsb cmpsb rol test pop dec mov out inc cwtl lahf (bad) xchg inc loop test fwait jmp xchg enter xor popa dec in es (bad) xor testl test pushf clc jns or push adc mov sub sti insb pop test pop mov ljmp ds mov scas add pop dec push ljmp dec lahf ds jge or mov shr test dec sahf pusha mov push ret out lea pop scas inc imul sti sbb inc mov xor sbb mov ljmp pop in adc inc ljmp xchg lret insb xor pop into xchg incb inc sub pop add test or lds repnz gs push mov push out sub mov fisttpll outsb mov daa mov (bad) jne mov cmp loopne jge jge fs adc je inc or nop pop out mov add hlt cmp push insl xor push getsec sahf vmptrst mov ret adc leave jg outsb push ds mov out icebp push test dec out inc pop sbb mov out (bad) inc pushf cmc fucomi movsl arpl mov mov and pop mov repz inc mov fs stos out enter cmp out inc sub (bad) mov imul mov leave ljmp ja xchg ss imul inc inc (bad) call pop and mov es cmp scas dec pop cmp inc mov sbbl loop cltd pusha inc or jae mov push mul fcmovne jne mov insl ficom jne xlat in sbb lret adc adc cwtl rorw test pop jae adc pusha (bad) (bad) fimull lahf xchg int3 sub (bad) dec pop cli fistpll enter fwait sbb jae jns ret jo (bad) cmp sbb arpl adc rol or aas fisubr sbb aad cmpsb ret loopne add imul insl lea fwait ss stos inc jne outsl mov shrb jl dec mov push lock push mov gs ds adc jno insb mov mov cmpsb mov jl rcl gs sbb push daa push arpl jp mov mov xchg aas pusha dec push dec popf int (bad) jo push pop sub lahf add cs pusha dec push cli js (bad) icebp push lret push xchg out (bad) xlat ljmp jp int popa ss imul aam add jg fnstsw std in testl mov pop mov ljmp push push aam xchg and push nop mov fnstenv sub imul cltd xchg popa cmp or fisubr hlt cs popl cmc cwtl pop stc cmc mov adc gs mov mov sbb lcall mov (bad) sub mov jb int push sbb fadds pop mov mov ss push lods mov sar dec aad xchg cmp mov scas addr16 sbb push add and jg xor sub loope lcall add mov shlb push addr16 daa and jno mov movsb adcl jg sub pop repz loopne mov loope fldenv cmp orb add or sar inc xchg shll fldcw test xchg xor push mov fldl mov pop jne xor cmp std fdivs mov push jne jbe icebp pop xlat test or xor in inc lahf adc addr16 mov and and jno,pt fisttpl ds fiadd jle ljmp pop sub insb cli jge in xchg data16 push pop imul js pop fwait aas (bad) aaa cmp mov xchg dec mov sub sbb stos dec sub pop add xchg jmp mov inc xor mov pop test or add jp and xor pop inc cmc lahf inc incl loopne stos jge sbb inc rcrb sbb dec mov es mov outsl xor (bad) out arpl lcall adc cmp outsl xorb test cld mov in addr16 dec scas pop bound dec dec (bad) fwait jmp pop enter jb repnz test scas les or test mov rolb insb push adc and xor inc jl jbe lods and inc jnp sub mov adc dec pop fcomps inc mov imul out cwtl cmp mov and push (bad) adc mov xchg xor add inc xlat mov sub pop adc imul bnd mov mov add repnz jo cwtl xchg or mov sub pop dec (bad) std inc adc add and and push xchg push sub jmp inc ret mov and sbb mov sbb xchg imul cwtl mov jo adc out sti ficomp mov mov (bad) icebp aaa shll movsb out sbb dec mov sahf mov ds jo add test adc push (bad) in lock shrl adc fisubrl out cltd xchg mov (bad) jae cmp xor (bad) cs mov call fs mov test dec js xor xor pop add dec lret in subb data16 xchg cmpsb adc dec sub in test call dec mov std xor addr16 loop dec pop adc scas jno stos andl in mov inc jg push je fisttpll xchg arpl sub stc add rorl cs in pop mov fldln2 test lret mov xor jle cmpsl pop cwtl adc nop add pushf push xor sbb and test dec jle,pn xchg add cmp fdivrs loope in mov jg rorb fiaddl aam mov or pop xor negb out outsb ret int xchg sbb fstpl jmp nop jle pop inc mov movsl dec enter mov pop or jno negb fidivl mov or test mov enter ss popf mov fwait mov sub inc jecxz out out ud1 dec repnz les inc or adcl stos cmp add pop inc dec fstpl cwtl fsubrl xor mov (bad) jbe cmpsb or mov enter fs std jb in xor sbb and inc out into test inc lds inc cmpsl pusha add jb sbb je xchg push scas and outsb hlt dec dec push or insb outsl nop mov cmp in push push jnp xchg lock inc ja insb cli pop sbb in jmp jae in inc shr xchg adc sarb fiadd in aad imul pop ret and mov mov cmp ret lock jne js mov fdivr pop pop idivl ss sbb js (bad) xlat push push adc clc and or stc sub sub cmp pop mov xor enter sarl push push inc pop adc and and mov fwait lret in sbb pop adc aad jno stos pushf xor inc (bad) xlat lea mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov fsts dec cmpl ja stos mov scas ffreep mov movsb and or or push inc iret sahf (bad) ljmp icebp adc cltd cmpsl jae,pt in jg pop cmp gs and mov lcall arpl or imul loopne cmp mov xor jl ljmp imul imul lea rcrl stos jns jmp sbb mov out cmpsb push jl xor and int3 fistpl adc jne imul les mov add lcall rclb jmp push jb add fstp xchg fidiv push iret mov mov negb mov jmp push mov push inc orb std in int or pushf mov call push in into xor and push mov fiadd cwtl dec xorb and jo jge lods push adc test leave into cmpsb int3 dec sub jle dec or out std leave pusha lods cli popf (bad) (bad) cmc dec stos mov pop dec aaa scas ds xor pop mov push mov cmpsl fistpl pop inc pop add icebp sub pop into mov pop xchg add sub pop cmp cwtl out (bad) out scas mov jb pop cld pop int3 add inc cmp (bad) cmp data16 pushf push add (bad) rcr iret adc push ret jecxz cmp inc and stos out sub rolb insl xor xchg cli pushf movsl pop bound inc mov test jecxz jecxz pop dec add hlt sbb rcl or dec sbb push sub mov inc repnz add rclb push jo mov jns xchg cmpsl push add or stc adc pop inc stc dec cmp cmp inc adc std cli add shll stos in cltd (bad) fldt xor loop mov mov out and sub dec in sti jle pop add stos sub cmp repz pop push aaa lret mov repnz mov jg std inc cmp int or xor icebp lret (bad) arpl repnz (bad) dec ficomp (bad) repnz mov bound xor xor scas jo cmc fxtract jae jae adc aam cltd mov mov movsl push xchg mov pop sbb push inc pop rorb aam (bad) adc dec mov cmc mov cmp ficom lret enter jp jne inc ds out scas pop test pop push mov mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 das popa rcr adc addl sbb jl push andl rclb mov lret adc insb push push mov aam jo les mov gs and pop repnz shlb gs sub notb in mov inc mov in and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov fsts dec cmpl ja stos mov scas (bad) mov movsb and or or push inc iret sahf (bad) ljmp icebp adc add lods adc int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 mov fsts dec cmpl ja stos mov scas dec mov movsb and or or push inc iret sahf (bad) ljmp icebp adc fbstp fistl xor push mov call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 das pop rcr add jb in mov iretw pop add sub int lahf scas sbb icebp mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and out sub insl aad mov inc inc pop sub push in aam outsl (bad) cwtl out in xchg mov push test sbb movsb stos add xlat jo mov and and psadbw addr16 in and addr16 xchg mov or sbb push lahf popa into aam cmp mov cmp push push stos roll repnz push mov std daa popf mov push gs xchg xor out repz lds xorl lods lock loopne fimul sarl addr16 cmp or in jle cwtl push int3 jbe dec jmp push movsl or es inc sbb or ret mov add inc and or pop jns or add (bad) fsubrs jecxz sub adc incl rcr xchg int3 mov or lds adc xor cmpb ffree xchg inc pop jmp sbb mov sub push int3 jle inc stos (bad) es loopne push aas dec arpl push xorl or sub push lods bound jle cmp movsb stos inc popf jno incb cmpsb jmp mov mov mov cmp jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aam sub xchg sbb orl jne int mov arpl xchg addl mov inc mov pop int3 negl mov inc (bad) test sub cmp jae pop lods lcall mov xor and dec or sub int3 int3 int3 int3 int3 das popa sarl sbb xchg stos iret cmp cmp mov pop cmp fwait cmp push lret add fistpl mov movl movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 das fnstcw fwait inc insb fistl out ja cmp fsubl fisub inc add mov and dec fcom cmc js xor cs cmc pop fs and (bad) negl jno add imul cltd int aad sbb cmp mov negb dec lods cmp mov jns or cmp lods mov in push add dec (bad) (bad) dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and out sub (bad) sbb and sub cs aam mov jp outsl call (bad) ljmp icebp adc cltd pmuludq fisubl int3 and (bad) fldenv fnstsw jno cltd das data16 pop push pushaw test (bad) into out pop mov inc and imul xchg das sahf out cwtl cmp dec jns outsb mov fsubs jge outsb and mov rclb stc pop jo iret dec outsb sub ss add outsl jecxz cwtl lds mov add popf sub jnp aaa rcrl add inc (bad) in fstpt or in mov lock aad test cmp xchg popf sbb iret pop pop sbb sbb sbb cltd jmp ja add or inc mov inc push xchg jmp pop adc xor push and inc movsb adc mov xchg out loopne cltd mov pushf cmp and call jg (bad) sbb mov rcrb iret sub std dec pop or mov lods ja xor mov and pop fwait mov (bad) fcmovne add jb pop data16 jae rcrl popa imul pop hlt jp lods fnstcw inc repz mov in enter mov (bad) dec cs and rorl aad pop dec adc aaa pop ficompl dec lock cltd pushf mov ret push xor movsb je mulb push inc xor mov lcall xor (bad) xchg movsl loop sbb cli addr16 ljmp sbb cld sub mov xchg aas daa jb test (bad) (bad) push out xor jl add fdivl nop or push xlat pop lret xor lods mov add pop repz into test push mov pop mov jp xlat (bad) mov sbb mov inc outsl push adc cmp sti movsb mov mov sti inc push icebp pop popa arpl and leave in jns orl mov kaddw dec add adc fnstenv jnp sbb data16 xor scas jg push sub pusha mov loopne pusha xchg clc sbb aam outsl mov push sbb aaa stos ds cmp out xor test aad stos xchg xor in sbb iret test and imul lcall xchg in and push sbb mov jg fimull xor negb jp int3 pop inc clc nop std ja push dec daa and cmp rorl push jne xchg mov jnp call popa dec cmp icebp cwtl inc cmp scas in add add sub mov pop insb scas or movl dec add sub sahf pop jg add in add int3 test cmp add lock pop mov lods stos mov cmp add lcall lods std jne xchg dec jle sahf and bound sti (bad) rcr push xchg jmp ds cmp nop jne,pt push lods sar aaa out fwait test in int3 fiadd sti sbb inc adc jp xor or popa into pop ror or lods pop jg adc adc aad add cmp xchg orl int3 adc add xchg and cmp dec xor pushf add addr16 gs idivl mov cwtl inc daa dec fistl or or dec pop mov jo cmpsb sbb and movsl push imul shrl iret pop cvtdq2ps dec imul out into jp jo jbe sub iret sbb cmp enter dec jp adc sbb xor or repnz inc ss cld xor fdivl or mov iret push mov fdivl xlat mov fisubrl xchg jle leave sbb (bad) jne call popf xchg inc out dec jcxz test test loopne daa mov fs cmc push mov adc lods mov mov lret mov mov sbbl int3 into cmp xchg xorl add push enter (bad) dec leave xchg (bad) es mov xchg jmp jb lods pop paddq lcall push mov mov push js cmp rcrl das and pop lods adc mov and mov addr16 push sub push xor insl inc repnz int3 dec fwait xor into add outsb push repz or mov fcom sbb std dec ja jmp jl sbb cmpsb repnz cmp mov repz mov cmpsb aad and mov and sbb jo arpl testb dec out mov dec jg or sbb and sub sbbl (bad) arpl lret lods ret popa push sub mov dec jne mov test mov loope lret jns push or leave out xor cmpsb jns push (bad) adc push sti daa mov lods mov mov push dec jnp (bad) inc xchg xchg decl or mov out or dec cmc stos add mov insl mov add aam sbb std jo bound fbstp adc into cs lods outsb aas dec xor jae loope scas imul aam cmp xchg or pop clc mov jp and out daa xor repz lret mov mov push adc jno aaa pop mov or sbb fs data16 ja xor je test clc mov ss in (bad) ret scas (bad) xor add cmp mov push das mov push mov mov daa (bad) aaa roll cli cmp movsl push lahf repz or (bad) ret movsl in jmp xchg outsl test sub mov and dec gs or mov ret mov and (bad) lcall cli jo aas mov or dec inc jns pop cmpsl sub and (bad) mov jl repnz sub inc call js or inc ror sahf insl fs xor (bad) out ret jp pop jo bnd adc xorl jecxz je fmull xchg jle jge pop andb push adc stos xchg roll dec sub popa into arpl sti adc out fsts fsub outsb repz lea push repnz call out fsub mov add dec enter sahf and jbe insb (bad) jne push jmp (bad) loopne push je lcall (bad) mov inc data16 adc xlat (bad) rcr jo es rol jno and in cmp pop mov jecxz out or imul ficom mov dec sahf test cli scas test fcmove xor fbstp push push into in inc int lds pop xchg push jo aad add (bad) daa push sub inc sbb cltd out in std pop bound in push jmp cmp (bad) xor mov pop or les popaw fsts mov popf cmp repz cmpb hlt mov mov mov mov jno and shlb cmp pop (bad) adc lea rorb andl mov sub int3 enter pop add mov les mov add neg ja imul pushl jb out repz popl inc and xlat sarb aam push into cmpsl out jmp outsw xrelease js jns idivl rcll (bad) daa ret xchg pop push sbb push inc in xor sbb add daa fsubl xor dec (bad) jge fldenv sbb aas inc lock in (bad) aaa mov dec aaa adc adc and shr cmpsb addr16 dec int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 daa mov add int mov inc xor fisubr pop mov out dec (bad) cmp aaa (bad) cltd and sub xchg xorb in sub pop into push outsb jbe mov pop jno cmpsl xor clc xor push cld dec cmp pop clc cmp rcrl inc and jb mov or mov and mov bound xor adc bound add sbb mov mov add movsb stos loope scas test pop (bad) jnp lods fs and or das mov cmp ja repz push sub movsl cmp (bad) repz inc nop or mov fsubl (bad) cmp lret xor (bad) jb or or imul jmp push icebp scas popf iret or repnz repnz lret mov xor repnz and add out das ss cmp and pushf test ja arpl movsl stc sub outsb push jp xlat movsb cmc or mov jbe loop test ja cmc adc test xor test pop mov cmp xchg pushf jno out push adc and or rcr mov fs mov aas jmp push jne mov add mov hlt je mov lcall pusha pop (bad) or in aaa lds jmp in cmpsl or sbb cmp pop xor adc and nop inc ss sbb bound imul enter pop sbb and decb add loope cmp movsb mov sbb sbb pop je mov xor in cvttps2dq fisubl scas ja pop mov lods pmaddwd xchg rcr out cmpsl in (bad) jbe dec std bound test xor adc movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 das data16 cwtl sub dec aas mov jecxz inc inc lods mov inc outsb out adc cmpsl in in dec popf mov sbb insb addb pop mov inc lcall inc popa fistl xor test jo (bad) lods out bound lahf xchg sar lea aam lea push cmpsl jns loop inc and jg insb cmp (bad) inc movsb clc int jns xchg fnstcw pop sub bound cmp in incl addl (bad) mov jns sub push fisubrl cwtl les inc dec call notb xchg shll add pop and fimull sbb push cmp mov push shr daa cmc sub gs clc cli sub pushf mov movsl jge test mov mov addr16 mov aas or in pop in lret (bad) ljmp iret imul scas (bad) rcrb fimul dec aam (bad) and mov clc aas push mov and inc repnz cld fidiv xor fstps fistpl push push cmp loop push xor ficompl rcl stc and xchg addr16 jbe test popf js ss push aaa xchg sbb and or lret or lahf push mov stos nop inc jl insb or push aaa decb jo adc dec inc repz aam xlat mov js into sarb adc lods sub or push test int3 popf lahf sbbl insl and arpl cmp das mov jne jno push xor hlt push popa xor mov push (bad) dec xor in cltd mov flds pop mov dec stos and and sbb pavgb dec outsb nop xchg jo fwait jg pop xchg push and push in hlt out mov push movsl insb dec insl or pop mov and sub push adc xchg into mov orl (bad) cmp mov jno inc cmp adc sbb xor fcoms test into dec add test daa (bad) hlt jbe cmp xchg adc xchg rcll cmp push mov dec xchg adc cmpsl cmc xchg stc add outsb jecxz insl jnp mov push (bad) xor xor mov add std imul mov cld (bad) pop and cmpsb pop popa xor movsb mov mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov fsts dec cmpl ja stos mov scas outsl ljmp jo movsb and push inc iret sahf (bad) ljmp icebp adc mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and out sub insl add jge bound mov pop clc cmpsl mov ss bound xor cltd mov out out fwait xlat ds jb in popf xorb push lock cmp push (bad) cmpsl loope arpl adc mov inc cmpsb and mov add xor repz mov icebp mov jns jbe movsl xor sub adc cmovns inc xor jle (bad) aaa (bad) xor push cmp sbb xchg lret jmp sub fistpll call cwtl xor lods lret aaa lea jae adc fs xlat bswap jl cld push pop in je mov cmp ljmp jns dec cli ret jo cwtl testb xor (bad) scas stos push pop push dec inc cmpsl push pop nop stos cmpsb (bad) xor jl pop addr16 sbb cmc xchg adc inc mov push mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 xlat je aas mov repz inc adc frstor xchg xchg inc mov movsb inc push lcall in xchg mov inc adc and add and mov and or jns inc pop cmc mov xor mov clc mov jo sti (bad) mov dec dec outsb scas out ljmp addr16 jbe rcrl push mov insl in add push add jmp and out jo imul lsl cmpsl scas push aaa cmc hlt xchg mov adc push in xchg clc sti xor cmp inc mov lcall push dec adc mov iret aam data16 push push fs dec cwtl or jg dec push add popa nop pop aam lahf sbb (bad) hlt lret div adcl xor or push clc inc mov jb pop pop xchg jmp adc pop inc hlt lret mov sub test push push and pushf mov das nop sub pop into dec js pushf mov jecxz add test dec outsb pop (bad) mov dec ljmp (bad) xchg arpl add fsubl sub dec push xor sbb (bad) mov aaa cmpl push add jmp and insl pop lea jp fwait imul lret jecxz enter repz js xlat hlt out test mov sti (bad) aad pop test push mov sbb xlat cmp cwtl cmp das add fsubr in sub cli andl imul jo push mov inc imul mov xor leave or mov mov adc jbe adc shr iret jne movsb pop sbb add jae jge xchg xchg insl movsb insb fldenv mov lds mov or sub test (bad) xor or push inc xchg dec (bad) cmp sahf push sti sub std aas xchg inc mov and in push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 fldt xor int push add scas (bad) daa pop xor inc cmpsl mov js lods xor mov bound shll out push out sbb mov sub pop fcoml test ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 aam cmp scas add ljmp xchg and sarb or loopne (bad) push inc iret sahf (bad) ljmp icebp adc in and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 daa mov fimull dec (bad) pop aaa mov mov jp cmpsl pop adc pop jge addr16 es ret std xchg lcall pop cltd data16 fcmovnbe jae xor pop sbb outsb jo sbb and mov das sub into or xor pop fmul mov push jl (bad) aas xor sub xchg fwait jl aad pop sbb imul adc (bad) out ret sub or mov mov std mov and into popl and popf mov sbb cli inc leave sub jne iret xchg lahf enter lcall xchg pop jbe mov sbb or ficoml and mov cmp cwtl cmp push into xor and int3 icebp loopne fs fs andb (bad) iret inc cmp mov xchg jg popf cli mov ja in push out and mov dec (bad) mov imull hlt sub mov xor xor imul daa add fs sbb cli int rolb sbb sub int3 cli cs jo mov icebp adc xchg jmp push cli add leave and scas notl incl (bad) mov in dec sbb fcomps lahf jo push jecxz out lcall gs (bad) out addr16 je int (bad) hlt popa or mov jle out add mov push movsl or ret xor insl (bad) stos lea xor mov pop jmp xchg mov push mov push push sub inc and or push or adc xor sbbl and cmp cld or insb in jb and mov sti xchg dec add xorl clc and bound in pushf pop pop xlat jmp cmpsl lods cmp repz add dec in rolb inc insl mov sahf lods pop jnp scas in sbb lahf pmuludq sti lcall add in cmp add test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add push pop es imul out add mov sbb daa and push scas sbb pop and push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and out sub (bad) cli xchg mov xchg pop out mov jp lcall addr16 or test (bad) sub cs sarb push push mov shrl gs into add dec xor aaa in mov adc mov pmovmskb or push fstpl insb or push mov mov push lods add dec dec mov sub jg (bad) pop or mov cmp sub cmp js push dec cmc clc sbb fwait mov aam push test cmc test mov xchg loop xchg out dec inc cmp (bad) (bad) jl out pop std js xchg dec pop fnop lea rorl nop cmp movb mov lret ffree pusha fbstp pop bound xor js xchg (bad) into sar mov dec sarb in add mov dec stos add xchg out cmpsl ljmp in and ret push cwtl mov jp cli jae int sbb (bad) cmpsl cmp and push mov and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and out and (bad) push addb push mov mov stos in mov push mov out lret dec jae out (bad) pop lret in jg push adc stos cmp jle xchg flds (bad) jne in and mov xor xchg push repnz ds ja push mov add stc imul adc les mov lret clc adc movsl add outsb stos lahf push lds cmp sarb xor (bad) ds mov lahf test mov insb out sub sbb ret jl aam lret xor add sbb clc rorl cmp cmp repz sbb push mov inc jge and sahf gs sahf xor push test xor fwait (bad) imull sbb adc ret imul fst in (bad) imul sub dec les in pop add and xchg push lea xchg stc sub ret xor push mov xchg dec outsb les ret sub pop or icebp imul jp xchg jecxz flds mov or std sub scas adcb lcall mov xchg idiv sbb lcall popa decb or adc sbb arpl sub (bad) cmp cmc in popf and insl lcall sub data16 xor sub pop sbb and (bad) pushf dec sbb in or dec adc add pusha mov sbb and pop (bad) insb cmp sbb mov jae adc insl add (bad) (bad) adc fadds pop nop shll test inc pop popa xor cmpsb sub mov mov or std out aaa jmp jge icebp js jb pop cmp addr16 pusha jb dec push mov adc test adc outsl jge fs (bad) dec sub xchg fadd xlat mov mov and je sub mov push mov dec cs data16 mov insl cld scas xchg add and (bad) int3 cmp sub xchg push arpl repnz inc fldl cld mov lret add in and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 aad and out and outsb aad (bad) pushw stos jns push or jo loopne adc mov clc mov pop fwait mov out xchg xchg push cltd xor daa daa add movsb cltd ljmp scas stos pop jmp je shr adc push cmpb push adc mov cmp add std subl mov cs out adc mov sti fimull call call mov xor loopew dec sbb pop fmull and ss dec sub jne (bad) notb sarb stos mov rorl in xor adc push push cli xchg lahf out enter in enter lret lds pop jb xchg xchg or mov dec (bad) mov or call test stc (bad) sbb sbb dec (bad) mov inc sahf or mov and arpl adc sbb test xchg or mov imul leave mov and pop scas adc ss aas or push and hlt push push (bad) mulb push dec into out dec lds iret pushl adc in push xchg jo js ficomp push lret (bad) jb add in xor jns pop scas jbe xchg popf mov out push pop mov or sbb push pop sbb xor daa fistl ret out adc imul fcoms cmp jecxz push xchg mov inc aaa mov shlb mov cmp mov dec cmpsb fmull push imul sbb loope xor dec out rclb dec or scas sbb sbb mov mov pop push push int3 adc lock (bad) mulb sbb pop pop jle cmpl jle cmp xchg ds sub push jb cmp mov push sbb pop xchg (bad) sbb in cwtl cmp in jb pop scas and xlat mov cmp xchg adcb ss in movb hlt jmp ret inc push int3 ret aas daa test push lahf shlb mov bound (bad) imulb movsl scas iret (bad) pop ds out std repnz jl add insb mov adc repnz xchg jmp movsb push mov sub pop xchg cmp cmp pop nop xchg mov inc sbb add xchg xlat sub pop arpl call dec jge leave hlt dec add xor gs push outsb cld jno in or push fistp jg xchg jb jecxz add xor loop add mov stos sub ljmp adc cld sub jo popf adc jno arpl cmc inc sub cmpsb adc xor mov xor je inc fisub movsl cmp aad imul inc adc mov pop imul pop es xlat jp lods outsb sub xor ds dec mov sbb or mov ja dec sbb or ja test push adc repnz mov adc mov dec movsl inc insl stc stos std pop mov (bad) xchg aad push (bad) daa push add mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and out and (bad) push xchg es cmpsl pop std inc sbb lds cltd ficomp sti lret jge gs xor jne (bad) and and hlt movsb lcall jae dec adc jp xchg loope jbe xchg add sahf sbb xchg xchg sub or sbb out jae add (bad) iret jmp ljmp lret or imul xlat pusha jno int outsb stc aad and addl test xchg jge xor inc mov or mov arpl jnp pop out ds or pop and or sbb cmc (bad) and and mov and in mov mov push in push stos arpl push jl jne mov or addr16 pavgw (bad) jo cmp loope sbb sbb and sub loop add mov mov pop inc bound repnz jecxz xchg fdivl popf fist adc in mov mov repz leave bnd push ja or in dec or xchg cmp cmp pusha push cmpsb lcall mov lret lds mov daa scas jo (bad) movsb dec pop lock xor out (bad) int3 pop fwait idivl sub push cmp and cmpsl pop lahf adc int3 int and sbb loop mov std in jle loop movsl dec subb leave repz imul pop cmp rcll dec mov aaa dec or push stc jle mov sub movd pop pop xchg push jmp mov loopne lds sub xor sbb lock and cld mov and mov xchg push push sub adc mov std leave (bad) and int mov xor insl jge mov stc xchg rcrl das pusha adc data16 adc lcall cmp cld cmp cltd sub addb jg inc cmp mov scas and aam ss lcall inc and test mov dec pop or roll jae sbb adc dec jne jno and imul xor lea pop std or lret fiaddl imul lahf insb shrb (bad) fwait cld inc lods adc mov gs leave test outsb mov push mov cmp nop cmp iret ja xor pop rorb cmpsl jno scas sbb jmp lret pop cmp dec push inc xchg xor addr16 fsin xor dec jbe dec bsr push cmp add dec orb enter sub mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aam inc inc repnz pop and jbe popf fsts lret cs jb sub outsb mov leave fwait and cltd push (bad) lods push lret bound mov xchg js cltd inc cmp and xlat or push ja fiadd mov fsubs adcl les inc push in lods sbb mov popa jl mov jae gs and inc inc pop inc sub pop push add cmpsl push mov cli jg roll mov sbb cmpsb inc pop leave xchg jge mov out mov adc jl movsb out les jecxz dec mov sbb xchg out mov outsl xlat sbb push inc mov (bad) cmc sub imul (bad) push dec push inc push mov mov jne cmp add push sahf sub ret or je mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 das jbe push push push push sbb inc add push mov test jne call test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 imul lret push mov pop adc les mov jno inc ljmp pusha mov out push std (bad) and mov sbb cli push movsl das gs clc test mov dec xchg ficompl mov fisubrl xor pop data16 dec insb (bad) mov sub or push mov push push push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aam jae dec cld or pop or jl mov sub mov xchg pushl pop xchg dec sahf jbe mov mov ds mov cmp xor xor cli pop jg sub dec adc sub or push fldenv stc ja adc ret and add cwtl add repz xchg inc push stos shll shlb int aas pop cltd fidivrl dec mov iret std dec pop lahf inc int addb fadds (bad) adc out mov outsb sub and jne fistl sub push inc xchg mov mov inc jp,pn xchg xchg xor jnp mov push aad mov sbbl (bad) hlt jmp jb xchg sbbl mov pop sub nop mov xchg les xchg mov jae (bad) mov inc xchg cmp push mov dec sahf dec push and push mov cmp outsl jmp subl lret push test inc or dec jns jb iret (bad) daa (bad) icebp sub sub jle mov pop js push xchg xor mov inc xchg push pushf je pop (bad) ljmp jno jb sti hlt adc mov jl adc jb sub popf jle adc loopne xor fsubs aas inc enter add das mov dec jns xor dec lock cmp (bad) je sub je (bad) inc jae fs das sbb mov notl mov sub sahf sahf jmp aad call clc sbb dec cmpsb xor ja push mov xchg gs sub and stos cli lcall jae pop cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 aad and out sub test shlb fidiv in mov and push mov inc add out push jmp ljmp fwait add das cmp mov out and push notl mov mov push adc imul sub mov jp and cmp add cmp jecxz sub dec scas xchg movsb dec or imul ja xchg addb in nop popf jb std add bnd fcomps pop das insl outsb xorb jb bound test lock dec fisttpl (bad) cmp push sub cld dec inc mov mov jmp sbb in jmp lock ret inc mov dec call cmp fnstsw mov xor fwait add or fs inc jnp pop cmp (bad) xchg push aaa pop scas adc push nop jp dec or into adc popf sarl mov inc push int3 loop stc (bad) jne in and jne mov sbb int3 dec jg fsubrl arpl roll mov (bad) adc insb push mov dec mov or lods mov ljmp test and call mov call inc push dec jns jle and mov xor xchg or jns (bad) cli add ja xor subl cltd mov xchg fwait sarl cmpsb rcrb mov gs in pop pop jg std jecxz aad rolb sub pop jo add sub jle outsl mov xchg nop gs pop mov cwtl rorb push je dec inc ds pop pop adc setbe or mov int3 fldenv test push mov and mov jle test xchg (bad) cli cmp xor push imulb popf out or imul xchg sub jnp sub jo fnstcw repnz cmp mulb adc and pop lods data16 mov mov js mov jo adc push (bad) xchg push push mov scas xchg pop mov mov mov ret cs into out pusha sti sahf fstpl test gs cwtl or mov mov lret jno lret jp les sub in xchg mov cmpsb fldl xchg xlat dec sbb outsl sbb jno jg adc int3 cld add inc mov in pop sbb js loope sti gs fildl jbe mov adc mov adc lea adc lea adc mov adc lea adc mov adc mov adc inc and cmp je cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc mov pusha fisttpll nop fbld bound test sbb jns mov shrl xlat outsl ret out lcall lret sub sahf push dec xor xor jne xor in and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xlat das adc push cmp imul (bad) jae push and and loopne inc mov shll sti and fldt arpl lds fstpl lock clc push mov aas cli clc stos jbe notl mov adcl xchg cmpsl inc jg sbb into pushf out jecxz jo enter jg,pt out inc adc mov (bad) jl (bad) or cs sahf cmp js pop mov and push (bad) pop xor fwait outsl mov inc in jbe in dec loop xor dec daa jne sbb roll mov push mov pop arpl js lcall pop sbbl jb or int3 mov mov and gs push fsubl and fdivr insb (bad) push and fstps repz insl addr16 and mov sbb test nop nop sahf xor pop mov adc push jmp test add into xor cmp loopne push mov adc push mov or push js dec push stos lods cmp jge lahf push inc jecxz bound cmp inc out cwtl popf int pop mov popa dec cmpsl pop or movsl aas lock and or sub lds mov sub js adc mov inc cltd xchg or push mov sub insb xor fstps and push arpl push adc int imull mov in test xchg jnp cmp es fisubr sub mov fwait imul fs mov and or not cmp push or (bad) ja fs lods cmp scas xchg lret loopne pushf and dec cmp jg test test test cli (bad) cmp jl dec aam in inc inc sti dec mov push rcll adc add je pop mov mov es test lahf je cs js gs jb cmpsl adc xor (bad) sub aam hlt lds dec push mov lret and jge lods popa arpl je popf and cmpsb ret xchg mov cmp out icebp xchg (bad) roll les shl jp pop in iret pushl pop mov xlat leave mov and mov stos imul jg xchg or inc xchg fcoms sub in add test mov sbb mov mov enter sbb xchg stc fisubr adc out jp in mull and push mov pop ficomp aas leave push add pop push jae fldl mov (bad) xor mulb scas lock faddl movsb jp cmp in mov adc jae push out sbb (bad) scas stos rcl and insb xchg out adc or mov xor xchg imul imul jb repnz lods and mov out sarb add xchg lods sti sbb adc mov pop stos mov movsb mov or dec in sub push dec scas clc shrb hlt sahf jmp insl mov and cltd mov int popf repnz jg push and stos cmpsb (bad) pop ret cs fadds cmp outsl faddl mov inc stos mov lods mov mov mov push dec pusha cmpsb sbb clc xchg dec loope xchg addr16 inc (bad) xchg mov pop dec sbb cmp jo sbb xchg aas pop inc loopne mulb repz push mov add mov cs cmc aad in push int3 (bad) jne jle mov mov sub iret loope fidivrl sti mov xchg adc arpl cmp xor push inc ret dec mov das lcall movsb rol roll mov pop fldenv xchg pop std repz outsb push insb repz imul xchg add leave inc mov dec cmp or cld repnz dec inc or push dec jnp xor (bad) test hlt shr fcoml lcall inc inc mov mov lods mov fnsave mov mov mov add mov add jns mov shlb loop xor in fistpl sub push sub leave jg cwtl push inc and lea pop xor xchg sbb mov repz arpl cltd xor xchg pop sub sarb cltd pop jle leave call rclb jge lcall fimul xor mov add push into pop mov dec loop xchg divl jns mov into xor xchg jl dec and jecxz jne (bad) mov and push fcmovu jnp,pt mov mov inc loope lret movsl scas add sbb mov pop addb stos or jmp xor (bad) and adc bound adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 aad inc dec push cmp add sbb mov xchg jmp stc in fmull (bad) mov mov ds jmp push add adc fisttpl push pop and mov push out gs inc (bad) and xchg push jno,pn scas (bad) push mov bound adc mov cmp je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl ret arpl out outsb sarl jg shlb add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 das jbe push pushf cwtl stos out test jno jl out dec and test xor and sarb pop shrb fcmovbe jae (bad) mov das gs and adc notl mov ret (bad) jge sub daa rol mov sub sbb add imul jns or fild cwtl (bad) mov xlat xchg mov mov push lret add mov inc cmp test mov setno pop mov dec fwait das jmp pushf sbb jl and mov cmp jbe add pop outsb mov fistpl cmp adc movsb pop outsb dec pushl and iret jae shrl mov es or pop hlt daa sub rcl cmp rcr lods and fwait push and ret (bad) add xchg sahf mov lahf push mov pop data16 into test adc imul andl movsb (bad) dec lea outsb mov iret mov mov mov push push cmp jb jno iret aad pop and xor out adc adc nop lret aas movsl (bad) cmp cmp inc xchg dec sub lds pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad xchg faddl push sbb scas lock out test test inc mov fnstsw sbb daa or popa ds testb in push push out pusha sahf mov sbb dec xchg push mov in ds stos stc mull je push fldenv lods mov mov jno add lcall (bad) bnd cmpsb out lods lcall cmp cwtl push popa pop jge push xchg inc lods mov xchg inc xchg or add dec sub movsl lods pop ss js pushf aad rorb mov pop cmp lahf mov ja add inc inc and movsb outsb dec mov lcall arpl or cwtl sti inc push sub mov pushf inc std xchg aam jl push mov aad loopne pop inc icebp sub cli ret or add add jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 shrl xorl inc xchg hlt out cwtl xchg test lahf mov or test dec cltd mov xlat (bad) jg into xor jle rcll loope jae int3 jb adc fistl xor mov sub fstpt fildl push adc push in cmp movsb rorb mov pop dec outsw dec and cmp dec push test pusha sub scas mov sub mov jae sbb lret insb test pop mov dec rorb ret push int fcmovnb jae push cmp cmp mov rclb xor and fcompl and and cwtl dec in and sti push mov jp push je sbb dec sbb loopne cwtl lods outsl xchg push mov std sub xlat add mov jle and inc mov imul fimull dec das ja xchg mov (bad) (bad) cs mov out fldl2t add dec (bad) aaa jnp orb mov mov js sbb inc int mov and xlat fsubrl data16 push push sbb xor hlt in inc push jp cmpsb pop das push xchg nop mov inc aaa andl push add pop rorl in or imul ret jnp xor xchg mov xor (bad) pop xchg xlat js adc push mov mov call push icebp push fmul cmp sbb ss xor mov sahf mov ret pop and (bad) imul mov bound cmp lea aas push add mov fcoms scas stos repnz in mov push xchg mov mov pop movups or inc repz and rcrb (bad) or popf enter rolb or sbb adc icebp mov pusha sbb add mov and sar jne (bad) push push dec mov movsl and push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 xlat je faddl push sbb scas call jne ret push es inc out setbe mov pop or mov mov and ds add daa rorb in fisttpl push (bad) pop sbb rorl out sbb fcmove loopne mov incb dec pushf icebp mov mov cmp clc mov jmp jno xor outsb insb (bad) add mov mov sarl xchg sbb es xor pop pcmpgtd arpl sub jne and and cld sub mov jmp int mov sarl cli adc pop fmull jmp and cmp test icebp int3 mov std mov pusha and pop jl fimul out sbb pop sahf sub ret or inc sub add add cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 aad out jecxz stc or and push addb insb sub sub xlat cltd imul sti mov sti lret push bound rorl xor jae add insb cmp cli arpl lods fldt mov arpl dec inc sbb (bad) and out sbb rcrb out lods ja pop and add mov lret cli flds cltd sbb mov repnz repnz repz push xchg xor mov test movsl xor or mov ja test cli out lods inc fcoml jo jmp xor enter or movsb cmp out sahf scas std mov push aad inc pop inc fbld es shrl (bad) loope sbb adc subl mov ja adc hlt cld repnz push js js jg inc lods andl xchg and imul mov adc ljmp jmp cmpl ljmp inc imul jmp mov push mov and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 (bad) je inc cld pop (bad) lret (bad) mov cmpsb sub mov or ja and mov cmp sbb lret xor cmc push xor and inc adc inc or add rolb push cmp sbb je adc mov and mov cmp icebp or adc xchg sbb fisubl xor rcrb inc xchg pop mov xor cmp sti ret and or sbb out mov fdivl pop push sub dec fcmovnbe and jbe nop fiadd and pop pop fnop inc jmp xchg fsubrl mov insb ret shrl xchg pop aas mov fwait cli adc add and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 (bad) je aas jo,pn xchg divl xchg or inc mov mov sarb or test nop mov and push fstpt pop (bad) sub outsl dec or outsl add jae mov lcall out inc jbe push fldenv movsb sub lret xchg (bad) in jb mov gs inc add movsb and (bad) nop jmp xchg pusha in jb outsb adcl scas mov mov es mov enter cwtl dec xchg aaa mov icebp and mov lcall xchg sbb rcl xor pop mov pushf xchg and loop iret cmp inc std shr and pop in sub in xor lcall (bad) xor in push lods ret pop xchg bound cmp jno dec daa fsubrs pop xor divl mov insb add call jmp and mov imull push div lea add push inc loopne cmpsb jle sarb in or sti fidivrl test lock mov inc and and sbb mov das and sbb lret add cmc popf xchg xlat pop lea push jne xchg push inc push lds sbb xchg adc scas iret lds test and loope (bad) loopne cmp jbe (bad) (bad) cmp xor lea int3 xchg and ljmp fnstsw pop stos mov lret xchg jl fisttpl xchg (bad) int movsb pop aas in xchg (bad) jae mov out and iret dec push sbb aad add mov dec jb fistp inc jbe cmp fistpl js jl,pn aaa lods mov lds or out jo loope in adc add lea push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 das jmp ds ja jae pusha adc lds rclb mov stos mov push xchg (bad) lods test inc adc jo clc xor das push sbb adc divl jge sbb push in jb push stc into fnstcw jo push add pushf je mov fcoms cmp pushf or imul jmp cmp mov out test xor jmp xchg das out adc outsb sub ss add jne cltd gs sub and rorb sbb loop shll rcrb inc push js inc cmp stos cli bound out dec cmp sbb fs aaa and lods les rcrl sti fs leave xor in gs and jg repnz daa push push repz sub push addr16 push dec or mov arpl mov mov fimul cmpb call aas xor xchg cmpsb ret popf xchg clc (bad) xchg data16 cmpsb or xchg xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 aad and sbb ss sbb loope jmp iretw pop add sub int lahf scas sbb cmp gs out pop aaa jno (bad) pop iret push push push fcomip das push into and cmp pop mov adcl inc xchg dec pop jnp xchg out std xor adc stos incl into inc mov add repnz jb dec pop cli pusha pop test daa ljmp jle mov (bad) imul mulb push arpl mov pop xor push xchg sarl cmp fisubr jp cmp das and out fistpl or adc or fstp out jo scas mov inc push out fwait leave into push pop fisttpll (bad) mov (bad) lahf mov stos mov mov xchg ja ret push shll xor mov adc movsb and add scas iret aaa (bad) lret lods mov pop add jae dec mov lret imul sub insb fsts (bad) lret mov xchg cmp mov cli push out adc dec pushf cmpsl inc push xor insb fsubl test adc (bad) call imul inc xor test sub lds lock xchg cli daa dec jae (bad) dec sbbl or jae jge sti (bad) or gs ds and xchg sahf push sbb push das cmpsl cmp pop vcomisd xchg or jge jno add adc cmpsb sbb mov jg add add add push pop jne pushf movsl pop adc push pop xor (bad) lods faddl dec addr16 mov pushf mov jge or rorl (bad) dec icebp test sbb pop xchg fs hlt pop (bad) stos jno ret or fldenv mov mov mov js imul pop xor inc xorb and das xor push or or ret sub add stos out pop push rolb adc mov jmp add or jecxz fmuls std lahf andl (bad) pop mov fdivs adc and (bad) popa addr16 leave and aaa xor xor dec call imul add sbb nop push xchg and lods fs popa test mov bound dec xor adc sub sub xchg aam scas push nop inc mov lock stc add dec xor adc push and jmp jns jge pop aad sbb subb mov lock dec cmp or cmp mov or sbbl into lret mov inc sbb push adc loopne adc jb xchg xchg xlat xor sbb ret or and divb jg lds repz popa fcmovb cli inc xor jbe cltd xchg imul scas les sbb xchg cmp jp pop mov add lcall mov das loopne mov push sbb enter push jp cmp leave lret imull cmp cmpsw pop ljmp push sbb sub shl xchg push or cmp lods cmc and out cmpsl inc sub cmpsb (bad) ja mov pop test mov inc mov loope push jg or sbb inc sbb fild cwtl or xchg push pushf inc fbld jge ss xchg xor aaa sub lock divl xchg pop lar mov or dec add sahf mov mov pop cmp dec pop ret adc (bad) adc mov dec imul movsl pop add pop fisubr addr16 sbb sbb addr16 xor fxch cmp pop sub jne xor sub icebp push sub inc fsubs lods xchg mov push fild rolb imul cmp sub lahf in pop loope popa idivb (bad) lea fadds rcl add es jne push fwait test gs std insb xor and jns mov xor mov cmp mov icebp mov lcall mov inc (bad) mov mov loopne xchg push push cs push lret addr16 mov xchg jecxz enter sub push pop pop popf test mov mov inc stos adc clc loope leave insl xor movsb mov (bad) fcomps repnz xor cmp (bad) mov mov sbb (bad) (bad) lock xor adc inc xor inc lahf xchg xlat sbb sti push jo (bad) mov push rol add sti push pop sub pop aad scas sti sub out pop cmp dec push test pop pop sbb dec mov push gs mov sub dec pusha aad ret pop or mov decb arpl out jns popa lods outsb icebp lods orl and adc stos mov mov rcr bound push jae (bad) icebp stos xchg pop (bad) lods gs les arpl hlt pop and fmul loope add sub imul and sbb sti pusha jo das lret mov jbe scas cmp xchg sbb sub loopne icebp fs push adc dec pop cmp insb jle out xchg (bad) add push mov cmp xorl or outsl sbb mov xor xchg (bad) (bad) int rorb mov pop fcmove jae mov loop enter xlat sahf jecxz xor mov clc ret xchg in xlat cs ljmp repz mov in popf xchg ds gs stos mov cmc lea bound pop sbb mov lock cli dec sbb iret stos out sti lods add pop xchg jp ds sarl (bad) pop das repz mov xor shrb icebp (bad) mov imulb jl sbb scas enter ret xchg int3 sub (bad) lea pop (bad) cmpsb sbb mov sti int3 mov sbb fwait ljmp aaa cmc (bad) jge cmpsl lock repz dec push and fisubrl test movsl add pop cld fdivl pop imul cmpsl insb xor dec or jecxz cmp (bad) xchg mov mulb dec out (bad) out shlb adc repz clc or insl xchg (bad) scas add subb push or sahf cmpb stc or fiadd repz pop mov cli push (bad) mov and lock adc xor push or rorl sub dec or push (bad) repz mov jg push scas nopl adc cmp cmc js xchg cmp (bad) std fs fdivl xchg adc xchg (bad) ffree bound ja enter sub and and jge fdivp jb ja ja adc lret adc cmpsl js inc mov mov imul cmpsb subl out jae (bad) or stos pop es daa mov test and push dec push cmp aas pop push scas es inc lret std push pop pop add ljmp dec popf jecxz aad repz es adc xchg fimul inc sbb clc push push adc into outsb test mov jns ss mov fild pop dec cmp aad jae jmp das pop and jmp push adc push pop jl sbb cmp sub out push and add jmp mov sub repz cmpsb pop jno pop ret fldt xchg dec mov push mov pop cmc test loopne or movsl sahf push push push inc out leave sbb mov lret push fs lcall ffree dec or imul es xlat mov push gs out daa fildll pop jle pop pop out (bad) inc enter cmpsl pop decl cmpb mov mov push inc xchg xchg xchg xchg js mov and xor or xchg stos leave mov dec and sbb (bad) xor cs xchg lret or jno pop mov mov scas lret ds mov dec sbb mov out dec or and adc fdivrl ss inc ficom or and test xor cs adc sub mov (bad) mov sarl mov stos mov jge aad mov inc call push and sub push fimul lea jle xchg (bad) mov xor jg pop mov or lods femms push mov fildl mov lea fisubrl lahf jne fimull dec pushf and mov add pop adcl adc jmp loopne fisttpll add jle mov jge stc shlb pop decb cmpsb lahf sub mov scas mov and push hlt jecxz repz or (bad) aam and push pop dec mov push push jb out popf xorl clc ret and cmc jmp repnz mov adc cs xchg adc xor lock sbb sub into sub jb cld ficom add mov stos xchg (bad) sbb add div fidivrl lahf test pop mov jnp mov sbb sbb xchg adc add pop push push nop imul mov cmpsl test lea arpl dec mov data16 push movsl dec cmp jo je sbb aaa push cmpsb add cli xlat jl xchg fidivl add mov adc mov cli add cmp repnz push gs les jbe in cmp mov pop loopnew push push sbb sub fldcw movsl inc push into nopl aas or push adc out (bad) js iret bound or loope call in xor cmpsb xchg test fsubl push das icebp xor and xor jno push mov or lret jb imul push (bad) movsl jno stc data16 lahf push sub sarl addr16 push pop pop or xor out xchg adc jnp andl daa sub addb cmpsb daa pop repnz js sbb cmpsb jg lret inc push fdivl jle sarl pop in sub scas iret fisubl fdivs int3 daa push pop mov jb fdivs lea dec clc dec add test xlat jmp lock or popa xchg mov or xchg sbb ja push sbb loope sbb mov rolb (bad) and lock int cmp mov lahf cmp or xor mov jp movsw sub clc cmc aaa lock mov sahf cmpsl cmp xchg cli in roll repnz push pop jbe mov dec sbb and lret adc push xor pop flds mov push mov xchg fist xchg outsl aas stos and jg inc hlt mov ror xor mov mov push sub outsl mov mov mov std hlt inc sti pop lret push stos cmp jp fwait or xchg in push lods orb lahf mov popa xchg out or pop and adc movsb mov out inc fwait cli pop (bad) cs jmp cld xchg iret sti rorb dec fucomip imul cmpsl mov loope gs mov test mov add ja pop and push jle mov out in fwait (bad) out mov ret xchg lret sbb arpl fwait cmp cmp pop test fmuls int cltd lods sub cs mov xor sub scas cli dec nop aam mov data16 push bound sub jbe lea lcall cmc mov or push (bad) mov jl popa sarb push aas fwait stc adc in notb mov push jecxz pop pop mov and popf pop mov icebp daa and fstl in int xor mov aaa xor icebp (bad) and mov dec and daa add aam cmc ret sub stos insb sbb sbb xor xor shl pusha add cmp data16 mov movsl jmp mov cmp dec rclb mov push jno (bad) mov xor sarb das stos shll pusha mov jp imull xchg daa fwait dec mov iret and add add fiadd mov mov aas push xor xchg pop push sub fstl and adc cmpsb es ja imul (bad) dec lds rcrl scas sub movb push dec js repz push mov jge ficoml mov push xchg inc xor ljmpw nop test orl adc sub mov enter and fcomi mov out add xchg stos sbb jmp lea xor notl nop mov pop test pop fwait dec ds inc pop xor stos call lahf (bad) pop (bad) push cmpsb shr mov jmp mov push aam xchg lcall movsl enter dec mov (bad) or (bad) lahf xor fsubrs (bad) cld ret adc arpl inc (bad) js ret mov pop push cmp in mov lret cwtl sbb mov sarb mov imull push (bad) or push aam (bad) int sbb das icebp push jle out scas push (bad) scas pop enter and sti xor jle sahf cmp subb jnp cmp push xor loope jo add xchg cs push jmp loop daa sar mov push dec inc jl jns (bad) push xchg xchg mov jnp aaa and xor xor sub and ret loop addr16 jmp jnp dec mov push jle cmc sbb add mov imull or cbtw outsl gs xlat or data16 xor jno cmp out add iret xchg test inc sub aad mov sbbb pop and fildl xchg xchg (bad) div pop cld xchg xchg mov adc cmp cld lea sub mov xchg jno add mov adc pushfw dec xor mov mov ds rcll dec mov pop push rcrb push (bad) inc jge orl push sahf add xor and inc stos or loopne in xor ret add jno pop sub mov add stc out cli lcall cmpsb fsubrs xchg add imul add in mov lea xor cmc insb mov mov outsb adc lret cld imul in xchg sub scas sub push movsl or lods sub cmc (bad) or mov mov cmp push xor xchg add shll xchg cltd xchg jae or fsubl out adc test sub sbb outsl les mov push pop sahf mov jmp xchg imul xchg jns sub dec pop testl fwait jb in lods test mov inc ret jnp (bad) mov push jne xor cmp dec jmp (bad) mov pop enter test les popa jns (bad) add cmc ja mov (bad) cs arpl mov sub or sub jl or mov sbb push xor mov inc pop dec sbb mov jo bound pop (bad) stos out mov in jns mov pop jge sahf push mov cmpsl jnp mov mov inc sbb mov out daa imul fisttp adc and mov out jno mov das pusha pop int3 ds (bad) lret mov (bad) out jg fwait adc lcall xchg in enter rorb js pop jmp lods sti enter xor push inc lcall inc mov xchg mov mov fcoml add adc jns inc scas (bad) in decb cs out inc (bad) sbb push add inc test cld add (bad) mov (bad) imul jl ficompl cltd xor xor pop mov repnz jnp orl ja in cli cmc fistpll hlt push pop xchg enter or xchg xor sbb or jno (bad) jo cmp inc mov or movsb add jg fs mov int push into add add add cmp imul paddd out popa aam notb fildl xor or rclb mov mov ja fbstp jb dec inc mov fwait das addr16 in jno pop sbb faddl mov out dec stos push mov rep ret (bad) out and add jno dec mov lods and outsb mov jno lods iret mov cltd std insb fs dec lock js pop stc jae sbb lret push repz xchg stc jo vmptrld cmp adc push dec sbb (bad) popf or and ret popf (bad) sub movb mov pop and inc xlat add fiaddl mov nop lods pop xor repz xchg imul les lods mov add leave lods xor negl dec sub push roll push inc sarl add out pop aas cmpsl xor jno shrl add xor mov fs lret daa mov pop inc jbe pop neg in cmovs adc xchg xor inc ja (bad) (bad) mov mov inc lods xchg cmp lahf inc lds not inc dec movsl rolb pop dec data16 cmp lcall push dec dec mov jl push adc fadd mov add in stos mov (bad) dec sub add mov (bad) or stc in cltd in nop insb iret mov cwtl adc cmp or sub mov mov mov stos cmp insl imul adc mov roll mov and mov repnz lret adc push ds pop stos (bad) xchg lahf add ret loop mov dec inc sub mov lea jae loopne push xlat sub pop out pop cmp imul jae bnd push mov pop pop pop pushf enter jecxz (bad) cmpl mov mov stos push out push mov lods push mov mov mov in pop push pop call push adc jbe aam je xchg rcl adc gs fwait sub xor xchg icebp out adc push mov cmpsb sbb lahf enter rclb clc ret adc jae mov loop jl test in aad push adc mov loop data16 in dec jle mov mov mov push dec (bad) mov mov jae or adc jne push mov pop test sub cld movsb push loope cmp xor mov (bad) adc sub push rcll jae mov ljmp mov cmp cltd inc xor shrb aaa lahf lods mov scas (bad) icebp push sub add jle mov cmp push pop sahf data16 mov sbb inc gs movsb sti inc fcomps xchg dec mov aad cmp out call mov ud1 sbb or pop in sbb je dec or out shrb mov lahf inc xor (bad) pmulhw pusha outsb mov xchg (bad) add mov roll test bound cmp loop sbb mov push sbb push ljmp mov sub popf in pop fsubs movsb pushf mov or ja adc fisttpll inc jmp push push mov cmpsl and lret cmp adc arpl mov xchg out push mov pop lods test jbe subl test daa push push and (bad) stc push sbb mov jno loopne sahf gs pusha fldl adc cmp neg sbb mov out out leave inc jne fnstcw xchg inc and mov in inc xchg jnp imul shll fimull bound and pop imul fild mov adc test test adc mov shrl lods daa jl push fcoms leave adc xor mov stos imul push (bad) out (bad) sub jge push dec fdivrl fmul cwtl mov repnz cmpl jmp and dec (bad) dec lret or (bad) (bad) rorb xchg cmp xchg into jg das inc and lds cli adc daa orb pop jno xchg pop add rcr ds mov sub orb bound push jb jns in imul loopne (bad) sub inc mov mov sbb cli push mov sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 aad and negb ficom pushf mov xor imul and cmpsb out icebp sub push pop adc leave aaa adc fldl cmp aad pop lcall xor sub repnz cmc das sbb pop les fsubr mov mov lret xchg xor pop inc mov movl shlb in jb dec pop insb stos (bad) sub int rolb sub adc insl jno xchg cvtps2pd jp jecxz insb into and xor and sub inc push inc js cmc mov orb nop mov pop pop adc dec or mov adc movsl push rcll mov (bad) aaa push mov into mov mov jbe ljmp ljmp jecxz into sbb cmpsl out (bad) aam mov inc ret jnp test dec pop out pop leave adc testl sbbl (bad) cmp sbb xor in mov iret scas sbb (bad) les rcrb push stos sub mov out mov rolb sbb cli push or test arpl jb je imulb mov aas xor dec push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret aad and and arpl out or sub xchg push jmp add push mov out sbb addr16 jle push pop xor aad gs xor lods fldt pop pop lret cmpsb inc push push in push pop push sub call call outsb inc lods in fisttp and push jmp fucomp pop lds adc outsl cmpsb cli (bad) jo xchg jle mov (bad) and mov inc loopne push lret cmp xor loop call cmp push cmpsb push fs scas or jbe inc and icebp movl mov push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and push inc xor sub aad pop adc cmpsl or mov add outsl call (bad) ljmp icebp adc push rorb add inc add jl adc add jl adc int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 aad and push scas push cwtl lahf in aad mov call out cmpsl mov lock xor adc orb into outsl loopne dec jnp lea pop cmp add arpl inc outsb xor jp fmuls push mov (bad) xor and mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 aad and and arpl out or sub mov das dec mov mov out cli sbb push inc and xchg xor ja outsb fidivr fbstp cltd das data16 in sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 daa loop inc aad jns cmp (bad) push or lock jmp iretw pop add sub int lahf scas sbb in sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 das cltd inc xchg jg sti sbb out xchg stos iret cmp mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 aad and negb pushf pushw pop sub ret mov mov stos adc (bad) pop or cmp fistl inc sub and push add aaa shrb inc sub jne xor and lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 aad and mov hlt sbb (bad) out pusha sub inc lcall fistp test mov push negb jp rcrl pop xchg js mov enter loope movsl inc sub mov (bad) xor and mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 aad and (bad) sbb add mov mov test cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 aad and and arpl out or sub ret mov adc sbb rcrl sub xchg push sbb ret cmp cmp inc adc (bad) (bad) into and shr mov lcall pop sub cmp push inc and clc into pushf dec aad dec call add push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp enter testb dec or push out lahf mov sub push jne inc mov adc jmp push dec js (bad) pop scas xor sub xlat dec shrb inc sub jne xor in sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 aad and negb pushf pushw sub sub jge and push scas sbb in sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 aad and mulb fdivp scas pushf push pop mov inc add shrb insl mov sub mov out push sbb mov pop mov cmp push jae xchg imul lods stos ret scas enter in xor movsl xor jg xchg sahf int3 outsl in and xchg mov mov cmpsb in leave cwtl bound jnp nop jo (bad) push js bound sbb (bad) addr16 mov bound repnz push mov xchg lock push pop testl mov ss mov in sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret aad and divb fdivp scas pushf pushw sub sub pop or sub movsl aaa or scas jmp pop cmp mov and outsl in push dec js popl pop jo inc sbb test ja outsl dec pop js scas dec push lods test cmpsl loope arpl xor inc push push mov sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and negb cmp jle inc cld repnz int3 adc aaa xor or dec push fwait mov (bad) push ret xchg outsb cmp dec push pop or mov jb jg or pop lcall xchg loopne dec or inc into pushf bound out cltd (bad) xor xchg (bad) into push and mov pop sti mov lea pusha call ljmp push or std adc (bad) insl sub data16 pop ss cmp les fwait sub (bad) (bad) imul jbe inc sti rolb jo outsl or push push cmc arpl ds leave adc lahf adcl xor sbb je mov gs dec ret pop es jecxz mov or mov outsb adc inc xchg or xor daa xor jmp in or pop pushf pushf (bad) jmp push in loope pop loop divb cmpb mov aaa mov pushf mov and inc mov sahf mov or fcmovnu jno mov sti (bad) and mov stc push outsb (bad) adc xchg in inc jne sub pop cmp scas div jno mov int pushf out incb mov (bad) out dec fistl (bad) dec popf adc xchg in fdiv stos push lret cmp addr16 in push mov pushf jnp int push leave loopne or inc mov mov nop insb pop sbb aam and mov lds popf sbb js xorl or mov arpl shlb pusha add inc pop cmp sub fisttp ljmp les cmc test dec loopne xor cld mov data16 scas sbb jno and and mov or mov mov pop pushf add add (bad) sub inc imul pop pop mov pop in push or mov scas push xchg repz ficompl mov mov ret jp aaa pop mov xchg and lret mov sub mov popa fldz jns cmp jbe fs xchg jecxz mov pushf or aaa adc xor bnd push jl cmp rol pop addr16 mov sbb mov inc sub dec xchg sarl data16 aaa pop in cmc bswap lret cmp outsl mov fistpl xor (bad) test out dec push mov aas std out dec xor or sbb add and icebp std and out mov adc (bad) xor jmp mov cmp inc sbb inc add jmp in jecxz push enter js jbe lea sti and pop push push cwtl (bad) push (bad) and and mov test mov shrl das and inc cwtl mov lods adc dec adc test cmp arpl mov sub cmp or roll fstpl push inc repz test adc imul pop and ret inc int3 sbbl push pop xor lods mov mov add pop fstl jns emms unpckhps aad (bad) std icebp cwtl xchg orl fsubs or mov jmp adc pop jl adc ds push mov push xor (bad) in pop pop jb ret adc mov outsl or dec dec jg pop push je jge std rcl xchg cmp les aad inc movsb cmpsb (bad) add (bad) push fwait das mov les push mov fcompl adc push enter mov (bad) xor add stc xchg call and adc push inc out push out iret clc add (bad) dec fildll or sbb xchg pop rorb add das jle jbe mov add sti insb mov loope mov icebp lea aaa cmc dec lcall (bad) pop sarl mov push xor jge daa dec mov mov std mov add push mov xchg pop (bad) push add inc mov ret xchg cmpsl jne (bad) enter outsb std ja mov push (bad) adc adc sbb hlt das xor fcmovbe cli jg loope sbbl add sub dec mov pop mov push pop pop sbb hlt lret lcall (bad) jle test aam test mov (bad) repnz lahf xchg cmp clc pusha mov loope jo sub mov jae mov adc or inc push jg cmp fcmovu jae adc or cmp and (bad) push pop incl stc rorb sahf lds loopne lret sbb fcomps into mov sbb mov jno imul adc pop adc mov add popl dec movsl rcrl sti out sbb mov mov sub ret dec mov add mov add dec shrb lock cmp push dec adc xchg clc mov gs in (bad) xor insb fwait xor scas (bad) xchg out dec in pop movsb xchg shrl adc cmp test cwtl push ljmp out jbe push adc (bad) loopne cld push pxor or sub push xchg (bad) lcall outsl fcompl lock or popa lret addr16 lahf imul jbe int imul mov aam pop cmp xchg repz pop mov cs push insb pop fsubl pop pop mov (bad) int or cli pop push pop sbb shll (bad) cwtl sbb enter hlt subl inc stos fdivp sahf (bad) cltd mov repz or sub mov sahf pop add movsl fdivr ja lods sarl fdivrp push push pop mov aaa sub jl jmp xchg jno and add loop push jae pop setb pop aam ja mov jmp add or jo push out xor xchg mov daa sub inc pop (bad) iret xchg or push outsl jno pop into jge or bound dec in mov mov xor push lods fistpl mov mov hlt xchg rcl loopne mov out jge in mov std pop (bad) fadds aas inc adc je stos stc fs add pop arpl mov mov jb cmpsb inc push (bad) (bad) mov push or fisubrl mov call repnz fisttp jl and outsb ja cmp stos jle adc cwtl lcall ror mov gs movsb cli xchg xor or or jb in push dec dec jge jae xor and push push cmp stc int or test cmp mov push jae syscall fidivr cmpsb jae roll btc das mov adc jmp insl test pop sbb jnp push sub in adc mov mov push push mov push ds in out sbb jle cmc das mov or pop xor cmp cmpsl shrl sarl outsb xchg sbb adc or mov test jp pop push fsubrs ja adc lods les mov jmp pop jp dec popa add ret cmpsb adc das dec pushf xchg enter mov mov mov xlat enter add add setle sbb (bad) jbe mov lods xor lea rcrl cwtl ret cli jns or pop cld jp mov add out add ficoml jmp push push cmpsb in push out mov fsubl in stc daa push out adcl push jp add mov inc mov ljmp inc jnp fildll fidivr ja adc jg arpl or push xor push xchg fsubrp js lret out popf xor adc sahf mov cltd out jno push jmp les jb sub adc shrl adc stos pop xor sbb movsl shrb mov mov lcall and sarl dec (bad) inc push enter lahf fs adc push sbb xchg mov (bad) (bad) (bad) xor pop addr16 (bad) dec fldcw rolb jae pop jb test and mov lcall pop mov dec aaa add stos or cmpsl in (bad) sub pushf push (bad) adc inc cmpsl outsl pop shrl lret add or or pop pop pop test out xor stos fidivrl sti add jge sti dec (bad) icebp xlat imul ljmp sbb insb outsl out pop sub mov jp jp test mov mov adc mov or (bad) mov push stos movsl jae adc fisubl inc or pop push push js push test ds addr16 in xchg add std add cld jmp mov loope (bad) mov xchg xchg jle das push add dec sbb lret out mov adc mov pop daa add sub aas sub xchg rorl xchg jl cmp sarb arpl cmp push (bad) aam movsl add jge stos mov gs aam sub xor xor dec sbb adc rcl adc ljmp aam lret or fnsave daa cwtl mov out addb repz mov cld push (bad) js jae in cmp jp push in mov pop sub lcall scas and jge and enter add fnstsw out adc xchg xchg js xorb dec mov (bad) xor mov lods add lret testl icebp das lcall xchg mov std andb pop jmp in mov mov add cwtl in (bad) testb call xchg out adc stc or out scas jp xchg shrb lock jl (bad) jbe aam frstor pop cmpsl jle sbb mov shl sbb lret mov jo inc hlt (bad) fldcw xor mov icebp mov mov push test sub rcrl (bad) rolb push pop daa or gs pop jg cmp lds and sarl dec pusha cmp add adc nop inc jbe mov les outsb or cmp pop mulb mov popa outsl (bad) and mov pushf xor mov mov ret into push dec fdivs aaa jno xor mov std les es add test ljmp pop lret scas xlat sub fiaddl xor stc pop out mov iret dec insl jae loop mov sub dec bound adc or test fdivr jbe adc sbb fstl sbb pop jne adc xor mov push rcll add addl or cmp cld or inc hlt ja (bad) mov gs and jle mov clc adc mov test cwtl test push stos fldl test je popa fisubrl add sub sbb jmp out dec dec cwtl scas (bad) mov scas in shrl mov nop mov cmp xor decb mov scas add xchg inc inc cmp sahf adc addl push add cmp mov mov aam lcall and subl pop mov push dec repnz fstpl call (bad) and out mov test lods sub test jge lcall iret (bad) jae dec add arpl sub adc (bad) adc fstpl pop movsb cmpb inc mov popa rep inc test xchg xchg int3 clc sub test add not in mov mul push mov or (bad) stos gs pushf in jo insb add call xchg pop pop cltd pop imulb add les insl push pop cmp cmp dec pop or (bad) mov arpl fcompl shll ror jp bound jmp jmp sub add adc sti push lcall push dec mov pop popf ljmp xor call mov dec mov jno (bad) push pop data16 cmp cmp sub inc mov outsl inc rcr imull xchg jae sbb rcrl pop or lcall fsub jo fldl or sti sub jmp pop leave pop pop fsubl test (bad) cmp imul out (bad) iret repnz out dec xlat outsb (bad) icebp jge rcll (bad) daa push aam xchg sahf loopne push data16 mov pop cmp rcr inc js xor test shll mov mov cmp data16 jp scas pop lds popa sbb movsl xchg (bad) cmp into (bad) sbb cwtl add jmp scas outsl mov cmp mov clc test inc jbe mov push jge cld insl inc jne test aad hlt xor jnp cmpsl add xor and data16 jle test test lea mov jae iret cmpsb daa sar ss lock fstps mov cmc sbb jl das out (bad) mov (bad) jne dec jbe scas pop psrlw push add iret xchg pop sbb jns cwtl roll loopne xchg pop out hlt iret adc xor push lret mov cli (bad) bound push xchg scas aam xchg add dec dec jmp dec push sbb cmpsb jae cmpsl ja rorb push daa fs push pop xchg inc int or lret push sbb jb mov lret addr16 mov repnz stos das jo (bad) out pop jb stos sbb adc ret fstpl mov loop jne lcall mov aas add or cmpsl ljmp lock gs js insb imul daa loopne cld inc and pop push push xchg nop fs jmp add das mov mov add push sbb sti adc add dec setb ret cmp xchg rol bnd mov pop sbb cmp mov cmp fisubl sub in ljmp pop adc in cmpsb out enter sbb mov mov inc jnp jle adc loope cmpl and sahf pop jg and jno out cwtl adc adc and js lods jge cmc adc cwtl lea outsb dec stc cmp jge sub ds adc sbb mov mov inc jge (bad) pop push cmp jecxz lret fadds fs fistpll lods rcrl movsb bound jg inc sti les fs pop call shll enter cmp dec xor and and and orb mov cmpsb lret pop fwait add jp andl jp jae in mov push mov xchg add jb mov or data16 dec add pop pop dec loope pop out push stos out call xchg cld adc cmp (bad) lods ret fbld jmp scas ja (bad) enter push dec loop imulb imul or or movb jo mov pusha push int3 stos mov xchg (bad) mov sbb adc mov les or lcall scas dec mov inc loope iret jne add xor pushf mov xchg and rcll fcoml stos jno cmc add inc scas out add out inc decb pop clc repz add push (bad) mov iret hlt xchg push mulb or push jns cld idiv sbb mov add or push test cli cmc fistpll hlt icebp test mov pop sbb mov mov je mov mov test add push fs dec fs aaa fs (bad) jnp aad mov and es aas dec push icebp xlat test out aaa mov jns inc rcrb cli xor jo rol int mov sub divl add add aas sbb (bad) adc mov sti cmp mov fcompl inc jle mov push into loopne es out (bad) in addr16 xchg inc cmp lods in adc rcr stc jge arpl call xlat movsb inc repnz cli pop int3 popf jne inc mov (bad) sub fwait push sbb push xor repz xchg and cmp dec fdivp (bad) fist inc sbb add mov add sub mov sub inc dec push push int3 add cmp ds cmp push xor mov xlat sub insb jno inc (bad) movsb push je or jecxz imul pop sbb aad lods mov push les mov mov imul lret stos inc mov repz jbe shrl pop and xchg mov loopnew jo fcomip popa ret fistp test sbb jne insb std ror call (bad) mov rcl mov (bad) pcmpeqb jnp jmp mov test pop test mov cmp adc sbb mov sub clc mov xchg push sub jl sbb and pop mov mov std pop fimul in aaa dec loope pop daa xor cmpsl jp pop jl imul ds outsb adc cmp stc jg sub sub les movsb jo adcb adc pop ja in adc cmpl push flds sahf pop jno lock push jb lret (bad) daa add mov scas fldl jb adc mov inc (bad) sub (bad) cmc mov int3 rcrb stos adc dec pop add ds in mov and stos jb arpl jecxz pop jne popa xor or pop pop or ret cmp cmp sub loopne sbb (bad) mov (bad) out xchg cmc push cwtl jle adc mov sub cmp pop lahf push add mov lods lods dec cld std (bad) out int or leave scas lahf outsb out subl push cmp fmul push sar cwtl rcl xchg fisttpll xchg sbb in sub and mov fstpl in push mov cltd adc (bad) icebp std (bad) jp repz mov or xchg subl cld fisubr nop jp test data16 out sbb mov decl sbb xchg or ss popa sub cltd push jmp aas and jl sbb data16 repz pop stos bound xchg push mov ss fucomip pop xor arpl fisttpll and xchg mov movsb (bad) fsubrl push xor fcompl mov dec jle repnz ds mov mov sub stos dec xchg jmp or sub xchg movsl and int xor sbb ret xor ds sahf jmp mov add xlat xor mov mov jl repnz call (bad) fmull loop sbb fwait sub jl sahf cwtl sub cmp cmp sub lcall test push jg cmp pop arpl ret pop push in mov inc rcll ret inc pop dec lcall inc mov mov repz sahf cmp mov mov dec lahf xor inc sbb mov mov fs mov or push add jmp push sarb test mov cltd push popa scas pop in sbb mov repnz push sub add loope iret clc loopne in xchg pushf dec fcmovnu es adc xchg (bad) mov push (bad) jmp dec mov sbb clc out pop or pop mov ret and out aas in cmp or leave subl aam daa mov loopne inc fmul push add sbb pop (bad) loope loope mov pop enter fist into push addr16 sub mov leave sbb cltd adc lahf sahf dec pusha jl jno lds lahf and xchg pop ret fistl push mov int3 stos into repz and jno or loop and mov pop call xchg fistpll (bad) adc lock ss cld push cmpb inc inc mov mov hlt pusha jge lods mov aas mov mov dec sbb jge or jo sbbl cmp int jae adc xchg dec loop adc mov dec (bad) adc push daa dec inc mov mov xor popa negl jg sub xor (bad) mull imull icebp mov pop decl sbb dec test cwtl or jecxz cmp jle cmpsl outsb outsl rorl push cmp add sub push xor mov or xchg pop loop and int3 push fcoms insl pushf loop xlat xor test sbb sub xchg das xchg pusha inc repnz fidivr adc fcmove mov jo jne add (bad) loope mov adcl ss pop les push imul add jp loope data16 out fistpll int3 pop sbb inc scas cmc xor insb and xchg (bad) in dec stc nop push add xor jns (bad) xor popa jecxz mov not and rorb (bad) jne aas add int inc fimul pop clc jmp xchg fcomps jb xchg mov pop mov cmpsl mov aaa lret xchg jo mov dec dec cmc int out int3 adc add jo popf xor lds sub and dec mov mov inc fs (bad) push movsl (bad) adc xor and add xchg adc mov push mov (bad) and insl cmp popa xlat push inc push dec pop add mov xchg mov dec movsl cmp cli pop fistpll xor out dec push xchg or sahf icebp add adc mov fnop (bad) jnp dec arpl xchg add mov in jecxz adc and push daa scas add mov mov inc push pop popa cmp sub jge inc adc adc cli sub adc sbb test cmp pop dec cwtl and inc jno mov xchg mov loopne ret mov lea and xor loopne push mov xchg dec or mov pop outsl dec cmpsb sub fildl adc mov mov or push icebp mov or insl outsl fucomip jecxz aam sbb mov or popf es mov lahf test mov into adc test dec popf sbb loop out pop nop mov les push push pop mov pop cs adc mov add cmpsl mov rcrb orb (bad) int3 out pop pop loopne rcr cmpsb clc out dec leave and or mov push xor push lahf pop mov lahf sbb mov ret sbb xor gs pop out idiv cmp lea push in jl xchg lret lret cmpsl jge push mov push cld pop test lret cmp mov cmp xchg popf inc ss inc push mov cmp pop stc xlat inc mov rolb push loop adc pusha mov add pop xlat insb jb jmp loop fldl repz (bad) shlb daa cli xchg (bad) cmpsb add repz or jl and xor in xchg loop add data16 out aaa es cli movsb testl inc sub insl jns mov test (bad) clc aam enter shrb sbb xchg es mov int3 cmp lock ja js lods jl pushf or xchg lods sbb jmp out push in test sub ret out jb dec cmp ja int inc pop std or icebp add iret ret jbe pop sub scas or push jno int adc pusha (bad) ljmp loop popf and mov cmpsl add or (bad) mov sub pop mov or xor aad add lods std outsb dec mov fs pop sbb lea fdiv cwtl sub dec fbstp dec adc mov pop inc std cli pusha xlat jne mov adc pop imul jle test stc cmp push push mov (bad) xor or ficomp aad iret mov jbe repz cs aaa stos add xchg xchg sbb into ljmp sbb pop add jmp push test mov (bad) idivl sbb (bad) jne test subl or inc sub data16 push pop je jge shrb mov (bad) sub push push lret pop icebp fwait scas aad std enter xchg inc ret xchg rcll scas pop test daa push sbb cmp cmp out in lcall and sbbb sub and imul ret pop dec pandn ljmp movsb dec into sahf mov fcmovne (bad) subl and test outsb jl adc pop mov pop mov cmp jl (bad) jbe js cmp xchg iret mov ljmp or les and fisubr push sarl in mov mov pop mov mov push pop fstps cmpb test nop mov or mov rcrb xchg iret adc add lods ds jmp cs cmp mov xchg mov addb ss shrl dec sub sub movl (bad) aam (bad) jmp (bad) push ds jo cmc or lods mov dec jge xor mov pop xchg jmp cmpsb and pop loopne dec mov sbb rorb mov push or jmp and fistpl (bad) gs xor mov int3 or xor aaa (bad) push aas add add iret (bad) addr16 jp xchg mov aaa add daa pushf mov cmp test inc fbld inc les jno cmp or nop das jmp loope xchg loopne pusha ret add fnstsw or movsb out pop xor std stos dec fidivl std push mov stos xchg in test out adc data16 adc inc mov fs jmp ret int3 sahf insl movsb add mov mov and scas inc xchg jecxz jne leave in cwtl push push mov out bound (bad) push push faddp sbb jge leave pushf add push loop lcall xchg push add int3 out add lds out gs jno nop xchg cmp mov ljmp xchg loope fcoml fnstcw jo inc push xchg sbb mov rcll sbb push or insb (bad) jmp add ljmp insl jge imulb lea and int addr16 mov jge in test out sbb enter insb pop cmpsb jmp mov mov cmp test or mov mov out mov loope and hlt pop (bad) jge ss iret cs jg pmulhrw lock je (bad) mov sarb dec hlt adc and xchg and push ds fs icebp xchg xchg mov push xchg mov mov pop mov push fidivr shr push inc popa sti cltd and shrb sbb and in jno dec add pop or les mov cli xchg mov mov sbb sbbb inc in sub lds ret fsubp or dec xor (bad) or jge push ss push jl das jbe mov aas mov lahf ficompl test addb push dec hlt (bad) fdiv mov dec jns pop and inc sarl cmp and ret jg xor out fs mov sbb fnstcw outsb add rorb xor daa or ret pop sub call push sub stos sub mov js or jecxz hlt mov push xchg adc jae stos adc add test pop mov jge and lret or orl xchg insl sbb adc int xchg inc sbb stos mov sub push cmp jno scas jl dec push sbb test add into xchg lock iret repz sbb mov rclb test mov cli push jno pop repz std cmp jmp scas cs test loop das int mov iret push loope cmp dec adc push fidivr sbb mov mov repnz adc xor les repz cmpsb push es push dec (bad) mov sbb sub cmp push popf mov lds cmp or pop sbb sbb (bad) or push and in cmp mov dec fwait or jae sbb jecxz sub test adc jo mov in dec cwtl rcl mov rcll js mov push pop jne inc or pop push ljmp mov xor or leave ljmp cld insl add push and (bad) push and mov dec cmp sarb adc add insl and or adc repnz leave aas icebp enter mov popf lods jle push pop out xchg sbb adc sbb push dec ret inc fsts jo pop pusha (bad) sbb push sahf mov fsubrp pop ficom mov jmp cmp sub sub push imul test inc ret mov jl sub pushf sbb jnp cmpsl mov add outsl fidiv mov pop ret int push jmp insl cs mov sbb pop sub or xor dec pop mov pop in or inc fs fistp clc ja xor mov mov mov adc lret sbb clc insl push ret divb xlat add pop test call mov into shl add test push xchg clc pusha mov adc repz push dec adc mov sbb test xchg push xchg and rorb push mov inc mov out cmpsl lods cmpsl sub movsl push das pop push mov fldpi sub out cmp jle cld mov int3 pusha jnp cwtl hlt sarb mov add cmc outsb fistp test popf fistpll inc idivb jmp ja dec inc mov movsb fdivr imul ljmp mov adc cmp mov cli insb jns imull and sub xor (bad) sub add out in addr16 loop out roll push in or enter sbb cwtl and xor push cld xchg push or add fiadd lods dec and js mov mov (bad) or pop sti cmp inc (bad) cmpsb dec (bad) insb mov imul mov sub enter lahf aas shll repnz dec mov jle cmp dec xor test cmpl arpl sbb jg aas ret xchg jb push xor rorl sbb push add js iret sbb pop and mov cld dec cmc (bad) (bad) adc mov sub fldl mov ja scas xchg (bad) aaa adc cmpsl sbb push test add jecxz dec adc leave int mov ds inc pop jl fidiv popf cmpsl pop push pop imul sub pop mov cld bound xchg in pop mulb push pusha lea fwait lahf xor sub loopne push inc ret inc mov ret scas lahf mov xor xchg push lds jge adc sbb add cli call xor sti mov mov sub or or cmp repz push lcall (bad) call push sti in cli adc insl mov xchg ds xchg decl adc hlt loopne mov aam ja sub push into inc cmp rcrl push mov push push mov fisttpll stos xor or jnp arpl jb push lahf cmp ret jmp rcl pop cmp movsb stc ror dec data16 sbb cmpsl flds dec and repz inc test aad fnsave sti lods outsb (bad) xchg push inc lret dec cmc and xor out cli dec pushf ret push ficoml sti mov dec push cmpsl jae or sbb pushf lcall in lret xor popf outsb stc rcl and outsb nop xlat ret or jl arpl adc aaa jns sub xchg scas fcomps out sub lret leave stc addr16 and lods adc test cmp adc rcrb je mov push pop ljmp js dec xor outsb in mov ja adc andl aam (bad) sbb stc push pop push call out add pop sti xchg pop xor addr16 rclb adcl xchg aad add loope adc push mov cmp inc adc outsl mov add xchg test xorl test push xor outsl fidivr outsl fisttp out test add mov adc cld cld outsb cmp pusha add xchg and scas loop add xchg stos jb cmp inc nop aam insl mov push inc or ds and inc test fs add cmp sub pop dec adc fstl outsb addr16 adc test lock and jb shlb sub push sub jae push pop sbb or and aam test (bad) push fstpl dec ret or push rcrb inc fstpt sbb jnp mov mov (bad) jno popa cli loopne into test jle icebp sarb mov mov cltd xchg aaa int3 popf mov push inc ret sub jb pop mov int js mov pushf adc sbbb out ret lock std leave test fcomps xchg xlat loop jp sub and fcmove stc aas mov dec and repz call mov loope js or xor out xchg mov leave ss (bad) xlat xchg cmpl (bad) sbb mov mov scas dec or xor scas lcall pop mov int or xor dec adc xlat jns mov adc or bound in pop repnz pop dec mov inc pop imul mov jmp jecxz pop jle jl adc pop das aas mov push xor mov dec pop sbb adc inc pop (bad) push repnz aas pop push in out add push sbb fcomps std popa popa adc or xchg jge lret and mov adc xlat scas in mov xor dec and call gs push test cld repnz xor sbb push jb imulb push mov das pop add pop mov sub lds test es adc xchg out subl jns insl and dec xchg mov ficompl in scas push enter popf iret (bad) cmp fdiv xchg mov leave fwait repz mov jnp jecxz push mov push sahf rorb ja sti lret push (bad) mov mov mov xor insl push cmp (bad) lahf lods ret int push aam or stos mov aas in aad movsl pop xchg mov mov gs (bad) cmp pop mov ret pop mov repz sahf sub insb leave aaa std pop adc cli and jle fsubs adc mov cmpsb into jp cmc outsb push or gs inc push out xchg jge pop inc xchg insl (bad) std push insb (bad) inc in cmp inc cwtd dec (bad) (bad) jns cmpsb sbb dec sbb pop inc push lock outsl add rolb sbb add dec fwait sub cmpsl dec rorl inc aas mov and aam xchg sbb sbb orb and lahf jb,pt enter jl or (bad) leave jae jno dec clc dec or insb sub push test jge jle outsb test mov or movsb pushf xchg push sets aas mov cmp and jns in cli add pop pop adc mov dec pop or adc stos sbb sub mov jne pusha xor jl mov cmp mov pop mov cwtl add jl sbb (bad) pop or inc xchg int3 mov loop or cmc jge rdmsr sbb rolb aas js xor cltd movsl in imul out stos outsl mov jae cmp push jecxz add or mov mov inc adc dec cmp pop xchg pop inc pop pop out inc adc add mov pop in mov test enter xor repnz push inc sub jno mov adc xlat mov mov push rorb mov pop outsb (bad) jo andl (bad) mov shr mov cmp jno inc xchg sbb rcrb ljmp cmp sahf pop push cs dec and ljmp add dec lea sahf outsb and rorb sysret pop mov xor test dec push pop sub (bad) addr16 push mov outsl in inc mov mov dec or popa cltd jge mov mov stos cmp inc xor mov pop pop aad adc in out ret mov or pusha dec fadds or and loop mov pop inc push and clc and lea or inc pop imul arpl jle iret xor nop pop clc xor (bad) clc xchg jno and sub icebp cmpsl daa dec ljmp sbb repz mov inc and sbbl div (bad) mov mov clc jno repz pop or sbb unpckhps aad fisttpll xor mov xchg arpl in mov test pop mov lock aaa pop adc cs scas lock mov push fstp and and ss hlt shll fidivl or aas into ret in mov mov dec ret mov fidivr lcall jg pusha xor cmp xor push inc push pop bound or pushf pop int3 icebp out fs mov xor sub aad inc cmpsl xchg je mov (bad) hlt mov xchg ljmp outsl sahf out xchg sbb mov push xchg mov mov out cld jmp dec cs pop pop or (bad) sti movsb sub cmp loope mov fisubr lahf dec addl push xchg xchg or sbb sti decl or sbbl fdivrp jo test jle (bad) aas test cmc das push js cmp sbb inc fsubr adc loopne mov add dec bound dec orl je stos mov ret jns vmovlps pop mov and jp popa pop pop fwait mov addr16 test mov das in insb fistl ja xchg cmp int fimull nop cmpsl aad outsb sarb js and idiv (bad) clc mov das fs lods repnz (bad) addl mov sub pop jno fisttpl addr16 shrb mov pop popa out and jno or push and cmpsl popf mov or mov pop inc mov je or mov mov fisubl jg xorb movsb movsb mov or xlat mov lret cmp repz rcrb arpl int3 jae (bad) jbe repz cmpsb dec fsubl mov fdivr push test roll insl rcll icebp mov stos fsubrl or lss add daa inc pop xchg stos adc iret fwait sbb ss lret xlat push stc es or cmpsb pushf mov xchg aaa enter scas push inc jle lock fimul jmp orb (bad) sub pop xor cwtl repnz lret sub inc push jg mov sub faddl xchg and outsl sub popa xlat (bad) ss inc and and in mov imul adc xchg or lret fistp mov mov addr16 sub add (bad) fidiv loope or repnz dec push push ljmp in es call mov xor repnz jg sarb into (bad) pusha ljmp popa mov pop rorb (bad) je xor lods xor push mov imul sbb icebp dec stos fs rcrb sbb rcrl loopne xchg adc lds js or outsl add mov xorl sbb and loopne jmp pop fldl lea imul mov pusha mov lret cs pop fnstsw push es into and mov out push xchg scas mov pop sub (bad) leave mov test push xchg lds add mov loop adcl or rclb jle scas and sbb mov test stos addr16 sub fistpll (bad) xchg dec jmp mov dec cwtl xor sub xchg lahf push jecxz dec aas adc iret mov sub das inc pop add imul mov ja aas xor divb xor sbbl sbb imul mov into into fldl fs ja std push mov lret adc mov xchg stos fistpll or in jns (bad) pushf sbb stos sbb dec rolb pop add lret jp test repnz dec pop (bad) mov fwait xchg popf sub cvtdq2ps sub cmpsb sti in stos sbb cltd call and jmp scas out lea sub jg test and pop sub sub pop sbb cmp call inc xchg int mov jl (bad) test push in stc movsb dec clc out js aad jmp ret sahf dec (bad) cltd out cmp subl cli loop ja xor dec aas repz inc cltd push cmp vandnps movsbl mov imul imul push cmpsb or lcall es loop ds icebp or loope es sub push das arpl insl fisttpll sbb xor test movsl push out (bad) jg movsl mov sub lret sbb imul loope ss xor fwait mov ds mov stc pop or aas iret mov jno pushf xor pop mov test xchg mov fisttp mov cmpsb mov iret xor loop es mov out xchg inc (bad) cwtl (bad) mov add sbb xor jle mov xor adc xor in call lea push mov jae mov mov ror dec xor mov mov inc rorl rcrl adc fisubl shrl clc xchg mov mov cld mov mov xorl mov shrb and cmp push lock neg out hlt stos jl andl loope in enter sub mov adc xor pop pop pop lds push or and mov or push pop imul gs add ret jo sarb gs dec inc mov testl or fmul cmc sbb icebp xchg xchg xchg inc fstpl insl leave out popa jno jbe push pushf pop dec out xchg hlt clc test mov in fisttpl cli fldcw test mov push inc hlt (bad) fistl arpl cmc idivb sub mov pop popa jmp in pop sub outsl insl xchg incl inc xchg (bad) imulb dec push rclb add leave add xor adc loope out stos rorb or out lahf xchg mov int3 rolb xchg pop sti mov or in sub pop mov into adc cmp clc inc ja imul xor sbb (bad) icebp sti jne mov or (bad) fstpl loop pop mov daa aaa cmp (bad) stos mov sbb pop jbe popa xchg cld dec push scas add rcrl push cmpsl inc out push sub xchg pop dec test ss faddl lods imul scas xchg mov mulw into sub or dec addr16 punpcklbw popf lcall or push or mov mov xlat cmp adc sahf fcomip xchg popf cmp add aam adc jno add rcll rcrl (bad) push sub sub add add cmp imul daa pop cwtl sub hlt popa xchg and lds testb lret enter (bad) fdivl clc adc enter lds lea out lahf adc fcoml inc mov dec out mul mov jl xor pop insb scas cs inc lods repnz subl sahf (bad) imul sub cld jge adcw aas cs cmpsb test aaa ja aam xor aad cmp dec mov fsubr mov add into fstl mov inc test ds mov xchg inc inc (bad) xchg ljmp mov lret adc stos das repz lahf cmc cmp popa pop sbb ror xchg out enter iret repnz add cmpsl mov imul xchg fs or lret pop dec mov les sbb fcoml lods and adc shlb and std pop dec nop pop stos xor cmp mov loopne and xchg (bad) mov add pop adc sbb push or cmp psubusb sub jae jmp movsl cmpb in inc test ror into mov jno push sar inc and xchg sbb (bad) and or mov in aad cmpsb sub mov sub cltd (bad) push pop insb sub jb lret (bad) cltd in js add mov aam xchg add pop add pushf xchg js push fimul dec dec bts fisttp xchg mov sbb adc jbe pop inc mov mov mov mov xchg and jns dec into (bad) mov xchg dec push loope add pop clc fcoml rcr jge jno mov mov xor sti test push jl mov in xchg xor pop dec dec ja es fcmovne (bad) pop cmp pop ret cld out loope repz jge xchg (bad) sub repz cmp xchg or in jecxz cmp into (bad) pop xor mov dec jnp das ljmp ret jnp hlt or sar pop or mov cmpsb xorw pop sub push cmp stos rcll (bad) xor mov mov ret iret mov adc lret or fstl mov adcl xor sbb jns fcomps fistpll mov cmp mov in cmp loope nop cmp jbe in and bound test imul mov jae lods mov ret xor and loop cmp cli cwtl jg stc outsl jne roll pop (bad) iret sti and mov or movsb push xchg inc push xor sbb cmp xchg adc or sub ds lds xchg mov sbb lods inc incb xchg mov rol (bad) sahf or push inc push pop imul sub jb out dec movsb jp lea arpl push dec lods popf push gs and shlb mov (bad) fsubrl xchg call movsb je (bad) jecxz and or and mov int stc mov test loopne xchg xchg ret jnp in pusha mov mov addr16 lahf fistpll lret cmp push xchg (bad) scas ret loop xchg aam xchg jno,pn mov daa push ljmp loopne inc and sub cmp adc mov dec dec sti clc (bad) adc sbb aaa dec and pop mov int mov xchg sbb loop rcrl xchg cmp aad fwait (bad) lods add add jo push inc loope mov and sbb lods pushf mov jnp and or les cltd clc (bad) int3 insl (bad) mov jbe movsl (bad) out inc or notl cltd aaa leave ja and insb xchg out test mov test dec mov aam scas add cwtl adc (bad) sbb cmp int and mov add sar lods push add in cmp test jle push push pushf mov cmp jae out mov xlat push sub xor nop fwait pop mov cli push or xorw outsl fsubs (bad) cmp cmc sub adc add movsl ds loopne mov and fbstp (bad) mov mov xchg pusha fwait xchg (bad) out mov ljmp push adc mov movsb cmp imul std lea dec out in cmpsb and mov sbb xor jmp stc jno inc insb fmull push lods xchg addr16 push mov jnp mov fsts into loope out dec xlat cmp cmp andb xor movb scas hlt outsb sub mov push ret arpl loope adc (bad) or add ret and push jmp mov es sub dec daa xchg aad js mov lds mov push jbe negl aas out xor mov inc pop jmp roll lock mov adc jmp mov add mov or aaa rcll addr16 sub dec sbb fstpl subb popf cmp pop jns test jmp xor stc push pop hlt fisubl insb aad mov ret idivb jmp addr16 push push cmp inc mov jmp sub sbb stos bound cmp cwtl push (bad) xor sbb cmpsb clc ljmp mov (bad) dec inc sbb lds xchg stc inc add lcall leave sti negl (bad) cmp mov fiaddl mov mov mov imul xchg jge loop js inc imul repnz jns xchg fnsave test inc sbb in lods (bad) fwait (bad) push add or pop push in (bad) jno cltd push pop xor fwait das mov popf mov xor push xchg pop cmpsl sbb mov cs adc subl cmp xchg fwait mov sub mov frstor aam fs or add movsl insl fs pop xchg adcl pop pushf pop push add jg sbb loop lods jbe jmp mov das loopne mov inc add sbb popf and insl popa dec adc jnp jge fstps cmp jle inc pushf cld or (bad) dec adc cmp cmp sbb mov and sbb test xchg (bad) mov cmp popf jnp gs loopne jg loopne das push pushf les push mov push pushf callw xlat mov mov div data16 jae std test and dec in (bad) movsl insb cld lock movsb imul inc cli leave and adc lret popa inc jns lahf or cmpsb push pop push cmp cmc cwtl hlt pmovmskb push xor jnp xchg push mov jb or fnsave and mov jl in add jmp sub loope jg mov xor cmp aad pusha xchg loope std xchg sarb clc cmp xchg cmp xor sets push out mov pop push mov aam ja outsl andb adc sbb mov xor or sbb or pminub sbb mov xor cmp cmpsb mov and mov jno mov pop push not push mov pop mov iret sub inc repz sbb inc mov imul imul out add fstl and push imul mov lods jmp (bad) mov roll jne scas rcrl ficomp jb adc sub or jne xor mov cmpsb inc sub adc insl cmpsb (bad) mov push inc jg push and pop mov jno mov popf pushl (bad) pop cmpsl sahf inc pusha mov dec arpl dec pop (bad) ss dec dec shr cltd push insb or xchg repz xor xor lcall adc movsl push add xor or jmp xor adc negl movb jns lret test jl pop out xor leave rclb cmp addl lahf out ret pop lcall adc sub mov cmp push arpl stos mov xchg sbb pop inc pushf xchg lea in loop mov xor pop pop push cmp (bad) mov jmp in pop or inc fldt sub jecxz adc dec sbb jo and mov push scas sub add (bad) mov test sbb xchg mov add nop xor into push or mov stc cmp add mov sub jno std mov jo std inc adcl scas out dec push xchg mov imul pop movl cmpsl add add mov pushf int3 js pop rorl es insb xor fmull cwtl fs movsl les rorl cmp push mov popf je cmpsl lock xorl sub inc pop in push mov daa int3 fdivl xchg jp and add lret mov mov lret xchg pop lds (bad) in aas fsubs mov sbb test push push cmpsl add add in (bad) cltd pop test sahf xchg adc sub jbe fldt orl inc int pop insl insl mov add popf inc sbb push sub lods inc (bad) cld dec test lods mov xchg and inc jg (bad) cmp xchg inc (bad) lret inc add repz push mov (bad) xor ja pushf fmull dec scas xchg js fcoml inc ja ljmp inc insb testb mov cltd mov pop mov sti std roll mov loope leave adc repnz cwtl loop lahf int push cmp jg mov sbb mov cli rorl in scas mov outsb cld shrl sbb inc subb in inc pop lods mov mov push pop mov mov xor add movsl adc int and mov imul cli popf out and lret mov jl lret mov pop iret jbe pop pop gs add inc rclb push xchg push in iret jno int3 pop (bad) in mov leave dec pop or mov rolb dec out sbb lcall fsts lock es mov aam xor shrb addr16 cmp pop sbb sahf (bad) xchg jmp jns nop mov push sub and mov sub les xchg out sbb sub cmp dec call adc cli mov cld sub shr cld pop pop adc and cmpsl mov push jnp cmpsb fisubrl stos (bad) xchg push fisttpl xchg insb hlt int (bad) cs jnp cld stos mov ret xor dec xor nop mov inc arpl xchg add addr16 xchg ljmp xchg or jp cwtl daa xchg push xor lcall mov push shl or arpl pushf xchg jnp pop and test jb daa adc jmp push fwait aam imul mov out inc sub (bad) pop ror fnsave out xchg in pop iret adc xor addr16 mov (bad) test push shll xchg jbe popa push add test cltd nop dec pusha mov and and xchg mov xchg into divb imul mov sub jno mov xchg pop in fsub fwait mov fistpll jo fwait jb shl fldcw jne pop adc lods in aam sub push cmpsl ret pop or sbb cwtl pop fs data16 test xlat xchg in mov or cmp mov pop sbb push leave push sbb lods mov fwait cmp xor xchg push lcall and and cmp lods or add lcall (bad) and (bad) push popl repnz leave and and mov outsb and or fild add cld orb loope mov lret call pop lods add sbb test jmp popl pop cmp sbbl push dec jg arpl repz cmpsl scas mov int or clc sub add das adc sti lret cmpsb inc fadd mov fcmovb sbb stos (bad) push cmc rep adc aaa shrb mov or inc lods lahf mov aad adc hlt jmp sbb push jl cmp flds out test bound mov test lahf aaa sahf shlb cmc aad test lcall ss push mov sbb mov cmp dec mov xor cmp repnz xchg (bad) setae mov cli mov loop fild sub push scas loope dec jge sbb ret push push pusha fstps push add faddp cmc insb push add lock sahf iret rclb add add mov dec movsl inc mov pusha mov mov in stc mov aad mov cs les icebp test pop inc fs icebp ja mov les aaa fidiv mov loope std mov enter adc call adc das pop cli adc dec xor popf pusha rorl and sbb sub add dec xchg mov fisub pop jmp xchg mov cmp cmpsl cmp and mov hlt push xor aad lret insb mov cwtl push or jo call or cwtl cmp push loopew std ljmp bound push repnz cli aas jbe out push scas call je sarl push ss xchg mov insl jmp test push mov adcl out pop mov outsl (bad) xor nop xlat inc jmp je push repz add mov dec mov aam outsl cmc rorb add mov scas adc stc pop lahf ja int loopne out jmp repnz cmp lock clc cmp lock popf rol mov vcvtpd2dq std dec jecxz inc adc gs mov (bad) pop xor stos (bad) pop cmp test pop sub fsubl pop popf sahf ja jno inc js mov rcrb push aas jmp cmpsl dec xchg ja lret mov insl push jb jno not das cmpsl mov (bad) in lea js (bad) and into bound ret adc sbb outsl add sub dec fisub sarl jns lret add adc faddl ds mov xchg pop and sub xchg xor imul out jns inc lret jbe iret and out stos ret imul scas xor aam add cmp je outsl push adc cmpsl mov dec nop mov icebp mov scas mov pop jbe fdivrl movsb mov pushf xchg stc or test or ss xchg pop out sub mov dec push movsb iret (bad) fmull mov aaa sub in jns add or std sbb xchg sbb inc jns xchg js,pt push arpl push fsub hlt leave sub out repz lret incb adc and mov rcl dec or jmp xor daa into push cltd call mov xor lret xchg mov dec (bad) dec ljmp arpl scas push mov stc xchg int3 mov ljmp sbb pop adc xchg sbb mov dec sbb sub pop cmpsb jbe mov lret and sub push fdivl lahf out in outsb lret mov ret pop ret out das mov ret pop fstp mov cmpsl ljmp mov dec sarb cmp mov fidivl mov push inc jo loopne xchg fnstsw mov cmp jle (bad) fs aas lahf inc stos pop cmc cmp and mov xchg jl push test inc xor dec clc add (bad) in pop pop notl nop jmp scas ds adc push out in and xchg dec xor out or aaa jmp and inc lods loope push xor test in pop push in push mov pop pop movsb mov test mov jae (bad) clc cmp sbb jno repz add lock push push lret xchg jl scas fbld fcoms and jg stos mov roll and mov mov mov ljmp fcom mov pop jecxz push xor sbb or inc sub push lock loopne adc xchg fidiv lods repz leave mov movsl push es jg add mov xor roll mov dec xlat shll xchg cwtl mov cmp pop xor in cmpsl mov xchg jbe lret inc sbb mov cmc out dec scas dec ss dec mov mov mov jno xchg mov loope push and out fadd dec test imulb pusha repz ret pop xor jo jecxz lahf movsb jne or sub pop andl mov pop mov cmpsl shrl adc ret arpl (bad) sbb lock gs rcrl xor push inc (bad) (bad) pop dec nop insb icebp push (bad) in negb add lahf xor mov fdivrs cwtl dec out pop aas cs sub aaa sub xlat adc je movsb icebp push inc in cmp jecxz mov sub mov mov mov test xlat fldl jecxz ja hlt insb in pop das cltd sub dec inc and sub (bad) dec pop leave test scas sub clc mov divl mov outsl lods sub and sbb and (bad) out sbb int3 push push sti mov loopnew mov mov gs push adc jmp rolb cmpsl lret pusha push (bad) sbb push push lock rorb movsb mov adc das into sbb and pusha fwait into push sub loopne int sub stos sets mov pushl pop add lods ja lahf inc fucomip push ss sbb (bad) in in test pop imul cld push xor rcrb mov xor xchg xchg stos cmp inc stos xor jecxz cmpsb das bound loop and imul addl xchg inc out gs push cmp inc cli jecxz cwtl mov xchg and pusha stos lods and dec mov test pop cmp aas cltd mov sub enter xor xor mov rorb cwtl mov nop lock ja insl mov addr16 push bound ljmp fnop sarl dec jb xchg scas loopne outsb sti out test fsts bound rolb inc shrd jle xchg xchg sbb dec xlat out xlat pop mov and fwait ret ret (bad) pusha stc aad daa fs mov testl mov sub lock cs or mov and pop adc nop out scas iret stc mov sarb addr16 (bad) cld out jecxz es mov cmp jo cmp inc push test fcoms mov and leave aaa movsl mov pushf add dec and fisub lahf adc mov test fcomip pop dec jecxz idivb in fisttpll js cltd push in popf (bad) je (bad) lods push or sbb out std dec lret lahf and xchg mov sbb jge nop or cmpsb lcall in movl mov dec fwait ret lods pushf push fisttpl or cmpsb sub pusha inc add outsl mov sbb leave pop (bad) shlb sar fistpl ret pop in leave outsl fbld mov scas loop and outsl pop lret dec sub popa push push orl push cmp test test xchg outsb mov push mov stos loopne or rcrl cmp mov (bad) jne mov mov insl out mov stc leave xchg sbb jb mov movsl test (bad) into cmc je mov jae mov aam dec int3 lcall rorl and ret push lea add aas pusha lea jle out rorl xchg fdivrs dec in mov add test aaa push decl xchg loopne cmpsb pop dec scas lods sbb mov scas cltd loopne cmpsb jecxz rcrb ss and std ss dec dec (bad) (bad) stos aaa rcrl mov mov icebp and das xchg ja test (bad) dec sub nop leave mov dec (bad) nop mov or mov fdivrl cmp loopne add iret inc aad andl xchg fidiv (bad) lcall pop add fidivrl adc pop (bad) int3 iret ret leave insl shrb imul jg pop in in lods inc inc pop sub lods or loopne cmp ljmp push fcoms and and int3 jne movsb xchg (bad) int xor mov adc and lds fwait shll fildl pushf ret mov test cmp sbb pusha aas test pop or sbb aam sbb ljmp icebp insb loop in mov loopne xor popf imull lds sub ljmp jnp sbb or lret aas popf iret xor cmp and clc test dec fistpll mov pop repnz lods pop or mov divb cmp lret (bad) dec pop mov iret mov inc jecxz lcall imul cmp fnstenv es in mov loop cmpsb pop lods dec sub cmp sub mov push jg fs in movsl xchg dec lea insb insl hlt outsb push inc sti mov ret (bad) push daa imul (bad) test and sti inc loopne fildl pop andl cltd imul in push sbb fstpl cld (bad) lds mov bnd int push dec movsl iret orl lret into scas inc leave pop dec jnp xor push in imul repz ret mov pop mov dec adc xorl and mov cld lcall xchg mov add fs test sahf out es adc rcll adc pop xor push test dec ss inc mov sahf and lock adc jl xchg cmpsb dec clc ret mov fdivl mov scas mov inc sbb xchg dec xchg mov stos adc sbb pop mov outsl sbb mov mov jmp aas outsl call jne mov movsb int sub insb inc push mov mov pop clc cli cmp lret dec mov not loopne push lds int scas aad mov jp dec jp xlat dec sub xchg pop jl fdivr sub arpl stos xchg mov cmpsl jno loopne fcompl and fidivrl icebp ret mov mov enter pop sub mov dec data16 data16 mov mov mov clc movsl lods (bad) (bad) jo test jno pop push in xchg js sub test jecxz jbe inc and fild and push add pop mov iret rcl adc mov and sahf stos inc mov or fldcw div jae sbb movsl add sub gs inc pop (bad) in cs adc out push lods inc jno je dec dec jp daa cmp idivl cwtl out push mov pushf sbb lcall test push add call test (bad) repz sbb and (bad) mov mov cld and pop aam mov (bad) sbb aaa out xor daa push pop aas push test (bad) mov xor ret in pop sbb imul loopne int3 lds dec lea loop add inc sub mov jae test aas push jnp cwtl xchg xchg sub bound or sub lahf mov mov clc hlt out dec push std sti es cmpsl ljmp outsl push xor push (bad) mov aaa ret cwtl mov sub push (bad) pop mov clc push sbb and into je in cld mov (bad) sbb push test inc jg lea fcomps cs repnz mov in dec fimull movsl pop or scas inc adc push push aam inc push add jne mov push es lahf std pop gs sbb test daa mov push shrl cmp mov or push xchg daa imul pushf stos jns jnp idivl fstpt xor pop call repz (bad) mov fwait adc repnz xor or shrb jl ds cmc cmp icebp sbb outsl test mov mov jae or push xchg enter inc jns push cltd repnz or dec lods sub mov push adcl cmp add nop inc jecxz sbb sbb jmp insl mov stc sbb mov in test rol jp out mov or out scas adc sub mov sbb lds es std fimull sub (bad) ja out in cmp gs mov in dec les daa ret xchg pushf rcpps cmp mov xchg fisub (bad) pop inc or fcom (bad) in mov push push fdivp loop leave cmp jns cld inc push mov (bad) in jne and xchg pop mov adc mov inc or mov arpl insb fwait or jp je pop imul insl test je pop outsl aad add mov add pop mov adc mov xor dec in jmp cmpsl cmpsl (bad) adc js xor out in fadd dec jg aad cmp push fisubl mov dec jae add mov jl stc mov adc xor scas pusha ss mov aam and xorl enter xchg lcall out jge (bad) cltd xchg cmp ja jbe leave sub jmp jae inc out int mov jno std insl stc aad mov pop dec ret sbbb lret jo fsubl popf jo loope test in int scas pop pushf dec int mov ficom mov xchg les push lcall add add call cmp or ja mov fwait jbe rclb lds sub and and test cmpsb jbe in xor mov movsl mov stos shrb xor and or mov dec inc aad inc sub daa dec cmp mov mov mov dec fisttpl jnp push in lods test fisttpll rorb dec ret mov lea inc jp mov xor ret jmp sbb pop mov into scas scas imul insb mov cltd xchg (bad) (bad) sbb xor jbe pop sbb lods fisttpl rcrl push jnp pop push pushf add je push dec nop cli or push popf cli inc mov mov insl or mov testb jmp mov outsb movsl aam popa dec loop and push loopne test mov mov lea cmp imul or mov mov sub sub mov repnz out mov mov cmc push es js sbb je sub jnp xchg fsqrt stos into outsb pop cmp sbb cwtl push xchg pusha mov roll cmp mov orl aas movsb add or in and addb or (bad) jp jecxz call addr16 push xlat fwait loopne mov (bad) jns dec fisub lret js xor sub adc addl push das sbb lahf xchg lea xchg pop stc jle js jns data16 xchg sbb xchg lret das (bad) pusha push xchg daa push push lret mov aam sub insb flds fwait clc or scas (bad) sbb jge je cmp (bad) sti incb mov pop daa call mov lds mov std sbb cwtl (bad) (bad) jno ror jbe nop sbb je test push cmp fmull lea mov xor pop adc mov xchg std (bad) push and mov hlt pop cmp (bad) jae sub or inc hlt scas lret sahf faddl add add cmpsl aas dec sub push dec xlat cmp dec rolb push or rol sarb lret repnz loope hlt inc cmpsl cmp repnz (bad) fild and inc movsl mov iret sti mov push fstpt rcrl sub cmp pop jmp lcall je cmp imul xchg mov fmuls xchg adc xchg xchg mov mov add sbb mov mov je xlat aas pusha mov andl lret out das cmp jg mov pop sbb mov pop scas push jbe add repnz adc xlat bswap orl push dec adc mov mov push xchg fsubrl sub into jne cmp or sbb or push cli out or rclb sub mov cmp (bad) fildl adc fwait push jnp sub or push pop test adcb pop push fistpl lret lcall sbb in scas in cmpsb out ret jmp adc rorb orb lds imul mov inc out jb add mov xor test pop out (bad) mov outsb add or sbb int3 cld or ror add mov push ds cmp xor dec push dec mov aam push lahf daa insl cmp nop scas mov dec nop pop add adc xchg enter repnz ret mov vpunpckhdq sbb push inc clc loopne les into sub pop lcall mov mov lret scas xchg jns popf push push bswap mov ja push cmp cltd in add orl pop jnp xchg mov pop inc mov lock jmp sub push cmp insb inc insb (bad) pop stos fstl pop cmp test popf sbb jno dec data16 push jl adc out outsb lahf or add out xlat push and or mov pop sbb jnp jmp cmp pusha and mov loopne fildl jp ret cmc xchg jle ja out push out je es (bad) and adc movl sbb pop in rclb arpl adc push lock sbb adc aas lahf xor or mov arpl pop pop dec mov sti inc lret js sub outsl fdivrl (bad) fimull mov lds outsl fwait mov mov jae jnp adc jbe outsl call movsl mov sub in cmpsl sbb mov jae add and push js add popf repz or mov mov (bad) test add aam je sub push (bad) in lret test add xchg in imul inc jno add (bad) xchg shll imul lock sbb test lret test jb sub sar cmp outsl nop jle movsb idivl sbb xor xor sub and loop movsb int nop jns in daa xor mov int3 pop (bad) pop mov pop fild repz jae dec nop rol jle pop fwait jb ret lret loop jne in je enter ret push sub push mov pop or aaa lods (bad) push nop mov or cltd push psubw dec aaa pop mov sub rep aaa inc mov out pop pop in lret xchg sarb pop lret repz pop xchg xor cwtl int3 dec push push sbb rcrl xorb mov nop push loopne lret push cwtl (bad) or int3 (bad) jne test mov sbb add add add cmp in dec jno push pusha add mov pop xchg adc or mov inc shrb add in scas or pop movsl xchg pop add cli shlb sbb mov push pop sbb add stos fisubl and negb (bad) lcall (bad) lock sahf stos std pop jle jb stos adc imul (bad) or movsl fstpt or int3 stos push rcrb jnp iret xor xor dec scas ret and test in xor hlt xlat jb lcall add dec cmc subb xchg cmp aaa inc adc out jl call push inc or or hlt int3 mov aam dec mov je cmp aad jb sub rolb adcl js daa rorb pop and mov shrl (bad) cli xor jo lods sub add rclb test jp rolb iret xchg and ss xchg adc pop sub jp push cmp sub xchg inc push add jno mov lcall cwtl sub sbb cltd in test or push adc jae ljmp push into loope xor mov (bad) add (bad) cmp add xchg xchg scas lcall push cmpsl sar jecxz mov add ret enter fist jg cmovb aad into je adc cmp mov push dec out sbb ret fldcw cmpl lret sarb sbb jmp sbb in std jno ljmp mov cwtl jmp mov aam jbe rep xor sub loop (bad) or flds lret push test (bad) rorl lret adc pop sub mov push cmpsl xchg sub call cmc adc and xchg sub loopne xchg das mov or mov pop dec jmp (bad) mov (bad) sub lock lcall rcr adc and mov adc cmpsb xchg outsl fucomip mulb cmp inc push addr16 jle jge add les sub test pop push fcoml fsub or push mov (bad) out fcompl stos cli cmp (bad) bound mov imul fsubrs cmp xor jle dec sub push call pop sti cld jge call fld adc ret clc jbe mov test pop xor insb sub cmp (bad) lods cltd mov cmpsl scas pop decb sbb into cmp pop (bad) hlt and shlb mov sti enter sbb sub adcl jbe (bad) xor clc fsub inc call repz xor xchg xor mov pop cmc cmp xchg jmp add in cmpl je stos fcmovnu sub and jmp test shlb jp jmp call int mov test xchg ja sub sub cmpl jmp mov scas in mov sbbl xor cmp push inc movsb jnp mov pop and sbb repz xor pushf mov out adc aad ja mov mov and jns push sub or adc pop (bad) stos jg imul (bad) push mov arpl daa dec sbb xor (bad) dec sahf test sbb rolb pop xchg (bad) nop sbb jns xchg ret mov shlb xchg pop (bad) dec aam inc dec mov dec inc adc lret arpl push xor mov imul adc aaa sbb fidiv lcall push repnz inc and jno dec pop add in jbe insb lcall mov dec dec lahf fiadd pop call rcrl mov cwtl mov (bad) or dec mov aad jecxz outsb je push outsb add mov inc sub lret idivb push sbb jno scas inc lret jle push jo adc clc and pop xchg clc mov push ficomp jp imul lret loope cmpsl in fdivp cmp jo fist inc rorb pop pop shlb nop xor jne cmpsl lret ds lret inc out rcrl inc out sbb lods push (bad) call int3 fyl2x pop jge sbb mov mov xchg (bad) fisubr mov adc pop cltd je,pn mov jbe pop xchg lds fnstcw es and add jae dec push loopne inc push mov fsts mov shll and pop sbb cmp mov and mov fwait scas sbb lea test cwtl sub push scas and pop sbb (bad) fs mov mov jnp scas push aas mov mov in mov rcl stos cmc xchg fwait mov les sbb jbe dec pop out gs lret loope,pn lods xchg movsb pop push adc popf in out and xchg jbe dec pusha int jbe aam pushf shll ja sahf dec loope icebp push lock mov outsb in pop (bad) add repnz aad ret lea sub gs lret jns mov mov int3 stos fidiv xor leave repnz das sahf dec sbb sbb les les adc jg (bad) jg (bad) (bad) cmp es mov sti xor loop ljmp sbb bound call out stos mov in popf dec es push push mov jmp (bad) jb test xchg jne cmc push mov (bad) fs dec test and cmpsb cmpsl push pop aas iret add in mov addl test and addr16 idiv xor mov push and in mov push pop mov ss fcoms mov inc (bad) je stos (bad) cmc pop sbb jb repnz xchg loope,pn mov test mov lea (bad) imul inc cmp dec ja rol nop xchg pop inc data16 (bad) lea xor jae out and mov out add pushf or (bad) hlt mov jbe or (bad) mov cld lds imul xor push or xor sub jle cmp popa pop in imul mov pop imull in dec sahf popf mov push xchg cltd lock icebp mov xor cwtl pop pop mov icebp lock jle mov mov mov insb cli dec xor addr16 iret (bad) mov leave cltd (bad) and mov add cltd test int3 mov or mov dec mov mov push xchg imul xchg mov mov adc adc push sti xchg loop jl inc jo pop jb mov sub movsb xchg add out jnp mov dec sti xor inc mov push jmp bound sub mov pop rorl xchg inc (bad) les push inc les pop paddw and mov pop mov push mov mov xlat sub (bad) mov pop lea jle cwtl (bad) and mov or cmp mov mov xchg popf daa dec jno mov repz push cmp mov pop pop xchg add mov jns stos cmp cmpsl jge pop pushf mov test inc pop add sbb cmp dec sub mov pop mov popf dec dec repz inc mulb jne add jge int push ss push (bad) fs scas loopne xchg out dec repnz mov shrl bnd fldenv sub pop jae lods jnp,pt ret xor push xchg xlat xchg in test xchg js mov int3 sbb pop rol movsl push push xchg je mov rcrl test pop pop xchg fdivrl xor push stos inc mov imul adc inc shr sbb inc imul repz into int jb sbb pop xorl push mov loop mov sbbb xor dec aaa sub and psubw add iret (bad) stos xor adc arpl (bad) sub mov mov inc mov xchg cmpl stc call mov sub jae push stc inc ret or mov xor les stos xchg xor (bad) push data16 movsb in test pop mov xchg scas mov mov je xor inc cltd pop push push test bound (bad) flds mov cmp mov sub clc roll (bad) adc daa pop hlt cmpps inc mov pop roll hlt in inc fcompl inc mov std mov setle jg inc fdivrl xor sub rcl cmp and lret sub test adc xor insb jecxz ret in iret mov mov cmpsb sbb loopne inc lahf stos imul in add xor ja mov movsl inc adc mov in ss pop shrb xchg inc pop inc xor push mov cs lds adc ret aam add push mov fist xchg jp fmul test popa add and inc pop popf insl xchg sar xchg and sbb push pop punpckhwd pop jmp lahf lods adc and daa or sbb jle adc fs and pop (bad) lahf jg jae or jmp jl loope lock jge mov jae popa mov adc or mov test test mov (bad) fwait mov (bad) and push repnz mov sarb scas push pop call scas and pop scas cltd test fwait cmpsl sahf lds jg roll or mov mov aad jbe adcb sub mov and gs jo jbe mov sti add pop dec mov aaa (bad) fnstcw mov nop lods gs sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and push rolb mov xor push and mov cmp jmp mov mov ds mov lds pop rcrl jae add pop push enter mov lcall out aam or xchg adc add popf in cmp js dec mov sbb imul movsl je inc mov (bad) imul (bad) mov popa pop jge sbb push pop addl rclb lds pop sub adc add ljmp lods jne les shrb int xor insl pop push pop xor or cmpsl ds push cltd ror or lock imul cwtl fwait pusha mov out xchg lds dec push into pop hlt (bad) mov mov add jecxz mov test jmp enter les xor (bad) inc mov add das pop aam jmp in push sti pop cmp fidivl mov lret push adc push mov ret xor stc sub call jg daa cltd or mov xchg cmp stos ret cli cs aam and add xor fsubl or pop mov lahf xor cmc xor xchg out add inc mov and bound movsb bound divl mov cmp sbb xor daa (bad) mull imul (bad) std pop int mov (bad) cmp push cld fwait cmp add xor sub xor (bad) repnz sub cmp jae imul das push add lock inc pop adc xor pop fwait or test andl mov rorb je mov repz and push fldenv or xor sub sub sahf mov lret inc pusha add test das adc sub ds push lock sbb pop cmp cld mov pop and and repz sub lea push pushl pushl call add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret and dec sbb inc sbb sbb out jno and addr16 stos aas inc push xor std sahf inc inc data16 add jns cli rol (bad) jo inc ficompl repnz jb push mov adc in mov rcrb ds push scas sub out mov mov fbstp inc bound pop mov add or mov (bad) adc popf dec lock xchg movaps jge sub stos mov xchg sub cmp cmp outsb and adc in cmp cld movsb xchg or imul out scas pop clc cmp loope push jle pushf fcomps popf subl xchg cld or mov cmc scas js add imul fsubs (bad) mov in dec es push lret call add fs (bad) xlat in adc rcr cmp mov xor setae in (bad) xchg jne ficomp jmp and pop int3 adc iret orl mov lret icebp das push mov inc loop fstps push rcl xor stc cmp dec (bad) cmpsb int3 add cmpsl (bad) icebp addl test sbb inc repnz movlhps xchg test stos inc aaa inc mov out add ljmp gs sbb sti xchg (bad) jp fucomi pop mov in inc repz popa xchg fimull mov lods cmp push fcmovnu mov cwtl mov imul shrb jge lds sbb mov sbb pop fldl sub xchg jp or add pushf inc testb sbb mov mov mov add push dec stos add pop mov mov mov inc negb mov mov ja aam sub lods clc push lret inc and loope inc push sbb jno int3 stc sub or scas sub outsb sbb mov sti sbb push testl mov (bad) cmc fisubrl lea mov popa arpl ljmp push pop mov or inc cmp inc arpl iret sbb pop scas xchg mov and int pop pushl mov mov xchg (bad) fs adc std repnz outsl mov cmpxchg insl push lods sbb xor jo xchg insb call mov or push mov dec sub cmp dec xchg push inc pop push dec call lds adc movsb rcr sbbb cmp jnp or push cmpsl jbe fidivl push xorl pop ret add adc and or mov jmp pushf loopne add push loopne rorl stc out cli pop js outsb or popa cmp push mov das (bad) xor sti ja lss xchg idivb rcrb push push mov ja cli popf lea sub or pop xor cmp pop adc push xchg inc jge call mov dec mov test lcall ljmp pop mov dec sbb roll adc and stos push imul mov sub dec lret les jle pop xor pusha clc push mov push das nop mov inc xchg cmp lods ret jb lock aas inc leave pop loope pop and push and and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 daa mov and dec sbb push mov or addb mov mov xchg adc in (bad) mov xor fild adc add mov gs dec es sbb jp mov push push xchg mov mov aam mov ds dec hlt dec push xchg lcall aad divl xchg repnz adc jmp sbb pop jge ljmp dec test in mov xchg fist stos or stos fdivl lods pop ss (bad) or in adc arpl xor js movswl gs and pop xchg enter xorb js or insb mov clc push pop fildll (bad) cmpsl xchg test (bad) mov jb sbb pop fimul test adc inc sub in fs fs push sti movsb das jle in es xchg xor adc movsb and add and test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp aad and mov hlt call stos pop inc sub mov mov add clc fstps (bad) lds mov mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret aad and sbb movb fdivrs mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp shrl movb jle jg sarl in mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret aad and (bad) or mov mov mov mov pop cmpsl idivb jmp imulb jb pop pushl movsb push push xor mov and ret aaa or sti pop or (bad) inc inc cmpsb leave insb leave pop stc sbb cs mov sbb xchg xor push mov repnz je shll lret outsb jb add cli hlt mov int sub aam cwtl inc imul inc dec mov pop ss cmp mov add jno jo cmp movsb (bad) or scas and pop (bad) sbb push popa mov push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret aad and lds into je sbb mov (bad) fwait mov in andl mov andl movl movl ret int3 int3 sub in mov fdivs and or push mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret lret mov cmp push cld decl add dec add mov (bad) decl add js mov mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret aad and pushf adc addl (bad) sti and popw aas int3 mov or and sbb sbb jmp mov and xchg mov jp dec push mov setnp fdivrl xchg mov into insb mov movsl faddl into out xor push mov inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret aam aad int3 cwtl int3 mov or mov mov inc gs sub or arpl aas fldcw fist in push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret aad and jo es ljmp xor icebp mov daa dec ja xor mov cmp gs repnz addr16 and ss iret xchg push mov call xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret enter lock or or cld insb or mov and popf ficomp leave repz mov popl inc inc js into push lcall and shl neg mov inc sub arpl and push xchg push dec sbb int inc rcrl inc and dec pop push inc dec inc push daa cmp mov push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret aad and (bad) sbb jae push push xor lock cmpsb sub pop lods xor inc push mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret aad and xchg sbb shll out xchg js out cwtl (bad) mov cmpsl lods sbb ret cmp xor popf xlat mov mov push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret aam mov add sbb aad arpl call sbb push (bad) rcrb iret xchg or je cmp out (bad) and js and fiaddl push fcomp stos sbb and adc fist in sub mov xor mov push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret enter mov push mov push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret aad and divb (bad) notl or iret pop sub push jmp dec add xchg addr16 mov jge sarb cmp outsb xlat and mov push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret aad and sbb cmp fcoms in sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret aad and push outsb scas cmpsb xor mov push add mov and pop cmp xchg lea (bad) pusha jnp push mov push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp aad and push outsb push cmpsb xor mov push add mov cmp pop rcll andl in flds inc pop fstpt push shl mov xor mov and stc mov push bound cmpsl cmp in mov mov jecxz mov loope cmp out std cmp test lds cmpsb fnstcw fisubl scas stos jecxz or mov cmc push enter cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret aad and push outsb loop xor mov push add mov mov jecxz mov fbstp mov imul push scas ret in cmpsb icebp jae pushf add adc xor mov mov fcoml aaa fidiv jl stos pop cmpsl daa and cmpsl ret mov (bad) mov fcmovbe and cltd push xchg scas add inc pop inc sub aad xor gs popf inc ds loopne lret jnp add imulb pop jns pop inc (bad) sub mov sub xor fwait daa push enter aad push mov call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 aad and testb imul mov mov sti or mov orl push icebp adc mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop push push bound insb loope cmp cmp push shlb hlt pop push inc mov addr16 pop in inc sbb nop jmp lcall inc push in pop scas movsl lahf iret mov pop das call mov adc lea jnp lahf (bad) into lock xchg lahf sbbl arpl ljmp scas xchg repnz cmc ret insb scas loope sbb scas jmp icebp jo jo or repnz xor out push mov test mov enter push mov adc cmp adc cmp or pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc mov or push jno out pop adc movsl or adc pop gs or sahf sbb scas daa lock imul jb push call inc sub lcall js mov enter lea movsb pop sbb stos pop pop push in arpl mov int arpl rcrl sub pop pop jg mov hlt jge xor in cs dec out shrb nop add ds mulb mov mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret aad and cltd dec xorl jae out cmpb cmp (bad) cmpsb cli pop mov or add push jne shll xlat pop in xor out (bad) bnd inc cmp fildl out adc pop mov mov mov and aas xchg repz and cmp mov sbb int3 out gs mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret aad and negb pop das sti push cmpsb cmp add sub cwtl sbbl xchg sti lret dec push lods mov sbb rorl inc mov cmpsl adc fistl xor xor test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret das mov mov int rcl scas cwtl sub imul mov test je mov call call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret aad and push scas push or (bad) (bad) out sbb xlat fsubs cmpsl mov xor cltd cwtl or sbb cmp add movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret dec lods leave push lret xchg and (bad) sbb xor lock push daa loopne adc add mov scas repnz mov or call pop mov ret push mov cmpb jne call call push call pop mov pop ret dec (bad) push lret inc add sbb mov push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp aad and (bad) sbb pop pop (bad) shlb and mov and cmpsl pop js insb iret ret fwait in movsl jb icebp (bad) aaa push add mov sub xchg add sub inc sbbl xchg lock pop int3 js (bad) (bad) daa adc xchg mov inc test ljmp andl stc sub xor in push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret lret (bad) fidivr and jmp jge cmp popa dec pop addl roll ret repnz lods push mov sahf mov cmp je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call ret jl stos addr16 dec fwait cltd scas cli jmp sbb mov sub insb loop stos aas xchg loope inc xchg push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret aad and notb mov insl add popa (bad) stc int fbld in cltd ss loope mov roll push lods mov mov push mov fnop jo inc cmp pushf stos das gs jbe clc adc fldcw sub insb or push in mov or jp iret cmp jmp xchg xchg (bad) imul hlt cmp cwtl leave in (bad) xchg dec fsts push pop cmp call pop stos xchg sub repnz (bad) xor jmp dec ss jg lcall dec aaa cmp bound out mov int popf cwtl out pop lahf jl sub int cmp adc out paddusb push arpl xchg cmp xor xchg xor mov push int xor or nop add add (bad) out in subb sub call jb adc fwait mov outsl xor sub outsl (bad) xor (bad) xchg fs inc aas (bad) rorb lds mov pop lds sti mov rclb (bad) js cmp mov mov cmp inc (bad) pushf jbe inc mov sti addr16 inc mov mov lcall sub add lea test mov movsl out outsb pop xlat ret and idivl fstpt push mov movsb mov scas int xor fwait xlat mov and push inc sti (bad) pop xor pop pop push pop sti int3 imul jge xchg loopne pop adc push xor ret sub lcall lcall gs imul addr16 xchg jae lcall sbb lock xchg ss or xchg push (bad) pop bound sti cwtl mov mov add and scas rorb inc dec enter sbb hlt inc or addr16 lods int3 outsb in xor mov mov test jmp cmc xchg out mov mov fisttpl pop mov das add jp pusha push sarl out test add xor mov jle js out fxam clc push les fs xor and jge ret pusha mov inc dec mov xchg inc fidivr jne xor sub fnstcw fcoml jne fdivrs (bad) fdivl xor in into es mov fistl in sar ljmp fisttpll xchg imul icebp mov add jp cmp xlat mov dec insb add test pop insb mov mov sub cmp mov xchg xor (bad) rsqrtps add ficom les or (bad) call fistpl adc iret cmp into insl (bad) jmp stos sbb push stos ret xor mov scas xchg sbb xor stos js inc pop jae popa sbb sahf fdivrs cltd xchg adc mov push mov xchg leave ror xlat sbb sbb test (bad) xchg add xchg xchg bound (bad) jp test jns and inc push mov push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 aad and add insb push add jge jae lret mov xchg test jecxz mov adc mov mov mov fwait test decl or cmp jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 das fwait xchg fdiv xchg and lret and lret push add mov push xor sub mov xor push (bad) sub stos loope imulb xor int3 cmp add jg shll fmulp lahf push and das movsl imul rol out movsl pushf pop cld int jmp dec add inc mov dec imul fstpt mov aas movsb call out ja out data16 outsl subl push add pop inc stc cltd fs mov xor jle clc clc mov sub std dec sbb out add je cmpsb lds mov mov scas mov mov shrl aad and mov sbb push or loopne pop jne shl gs rclb jecxz fistpll jne (bad) push xor adc add pushl ja stos push mov push insb and (bad) or mov jmp call pop adc lds pop aaa dec jns call loopne call lock fimul call in pushl mov call pop ret das fwait xchg fdiv inc cltd pop int sarl jl mov sub insb sub xchg or (bad) into jmp es ret pop inc aas xchg jle xor and and push dec scas fsubl sbb mov inc mov mov or mov movsb loope inc aad in (bad) mov dec test in imul push push push call add ret das fwait xchg add dec push rcrl sbb xor push jno cld inc in sub xlat cltd push pop call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret das fwait xchg fdiv inc mov sbb xorb and (bad) test pop or push and out xchg jecxz call in push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp das fwait xchg fdiv xchg and enter push add mov push xor sub mov fidivr push xor popa mov leave mov test arpl push fstpt (bad) push sahf dec sbb into and loope repz mov sahf mov notb jecxz xchg loope and (bad) stc jbe jecxz iret outsl mov mov add push dec out push addr16 adc mov subb outsb ficom (bad) push cmp jo cs xchg (bad) fs fwait dec insl pop stos cld sub cmp add lods imul push (bad) push subb jnp cmp xchg (bad) mov xchg fnsave sbb add (bad) and push aad jbe lcall stos fwait scas sarb (bad) mov pop gs rcrb sub sqrtps pusha jne jg mov mov stc cld xor jecxz bound les dec fstps or das fs sbb rcrl dec ja xchg sbb pop insb (bad) sbb fcmovnb popf xchg ds add cmp pop push mov or fs (bad) mov sub push into (bad) nop inc jle minps stos fiaddl sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp das fwait xchg fdiv nop mov jb xchg mov sub rclb stos aas loope cmp jbe mov out pop fisubr add nop add mov shrl mov fsubp rcrb mov sahf in push mov jno mov sbb out mov imul mov movsl je pop dec (bad) push add call in cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret daa sarl push lret ss fadd insb out sub ret mov push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret das fwait xchg fdiv inc dec aam scas lock sub inc mov lods sub icebp (bad) lods popa sub mov sbb je je stos or pop mov cmp mov jae outsl push dec rcrb fsubrl xchg cmp bound fwait pmullw lea outsl mov or shrb xchg cld movl cltd lods dec fs imul flds push lret pop stc mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret das fwait xchg fdiv fwait dec addl sbb stc stos adc xor test cwtl add ficom test (bad) aam xlat add push imul mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret das fwait xchg fdiv cwtl dec addl lock scas inc xor in nop jno sti adc pop lea cltd inc sbb psubusw push movsb jp clc and rorb push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret das fwait xchg fdiv inc dec roll push pop sti mov test mov outsl test cs addr16 push repz movsl movsb roll sbb mov fdivs ja rol mov cwtl fwait in pop jmp das in mov inc inc xlat xchg mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc fdivr push dec cmp ljmp jns xlat cs mov lods cmp iret xchg orl pushf je and xchg outsl gs ficom pop sti lock xor call insb outsl mov movzwl sub je sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret sub imul cmp fidivl scas sub loope mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret and ljmp je jmp mov jb inc jmp and mov add loop jp xchg cmpw je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret xchg sar add shrb div es and mov sbb pushf call cmc dec popl xor fldl fistl lret cmp push in repz stos hlt into and ficom cmpsb cmp imul cld dec sub adc dec mov sub xor divb dec mov pusha jne stos fisub jno arpl scas out mov pop pop addl ror fcmove add stc adc sub ss add (bad) lret jne popf rcl lret fwait sub ficoml gs xchg xchg mov xchg jl and lods loope sub push cmp sbb and push fwait out xchg inc lcall push pop loopne fmull jmp loopne nop mov pop inc imul arpl rorl jbe mov mov sbb loope dec (bad) repz fnstcw mov (bad) iret mov jl xchg jl sub fidivl jl loope add cmpl push out pop fsubr and dec mov notl jl push push ljmp pop sub (bad) mov scas jl std cmp or call in push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret das fwait xchg fdiv inc dec roll outsb nop sub push mov stos fstl fldenv xchg leave dec mulb std jmp roll pop nop in add cmpsl add mov add jo jecxz pop movsb out lods mov add mov mov jno adc xlat (bad) jne adc mov mov jo test std insw inc stos ficomp ret sbb test push into cs or mov push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret enter or and xchg and mov push mov push push mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret daa push cmp sub and push sbb mov push popa dec pop pop loope adc dec bound lock idivb mov mov enter mov mov push mov mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret das fwait xchg fdiv inc dec aam scas lock dec mov adc dec push clc outsl mov ret stos out fsubrp repnz push inc pop (bad) nop loop stos mov sbb (bad) call lahf sub push ja pop jp repnz mov scas push ss (bad) cmpsb adc out aas mov cmpsb or jnp movsl fwait mov cmp mov ss adc dec shrb out repz not xchg jbe mov pop sbb mov call in push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret das fwait xchg fdiv inc dec rcrl fnop je lret or lods rorl cmpsl pop mov arpl add push movsl pushf stos add pop xor jae (bad) mov sar loopne mov out mov je dec sbb inc mov stc clc iret lods out iret out mov mov mov jae jo pop dec lret scas xchg xchg jno outsl inc jnp mov popa iret ja xchg jne jp xor negb mov fisubrl push dec icebp and jae cmpsl fsts jbe mov jno dec xchg fistl (bad) xor loopne adc or aam push lret mov sub sbb add clc in pop imull push push dec jnp mov xor sbb xchg dec dec pushf push pop xchg push fmuls push mov xor repnz loopne,pn mov xchg xchg fsubl scas or adc adc or adc es int3 lods test add push adc in sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret das fwait xchg fdiv adc jmp xchg stos imul xchg lahf rcll stos popa mov mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret das fwait xchg fdiv pusha (bad) xrelease and fsub xlat xor in xorl lcall pop movsb mov lea cli jo data16 scas mov orb xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret das fwait xchg fdiv add (bad) int3 mov inc loope xchg mov lret rcrb xor popf add ficom mov adc fistl aas pushl adc inc jle mov rcrb test mov insl sub jle mov or mov lods xchg and js,pn fisubl sub fidivl fs sub and addr16 mov mov inc mov xchg or lahf icebp lock push mov sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret das fwait xchg fdiv inc dec sbb sub decl push (bad) insb jbe roll aaa lcall outsl call mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret das fwait xchg fdiv cwtl inc orl pop outsb repnz jg xor sub cwtl sbbl roll (bad) icebp lret sub cmpsb sar mov movsb cmpsb pop lods and xor lahf inc xchg lock mov mov cltd arpl addl cmp jge (bad) fild xchg fsubrl call dec cmpsl ljmp push dec and adc mov push (bad) xor insl or loope cmpsb inc stos int3 mov and dec add cmpsl loopne leave pop xor shrb add push (bad) ss rcr es ret add movsb pop outsb inc sarl stc add xchg stc xchg xlat or mov xchg adc test dec pusha mov mov adc iret test adc iret test adc iret test adc iret test adc iret test mov mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret das fwait xchg fdiv nop and pushl loope push mov and nop aas ss mov decb stos lcall sbbl mov sbb arpl xor pop inc pop mov movsb jp gs or inc cmp pop cltd (bad) into mov (bad) (bad) leave inc pop push mov push mov sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret das fwait xchg fdiv cwtl inc orl push mov sub or fdivrs in arpl mov sbb cltd fisubrl decl jmp rcr movsl push (bad) jne jbe pop or cmp add fcoms movsl sbb mov stos mov inc mov dec adc dec or mov imul into out mul cltd in rclb call icebp mov mov movzbl push call mov movb mov mov pushl pushl call pop ret das fwait mov push and mov imul mov jne pop (bad) nop dec push cwtl push ljmp sub push or arpl cs mov outsb lahf inc fist and mov sbb out call adc in cmpsl fnsave pushf shl out in dec rol gs pop je inc das or hlt cmpsl jbe lock imul in lea stc out das sbb add fcmovnbe std sub lcall (bad) sbb pop in pop aaa out jbe adc inc fwait les jo les mov mov ret sub xlat repz fcoms fadd pop adcl push or xchg fwait xor sub mov sub add addr16 mov adc sbb xchg or dec push push mov pop jge sbb add loope jns add add push push push push push call int3 and cmp adc repnz sbb mov sub pop xchg dec pop adc jbe lret xchg mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret das fwait xchg fdiv nop and fwait jb (bad) jmp cs jl and pop sub pop xchg in test (bad) mov sbb mov lea arpl cmp out sbb mov adc scas in pop bound xlat push xchg sub xchg jmp fwait adc add cmp or jae inc daa mov mov stc push mov adc pop sbb hlt in (bad) pop pop or adc data16 mov lahf cmc test mov and jno mov push mov dec (bad) std arpl ret xchg or ret stc adc or mov push aaa idiv inc (bad) call ret enter in pop pushf loope out mov mov pop aaa int3 inc add imul mov lods jmp aad popl jae pop mov sbb fucomi or mov repnz mov daa pushf sbb mov sbb ret sub pop outsl cmc lret sbb mov ret inc pop and or into cmpsb pop into in (bad) xchg or push xchg jnp push fmul dec inc push push cmp cmp mov mov lea mov imulb and test popa stc push push or or js (bad) bnd into aaa out and lcall add std lods mov je in mov cmc (bad) xlat push cmp pextrw adc add loopne ljmp pusha mov popf sub mov jo nop lock xor fwait jb cmp sti inc in xchg lds je into jle dec mov cmp and lock dec mov mov mov mov rorl push mov xchg fdivrs repz pop sub jb (bad) xor stos fs sub push adc mov out inc xorb jb dec jo movsb xor shll incl pop js fisttpll movsb pushf or pop cmp cltd push jno mov dec clc xchg inc (bad) icebp jg add lahf mov sbb repz popa arpl xor lahf mov arpl mov dec mov ror in ljmp hlt jmp pusha int3 pop fwait daa pushf call push dec les pusha cmp dec jnp int3 inc xchg and dec or cwtl xchg and xchg lock pop push loop inc pop test out dec xchg mov pusha fwait jbe scas dec dec loopne aas mov push mov xlat repz add fsubs mov fistpll xlat ret inc popa shl mov stos test loop xchg jne inc negb flds scas push cmpsb repnz sub rol xchg jo adc (bad) decl cmp (bad) (bad) loopne insb lahf adc sbbb shrl adc mov xor cmp xlat cmpsl out repz sahf nop mov adc jo or adc fwait imul pop std in push (bad) mov jl pop insl test jp pop ret testb mov fstl cmc add jnp or sbb xchg fidivr pusha adc js addb (bad) and hlt arpl mov adc dec jmp test es mov mov and mov pop fnsave lock not add inc fbld jecxz sub add xor sub jnp mov dec test and mov popa aad add mov xchg push ror cmp xor push dec ds push jno adc xor sbb in push push inc mov (bad) sub outsb cmp icebp xlat mov mov into or fwait pop ja lea sub lods mov mov mov and sub push and and (bad) hlt sbb dec jl xor mov cmp sarl sub add addr16 pop inc jl sub sub mov cmp cmpsb loop ds jns jnp aad icebp lods lret pop pop stc adc push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret das fwait xchg fdiv inc dec sbb sub bound pop sbb xchg stos test fmuls (bad) lahf lahf push fildll sbb ret cmp and add ja lods cmp mov push aaa xor jp adc and divl mov aaa pop jmp aad addr16 mov fidivrl cmpsl push mov adc cmp jo mov cltd int3 lods sbb ret and jae mov mov xchg roll or call insl test jno mov out dec cld lahf les or imul jnp adc fildl imul xchg sbb icebp inc sub movsl and popa pop pop dec fucomi adc imul jo mov stos push fidivr mov pop pop aaa hlt adc sbb pop jae adc mov xchg jge and invd pop cwtl loope cmc shlb orl mov loope test pop fisttp (bad) call lock imul jp inc mov les dec dec xlat shlb lds lods jns mov push adc (bad) call orl mov xor xlat cmp dec mov popa mov imul xor cs les lret and shll xor ret rol (bad) arpl test mov outsl jno push mov cmp mov add lea push push sbb push mov mov adc pop cs add imul movsb out and jno je pop adc or mov mov mov or bound gs pusha dec mov pop ret mov mov outsb or insb add jecxz mov or mov push lret and dec pop sbb inc mov popa cld add jae or fcmovnb cmp lret call (bad) ja mov mov popa rolb loop mov and stos outsb fnstcw repnz mov mov fs nop js inc gs push dec xchg iret (bad) or jecxz xchg (bad) xchg jmp imul mov inc cmc cs int and mov outsb repnz mov sub and outsl call xchg add out sbb or xor jge imul sub enter mov lahf sbb dec xchg dec icebp xlat cmpsl roll jle mov sbb inc into mov fldl and mov xchg push mov pop pop iret lcall mov xor push cld pop xor sbb outsl push subl xchg add jns or inc pop mov loope push xor bound or xor cs in icebp (bad) sbb push add (bad) mov sbb mov rcl repz pushl daa pop jle cmpsl (bad) xchg add push dec movsb jnp sbb push loop sbb loop pop cmpsb xchg add gs leave mov gs js (bad) imul icebp call data16 ret jns jo,pt cmpsl or push sahf push fld inc mov mov jne (bad) lods ljmp dec insl dec xchg shr pop jmp das lret mov cmc and add js mulb mov rorl sbb movsb cmp xor adc int3 ss data16 cs es nop cmp cmpsb insl pop cmpsb sbb xor into dec fistpl addl aam and gs (bad) (bad) shrl adc rolb sub mov in inc dec xchg xor call icebp ljmp mov inc or movsb sbb pop cmp push lods fidivr test mov jle dec sbb (bad) aad movsl jno jmp test aam mov lretw cmp dec sahf push test sbb add (bad) hlt sbb idivb ljmp sbb je pop aam add inc in mov test add xor xor push imul or nop inc call hlt cmpsb mov (bad) mov push adc fbld mov popa aad popa lods shrb ficoml xor and jno sbb or push repnz rcl mov scas call inc mov push xor cld jg bound mov addl mov mov adcl push mov or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret sub dec imul leave add inc xchg push (bad) pop (bad) enter pop loope out sub inc ficomp jb scas xchg rcl push pop mov pop insl sub adc mov iret incl cmp fistp fldenv sti jge mov pusha ds pushl mov inc sub clc add cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret sub loopne pop and pop inc pop fbld test or push cmpl (bad) mov mov push mov call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret das fwait xchg fdiv cwtl inc xorl mov pop add cmp jecxz daa and xorl inc (bad) sti mov push push mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret das fwait xchg fdiv cwtl inc orl loope sbb xor dec or mov mov pop cltd out and cmp or scas xor pop push sbb and sub push gs jae adc pop shrb stos mov hlt push add jmp popf add call in addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret daa push cmp lcall or push popa dec pop movsb jns cltd (bad) (bad) shrb or rolb or lods push (bad) lds fstpt or pop pop (bad) fild call in push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret das fwait xchg fdiv adc lahf bound testb and movsb arpl imul call in pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret das fwait xchg fdiv cwtl push sbbl mov lea jne (bad) xor mov add xchg push test sti movsb mov shr mov mov push lods jne lods (bad) mov rcrb mov fnsave cmp aaa dec mov in mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret das fwait xchg fdiv nop and push push test sub cmp faddl pop mov lret test scas push jae inc sbb clc mov push sbb jp leave fwait cmp lret fisubl sbb fcoml pop cmp mov outsb shll pop out nop fildll jge lods popa cmpsb loop sub adc xor fsubl xchg mov push inc sarl test clc or mov fsub push (bad) xchg cmp cwtl rcrl add aad jnp (bad) in cs xor movsb adc xchg lea rolb sub sbb int3 enter pop sub xchg inc mov pop fimull iret or sbbl insb xlat jbe add push scas adc ja (bad) pushl rorb xchg rolb add push add add pushw xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp das fwait xchg fdiv mov mov call in mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp das fwait xchg fdiv mov (bad) (bad) out and inc and es push mov push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret das fwait xchg fdiv mov add stos iret cmp push test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret pop movsl insl dec ss sbb jno jbe dec jno out stos lret aas int3 xchg mov aas aaa int3 mov jecxz mov push leave xchg dec xchg dec inc lcall mov push cs je and xchg cmpsb xchg mov push mov push call mov push mov call pop mov call mov pop pop ret dec sub push lret ss (bad) push mov push loop jle add test jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret das fwait xchg fdiv adc xchg notl or je push mov adc call in push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret das fwait xchg fdiv cwtl inc addl mov fiaddl mov test and xchg cmpsl cwtl and cli mov push mov mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret das fwait xchg fdiv inc push sbb sub jb stos or cs dec daa icebp pop insb fwait mov and inc cmpl fwait xchg divb nop inc pop xchg jle jb mov out ret sub cmp xor pushf mov repnz imull sbb xchg std pop cmp repnz pop jl ret in cmp ds fisubl mov call in mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret das fwait xchg fdiv in push xchg hlt and jnp sbb sbb sub call mov popa adc and push push jmp add jnp add pop rol mov repnz hlt adc out mov in (bad) aam push ljmp insl inc and mov jno (bad) into out loop mov sub cmp inc imul (bad) jno in (bad) pushf and push fs sub cmovbe cltd stos fild in adc or outsb (bad) pop add sbb xor jno fldt into movsb out or test jmp sbb and pop push push int3 enter xor test cmp outsb arpl dec je (bad) push jno xor imul adc lds (bad) nop cld shrb fist pop sbb ja cltd push push adc and or add mov arpl push push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret das fwait xchg fdiv nop and push mov movsl shrl sub sub or sub outsl pop xchg lahf ficomp pop xor push lss sbb lods cmc and push mov mov daa or mov inc fidivr fwait (bad) shlb sub gs aaa sbb push mov mov insl sub std nop lods sub jns mov insl je mulb pusha iret pop lods (bad) mul hlt and and scas and int3 test adc js dec outsb mov inc (bad) xor les add push aam jnp insl xchg jne mov push jmp add sbb push or pop loope (bad) cmp mov mov es push int jp (bad) dec add jne and ret addr16 lcall mov sbb shrb std xor adc insl lods xor jp mov dec pushf inc int shld call add ja sti mov adc jl adc sub mov fcoms out iret sub adc in sub xchg decl aaa cli adc push cmp ja fwait jno or xor addr16 add pushf pop adc add push jg fsub lcall jnp adc pop push inc or bound adc es hlt daa adc sub or lods lahf in pop xor (bad) negb lock cld lea test cmp mov cmp xchg lahf cmp loopne and or add pop xchg cld adcl daa jg or sahf cltd and cli xor sub mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 das fwait xchg fdiv dec xorl mov mov fmull add fiadd into or ficom dec movsb inc sbb xor cltd add jge pop outsb fiadd mov test insl int idivb (bad) lock imul (bad) pushf (bad) lret pop jb mov jecxz xchg (bad) fistpll punpckhdq adc adc mov dec pop icebp xchg lea pop push lea clc sarl pop in mov call in push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret das fwait xchg fdiv inc cltd pop int sarl jl mov cmpsb cli pop xorb push je in inc push jle fstl rclb mov dec add adc dec push or and sti fnstenv push scas adc repz in push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret das fwait xchg fdiv pusha decb jno (bad) std je jp out loop or sbb scas adc stos out add jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret das fwait xchg fdiv dec xorl movsl lds sbb inc and out pop inc push add outsl mov in adc sub jo sahf inc fisttp push aam js das loopne in ret sub (bad) push adc push loop inc fldt mov adc jnp mov push mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret daa pop mov add ds lret push pop lods sbb inc cmpsl or test or push dec mov inc popa pop sbb sahf clc xchg in mov push loopne gs and mov jno mov shrl push mov jmp cmpsl daa and bound popa add xchg (bad) fsubs jne shrb daa inc mov loopne fadds xchg push sub mov push mov sti lods rorb fdivrp in int3 mov cmpsl dec test sbb xchg (bad) repz xor pop xchg mov adc sarb or mov add loop jmp ljmp ficoml mov outsl fsubr fs and cmp iret mov jp fcoml adc js gs mov jmp sub sub mov mov cmp shrl push mov and mov mov (bad) push ret popf and rorb orl in les outsb test push pushf shlb sbb stc mov bound mov xchg jb sub mov scas push test cwtl scas ss xchg iret pop mov notl loop shlb aas pop icebp loop fist jns cmp rolb sbb pop jecxz das stos rcl les test fidivl test cld pop pop in popa iret xor sbbb loopne ss add lea adc adc imul ss xchg dec (bad) and icebp push push in (bad) add movsl or jb jp push mov popa and (bad) cld xor jbe mov cmp pop sbb (bad) push insl adc pop pop mov in push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret das fwait xchg fdiv nop and adc lock int3 pusha mov sub or mov push xor popa xchg out popf sbb rcll inc ret arpl aad mov outsl dec mov ret icebp loop scas fsubrl pop mov push mov mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret das fwait xchg fdiv inc (bad) (bad) int3 lods pushf push inc or mov mov lret mov push mov push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret lret mov cmp push outsb ret negl cli xor mov mov call mov ret mov ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret das fwait xchg fdiv nop and sbb es hlt and movsl sub nop (bad) gs and mov clc lds dec push jnp push arpl in bound pop dec daa mov mov arpl xor adc addr16 sub out and mov in sbb loope loop into out jb rcrl mull cmpsb ljmp repnz gs jo std pop jo dec xor dec cltd bound push push jg jge push xor xchg fcmovnbe jae aad dec xchg add jl ljmp ret cmp sti push in loopne jbe repz pop or push jl outsb js mov cmp mov mov cmc cwtl (bad) xor or jmp (bad) mov into iret sub push mov push sahf ret mov mov ficomp test pusha sbbl and push lcall sub sahf add ljmp jne pop mov arpl in adc cmpsb sahf ficom push or add stos ret std fisub mov pushf and jne mov mov xchg andl xlat test je clc pop jl push arpl (bad) daa mov fisttpl daa xchg jl cwtl call rolb mov fdivl sahf in xchg aaa arpl je cli lret cmp push ljmp loop pop push push out cmp mov (bad) mov sbb aam and sbb xchg mov mov ret push jmp inc jp repz xchg in add xor daa pop popf pusha imul movsb daa sbb pushf loop push pop out pop lahf add mov das push push mov mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret das fwait xchg fdiv cwtl push lahf dec or js cmpb xchg fsubr fistpll lea sarl push sbb insl in adc popf or xchg mov pop fmull or mov out sbb mov arpl sub xchg lds inc inc sub sub lods mov aas inc daa xorl imull pop xor mov repnz add ret outsb stc in dec mov outsl adc (bad) int xchg push xchg mov call in push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret das fwait xchg fdiv dec xorl mov sub adc scas aad add and mov sarl insb push sub ss (bad) xor je sub xchg jp xchg pop mov cmp pop fnstcw push pop in cmp int3 lahf sub out int vpaddd sub cmp cmp in sti mov lcall mov and xchg (bad) inc pop xorl jl sub fildl leave adc jbe test ds push mov push call mov mov lea push push call mov pop pop add mov pop ret das fwait xchg fdiv nop and push mov movsl shrl sub jb mov pop outsb bound aas add cmp sti lret mov enter shll mov xor das rorb cs push jmp sub sbb mulb inc in sahf mov jae adc dec mov mov movsb ret inc or xchg and mov xchg mov outsb inc stos or inc js adc xchg jecxz cmpsb es cmp jbe xchg in lret stc in jb ret dec mov ror sub add fwait pop push mov jo add in lahf mov add add mov in dec sbb out (bad) xchg lock xlat ljmp sub popa push ror xorl push test enter add fistpl xchg mov (bad) pop mov jb adc jp push xchg popa fs (bad) ds outsl das xchg lahf rorb je fimul lds inc sub jge sbb mov sbb into int ror imul dec dec bound xlat jmp lea ljmp jo mov xchg cmc pop cmpl pop push add inc stc cwtl cmp jecxz std sbb mov call stos ficomp lcall xchg les ljmpw xchg orl aam or mov mov in mov mov loopne loope push xor sub divl hlt xor push out adc sub or jle aaa jp je icebp cld add xor inc adc and (bad) sbb or mov adc enter mov or push or inc (bad) mov sahf ss sbb jg shlb imull mov push inc xchg das out cmp and mov xor decb xchg icebp and lock xor push mov jo sub push pop gs or mov adc lret lahf ret inc mov test mov ficom jecxz sbb and imul out cmp (bad) and jmp push add sbb (bad) int (bad) aaa xor sti xor je fs fist sbb pop enter sub add cmp cmp cmp push jl lahf jl or or ffree leave cmp sub cmp dec adc iret fnstcw pop bound jle jmp jge leave cmp or sbb js stos stos scas mov pop in insl (bad) jb cmp frstpm(287 fs roll inc clc xor lock enter outsl push sbb adcl inc enter jnp add insl ljmp fldt push push leave popf xchg fwait (bad) add mov out les pop push cwtl scas bound lcall jp imul movsb mov imul in push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 enter movsl out mov out jge xchg dec jno loope mov repnz insb loope stos pop and cli lret movsb aad lods lods add rcl pop inc and (bad) in mov lret (bad) sbb movsb pop cld dec jbe (bad) lcall addl movsb js sahf test inc fwait out (bad) loopne icebp (bad) dec push add bound lods sarb outsb inc stos pop mov cld cmpsl xor imul dec jno int sti mov in lahf icebp xor push mov stos popf rcrb inc sub loope es wbinvd inc add fwait sub int xlat pop cld lods or mov push pop xchg push rorb jmp pop xchg (bad) sbb loopne push inc ja mov sub sbb push loope cmp adc (bad) or call je lods aam push loop jecxz bound out pop xchg daa jp js or mov sbb lahf ret stc cltd push dec (bad) repnz orb rclb add (bad) sbb int cmp xchg xchg inc dec mov jno fdivr jge shll push mov mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret das fwait xchg fdiv nop mov imul mov pop inc add cld addr16 inc clc leave xchg into imul dec mov jne jo fcmovbe leave mov in sub push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret sub jge mov scas pop sbb dec xchg mov fwait imul pop fldl les sub pop inc out pop jne ljmp push fstpt (bad) ljmp outsb into cmp xchg mov scas into fbld popf (bad) aaa cmc pop push in dec and mov pushf loop out mov fiaddl fnstsw arpl hlt sub or stos mov add xlat pushf pop jle rcrb jle and xorl xchg xchg xor or push (bad) mov int3 ss and or ret out dec incl mov inc mov pop data16 push loop inc sahf mov aam (bad) out sbb mov adc pop sbb mov dec cltd push sbb shlb adc test add (bad) sbb or popf cmp sbb cmp mov mov xchg jge cmp push jns pushf pushf ficomp stos rcr jnp je adc adc pop dec cmp int and jb outsb insb cmp outsl sub mov test int hlt dec loop mov mov xchg rorl cli adc xchg inc arpl (bad) mov mov pop adc push scas xchg push ret (bad) loop imul push sub imul sbb push xor ret js gs (bad) daa adc ja lret inc shlw test push hlt push fwait cmp das cmp out xor xchg imul inc scas xor ja mov mov test testl push mov push mov sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret das fwait xchg fdiv nop and adc lock int3 pusha mov sub or mov push cmpsb mov xchg mov push mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret das fwait xchg fdiv dec xorl cmpsl inc push out push mov fidivl mov jmp mov (bad) and leave outsl xor mov or cmp cmp out pop xchg lcall lcall mov je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 das fwait mov popf adc cmpsl xchg enter push sbb cmp stos (bad) flds xchg dec and insb fiaddl inc sbb decl xor inc adc (bad) hlt lret xlat stc mov shrl gs sbb int3 inc push pusha xchg (bad) jle int cmp cmp push outsb adc jge inc mov mov jno jne (bad) lret xlat xor push call mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret das fwait xchg fdiv nop and push mov movsl shrl sub jb fild mov sub ds insb arpl sbb cmpsl ds or fildll pop (bad) add xchg mov jp outsl mov xchg lods fistl xchg hlt cvtdq2ps sti jbe jno sub pop adcl (bad) test xor sub sbb or mov fbld mov mov push fisttp imull ljmp xor mov fwait push pop cmp inc rolb mov (bad) sbb fdivrl jecxz pusha (bad) lret cltd xchg test add mov jecxz inc xor mov in push mov mov cmp je mov mov test jne call mov pop pop ret das fwait xchg fdiv dec xorl scas frstor xor mov xchg cmp sti adc adc fsubp rclb push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret das fwait xchg fdiv nop and out or lret push lock nop mov lea loope jle stos ret cs add stc cmc call call icebp sbb pop rcr push pushf xor xor stos pop inc aam xchg pushf mov arpl leave and insl movsb and (bad) ljmp sbbl fstl pop jge adc popa aas push movl pop imul test cmp je enter xchg (bad) daa test mov jns push add ret js aam add xchg xor pushf aad fiaddl das adc pop fucomi dec adc cmp jmp mov arpl mov inc fs fwait mov jbe adc jb xchg push fsubs into lahf sbbb or (bad) lret nop pushf test jns adc or ja fistp jns sub loope xchg cmp daa xor pusha fs loopne frstor lds mov push inc subl mov xlat pop dec (bad) sahf cmp dec popa dec loopne call in cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 das fwait xchg fdiv xchg and and lret push add mov push or (bad) hlt pop insb bound adc stos mov inc repnz leave add outsb leave and mov lret (bad) jbe clc mov sub fadds loope push fldt repz xchg aad inc sbb xor int3 popf arpl (bad) sbb mov cmp mov cmp lcall and mov lock push aad insl pop pop sbbl cmp xchg or fild inc sub int3 xor leave push lea pushf imul inc fstl gs mov adc dec inc mov xchg add dec inc sub test imul aad fisttpll les pusha and inc out outsl inc fildl sahf mov popf cli psraw imul lahf xor sbb test or mov (bad) xchg jnp pusha sbb sbb js pop pop data16 fwait mov loopne ret ja fmull (bad) dec test out xchg test lea dec dec mov scas adc inc inc push rclb adc sub in ljmp (bad) jmp mov push mov xchg xchg out (bad) daa jo jbe jmp jecxz mov ds out mov inc jbe lret pusha dec stos mov js push add loop mull add (bad) (bad) std enter pop adc out sbb mov daa es lret sete lea jno jmp mov std sub lock sub xchg and add and sub jecxz mov stos mov xor (bad) mov pop xchg or inc jns cmpsl pop data16 adc dec loop test add fldt add jge sbb adc insb stos xchg popf add jl nop into hlt dec cmp dec lds mov adc in pop dec orl mov inc popa pop xchg dec push inc cld movsl pop push or sarl (bad) out mov adc push xchg repnz inc push flds xchg (bad) xchg jno pop scas mov les fildl push xlat or test mov sub lods repz xor xchg rolb and xchg sbb popa mov xor test rcrb outsb adc push push jae in inc mov lahf mov or push mov sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret das fwait xchg fdiv nop and adc lock int3 pusha mov sub or mov push loop xchg add idiv and popa inc outsb adc mov jl fwait mov gs std jle pmuludq push test xchg xlat xchg xchg aad mov fsubr outsl sub sbb insb xchg or imul stos lods loopne lret insl test lret std mov pop sub xchg subb jmp lcall repnz ror (bad) cmp bound out pop sub popf or inc jnp dec and pop inc mov int mov mov jp repnz xor lahf jns sub cltd jp xchg sub aaa scas test jae ret sbb mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret das fwait xchg fdiv inc cltd pop int sarl jl pop mov xchg dec sub ret into push rolb add lret push xor lret add inc lret sti dec ror aam ret xchg mov (bad) sbb (bad) cmpsl push mov mov inc cmpsb and mov push mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret das fwait xchg fdiv inc cltd pop int sarl jl adc sub ror sarb add lret push xor pop inc aas xchg jle xor and and in notb push in sbb xchg call call in push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret das fwait xchg fdiv inc cltd pop int sarl jl (bad) mov xchg lock jno lods into push (bad) mov (bad) leave add (bad) mov push inc aas jne jb inc lret sti dec ror xlat mov insb lds mov mov outsl pop mov loope mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret add ret dec mov test jg out fs push out es fsubl add pop pop jno pop test pop in sub adc fwait stc cmc cld mov sub lods jo jp push mov push add cld repnz sbb fcom pop xchg dec pusha lahf dec mov mov add and aaa inc sub fdiv dec jno and (bad) lret repz movsb and mov stc shll test (bad) mov insb cli sub dec jbe xchg cmp jbe test in cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret das fwait xchg fdiv nop and push orb mov out adc mov in dec xchg adc xor mov (bad) jae jg insb jbe or push or and aam pop sub xchg sub xchg out pop aad add icebp pop lcall xchg inc push push lret out rcll ja (bad) and outsl clc mov push sub mov fstpt stc adc mov sbb stc dec sub push adc or lret push movsb push inc xor adc mov add clc or mov xor or in pop das test mov fs push (bad) push ljmp xor sub out push dec in mov (bad) cli shr stc out sub (bad) ret movsb das sbb xchg ljmp inc adc push (bad) imul mov push mov push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret das fwait xchg fdiv nop and xlat xchg cmp sub pop imul jns cmc xchg cmp jmp sbb fs mov enter aas jge aas outsl fisttpll icebp sub (bad) dec adcl pop xchg loopne aaa inc or pop icebp mov lea dec aas dec (bad) cmpsb adc fnop iretw mulb sbb repnz in fldl pusha ret rcrb sub outsb std pusha (bad) jo in imul andl sahf out xor imul aaa aad mov shl fdiv push or mov jmp adc inc std mov fcmovnbe xchg int3 pop xor jb lahf jb or or popf test addr16 fiadd out test jl andb das inc fnstenv add or ret repz lcall and cmpsb rolb ja mov or lock je ret jmp xorb and lcall icebp js mov inc mov push mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret das fwait xchg add cwtl test (bad) out cmpsl xchg jnp push mov mov xor cltd popf es lret mov sti mov sub add ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret das fwait xchg fdiv inc (bad) (bad) divl (bad) outsl or dec pop push mov push mov pushl mov call pushl mov call pushl mov call pushl mov call pop ret dec mov dec lds mov mov sub pop mov idivb clc arpl repz jge jecxz xchg ret pushf sbb inc mov addr16 ds scas ret xchg mov outsb jecxz fstp mov imul xor xchg dec push arpl arpl dec aam lods xor mov movb aad out in cmp fwait jo push xchg ja mov or push xor xchg mov shl xchg or lock dec int3 cs adc loope sub fwait pop dec sahf (bad) jno (bad) jne fistl lret mov inc outsb adc lret xchg stc lds jp mov (bad) (bad) mov push pop fwait push (bad) das cltd (bad) icebp loopne fs mov clc fwait jo in adc or jbe dec and dec imul jnp cltd adc out jnp lea xor clc pop pop dec fcmovnu xchg ficom and test mov xor pop (bad) int rcl mov mov (bad) cmp cwtl jg scas fs popf dec mov std pop loop jmp idivl cld mov mov pop cmp push hlt dec or sub xor lcall mov cmp enter (bad) lds sbb decb ret dec mov inc les push jle push jbe pushf sbb mov jbe mov in loopne xor pop pop mov pop adc pop fsubr inc mov inc addr16 imul jno lea sub mov and std or outsb scas orl xchg adcl fildll stc jnp inc mov les sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret lret push lret mov stc sbb dec daa mov jae adc (bad) jno mov mov pop mov and or xchg in js mov cltd add shlw pop scas iret mov rorl mov cmp divb stc movsb ficoml loop out mov add fiadd mov dec test mov mov call aas out cmpsb push xchg mov call roll pop pop in cmc outsb movsb pop (bad) addr16 (bad) movsb movsb insl ljmp mov lock or andl icebp aad icebp xchg cmc (bad) mov int3 fisttpl movsl lods inc out jne pop aam ret shrb int ficom (bad) dec dec push jle and lret ds fs xchg out mov mov push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret das fwait xchg fdiv nop and insb xor sub xlat (bad) faddl pop mov lret test cli scas push jae inc sbb clc in out subl call mov lcall out gs mov popf cmp in sbb aas int arpl stos and lods lods test pop rcll stc out imul out repnz es mov movsl ss cmpsb push mov (bad) jno sbb inc enter out xchg mov mov push push nop sub jnp fs out jmp lea ret (bad) xchg sub dec or lods sub cwtl (bad) sti sbb xchg push push idivb pop dec popf outsb mov cmp pop in xlat sarl xor jmp insl adc mov outsb adc out push popa (bad) mov ret jle and xor cwtl add dec adc sbb std add adc pop into xor arpl push mov push mov mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret das fwait xchg fdiv dec xorl mov adc cmpsl pop inc insl in scas jecxz cwtl popf and mov add in call add sar ret jae dec push clc lock mov mov in divl add add add pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret add sub fnop orl add mov mov mov pusha loopne cltd ss lea inc or cmp ljmp test fcmovnb rcr fbstp mov jmp icebp jmp (bad) loop xor fildll popf out push xchg mov imulb loop out int3 pushf mov call in push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret das fwait xchg fdiv cwtl inc lahf dec or movsl push insl and mov lods popa (bad) sub fs and dec mov pop in sbb jecxz aad dec je pop dec std sbb mov movsb pop in xor stos pop imul shlb es mov mov into shr lahf mov ja,pn imul icebp (bad) pusha in jge outsb fs jne into jno popa sti sub inc sub jl jge add cld mov into sub or leave xor test cltd push rcrl pop pop or add popf xchg mov push pop mov fild jb sbb pop hlt adc xchg inc std imul push int jbe mov dec pushf add (bad) sbb icebp lock pop cmp fwait pop add cwtl scas add rcr jnp cmp xchg push inc pusha mov arpl mov loopne cwtl or enter (bad) pop cltd or mov insl and das cmp int3 jo fldpi sbbl or sbb out mov movsl in jae out fisubr in lret imul test jl jp adc pop stos xchg jp loop dec add and cmp mov mov dec mov push mov push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret das fwait xchg fdivr dec orl pop inc outsb jae inc decl repz es icebp pusha std popa sub rorl (bad) in and add fmul adc cmp jne fmull xor les lret shrb mov or divl int out repz stc ret sub insl insl ss shlb add inc cmp xchg ja in cmc sbb stos insb in sub sub push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret das fwait xchg fdivr mov (bad) aad inc (bad) jg mov push fidivrl and sub jno pop sbb stos cmp mov xchg mov rcrl loope outsb sub mov mov (bad) sub arpl pop mov push push push outsl cmp sbb jno dec jns lcall mov sbb outsb inc stos push data16 sahf (bad) aam inc push sub inc mov push mov adc or lret push and sarl jmp xor push add adcl or sub popa inc inc das sbb pop (bad) into cmc mov cmp mov push mov mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret das fwait xchg fdiv inc subl jb repnz or xor rcrl rcrl or (bad) je push push mov call pop sbb inc dec jl and inc (bad) jb mov mov add dec cltd pop mov out sbb push xchg call jno popa jnp sub xlat orl add mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret das fwait xchg fdiv nop and push mov movsl shrl sub jb push es inc xchg in iret and (bad) hlt sbb data16 push out scas std testb lret lret pushl pop jns mov jg loopne dec lcall popa lret push push push in pop cwtl mov lret pushf (bad) (bad) mov mov and and mov popf leave jmp pop jge xlat adc pop xchg push sbb roll inc (bad) loopne imul or xchg insb jnp jae rorl repnz mov negl (bad) popf add inc leave shlb xchg ja adc movsb jns xor sub xchg int3 pop dec cs xor cmp rcrl jecxz mov push sbb into iret es icebp icebp xchg ret fwait xchg int3 addr16 cs aam inc out in sbbb lock divb test sub faddp scas mov in out xchg into mov loopne sbb mov push mov jno sub sbb jle xchg adc add fstp ret imul ljmp mov mov stc pusha sbb stc xchg xchg xchg rolb mov sbb cmp cmp sahf dec jo xchg loope mov arpl mov clc mov repnz shrl inc les ret js ds std adc imul jmp dec inc cmp call vmovntps mov xlat dec push cmpsl movsb das xchg jo xchg pushf adc adc addr16 mov lods jnp sub fwait mov push mov mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret das fwait xchg fdiv inc cltd pop int sarl jl nop sbb clc cmpsl inc jg lcall scas push inc jbe mov aas sbb sahf push xor cwtl (bad) dec xchg add sub fcomip adc dec jne mov push mov fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret das fwait xchg fdiv inc fisttpll lock pop cmpsb inc or mov push mov push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret das fwait xchg fdiv nop and shrl sub jb std mov iret icebp les mov clc adc icebp lret cs sarl out sbb fnstcw outsb fimul ret in and (bad) sbbb add and movsb pop pop jmp out and icebp ja (bad) repz adc jbe rclb arpl inc outsl dec mov in repnz clc imul les test and dec fistpl cltd add pushf mov cld jns lret dec test sub call or repnz and xchg (bad) jae in xor in inc inc cmp mov push or xor push or mov iret push stos cmp add cmp dec xchg push test in loopne nop dec jge nop adc call in sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret enter push adc pop xor ss mov ret iretw pop add sub int lahf push mov sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop fs cmp loope mov sub test (bad) (bad) (bad) xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp pop repnz fldt movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp pop repnz fcomp out test je fchs ret fstp fstp fld1 ret pop fstpl jle sbb imul inc cmp cmc adc sub rcrb inc mov fnstsw fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg fs cmp fstp fldt or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret les icebp jae adc add mov cmp je and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret das fwait xchg fdiv inc dec roll fild push icebp mov fisubr int3 clc cmp sti gs fisubr stos iret dec or inc adc mov repz sub jne and sub shr fidivr lcall out sbb imul (bad) pop jmp mov inc and arpl int cmp out scas cmp imul cmp outsb stc arpl xor mov jle mov int3 test sbb mov ss or lret inc rclb mov sub scas loopne test and dec mov (bad) cltd scas movsl and fbld lods dec cltd popf loope lret mov jp mov mov sbb jmp std adc xor xchg mov frstor rorl out jmp adc leave pop jno cmp fldl rclb push ror push mov mov sti leave jg mov jns jl loopne add mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret das fwait xchg fdiv nop and xor mov push imull insb sub mov lret pop push icebp and bswap iret mov lds inc and stos sbb sub xchg sub fldcw or mov push test into jbe pusha out es inc scas mov lcall mov pop out aaa inc push mov pushf fiaddl aad and adcl fiaddl push jae out xchg add outsl iret insl sub and in jg movsl jmp fldt repz cli js pop jp lds sbb cmp fistp add push or xchg js loopne adc adc je lcall pop ficomp in adc call (bad) ficoml xlat nop jecxz out sbb into push sbb jno jnp push adc loopne les adc jo pop inc aam xchg sarb push popa xor pushl jb in mov push je imul push xor or lcall sub fldcw inc inc mov mov popf jns ss jl push shrl inc scas popf loope cmp cmp inc xor hlt lret into sarb iret dec mov mov inc jae jl (bad) notl add in dec jl cli dec movsl adc xchg inc sbb jmp mov and or popa subl cld xchg movsb pop fcmovu xchg pop jns cmc fs push sbb lcall addl xchg loop adc (bad) pop (bad) xor (bad) mov adc jb push cmp pop lods rolb movsb mov (bad) cmp (bad) cmp lock cli repnz shl fwait jge inc mov mov gs test and mov mov adc ds in xchg add lcall cltd out sbb in lret (bad) fildl cli inc clc ror lahf pop xchg add lds and push cmpsl sub test or mov (bad) or xchg testl aaa retw fadd popf add mov scas pop or push sbb mov outsl in xchg jo cltd push add ja push ds outsl cmp in or div jb jno mov outsb andl es inc stc lock pop push inc in in pop adc cmc or repnz xor mov sub jmp aad mov mov mov outsl and cld pop into ja sub mov push loopne cmc in cmpl sbb mov inc xchg arpl pop cmp dec push stc jl (bad) push sbb xor sub dec test aaa fs (bad) sti adc cmp add cltd (bad) jg pushl rcl mov dec outsl insb outsl mov sub cltd insl xchg andl fldcw jbe jbe jl sahf pop lret into lock cmp mov dec sub and cwtl in pushf repnz push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret das fwait xchg fdiv nop and xor mov push out scas rcrb xlat cltd adcl mov xchg (bad) in repnz push into push push insb fcom jo idiv lds (bad) stos loopne mov jno in push and rcrl insb in sbb icebp pop mov stc dec es mov int3 std mov dec lock pop dec push sahf inc mov adc sbb mov lds insb test inc cwtl test pop mov fwait les je aam xor insb add andl mov fwait sub jle xlat push inc mov jnp mov lcall cld jo loop inc mov testl call mov lock cwtl call int movb fadd out out xchg mov xchg (bad) aad ljmp sbb jle xlat std in cwtl or sarb adc repnz scas adc in fwait cld in call in out cli (bad) clc adc xchg push or sahf jecxz,pn data16 clc into loop inc (bad) jg inc adc out inc xchg xchg mov mov sti das jae add jle inc or movsl pop push pop fildll jge movsb insl lret (bad) or addl pop jmp and push mov aas push sub icebp sbb leave mov std dec mov roll push or pop or xchg mov aad pop movsb and loopne add fdivs loopne test xor enter bound cmp xchg xor cmp nop test adc addl xorb stos and in mov fild jl cld or repnz stos push pop mov insl xor pop sbb das je cmpsl les and mov loop sahf add xor jno fisubl adc pop jl jg mov jne push push mov repz inc mov call in sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret das fwait xchg fdiv xchg and hlt and lret push add mov push inc loop scas call popa fstps sbb clc leave add mov repnz arpl mov xchg mov hlt lcall ljmp mov cmp lea hlt or add cmp lret imul push sbb and jae outsl clc jecxz push push pop xor fwait jb and or arpl push dec outsb xchg lods aaa push mov pop add das cmp int3 (bad) fisubr xchg mov ds and out or cmp or push jbe push aad fildl (bad) pop in in jae xor (bad) jb xlat mov icebp in mov adc js pusha fs xor jbe imul pop loope dec jae das lods pop outsb dec or and pusha jle inc pop jecxz not dec pushf jmp pop dec orb stos jge jb (bad) sub jb (bad) jmp test push mov cmp cmpsb cs cmpsl lea aas repnz inc daa inc test rolb shll decb incb sbb cmp lcall lcall sub clc mov rcrb iret dec lret std sbb pushf pop mov push mov xchg imul out cli pop int3 add push mov and (bad) sahf incl xor cld or sbb int3 popa jb rcrb lds push jmp or xchg pop dec add imul jle in fimul mov out int3 fdivl or inc xor popf jnp cmpsl adcl mov movl mov lods idiv ss pushf into xchg or popa push add mov jp jo in cmpsb scas cld mov mov or cwtl hlt cmpsb mov xor ss sub mov jge inc arpl mov mov push jge inc icebp and ss mov push iret decb addr16 dec (bad) xchg nop movsl push mov test xor fcompl (bad) sub iret xchg inc sub pusha inc mov jle outsb ret xchg mov cmp xor jae insl std rcll out xchg sbb movsb xchg mov scas (bad) mov loopne bswap jmp fldpi cmp mov cmpsb sub push mov mov push mov sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 das fwait xchg fdiv inc sbb jb out test cmc pop es cmpsl fs rcl fs ss mov add and xor and inc cmpsb adc (bad) icebp insb sub xor and cmp pop xor fldenv push or sarl sub test stc sub fmull and cs cmp cli xor mov jo mov je loop ds fwait xchg pushf sub (bad) mov sub add jo js jb shr inc or add incl lret outsb inc cwtl lds adc idivl movsb fimul xor xchg xchg mov lock xchg inc sbb sbb loop dec sbb out js mov lret out call jae mov push mov sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret das fwait xchg fdiv inc sbb jb out test cmc sbb push rcl fs ss mov add and xor and inc cmpsb adc (bad) icebp insb sub xor and cmp pop xor fldenv push or sarl sub test stc sub fmull and cs cmp cli xor mov jo mov je loop ds fwait xchg pushf sub vpsubusw xor js jb shr arpl jl mov or xor sbb push lret mov xchg int and iret add xchg (bad) es push stos ljmp scas inc and and mov mov pop popa lcall mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp das fwait xchg fdiv nop and shrl sub sub inc push mov pop insb bound adc arpl fdivrl clc leave lahf sahf sbb jne lods add mov data16 lret jb rolb ja mov mov lcall mov or mov xorl ljmp inc das add inc pushl jns stos pop xchg or sub adc es push cmp jae cmp rcrb cmp dec flds sub ljmp lods lret jne addr16 mov mov mov in test popa jmp xchg cmp or int mov test xor arpl (bad) test and mov push adc scas or jmp cltd in adc cmpsl fmuls callw jmp outsb mov adc std xchg dec int3 cwtl pop pusha xchg outsb lds scas adc push mov repz mov stc iret jbe arpl xor (bad) iret xchg or and add (bad) xchg or push dec jb insl scas mov loope ret or ja je sbb inc sub lret xor xor cmc aas pusha icebp imul add inc lret ja fldl2t in or inc std sbb mov (bad) lahf lds idivl clc mov cmp and ss sbbl int aad out fildl imul pushf sub jb jl fs fs test mov inc icebp std add jp in ds mov mov jecxz ja test mov sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret das fwait xchg fdiv cwtl dec sbbl cmc xor inc cmpsl ss mov shrb je push cmp adc or add (bad) mov mov daa aas xor jae lahf and mov push xchg mov fidiv mov inc push repz xchg jae leave bound scas dec xor sub ficoml and das pusha jae pop in adc stos push iret imul inc lods js and fistp pop inc jmp fwait mov jmp call in cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret das fwait xchg fdiv xchg and int (bad) lret push add mov push inc push mov insl bound stos popa xchg std cmp jb (bad) (bad) imul or mov inc xor jne push add add and (bad) mov test cwtl leave mov fcoml push hlt arpl pop sti sahf notb and add fwait bound mulb fadds ja jbe sub pop jge sub xchg fnclex lds and dec lea sbb push cs in outsb ss jle sub jmp dec repz lock adc mov xchg test xor bound push or stc sahf mov roll add fs cld (bad) into and mov pushf push imul pop mov out mov sbb in push mov std gs lret adc loope push mov push adc hlt jge pop cwtl push call cwtl inc in mov popf loopne xchg daa bound movsb jp fsubl sbb jl jg sub dec xor popf aas push mov js cmpsb inc inc mov xchg or movsb mov push lock rcrl out xor cmp (bad) push and xchg inc sub loope or imul daa or push mov mov (bad) sbb jae pop pushf (bad) mov jns cmp jle daa lcall sti ret (bad) or nop xchg push icebp popa repnz das test jecxz data16 pop pop jo sub jp xor add stc mov mov push push dec aam movsb pop addl aad push lods mov adc repz mov mov (bad) mov mov pop ret aam inc and xchg dec fwait insl fcmovu aaa pop add jne pop lods sub mul dec sbb adc mov sbb jbe inc data16 jno pop fwait sbbb push xchg sti ljmp xor mov out ret pushf inc movsl out push xchg sbb pop xchg out (bad) cmpsb jp mov sbb xchg (bad) mov aas add pop hlt xchg rorl cmp icebp xchg adc xchg ljmp cli xor fucomp fdivrs repz fsubrs outsb sub add or cmp jge jb xor push mov fcoms fdiv aad int adc mov adc xlat mov arpl sub jne dec jl aam or mov adc in or add mov mov mov daa cmp clc scas xor or mov (bad) out dec repz hlt mov rcrl scas lods cli mov and jbe adc sbb outsb mov adc (bad) xchg aas push data16 mov or jg push sbb push inc pushf (bad) push lods cmp cmpsl loope mov xchg sub ficom sbb sub add adc or mov test jge icebp jns jnp inc mov scas pusha bnd divl imulb aaa sbb fmuls cltd mov push dec and fwait pop nop lds in lods (bad) pop int3 stos cmc cltd or push cli pop cwtl mov xor aas (bad) xor and stc ss sbb mov lods xor add pop leave mov cmc popl ljmp add movsb loop adc sub push bound push and dec or adc in call fs sub popf push sub xor sub test loope mov hlt add int3 mov enter cmc or neg adc test das popf or push xlat movsb mov fldl lds cltd inc or inc cmp fldt les stos fsubrs inc imul repnz icebp cwtl cmpsl add cmpsb push int3 mov mov or xchg and pop xor jo in dec (bad) xchg das outsl pop push inc fstl inc mov push popa cmp push mov shrl cmp push test enter mov ret subl imul and push popa add (bad) in push push pop out adc inc hlt jo pop or pop pop (bad) push sbb mov mov out mov xchg vpmacssdd test mov sbb in add fstpt pop scas jecxz jg jb jne mov add mov jbe or pop ficom sbb iret add imul or sbb sbb adc pop enter jge add insb in sub jb xor mov movsb test mov out adc dec lods mov (bad) cmp (bad) mov xor pop mov jnp mov (bad) or or add aad mov xchg ret sub stc mov push xchg int3 je adc mov dec ret and dec push es mov bound jle bound jno mov xchg icebp xor fcomps test hlt mov mov pop add scas mov (bad) pop mov adc sbb xchg mov bound cmp mov cld mov lahf xor call ljmp movsl fimull fucom enter pop cltd test inc push sbb sbb loope mov sbb or push out mov cmpsb and test sbb and nop pop movsl xor sbb pop lret add cld fnsave inc je out mov js dec and aam push pop jge aad xchg inc cs jbe adc data16 jmp and (bad) xor cmc jecxz jb iret push es movsb scas fcmovnu or xchg loop (bad) fcmovu xchg imul dec int jg ja test sbb adc mov pusha xor adc sub ja sarb sbb dec (bad) dec add (bad) cmp std les lods lock sbb and aaa xchg sarl fstpt pop int int mov loopne push addr16 or fwait push adc xchg and out mov xchg jg aaa nop sub fs xchg push (bad) cmp xor lret enter and cmp imul arpl or or scas out cmpsb sbb lds dec mov mov movb leave cmp jnp sbb and or xchg stos shll jb fucomp cmpsb mov mov shrb and sub jnp push push outsb adc pop pop jne les aam add daa test insb sub fstps push mov scas in or mov repz sub or adc les js lock push mov clc dec repz ja nop ret mov popa lcall or aaa shll pop adc ja in cwtl fisubr mov shlb sub fcoml sbb mov dec sub loop pop xchg xor fistl cmp popa add pusha xor (bad) mov add jo ret subl (bad) les ss and movsbl js xlat cmp adc lds notb jecxz out (bad) mov and popf inc cmp ja push lds mov es sbb and jb mov mov das and mov xchg xor xor ret lock fstps popa mov adc adc mov inc pop xor adc add (bad) pop adc repnz out cmp insl outsl push lahf insl sbb nop call adc fildl pop push out sbb xchg mov mov rdtsc fs mov loop fnstenv adc cmp loopne in xchg jne mov mov mov pop mov test int aas aaa mov mov shlb xor fcom inc dec push xchg adc cli adc pop stos sub xchg aas fsubrl out imul movsb popf cltd sbb rorb pop sbb imul xor add jmp xchg sbb mov pushf xorl enter inc adc dec add add cmp mov mov pop movsl inc xchg js cmp pop adc ljmp (bad) inc stos cmp mov leave (bad) fild mov sbb outsb jb dec fistpl in dec sbb and inc and dec sbb jl jle test mov aas mov rorb mov in dec pop adc sti pop mov jmp stc mov xchg dec push montmul cmpsb add push jmp and daa cld push adc dec mov xor aaa adc push pusha fnstcw out inc bound xor and int3 jnp jle adc into enter in mov int3 sbb mov repz in mov xlat iret movsl or (bad) rol dec cld inc adcl mov or stc cmp outsl jae scas push and repnz mov add int pop testb clc gs and ss adc cmp int3 mov mov stos push mov jb push jne xchg sub popf es fldcw adcl fnstenv (bad) sti mov mov (bad) mov sti hlt jle mulps push dec daa cmpl mov mov xor push and jbe repz push cmp lds push ret fistpll jno,pt cmp popa jmp dec sub mov adc add in ss mov pop mov mov sbb scas mov (bad) xor out scas xchg enter jnp xor mov dec rcll dec xchg clc adc sar repnz imul shl sti fcmovbe xchg repnz movsl das push mov jb gs dec mov mov idivb mov imul jo mov or out adc daa negb int3 sarb aaa fucomi sub mov push ja mov fwait sub cmp xchg pop ficompl dec test mov pop incl jmp insb call js dec nop nop lods (bad) xor int3 pop fiadd add cld test (bad) scas push mov cmp mov imul stc test (bad) xlat xchg stc push test dec pop sbb cmp in out push mov ds xor xlat stc xor xchg xor cmpsl lea iret xchg orl jl push push pop int push (bad) add xchg add xor insl or cmp push cmp (bad) jl clc sub cmp daa cmp (bad) mov sub sarl pop int sub andb test loop inc pop push pop add mov mulb pop ret fmuls mov ja sarb popf fsubl jmp pop mov push je loope pop cmp decl shlb jne fisttpl mov leave pop mov (bad) stos inc jb xor clc cltd cs inc jbe std lcall mov sahf cmpsl lcall jo pop in gs mov pop jp les in lcallw push inc mov mov std clc out call es outsb aam mov aam enter lret scas outsl sub mov xor mov les jge push adc aas add mov jl jb dec push pusha jmp imul fcoml mov int std inc int or repz (bad) jecxz int sub push icebp sahf imul js bound ret (bad) out insb movsl mov hlt pop jmp or inc stc rol cmpsb ficomp cli and xor leave test cmp xor (bad) jnp mov push sbb popa pop lret ds enter lret xchg mov pop lods mov iret mov fs inc or lcall or fwait jne cmp push lea cmp (bad) repz pop lret dec (bad) xlat sbb outsb adc (bad) jmp adc dec jmp or mov mov push push addb xchg push mov pop scas ljmp lret mov jl (bad) jge push push adc add fcoms xchg loopew push sub mov and inc ret in popf push stos lret out sbb sbb dec mov xor mov movsb jo sub enter dec cmpsl push int test mov sti fwait bound jl pop test int3 and fwait sbb dec in fadd mov movsb and jns push add sbb ljmp dec dec (bad) jle loopne adc push loopne cmp aam add mov xor or or jmp (bad) lret ds fimul rorl loope out lret ja std fmul dec cmp fdivl xor cwtl or pop aas loopne in imul hlt xchg (bad) mov repnz mov bound fimul vpcmpgtd frstor jno mov imul cld mov rorb push inc inc bound daa js clc add mov mov fwait in xchg aad test push xchg in cmc daa add inc xor sbb mov (bad) mov jbe,pt sbb movsl jnp,pt gs fdivl cmc mov out jb jns xchg add js pop adc xchg frstor jb pop mov inc mov and js jbe xchg push or enter xor sbb es jle (bad) scas jo fisub pop cld mov fnstsw fs sbb pop sti movsl dec popf (bad) ds jb xor in mov subl cmpsb outsb ss sub dec aas int flds sbb enter mov push mov js repz pop daa mov jns loop cs jb adc shrb sub add (bad) or push adc imul je (bad) mov dec xchg pushl mov add lock nop cmc sbb popf dec popw xchg pop inc cmp jmp stos push (bad) cmc mov scas adc les add (bad) cs movsl ljmp gs jmp fcompl mov dec sub cltd loopne (bad) sarb xchg pop pop mov test mov and jb mov mov push add ja jg out jnp sub cltd stos js das adc mov mov out or push push add (bad) lret (bad) aas cmp xchg inc push loop cli subl sub mov hlt push xchg shll lock into popa adc jl mov lds stc insb xor push scas (bad) jne xor data16 notb jge xchg mov mov pop testb (bad) xchg ficom pop xchg mov inc fmul scas aam dec ss and notl stos arpl dec lret sbb mov jge in psubsw push and xor adc mov aam jno mov lcall xchg nop pop and out call lret push nop imull (bad) push xor inc les cmpsl push (bad) in lea test iret lret sbb arpl stos sbb movl jb sbb add push mov ja ja sbb sarb (bad) xor lock (bad) xor jge mov in and pop cmp cmovae mov negb outsl xor stc leave push xchg inc adc dec mov cmp mov dec out xlat mov test inc or jno or aas lds cld mov push mov push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret das fwait xchg fdiv dec xorl mov or popa adcb mov mov aas add xchg push (bad) mov fs (bad) das out daa jno imull sahf cmp pop stos jle xor adc loop cmp sub dec subl repz pop div std pop mov dec mov fistpl mov push mov push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret das fwait xchg fdiv mov (bad) (bad) out and inc and es push mov push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret das fwait xchg fdiv cwtl inc lahf inc imul sub push lahf push xor lahf cmpsb ficomp jae pop out mov stc pop fldl sahf jecxz nop stos xorl ret adc clc add int3 jl xchg ss push xor push fidivl inc jl (bad) int3 dec add faddl mov scas les jp mov dec std xchg test fisubl test jge addr16 fsubs jg je es sbb push mov mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop daa pop mov aaa mov in lods xchg and arpl xchg or loopne sbb stos bound push pop push xor pop or lock int mov fsub xor lahf sub fstl call call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp aad and sbb cmp fcoms in cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 aad and (bad) sbb outsb aad pop jbe xor in fisubl mov xchg loope out ret (bad) adc movaps ss sub inc andl pop jmp (bad) xor and mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret aad and push and inc popa aad push xchg xchg push movb cmp xacquire cwtl mov jmp inc cmp xchg out adc and pop cmp sti jnp inc push adc cmc xor jne cmp add test add add pop and mov and cmp jne fnstcw mov and cmp lea jne jmp mov mov cwtl lods xor mov ja scas dec lea add fwait jae sub pushf ljmp sbb xchg push sbb fcmovnbe in mov xor sub add repz xor shr mov sti xchg or jg jge xor not test fstps xchg movsb and pop sub stos rol lods fs negb aad out cmp xor pusha test inc les in in (bad) xchg cmp and dec pop mov insb in pop out outsl cmp push fwait jg imul mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and and arpl out or sub testl sub ja (bad) je in gs es pop adc je ss inc out outsl gs and ret xor mov lcall out push lret aad pop in sbb out repz int3 inc bound lcall mov imul data16 stos (bad) xchg jbe fsub cmpsb jge outsb call cld sbb and int3 test adc sub ss add mov jne les mov xchg add lcall aam add add adc roll push fwait pusha out (bad) sti mov sbb test pop data16 jb sbb dec rolb insl jmp in gs leave pop (bad) cmc xchg les mov insl adc jne push adc push in xchg (bad) pop into xor lods out push mov leave movsb mov das push stc iret jg js rcl imul cmp cmpsb int3 cli addr16 or cmpsl (bad) icebp addl test adc (bad) call mov cmp or popa push sahf cli js (bad) and in (bad) movsb aaa arpl hlt jp push adc mov lds xlat mov jns leave pop jns xlat hlt daa adc cmc cli (bad) aad pop int3 popf iret sbb xlat cmp sarb das add lcall pop hlt push int sub clc mov imul xor neg cmp xchg movsl pop add mov fsubl mov cld xor andb adc adc mov pop inc inc sub cmp or dec ja xchg loopne mov dec mov lods lret out add pusha sbb frstor dec fdivr mov iret iret shrl cs imul and cltd push jno sbb push rorb inc movsl out jmp mov aaa repnz mov fadd push mov in cmpl xlat stos or xor (bad) mov movsl repz mov (bad) int lahf xor sub sbb out fistp or or ss push mulb lds pop or (bad) and aam xor movb in cs add shrb das popa push scas pop outsb int roll fistpll aam push mov ds jmp cld cmpl leave ds or inc push int mov inc iret mov inc outsb bound mov insb loopne int3 mov and pop cmp clc xor cwtl xchg xchg nop loopne into fidiv enter add fisttpll stc jae test jbe (bad) push sbb insb pop js push cmp into cmp into push lahf jae and xor lods test push xor clc push es jl cmp cmp cmp lea fadds fisttp xchg sub insl jb push cmp mov dec call scas bound or or push loopne pusha sub rorl xor xchg adc dec pop sbbb out mov sbbl pop cwtl pop pop dec cmp cld ffreep jo pop jnp lret dec fwait rcll cltd nop (bad) or fs push jo cltd fbld mov dec jle das insl (bad) fcompl es mov xchg push hlt jne dec push push mov fimull dec rcrl xchg repz lahf iret xchg out stc xchg in data16 (bad) jbe push add fisttpll repnz (bad) push rcrl cmc ret cmp xchg mov sbb pop fnstenv addr16 jge pushf (bad) insb ret add ret stos loopne sti (bad) cmp cltd xlat mov xchg mov mov (bad) pop mov pop lock mov dec dec xchg popa popa (bad) into lds xor das mov dec jbe aad xchg mov mov cmp call cmp dec xchg (bad) into loopne ret repnz outsl mov and jle rcrl sti xor pop sahf je fnstenv xchg adc fwait jae sub pop and out push jle mov push into outsb pushf adc sbb (bad) in sahf or mov push gs mov fidivl jb loope mov or faddp inc dec (bad) insl cmp ret or sbb xorl fwait mov sbb clc dec xor dec xchg cmpsb push xchg mov ret jne cld arpl pushl xchg mov add loop fincstp dec mov int call cld outsb inc ret movsl pushf adc mov adc into (bad) dec outsb add cmp addl push and add mov ficoml mov mov cld andb mov adc xchg pushf push mov (bad) cmpsb cmp shrb cmpsb mov xor sub mov push stos dec dec call and ds movsb jl pop sbb aaa cmc xor add xchg add adc add push std ss fisttpl ljmp inc dec cmp sub sbb dec (bad) das test ljmp fimul mov sbb push xor mov dec inc push push xor dec lds inc scas fwait sub xchg xchg test sahf imul out mov xor fcompl repz mov sub addr16 mov popl stos cwtl jae xchg aad jmp pop xchg push repz ror xchg push outsl jl out or nop js mov and push clc pop mov push sub add sub inc sbb popf pop leave adc jl sbb aaa std data16 pop sub mov rclb aam mov adc stos repnz xor mov daa jmp (bad) in push addb aad shr nop lcall jp adc aad jle mov inc pop subl in add (bad) aam xchg add sub movsl fcmovnu xor mov mov xchg test fwait or xorl xchg inc xchg dec testb popa mov int daa call std and dec xor out push cmp cmpsl mov cmp loope jnp xchg rcr mov cmc ja mov out mov dec out rclb in scas dec lcall fmuls push out enter or in das and loopne pop test mov or imul in fdivp pop mov add and push push (bad) adc inc mov jno push jl adc pop dec dec jae movsl loop loopne pusha (bad) cmp scas insb jmp mov xor fistpl push jmp inc fcoms push xchg adc (bad) mov add ds punpckhbw cmc (bad) repnz add rcrl in or inc mov loope das adc out xor cmp adc mov jo loopne inc and lods inc sahf cmovle pop aad jecxz adc adc cmp pushl dec push push out inc jns out cmpsl (bad) xchg add mov lcall call sarb test popa leavew das jp pop ss cld pop ss imul inc xlat xor xchg mov lret dec notb pop stc js jmp int3 icebp mov sub mov mov mov mov sub xor insb fstpt in add in clc pop (bad) notb testb inc aam mov pop aaa inc push jle mov fmul adc dec ret adc aaa stc xchg and lret sub inc in push xchg mov sub rcrb out (bad) mov mov inc rcll pop sub jg outsb lods aas aam or dec inc xchg and (bad) std push aam clc lret sub jns sub rcrl bound stos adc lahf scas pop out adc adc enter pushf or addr16 iret and sbb pop push xchg add add call jae test add dec lods dec (bad) dec daa pop mov xorb xchg js cwtl sub push lahf push mov in jge addl jne insb fiadd stos std mov xchg fldt test loope add movsb sbb xor adc jl add ret imull cmp sbb in mov lcall push mov or lods fnsave xchg or cli cli jg (bad) mov adc ret pop pop mov jae jo lods call test pop mov jbe les adc loopne nop stc push push loop stos xor notl or mov cs stos pop or call cli and xchg mov jle into jns jl,pn fxch ljmp lods push lods divl push popf fs xlat cmpb insb mov xor stos int xchg mov fildl movsl gs (bad) in dec push mov add fbstp pop push setno mov pop push sub bound cmpsb xchg add jnp mov push shlb push (bad) mov jg imul xor ja dec xlat icebp fwait jmp andl outsb and inc movsb scas je dec xchg add icebp sub mov xchg ja rcrb nop add ss jo sbb push out test (bad) mov xchg (bad) dec cli sbb add inc push das cmovle daa mov insl ds and popa jmp mov push adc loopne out cmp in scas ror xor cld or adc xchg mov dec cwtl pop add syscall cli jmp mov in push mov jg mov mov imul dec ja mov scas fsubrl lahf test addr16 pop sbb stc adc add scas push shrb cmp lds arpl jg pmaxsw shrl jns xchg sarb adc lods leave aas testb (bad) imul xor add test jns cmp add ss xchg gs add mov (bad) xchg jmp dec out testl jae stos rcll xor push mov cmc and jecxz dec dec test aas jmp xlat xor ljmp lods cmp in mov jecxz push push cmc push int add xor pop add mov insl mov aad xchg xchg add fisttpl (bad) pop je es in loopne mov into jmp mov aas fsubl push cmp insb pop ljmp pop push aas daa rcrl stos mov (bad) aaa lahf mov jne sub scas sub push xor hlt (bad) loope xchg mov jbe xchg sbbl adc fdivr loope pop das jo cmp jnp sti jge push fisubrl aam xchg jg cmpsl adc fcom mov pop enter jge stc or adc fwait pushf les xor mov lcall pop xchg jbe daa xchg lret or icebp ss out xor ds sub les ja add test (bad) jecxz ss jg mov (bad) mov scas les das cmpsb (bad) into jnp std sub fisubr sub pop lods mov scas jbe mov in pop daa lods pop jl mov mov nop test mov xor stos leave sbb pop mov jle adc and and outsb mov ja mov outsb mov ss mov adc test xlat rclb cld cmpsl pop jae push sub sbb lods dec adc xor scas or mov cmp mov pushf jns xchg std and xorps pop rolb (bad) cmp inc (bad) js scas push push xor sub movsl sbb out scas fimull (bad) orl add scas sbb add mov jno js mov cli insb mov mov mov cli insl psrad nop insb push cmp mov push insb (bad) movsb cmc test jb sbb dec inc ret jns sub gs fstps lcall mov ss jge sub sbb xchg repnz push rclb push mov xchg or inc ret (bad) inc aad adc ja loopne inc insb xchg ja mov mov pop sbb sbb mov jno push mov add loopne arpl xchg lock fistl push popa jge xchg inc lret jo xchg mov ljmp sti pop or sub adc stos mov dec xchg test rorb cmp inc sbb or rorl pushf jg mov loop mov mov or xchg outsb rorb and sarb stos icebp das sub test add hlt in xor (bad) xchg icebp adc out add and insl lds clc xchg sub jb mov mov (bad) xchg es sub mov fs iret (bad) cli fidivr fsubs push jno arpl xor mov add int and pop (bad) scas enter pop data16 test (bad) aad mov push (bad) or fistl daa mov mov fwait sbb (bad) out imul shlb sub dec xor fimull push (bad) jb gs ficomp adc bound hlt pushf adc mov mov mov jbe es (bad) push add inc mov movsb in inc push mov xchg lea and data16 mov pop je mov jb cmp mov lcall stc in lods jmp xchg jge cmc outsl xor mov sub mov fcomp movsb and xor in mov pop fmul ret jo lods mov call pushf cld (bad) mov mov adcl das daa sub das (bad) cltd out ss xor (bad) jp cmpsb jmp lret sti add mov sub les imul fwait cmp push jecxz inc mov nop sub adc mov pop insb sbb mov push dec test int3 mov imul aaa in and add cmp xchg sub add xchg int pop shrb mov mov inc das mov jns dec (bad) jmp xchg mov xchg xchg or (bad) mov xlat add push hlt jnp sbb pop push mov int3 in (bad) mov jns icebp cmp xchg (bad) jno mov xchg arpl call mov inc inc mov mov jns fcoms pusha insl jecxz mov fs fmul xor jmp fsubs or jne mov mov mov xchg jns fwait inc stos jl rorb xchg aam maxps adc cmp sub mov mov ret in pusha inc pop jnp mov scas xchg add push add (bad) xchg mov inc sbb push test xor lret xchg ja in adc mov lods sbb das jne scas mov sbb mov pushf nop stc jmp cs rcrb push or xor jmp lds stos fwait dec cmc sbb iret add and and and popa dec jnp inc mov sti aaa cmp dec stos dec test jecxz and dec push sti arpl dec pop movsl cmp lea inc jne pusha push shrl push bound shl or enter stos icebp push in test xchg in add and pop cmp push mov ss inc pushf mov cmpb add cmp fcompl inc outsb loopne,pn sub push xor fucom sarl inc sbb cmc (bad) adc (bad) int bound cmp xor mov (bad) ljmp push jmp pop xor mov loop inc xor and hlt outsb add and leave pop mov lods jmp mov and aas dec inc cmpsl mov test test and stos paddw fs cmp cmc jne sahf push inc or mov push testb loop mov mov sti rcrb cmp xor mov inc xor or dec mov dec jno or mov fidivl hlt xor rcll hlt inc popa or movsl inc sub inc outsl out push adc mov mov cwtl aas lock mov jno inc mov stos and ss roll (bad) movsb inc cmpsb aad dec push mov (bad) shrb sbb push mov xchg mov jbe lock jno and jmp dec and gs dec adc mov fiaddl ret (bad) imul test sub add pop add mov jp adc jmp shll loop incb push sub mov mov (bad) push out xchg sub (bad) adc jg jmp pushf rclb cli push fcoms sub lods xchg cmp icebp in dec inc xor popa (bad) lahf sti call cmp and repnz cmp shrl test mov xor ljmp imul or add lods xchg lcall out jns (bad) je test sub mov into rorl cmp daa sub lahf out sub and or lahf jbe cmp xchg cld mov adc rsm test and pop push lahf lret test mov insb (bad) xlat lret push mov sbb mov mov int3 test aaa sub push mov mov mov inc adc leave mov in pop sub cmpsl mov movsl (bad) jae comiss jecxz jge cmp mov roll repz mov je in test les imul adc pop xor push jne fimull mov dec add pop fs push pusha in incl addr16 repnz push in push mov imulb loope aam push xor xchg (bad) jne cld xor ror mov push mov ror adc es or sub mov call push fs push cltd xchg jae adc xor stos pop cltd sbb sbb fwait popf call pop fisubl (bad) jmp and cli (bad) out dec adc dec hlt adc push cmp mov mov stos pusha shrb jl or xor es xchg js sub cmp test fwait mov std sbb fwait je sahf scas scas mov inc sbb mov sbb call adc (bad) mov lods pop and sbb pop inc dec sub aas xor mov xor (bad) imul icebp inc lock jle,pt pop jnp sub popa sub lahf add dec sarl mov (bad) and insb hlt mov add fsubrl aas rcrb lcall sti pop push sbb dec pop inc push rcl jne and ficomp xor popa mov mov cltd or pop lods fwait jo loopne xor scas xchg jmp xchg sbb mov insl mov ds std sub sub call add icebp mov mov adc push inc fs add outsb fdivl hlt mov add sub lcall shlb stos (bad) (bad) inc fdivl jnp sbb cmp xchg test pop shr fdiv sub test fldenv xchg (bad) ficom scas inc lods int3 pop push jecxz xor les mov add add repz fldl mov popl xchg (bad) xchg addr16 std andb add adc les insb cltd xchg shlb adc mov and testb add in shlb sub add mov sbb jmp pop push out fisttpl inc jb test mov adc lret push cs fmull lret gs inc ret adc sbb inc dec outsb pop imul sub icebp mov adc push jecxz or test jmp mov and popf sub jle cmc sti or insb hlt jle in in sbb cmp cmpl bound dec adc pushw mov lret scas or jo and data16 adc (bad) jae push lahf icebp fadds out push pop sub adc pop lods popf movsl ljmp sarb jg dec nop jno ret std mov imul aad jb inc sbb dec inc push xchg lods stos sub bound pop sar je pop hlt (bad) dec push imul flds xor cs push lods aad mov sti dec mov fdivrs pop mov hlt push xor fiadd xor (bad) jns lods cmp sbb lret jecxz in xor jb xchg andl jb dec das push xchg or outsl inc ret imul js dec fsincos lea dec mov fldt notl xor pop cmp outsb push mov ret shll and xchg inc pop xor mov mov mov imul pushf in jmp jno cltd jp inc cmp aas test outsb imull fxch inc mov scas stos jo inc sub push mov push pop pop jnp xor jns mov arpl frstor mov subb bound lea sahf aas cwtl subl lahf pop or xchg int3 jmp jo dec dec push jno movsl inc enter sbb mov cs aad mov mov out imul jae test mov push cli push fisttp fidivl push or out ja ja xor (bad) lds and (bad) pop dec pushf pop mov xor test push push sti lea mov mov out fs movsl mov pop test xlat dec cld pop push roll insl jnp pop adc in sub movsl jecxz add dec mov rcrb into and push cmpsb movl or lcall (bad) and fs out mov dec aaa xlat xchg js ficomp or inc clc sbb int dec or xor sub (bad) je rcll jno ja cmc push dec aas cmp xchg cmpsb cmp and add (bad) add (bad) fmul mov sub dec xchg sbb pop cs popf mov cmc dec mov int3 outsb push mov or xchg xchg cmpsl or rol mov dec fiadd mov add adc (bad) and mov cmovge adc loopne ror aam aas cmc popf addr16 jnp cli shl enter je popf stos jmp pop int3 mov outsl sub out popa inc adc arpl push lahf js scas dec or out or sub pusha xchg lret out pop sbb adc (bad) adc adc sbb sbb dec jo sub lods and mov xchg mov pop mov cmp xlat pushf mov (bad) enter jo pusha push stos inc mov leave sbb bound (bad) movsb lock loopne shrl mov aas data16 rolb popa div cmp lea mov push jae test es leave xchg fcmovnb push (bad) hlt stos jae pop jb addr16 mov popa or pop jbe test dec test xchg push cmp fdivrs xor push ficompl sub lahf mov push lods cwtl clc jg sub aas jecxz cwtl push fidivrl mov pop cmp pop cwtl jp jl loop loopne cmp jle xor push cld das sbb (bad) (bad) sbb sbb xchg adc and lcall sbb sbb sbb xor inc jae sbb movsb jmp orb cmpsl dec push push sbb add popa fdivrp cmp fistpll jno xchg xor add test pushf push aam pop es mov scas pop movsb aaa pop icebp cmpsb and mov xor mov jmp pop negb inc std xchg xchg and js aad loop push andl and repz inc cs add imul jl aad sbb mov or sar fdivl (bad) xchg ret sub push loop push adc loope in inc dec jge cmp call lods mov inc jmp (bad) xor xchg mov js scas inc cltd and jmp mov xchg sbb les iret fldlg2 sub mov mov add ret out cmp sahf movsb int3 insb out movsb cmp jb mov aaa add mov cld int3 cld shlb jp dec cld xchg sbb mov fildl and mov lods cmp out into jae out add sub aaa push gs pop push out jge mov push (bad) sbb jnp lods outsl sub roll xchg je lret jecxz push in pushf movsb xchg push inc jmp (bad) sub mov sub mov add xor out cmp mov pusha mov push fwait int3 mov (bad) xor mov sub mov sub fisttpl gs fldenv and xor rcll js fstpl loopne mov cmp xchg dec leave mov fadds fnsave inc mov js mov push ror imul mov xor lds mov fildl es add orl cmpsb cmp ret out or js mov outsl jnp cld icebp and and dec ja fisttp mov xchg jae fisttpl cmpsl call sub (bad) lret loopne (bad) sarl (bad) xchg dec xor outsb sbbl xor movsl stos iret orl xchg bound push mov lock test push jae (bad) pop in in nop xchg es sub shll cs sarl leave cmc outsb sbb or into push xor adc fmull les fnstsw leave cmpsw jle cmp inc js aaa cltd sbb out js lea dec addr16 mov sub sti ss inc pop es and push cltd jge dec sbb mov mov jb or pop xchg into aaa mov pusha cs enter outsb xchg pop xchg scas rorl je lds mov fistpll fmul ljmp (bad) sbb es adc dec jne add pop cs adc fdivrl mov test add sbb mov mov ret aaa mov adc xchg insl shlb push inc pushf xor jl cli enter ret mov outsl movsb aaa inc loope cmp rdpmc add jne std xchg arpl popa movsl jne imul aam and inc pop sub push mov mov mov sbb outsl shlb rorb test xor push jnp pop xchg out inc in rorl dec mov insl and orl push push cli dec sub and adc push dec mov sti jnp add fs bound (bad) dec jge fstl xchg xor add lahf aas dec lds and sbb inc sub jno sbbl fstpt (bad) xchg pop ss xor rorl push xchg dec pop jge xchg push dec in push mov fstl lods inc add and mov push test xchg or lea mov sbb push loope cltd pop cmp movsb jbe mov xchg add out popa mov rorl in (bad) pop dec stc rcrl in or and push inc xor dec and jo test mov inc mov dec cmpsl jmp sbb dec xor cmp sub xchg mov (bad) mov sbb xchg (bad) push decb inc jbe add pop cmp pop movsl adc jae fsubl (bad) fisubl add jge jo cmp xor das push (bad) lock (bad) jnp mov pop sti scas adc int3 mov (bad) cli jnp ret mov sbb fiaddl push jmp mov push mov xor dec cld cmp outsl mov adcl lods xchg adc arpl adc sbbl and leave mov mov or dec add sti jae fistl mov add lock pop nop cmpsb es loop push push paddsw (bad) stos push mov adc adc pop insl (bad) jae lods dec ret adc loop xchg pop fst scas fsubr jecxz jnp loop or ud1 les add xchg popf cmp push std add sbb and mov or push cmp sbb fxam or adc dec jns les xor mov xor loope sub leave sbb adc fldcw lods in dec js fxch push xchg cmpsl repz (bad) out inc inc test mov lds adc stc mov xor test and inc clc lahf fimul pop outsl lds xlat pop cld jecxz incb js ss add ret jl mov sbb adc jmp popa mov (bad) scas jne cmp dec jnp or stc in into sbb add rorb daa jo mov dec out cli popa ljmp shrl aad data16 sbb outsl lods lods addr16 cltd cmpsl jb aaa dec fldl push insl cmp loope cmp ss jae add add iret lret sub fbld hlt mov or int (bad) push rorb mov aam inc out clc adc adc cld mov lea mov dec scas ficom stc mov test das bsr xor push je or bound mov xchg ror adc ficoml mov out pop insl add jno iret ljmp jge inc in sbb lret rcrb pushf xchg jne gs and sbb adc or inc fs es clc sbb sub jge jmp enter ret je xor sti add add xchg lret dec fwait adc pop push fcoml (bad) (bad) jmp iret lock insl xchg sbb mov fwait add mov pop mov adc in xchg notb and outsl adc stc xchg lcall push xlat in imul sbb fisttpll and hlt sub shl gs enter sub rcr js vmwrite int3 out xchg aas jno out cmp xor cmp idivl (bad) out popf cmp add ljmp mov leave sub mov lret cli dec repnz movsb pop scas lahf lcall mov or sub jne jp icebp mov push gs mov aas jle outsl xchg out cmpb xor push lods push call xchg out cmp cmpb sbb rolb xchg aam loop or push sub xor int and and lcall inc dec les add push inc outsl xchg xor jae sbbl lds cmpsb xchg or lods push lods xchg rcll ficomp or or ds and sti js test xlat xchg fistpl pop mov out mov or jecxz cld cmpsl push and and jnp push fs inc jo pop sahf out pop mov dec repz pop push clc jnp addb jo and dec mov sbbb jecxz mov xchg inc push mov lret sub jmp enter adc lods bound mov xor jecxz adc mov imul jae lock cld and mov lds push fcoms sub ljmp push int3 andl je sub mov pop cmp nop (bad) stos decb popf int es mov inc lods das insl js mov add (bad) mov ljmp xor push adc xor sub data16 dec pop cmp jne mov mov ret pop jmp aad bound (bad) pop movsb lea push cmc imul test movsl test cltd mov into int3 je mov sbb test nop in mov sub add vmptrld ss jge sti mov ud1 (bad) int out fdivl dec dec mov push fmulp mov sub jl out pop inc mov jo dec ss mov int flds pushf mov dec fwait xchg mov nop and xchg xchg cmpsb out jle les rcll sti mov shl adcl xchg jge xor aam adc mov arpl int3 sahf fsubrl (bad) adc (bad) push lret loop cmp push cmp addr16 out add and sbb icebp mov sub gs iret inc jp leave rcrl or mov sub popa test fs je test xchg rolb lret ds (bad) mov and test or lahf jb insl jmp sbb xlat arpl and sub aaa or pop jbe fadds push and jg jae push inc mov es enter push adc jmp sbb hlt sbb or and push rcrb inc cwtl cli jp xor pop sbb or jns pop push mov fwait sbb lahf mov ret addr16 scas sbb push jecxz mov jo dec out leave fbld gs nop push flds or fistpl movsb out stc out scas add in mov repz mov mov or stc adc scas lcall fs out fsubrp pop int sub sub clc jecxz cli mov mov ss bound icebp and push push mov mov pop out or inc ret adc icebp and (bad) mov jmp or insb xor adc sbb cld popa std test dec xor jbe int3 rcll daa lcall jb pop and mov mov repz in mov stc int lods jo loopne push jne rol inc pop pop fwait push lods dec js or xlat sub jle (bad) and cli push push xchg cmp jge sbb xor push jns int3 or pushf pop lcall push loop pop xor jecxz and (bad) mov call ficom outsb xor mov imul sarb sbb lahf into jmp mov and add push scas aas fadds pop fsubrs fs xor dec stos cwtl xchg add sbb cmp dec cwtl repnz test pop jae xor popa loope mov out fwait pop aam mov sbb xor rol lret adc pop cmpsb cld (bad) mov stc mov sarl scas out ljmp iret in mov imul notl addps je icebp insl call movsb inc mov or adc cmp xchg inc push mov xchg or (bad) mov sub xor sub push add lods inc adc add popa push xor gs andl or test (bad) ja xor in repz add js lret push inc dec rcrl mov imul rorb into add push xchg xchg jle ss in fldenv inc cmp add (bad) repz jmp scas lods pop add iret aas out (bad) pop jbe out mov mov sti lahf addr16 add sahf aam or ret loopne sbb ljmp sti or cmp pop fdivs jne pop (bad) xchg jmp orl ret pop pusha cmp repz xor dec jb js imul jmp mov scas push xor add dec arpl sbb into and pop jbe xchg fldcw or cmpsb mov movb inc cltd mov adc stos push xchg jne lcall pop mov inc out (bad) lcall out fwait addr16 lcall sub cmp cmc outsl sub out test rcrl js in pop mov pop push xor mov es cld loop mov xchg sub icebp add movsb push loopne pop sub sbb je cmp sbb and add jns mov jne and xor jmp add mov add mov dec cmpsl imul out mov les mov (bad) jae inc jnp xchg (bad) mov (bad) jne aas std xlat xchg cmp ss pushl jle mulb mov fmul inc lock clc fistl bswap cmp xor (bad) mov jo fs dec add pop jp jno xchg clc xchg sub je in or or mov pop mov and pop dec arpl into call add inc inc dec out sub jae cmp xor push xor loopne sub xchg fidivl aad xor xchg cmpsl mov scas cmp rcrl movsb jno mov sbb inc ja mov mov mov scas mov mov mov movsl mov out sub dec loopne and sub jmp dec push and daa push (bad) popf mov mov sbb cmp xchg xor addr16 jae inc mov or add stos sbb testl mov sub dec imul push push stc sub xor dec mov sbb arpl pop ja and push inc xor cmp pop mov lods (bad) sub push leave movsl pop pop jo mov loop movsl leave dec test mov cmp aaa sub push mov mov jo outsl sti cmpsl pop xchg pop rcll and mov (bad) pushf dec (bad) mov repnz mov pop push lret pop (bad) mov mov dec cmpsb test xchg les mov je cmp mov push ljmp arpl das mov xlat push bound xchg enter aad ja jg or push aaa (bad) in popf push push pop insl jae jae rolb pop jnp test and pop mov mov mov popf and xor sbb inc neg cmp lods sbbl push cmc bound mov xchg add add sbb cmp lds (bad) int mov jbe popl call sbb mov adc (bad) xchg roll test adc (bad) cmp lods cmp test pop lret jns nop sbb sbb push inc insb xchg add es push in (bad) mov xor cmpsl sub cmp push out sbb fisub and fwait out fidivrl xchg jp mov jno cmp and inc pop icebp cld addl scas ret lods lods sub sbb sub jmp xchg jp sbb mov push lods scas ljmp sub rolb xchg movsb cmpsb ja mov add in or sti push dec das inc lahf testb mov sbb inc div mov pop out add sub daa mov and pop sub not cmp (bad) loopne mov inc push dec stc add in sub mov insl cltd out (bad) lret mov fildll imul sbb ds dec lcall mov cmpsb test lcall inc sub sbb pop jp pop repnz or or and pshufw mov (bad) cmp and and cmc mov in mov nop lret in pop xchg (bad) sub loopne mov cmpb outsl pop and repz xor dec pushl inc stos repnz jae inc adc sub cmp out data16 popf cmp dec fisubl jne cmp and xchg jns pop dec xchg jmp push je,pn pop je hlt xchg and test fs cmpsb sub ret pop jl ficoml jnp mov xor xchg lcall push and in ret lds and pop int3 ret cmp add dec data16 add cld pop adc dec pop mov shl xchg leave dec into mov sub fwait lods jb jle xor dec mov cmp push dec lea fmuls pop push and out inc jg rcrl dec xchg push dec jl jle add sbb xor (bad) out cwtl or push or push or mov mul (bad) loopne mov in in push cmp pop dec hlt pop ds arpl pop fmul push cmp (bad) aaa sub xlat (bad) std outsb es test call xor push mov leave mov sbb push pop sahf mov push push inc add inc adc xchg int3 ds xchg mov jbe dec roll cmpsl cli push push jmp sarl cmp dec scas scas outsl iret mov insl lods or repz xchg movsl sbb mov mov push push in xchg dec in ja fisub inc (bad) cmp jp call (bad) xchg lret cltd rclb pop mov fcmovne cmp leave in idiv fwait cmc push add and cltd inc add mov xchg jg cs jle,pn pop (bad) std insl jp int3 push push jo pop add mov mov stos pop xchg sahf and pop lahf iret rclb push mov rolb movsb fwait inc repz push ds push or or xchg fist int ss add sbb mov in pop pushf fldenv or push dec rcrl mov cmp xlat jnp mov icebp (bad) push inc cmp jne,pn xchg roll xchg sbb mull xchg ret sub cmp jno lds icebp pop call add pop addr16 mov int mov imul mov (bad) mov pop jge lock pop jnp mov pop mov ror push xchg xlat loopne xor in and and adc xor cmp ja stos loop,pn push fisubrl (bad) shll fcmovbe fcompl das sbb sti adc cmpsl pop dec lods jmp (bad) aad sbbl test dec icebp and lret mov push dec mov insb jno ja pop mov insl jno,pt cs clc cltd in and repnz lock imul cmpsb jge cmp push push mov iret inc pop loope (bad) into nop test xchg scas sub hlt and push popf xchg lcall adc fbstp mov loop bound push gs repnz cld cld jb andb jo cwtl push jne and push mov xorl sarl ljmp cmp xor (bad) lods pop xchg icebp sub out adc sbb sub fs pop xchg push das add dec iret xor test add cmp mov rcrl nop dec int3 movsb pop push sbb cmp push mov lcall push mov outsl bt movsb cmp je dec fiaddl add xchg dec (bad) repnz (bad) data16 imul imulb jae jb jno lods imul dec mov into dec cld std pop push mov add mov add mov fwait arpl or push insb nop mov std ret mov mov push mov and faddl mov int3 adc add xchg jecxz mov cs out lock lret icebp orl jg add clts lahf sbb icebp movsb movsl cmp push ljmp mov sarl subl fnsave and lock fwait and repz es test ljmp cs hlt dec repnz xor incb popa loop in inc pop pop dec pop dec dec outsb in in bound sbb mov fnstenv (bad) adc mov testb fsubrl fisttpll and jne push and popa dec pop in pushf pusha pop push add test pop xor cmpsl mov out (bad) mov icebp outsb inc ret push movb lahf xor xchg data16 xchg rolb sarl jno inc aad mul jg nop cmp xchg pop mov mov jmp pop push adc cmc xor add (bad) hlt jmp pop or push and int3 fs push pop (bad) out inc adc mov sbb mov ret rcrb xor into xchg push xchg push loope movsb push aam or out push push fimul stos and mov or insb mov ds (bad) xor sbb ja cmc mov push jns addr16 clc nop inc xor or mov scas scas fwait jb xchg and push inc mov xchg sar cli jb lods adc sub out insb rolb (bad) dec jne into lods jae sbb jo,pn jb rcrb je data16 mov add stos pop test and adc loop inc dec and sbb cmp dec cs (bad) aad ljmp jb in jg (bad) popf jl (bad) xor repnz das popf mov pushf rcrl fnstcw ret sbb fidiv mov xor jmp mov mov imul inc jg std add ret js pusha sub aad dec cmc les mull adc mov test cld sub pusha test add rcr idivl mov mov js adc fild inc (bad) xlat iret push adc les adc pop push ds movsl sbb pop xchg insb mov xchg jecxz fidivr enter mov sub in xchg aam inc test pop loopne push leave xor pop cld sbb ljmp mov jmp mov daa jecxz mov outsb std jp mov cli cmpsl mov xchg xchg in jbe dec sub adc out ret sbb lods movsl fs out sahf rolb ljmp mov mov in call aaa add cmc sub scas (bad) test dec or pop push in pop jae stos and jbe dec (bad) lret pusha xor je stc dec xor jmp cmp push dec data16 (bad) xchg inc adc xor inc aas inc negl lea arpl repz inc pop sbb sbb jl xlat lcall test xor clc mov mov sub out pop add xchg sub and or push push arpl in call and (bad) stc push push out mov xor jnp pop xorl push and or inc loop dec loope xchg pop and pop pusha jo cmc sub aam or cs jnp pop loopne fcoml cmpsl xchg cmc cwtl jae mov jecxz out loopne icebp sbb (bad) aas negb insb inc idiv pop sti cmp mov xchg sarl mov dec pop push movsb jbe imulb push stos movsb push orl loope lret cmpsl mov cld push cs mov imul and stos pop (bad) les leave adcl (bad) cs mov sub jecxz ret xchg fstpt stos cmp mov xor dec inc cld push test mov leave sub ret out inc xchg or jp pusha lcall rorl mov sbb push shrl les sbb push pop scas inc shrl jge xchg push cld xchg imul fidivrl push pop loope rorl mov arpl das outsb pop pop pop roll dec insb cmp fcmovbe jmp sub repnz je adc jmp stc js test repnz mov cld xor dec dec hlt les cmp mov fistpl jmp push xorl mov stos out mov mov jne adc or daa cmp hlt loop sahf cmc adc repz inc mov es inc ss cs jecxz loope mov mov pop (bad) ljmp mov sbb mov push inc insl lds pop sub test inc mov rorb push dec push mov out push (bad) push mov adc cwtl mov xchg ret add sbb jge imulb adc inc pop jne and lret in push pop sub xchg push add js,pt adc pop cmp dec cmpsb stos jl sbb pop mov lock mov cmp sub pop add dec sub imul insl cltd sub mov mov mov xchg sbb jl ja xchg in fwait cs inc push (bad) sbb pop pop push xlat sarb xchg pushf aad (bad) mov stc enter dec (bad) in movsl mov imul dec iret (bad) jo inc and cmp clc cmp xchg adc jbe jp mov inc push adcl (bad) ss mov fdivl imul push fcmovbe dec lret (bad) jae push or mov dec sub xor (bad) imul pop es scas (bad) divb in jl jecxz inc sbb xchg rorb xor mov pop popa insl pop mov sub dec repnz sahf fmulp rorl sti dec inc popf push mov cmovo xor test xchg movsl iret mov sbb xor jp mov mov out sub imul push lret adc fisubrl adc repnz jl (bad) shrl ljmp (bad) pop mov mull add in lds adc cmc and out mov lcall dec (bad) je xor dec aad mov xchg outsl loop cmp pushl mov xor mov test gs je daa inc arpl adc sub xchg xor jo loope addr16 lcall lret xchg xchg push push imull xchg rdmsr jl (bad) (bad) sbb arpl xchg or lcall mov es cmc xor lea mov dec xchg test inc and mov js push test cmp jp jecxz fstpt ret xor pop or jno lret stc dec mov insb scas dec int3 sub addr16 and scas (bad) adc sti xchg imul int mov inc sahf adc adc and lcall pop or xchg xchg nop ds (bad) xchg clc cmp jbe aas cmp out cs js mulb add and xchg (bad) cmp ja push movsb imul es ds dec pop xlat dec adc (bad) cmpsb dec xchg test lods xchg mov rcrb jae mov push cmp pop xchg sbb aaa lods insb add inc mov cmpsb jecxz pop fs ja ret jle rol clc (bad) rolb gs into bound add popa mov repnz pop mov adc hlt mov stos cmc inc push stos push imul stos add das sub jo mov iret sub test mov mov xchg scas sub cli sub cmp dec dec xor repz inc push mov or mov sub nopl mov adc rclb jae in mov inc (bad) mov iret push je or and fsubs orl or loopne xchg xchg sub movsb movsl mov mov adc fwait outsl lea (bad) sub iret decl test test jne or popl lods insb or test inc pop xor sub adc das test dec xchg fbld pop lods stos bound pop aad mov fimull imul cmpsb rorl jnp jmp jne subl lock pop out es les mov ja lds clc sbb or xchg and bound mov and bound icebp loopne push add dec test sub sub add adc xlat fistl js xor cld xchg add cmp mov add push mov fwait xchg (bad) fildl xor pop stos mov push push add lcall jbe lock inc movsb loopne push sbb and idivl mov lock out push sub (bad) icebp inc addr16 mov aas cmp rcrb mov movb adc cmpsb sahf (bad) mov mov movb pop mov xchg push jns lods into inc popa cmp and mov pop repnz sahf inc jb stos out pop stc push cmp add js jo inc imulb add inc enter cmp xchg scas add sbb cmp dec mov rorl data16 das xchg push gs daa cltd cmc mov int (bad) (bad) mov xchg es jl fimul in dec xchg cmp fs lds mov mov shlb mov pop and pushf jp mov scas es mov mov adc xlat cmpsl cli ror (bad) movsl mov test movsl pushf pop or repz into mov push and je insb jns enter pop mov ret jmp loop lcall aas mov jge pop sub jnp test push bound fisub pop fisubl mov addr16 pop xchg pop dec lret sbb fistpll xchg addr16 pop jbe mov ljmp mov dec js fsubrs or or xor aaa (bad) pop sbb jbe cwtl daa fs movsl jb nop mov (bad) dec cs mov sbb rorb outsl out add xor addr16 dec jecxz mov mov (bad) sub movsb cmp add inc out sub test pop cmp add jno add dec add lock pop push xchg mov shll addr16 mov dec and push mov data16 outsb mov enter std pushw (bad) mov xor xor sub mov and dec lock popf sub psrld push xchg jb popf mov daa hlt adc mov and loope and add xchg push push out loop push inc stos push inc in test pop mov inc test and lret div cld fstl (bad) sbb pop lret imul lea mov out cmp js xor dec mov in add (bad) mov push xor popa mov adc icebp cmp ret mov jl adc cmp outsb xchg xchg fldt cmp icebp lahf lea xchg and outsl cmpsl inc call cli xchg mov xchg pusha fdivl or xchg call call hlt ret pop mov popa jo xor test cmp sarb mov lret loope cld push in dec dec outsb sub ss addr16 dec hlt inc out pop cmp jg es enter leave iret cmpsl imul dec ret outsl test xor add negb cltd push mov mov ret xor ficom loop iret xchg aas loope (bad) and mov int3 ss push push in scas and pop insl les imul mov jmp fisttpl lahf mov mov sbb lock push sub rcr sahf mov loopne mov mov mov dec push inc push and movsl mov jns adcb inc adc out mov mov mov mov (bad) aad mov mov std clc mov pusha cli pop (bad) adc (bad) daa cmp dec dec call out mov push stc shlb (bad) (bad) jbe es fcmovnbe lret push mov and add scas mov std (bad) fidiv sahf jp ret and dec fsts push cs repnz jge or mov fs scas insl movsl or cmp mov push mov popa pop dec xlat add cld sub das ljmp mov dec or fnstenv into sbb nop icebp cwtl es xlat aad loop stc mov mov adc lcall jg xlat aaa (bad) adc push stos popf mov pop jne and insb dec xor (bad) dec mov dec and nop inc mov mov movsb ljmp movsb jecxz mov add mov xor int3 mov aas push sahf call add xchg lret stos cmp ficompl xchg repz jns jle (bad) ja test dec cmpsl ret lret lds sub leave jg test int daa out es dec or adc mov push mov shr adc push sti mov jecxz ret xor push adc xlat xchg mov sbb adc enter sbb sub jo ljmp int sbb inc loopne (bad) push out rcrl jb push sbb loope out imul xchg mov jbe push jp jecxz enter add add je xor out inc inc inc pop pop shrb negb (bad) adc fwait test iret adc lods dec mov sub cmp mov and jmp mov das adc (bad) jae mov push cmp rclb mov out xchg mov loope sbb cmpsb outsb lret mov stos xchg lea sbb in ret movsb fxch in push or movsb pop sub fbld insl cmpsl lret sbb hlt ss int mov jns lahf jmp rcr das sbb orb enter test lock xchg clc les or rorb (bad) cwtl adc push insb mov add aaa outsb outsl sbbl dec push dec adc dec fildl loope (bad) cmp loop idiv test xor scas in or (bad) pop repz popf adc in cmp movsb aas (bad) jnp,pt pop and lret in cmc mov or nop (bad) arpl mov mov lcall stc jmp and xchg lret (bad) ret sbb popa cwtl or add and mov mov xor push mov adc xor sahf mov jno xchg add xchg (bad) cltd aas jge jnp jno push push cmp aas (bad) push popa out cmp ret mov add adc xchg mov or test add dec and jecxz adc cmp js add inc es outsl in into clc sbb adc cmp jnp out rcrb mov inc lods push btr xor xchg outsb mov push sub sbb fsubl jns (bad) scas rcl nop int sub adc push es jge adc xor xor xchg dec testl inc test lahf mov (bad) or insb hlt lret sbb sub (bad) sub in or and in xchg cmc mov mov dec repz jge mov pop outsl add nop mov cli jno jge push push jne push dec leave aam push jp sbbl fidivr rcll repnz into pop loop sub and xchg lock loop cmp cld lahf inc movsb (bad) lock jl aas mov jne add in add sub (bad) insb imul aaa test xchg jno push pop add aas les mov pop daa clc push movsb jmp (bad) mov and sbb rcl xchg mov xlat xchg (bad) aas jns cmp xor push sbb lret xor and push mov ficomp push cmp insl es add or push adc movsb mov aas sarl lret mov cmp mov fwait xchg mov xor mov cmp test and lcall ss dec dec mov in fidivr jmp lock sbb repz (bad) push jg adcl xor push jg les mov cmc pop sub dec inc dec cli stos mov xlat inc loop xlat jmp or push jp adc or inc ja cld jbe movsl pop call and sbb popa mov sbb das ret pop hlt mov cwtl js clc dec ljmp xor inc fbld xorb mov in int3 jl jb adc test pop call out mov pop mov pop ror es outsb push mov jp jg adc push dec cld sub cmpsl pop data16 push ret out das dec mov rol mov ret js lea add mov xlat stos lock mov int cmp dec cmp aas jo loopne sbb and insb pop jmp and xchg fadd xchg push out insl sbb sub scas add rol jmp lds (bad) int or clc sbb fcoml dec cwtl or lea push push inc ds insl mov lret call mov push les cli xlat stc pop mov inc sub mov jo (bad) xor and sahf lods add add outsb (bad) js inc jl popf or mov leave jne pop push mov clc cmp and leave and jne lcall cltd sub popa pop sti fwait inc inc or cli add call test and cmp pop ja or cmpsl aaa movl ret xchg pop push cmp add pop cmp jbe imul popf push xor push or and mov mov lods mov (bad) dec aad and adcl lea add pop inc mov or mov test mov mov xchg lds aam push out xor cmc jl inc mov fldcw or sub sbb pop adc in mov addr16 and lret mov (bad) inc lock (bad) cmc xor xor fistl nop xchg loope lret add inc jmp jb sbbl or xor cmp sbb dec clc cmp sub dec mov hlt mov bound and or shrl adc stc mov aam ss arpl push pop pop xchg adc (bad) or xlat mov pop cmc mov add rcrl int3 mov inc shll lods cwtl xchg es daa dec jge xchg sub lcall popf fdiv dec popa movsl repz bound js (bad) int3 sahf xor xchg test pop fnop push out pop dec sbb (bad) ficomp lock rorb divb xor push (bad) xchg jmp mov dec fidivrl jl (bad) mov sub cmp mov not out in add divl call jl add fprem1 mov or sahf loope into inc sub std stos jne js pop inc cs shll in mov lock mul (bad) mov (bad) rcrb lea mov pop in test movsl cmp int jo xor outsb mov lret jle pop sbb lret (bad) lods inc repz or adc adc test lret xchg push mov es cmp mov aad pop stos mov sub add mov mov mov pop ret (bad) scas sub mov loopne gs rorb mov pusha inc mov out rorl ljmp icebp insb and (bad) sub mov sti pop sub fwait push cmp scas out data16 sbb or jp cmc js xor call add dec xor or js push in iret mov adc ret and out cmp dec cli add lahf jecxz xchg cld ja popa movsb add adc imul cmpsb xchg push dec insb les mov sbb shrb push push out fidivrl pop jae (bad) mov mov lock sub (bad) (bad) int3 push (bad) mov xchg (bad) mov rorl adc mov sub insb test pop sbb adc add xor pop sub repz dec test sub popf adc sti pop jnp in mov pop adc xchg xlat mov dec or (bad) adc test jge dec popa sahf cmpsb fiaddl imull sahf xchg jae fwait pop mov fnstcw fstps mov mov test pushf xor popf jle pop fisttpll sub (bad) das push inc xor pop and int3 mov clc mov add nop or push out mov push ds enter pop cmc inc daa ret mov inc sub repnz fs mov popa dec push std mov push jo push mov inc ret pop fadds mov (bad) lret cs pop ljmp pushf sub xchg push fmuls mov cmp jmp sbb icebp jb and sbb popa push aaa mov push mov and push lret xchg ljmp ret cmp mov lea xor fiaddl insb js jmp sub dec push loop popf shr jle rcrl jmp mov repnz add arpl add (bad) push bnd insl (bad) sub mov cmpsb rol mov in push add fisubrl movsl gs inc push in lock jl (bad) into (bad) mov sarb in adcl movsl pushf mov mov mov jb int jns je and mov xor sar pop lcall jb call jmp add mov je pop xchg ljmp stos sahf jmp jg pop xchg (bad) iret or push lea mov fwait lea pop add pop push frstor pop daa push testb mov std in leave scas (bad) call xor scas pop xchg out cltd iret adc sbb dec (bad) or adcb movsb add lret aad xchg rcr std add mov fincstp popf fcomps cmp and ljmp push lahf sbb push lock xor dec dec push and sub (bad) int cmpsb mull insb loop sbb imul xchg test sarb popa cmp iret sbb aaa les cmp ret jbe xor jo mov push or pop int3 lahf inc daa lock jae int jle dec sbb sub divb or and push fiaddl clts sub push jbe stos sub repz js adc lahf (bad) stos pop sbb inc es (bad) cmp js push push dec das call cmpsl adc adc aam dec outsl insb push jp sbb or mov lcall dec cmp push or mov fwait xchg rcr pop cmp fildl or gs and inc pop inc movsl mov icebp xor push outsl lock (bad) mov mov mov nop idiv mov es out js inc push mov mov pop (bad) push mov adc out cli xor pop imull adc out pop stos xchg xchg jnp inc je repz stos fdivr and adc fistpll stos imul sbb or fildl cld sbb or jp nop mov (bad) pop cmp and xchg das sub das loopne ret push pop pop add or sbb xchg mov push insb push push dec and jno das jmp cmp test repz out push test nop xchg xchg inc popf or inc mov cli pop (bad) xor push int3 sarb sbb xor out jge loopne jbe mov jnp fs bound push lret stos std cs scas push addr16 sub je push lret hlt rcll rcrb inc fnstcw inc repnz xor fnstcw mov pop rcrl inc xor insb mov (bad) adc imul pop pop and jl cmp jnp sarb cmp cmp repnz mov and and pusha xchg mov and sbb sbb push ljmp clc lcall pop mov mov das mov adc sub pop repz push or or or dec insl mov loopne call mov jecxz mov sbb sub aas arpl or insl int3 std popa jmp test sbb jp mov les mov std lock pop pop pop imul xor ljmp icebp (bad) loopne adc xor cmp jmp sub mov or fisttpll sbb adc or in (bad) repz xchg mov jb pop cmpsb aaa jge inc mov jns pop or inc (bad) stos mov js push add jmp lret add pop in into test push inc add mov sbb in xchg fisubrl (bad) repnz (bad) mov lcall mov insl pop jno call icebp push pop in ja imul add arpl sahf cmpsl xlat loop cmp into les call and mov fwait mov cmp xor pushf adc xchg inc int rcll insb adc push push lahf loope test subl cmp in fsubrl jmp xchg mov xor or ds adc dec fistl cmp stc test pusha sahf xorl inc repnz cmp mov call fsubrs test pushl out fist ret sub dec mov fadds lret mov dec cmp (bad) xchg (bad) and mov (bad) call scas xor mov and push adc fnstsw fst rolb fs hlt into push iret mov call pushf sub add ja lock sub imul outsl lea out fcomps dec (bad) (bad) jno stc dec repz mov jecxz imul push jge jbe xchg xor mov xchg das jo movsl sbb lret cmp imul rcrb mov popf push fisub adc adcb pop pop adc scas dec sbb inc mov nop loopne sbb aad loope mov mov sarl jo cmp fsubrl adc sbb mov cmp lahf test inc dec hlt pop mov xchg iret arpl rcrl loopne addr16 adc out pop nop int3 call nop and fistl int aam imul add dec enter test xchg or sbb mov xchg jae fstps fidiv pusha and mov hlt mov mov sub cld jne,pt ret mov push call xchg and out ljmp fisubrl ja add mov inc insl xlat int mov xchg xchg popa icebp ficom fstp or or push ds cmpsb cmp mov push (bad) imul adc xor mov mov xchg jle mov lods mov sbbl xchg lds fs jne jns fildll cmp sub jns xchg sbbl sti dec inc sarb dec mov leave push stos je cwtl and hlt jo push sub xchg insb hlt ljmp repnz inc jle out xlat daa fucomip mov cmp mov or repz scas adc imulb adc adc add pop in inc or addl mov mov jle jae push jl sbb cmpl (bad) jo cmp mov test pusha stos add xor cmp movsb pop cs inc das int3 adc ja mov pop mov adc xchg sub jmp jge cmp push dec fildll sbb out jle fs repnz dec xchg mov insb pop or scas js jmp aad push ljmp pop xchg stos fs add jbe or mov xchg outsb mov push dec pop xor add mov imul out cmpb frstor pop or adc repz jmp push jl lcall cmpsl cli sub decl pop inc das add lcall mov scas push jne out movsb xchg daa cmpsb push out shld popa adc pusha and das cmp test mov xchg mov (bad) stc cmp xchg push xor test and scas pop adc mov xor shrl mov pop cmp mov popa fs jecxz or inc xor ljmp mov jg and and fcomp js sub das ret and lahf sbb xchg imul out imul dec test pop mov inc xorb sub jo sar out mov or lock mov push and loopne cwtl mov mov jle mov push pop xor xor sbb roll repnz pop and or insb cmp inc cld pop aad or dec dec (bad) push xchg (bad) icebp arpl scas dec adc sub sti mov mov pop outsl test pop jg add lahf test lret pusha (bad) dec repnz push mov aas xchg sbb scas jp inc (bad) icebp fsubrs scas nop fnsave in and fstpt push clc ljmp jp cmp les rorb fisub arpl and sti (bad) jno daa divb sbb and mov out and xchg push xor fsubrs cmpsl (bad) negb jl (bad) mov jb cmp call mov and adc ja ret adc in or adcl jl or push adc lods mov out dec imul pop and clc adc test jp adc jno adc scas xchg aaa aad add mov ja push xor mov pop int3 dec mov popa loope adc cmpsl jmp sbb adc xor dec jno ret insl jl cmc mov sbb push (bad) shll cwtl iret pushf or iret enter pushf (bad) les ljmp es xchg ret push hlt sub sbb loop lds xchg aas push mov ret clc mov sahf mov movsl push (bad) enter jnp out or pop lea mov lahf int3 scas mov add sub lea loope push pop add cld rorl push jmp mov mov mov xchg jne (bad) jge mov adc repnz flds dec jae out pop daa in lea inc into sub jecxz roll lods push movsl aaa jae and cs out xchg fadds sbb fwait pop ljmp ljmp lds and jl sbb int mov fimull out pop shrb les insl push xchg mov ss jo pop ret xchg cltd test emms mov lret inc mov loope icebp dec pop emms repz cmp scas and and (bad) aas jmp xchg loop add fidiv push es in lahf and lret movsb outsb inc jmp leave repnz test push loope jbe popa ljmp or pop aad sub fdivl sub push add cwtl xor addr16 xorb pop jbe sbb lock lcall test (bad) in cmp mov fadd sbb scas cld loopne lahf add daa inc dec mov iret pop xor cld in (bad) pop xchg mov dec lea jb jge push femms ja psubw fs andl push call sub mov jp stc scas js add lea cmp pusha xor cltd xor mov imul (bad) xchg in arpl and inc sbb (bad) daa repz push jnp push lret adc lods mov add test (bad) arpl push fisubr (bad) jno adc sbb ljmp out cmp aas iret sub and dec xor push push in cmc dec aas cmpsl mov cmp mov xchg bound fisttpll sub sahf cmc add pop loop xor stos xchg adc repz fs ljmp jl scas out mov (bad) aaa mov or lahf rcll pop insb ja iret leave xchg out cli and stos sbb mov js imul lods dec mov push adcl fmull ja imul or hlt cmp jb xor add mov push mov fsubrs and fptan mov xchg xor cmp imul mov mov dec pushf scas push test out pop mov mulb xlat stc outsb push mov pop push sbb loopne cld mov fwait push ss sub pop adc std and (bad) mov (bad) in push call out lods inc or into imul cmpsl jl mov aad ret arpl inc xor (bad) mov insl mov shl out je or nop mov push mov cltd sbb sub lds push pop lds xchg or lea aam outsb mov (bad) dec das ss jmp sub inc enter cmc jl add push push inc cld test stos or jge push and sbb cli daa pop adc sbb into jb cli dec sbb sbb pop frstor or sub hlt cli xchg into pusha and ja jns pop out add inc mov imul jbe cli cmp xor fs fwait stc movsl data16 pop std push push push lock sti stos sti mov fnstsw stos outsb mov les mov (bad) out mov fisubr ss xchg mov pusha add or mov popf jp in push ret fisttpll xchg sti out jmp sbb cmpsl in lahf sbb inc icebp cld fbld arpl fbld mov add mov xchg subb pop imulb cmc mov enter test sbb mov loope sbb lea insb int inc sbb jecxz rcrl adc (bad) mov je jb loop cmp or mov dec inc and mov clc loopne and cwtl out or incb notb adc test jno imul in mov push pop jmp pop aam adc xor cmp xor adc and pop call cmp stos and flds pop sub je sbb adc lock jne pop dec fwait xchg pop pop loope add pop daa xor lahf roll inc cmpsb insl je or adc (bad) outsb pop and mov inc cmpsb (bad) xchg xchg pop ja clc sbbl jns push std mov adc push sbb dec jecxz in lods test (bad) (bad) cmp dec inc cld (bad) cmp mov hlt jl fsubrl jecxz mov pop stos and push int test and pop mov hlt cs xorl jnp add xchg xchg adc stc jmp cmp test ss jmp dec daa inc aad or stc jl or clc enter clc xor jecxz aad cmc std or jo dec icebp hlt imul fstpl scas mov icebp (bad) daa jmp mov ret sar ret shrl data16 mov push xchg and pusha gs xchg mov les sahf leave dec or jns dec jp jl cli xchg fsub xchg out jbe (bad) aas xor jmp out push arpl adcl jb xlat gs inc ror cwtl lcall and jns mov push mov adc pop arpl call rorl out loopne (bad) call lea lcall jne or pop lea pop rcll insb add lea jne aam sbb jne fbld lcall pushf dec dec stc loopne push xor rolb mov je xlat dec push pusha or xor dec xlat imul sbb cmp mov enter mov jne clc lods je push scas cltd sub icebp es push mov mov pop push (bad) mov fmul sarb inc dec mov fistp outsl xchg xor in int3 add xchg into or pop imul push fiaddl mov out icebp mov inc in sbb mov into or mov (bad) mov sbb add pop cmpsb lea xor xchg cld sahf lock adc fldt popf (bad) scas push arpl push push (bad) lea sbbl (bad) aaa repnz jl (bad) shlb fildll dec inc mov outsb fs divb pop stos push xlat sbb mov in sbb xchg inc lret ljmp adc stc addr16 push fcoms push insl inc pop pop ss and movsl and dec xchg shll (bad) mov push into lock mov mov xor shl rol lods loope int3 jnp cmp jne mov test sbb imul adc (bad) sub lret cmpsl shlb in dec mov lahf ss sbb sub lea leave dec nop out xor adc xchg and push xchg xchg stc push inc scas mov and js fnop movsl scas shrl sub xchg jb daa lods cltd cld push sub js sub xchg jge jb adc fdivrs sub loop sbb pop (bad) push lock xor and repnz xchg outsl imul dec rorb lea adc jnp out sub jge jo sbbl cmp and pop xor mov imul repnz testb loope,pn pop sahf out adc stc inc cmp shrb dec mov mov xchg lds sarl jnp fiadd pop imulb or mov jno int call sti popf pop sub mov lret or push push mov (bad) xchg mov xor sbb jl sbb sbb jge or pop jecxz adc loopne mov or and push repnz or fsts rorb rorb xchg out pop push into add stc mov adc (bad) jns lea scas pushf cmp xchg out jae sbb mov cs mov xchg (bad) jl mov fstps stos icebp add insb push lahf fs stos cmpsb mov or lahf push sarb inc cwtl add lock mov add pop in fstl xchg jae mov or push push cmp les jecxz sbb sub push aad insb inc push std movsl cmc (bad) fsubl loop fisubr fbstp mov xlat dec repz sub inc movl add push data16 xchg lret ret gs scas xchg adc inc jmp addr16 jecxz dec jp lock sub xchg lahf dec rcl test lods aaa sti xor ja xor mov xor mov inc sub pop int3 pusha pop loop sbb in scas sahf xlat push jle loope xchg bound in aam fidivr (bad) popa dec roll nop adc ds out out pop cli push in pop jbe cli dec xchg dec icebp jmp xor adc call jle das cmp test lods adc xor lock (bad) inc add dec lock mov xchg mov pop cmpsl mov movsb sub cmpsl loope and mov bound xor adc daa push scas (bad) in push adc inc xor xor sub push jp inc shrb outsl lcall aad push lods jb pop push jbe cmp in stc push arpl (bad) daa test mov mov (bad) or mov mov jp mull mov add jp insb (bad) pop ss and jle cmp cltd mov stos cmc pop adc push repz (bad) (bad) mov jle aas pop aam xor nop cmp mov sahf jl sahf lock imul inc xchg add push mov inc cmp mov xchg jns sarl (bad) mov cmp ljmp mov mov out shrl in js js (bad) ret in hlt pop xchg xlat mov dec repz push (bad) es push xchg xchg movsl push loopne andl lcall and xorl inc pusha aad and dec ss (bad) rorl or (bad) stc xlat out inc imulb sbb aad std cltd add inc pop and bound xor fwait inc lods mov dec loope cld out mov test loope (bad) push (bad) pop mov test (bad) daa es inc inc je sub loopne daa xor adc out mov aaa xor ja xchg popf xchg sbb mov mov popf sub mov mov push xchg cmp pop lcall jnp (bad) jle jge ss movsb es mov scas xor dec push mov imul loopne aam (bad) enter movsb inc dec lcall (bad) test icebp push and lcall ds jb es (bad) push mov pop push sbb je dec gs xchg mov repz test imul imul in jle leave les pusha lcall inc (bad) pop push stos insl das ljmp test mov ljmp mov mov cmp sub out bound clc popa inc imul add loope mov or pop jns add (bad) inc or test (bad) mov sbb ds inc aam or mov push addl lret scas daa sub pop insb sbbl add sahf sbb cmpsb les xchg stc test mov call nop xchg mov imul push inc cld ss fwait jbe sub sbb and jmp mov lea repnz adc fxch in add stc lods and movsb adc std fimul xor je and mov push or call jae dec mov push repnz xchg mov inc (bad) aam xor jg and leave xchg or or mov push int3 notb jno test cmp push mov negl nop mov clc pop sbb ss sti cmp fldt ret dec xor xchg adc lea xor mov jle or sti rolb stc mov adc push push mov or xchg sbb cwtl push xchg faddl inc mov mov xor mov insl jmp pop or rcr dec sub jg xchg cmc add ljmp xchg imul xchg fucomi pop dec stos inc stc jo dec adcb and mov jle mov push push pop pop pop test sub das cwtl cld jecxz xor imul inc jno icebp dec push push xor pop push xchg sub xlat cmpsl clc inc out adc push jp les xchg cmp jne sbb lock aas xadd xlat enter es jns addl (bad) int xchg push shrb cld ret shll sbb aas sub pop add pop into std fstps adc adc rep push les pop cmp out xchg loop mov scas rcrl repnz sbb lahf scas stos mov adc mov xchg add add and mov or sbbb jl sbb out pusha (bad) jae (bad) js push imul push sbb jb cltd lock loop mov mov cmp (bad) pop stc ret xor push hlt lea mov nop push stos mov repnz mov cmc pop aas shll push xor sti loop out mov mov push and adc and jmp sbb stos dec cmpsb mov (bad) mov sub fs mov pushf fs adc decb pop insl rclb mov notl cld sti cmpb and das xchg std mov sti imul outsb daa test mov push rolb (bad) leave adc or insl loopne es inc and push push les rcr out sbb dec inc pop mov inc loopne inc (bad) sub cmc inc lret add mov mov in mov stc repnz jno adc xlat xor cli sbb fbstp xchg adc xor (bad) push fmuls aam movsb and sbb and leave ds pop leave inc pop fistpl push pop mov and xor jmp loope lods outsb fs hlt pop (bad) push hlt test pusha in enter add xor int3 pop sti out fadd fild repnz push dec ss inc mov xor push push and call movsb mov sbb negb adc clc fnsave inc mov das mov pop cmc pop adc vcmpps xor sbb movsl idivl test out sahf gs movsb sub test (bad) pop xchg mov inc mov (bad) mov mov shr lahf sbb loopne loope nop mov ret data16 pop je jae sbbl arpl or cmc adc pop inc shll loope inc testb loopne mov in sbb call jnp (bad) iret ds mov dec pop push stc add scas lea push pop movsl xor daa mov fisubl sarl adc or push jo jg movsl push xor pop or (bad) in jl and popa xor dec jae and call in lcall cmp mull or subb sbb push rcr mov xchg movsb call les mov push (bad) push popa xchg sahf add lods lods cmp xchg lret mov jno push dec and inc out dec rcrb cmpsl inc aaa fistpl stc mov fs iret push pusha push dec and std (bad) iret dec sub or inc cld mov cmpsb sub add add ret jle jbe loope out faddp out repz or jo cld fwait stc rcrb lods add or mov lea mul mov aas hlt outsl sbbl lods or and out mov ret out mov or pop dec not inc push or mov clc loopne into add test fld arpl sub loope jmp pop dec arpl mov lods and int dec test mov jo aaa mov lods mov xor sbb xor fstp (bad) cwtl xchg arpl clc addl dec cltd leave cmp sub cmp fistpl ljmp js push (bad) mov in mov add inc mov sub cld adc jo dec mov jo pushf push nop xchg out lret push fadds fucom adc sbb es and or sbb pop xchg loope cmp stos jno pop ljmp into sub (bad) pop cmpsl test or ficoml dec mov xor xchg dec inc inc das lahf push es push imul cmp adc call add and lds pop xchg mov sub push pop pop out cmp push mov xchg mov or xchg and push ret sub xor mov mov xor dec lcall inc sbb mov das mov sub popl jecxz call test add inc inc scas mov sbb aas ret cmc jbe (bad) cltd ss sub out inc divl out inc pop sbb imul mov (bad) frstor or adc ret pop vpmulhuw cmpsb imul int3 movsb sub dec outsl int3 into inc pop or lds pop push out xchg mov out (bad) or (bad) mov inc jno sbb mov mov in rcrb fisubrl popa mov or jge cmp movsl jmp mov jmp dec lock xchg adc js sbb dec int roll push inc leave push xchg dec mov repz mov jae std sahf mov and or (bad) pop sub xchg das ror jmp data16 xchg mov mov sub jg idivb xor (bad) outsb xchg cmp inc movsb jbe inc jnp repnz lahf sbb test jno cmp mov push repz mov bound fsts xchg mov inc adc ret subl cmpsl push pushf (bad) xor xchg cmp xor jp call stos imul mov xchg cld and xchg cmpsl sbb pop sarl push dec data16 add jnp or scas push sub cmpxchg not inc push jmp adc ret adc xchg mov lock test stos daa dec pop mov mov pop nop addr16 sbb bound mov dec sbb cmp rcl cwtl mov or rorb pop add mov sub fs adc ds mov cs enter dec jae imull daa imul lods bound aad (bad) ja jns sbb daa testl jo xor sbb mov jmp adc jp cmpsl ss in jbe (bad) mov add dec mov mov dec pop fild ja outsl call loopne dec and push movhps loope mov sbb mov push dec and cmc and jo xchg shll scas je int3 ficomp cmp fs sbb jmp or lahf pop rol xchg push std add test mov sub andb jg mov dec add stos (bad) mov add sbb pop dec push jnp cmp fcmovb test xlat adc sub pop push sbb xlat push jmp xchg dec dec and or imul xlat jmp scas fiaddl pop jae mov cmp mov xor loop pop or push xor fisubrl flds mov inc rclb cs pop mov in cwtl pop inc adc push or cmpsb fnop inc in mov or (bad) (bad) dec xchg movsl dec cmp xchg add xchg sti adc pop adc or repz gs fildll xchg sub pop andb mov xlat sub (bad) xor fld push adcl pop fwait lods adc adc dec mov sbb add push ret push cmp mov aas test adc fcompl mov js push (bad) xor clc fwait push mov pop xchg cld sbb push pop leave xchg mov add adc movsl xchg sub jbe pop andb sahf sbb loopne push sub push sub out inc jl xor fist jae cmp addr16 gs sti out out jle mov popa jecxz dec sar inc (bad) jns test add sbb adc mov stc adc fldt pop (bad) jbe in bound xchg or add mov sub mov or es xchg pushf loope jno push mov cli into fisubrl mov stc shlb movsl aas jns,pn shlb cltd mov xor aad ficoml xlat or inc cs out into (bad) fist mov adc sub sbb sbbl sbb sbb push out mov repz sub jno pushf pop imul enter (bad) jae icebp test jb loopne inc mov popf or or and cmp out jae xor sub mov nop enter mov xor sbbl push popa mov push fcmovu ss cli and dec jno push jae fs and dec ficom mov test testb mov sub (bad) mov enter outsl mov sbb mov scas dec pusha add mov mov xrelease xchg roll jp sbb pop sbb mov das push in push mov mov cmpsl fistp rcl pop mov test aad test sub outsb xor mov push mov out xor rorl push pop pop je xchg xor inc (bad) ds push or fwait sub jp mov mov mov fimull inc or jge dec (bad) idiv inc aaa iret addr16 insb cmp out xchg lds mov mov sbb adc pop cld xchg lods mov jl aad adc xor mov in jle mov adc add ret (bad) mov jne scas pop push outsl aas mov ror arpl pop inc movsb test imul cmp cmpsb out jl xchg cli mov rcrb fidivrl lahf push dec clc test sbb out push sbb jae mov and fistpl addr16 push nop mov mov out in sub ret or pop push gs ret or xchg xchg adc sbb cmp daa cmp dec aas mov loope out xchg inc push fwait and adc xchg fldcw dec dec dec ret subl jp shrb andl addr16 into mov lds pusha in or mov les xor cltd (bad) xor push fisttpl sub sub mov icebp inc lret ret push ret add sahf sub push scas (bad) out xchg out in or sbb cld and imulb sub lods xchg int insl lret rclb add gs and sub adc pop ret call roll dec popa xchg cmpl dec xchg push fstpl sub or xchg rolb pop push jbe mov imul in ja jne jl inc mov sarl push arpl xor paddsw movb push xor pop fdivl fildl mov jae mov insl es and xor in cmp pusha (bad) cmpsb dec jns jmp lods fbld and pusha inc jne xchg cwtl push xor ss fnop add leave pop pop ret stos xlat add inc movsb and inc cli sbb pop xchg cmp xor or sub sbbb sbb repnz sbb in pushf fsubrs xchg jmp enter into jge or xchg pusha shrb inc in fldcw into data16 xor mov outsb scas jmp sub mov aad frstor or pop lret xchg adc rorl mov or xor insb dec andl cli iret repnz adc cs mov iret ret insl adc adc stc mov or xor mov gs push sbb mov fs add push cmc out imul adc mov lret hlt jnp sbb xchg sub nop jmp stc and sahf lahf and lods and int add arpl mov rorl bnd or mov dec inc loopne pop (bad) pusha add sbb out cs stc xchg icebp lock cltd xchg leave xchg loop icebp or scas jg fnstcw mov fs test scas psubd pop xchg inc ret les mov mov ja xor jne out jae popf cmp mov fwait xor xor int3 inc enter test js cld nop dec mov lods mov mov jo jmp push or jno push int3 xor xbegin sub loope shrb xchg leave push daa mov add repnz dec mov cmp sahf imul push enter mov je xor mov sahf sub aaa jl xlat fdiv inc loop jg push dec aas cmp cmp add push loopne dec or mov sbb stos les addr16 xchg and push pop dec mov adc fcompl sbb or loop mov xchg ljmp mov push xor adc and xor hlt or inc pop xlat stos dec xchg mov loopw xchg inc ss mov roll jmp push inc cmpsb popf cmp mov adc mov sahf (bad) dec repz fs pop push push fldenv jge and mov in test pushl popa jle dec (bad) sbb mov rorl popf lahf scas sub nop jge jne cwtl sahf mov lcall cmc iret sar mov mov mov jp negb lea jmp push sbb repz and cmp pop (bad) aas (bad) push lahf xchg sub sub mov int3 sbb pop (bad) or xchg (bad) insb fwait lcall outsb mov out cli stc sub dec xor or pushf mov (bad) (bad) (bad) cmp push xor ret fbstp cmp jge out push pop aaa mov push xchg mov inc cwtl notl lcall or mov (bad) cli inc fwait inc aad push movsl xchg pop jne jecxz cmp add jle negb cmp inc ss loop cmp cwtl fistp in lods addr16 into mov pop arpl mov dec bound outsl add inc lcall (bad) dec pop rorb jp les daa insb push inc mov xchg cld xchg movsl outsl mov jmp inc pop jge scas inc rorl outsb test or inc ds ret out lock pop xor and mov sahf inc sti repnz insl mov jmp outsb in pop xor push nop ret dec dec lds mov add dec int push adc mov lret mov mov mov das push sahf inc stc mov inc rcll sbb (bad) lret cmp xchg push leave test mov aam push dec enter lods mov fild cli orl cmp jle into movsl in adc push cmpsb pop jp jbe push push andb insb aad jae cld and xor sarb add enter mov (bad) cmp enter daa pop aaa hlt mov aad aad push popl popf mov icebp test add ficom jb sub mov mov cld xor out daa push xchg sbbl adc push cmc adcb pusha sbbb addr16 adc imul arpl push decl and and addl pop dec decb add jb mov jp mov repz pusha ds icebp inc push ss cmp dec es or add jbe sbb mov mov cmp js mov xchg (bad) fdivrs xor aaa cs add scas or aas das mov fiaddl mov orb mov and push popf or push jo iret out out pushf scas push mov mov fnsave sti cmp xchg ljmp je hlt pop pop lcall mov cmp sub jecxz fdivl push testb push rcll lds les jge cmp mov xchg push dec shlb mov pop adc mov inc pop (bad) xchg xchg xchg or mov (bad) mov inc push cs pop cmp pop mov sub enter xor dec pop sahf cmpsl cmp push push sbb pop pop mov (bad) pop icebp loope movsl cltd mov pop sbb cmc push or insb clc or inc inc scas ficom rorl loope inc lret sub leave cmpsb xor dec pushf push arpl outsl and mov and sub mov or clc inc loope and jl sti jl imul addb push lret icebp in add out or pop je add out loop ljmp mov clc and push jmp insl aas cmp shlb loop test inc lds outsl pop sbb xchg add jmp mov cmp dec or sbb mov push mov lahf fs lock mov scas insl add jns cmp mov push dec daa sbb sbb movsl mov jo insl cs pop jae or jp lods std hlt dec or fisttpll arpl lock sub les and add pop sub pop pop scas cltd test scas mov cs jmp outsl jae (bad) fsubs mov stc xchg lds mov sbb cmp cli (bad) fs sub cltd or movsb mov and mov mov rorl pop add mov pop pusha jp je mov pop (bad) loopne aam out out cmp add fadd (bad) push in in cwtl popf mov fmuls loop xor aad dec push cmpl sbb cmc ficom jbe add mov stos sti jg push and adc stos fstp (bad) push jmp sbb dec push cwtl lret pop fidivl cld xor add cmc inc and xchg xchg call movsb adc nop xchg mov sbb scas jge sbb mov sbb outsl inc inc iret adc dec ret stc std dec gs (bad) adc int inc add fcoml popa or test aaa adc mov lods mov imul mov ljmp fsubrl pop mov enter movsl jae mov mov jbe mov lret ret add sbb cwtl jmp sbb ss cmp int3 pop and add movsb sub xor (bad) pusha adc and add mov int jmp add dec addr16 in cs dec cmc pop enter out sbb mov repnz lahf popa movsl jp mov dec xorl inc jecxz cld sar inc pusha add sub stos xor out sub mov mov xchg mov adcl push push mov add cmc in notb adc lea cltd fdivrl xchg mov notb push lahf out pop pop dec sub call jbe inc call mov push mov jne dec mov popa pushf jp pop mov arpl pop ja and cmp subl push cmp je cmp subl es add or sti jle mov sbb sbb in into mov (bad) fcoml mov popa and out test sbb test jb lahf xchg xchg aam ja (bad) repz xchg jne aas push and and ja mov popa cmp loop rolb dec mov in neg mov or fs push and (bad) mov pop pop mov imul mov and xchg push mov jmp in icebp out adc dec roll mov adc fimull test cs sub jp sbb fmuls sub cwtl and or inc xor in adc into jo jp push xor mov jecxz xchg mov add cld cmp ds scas int3 xor mov sbb cld cltd in xor shlb ficomp lods adcl mov pop cmp imul in sarl jae jnp aaa lods pop dec or ror inc cs loopne jae push or mov cwtl dec cmpsb dec mov out mov negb push sub das cmp fucomi std mov dec insl xchg add lods or rcrl xlat pop je add jne pushf jbe ret fild jmp (bad) xor push lods mov and aad cwtl insb adc scas xchg sbb stc xchg shlb movl push out dec enter pop stos fldenv fist xlat cmp ret mov push mov jne xor cmp push dec cmp pop je adc fisubr xchg fwait pop push cli pop lret icebp lock fldl imul cmp mov hlt jo and pop pop insb ds adc cmc aas pushf dec (bad) pop movsl roll rcl lcall pop xchg xchg and mov insl xorl daa mov adc push fistpl scas sbb ja test sbb mov jnp xchg cli or vpextrw lds lret psubusb cmp xor repz dec inc push or fstpl dec outsb or imul out push sbb adc test ffreep dec xchg and fdivrs xor push (bad) aaa sub mov out insb or pop scas in les xlat inc (bad) xor fcmovnb pop shr cmpsl xchg cmpsl push mov repnz jae testl or les mov jecxz add mov mov sub ljmp in arpl addr16 test mov int3 pop (bad) cmp mov mov xlat dec mov loop xor ret push out sbb or nop adc mov mov sbbb jp popa mov cltd dec andl call sbb xor inc or mov clc loope,pt mov and xchg mov data16 adc fwait addb inc test (bad) sub add mov sub xchg xchg dec add arpl (bad) xlat adc cmp pop jg dec pop pusha inc xchg hlt dec pop inc pushf inc cli cmp test push outsb mov pop mov mov pop outsl mov or in leave and (bad) jae jae ljmp nop sti cmpsb rolb notb stc cli jns jl xchg loop jecxz test lock into gs je fmuls pop push add pop push je push adc cli lea sbb jo lahf add xchg cs or xor add xor mov xlat rcrb add cmp adc dec inc andps (bad) sti sub jecxz test xchg cmpsl out sti (bad) xchg shll and xchg sub adc nop pop out xor sub and test (bad) loopne jae mov xchg or fs mov sti sub mov mov aas mov repz test sar add sbb ljmp inc sub orl test (bad) pop jp icebp dec test push mov xchg lahf psubusb mov and in mov popa inc push (bad) (bad) nop sub pop lds loopne (bad) dec jmp insb and and adc and lds inc add mov xchg cmpsb imul ss aas push enter pop cmc scas mov repnz or adc push (bad) shll push pushf jecxz adc inc and jmp shlb cmp cmp loop fwait ja pop scas lds xchg pop cmpsl repz mov bound sub adc push js and ds sbb out cmp inc stos fwait and pop jle lret or mov iret ret out cmp pop stos cmp lods mov (bad) cld xor popa pop stos sub adc lods pop nop pop lcall mov xlat cmp fst fwait in xor mov cmp adc pop stos imul mov mov je cmpsb bnd outsb mov out sub adc mov insb movb mov sbb xor fsubl lods pop stos loop iret gs mov test jge cwtl imul jge sub push xchg incb test nop cltd int3 dec xchg mov out je inc ret inc stos sbb test dec inc mov insb jno rclb enter jno sbb (bad) mov inc leave xlat or jae or mov imul out out call push adc stos (bad) nop sti into out repz and enter int lods mov je mov inc mov imul sti fadds add dec int pop mov pop mov shlb clc cmp push jns notl xchg push std or dec xchg fstps mov loopne test test pop cmp adc lcall outsl int3 mov sbb sbb stos popf clc push cmpsl mov mov or (bad) xor jb xor xchg loopne xchg push loopne sbb mov insl stos bound xchg movl arpl adc out mov lods fldl2e mov in arpl mov push sbb or lahf loope lea adcl and mov mov sarb movsl and mov stos repnz sub inc mov dec stc gs cmpsl addr16 cmp mov adc push dec adc cmp (bad) mov pop and ss cmp pop add cmp es ja or jbe scas fdivrs cmp mov xor scas iret lret mov mov cmp js cltd ja fisttpll mov (bad) cmp lods into and sub push push ds pop rep stos scas fcompl mov stc jg ret fmuls (bad) sub jmp or pop inc and mov decb push push lock incb inc pop test xchg mov add (bad) incl (bad) nop jl fs popf call mov and jecxz jo sti jg jl sub push test push fstps aad adcb ljmp inc jg mov inc ss mov popf sahf push mov ljmp pop push das pop rclb dec mov negl xchg popa xlat in outsb lret daa jns fiaddl cmp jne idivb inc pop and inc xchg and jns (bad) adc mov aas jge addl aad sub hlt lods aad (bad) inc loopne xlat daa adc movsl clc stc pushf mov mov sti scas nop lock dec clc shlb mov repz jno jo jg pop dec (bad) mov dec stc loope sbb push ret cmp std mov jp (bad) xor xlat test addr16 jmp movsb adc test sub ljmp (bad) cmpl xor cmpsl mov cmp scas jne repnz das cwtl icebp rcrl xchg sahf test call (bad) sub pop inc lods roll std add dec xchg test loope sbb lahf add xchg adc stc mov push movsb mov out and scas outsb xor push adc loopew lea je xchg test sub inc mov mov xor pop adc gs (bad) xchg cmp inc sub lahf inc roll mov pop inc mov cmc jge ret fiadd adc xchg cmpsb (bad) in aas lds push xchg sbb push lahf arpl scas and js jp inc js sub cmp lret pop add add push adc mov fsubrs add xchg jne add sbb or jg aad cwtl fnop pop inc (bad) js enter lds jnp js dec adc cmpsb mov xor mov xor iret fincstp adc xchg pop enter frstor mov or dec or ficompl xchg and pop das jb jnp (bad) loopne int3 lock out or mov mov pushf push sub fsqrt cli sub xchg icebp inc pop ret daa ja pop cmp stos push xchg jmp mov mov movsb adc stos popf inc fistl in push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret jp pop cli fidivr jmp icebp sbb xchg stos iret lea jmp lea jmp sub cmp in shll jmp sbb ret iretw pop add sub int mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp jp sbb fidivr inc adc sbb xchg stos iret cmp xor arpl sub shlb mov movsl imul push icebp adc aas loope pop gs and xlat mov (bad) mov sbb cltd add stos mov sahf mov int mov xchg inc and cmpsl xlat movsb mov imul jns or and xor add inc mov gs imul ss cmp xchg xchg shl and rcrb cmpl jmp mov repnz mov ljmp mov mov sarl or lods adc lea adc arpl push and jnp cmp xchg push stos js std sub out mov pop stos faddl mov or loopne stos (bad) dec adc cmp in int3 (bad) (bad) pop movq add aas pop dec xchg dec cli iret sbb and outsb les into lock push jg int3 sbb and pop cld inc dec loope push sbb in loope das outsb or pop fidivl mov js sub cmpsl iret dec jne jbe mov adc xchg scas stos cmp ja lds iret ret pop inc mov lods and pusha rcrb mov dec sub push jp lret fstps or (bad) ss add mov mov inc (bad) in movsb enter mov cs sub xor outsl xor sub sub sbb cmp cmp fwait add (bad) dec inc inc sbb test cwtl jle movsb fs push jmp data16 xor inc dec mov push fdivs ds (bad) mov sub mov jl sub dec jno fisubrl sahf rcll insl dec out jo loope movsl cmp xchg cmpsl inc lea push (bad) xor xor jns (bad) daa add pop cli xchg or in (bad) mov xchg arpl mov icebp push fadd push jno jmp add xlat outsb arpl sub outsl mov ret jo lea jge imul push or sbb test mov sahf inc (bad) adc mov xor cli xor aam or or xchg and sub lea test ret popl int out jge fs jge pushf dec mov adc inc lea fstpt das push mov xchg mov imul gs mov push push daa ljmp ds mov xor dec inc je leave push pushf dec enter ljmp lret jae push dec xchg adc push jne xchg mov mov sub or pop jo sbb sbb pushl sbb adc fwait bnd in jecxz ljmp adc in cmpsb mov bound shrb adc push mov add es pop cltd sub out jb add jne ljmp dec (bad) mov (bad) cmp and fdivp xchg scas add sbb mov js cli les mov aaa nop es and fwait mov push or loope ds stc insl test cmc and (bad) mov fdivrp (bad) xor dec mov fist adc addl (bad) in push adc mov repnz movsb mov pop jo cmc movzwl fldcw rol aaa xchg push push rcrl mov or out adc and push push push push int dec call data16 pop dec fwait adc and addb mov mov test dec into popa lret enter cmp js lahf cwtl loop mov sbb cmp cmpl (bad) aas cmp push movsb jns mov cmp fnstenv mov mov xchg cmc rorl sbb repnz frstor adc or and (bad) or icebp lods pop icebp mov xlat dec out lds (bad) pop es in in mov mov ja je or andnps jmp repz jb jecxz ljmp or push push xor mov rcrb add arpl mov rclb mov dec movsb cwtl sub add mov pop aam jl hlt adc subb mov out lahf clc sbb push dec mov call mov sub dec mov (bad) fcomps repnz xor cmp xchg pop sahf or fiaddl xlat lret rcll sub jno adc or lock test aam pop fldt loopne sbb cli pop sbb sub cmp inc lret sbb and inc and outsb inc inc test shlb pop js scas sti add mov lahf lds sub movsb push es lcall push mov cwtl loopne orb cli decl add or dec faddl cmc stc ljmp mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 enter cli inc test add sub and sbb insb dec push addb mov sarl imul dec cmc scas push icebp adc loopne xor sub pop or adc xchg std dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 das gs fucomi xlat sbb cwtl xor (bad) or add enter stos in mov dec or jg negl cmc scas push icebp adc movsb addl mov outsl inc popa fistl xor repz sub cltd mov pop in jge dec out in icebp cmp mull cli movsb shll mov movsb sti mov imul jns ljmp add adc or into push pop adcl xchg cmp rorb out gs xchg dec loope jnp insl and in add sub jno push into adc daa mov sbb jp sub pop cli jle sbb fstpt or in call mov out out cltd pop pop sbb lret adc (bad) jb stos sub jo and xor pop adc or xor jle dec (bad) int3 pop xchg sahf and adc push repnz into sahf js mov int3 mov out sahf ret out pop push jae xorb jbe aam stos inc (bad) mov mov xchg push sbb pushf sti das (bad) jle lret jle clc mov ja int3 push mov rcrb inc (bad) and xchg mov test mov cmpb (bad) and push repnz add aas pop jbe arpl push jl mov xchg cmc push sbb lret les mov std cmpsl roll cmp std enter gs mov lods xor cltd cmp clc and push xor das sbb pop sbb iret cs (bad) sub ss jp add xor outsl adc icebp movsb mov jno cmpsl sti cmpsb incb mov mov mov mov cvtpi2ps (bad) jl icebp mov aad or cmc andb push cmp xchg cmc (bad) sub ja lock adc sbb (bad) jns lds add pop cli xchg pop loope and lret push mov in mov (bad) and dec dec sbb imul dec push das mov push mov jle cli xchg add lods cmp daa pop mov and lret or test ljmp fdivl xor or aam or cld test rorb ret (bad) cmc cld popf adc cmp int3 push pop in (bad) repnz flds call adc nop adc lret and in adc rcll in cli cmp jno dec inc push in jne adc mov xchg into push or jbe dec lret jle push sub sub mov push xchg mov push decb pop add pop (bad) jae lcall ret xor outsb and xchg ret daa das sbb jle mov add xor push push std jbe push int fwait adc add add es mov cs ret mov xchg sbb pusha xchg lds pop push mov jo cmp pop mov push pusha gs imul push movsb cmp aaa nop out cmp pop xchg jmp les mov adc movsl push test mov cmp push call fiaddl jg test pop mov inc leave pop loope pop and sahf mov xchg mov xchg or mov (bad) xchg gs cltd mov in dec scas adc and push adc inc pop jbe inc fcomps bound out push fs pop daa inc cmovo insb dec les scas or out (bad) jno enter ja sub jp dec push dec add adc jmp cmp adc (bad) xor add nop flds loope and cmpsl jge,pt and daa adc dec lret fsubs imul or ds adc mov test cmp dec enter sti cwtl jecxz pop cmc xor inc out mov out xchg fcoml push sub or push mov test lret clc in movsl xor jo mov xchg lahf lret cs test loopne fmull test repnz sbb out je dec addr16 out rorl imul pop mov fisubrl (bad) ljmp xor hlt lahf mov cltd jmp pop xor inc jb in rcll cmp cmp stos fwait (bad) (bad) lock and sub mov lahf jbe mov pop daa lock cmp lret lock test aam pop stos sub mov xor pop sbb sub cmp inc lret sbb and fdivr (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp das insl sub push les (bad) mov add jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 sub enter xor lods adc mov int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 enter testb mov add lea jmp lea jmp lea jmp lea jmp lea jmp sub outsl xor sub cld (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jp aaa cli fidivr adc xchg stos iret cmp scas mov lods pop out push xchg fwait sub js stc decl (bad) (bad) mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub outsb xor xorb lods adc movsl mov dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp sub (bad) xor dec (bad) decl (bad) jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp sub lret inc imul mov adc lods mov dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 sub lret inc imul mov adc gs dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 das imul in mov arpl cwtl xor cmc lods adc add std dec int3 int3 int3 int3 lea jmp lea jmp jp sub fidivr and xchg stos iret cmp jmp lea jmp lea jmp lea jmp sub int mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret das insl sub mov lret and ret iretw pop add sub int lahf scas push mov push call add ret push mov push call add ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 enter out inc test add mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp jp xor add sbb xchg stos iret cmp ret iretw pop add js lods adc adc int3 int3 int3 int3 int3 jp xor fidivr add xchg stos iret cmp lods adc cmc test dec int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp sub insl xor in or lods adc mov int3 int3 push mov push call add ret jp xor push icebp sbb sbb mov push mov jmp sub pusha xor adc pop test decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp das gs push pop add in addr16 out xor mov ror push scas sbb rcrb pop fisubr mov stc pop push cltd sbb (bad) mov jle jbe jo dec std jbe jb adc rcr sub nop and jg xchg adc jns jb cmpsb sbb sbb pop cmp ficomp inc inc mov nop popf arpl sbb mov pusha clc in movsb push nop mov aas lds or push adc popa inc cmp dec cld and cmp add cltd (bad) jno push push push rcrb adc mov xchg and cmc dec jbe and xor mov mov gs gs push cwtl outsb lods mov addl xchg add loop mov js mov mov mov and test aas push adc jle mov addb mov mov lods out sahf shl div cmpsb push inc inc or sarb and mov mov stos movsl loope sub cmp xchg and jno hlt ret nop mov xchg jle sbb outsl fucomip imul fldcw add mov mov scas pop add std (bad) ja mov ds jae jmp bound push fisub xchg stos (bad) pushf out ljmp adc jbe cmp std cmpsl rorl (bad) (bad) enter imul push outsb (bad) adc cmp sbb je data16 hlt xchg imul sub jae,pt out pop stos jnp mov mov ss loope lea rclb dec and cmp gs mov dec movsb push mov mov lcall mov js loopne and xor cmc jl jmp lahf pushf jno aaa fdivl xor out mov xchg fisttpl hlt pop fwait dec xchg lahf cmp sahf dec inc std sbb pop in ljmp addr16 (bad) test repnz aas jae jne scas adc xchg sbb leave es mov mov xchg xchg mov mov repz into int3 mov or inc loope insl fimull pushl mov xor dec mov pop push add cld xchg or mov lret jb or push add sub sub pop scas pushf push and xchg sub dec mov inc aas scas mov inc (bad) int3 hlt dec sbb or mov ret sti lret cmp cmp daa in cmp jb js lods or int3 dec outsb push xchg popf adc imul in jns cmp mov xchg test jl (bad) xor sub and repnz mov pop movsl rcrl push adc sub (bad) cmp loope ffree mov call test cltd pop mov add jmp mov push cs push jne xchg out pop jnp sbb ret add add cmpsb sub rcll cmp nop or mov pop pop lea cmp sahf dec data16 and aaa adc mov cmp int cld stos mov idivl jl cmp ds xchg mov insl cmp dec (bad) lret loope mov jne push loope lods mov sub jae and lret popf rorl rorl stc push fldt mov push mov add and ja rclb (bad) cs dec fwait adc mov add mov mov test dec lret sbb loop orb lahf lahf sbb (bad) mov sbb sbb icebp sbb ror mov or out push cmp je dec jns clc mov inc das in inc fsubs sub nopl fs xchg pop xchg lret cmp adc iret and icebp jge hlt shlb dec cmpsl jmp les pop iret loopne insb push test sbb mov push inc and ret dec jo push xor mov jl mov pushf leave rcrl mov or fisttpl inc mulb mov dec dec imul cmpb inc adc out test test pop (bad) scas loope call or mov imul pushf pop pop sub mov data16 (bad) ljmp enter popf mov fidivr rorl add pushf das iret dec sub lock test aam pop fldt mov insb add pop sbb sub cmp inc lret sbb and jmp out ret cmp sahf or xchg dec fwait sti test ffree nop icebp dec jb std gs movsl sahf cmp adc cmp dec in out xor in sar mov aad dec (bad) or and inc callw or and or inc sub jp (bad) xchg dec sti outsl sbb cli dec daa sub sbb fwait mov clc cmpsb mov (bad) ds jo xor (bad) ss lret cmp sub cmp mov sbb add pop hlt fcmovnbe jnp insl sub das dec jecxz repnz aas je sbb cmp je push add push std jnp leave jo std xchg mov int3 dec xchg mov sbb ljmp cmpsl sub jns clc and and sub ljmp jb lret bound xchg xchg or add xor hlt in jno push das cmp and cmc cmp mov movsl movsb jne add (bad) mov lds pop daa fs xchg inc repnz sbb jecxz xchg hlt xorl out jb (bad) xchg imul mov jmp xchg sti (bad) jo jge dec stc jbe,pn jno enter js push mov cmp cvtps2pi (bad) sub pop jmp les cmp cmp and (bad) movsl sub (bad) mov dec inc sbb add (bad) adc (bad) pusha ret add add or cld std sbb adc jno (bad) jmp sbb lock mov (bad) fisttpl iret xor pop or cmp xchg add sarb mov add iret jne adc lahf in and (bad) sbb add sub loopne mov je or mov xchg insb fmull inc mov sbb aas sbb lds xchg imul dec lock dec insb xor cmp arpl inc jnp dec and pop outsb dec fsubl fsubr aas jno loop mov mov jle outsl xchg inc mov imul push push push lret mov test imul popf or insb loope mov adc aaa push mov mov imul adc mov or inc dec test and ds pop xchg and movsb inc and or push mov xor xchg pop addl push sub adc xchg inc or movsb mov cmp dec daa ljmp fucomip fildll cmpsl or (bad) push lea nop inc cmp jecxz lods ret and fwait into inc (bad) mov xchg fcmovu xchg add and shlb mov imul pop jns ljmp outsl sbb in in addr16 sarb inc out leave sbb inc roll jo scas xor stos push mov xchg das int3 lods jecxz sbb (bad) cmc add jle leave ds int3 (bad) mov repnz push adc imul insb testb dec push mov daa pop mov cwtl adc mov jne add inc push push cmpsl cmp shlb pop add add aas std outsb scas push inc sub inc lret outsl dec pop out dec pop xchg mov and mov cmp cmp test clc ret add and (bad) mov ja mov aam outsb cmpsb cmp setae inc mov (bad) arpl ljmp daa ja adc sub int3 fimull adc fadds ljmp pop sub mov stos xor inc push cmpsb adcl or stc mov (bad) sbb pop aaa dec push les push mov or ljmp into pop fsubs push test cmc xchg mov mov dec lcall push out inc daa js aad cmp sbb shl in clc std or push dec mov xchg fiadd or dec pop outsb pop and push mov sbb ret add or ret mov das push dec mov jmp test dec mov dec xor sbbb sbb or push xor test xchg jle xlat stos cltd jb loopne repz les int3 stos push fist and pop loop pop mov into into (bad) mov dec dec jne call aas scas pop lahf test pop mov jnp mov popf (bad) xchg mov rcll icebp call leave mov pop sbb fstp (bad) lock adc pop (bad) xor dec es mov xchg mov jmp pushf jb insb jne sub pop mov movsb lods mov push push into add fcmove lods je pop cmpsl int3 shl mov xlat loope xor bndstx test mov push mov sti insl in cmp inc inc mul movsb mulb dec fs dec addr16 out fsubrp repz (bad) (bad) lds jae adc jno aaa dec add rolb pop pop mulb jns pop push add and ret iret bound and dec xchg and cmp mov fdivrs std fist sub fsubl inc push rclb call or out mov sbb mov scas pop imul mov call push dec ja mov jae notl shlb loope rcll imulb loope push out lea jno adc (bad) jae hlt jnp in shrb (bad) lret xchg out adc jo jge xchg (bad) cmp mov aaa mov loopne mov mov lret loop outsb mov inc (bad) (bad) stc xchg add insl call mov xchg gs pop xchg jp inc out mov in imul and mov xor push sbb loope xchg xlat in push dec pop sub cmp out scas cli adc ret in (bad) pop sbb shrd into and push sub or pop fdivl cmpsb pop outsb and fisubl rclb jg sub testb into (bad) inc mov fstcw cwtl pop clc sahf jg xor xor lds mov mov nop cltd and add addr16 adc rcrb inc shrb sub mov fiaddl sbb ficoml xchg add call jge xchg sub aaa leave lret and mov imul subl inc mov or cmpsl cltd mov aaa push push lea lret iret inc jne imul xchg cltd in rcrl push xchg lret pop jecxz jno pop xchg jle fisubr dec movsb in insl ret sti push lods mov fsubl xchg adc xchg and test int3 cli adc or fldt sub sub xchg push stos pop fwait adc pop (bad) lahf pop jge insb sbb pop adc fnsave shrl jle stos (bad) pusha test xor adc and outsl cli inc repz popf pop or sub fwait cld sub mov inc (bad) cmpxchg jno mov movsb pop fs out xlat and (bad) push insl push mov jp jge push stos loopne ljmp fadds inc mov ljmp jns lcall push ljmp lret outsb cltd push mov xchg pop and push add lds cltd outsb mov inc das jo adc cwtl repz add xor add sbb scas popf cmp dec sub lret (bad) rcl ss pop adc repnz ss iret pop dec imul data16 mov jp mov insb inc push dec adc fidivl aad fmulp insl loopne xchg jno jmp push repnz (bad) jl jns mov xor or push fdivrp pop cmp imul cs stos ss shrl lods loop push es mov mov cmpsl sub mov loopew arpl mov mov mov (bad) push xor push popa dec loope fsubr insl fs int3 mov inc ja dec pop lods aaa loop decl sti clc xor push fistpll iret das pop jg mov je jmp adc pop int3 cmc mov cmp les sti pop in mov cmp jbe add (bad) jmp cmpsb push iret pop stc sub or cmpsl in icebp pop mov arpl push sub xchg adc adc pusha ds lea (bad) jmp rorb cmpsb (bad) jnp enter jl mov loopne iret movsl mov xchg or mull jmp (bad) mov cltd mov movsb push fdivrl imul xchg je test aas les sbb mov imul repz pop in outsb mov ret sub fisub sti stos es cmpsb or outsb adc cwtl xchg xchg jae lret dec push jl mov mov subl pop insl icebp fcompl jb mov mov fmull push enter pop mov mov jl pop (bad) loop or (bad) lods xor push lods lahf jae out lea clc stos aam dec int3 cmp xchg and add int3 inc iret and es sbb or xlat sbb push hlt leave jp dec sarb mov ss sub jb rcrl gs sub faddl ficomp jmp call outsl sub push cltd add jp dec push sbbl enter pushf cmp cs outsl mov mov xchg dec sbb adc shrb sub mov and sub sti inc stos cmp dec xor xor cmpsb mov cmpsl or fsts jo data16 shrb dec or es push and stos (bad) pop or xor ret sbb pop pop stos lahf fs mov ds dec lret popa insb rcrl jnp (bad) xor pop pop mov jno lahf and fsubs or in push pop jns mov xchg push dec out pop push mov mov (bad) js dec and pop adc fnstcw pusha clc xlat loop sub fisubl cli ja ja negb (bad) pop jp imul mov pop or mov jle or (bad) xchg mov or pop nop sahf add inc push cmpsb shrl xorl sub sbb dec in jp (bad) mov jbe sarb insl pop enter ja sbb in outsl mov inc fsubrs sub or addr16 ss cld imul mov or jae or hlt scas mov ret imull adc fbld jae das test pop test mov mov fnstcw rcrb es repz mov lahf mov sub xor ret jp cmovp (bad) lea sub imulb bnd fcoms divb jne sbb push sti xchg adc xor jns mov push mov stos scas movsb jmp inc fisubrl jecxz clc and jno sahf rcl inc call idivl xchg rcrl sub fdivr xchg cmpsl imul outsb jns fidivr cli jo cmp push iret (bad) rcr mov sub int or lock das jbe pop push push add or xchg pop insl mov test rorb xor and lea mov xor call mov jmp das jbe pop push push add sbb xchg popl cmp cltd std rorb inc or dec in xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and negb pushf (bad) out or bound mov out sbb insb and sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and testb bound mov cmove pop or sub ja cwtl aaa and sub rolb out in xor dec jo xor (bad) jae inc add pusha addr16 sub (bad) js mov (bad) (bad) mov xlat (bad) call bound in xor fidivl (bad) cmp bound lcall daa je and (bad) repnz and jl stos loope or rol scas shlb repnz int jns mov jge xchg sbbb aas mov jge push lahf or jp movsb into adc or std add ret in call cltd pusha sbb popa rcr outsl jns popa or mov push add push mov sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 aad and negb sbb push add jbe lcall loopne or mov repnz je xor push lods mov add pop pop pop into sub add addr16 mov fidivrl mov outsb pop repnz pushf pop (bad) xor pop ss mov push cmp loope pop (bad) push sub dec imul and mov jns mov xchg addr16 stos adc or js test dec cmp je push pop pop (bad) mov loope cmp aaa cmc hlt xchg mov insb and sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp jns and fidivr xchg out icebp sbb outsb not gs mov or test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aad and and arpl out or sub lahf fbld jmp mov mov sbb lods push dec jg push inc mov jl sbb and fadd jae cmp cmpsl cmp scas push xchg cmp pop pop cmpsb pop (bad) out jecxz xchg xchg jmp out jl pop out and sub je inc mov mov arpl xor out inc pop fucomp xchg sub clc in ds aaa sbb jae rcrb sbb std (bad) mov fnstcw cld lea add push movsb cmp and push lea xlat ljmp xor lret push or fnstcw sub adc ret mov inc call dec sub dec ss sub jmp xchg dec ljmp icebp (bad) or loopne xor in xchg arpl clc mov gs mov dec add push sbb sbb sbb push sub cmp dec inc dec into jg loop (bad) xchg or daa sub xor jecxz out mov notl ja or lret ljmp jb mov (bad) repz js loop (bad) sbb push repz (bad) in out adc cmp jno mov imul cwtl jb fild xchg loopne js loop jmp imul mov jmp sub inc arpl movb fdivp ja (bad) call mov push hlt shr in xchg loope xor hlt jge call (bad) sbbb lcall wbinvd and pop jae xchg test mov jl fwait mov xlat popf dec push cmp in loope call add clc sub into inc call das add cld cmpsb out out mov fldcw xchg inc mov and mov addr16 sub sub cmpsb jp sub mov lcall loope push or add rclb scas int push mov dec dec mov pop pop xchg leave or sbb sahf out std mov in xchg mov add add lods std jo push jl adc jb jae shr addb (bad) pushf cli or mov cmp mov lahf inc repnz mov or repz and adc inc cmp push ljmp cmp push push mov inc test xchg pop jp cmpl dec jno stos xor (bad) dec (bad) jbe xor adc dec jb jmp pop js leave or clc arpl jne in cmp imul std jmp pop inc or jl es imul push push sbb js mov jl pop push mov pop add push jge sbb ljmp jecxz out xchg push mov adc jns (bad) lret ss dec shll push jmp xchg fs subl push mov cmp ja aad mov push or in mov sub pop dec das push loop jnp lds xlat ret xchg pop neg push hlt mov add lahf cmp ret gs test or or pop pop sub cs test jmp push scas rorb adc mov test push jle xchg test jne push mov add jns (bad) dec rclb pop mov stos sub adc xor lret repnz mov (bad) int3 push in adc paddb sbb fwait aam pop mov and xchg mov enter repz push in push and lea add das in inc fsubs inc mov rcrl sbb into jp sub stos aas stc cltd outsl xchg dec in mov xchg data16 mov mov adc (bad) pop lock adc xlat fnstenv xchg test jle or or push mov mov push push jno popa stos xor add cmp pop fisubl mov cmp mov adc popa lcall mov fdivs in arpl lods or mov xchg adc sub stos outsl fcomip pushf add (bad) jge movsb mov and pushf and dec sbb add fdivrs push pop mov dec cltd xor iret clc ds rclb jae xlat sbb andb mov jmp lds test xor push xor daa jmp outsb jle xchg pusha xchg xchg scas lcall jb jle popf dec daa push xlat or in push insl or inc add popa imul dec add and push xchg movsl xchg lea movups lods popa lods jmp or xchg jo std jp mov or stc scas sbb arpl das xchg popa cli sub into (bad) leave jle andl (bad) push add out mov (bad) xor outsb xchg mov sbb push je stos test cli and (bad) xor jle stos outsl sub ret (bad) mov pop (bad) and test pushf and std or jbe addb add push push les lock movsb inc xchg ret pop mov orb mov divb ds lock push (bad) pop hlt outsl pop (bad) out sub fstp (bad) xor pop push lea out inc mov adc push xor leave cmc add stc mov xlat ss xchg adc movsb xor call mov (bad) notb scas jnp adc or enter fs push jo lret jnp fwait xchg push xor inc addr16 int ds adc loope not cmp nop jle push into imul mov dec dec test test push dec dec cmp aas mov ret jg lea xor push cmp ret xor aas or push mov adc pop mov je cmp fiaddl outsb (bad) push shrb ljmp jecxz test cld add cmpsb clc xchg fs movsb fld mov insb clc pop repz mov pop mov mov inc std jmp fiadd dec in mov sub xor mov add xor and sub pop insl dec cld xor jl and int3 lods pushl add cmp lcall sbb or sub jbe xor gs sbb and pop outsb dec fsubrl sti aad adc stc dec loop aam lods adc push repz push and sub sub xchg pop cs int das xlat jp pop jno loopne test inc icebp (bad) arpl mov nop push cwtl xchg mov sbb jecxz pop sub xchg es jmp dec sub mov inc mov sub xor cwtl ja jno (bad) mov cwtl jns (bad) out push sub xor (bad) sub repz mov fcos sbb sbb aad push insb jne testb mov push jmp or lret mov pop clc mov fdivs hlt fcmovbe mov mov les cs imul insb add mov pop divl out push outsl mov (bad) mov enter jo popa jno rolb jns sub andl loope mov sbb mov sahf gs movsb cld sbb push lahf jmp aaa pop pop out stos dec push add fwait mov xchg rolb cli test (bad) loope adc mov dec adcl mov lahf cs push das xchg int adc ror aad js (bad) sub lock and xorl adc dec loop cld fcomi push loop decl inc xchg push arpl xchg enter jo and shrb push cli adc pop aaa inc jmp leave call scas adc mov pop outsl push aas popf fstl push and sub pop (bad) xor mov push int3 or idiv xchg mov jl dec les sbb les cmp and add xor in mov sub jno pop inc cmp iret jo arpl mov xor into adc (bad) jle ja aas add fucomi add and out sbb fwait xor loopne movsl (bad) mov inc sub pop dec js adc ret notl mov rolb data16 fdivrl add xchg cli insl pop bswap addr16 stos sub ljmp pop stos outsb iret fcmove je mov push (bad) aam out push cmpsb sbb aam aad jne std (bad) jle test (bad) cltd scas mov mov fs orb pop pop jb,pt stos out dec mov aaa xor arpl (bad) mov and in sbb jp int xchg and mov call cmpb lcall cmc mov divb or adc push xor and es shl fwait and dec adc lahf in jge jbe push jne xchg loopne int xor mov cmp jno aam xchg ficompl repz add std out add dec xchg insl cmp mov adc xchg es aaa dec xchg mov int out xchg cmp lea lret gs sbb loop push ret scas xchg xlat imul sub icebp (bad) dec loopne pop push push (bad) mov or pop cmp add cmp add nop ds sbb mov and enter xchg jp mov mov sarb mov adc test xor mov fistpl and in add adc fimull xor std push cmp and into std ss sub jmp insb adc pop xor loopne jbe cwtl mulb mov popf xchg pop je movsb ret rclb mov jns out push ret add (bad) out loopne movsb push xchg jle test xchg sbb lret clc inc jmp push call (bad) stc into orl or lds sbb out (bad) xchg frstor fidivl ret push sbb mov push cmpsb dec xchg (bad) repz push aam cmpsl jge mov test les mov adc scas inc xor mov adc ja pop (bad) fsubrs and nop and push sub xchg jae xchg xchg lods mov push (bad) fimul mov mov addr16 testb in fidivrl dec shlb pop jae cmpsl sbb divl mov cmpsl insl dec jmp and inc push int3 mov dec into mov mov cs es test fisubr jp cmp lret mov mov pop jl pusha cs or dec daa jmp dec enter mov push push jl or inc xchg push (bad) lret jle inc clc or adcb cltd out repnz lcall and cli fldenv cmp bound cmp cmp subl jae out into mov sarl dec movsb mov pop test (bad) adc and loop in xor cmp push mov mov jl push push hlt (bad) daa mov icebp into dec ficom int push xor adc push jp jne sbb push jo mov jle in lods test insl imul nop out push stos jg clc test inc test or adc (bad) mov dec stos sbb sbb in lahf mov js cwtl out mov stc push stos adc mov in mov imul push cmp imul fild jg or fisubl movsl pusha adc lcall sbbb cmpb ds push cmc pop and mov test sub mov test add jl (bad) mov mov (bad) mov xchg mov adc bound jno adc stos int insb cmp les xor xlat aaa in xchg xor dec bound stos jp sub and or jl and xor into shrl shll adc std icebp and pop faddl dec pop pop and out push stc adc sbb aaa and jno xor jecxz inc xchg push xchg xor cmp sub int lahf or movsb in adc push lods inc js add cli (bad) outsl loop scas dec popa push ja fmuls jae push xchg loope xor sub subb mov adc jb or enter sub push xchg add pop mov jecxz fstpt push shl mov lea or ss fisub stos sbb addl or (bad) in mov mov and (bad) ret dec mov js outsb andb add dec pop leave mov imul sbb adc mov jecxz (bad) idiv sub fwait or add and mov mov xor jnp and lock dec mov int3 mov lret ja inc jge imul mov mov bound inc xor sub fadds cmpsl es xlat cmp add ret stos imul daa mov pop dec push jbe add test adc aad imulb adcb popa ret (bad) loopne mov into xor (bad) int3 ds mov push xchg cmpb addr16 add sub (bad) adc mov jge jg leave push xor jno mov int lret adc xchg (bad) and fisttp xor gs dec cltd sarl xchg sbb insl or or mov xor xlat inc outsb xchg push fcmovb add push cmp jg imul arpl imul xor mov add adc pop rcll cmp push pop addr16 adc or testb push inc imul stc gs stos and and xor notb push xchg sub add lock lock jg adc cmp scas sbb enter mov sbb mov dec push ret cmp mov mov inc push jae fs adc push test or test in cmp dec pop int push inc jl add das in cmp jg in dec mov or pushf (bad) xor mov adc sbb mov es sbb out mov pop dec push bound push fdiv out pop push lods cmc out xchg add add xchg xor insl xor ja pop mov dec fcmovnu jp imul jo sub jmp cltd or or push sbb insl jb jl lahf ret in fistpll adc inc mov dec xchg call shlb jge xlat mov sbb rcrl stos add int inc loop cmp cmp push pop in in adc sub jb addl push pop sbb pop js add ja mov xchg cmp loop mov mov sbb shrb out out out xchg sarb cmc or ljmp sbb (bad) jne dec cli int pop adc mov les pop in insb lahf lock repz xchg (bad) xchg xchg inc fmul call mov loope mov mov (bad) nop dec shr mov fild test mov add sbb lret hlt jo es enter aas leave sub fildll pop mov stos sbbl sbb and sub enter (bad) mov pop adc jne fstp pop adc test arpl rcrb xor mov out jae ficoml add lods fdivrp jb mov stos outsb or imul pop jl push dec test xor ljmp mov adc shl mov jo xchg lods in mov cmpsl popa fnstsw leave pushf push dec lret inc in mov mov repz ficompl outsb sbb fnstcw icebp inc insl repz add fld mov dec das push mov add push (bad) xor dec cmp in dec aad or jbe loopne mov fmuls mov ja mov or push mov xchg bound add mov ret jne xor pop rcrb jo lds mov ljmp mov call mov insb movsb mov data16 scas clc xchg cmpsb dec mov adc loop daa fwait leavew pop and cld imul inc jecxz lock jno std ss int lock cld mov stc mov loope or mov clc or mov mov (bad) daa fldl imul adc cmp sub or sbb subb or xchg (bad) cmpsb dec cltd mov mov push test mov popf inc inc adc (bad) push ss xor test das sahf and xorl add push jl dec and or pop jg iret and pop push cmpsb pop inc mov xor test shrl push addr16 ret enter dec cmp jmp xlat popf xchg icebp and sbbb xor sti repz std jmp into sub pop sar enter add xchg xchg out sbb jl pop hlt dec sub pop dec adc xchg cmp repnz dec movsb sub out dec cltd divb inc push ljmp outsb xchg sbbl in iret cld jmp xor jbe dec daa fdivrl out cmc dec rol dec iret scas add xor mov jns pop js das cmp jbe jns sub daa xor pop add (bad) into sbb dec repnz ja push adc mov adc (bad) push (bad) xor into mov fidivrl (bad) push fstpt insl cmp out mov aas and jp sbb test imul dec mov mov push sbb xchg jnp inc cmc adc and push and rcr mov shrb cmpb int3 clc push mov add jge push cli leave jbe ret cli add pop ret into (bad) pop push enter sbb jp jg lcall inc cltd push mov repnz pop mov xor call sub dec inc in cwtl pop sti (bad) out into mov inc hlt adc iret dec (bad) mov sbb es mov insl aas scas jmp sub adc std nop int3 push adc mov test pop ret scas mov ss push mov adc mov imul dec or xchg loope clc jmp cltd mov sub fildll test cmp xchg mov out cmp insb jnp xor xor lods arpl pop repz adc sti xor insb lock dec and xchg mov loop lcall or mov xor xor lods (bad) push and xor cs jns in mov (bad) lock jp nop pop das lods push repz push xchg ja fsubrs sahf sub xor mov loope pop lcall ret imul mov int imul pop cmp gs scas xor cli inc add sub cwtl push inc fadds mov cmpsl in xor stos hlt shr sub sub fs adc mov mov insb sub lea push lahf ja mov lods push clc outsb push fldl or ja mov cli dec add mov and sub jp and fmuls sbb sbb not hlt sub sub cmpb fwait arpl push (bad) cmpsb mov jnp popf mov dec enter push and aad xchg add out (bad) mov es mov fist xchg sub shll addr16 sbb mov mov (bad) mov push das dec rcl xchg daa arpl movsb adc xchg outsb xor out lret lret out daa aam xor xor sbb (bad) xlat fldt adc jp pop pusha jge sbb data16 fmul inc pop and jecxz les add rcrl xchg jmp addr16 mov adc dec jmp mov repz lret mov imul mov frstor or pop mov dec fisubl adc mov faddl pop add sub xchg mov dec in pop xor dec pop das xor gs sti adc mov aas add mov rcr xlat cmpsl out hlt repz movsb scas inc nop jl mov and addr16 xor push mov bound sub push xchg in cwtl fimull mov cld (bad) into imul insb xor add out es mov lock mov test fdivrs dec fwait imul add adc repz pop cmp and add andb or movb lret (bad) jge (bad) adc out (bad) or scas sbb sbb mov ret aad rcll loopne or cmp sahf stos imul gs call shr icebp repnz xchg je (bad) lcall mov or lcall jbe jbe mov dec out (bad) xor daa add mov scas xor ret out add pop and pop inc jg lock (bad) (bad) mov mov jmp push std push mov cmp lret jbe jb aaa push or call mov out jg jo ficomp inc cmp cmpsb dec adc test and add jo mov dec lahf lret jne (bad) aas fmulp and sarl fistpl out mov in enter mov add mov outsb iret cmpsb push clc push ss jo pop dec popf arpl fsubl dec push push sbb int pop movsl push imul pop clc inc sub icebp stc sub sbb xchg pop jne xor les mov mov xchg pusha cld lret (bad) jno ja in repz popf shrb aam and (bad) pop call (bad) jge push popa dec sbb sub adc xor vpsubw mov (bad) mov fwait sbb dec fsts fisub mov ret mov cmp fsub (bad) jge les mov jbe fs dec xchg push jg sub js loopne imul stos adc aam negb sbb pop loopne adc mov call pop mov fnstcw add cmp cmp cld loopne sub std test xchg movsb outsb adc dec or sbbb fdivrs add insl add pop in sbb adc jl adc iret addr16 sub and mov addr16 mov ret jmp jnp lds (bad) popw or pop test dec pushf enter ud1 lahf (bad) cli pop mov jp sti inc mov int pusha testb out in repz cmp sbb jno push cmp scas cmp sahf psrlw mov das jns hlt (bad) mov push mov mov icebp sarb jbe mov inc mov loop xor stc jle xchg sub sbbl popf cmp outsb cmp mov cli (bad) (bad) int3 testl xchg dec and data16 jne adc cmc sub push dec (bad) into jae sarb add xchg mov rcll mov dec and push or out xor aaa adc in insb mov jne xchg lret in adc or pop pop inc outsl in mov jbe push mov pop rcrb push rdtsc xor in in mov pop ja and xchg sbb pop js ja loop push mov mov or mov jl and mov mov clc mov mov dec gs lahf xchg (bad) popf repnz mov testl sub or popf push push pop inc pop pop sbb push mov or leave push enter dec out xorb dec lods aam hlt xchg adc mov repnz mov mov test adc jae jno xchg dec push das cli xchg je and test sbb push cmp mov insb sub ss sub mov and out aas mov into mov clc jg or sarb cmp jmp mov rorb dec ficom mov dec or sbb jp out xchg sbb fisttp inc inc neg and notl pop cmp cmp ds push push ret mov lret jmp jge test fildl jl (bad) fistp cmp sahf sbb sarl xchg add (bad) cli imul aad sub ror mov pop and mov arpl shrl add push pop sbb imul push ds cmp mov lret scas mov insb stos popf mov cmp push mov push data16 lods aam imul fcos and add xchg andl xchg pop lea pop iret sub pop (bad) mov in pop lahf xchg lcall sbb xchg repz (bad) in fdivrl in sbb bound sti outsb out jl sbb and jb lret adc sbb (bad) int stos and cs inc jb sub inc ja mov mov mov lahf ljmp cmc bnd cmpsl out push out sti add pop sbb imul dec test mov push (bad) xor repz or aaa sti rcll daa dec idivl pop int into adc pop jb (bad) lock cmpsb xlat in mov pop rcl and and adc mov (bad) faddl lret add repz cmp arpl push roll mov inc popa int cmp outsl cmp inc repz mov xor mov sbb insb add aaa sub cwtl loop rcr push std adc mov mov add lds or icebp gs mov mov sar rorl aaa jg push or xchg adc insl movsl lock sar ret inc mov loopne adc sbb mov les cmp cmc lahf sub cmc or (bad) dec pop lahf jmp dec repz mov sub stos test add jne les les pusha pop and aam pop xor jns push and lret popa cmp lods (bad) mov ja push imul into jae lds cmovae mov out dec fidivl and xor push outsl shlb (bad) mov fadd fs push idivl hlt out out ret insl lret or jno cmpsb inc and jp lock pop inc insl or mov and in dec sub lods mov in cmp nop mov jno dec rorl outsb pop jae pop aaa stos sbb pushf jno fcmovnbe cmp and xor mov dec (bad) aam mov iret inc adc fidivl fsubrs out xchg adc sub inc jle jmp inc fsubrl add inc mov ss repz mov andb adc xor push cmpsb gs sub or testl sub repz call fstps int3 xorl imul aas jnp mov shrl inc push leave mov mov mov int3 xchg push arpl leave (bad) sarb cmp or add cmp jno xor hlt decl mov dec xchg je int clc jae jmp adc dec int mov push adc pop fs inc cltd push pop ljmp cmpsl mov xor dec or ds xchg lods and mov mov dec test jmp loop jg pop xchg xchg iret sbb push mov pop mov cmpsb jp xchg pop pop xchg mov adc inc pusha aas mov mov aas adcb sbb inc xchg in mov out pusha jo dec movsb daa sbb fdivp iret jmp sbb mov pop fs mov outsl sub push (bad) push es ds addl fwait pop sti mov and bndldx insb or mov (bad) ret je mov xchg sbbl inc inc sbb and stc (bad) rol add mov add ss sbb adc or sub inc pushf clc xor mov inc popf inc sbb mov fmull jnp inc cs mov fstp (bad) jl jmp xorl in mov jns popf call jl jmp hlt sbb flds and loopne fiaddl xchg sbb sbb in lcall add fs (bad) notb pop dec lods cmpl xchg inc mov push std test fsubrl mov mov pop (bad) jle lret ds das mov jg divb add jg jge push push clc out fidivr lret jae xor sbb fmull cmp dec inc test adc lahf fmul jmp aas dec movsl jne inc enter sub mov adc inc sbb sub mov pop mov ss xor out mov (bad) sar sub int3 out dec insb sub loope rclb adc mov scas lods or aas dec pushf mov xchg mov pop cli or cld push adc mov int cmp dec mov jns jns aas rolb aaa arpl fs js push lcall inc repz sbb fistpl addl jne lods fnsave fildll jo sti inc arpl xchg call jns test xchg es stos mov or xchg adc cmp add subl mov leave mov shl add dec in jne dec fisttp lods sbb jns scas rclb and mov popf xchg enter data16 dec out enter iret xchg lret cmp xchg dec sbb dec out into and sub jae mov addr16 mov inc (bad) icebp cwtl stos imul xorl sbb mov sbb xchg aad (bad) fs lds xor jl aam es int3 je mov dec dec sbbb or sbb stos jno mov push (bad) mov push test imul roll fcmovne test loope jle mov insb push push pop setg and fdivrp roll ljmp cmp fstpt (bad) pop insb mov or adc inc insl or fimul or add imul movsb jae sbb mov xchg scas sti sbb sbb add stc xchg aam push call push das imul push pushf ds aad mov cwtl lar fnstsw adc push jmp sub int ljmp int3 jg adc add in popf sub (bad) mov jb das jb (bad) lret idivb shrb or xor and fisubl andb shr (bad) out mov sbb sbb add lods les xchg adc lcall movl gs and xor add test xchg mov gs pushf or push mov jnp dec dec mov xchg cmc push test aaa mov iret xchg adc mov or add clc cmp mov loope jmp dec sub std adc stos jnp mov rorb and rcll call sub xchg or xchg jl sbb imul cmp xor cli xor sub sub sub xchg push scas iret push add jmp jle fwait popa mov jmp fstpt dec std adc js setne push pop (bad) pop (bad) clc aam scas add push ljmp push fidiv in sub lret aaa scas mov pop and sub mul add inc jmp (bad) pushf mov mov xor jbe push (bad) lcall xlat dec outsb fiaddl movsb fisub mov inc or mov jg sub or push adc add mov add push aad outsb lret xor add mov mov leave sub lods dec xchg pop sbb mov mov pop xchg push pushf popf test mov push dec jne mov js dec xchg cmp (bad) add push fcompl iret mov fcomi xchg mov daa sbb inc xchg push repnz sbb inc out bound or lock arpl mov and jp (bad) ficompl sbb fild add sti scas lcall test pop inc in jl sub pop and mov sub push jmp aaa loopne add lods inc dec nop ficoml mov add outsb es cmpsb test sub shrb mov pop shrb pop dec inc enter lock mov xchg or mov dec stos cmp pop xor ja add rcrb aad and test dec aas das rorl ds fcoms and sbb sbb aas aad leave shld daa mov pop loope lods int3 add and jge lcall cmp pop or push and (bad) inc mov ret imul ja arpl (bad) jbe mov hlt xor pop aam xlat cmp jmp leave scas dec push gs insl inc cmpsb jns mov rorb dec cmp mov inc and ss loop sub cltd leave pop cmc mov mov sub xor cmp out cmc inc (bad) pop scas test sbb jg repnz pushf jle push insb test test pop sub jne aaa repnz lds cmp add std cmp lcall ret cmp inc imul loopne fwait xor xchg fistp mov js adc and ss ljmp sbb popf mov push and add scas xchg stos test jo cmpsl loop jnp (bad) lret xchg in pop int les sarl pop scas cmp insl loope dec in mov dec pop mov bound insb gs xor loop imul or jae pop dec test jecxz imul lea add popf mov pop roll loop out pushf cmp daa xorl or cmp push movsb pop pop cmp fldl aas xchg jne sub xchg jg mov push or push xchg xchg sahf inc in add sbb clc cmp js lock inc stos (bad) ja cmpsb stos out in dec mov dec incb call mov test mov imul (bad) std subl out imul lods sub jns add and adc mov push and dec mov mov jno dec aaa xchg sbb sbb aas (bad) les leave pop js not add negl xchg pusha xor popf add mov sahf adc lret xchg pop mov imul fimull lods cld push bnd inc pop in xchg mov pop inc outsb and ret in fistp pop pop movsb xor insl insb mov push cli xchg or inc xor int3 cs in jns (bad) xchg xor mov lcall xchg ret lea ror sbb adcb mov and inc testb cltd add lods xor (bad) mov cmp out mov or and mov push out aad roll (bad) movsl pop mov (bad) in jge cwtl iret hlt mov inc psubusb inc je movsl cmpsl push ret mov pop push push sub ja clc lret mov xchg insl and mov push (bad) push and dec jne aaa mov jne loope loop rorb out in cmp (bad) out in xchg std mov jecxz je setae pop xor and pop inc dec jg repnz adc push xor scas lods or repz dec cmp fadds and pop outsl push fisttpll aaa int in mov test sub sbb pushf and dec push sahf aad popf imul add hlt inc roll jecxz pop loope cmc icebp bound jne incl push fildll adc pop and add pop loope jg adc push lds sbb mov ret xchg ret mov mov out push repz cmpsb (bad) jl,pt push sub outsl or mov sub dec (bad) mov jne jge pop int cwtl mov stc sbbl mov roll loopne outsl lds stos lahf jmp in pop subl xor inc das xor sbb fildll bound icebp sarl shlb push (bad) add xlat add bswap outsb and loop in sbb add leave adc mov popf and ss add xchg mov and out jne arpl fcoml lods jns or push (bad) adc icebp pop arpl insl pop push scas movsl pop sbb daa fld imul int3 ja sub int3 rorb imul pop lret cld mov loope cmp andl or and cmc mov leave pop popa mov mov sub xchg lahf push and adc sub aas sbb stc pop mov iret mov add addr16 lea out lcall mov dec lock cmp in fwait popf dec lods jecxz and rorb lahf sub in in mov movsl dec xchg mov lods pop jae into xchg and mov testb cmc fwait loop add xchg xchg sub mov test outsb test imul mov in and ljmp test mov push jmp mov push adc stos test pop xchg push (bad) fistpl push push (bad) cld test stc mov add add xchg int push mov push (bad) jns mull lret fsubs inc push xchg enter sbb scas inc and mov stos lahf mov adc or clc cs cwtl mov cmp xor inc pusha cmp out jecxz jge (bad) and push mov push xchg lret pushf pop (bad) mov sub mov cmp pop arpl mov in mov xchg stc jmp jecxz arpl in movsb stos (bad) lahf shrb imul (bad) es movb test mov movsl jns sub mov in add and outsb int sbb jo cld sarb xlat xor xor pushf lret mov (bad) (bad) xor adc stos cltd js adc clc nop mov movsb mov mov sub or imul jns std adc loopne rcrl arpl cmp pop xor xchg (bad) mov insl push imul pop fsts or mov ds pop fstl mov cmp (bad) es int cltd rcll sbb loope data16 cwtl out push repnz fmull test hlt fist push in cmpsl js sbb cs push mov adc idivl mov push arpl dec mov pop sbb cmp jbe fsubr sbb fwait (bad) fisubl add adc f2xm1 loopne pop pop inc nop scas add cmp imul xchg cltd cmp adc ss xchg jmp push ss fidivl sub or xor pop test and push mov sti sbb cs pop sbbb push jae (bad) jb negb inc arpl in jne mov outsl mov stc pop aad int3 stc xchg sub mov setns sbb xor and shrd xor cmpsb or mov and fidivrl inc jle rol and scas cltd pop push js add stos and push xlat pushf popa lds or nopl inc sarb (bad) std (bad) lods rcll popf jle dec dec pop mov fldcw (bad) mov test fsubrs lcall pop out jmp out loopne mov cld sbb out loopne mov sbb fadds push (bad) in aam fiaddl inc lcall lods mov popw or fcoms scas xchg add and and cs jmp hlt xchg fild mov (bad) pop pushf mov xchg jns mov ljmp xor cmp xchg xor repnz aad out les lock repnz mov lods add arpl sti sub pop and jbe pop push or push jecxz test fimul adc stos or mov jb call inc test stos xor lods popf (bad) std mov ret dec fstpt stos pop repnz std loopne test cwtl and bnd iret sub comiss push mov or loope std out adc xchg scas jle pop adc pop or sbb or pop adc or mov int3 pop mov push mov call int adc lahf test and (bad) stc jns add jne insl push pop aaa pop mov pop add lcall rorb lods xchg xchg xchg jle xchg (bad) lret inc test data16 xchg jl fst sarl loope jecxz add mov and dec hlt jb pushaw cld push outsb mov and fsts (bad) movl ja xchg mov sbb sbb sbb lds imulb pop sub push popl push ljmp and mov mov cmc dec pop cmp cmc ret sbb xor in nop addr16 jle and push (bad) (bad) push mov bound out xor or pop rcrl aam sub and add and ror mov push rol mov insl ficompl insb cwtl call push mov aad sarl add fwait push jb lahf lret dec adc das jne inc mov les and cwtl rorb ljmp ds or imul push cli push imul jmp in add jae push (bad) inc or adc (bad) flds ss jp inc mov sub lahf repnz adc mov fdivrl jb test mov lahf or mov pushf ret arpl inc jg push cmpsb add sahf pop popf (bad) sub sub repnz sub adc adc in sbb cmpsb mov sub icebp fidivr (bad) xor popa test cmp int3 ss rolb mov jle xor test and xlat or mov (bad) cmp mov mov xchg sub sti adc xchg adc ret xchg mov hlt ret cli test popa sbb stos lea je das mov and sahf mov in into adc std mov add test aaa sub mov mov fs xor cltd pop xchg daa ret mov ss movsl addb ja mov icebp jp cmpsb mov sub lock aaa xlat or je add mov or fldcw cmp test mov mov dec and ja sub pop sti adc mov lds movb and and mov aad push lcall sub dec pusha sub adcl xchg bound sub xor std adc adc jns push sbb out je test test fnsave push inc push repnz sub stos push jg scas les sbb adc sub mov outsb loope les in loopne sub add aaa leave punpckhwd xor mov in into rorb out sbb clc arpl jp pushf les or int aaa shr adc int3 add fsubrs mov jb mov adc and sti xchg mov and pop mov inc jp int3 push divb (bad) pop mov add inc jns cmpb psubsw mov sub repz xchg andl jg loop stc push sub test jo push or xchg out mov jae negb mov pop das push andnps sub in pop imul jge out and mov (bad) out pop movsb mov sbb call sub xchg into sub repz xchg movsb data16 out fildl sub pop movsl mov aaa or mov lods adc push jbe mov pushf (bad) xor fs jns mov jo mov mov fstps mov jl sbb pop cmpsl pop iret loop mov jg loop orb add mov xor aam stos pusha adcl sbb js loope cmpsb mov or insl into test mov lahf adc fidivrl push test ret add push stc mov decl stos push cmp fiadd and pusha mov (bad) nop addb sbb (bad) bnd outsb fild mov cmpsb mov arpl inc call lods push aaa dec add aad sub pushf mov or and cld aad cmc in aad xlat cli push jg cmp ss aad stos std ret inc (bad) bnd adc (bad) pop cmp xchg fwait pushf mov cltd jnp adc push or dec mov pushf jns sbb mov addr16 addr16 js mov movsb out test shrl hlt or pop mov repz adc mov das imul loopne jae xchg test or movsl scas jns fwait cmp mov cli and pop and xchg in xchg mov mov aaa mov out into push push movsl (bad) popf aaa sub mov fnstsw xchg and test testb jl xor in ds xor scas pop popa jae int mov (bad) mov jns mov imul pop push mov push mov xchg mov xchg ljmp hlt sub enter push fdivrl xchg cld jl mov iret out scas test mov std push fildl and jecxz add mov (bad) leave insl adc xlat dec adc push fstl ds mov jp lret push push aad sbb scas or push jge pop xor (bad) call in xor jae inc sarl stc add sub test je push addr16 cmp scas es push or mov repnz loop sti movsb lcall xor xchg outsb mov add repnz jo push adc (bad) mov inc outsl xor pswapd mov push subl aaa add and data16 data16 push imul aaa add mov push jecxz and std loopne popf divl int rclb push mov or mov fwait lds pop inc pop sbb xchg dec cld adc add fwait iret fisubr add mov lock test xor sub daa adc in out mov out jo lods nop repnz faddl pop imul dec (bad) lds outsl loopne add je out sub ds cmp (bad) push jb pop jbe jno sub data16 std lds rcrl push loopne ds rclb add lret jbe push cmp cmp push jmp inc in adc jmp (bad) icebp inc adc mov negb cmpl mov mov clc jle fs sub fiaddl mov xchg out jo pop add pop iret mov add mov incb dec xchg lcall repz sub mov jge mov (bad) xor fsubs in out jne (bad) push jmp jne daa out dec loop fcoml (bad) cld jae mov jmp xor insl jnp fucomp sbb or adc push in mov lds (bad) stc xor lret dec xchg pop cmpsl and xor sub leave cmpsl inc je test pop rolb fstl cwtl mov push insb mov or outsl pop lock push pop and xor jecxz push or out hlt pop arpl lcall push fistpl mov sub dec outsb (bad) outsl dec cmp ja scas lcall cmp dec movsb pop mov or mov pop and jb into (bad) out adc cmc fist icebp mov and sbb jl mov adc push popf std cmovo mov pop test jbe pop xor pushf inc dec das mov rcll daa neg popf or andl push dec and mov dec (bad) mov dec repnz jp call cmpsb repz cli inc add mov bound enter aas stc xor mov push nop jae fwait push jbe xchg nop and fnstcw cmp mov ljmp or (bad) les sbb mov mov or shrb push data16 sarl in imul mov mov (bad) cmp pop lcall bound push repz roll push js mov adc (bad) xor xor stos push xchg xchg hlt punpckhwd cltd ficom mov jno iret aaa or or dec roll mov es or ja pop addr16 inc daa inc cli mov ds scas iret in xchg mov push lret in test mov int3 cmp xor lret jns cmp xchg int3 sub addr16 cli icebp jle mov mov jne scas lock scas jno mov cmc je xor pushl xchg dec fsubl ja das mov dec outsb or push stos imul stc stc aaa mov ss aas je xlat gs push adc loopne sbb popa enter or loop cs (bad) popa test orl mov sti leave stc mov add inc fadds ljmp jge push loopne cmpb (bad) xor adc mov cli negl mov aam pop mov jp xor xchg std (bad) jmp xchg andb lahf xor mov or loopne push cmc (bad) inc pop addr16 pop pop ret stc xor imul les in inc add add mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 aad and push inc xor sbb mov xchg rcrb dec popl fisub mov fcmovnbe jo add shrb inc popa fistl xor test adc and jl add lds mov cmp stc or add test add and cmp insb push cmp rolb faddp out (bad) push imul mov int ret insl sti lcall (bad) ss mov mov ss jbe test mov sbb (bad) iret in push mov add (bad) lods outsb dec int xchg sahf sbb popf add out (bad) popa or xchg inc out in ror std imul int add xchg fstps nop mov pop test or in lds pop out cli (bad) ljmp dec mov aaa cli maskmovq divl lods xor (bad) inc pop dec subb cmc push rcr sub cmc nop fs scas imul dec flds dec (bad) enter sbb pop test ss sub aas pop and cli adc push pop aam ret lea out movsb lahf or insb (bad) daa dec jae jo subl push arpl xor dec mov data16 mov jle lret testl jecxz dec or push arpl fld add in lods xchg lods (bad) dec hlt arpl lods mov xor sbb push jb bound mov mov lods inc stc jae aas subb call repnz push pop or cld sbb das inc cmpsb cmp or dec (bad) jge cmpsb mov pop cmpsl adc cmc add fdivl nop or icebp mov dec mov cltd mov jle xchg lea dec pop xchg lret mov xchg push xchg jno xchg mov xchg push add (bad) cld ret jns in push movsl xchg rcr cltd jecxz pop (bad) js jae pop jp cmp pop pushf scas mov aam and inc cmpl mov push ss cmpsl fsts popf (bad) jns shr mov xor ret pop jo repnz (bad) xchg fstps xor movsb mov es test fwait aam mov mov test push cltd pushf push in mov mov gs jns loope rcrl loopne adc and and test insl inc pop jnp sbb push jecxz sbb mov push shl ljmp stos dec or pop mov rcr (bad) imul xor mov fisubrl xor push jno movl (bad) mov push repnz mov sbb imul inc xchg test mov adc sub mov mov cmp lods (bad) mov notl adc lahf lock daa xchg add push sbb (bad) cmp lcall lods jmp jno and xor mov test lods cmp jge jl sub xor sub jno repnz hlt dec nop scas inc int3 xchg sub out addb xchg xchg sub jg ret cmp repz mov add mov push cld jecxz cwtl push jge ret cmp xor push cmpsl ret push pop jmp dec jg ss testb out jecxz inc push jp inc push pop sbb fist clc dec jmp ret repz mov mov inc push iret sub outsl enter xchg aam lea sbb or cltd rorl dec (bad) stc repz in hlt loope or (bad) mov cld sbb or les inc push add adc xor fstpt aad mov ljmp lods ret repz das and insl inc dec fs fsubl pop fisttpll (bad) xor cmp xor cld mov mov les and mov imul icebp sahf out mov ror (bad) jl push push and js mov popf dec insb pop adc dec into fcoml mov dec fidivl popl into fcompl push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 