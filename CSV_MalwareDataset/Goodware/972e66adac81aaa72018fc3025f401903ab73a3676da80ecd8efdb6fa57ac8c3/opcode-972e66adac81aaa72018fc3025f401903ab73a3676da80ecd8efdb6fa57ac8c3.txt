push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or sbb fwait imul sahf clc imul sub jle fsubs fistpl xlat data16 mov or das mov in mov add fucomi xor sub pop xchg jg inc mov aad hlt jae and movsl outsl ljmp fiadd cmpsl pop dec inc in leave push call (bad) jp cmp xchg inc mov loope pop or mov fistl mov (bad) aaa cmpsl jg (bad) bound test mov out jge add clc cmp imul fcoml imul mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or cs sub add and inc sbb mov outsl adc sub and in shlb jmp push add jbe mov mov and xor inc cwtl jb xchg pop mov cmp enter inc sub mov jl jae adc movsl loopw cmp push in mov add scas aam lahf test and test mov cmp pop test popa mov ret cmp jne iret aad cmp scas in cmc xchg xor inc mov stos icebp jge or dec js push orl xchg pop mov gs je xlat or xlat mov fsubrp jp fwait sbb adc mov lods cwtl xor mov and fldl mov inc xor mov xchg push push jns xchg hlt outsb sub add push enter mov push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 mov or cs cmp add and inc sbb mov outsl adc sub and mov test lcall pusha and fiadd lods add sbb xchg rcl in or out sbb mov ret push pop push dec clc fsubs and xorl inc gs je nop out aam cwtl sbb jbe std xor iret jmp subl dec inc jmp mov xlat stos xlat (bad) insb or mov test lds daa jge add jl jl xor pop and scas sub shlb (bad) pop in sub jmp pop push xchg repz loope pop les mov sbb add scas cmc sub idivb adcl mov test push sbb push push xchg outsb or inc xchg lock flds roll out popf fcmovnbe adc sub daa mov jne lea out movsb lock jo rcr rorl mov jmp xchg das sub rclb insb lods fidiv xor ja arpl mov inc pusha pop insb and outsl add mov xlat insb cmc pop cld and push mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or and or jne std push mov push pop outsl pop push mov movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl popa pushf dec dec push pusha mov pushf or mov and push fwait push or lods test inc push mull mov ret xchg jbe cmp ficoml mov movsb pop inc int3 lcall and jge lods push lret movsb xchg lock add loope popa inc neg xchg xchg lods mov rol fnsave scas aam lahf lea stos lret into inc dec push sbb cmp je xchg insl fisttpll (bad) dec or xor sub jmp je add psrlq mov xchg sbb call popf or xchg pop fimull (bad) cmpsl xchg jecxz aam jmp dec dec enter xchg daa and pop add (bad) sub pop mov or gs into ret mov scas and mov enter mov dec dec jno mov mov rorl idivb mov rcrb sub mov or jae repz insb movsl lea adcw shrb mov nop rcrb jmp inc inc cmpsl jbe fistl dec inc incb les mull fsubs in push fcompl pop xor lods push mov inc popa sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or sbb fwait imul clc mov nop sti push rcll xchg pop test rcl mov imul mov (bad) test cwtl pop mov ret js rorl mov push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov or mov sbb cmp dec into cmp pop lea mov (bad) cmp pop push (bad) mov xchg (bad) lea mov mov push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or sbb fwait imul ret outsl mov data16 or xchg gs xlat paddd shrb outsl pop mov scas pop out call add cmpsl in outsb cmp pop popa xchg ja inc (bad) stos andl roll lods gs enter inc sbb and lret fwait les mov inc popf (bad) int3 pop mov mov test xchg sub ljmp inc scas jne sbb push js mov movsb or das repz push movsl imul dec jge jecxz in imul hlt pop ret xchg inc mov dec subl das jnp and cmp lds or add scas pop pop test sbb pushf xchg mov lcall xor sahf stos xchg ret movsb cmpsb cmp pop push xchg xchg cmpsl popl sbb mov mov out scas in ret mov sub xor inc push inc dec in add popf fdivl xchg push mov out cmp inc inc cmpsl jbe jecxz lods dec addr16 les and xchg pop inc (bad) push sti sub sbb push pop xlat call idivl mov popa (bad) aad inc test call int test fmuls and xchg in push icebp add jg sbb call rcll call dec push pop xor sbb insb cld dec test push adc pop adc jge jae call arpl in arpl (bad) cmp jecxz je iret jle insl jae push (bad) sti fs jnp xorl (bad) or cmp fmuls mov mov imulb xlat in push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or add in outsb rcll in push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret mov or jo cs cmp xor lock jge mov or imull aad adc int3 dec fbld rcl call repz push stos fisubrl sbb andb push mov push push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret mov or ds mov orl je ljmp data16 dec shll push xchg inc iret push mov mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc add cs aam add and inc sbb mov outsl adc sub fstps xchg int3 dec (bad) scas pop (bad) or sbb mov or xchg les hlt cld icebp or jg dec fldl mov mov nop movsl jg or es movsb js sub jo cld mov sbb pop test or inc cmpsl jle mov bnd jns scas pop jmp or sarl stos xor jecxz ror xchg mov movsb cmp push sbb xchg mov in xchg cltd out pop sti in addr16 add jo pop pop dec insl cmp pop inc inc pop pop sub add jl scas lods rcr cwtl dec mov jns push stc jg jl pop or cmp cs or jns dec movsb mov add inc andl dec stos and ljmp movsb (bad) popa test sub repnz xchg jl test xchg sub (bad) popa lods push inc xor iret mov out cmc je in cmp or fwait sbb fildll mov lock adc sarb jb add add aam jo shrl adc pop jge push int dec xchg push sub pop mov ret or add (bad) mov stos das iret push in out std addr16 or cmpsl mov cmp int ror outsl lock (bad) xor sub push pop sbb ja cmp stc push das sti jnp lcall sub add scas pop mov dec loop fs mov or jle test jmp xchg mov push adc jb leave out jg ss pop stc aam aad lret sahf cmp jb jno aad xchg pop ja jle dec subl lods dec imul add ja movsb ja cltd add adc imul je inc pop jg outsb leave int push icebp inc repnz fistp mov ss push leave xadd mov push inc insb scas jg mov orl cmp stos out fimull push adc or push fstl add or mov push sbb mov stc cltd incl bound fimull xor push sti loope mov mov cld in mov sub cmp mov fwait jns mov mov test mov les xor jo push lret sbb and pop (bad) call ficompl xchg lcall cmp stos scas mov (bad) out adc push stos add rorl test xor inc push test push mov aad (bad) dec in xchg jo mov call out push data16 inc (bad) mov mov push cmp jge dec mov push icebp andl (bad) cmp ds or inc sarb pop popa push pop push jecxz std mov fsubrp push out dec arpl adc les inc xchg data16 mov dec dec (bad) pop jge (bad) stos mov push dec mov sub fwait sub out inc dec adc into pop fcompl rorl lahf jbe dec fnop fldenv jo arpl shrl daa addb fist mov insb imul mov div dec (bad) push pusha dec jp cs jl insl test int (bad) clc imul mov mov mov push and out in (bad) jecxz inc push adc das xor test (bad) adc imul sub add mov adc movsl popf loop (bad) (bad) mov movsl je dec loop sbb test or repz mov jae xor cmp shrl dec imul jns xchg test sahf (bad) jmp ret repz sub test and push jns push sub (bad) mov ljmp iret add adc and adc adc loope mov inc xor lret into or cmp or xchg fdivp daa imul push hlt mov add sbb pusha pop cwtl in mov add dec fwait stc xchg loopne dec xchg lret hlt and lret xchg xor outsb imulb pop xchg repnz mov push fstpl or stos iret not mov ret rolb out mov mov ret pop cmc sahf adc push sub mov aad cmp clc sbb loopne xlat repnz pop mov fstpt pop (bad) in dec std xchg or sar imul add dec mov fcmove test bswap push jp outsl sub adc mov pop maxps jle lods fildll inc mov into push cmc push je (bad) xchg sbb push inc mov divps fidivrl sbb btsl out out lods add adc cli scas out les out loope fldl sub sub mov out lret push mov sub (bad) xor xor mov cmc stos fs pop mov cmp add movsl std sbb jae xorl and cmp inc jne pop nop pusha mov fldcw arpl clc mov scas insb pop out xor arpl inc out mov mov sbb popa sub insb mov insb fistpll pop jl or add aas call repz mov jae sub imulb aas xadd fdivl jo sbb les adc cld movsl pusha scas cmpsb xchg or les xchg xchg add sub mov adc and cs pop dec add popf movsb fldl adc mov aad pop test and push xchg sahf imul mov scas inc adc push daa (bad) fisttpll cmp mov test movsb adc mov out movsb push jae mov jle in push pop lret test pop enter aaa cwtl popa push inc (bad) adc pop (bad) loope pop sar add inc mov dec es out loope mov pop pop enter pop (bad) jbe xchg mov out call and push push test and cs lret stos xchg (bad) cmp cmc add mov or aaa add add or gs roll pop std jnp xchg js adc push cltd inc or int mov push xchg xchg jae jecxz cmp test add stc ja mov call dec inc dec cmpsb shll lahf outsb in jge sbb push sub mov jmp push xor je inc and (bad) enter pop jbe loopne mov mov mov and stc adc cmp daa loop xchg mov out dec xor jle mov (bad) into roll adc aaa fwait mov iret outsl push mov dec mov iret mov push int mov jnp mov dec xor roll add jg clc rol inc movsb stos sbb dec add fistpl inc cmp in xchg clc xchg rorb lahf shll enter pop cltd das aas (bad) dec mov insb addr16 js lcall mov mov inc adc mov pop mov pop inc push rorb add imul rclb clc pop (bad) dec gs inc lret adc nop mov add imull into dec push cmpsl testl xchg mov into and sub nop push or (bad) nop icebp es rcll scas cmp das gs push les outsb lds inc (bad) loopne mov pop leave addr16 test lock data16 inc push or addr16 xchg out adc mov lds mov dec je aas movsb (bad) cmpsl sbb mov push or jno and das and push insl les jle int xor repnz into lret mov ja imul or sub clc test js adc test sub stos (bad) dec jp ljmp xchg sub sub mov dec sbb or (bad) iret dec outsl fistpl sub notl xor pop push pop cli sub xor xor test iret stos (bad) dec mov push sub jg jge cmp jnp adc adc cwtl out mov push or jne mov ja xchg lods pushf insb stc out addl insb int (bad) (bad) inc xor push (bad) (bad) xchg fistp test lcall push mov lea push mov jl pop lahf mov or pusha or outsb addr16 add jle daa mov push scas cmp push push fsub cmc push out femms sub push jo or incb fnsave cmp or dec dec sub mov (bad) xor adc stos sbb or jns cmpsl push fmull dec insb shll pop cmpsb xchg mov in fildll mov or add iret add pop add push call mov (bad) fidivr imul test out ljmp repnz leave mov mov and sub jae xor test sbb ffreep jne inc icebp rcll fdivl lret push pusha fwait jnp jg push mov sti jo dec (bad) (bad) imul fidivrl divb leave es dec adc int imul mov xor stos push mov adc jg push pop ja adc inc or bound xchg call push xor enter (bad) popa adc xchg hlt data16 dec das mov jbe mov inc test enter gs jl sub daa mov (bad) dec push imul fbld inc xor mov lahf (bad) aam cmp adc jmp pusha jns and in sub loop lods jl cmp jecxz adc mov aad pop jnp mov lds inc adc xchg dec enter ret sbb adc ret mov in add shlb mov movsl cs sub cs cmpsb mov inc xchg push cmpsl sbbb jg mov or clc insl imul es xor scas sbb test dec or (bad) iret ss xchg sbb fcomps mov cmc pop rcrl sbb (bad) xor inc jge and or sbb es sub aad ljmp lahf jns add outsl add test jg lcall dec divl icebp push lock push mov sbb add sub pop in rcl cmc pop mov popf ljmpw into cmp outsb adc lods sub mov out std jno adc cmp push inc cmp sti nop mov dec dec inc insb lods xor jg (bad) iret or test rorl notb loope pop test inc stos adc ja roll divl je push addl mov repnz dec adcb pop fcoms sbb pop mov xor enter xchg mov repnz std fcoml imul adc lret push and mov andb cli cltd scas stos mov mov jmp lcall sub loopne fbstp push sub adc lds sbb leave stos lret mov lret or add mov or rcrb adc jecxz mov jmp dec push jbe mov push inc add leave mov xor dec scas gs xor bound hlt stc in fildll xor lods xchg pop cmp lret add xor ss scas not loop push jb dec in lds fnsave jae pop xor cmpsl and lea xchg xor cmpl mov lea and mov xchg jmp cmp cld ds inc into in push fistp lock jb mul push sbb jo das push inc pop and xlat push adc test or call xchg and mov ficoml sahf (bad) jae xor or dec or int (bad) push xor pop mov cmp cmp call inc xchg xor lret cld in sbb jnp or push cmovnp push cld sbb outsl rclb adc sub lcall pop adc cmp jo push clc push movsb push push mov test outsl or loope pop scas xor mov cwtl push cmp es pop mov xor pop nop adc inc pop data16 add mov xor adc xor push sbbl cmp loope sbb ror adc dec xchg out xor sbb outsl jo pop mov or sahf mov in rolb adc jmp mov dec (bad) out (bad) testl sahf fisttpll sbb xor and scas mov lcall sbb xor das fdivrl adc ret loope aad ja jbe cmc xchg nop je iret ds or pushf pop ss mov adcb mov insb jae paddb aaa out int lds mov mov sbb push mov pop push call jno call dec loope push popf enter les lock xchg stos xor xchg jle insb mov jno xlat pusha adc ss mov dec ss inc sub or mov sbb js pop mov nop aad xor pusha not orl push sti or mov cld mov mov push pop mov cmc jmp mov (bad) cltd test adc pusha cmp sbb mov jne imul imul mov jmp cmpsb and mov sub cmp mov dec mov adcl test loopne negl xlat mov mov inc (bad) cwtl and dec and lcall fmuls pop adc dec pop xor dec dec shll mov lods dec jae arpl (bad) fstpt dec (bad) mov jecxz xchg rclb dec in mov pop mov pop js pushf adc jno outsl xchg cmp test test push in test cmp shlb sbb les mov push lret (bad) cltd mov jae pop es cwtl insl sbb (bad) and sahf add imul mov xchg mov mov ret movsb dec mov mov inc mov fistpll cwtl cld repnz and xchg ljmp rorl mov mov fwait addr16 push push (bad) mov jge dec mov test testl insl and out pop xchg xor sbb int3 outsb fsubrs add mov clc or sub jle sub push ja lcall cld jb mov daa mov inc xor xor btc pop rolb add mov nop out add cmpsl insl mov jg mov ja add or lock adc mov pop fsts aaa test jb mov int popf adcl pop loop mov (bad) imul stc pusha fldcw xchg mov inc adc or jno push dec jp js jmp jge jmp push push (bad) out xchg test push (bad) fist jecxz rcl ret sub and stc cmc shlb mov in ss das lea cli call cld sbb and repnz test (bad) stos lock mov mov jb ficoml test add stc sub into jo js add sub xchg pop rclb xchg cmpsl inc inc inc push icebp les aaa push arpl pop or test push stc mov jbe add rcrl pop popa dec imul mov out mov and popf jl lock adc xchg subl jnp mov adc leave sahf in cmpsb test mov (bad) mov sarw lret js (bad) das (bad) out pop sub mov aad mov (bad) mov pop or out icebp cli call mov mov cmp push pusha jle dec add lods mov jp bound jno sti aam and (bad) or mov add je sub ret or cmp or jecxz xchg sub mov jg lea dec cmp xor mov push loop mov mov mov mov leave imul aam mov int xchg push gs stc outsb add lds and lcall fcomps pop cmp std xor and cld push push enter pop xor cmp frstor pop test jg lahf add daa bound imul notl int cmp sub push stos mov mov push pop (bad) dec jo mov in xchg lret mov cs or adc push mov daa adc push shrb lcall clc xchg fistp arpl (bad) mov inc pop cmp xlat mov xchg inc lahf movsl xchg xor or mov add fsubrl mov fcoms mov mov xor test shll pop fdivrs daa negl in cli ja jge sub mov adc lods jae jnp and fiadd enter dec mov pop aam xor (bad) mov clc jp cwtl out mov xlat sbb jne pushf rol test loop and rcl cltd xor cli or cld sbb loop sahf outsb inc mov ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or xlat ss data16 cmp mov add cld mov push scas movsl stos insb or xchg xlat data16 orl push ret int aaa sub and pop xor insb pop ficom fwait insb fs mov fsubs and xorl mov cmc out cmpsb push aam push inc daa inc xchg int dec hlt xchg pop xor xchg imul jae push dec es add jmp ffree jno xor js dec dec cmp and aaa mov inc icebp leave lret mov pop out sub insb in inc jecxz pop mov push into dec add mov fimull stos cmp inc pop int cmp gs inc jne mov sub ret stos xor jg cmpsl inc xor (bad) in mov mov bnd aad fiadd xchg mull popf aam mov sbb jge cs ja call movsl rolb lods and std repnz xor push pop cmp pop pop adc ret mov cmpsb inc inc cmpsb std jae call sub hlt punpcklbw and aaa add ja pushf in xor dec jg mov ret insb cs rcr stos fsts push movsl enter out scas adc pop mov xchg add dec or faddp and push cmc lahf xchg loopne sub lcall xor inc cmpsl aad mov aad xchg xchg cwtl cmpsl or mov test daa stos mov jmp lret jmp daa push sub ds fwait xorl inc insb jb roll inc rcr dec std aas repz outsb out insl test or mov push add mull pop nop test jge stc movsb mov dec sub divb inc mov sbb pushf jge dec je aas in mov insb mov loope rorb mov ss jge push push stos imul dec roll outsb rorl fmull jecxz mov adc dec out aam stc xchg in xchg push add mov xor adc ljmp inc jbe or add (bad) imul aad cltd dec and je fstpl push movsb and in lock pushf fmull inc dec test nop jge (bad) cmp sbb inc bound mov scas pusha (bad) repnz xor jb in scas sbb lock mov cld jl cmp jg addr16 movsb icebp int3 add xor es push mov pushf stc dec sarb cmp dec jbe pop add cmp xchg gs mov repz cmp mov (bad) dec aad mov or sahf fstl sub mov mov sti adc mov das xorl sub cmp and cmpsl fwait dec sub cmp jb cmp push jecxz adc adc lea stc mov nop scas in loopne sub mov mov cmpsl leave jl js cs push push inc and test clc xchg mov sub leave add and (bad) xchg adc nop mov and sbb adc dec mov fnstenv sub fsubrp push ds sbb push popa inc or inc (bad) and lods xchg jle in adc sub test movsb ja es mov lods or js aam jp (bad) jecxz fldenv ret ret mov xlat dec fldl (bad) idivl loopne into or jge rol pop ja ret and add das lcall push pop and sbb mov push loopne jp out les pop arpl enter arpl cmp ffree daa pop pop pop pop out data16 lods mov sub add dec stos sub (bad) adc push cltd stos popa out adc mov mov jle and sahf sbb jmp mov pusha out dec xor cmpsl stos aaa pop scas xchg and (bad) mov cld dec aam enter out fld or or fnstenv push jle lret inc xor and sbb mov inc sbb mov idivl and loope repz dec enter jns test out (bad) sbb cmc ret ret inc dec ljmp fs sbb iret push scas and stc pop push xor mov mov imul stc ljmp iret push mov rcll das mov adc fstpt inc (bad) mov loope testl or rol pop mov adc clc sub push cs adc cmpltps lods xchg mov dec sub pop sbb xlat mov enter nop mov xor cmp mov pop push push or sbb aad push mov outsb icebp fisubl pushl (bad) je lret out popf add pop push lods xlat xchg push dec js dec out into sbb add ja inc jbe repnz mov pop sbb leave sub dec or add lds aaa out test jg pop popa (bad) pop push rcr rcrl inc jae and sbb push pushl dec cmp adc xlat mov mov clc mov movsl push lock sub mov sahf sub pop jb ret push mov sbb and test cmp jnp jge pop mov mov jmp ret add js test sbb lahf stos or jmp mov aad inc (bad) push mov and int3 cmpsb cmpsl and fs in sbb call adc sahf push push outsb cwtl mov xor pop add mov clc dec lea mov cmpsl pop sahf xor dec dec fisttpl mov fcompl pop gs aad push test movsl mov (bad) xor mov cmp into jp push cwtl arpl cltd sbb mov cmp or imul push push sub ret jecxz inc in inc inc roll or and ret cltd mov xchg sub jbe push mov pop jg mov scas jle pop aam push cmp push test add arpl mov cld repnz mov mov movsb pop add adcb add rolb arpl fsubrs or (bad) lods out push sub insl pop outsl xchg mov fsubrl negb add add xchg test cmp pop test repnz or (bad) fildl scas mov movsb test and stos out imul mov clc sub dec bound addb stc mulb mov and outsl dec cmp pop lret call sar xchg mov or loopne adc or mov lds arpl xchg pop jne and ljmp sti (bad) xor stc push xor jp push add dec das dec cmp or cmp mov das fisubr mov repnz loopne mov fs push pop xchg push punpcklwd dec xor js (bad) jbe rcl jae xor sub imul adc adc adc sbbl pop and xchg (bad) pop push pop push lret xor movsb jne xchg loop adc (bad) xor lea xchg xchg sbbb fisttpll test mov mov data16 loopne add (bad) jmp movsl push push inc sbb cmc cmpsb leave outsl test imul fidiv pop (bad) or bound mov push cld scas adc shl and in dec cmc fldcw movsb pop fidivr cli sbb push lds jl mov or xchg and add inc add push adc data16 lods push sbb ja test inc rorl cltd push pop xor (bad) shll mov (bad) jnp mov dec add xchg jg pop xchg dec ret mov mov adc cmp mov adc out sti daa das (bad) ja movsb decb mov xlat (bad) sbb push push stos popl adc addr16 sub or ljmp (bad) adc sbb lea (bad) and sbbl mov xchg jb sbb or neg adc fiaddl lcall push sbb adc mov inc add sub push or dec adc pop mov add adc push jle test rolb xchg jnp or inc xor and cmp xlat inc fs lea push mov or lds dec fiadd push sarb lret mul adc lock push scas mov dec mov mov lret adc xchg sbb test add xor adcl sti sbb add aad add mov loop push stc rcrl ds mov jle mov inc mov mov jmp stc fnstcw outsb aad clc jnp ja lea pop add jl sub pop ljmp push cmp sub mov lock out mov push fnop ret std mul dec nop cwtl lods fidivl lahf mov add loopne and sub (bad) int fcomip rclb add jae sarb cmc inc xor ds pop roll lods xor mov and xor jmp andl ljmp ds lods outsb fnstcw dec aad mov push jge push xor push rclb in (bad) fisubl enter test sub add cmpsl pop pop scas fsubs inc stos push dec repnz das cltd les adc push bound loop push lock jmp push div (bad) ficomp sub rorb xlat fildll add pop out pushf push ret ret fwait push ds enter sub jns cmc inc imul bound xchg mov inc lcall (bad) rolb repz pop popl push adc into sbb push mov (bad) mov jbe cmc fdivrs scas rcrb mov es cmp (bad) ds (bad) (bad) pop add sub (bad) inc and addr16 push daa sti add lds lds dec push xor outsb movsb fnsave dec sub ja pop sahf test bnd adc dec dec xchg ja inc inc xor push nop push (bad) pop inc ss je sub hlt xchg cmp pushf inc sbb add les scas add sbb sub add sarb cltd and and mov sti xor mov scas inc mov pushf push sbb clc call sub pop popf (bad) mov pop inc lcall add jo mov inc jbe ljmp imul roll or xor cmp or mov push jnp mov add jnp lods inc xchg (bad) sbb js popf mov add add dec fnop ret imul out out push mov fwait jo (bad) mov test add aam cld lods (bad) push stos inc pop stc out dec lds dec or mov mov mov mov push rcrl lods xchg jg fdivr in call sbb cwtl ror out ljmp pop dec mull outsl mov sub inc hlt jo xchg cltd mov or in ret es sbb dec (bad) dec imul or mov fildl sub push mov sahf clc push out js dec jb (bad) push mov xor xchg mov sbb sbb cld mov pop mov data16 push add lret gs (bad) sub imul dec dec cmp dec add cltd jecxz inc lock sub cmc xchg nop xchg push cmpsb lea push call jecxz jb mov jl xor cmp jb das cbtw ret pop pop pusha jb mov sub pop jp outsb jmp in xchg fwait mov mov jno fisubl (bad) cmp pop pusha push mov adc xor (bad) decl mov pop mov pop dec add and pop sahf fsub iret das int3 dec int mov insb divl push into xor fcomp sbb mov xor adc jnp clc fdivr lods xor cli ret xlat fldcw push and fdivrs push cmp xorl adc sbb fidivl add in roll enter cwtl movsl xchg into out fiaddl out enter and loopne (bad) stc ljmp test rcrl into sbb jl aaa outsl dec mov imul jo push nop add ja or inc inc pop pop jb sub or iret fldcw mov pop arpl dec lcall xchg int fistpll mov adc fsubs enter cmp call fdivrl lea out push push ror faddl xlat sar repnz cmp push dec push sahf leave negb frstor stos into ret push insb jmp mov mov roll jns pushf cld mov mov lcall lahf adc xchg sub cmp or xchg shrl out and and test inc push inc mov xchg mov push mov cmp sbb fidivr mov push pusha or pushf jns push sahf stos mov mov push fdiv xchg xor mov xchg mov xor out decl mov es inc outsl ds adc repz data16 in inc inc jns sbb jo fsub jmp aam mov pop mov xchg cmp mov dec scas cmp mov xchg mov loopne rcll push ret repnz test mov iret pop (bad) aas mov jmp mulb loop or add xchg je out out out mov jge jg cwtl mov cld (bad) repnz mov adc (bad) add repnz dec addl mov rcll hlt lcall mov clc int3 push or cmp gs jle mov aas aas fmuls je jo adc clc inc icebp out mov and ss xchg sbb icebp fcmovbe divb sub jbe in cltd fistpll fst mov int3 jo dec movsl pop mov outsb cltd push xor bound test cmp push pop mov push test push jo mov movsl clc cmp jecxz popa cmp cmp aad lea sti add push sub or add xchg repnz imul add hlt icebp das mov lret inc and jb adc andb int3 mov xchg sbb cmp mov test dec cs xchg loope aam cmp pop push mov sub cmp mov xor sarl sarb pop lds jns les jg adc shrb xchg scas xchg ficom push add cltd int push mov sbb xor (bad) jl in repnz or add jmp xor inc out mov xor (bad) and inc aam mov sub mov popa add cmp xlat xchg ja mov fcmovnu push xor jbe fwait jno cmc dec stos add in sub mov je test lcall mov fstl call imul js jne push sub mov rclb inc daa push sub jb sbb rolb adc sub inc (bad) jno (bad) sar push add xchg xchg bnd pop or mov icebp cmpsl cs cmpsl xor repz mov mov sbb xor add ret mov fmulp pop fstpt sub or rclb xor (bad) mov sbb stos int3 std cld add push adc or les std mov jle jp adc mov out or sti movsb cli push test stos scas hlt and pop lds (bad) pop in xor pop dec in mov call inc in fiadd gs cltd leave iret gs inc cmp lret cmpsl inc call aad dec movsl mov push xchg and sub insb jno es jmp and cmc adc mov push mov jle mov push dec mov xchg (bad) cld push jno test (bad) out add ficom push lea in aas notl xor or (bad) mov jne mov gs sub pop popa leave mov clc adc add sub outsl mov or adc mov push add sub lods sar xor out jae xchg push cs mov xor sahf mov add loope push daa cmp and xchg decl arpl scas fild icebp int3 push in pop mov cmp mov ret sarb sbb stos add sbb or cmpsl and icebp fimul imul cltd dec stc test dec push pusha test fisubr loop das outsl insl lock mov xchg fnstenv jb (bad) push pop in jae movsl pop mov inc xchg stos dec and lock push hlt jle xchg mov sbb (bad) ficom inc jg das mov adc shl cmp dec mov mov lret ljmp inc sarl mov popa pop sub pop cmpsb mov scas fimull test mov inc pop mov xchg jo ret mov inc mov insb push test lcall cmp mov (bad) sub cmp gs xchg ja xchg std cmp xchg mov mov clc jl (bad) insb sub call inc popa inc lahf popf pop dec out (bad) incl test mov stos repz (bad) rcr mov scas (bad) ds imul push sti jmp mov lock jle movsl xchg jg ss enter inc inc xor nop fidivrl je cmp mov mov inc cmp imul adc pop sub cmpsb idivl and push (bad) push add cmpsl sbb mov cmp sti push push jl pop sbb mov dec int pop movsb inc and repz lock lock cmc icebp push sub mov sub add cld pop ds sbbl es in fbstp out push gs pushw sbb cmp pushf cli arpl fwait push lahf jge das inc fcoms adc mov push dec stos in cmp xchg mov pushf dec and bnd push loope jg pop cmpsl xor cltd xor cmp xchg cmc pop (bad) mov and icebp lret lahf mov or iret fs cld jo inc inc das imul sub adc ret or add int3 lahf fcomps outsl mov xchg mov mov push jp cmpsb xchg mov pushf sub cmc add mov or mov adc mov sub lret movsb lods sbb dec mov dec rorl mulb mov or mov test or movsl lahf push sbb mov test cmp sub clc jnp push mov dec add stos outsl out push movsl pcmpeqw aam dec xor mov push jmp add adc mov push lret int3 test push push in pop push rcrb ds test or cmp test mov mov xor aad clc (bad) jecxz jp jnp xchg cmp adc fs fwait icebp fcmovnu sbb mov ret xchg jg xor and mov jg mov mov inc add repz outsb mov inc (bad) nop add mov inc sbb aad test in mov (bad) inc cmp roll out or ret inc pop mov add push repnz fisubr fs mov cmp in daa hlt ljmp xchg xor xor (bad) mov sbb and sbb mov push push mov shll mov out jnp gs inc loope iret repz sti sbb mov push rorl cmpsb imul sbb sahf mov jno xchg lret popf loopne outsb loopne aas popf test imul push jno clc jbe movsl (bad) push in sbb cltd inc push mov cmp (bad) sub lret sbb xor loop inc je fistl sbb adc cmpsb xchg xchg cld and jl inc gs cmp out call sbbl sbbb inc call add out imul xor ret mov aam stos decl sub push mov fwait adc and mov dec sbb push jo ja pop in ljmp dec pusha and neg aaa push mov idivl xchg inc jmp arpl jne pop aas popl insl aaa dec jbe sub ja dec imull out das insb xchg mov lods lcall add aas mov (bad) pop add and pop (bad) lret mov mov jae xchg xchg pop adc mov xor fidiv cmp call lds btr hlt in addr16 test insl xchg sbb add es fnstenv pop cltd push xchg mov xchg sub mov jbe jns adc stos imull out push xlat scas arpl add xchg xor in or cmp addr16 pop cmp xlat inc jg jo imul in jg or scas xor xor mov pop inc jg inc adc mov mov stos fprem stos inc neg jmp pop rolb int3 mov mov push mov sarl mov mov in (bad) decb in and imul and or jb fnstcw lcall cmp (bad) mov xor (bad) imul xchg aaa nop test mov or xchg or and mov ficomp dec ljmp repz pop pop sub lret mov enter insl cld data16 (bad) mov gs aaa out imul and test inc pop jae cmp add (bad) jbe adc aad xchg or xchg jmp pop fcmove xor add mov ljmp popa arpl xchg jno dec dec adcl ss fisttp rorl (bad) shll lods call cmp mov ljmp ss xchg jmp jne or jmp push mov dec mov cmpsl mov mov roll or idiv stos or dec fmull fisttp push inc pop (bad) out xchg xchg imul out in imul out jne aas clc push cmpsb popa lds cltd xlat mov addr16 inc xor xor pop (bad) jmp lods sbb std push mov rolb mov pop jne call push in mov dec ljmp pop jno pop cmpb jmp add scas test cmp sub mov pop enter imul movsl mov and cs ss test int push pop dec (bad) ja cmc test repnz sub sbb fsubr cmc repz push push and mov cs sbb (bad) xor sub xor or cmp mov adc and int dec aas inc mov inc dec jmp icebp aam and daa (bad) leave imull inc xor inc mov mull or jg cmp negb lods repz frstor lcall sbb in sbb mov push inc imul push aaa sbb inc mov loope cwtl (bad) test and fisubl dec outsb cmp repnz cmp sub or lahf insl mov jmp ja pop and cs pop mov aam call dec cmp insl sti scas sbb mov ret subl in fs int rclb push cmp daa or push popa and inc xor pop fidivl sti dec int3 fs push push nop daa mov cs adc test nop stos mov jae and mov and push add andl or sbb sub push sbb mov dec (bad) mov repz and popf mov add mov clc adc pop mov add pusha and into repz lods fidiv shrb arpl adc push iret insb sub jne mov adc fs (bad) adc dec adc inc xchg xlat mov shlb repnz mov mov pushf dec ret cmpsb cs sub cmp (bad) out mov shl mov cltd cmpsb fnstsw addr16 sarb (bad) add cwtl jle mov repnz fs lret sbb xchg dec mov js icebp lahf mov enter call or jg mov xlat (bad) aam mov addl sub adc mov xchg mov push pop cli call repnz cmp adc xchg pop adc iret mov getsec dec rcrl (bad) int3 mov pop mov cmp xchg je mov (bad) cmpsb jg lret adc sbb xor add ja negl call dec js lcall mov aad mov or xchg cmpsb pop dec adc rcrb fst scas lret fistpll and test xor or loop (bad) push pusha mov push loopne stos inc ja (bad) fnstcw or jge cmc lock jmp push fs xchg jp fild inc inc pusha std into xor pop cwtl dec cld aas pop lcall jae sar mov (bad) push cmc out xchg xchg sbb dec jo sub push cmpsl xchg mov xchg pop lods adc lods adc add mov cmp xlat gs cld mov fcom pop call les or stos mov add pop mov xor jno call fs test or add adc pop mov aas and adcl pop (bad) lcall mov inc rcrl mov xor mov lock popf cmpsl pop scas add ret push cmp mov push xor mov and (bad) sbb aad rcll test jle imul adc mov das mov sbb jg mov or fbstp lods add stc lock mov lret cs cmpsl popf pop jno sub stos xor push mov shlb push xchg inc add sub jp push out mov into icebp mov cli adc pusha push adc jmp cs hlt sbb inc sub fsubs aam sub xchg ret mov mov lods mov mov fwait cmp xchg xor push (bad) xor jno dec push add rorb add jae push jl repz cmp inc xor dec push addr16 adc xor cmpsl aas mulb lahf data16 lcall scas aas les into (bad) std pop gs ss mov imul sbb aas repnz mov or xchg jns sti jmp jo or mov xchg push pusha mov into and pop mov inc dec int3 and xchg xchg inc lock or cmp mov dec xor stc sub adc and aam leave inc scas ss mov cmp daa ret outsl lods ljmp test mov jne out gs jg and mov out and loope imul ret lds stos sbb into sbb and xchg pop and pop in test lret mov fs stos fwait stos cmpsb fiadd in out and stc clc mov push les js fucomi jne dec stos out dec inc mov mov mov dec dec je adc fsubrl jmp aaa insl and push ret pop or fs mov aam jecxz fstp movsb mov inc mov in inc mov out sbbb cmp cmp rcr xlat int3 fdivs mov or pusha imul xchg stc mov adc dec xor in ja jae push xor jle lock jecxz jae dec push sahf rcll fsub bound jae xchg ret or aas cmp cmp test lock (bad) ds stc lods pop movl repz lods adc xor push mov dec adc loop push mov les popf scas add xor sub jle rcrl sti std push enter lret bound sub mov mov cmpsb fwait (bad) dec (bad) lds cmpsb pop lea out leave mov bound movsl jno and xchg call xor das loope jl dec test in mov imul pop push (bad) icebp cld sbb out jno pop mov or enter hlt jbe std stos xor add lods pop (bad) pop sbb xor push adc test sarl push outsb inc dec push or inc push out push adc mov out outsb xchg xchg mov vpxor jle shll cvtpi2ps bound aad xchg mov imul inc rclb ficoml cmc in sub pop xor stos pop sbb jae cwtl test add push sub (bad) jl cmp mov or dec data16 popa mov push pop mov mov (bad) pop cmp cmp xor sbb inc out lahf jne jno jb add test in dec stos inc sbb in dec sub hlt sbbb jne jno inc jp push outsl test lcall dec or negb dec jp adc out or stos jne push (bad) ffree mov shlb lds mov fcmovnu jl push sub fwait (bad) jg inc out adc jl inc lcall mov jle mov (bad) pop mov (bad) bswap jle cmp lock enter lahf (bad) xor xchg dec pop jp je mov xchg jmp aas xor icebp ljmp rol xor sub jmp es pop adc mov into (bad) lea dec testb or ret cli iret enter cmp in or or push lret xchg pushf xor out ljmp mov in jle mov inc and dec jbe mov jns mov stos (bad) icebp aad jae (bad) lock sahf xor outsb mov mov and sbb push pushf test inc loopne push fucomip lret inc imul xchg movl outsl mov mov dec sbb dec ds mov sub aam (bad) pop fistpl cmpsb data16 sahf sti outsl cmp decb push lret adcl mov mov mov cmp popa out inc add inc sub mov pop cmp fadds popf add jnp js add inc xchg ret lahf fs push push aas xlat lds sub dec sarb jns lods push and sub sub ljmp cltd and pop adc mov aad mov lods imul int bound clc dec or fwait test insb aaa or arpl pop popl leave dec test and and mov dec pop push fwait jnp cmpsl (bad) bound scas std test les mov nop movsl jmp insl adc fnstcw add xor add sub push jbe lcall in popw imul sarl in cmpsl out pop pop sub xchg in push (bad) outsb test fs jae xor jmp dec sbb out push mov lret xor fcoml pop push and mov lret mov and call cs cmp mov out fsubs adc mov dec cmc sarb lods xor popa push scas iret insl push push into dec inc add pop lods inc or cmp mov cmp lea xchg outsb mov xchg mov push dec stos inc mov out call test rolb push dec mov cwtl sbb lcall arpl inc add fstpt sarl lahf fcom int3 int3 xor test (bad) (bad) test xchg inc lock cmp jb push fildll push shll ja pop cmp loope int cmp pop scas lock xor inc jno popf sbb or pop cmpsl jae popa add dec pop mov or inc xchg (bad) loope dec inc bound jbe inc mov push pop outsb enter lods (bad) jb iret fstl and and sbb out andb dec mov movsl test rolb add ds adc mov outsl imul cmp jne imul (bad) fwait mov push mov jns sbb pop cmc dec sbb xchg popa cmp bound (bad) ss push cmc add cmp das pop movsb bound imul xchg lods push pushf pop push faddl nop (bad) sub test jmp enter sbb jecxz stc add test imul shl sbb into xchg or repz and push push xchg adc int in xchg cmc adc cmpsb jp pop inc and jae add (bad) mov inc push mov mov shr sbb jecxz mov loop xor pop in scas sub xchg (bad) mov xchg push jbe or xchg inc mov fwait cs jne jne mov fist cmpsl cmp out out jo ret mov xorl or outsl jo inc cmc adc pusha sub test iret sbbl jns pop and mov xor jns push cwtl mov mov dec lods setbe mov lahf push std cmp sub mov or lret xchg ret mov and daa xor add push fwait cmp pop mov addr16 fwait scas lcall sub cli out js mov aad push push inc cltd adc mov in inc jmp repz (bad) sub push inc mov push movsb (bad) es repz pop aad iret mov (bad) cmp pop lahf sub add mov ret sahf data16 lock adc adc pop test adc pop sbb mov add pop sbb icebp inc jmp pop sub test fadds out xor mov xchg sysret mov jle adc aaa stc mov sub jns sbb cmp (bad) jb notb cmp fwait out dec jns arpl xchg inc fdiv pop xor dec pusha xchg jge,pt sub (bad) inc es sub mov outsb adc or inc lcall mov sbb add sahf fs jne out cmp mov inc add aaa int (bad) rcrb call sub push loopne les xor pusha mov mov mov push jnp jo (bad) mov clc repnz cmp cmpsb sarb inc in push nop dec mov aad call add outsl insl ret adc test pushf push in pop jg sub jno mov jne and orl daa sub cmp mov test fs jo mov push test mov in lods dec and (bad) mov mov cld leave mov inc lds lods or imul push xchg pop adc (bad) jmp lea lods sbb mov dec sbb mov cmc dec sub push push shrl fiadd and mov rcrl inc pmulhuw mov inc inc (bad) scas ds clc (bad) fisubr in mov pushw icebp lock push mov or loop bound imul push mov rorl movsl (bad) lods out cmp (bad) (bad) pop and enter enter push popf dec push jbe roll cwtl sub push fsubrl push inc adc mov add es push mov jno lods or (bad) loope add sub lea or xchg (bad) xchg pop xchg push pop push push jno jae pusha lret sub js shlb sub or mov push cltd jmp in or hlt hlt mov mov ret mov sub jnp shll popf jg lds cmpsl repz push inc dec into mov sub stos repz xor stos push or adc mov or test add push mov sub cwtl sub mov and inc and jo mov add mov mov inc pop aad add jmp or pusha jb jecxz xor ds (bad) mov mov dec sbb mov jge gs cmpsb fstpt sub jp inc inc lcall iret inc and js fcoms lods sti mov dec cltd imul and pop out sahf (bad) in xchg jl cmp es shll dec or les inc jns ret gs push xchg lret (bad) sahf jne aad icebp std inc (bad) aad aaa adc mov cwtl aad pop loop mov shrb pop pop mov test setle stos test add outsb inc clc jb or mov mov in dec sbb aad sbb mov mov out into test jbe mov dec loope lds mov movsb mov loop loop rcrb cmc in (bad) lret mov mov cwtl nop mov xchg mov sbb xorb aam das or and xor dec je inc jg jae push ja xchg inc (bad) repz or xchg inc add sub cmp lahf mov fldcw inc sub or xor push jne mov cmpsl cmp cmp mov (bad) or pop sub inc pop and mov and sbb xor cmpsl jb insb arpl pshufw sti or pop add xchg dec inc dec pop push cmova sbb add loop sub or jns lahf fwait push pop sbb repz insl aad js icebp pusha inc push adc pop add or pop repnz sarb xchg lret dec imul dec xlat pop adc add and dec andl inc mov sti mov mov mov ss mov lods pop jle stc cmp (bad) mul push mov and and nop and dec aas jne cmpsb scas ret jnp scas imul gs xor rolb dec leave das dec push xchg hlt cmp sbb (bad) mov dec scas jle pop mov data16 outsb bound mov push xor stc and cmc lahf lcall pop ss inc pusha jne pop mov cmp mov mov int dec push cli or or fsubrl sub aam mov mov mov arpl mov inc cmc push sbb mov das dec push popfw (bad) shlb push in mov call and (bad) ret push cmp fistpl and or loopne fs loopne adc neg cmp aam and rcrl jp xor fs (bad) insl fisubl mov or ret divb divb pop stos sbb adc jecxz push call fdivl enter test ficomp fdivr arpl adc ss lahf out sbb dec adcl pusha gs xchg mov imul daa scas nop mov lds mov pop jge xchg int not repz inc push or and sub (bad) mov pushf add loopne in lcall repz fsub jo nop mov push inc mov push fsub pop adc das cmpb push mov mov mov test sbb jo fdiv icebp jle fwait sub in inc repnz enter pop pushf daa cmc jno and dec mov pop iret sub xor (bad) outsb lea aas jmp fidivl cmp stos mov or mov cld sbb inc lret stc jnp lret (bad) push xchg bound push mov sbb xor divb mov pusha ret ror loopne dec mov xchg mov inc xor pop jmp adc fisubl repnz stos or push mov stc jp push pop icebp push push adc pop (bad) mov push fldcw repnz cmc cmc sub into fisubrl and pop out ret inc cmpsl sbb ret in in iret (bad) aad dec cs (bad) and xor push movsb push rorb adc xchg notl push or or imul xchg mov mov int fisttpll mov lods pusha cmovb loope mov sahf sbb dec xchg test or sbb or std (bad) fisubr rol lea fsubrl in push fs or adc scas insb (bad) js ret cmpsb ja dec push dec pop lret outsb pop fwait insl sbb cmpsl jge cmpsl fs fstl cmpsl mov mov mov (bad) pushf movl push mov stos xchg and xchg mov sub sbb cltd mov sub pop cltd mov xchg inc cmp dec nop call leave lock stos fisttpll (bad) notb popf add loopne (bad) pop xor cmp jnp fistp add sub add mov push in pop cmc aas ja sbb mov push leave mov cltd sbb inc scas jne push lret dec test fidiv jbe call aam xchg movsl decb lret loopne sub movb pop or test xchg rol cmc stos (bad) mov test mov jae ja xchg inc push dec cmp mov dec push cmpsb mov js fmuls push lds and or jl push fwait mov inc outsb dec cmp push int3 std xchg mov notl mov out test jg test out sbb adc (bad) fisubr sub icebp mov fsubrs add and rcrl in dec loope repz dec bound jg repz or les mov inc sbb lock xchg pop and mov xor jge movsl pop test mov stos (bad) jl sub pop test or fisttp xchg add push mov imul pop scas ret in rolb insb adc add dec in adc cmp xor jne add sub inc stos mov (bad) fbstp or leave mov inc insb stos inc clc rcl ljmp fmuls add adc rcll movsb xchg adc add jmp in add jl std fs fdivp jne add adc jnp or add jle cmp and xor lea sub (bad) ret add mov mov fdivr insl sub repz std insl adc sbb outsb jo dec mov int3 sahf ret add (bad) aas (bad) lock lea xchg adc gs mov jo inc pop in hlt jne xchg fadd dec mov mov shlb pop pop mov push mov test sbb jge jb (bad) loop aam cmp adc es leave (bad) lea mov dec movsl fsubs xchg inc stc jle push dec xchg ret out imul inc xor xchg popl cmp and fnstcw (bad) lcall scas addr16 js mov pop (bad) aad adcl fsubs add fisubr jae leave jecxz xor fcmovne xchg cld xchg cmp fst mov fsubrl sbbl gs push sub adc add lea push pop aam sahf stos jecxz stos cmp movsb (bad) loope loop and push adc xchg leave fsubrs xchg sub jno mov adc jp add clc pop or call sub inc sbb shl jae cltd mov mov int cmpsb inc imull dec aad aaa das pop (bad) jo leave scas repnz int outsb push xchg sub aas xchg in fs jge daa dec fwait imul jae repnz xor inc jl test fcomi sub mov cmp pop ret aaa adc dec cs gs call mulb push xchg ss ss or adc (bad) enter xor sahf call jno inc shll enter and pop enter mov fwait xchg add je cs and lock pushf adc std negb in xchg jle iret (bad) loope outsl or cmc fs movsb jbe xchg into ret es sbb push add or ror pop in jns imull out sub lret jp je fldcw out pusha in mov lds push ret mov dec xchg sub mov push call xor xchg into dec sub std pop mov push stc or mov je dec pop jmp aaa dec int3 clc test pop dec xchg in xchg (bad) int3 (bad) fs xor dec roll lret sahf xor mov fwait xlat xor lds adc jnp icebp pop push cmp sahf mov ja shrb lock dec push out or cmp mov addr16 sahf jmp add clc jecxz jmp out and or mov aas (bad) insb cmp cld push pop jmp sbb into aad es inc mov jle insl lods scas insb mov je cmpsb fbstp aam fsubrs cmp mov cmp ret cmpsl cmp xchg push movsb mov jg stos in repnz mov rorl xorb sub add fwait inc jne sub roll gs enter std out gs lods mov outsl pusha fistpll dec xor mov movsb fstp aad xor (bad) mov pop das les clc or dec orb cltd insb daa bnd xchg jae andb imul andl jns or inc sbb pusha and xchg sbb fbld dec outsl jbe mov inc push push xchg adc outsb dec roll jmp cltd shrl sbb (bad) push lods add cmp or leave push cwtl xchg lahf dec and lea pop mov sub sbb or jmp pop test mov es shrl mov in out or es fsubrs out mov (bad) mov mov cmp mov pmaxub cli fidivrl out or pop (bad) dec inc sbb xor cmp sbb out mov call std pushf arpl jb adc iret mov (bad) (bad) loop int orl jge mov (bad) cmpsl or jg or test cmp clc fldenv repnz std cs cwtl jge stc push mov and (bad) nop add pushf leave sub sub mov and sbb int or mulb inc adc enter pop pop lods mov js and xor add in dec jb iret mov xchg cli jo scas ret sti sbb push push pop dec repz shrl mov or out sarb icebp les sarb (bad) inc sbb push faddl sub in ds popf and ja leave xchg mov xchg xor mov jecxz xor in xchg iret leave or rcl addr16 dec add jmp pop cltd add loop sbb stos lods sub xchg mov movsl sbb into xor js mov xor cmp or jle or pusha lret in or (bad) gs push adc cltd ret or sahf test int mov jg outsb dec and and fldl2e ficomp or test clc push mov orb dec addr16 das mov pop jb lock stos add (bad) or repnz cmp cmp dec dec faddl xor int sub ficomp int int jmp push adc scas mov repz push dec xchg push mov loop push mov cmp clc std xor jge into jne in sbb bound pop sbb test mov add fwait aad mov call mov mov adc aas (bad) call pop push jbe pop cld sbb adc add cmp mov jne pop call sub aaa or (bad) ja aad popf jbe mov xchg enter sarl cmp xor (bad) into sub movsl adc pop fisubl mov fidivl dec fsubs gs sti mov testb mov negb std jmp fistp inc in jecxz adc lods push mov movsl cli inc pop das dec sub xchg push cmc ss in ss mov in mov xchg insl (bad) push rorb jle adc xor fs lods test sub mov nop pop (bad) les in mov cmc sbb add xchg pop mov outsl jo mov jmp cmp loop or and les push pop loopne xor fmul adc out inc jmp cwtl mov test cmp jns,pt jae push add cmp sahf out inc jle cld jno xchg xchg loope pop test das jmp xor cmp sub outsb popa xchg ljmp jle add aas adcb mov popf das and push xor out xchg xor leave pop adc les lds inc sti cmp aad or (bad) icebp xchg test call pop cmp fmuls adc jbe mov pop jmp popa rcr jae test cli or dec push jp (bad) (bad) push fsub insb insl repnz ljmp xchg push sbb xor ret sub push xchg (bad) rep nop lods sub sub mov and loopne inc cmc fimul push cmpsb mov add push pop inc xlat cmc jle movsb in mov mov cs adc xchg inc pushf movsl cli (bad) cmp notl icebp mov bound shrb cmp mov mov iret xchg jmp inc mov movsb stc (bad) movsl sbb jbe push dec int sbb mov xchg sub out add xchg loope out loopne or mov pop jp cmpsl pop cld jge lea xchg mov ret mov enter mov adc test movsb dec addr16 into in pop pop lods in (bad) in ror jnp fidiv jb push aaa xchg pop sti outsb das fwait cmp cmp xor push int inc sti lcall sub sub push aam dec lea add scas movl xor ja sbb fidiv xchg push mov dec jecxz sub icebp inc cmp or cli in adc dec (bad) cmc insb xchg movsb sub inc jl int leave xchg sub sbb scas jne mov ret enter addr16 negb out add fnstenv inc xchg lahf jno mov psraw and fwait sub pop cld testb xor ljmp rcrl sbb and outsb push mov jae and xchg cld (bad) sbb cmp push sub cmp push dec jne and adc lds xor rorl icebp in cmpsl lret xor jbe or cmc (bad) scas sub and out mov mov and loop out push mov (bad) rcr push xchg sub pop adc notl mov jae jecxz mov popf pop (bad) jbe lock add add pop pop and add insl (bad) mov (bad) movsb add ljmp ss test jg xor fldt out xchg cld inc popf rorl add mov xchg push push push push std fidivr bound add xchg mov push stos aad imul jns jne ljmp mov lea mov in xchg xlat (bad) (bad) xlat sub lods js sub xorl push jg imul sarl movsb gs (bad) sahf mov clc fcompl mov call (bad) pop cmpsb push push push pop addr16 sub mov add jl sti cld sbb sub aas add fimull jge add jne out mov mov js repz inc lea arpl push xchg jno mov sub js sub mov xchg mov fnsave sub cld iret jbe (bad) jae scas jo in das fcompl aaa sbb imul mov in cmc cs dec int3 les push jg shrl in xor movsl jmp xchg pop sbb mov sbb cli mov setne out imull sbb and ud1 gs dec insb adc insl push icebp inc fiaddl xor adc es push into lock jp pop mov add pop xor dec stos or pop and (bad) jne xor pop loopne sti idivb push out andl movsl jbe sub es lcall xorl xchg ret repnz imul or dec sahf lcall sahf iret pop cmpsl repz add repz cli adc pop cld inc adc mov xchg xor add ja add movsl xchg nop cmp adc cltd mov pop mov add mov sbb bound out mov jecxz dec mov push fisub mov push mov sti xlat in insl xchg outsl loope rcrb fcmovnb (bad) sub cmpsl jmp jne loop xchg flds (bad) sub xchg ljmp mov mov mov insl inc mov adc cmp mov loope xchg lcall mov nop out inc ja outsl lret xor xchg loope push adc int cmpsl les jmp mov ret jbe sub (bad) pop icebp lea bound mov testl ds mov or mov xor repnz mov fisubr cli fchs outsb pop addb jp ss out jae stos arpl (bad) rcr popf push cltd (bad) or cltd and adc adc or or call aad xchg push clc stos dec jmp push cli lahf jle fs mov movsl sub sub sti iret movsb dec pop sahf jge xchg mov sub loop (bad) inc inc xchg lret sbb xor iret mov sub insl setp lret lods (bad) mov (bad) call or mov enter sbb mov int pushf jbe push std mov mov pop jmp pop xchg lds ret mov dec mov js xchg push lds adc stos push repnz sbb nop movsl xor (bad) dec mov jmp push loop jns dec cmp fwait pop add pushf cwtl add jle cmc daa out or lcall adc push push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret mov or and or dec push mov inc ficompl pop dec dec mov cmp mov push shll push lods adc jnp add pop ret scas hlt cli (bad) xor adc flds xchg mov fstps inc enter pushw pop es mov (bad) mov call push call pop ret push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec dec hlt jns sub mov sub and jne or lock stos pop outsl pop add fsubl sarb lahf push or test ret js rorl in mov mov jne hlt mov mov fwait loop subb push mov test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov or add inc cwtl cmp push std clc test fnstsw cld in loop xchg insl mov push popa xchg pop test imul enter mov cmpsl adc test inc inc cmp inc mov dec ljmp stos and push sti push or adc jp xor dec fwait inc gs mov xchg leave cmpl ret int cld addr16 mov pop lods dec arpl aam or ljmp or or pop xor ljmp push dec xor ret lret imul sub inc sbb test ds mov pushl in fisubl ret leave sahf sub pop les mov xor cmpb orb jge adc xor jecxz pusha mov xor enter es std imul jnp sbb cmc imul nop or mov mov sbb mov call scas shll add pop mov das xor or subb xor fdivrl movsl sahf (bad) adc je jo dec mov lds xor inc inc fmull sbb cmpsb pop pop movsl popa mov scas es lret mov jp movsb ljmp or mov stos cmpsb push sub sahf outsl scas (bad) push mov sbb or fidivl and sub (bad) sbb bnd loopne mov sahf roll xchg mov je or repz add pop out and cld mov aam xor jecxz cmp lds inc das popa mov (bad) es jmp adc ds push mov sbb mov pop insl adc xor mov fistpll inc lock pop lds es into stos sahf push ds roll mov jae cmp fstpl movsl pop mov add rcr fistl jle adc js in jns xchg hlt jb roll dec (bad) xchg jp in pushf popf ret rorl (bad) bnd mov pop jno movsb call aas cmp cmpsb jnp adc popf idivl sub mov lret rcr mov add xor mov inc adc xchg mov mov lds add xchg stc and into rcr xor inc adc dec add int aad push call dec adc inc in movsb movsb adc or jp or mov stos inc pushf stos sub addr16 fimull sub fistpl xor mov xchg sub dec adc xchg cs xchg mov cli into mov rorl icebp dec clc fsubl (bad) adc push add addl or cmc mov xchg xlat xor cmpsl xchg out pop das shrb mov repz and cs (bad) fstpl mov cmc xor and pop add in lds mov mov scas inc dec push hlt push add in adc mov cmp xlat push pusha ficoml popa push pop das loop sbb push push mov adc xchg xchg (bad) xchg dec ljmp jle cli js push fbstp fcomps stc lea pop aam sbb sub movsl leave xorb mov push inc or sub push call cmp jbe mov lret fldcw movsl xchg daa (bad) ret adc (bad) jmp pusha xchg sub adc iret ljmp (bad) xchg xchg mov push sbb into cltd cmpsb stos jbe xchg pop push pop inc test aam xchg mov push mov and aam jb sub (bad) mov mov or push jge push test or out fidiv or fs movsl add cmp in mov or push sti lahf push ss cmc les pop fwait (bad) mov das (bad) sub sub xor add fnop fcmovnb xchg mov xor push inc pop xchg sub inc adc mov mov push xor in repz popf loopne loope scas das cld sbb inc js cmp insl and bound nop dec jecxz adc jmp inc add in lcall xor dec jmp stos cld loop ficom fiaddl lods scas xchg adc or (bad) enter inc mov or sbb mov mov movl mov out jmp inc xchg test add cmpsb xchg mov push nop xlat jp lcall cltd pop xchg inc fs enter cs (bad) adc cmpsb out sahf add sahf dec shrb jmp pop pop xchg push data16 scas es sub (bad) dec xchg ljmp bound xchg dec mov imul push add sub cmp inc jbe and jg push dec cltd (bad) ja sub stos dec stc push mov xor cmp push lods add fldt add dec je inc loop,pn mov sub jp arpl and insb xchg adc lods dec push mov and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 mov or cs faddl and inc sbb mov xor adc test les stos inc test dec inc cld (bad) jmp dec mov insl push pop inc mov adc sub je hlt and out mov add jl movsb test mov xorl adc jne xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 mov or cs faddl and inc sbb mov xor arpl cwtl fldt cs sub xchg shr iret mov sbb cmp mov xchg (bad) outsb push repz lods je inc sub jne jge add repz jge test and inc negl lds aaa out sbb lods and fiadd mov jno add mov cmpsl repz insl inc xlat dec fsubrp mov mov push mov xchg xor jg or bound aas mov jp (bad) call hlt jne loope sub icebp adc outsb shrb push mov mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 mov or add call and mov imul insl jbe inc cmc pop faddl and inc inc movl movl movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov (bad) mov mov mov mov outsl sbb adc jbe ret push inc push xchg jmp adc out add mov and xchg push jl lds xor mov clc and int in add mov pushf inc jmp int enter mov stc clc stos popf push mov xchg stc xor xor dec adc xchg pop mov inc mov mov mov mov sub and add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg adc dec dec dec mov mov mov std push (bad) das or rcpps movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 mov or add inc mov lcall adcl scas fwait dec decb sbb push cmp add cmc pop scas cmpsl sub popa push pop or test push outsl xor jne hlt mov mov lods test (bad) scas sbbl fisubl pop lods ret maskmovq divl pusha xchg sarb add inc insl cbtw jns jo mov call pop xchg push cmp cmp push test orl cmp (bad) pop cmp add repz ret dec mov add adc loop mov pop mov aad pop fwait inc mov sbb bound jae icebp cld sub cli aad sbb jb popa pop mov push loope nop int subl cld mov xor pop pop lods in add aaa popa xchg ret leave sub out mov sub pop outsb cmp pop xor cmp push repnz stos js inc add cltd lea loopne (bad) leave lods push ds int (bad) mov inc inc in lock (bad) popa and lds xchg jns sub fwait cmp cmpsl or movsl popl aaa mov xchg sub xchg jb dec jo not mov xor pop faddl add xchg fsubrs jp push mov dec movl add mov fcmovb inc pop addl popf adc test xor pop arpl lea pop movsl mov sbb mov cmp js jb ficoml mov xor mov sub push sbb push mov cmpsb jg jge cltd jmp negl (bad) inc mov add stc adc dec idiv xor sahf sub lret jmp cmp jmp pop adc imul divb jbe cmpsb mov and jno fisttpll or iret fs aam (bad) das sbb cld jmp inc lcall mov rcrb (bad) movsb xchg xchg pop push ds mov lahf sub xor rol cltd pop sub test xchg jno and add push push les (bad) add pop adc mov (bad) (bad) fnstenv fcompl and fsubrs cli jnp add inc in jo xor fwait cmp (bad) fcoml mov pop mov sbb xchg dec dec fdivs jns pushf push pop mov lock lcall pop (bad) cli xor push xchg fist in mov out pop jae mov js cmpsl pop (bad) aaa adc mov shrl (bad) ds pop (bad) int cmpsl cmp sub out or cmp mov jb imul sub dec aad mov (bad) lock fstpl xor bound lds cmp or jno aad es cmp sarb mov jbe xchg ret mov clc mov in add int3 adc aad mov fsub xor inc pop add pop in mov rcrl (bad) repz iret (bad) inc in or pop aad add and aam push ss nop fmuls push mull sbb out xchg pop pop xor mov dec fcmovnu mov mov sub movsl inc (bad) gs imul in or pop or aad dec xchg xchg cli repnz push mov leave dec jo sbb jge xor inc dec add pop jge lds jmp xchg in adc fisub cmp fidivr inc fdivrs jnp je (bad) or sbb int mov cmp and fs sbb loope arpl add and (bad) adc pop push xchg ficom sar push ss lods and fidivl jae inc add jge jge pop mov cmc sbb and sti dec sbb pop sub repz stos sahf add sbb (bad) (bad) cmp xchg pop jbe pmuludq mov repnz xchg pop jne out test push ret test mov lahf mov xchg scas push adc pop rolb jg push arpl daa dec decb loopne cmpsl or addl stc mov test mov daa add popf enter cmp and insl testb mov mov jae fdivl pop (bad) (bad) push mov int cmp rcll arpl (bad) ss daa icebp outsb adc sbb adc std pop mov repnz adc fisubrl mov mov sbb xchg dec push push popa mov jle mov push jnp jno cmp in pop xor pushl or push xor hlt or cmp mov xchg jnp test mov dec ja xor dec xlat sub push push push xchg pop pop mov imul or pop cld adc fcmovnu ret push cmpsb out imul repz pop mov loopne (bad) (bad) mov mov xchg out mov scas jp push into dec ljmp xchg sbb repz xchg or adc ss mov and or dec outsb mov jno mov push outsl test sub mov rdtsc dec fisub or inc sbb (bad) adc ja lret adc lcall loop movl and xchg or es outsl iret mov mov std scas xor mov inc mov ret sbb cmp xchg inc xchg aam mov fwait pop (bad) pop jle push adc movsb arpl inc sahf inc (bad) iret xor add xchg sub mov push jo dec loopne adc out adc sub fisttpll ljmp or sti push test (bad) imulw push jecxz add loopne test mov std ss das mov lea lock mov or mov mov xor xchg aad add fdivrs jb imul test and cmpsl adc std sub dec int3 fs mov xor cmpsl pop xchg add pop mov or jae dec jns pusha jbe push lret jae adcl outsl xchg mov out lahf fcompl or inc rorb push pop fsts cld repnz into popf mov sub mov xor in out rolb ss fbstp fmul dec sbb ljmp jbe les (bad) push incb fildl int or sbb mov mov (bad) fcmovnb sbb inc or mull movsb addr16 cmp mov and pop mov outsb subl cmpsb js fwait gs and sub cmp subb out add inc (bad) jle xor xchg negb pushf sub stos cmp sbb pop pusha cmc fmul dec push insl mov push lods out jnp pop roll lcall out fwait std sbb mov pop xor add sbb pop mov test ja ss push scas adc dec enter cmp hlt stos xchg aam (bad) push mov push je inc inc (bad) int3 idiv mov sbbl int cld inc gs inc lret mov out fidivrl fs lret inc fwait xor pop stos adc pop jae jle jns inc out add or dec mov (bad) int3 xchg adc mov out pop mov imul cmc push sahf sti xlat or xlat lret add or sbb push add (bad) pop xchg push jl or add push and cli arpl add or sbb pop imul jne lds xchg xor add das jnp imul mov mov lds jmp sbb jp sub mov gs rolb sub add iret mov dec xchg xchg mov xor mull push sub sub aas into arpl mov sbb dec jae mov movl movsb dec add cs dec push adc dec sub loope xlat mov in nop imul outsb inc les inc xor xchg jno orps in add push inc daa xchg pop add jle cmp roll cmpsl in mov cmp or loop inc (bad) xchg xchg xor adc iret repnz mov mov pop xchg enter gs adc mov out or mov imul addr16 fildll inc adc and mov mov ficom mov fdivl mov iret mov cltd ljmp test mov negl out or xlat or mov mov dec sti out scas lret pop or in hlt fcomps push cmc (bad) add popa pop sub icebp or add sbb xlat inc mov addr16 sub xchg insb or cld (bad) dec pop test scas push out sahf jo in mov mov cmpsb sti shll mov xchg sub mov fnstcw push das add adc je add and lret jae mov inc mov scas mov jl adc bound imul pop cmc decb insl mov cmc pop jne pop sbb faddl shrl lret lods mov (bad) and arpl push mov cmp cmp sbb xchg mov imul jno pop push hlt jnp ficom (bad) xlat popa sbb sbb inc movsb xchg pusha (bad) push push cli insb leave cmp mov call xor stc addr16 ror mov lahf adc inc add mov arpl lret push daa sub push adc push fildll pop jg cltd fsubr mov mov sbb push (bad) dec out add xorb cmp (bad) aam fstps lea (bad) (bad) inc xor addr16 mov movsl mull inc mov mov jle adc add fwait pop cld inc stos sbb loopne xchg std hlt roll push insb dec pop loopne jae test das int3 test ret hlt pop sbb dec dec push cs testl lret mov jnp pusha and lods pusha and and loopne xlat orb les inc outsb push dec sub xchg mov movsb imulb sbb daa data16 pop pop mov jmp cli jae pop out aad repz pushf fs (bad) push vpsrad or imul movsl rolb cmp inc (bad) insb jge out (bad) xor inc lods (bad) dec xor jae dec mov mov add xchg adc inc jae push (bad) ds xlat cltd jo jne (bad) jb mov mull and mov push xchg and and rcll aas cli cmc xchg sbb ds test pushf push nop and movsb xor mov cmp push fwait mov lods (bad) fwait jp inc stc out popl inc les mov xchg cmp ds (bad) mov cmp jge cltd je push jae jge fucomp or jno cmp jae (bad) lea pop cmp dec cmp jo in jo icebp pusha js mov sub in repz push rclb aas pop mov push xor mov pop fimul out inc movsl pop inc ret xor sub push int lock pusha int3 lahf mov add stos arpl cmp mov sub and add and xchg fwait or mov and frstor xor ja leave sbb or int inc pop xchg pop (bad) dec jne mov mov ss or add jae outsb or push in lods cmpsb sbb fstpl daa add sbb aad das mov jge adc lret add mov and xchg cli data16 inc cmpsb xchg out dec fmull gs (bad) fdivl sub lock mov outsl es lea and leave test call fisttpl jb cli sbb sti je cmp inc and adc sti decl and (bad) pusha testl out push aas sbb add aas mov jnp pop inc push pop in movsb sub sarl pop out jl test movsb inc data16 sarl mov sub cs xchg pusha mov push xchg insb pop pop jae lret out or inc mov sbb push nop cmp mov pop outsb inc (bad) mov test stos ljmp mov in xchg cld shlb into adc pop mov in movsb jne add ret jne ss jecxz xchg sarb icebp scas test fs cmp sbb iret loope jecxz pop sbb pop and dec and mov fs xchg fstl jb mov mov nop fwait push xor jg fldcw rcrl adcb mov push sbb mov add mov js pop inc int pop enter (bad) je mov push push adc lods sub xorl in dec pop es pop xlat push jl fwait inc and loop int pop cmp aaa and je sub and outsl mov orl xchg push nop push push sti adc or push push jecxz das nop cmp mov js movsb sbb adc loopne iret push orl add push leave sub dec daa pop pusha xor push pushf bound rcr loope pop jge popf xchg cmp fdivrs inc jge cmc push testb int sahf sbb lahf xor sbb mov (bad) mov mov pop dec popa inc aam xor mov subl in std mov jnp mov dec add fmulp add mov sarl pop push pushf and frstor cld lret inc push inc mov outsb movsl mov rcr dec aas fcompl and xchg je ret push push dec mov js cmc push jb aas mov mov push jbe dec xor and fmul scas xchg cwtl jae adc add out adc pop ds (bad) and pop pop aaa cmp outsb aas and push rdmsr frstor or xchg (bad) mov (bad) icebp pushl inc ret les loope imul jg imul das push push cmc cmp outsl aas shlb scas dec loop xor fildll (bad) push xorl xchg daa vmovntdq cmovg jp pop pop (bad) test or mov mov xchg fsub cmp dec rcrl cmp or jbe jecxz or fdivs mov mov and mov xchg sub fdivl mov mov loop mov dec xor ds cltd sbb jecxz xor scas ds fsubs xor adcl push pop or xor add rcrl fidivl in inc cltd add (bad) xchg (bad) int cmp push sub movsl mov stos (bad) das loope dec adc xchg int3 jae mov pop pop and dec fcoms divb xchg out sbb in mov clc and icebp mov (bad) xlat ja mov (bad) pop test mov mov sahf and and outsl mov adc or add add movsb shlb or iret xchg fisubl imul frstor dec cmpl dec cmp push leave out and mov fisttp xchg cwtl adc inc cld leave jmp cmc divps or push inc lods inc push loope test sbb (bad) in add xchg (bad) scas jp add or push sar push ret in push sti addb adc dec mov into push inc and mov sub xchg sbb push ret jp cmp pusha dec mov mov push imulb push cmpsl enter cmp or add gs dec sahf xor dec mov lods gs je jp jns or mov outsb loopne aas sbb into sti mov loopne mov cmc add movsl sub cmpsb or xlat lods pop pop icebp fisubl cmp int loopne sbb int3 cltd mov in and pop mov xor dec out jbe mov int3 rcr mov aad mov sbb lods movsl cmp and mov inc and lret adc int3 sub cli (bad) mov aad sbb dec cmp cmc iret xor mov pop inc scas scas xchg fsts lcall or inc jg testl rorl inc cmp xor sub (bad) and cmp jecxz fucomip push dec xor (bad) repnz push sub movsb or push cmpsl jne je (bad) sbb push push (bad) jmp pop sbb push pop jecxz in mov inc sbb in jmp imul inc leave int3 aam sbbl outsb pop addl sbbl cmp add or arpl mov in outsl mov mov fwait (bad) pop jmp jg inc sbb jb inc daa pop cmc push adc cwtl idivl add sbb pop lock xchg fbstp adc insl or inc sub and test popa loop out icebp loop inc jle fisub push jecxz in inc imul lods add cs dec push mov mov mov sub (bad) in call sub xchg or lret fcmove movsb rcrb test mov mov adc (bad) cli aad mov push std aas fcoms inc cmp jmp sarl std clc adc jp mov (bad) loopne js inc sbb jmp mov lock iret rcll add sbb pop pop jnp xor and jge pop mov mov fsubs fistpll inc mov ljmp lds jo ret cltd or dec mov loopne je mov mov adc sar iret cmp test cmp mov jecxz aad lds jp inc xchg jmp and push lea jo dec inc inc test int out insb cmp push push push and dec mov push jno shl xor xchg push mov imul (bad) ljmp push jo mov mov fwait mov out adc (bad) pop rcrl stos push arpl cwtl xor movsl mov leave xchg imull inc or inc sub xchg je mov cld xchg mov pop jg mov leave inc movsb push mov out imul scas and dec xchg push rcl fistpll sbb sarl stos adc dec or xchg inc xchg jecxz mov mov or leave and int3 inc adc gs imull mov inc adc jno pop mov lea xor push aad bound mov out xchg inc cltd xor mov pusha pusha sbb cld bnd adc and out (bad) hlt (bad) repnz int pusha add call pop shlb push jl push inc add mov mov xor and and das jp (bad) idiv aam loopne sbb inc out lret mov push xchg outsl fcompl pushf adc jns mov mov add aas sti aam mov cmp mov add pop add test pop push (bad) mov pop loopne xchg cld sarb iret in movsb je jne mov xchg sub sub imul inc xchg jo leave in sti push mov cmp push inc data16 repz and sbb stc jns push sarb out sub arpl and mov les (bad) cltd cwtl fistpll test jmp pushf add (bad) xlat int lcall jne and sub cmp fimul fsubrl mov in lahf fbstp mov push adc mov cwtl pop cmp mov repnz jne test xchg mov js mov jo pusha push das and push adc jae int (bad) dec fldcw xchg mov lret out rol mov inc push xchg imul insb les add rclb inc pop shrb imul stos inc xorl jns pop cmpsb lods fwait out jl adc jbe mov xor jmp and insb hlt and xor stos fiadd fimull mov jo arpl int sahf dec sbb push outsb ljmp mov jae push cmp fdivrp or in ss add cmp imul and push mov xor movsl cmp aad pop dec in push daa imul pop lcall arpl inc xchg mov cmp xor bswap cmp (bad) sbb jbe jnp xchg push (bad) cwtl dec bound adc inc daa fdivl dec pop cmp gs pushf arpl add push push inc repz inc outsl adc das adc loope lock icebp sub sub cmp orb add nop adc ret and ret cmp inc mov mov outsl imul push and aam push cmpsb mov adc push push hlt sub or test dec fsubr notb ljmp nop repz and leave jbe sbb xor lock pop mov fidivr push inc in sar gs lret xor xchg and add cmpb sbb mov sub push popa in xor ljmp push add int mov pushf loopne leave pop jnp sub pop pop int3 outsl cld cmp jae and notb mov or jmp sahf stos lret or iret pop mov nop jmp add loope nopl sbb data16 mov push test and adc xchg add out (bad) adc gs push shl jg push add add or roll mov (bad) repnz enter mov outsb sub and sbb js xor jle fistpll out sub jno lea test mov xchg insl and js and aaa je sbbl push pop inc sbb mov call xor pop push dec mov adc sub pusha mov (bad) fildll or and rorl movsb lret push push or xchg les jb inc mov dec enter dec adc icebp dec sbb div mull xor mov push jae loop fadd xor mov or and dec jae popaw popa imul inc fchs pop adc mov cltd push call int3 int3 int3 int3 int3 int3 mov pop divb mulb mov push in lock imul sbb mov orb adc xor out adcl pop mov jp mov fucomip mov es dec rorl or loop xor dec in mov lock or mov push test int jge adc lods nop mov push dec (bad) lock lahf sub xchg sub imul adcw in jge lock jo fdivrs xchg (bad) sbb repnz sub sub cli aam mov js jnp inc inc es scas mov andl scas arpl sbb (bad) cmp dec (bad) aam inc test xchg cmp cmpsl dec jmp xor iret frstor aaa push and mov icebp push adc or add out push jae mov sbb cmp in pop popf inc sub roll and in mov or loopne push mov mov inc xchg ds mov gs mov fldt inc inc daa jnp add lea bound lret mov sub (bad) fpatan mov mov inc jecxz xor aas pop fcompl arpl push xchg sti sub cld mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 add mov and cld lahf bound inc ss xchg insb jbe (bad) pop jp mov insb (bad) dec add cmpsl pop (bad) (bad) cmpsl lcall cltd jge loop adc cmp addb test push fsub fsubs and xorl mov divb out (bad) xchg sbb dec shrb mov jge mov jo (bad) and movsb jg,pt pop pop ficompl cmp add call out loopne andl xchg mov insl loopne das test sbb jecxz xchg pop mov jmp (bad) test jnp scas fldt (bad) fstps push mov push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc mov leave popf and loop add pop cmpsb (bad) fcmovb dec adc mov (bad) shr scas out lahf or mov ljmp pop push add cmp lahf sarb addr16 dec xchg xchg outsl ja mov icebp dec cmp sti pop out fmull or icebp cld fs nop in mov inc in rcrb mov mov in leave add stc jb ss ss aaa xchg pop mov and sub les push lock (bad) in test xchg test fdivrl cmp adc and jmp jae and ret ds jbe shlb adc push pop rcrl fs stos mov xor test pop cltd push ficoml jg fstpt fs je fistpll xchg sbb addr16 lods mov fsts test xchg call xchg jge jmp xor loope and scas pop sti pminub loopne int3 in push adc xor push inc xor std push and push popf sbb outsb loop bound popa mov cs mov sbb adc mov xor mov fdivp fsubrl xchg dec xchg push jns fldenv mov adc push xor xor ja aad loope inc das loope adc jmp jbe and cmpsb daa out push das out mov je and jmp into out jl sti xchg sub fwait or orb and cld push into jecxz inc jl push mov push into cmp outsb (bad) vmovapd addb or sub inc add jg xor ret test inc xor sbb mov mov sub inc (bad) loop jmp outsl fsubrs aaa shll sub in inc mov fcmovbe scas cmp sbb jnp sub sbb out push dec mov pushf loop jg out (bad) mov sub or cwtl add dec test xor xor xchg jmp movsl mov mov sbb inc mov xor fist stos imul jae rorl hlt mov gs sub fnsave push mov (bad) cld jp rorl (bad) xor into pop jle jo cmp sti jne sbb jecxz hlt setp sbb add ret dec cs cmp and into nop lds add cwtl lret push js ds mov inc inc mov or mov cmp push push sahf out popa popf jb in sbb movsl popa movsb inc pusha ljmp mov mov in cmc pop (bad) das inc dec xor daa pop jl inc xor push push (bad) movsb imul mov ja inc scas pop rol stos xchg jmp mov cli es xor xlat icebp data16 inc mov aaa outsl jle stc insb jae and ret adc hlt pop adc stos icebp push (bad) push ficom jne pusha mov adc arpl pop add mov shrl dec leave cwtl add insb jb jle push (bad) in rcrb xchg addr16 xor push push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov or add das mov insb mov arpl jecxz adc in sub pop or jp pop notb sbbl out js rorl cmpsb dec imul popf add and or mov movsl add das push xorl mov mov and or mov ss and (bad) cmp pop pop xor fistpl insl addr16 xor dec dec xchg mov push cld mov jmp insb cli shr and stc ljmp out faddl movsl inc pusha testb inc push mov mov test das pop push dec add leave xchg fs sbb test les subb (bad) mov jmp imul sub jle mov js lock mov stos hlt leave sbb mov insb mov popa je test nop adc lods (bad) neg in push int mov (bad) cmpsl mov pop in inc mov sbb clc cs jp lahf (bad) fdivl insl cmp bound fdivs or add out and jge xlat insb cmc pop cld and and jle cltd fs mov js add add int3 pop mov iret push jecxz test and mov cmpsb push subb sub cmc scas inc aad pop popf cli popf lcall daa mov mov negb cmpsl (bad) loope int3 test push aad or inc arpl jb enter repz movsl adc (bad) flds inc jo pop jbe mov jecxz xchg outsb mov inc push cltd popl loopne insb jae ret sbb sbb cmpsl jne cmp jns inc mov add out sbb daa aas xchg cmp repz ja divb jp jne,pn arpl pushf add adc mov and test sub repz mov ss adc or jo lahf add mov popa in sbb mov xorl mov mov adc ret sub inc aam jo mov je mov jmp add cmp adc bound push inc push add push pop (bad) into xchg xchg jb add fstpt add and (bad) jns repz je dec push adc sti ss or cmp xor loop stos lock and sub sti pop inc ja test sub dec fadd jno add sbb push cmp sub sub xor xchg cmp jb aam ja adc or lods nop ljmp add add push (bad) dec or cmp test mov mov into lcall push dec mov jecxz pop pop inc andl mov jmp mov jno pop jae cmp jbe mov add adc pop aas icebp test loop push xchg in inc cmp push stos sub int mov subb cs ret push adc out iret (bad) mov pop lods iret and cmp xor cmp ljmp fs cs xchg xchg lcall fisubrl (bad) xor (bad) movsb jo cwtl (bad) mov arpl push cmp sub mov fs cmp pop out ljmp scas jg sub rorb jecxz loopne pop imul push ret cmp cld es sub pop and xor cmp inc std pop js xchg stc faddl lock (bad) repnz int pop dec lret inc outsb mov mov je out rcll xor sbb dec repz ficom mov ffree (bad) mov test inc imul add xchg fmull cmp ret push insb test push adc or mov mov fcoms xor aas or inc rorb lahf jg aaa pop scas pop or int jle cmpsb mov cwtl ret mov dec lods mov mov push jno sbb sbb jns daa stos push dec insl lahf sub lahf sbb stc ret das in aam popf (bad) mov sbb push xchg mov sub xchg xor arpl xor test mov aaa sub mov cltd out (bad) fsub les sbb insb xor clc xchg dec shrb pop mov ror cltd dec push loop adc push mov xchg (bad) aaa std inc mov xchg outsl arpl xchg push mov (bad) lret xor test mov lock fdivrs adcl pop imul rorb int inc daa pop roll or in xchg pop xchg sub rcll mov out cmp test adc lret add cs ret xchg adc cmc fiadd movb cmpl mov movsl out mov out orl test nop xor jg sbb fimul imul mov int sbb cli loop xor or in mov in inc inc cli in push es xchg mov call out or add jo xchg test (bad) push pop int stc lcall push nop pop iret in dec mov loop mov fisttpll mov out jle scas ja push rep je (bad) mov jbe lret push mov xchg sbb sti out rolb inc and push cmp mov stos fs outsb data16 (bad) adc adc test jmp (bad) aam push (bad) ficomp inc mov cmp repnz adcb push mov push mov fwait mov fs cmp mov cwtl aaa push es xchg inc dec movsl push lret addr16 mov pop inc add sbb fldl in test repnz jl xlat das cmp rcr out adc push sub popf dec and jbe jp rcrl fsts jle es pop pop or lret or pop pushf jae xlat adc sbb nop fdivrl mov repz add aam add rcr lret mov push xor xchg pop fadds cmp xchg sbb ret leave jp or mov or movsb mov xchg pop cmp add inc dec test cmp pop push push fmuls add loope xchg stos ret stos adc in push aad mov lahf push maskmovq imull mov mov xchg fs popf pop mov movsb mov inc push stos mov xor loope stos pop and mov sbb xor cli mov mov jns inc hlt pop cmc movsb push xchg xchg cmp ss popa outsb js loop inc sarb pop cmc dec sbb repz inc push mov jb pop jne cmp adc into xchg inc sbb rolb inc xor int3 dec mov mov fwait test push mov aam push cs outsb and outsl cwtl aad push lock mov xchg and push out mov mov (bad) outsb push movsb mov pushf xchg jns mov out scas das cmp jbe fmuls in pop stos cmp mov les adc jb mov adc add jg (bad) jmp cmp in popf jo jns add cld mov push xor dec clc mov nop dec jbe push fisttp inc sbb out pusha out fisttpl sbb aad das ljmp xor jge adc adc imul sahf push mov lcall bound cmp jp repnz test cmpsb inc cmp (bad) loopne mov xchg xor das cmp mov sbb int3 xlat insb dec jmp push inc lods jno fbld lahf inc loope gs negl adc lcall jp sarb mov movl dec mov dec inc les mov add push lock push xchg (bad) mov sub repnz sub (bad) in sbb js mov pop fwait adc add sub cli push loop js loop dec pop jb shrb sbb mov adc xchg test fsts out inc sbb pop inc inc or mov jbe aam pop mov pusha xchg into neg jge mov adc jecxz bound mov nop inc and loop or push jge imul cltd pop nop mov xchg cmp mov mov push xchg mov mov mov xchg push into push insb mov and jge pop fmuls pop mov mov xchg and aas icebp jns rclb mov dec sbb jae leave (bad) mov sub adc outsl lret push cmpsb lods or mov cld push cltd mov movsl leave add lods push xor cld push cmc jecxz lcall fiaddl out xchg pop push repnz lea ror into dec sub (bad) leave or mov jb int3 adc in add and bound push xchg icebp (bad) or enter xor sti testb cmp push xor sti adc jne jb add push rolb ds cli insb les push int3 outsw sub clc mov xor inc jl mov dec cs cld lret and dec and jnp xchg (bad) cmc inc cmpsl jnp jns (bad) icebp out insb inc cvttps2pi es lret cmp (bad) pop dec cmp lret jg stos std xchg ds inc add cmp ret out mov mov ljmp jmp out push lods je sub ret cmp mov cmc in stos je adc lret push mov or in iret mov push dec aas loop dec pop inc mov jp mov test scas jns sbb (bad) cld repnz rorb dec cli enter sti push negb (bad) mov out cmc add jae imul or imul cmp test dec jl cwtl ss dec pop jl sbb mov xchg test sbb inc stc lods loop or jl jae dec sub mov (bad) adc fcom mov rcl mov fsts iret sahf add add dec lods push mov xor lods inc sub inc dec mov jnp daa cld mov or pop int3 add mov inc pop sahf dec lret xlat cs lret adc add mov mov mov jp das mov mov sub (bad) das sub adc in popf push xor adc jno roll scas pop or push cmp popf mov or xor test push sub sahf pop add out pushf push test fsub jge (bad) stc jl scas mov mov sbb mov test dec jae jbe jne fwait pop sub adc jbe xor gs dec sahf popa ss pop cmp xor mov jb sbb lock aas mov sub icebp add pop jp jmp push dec mov cmp sbb mov out xchg jp nop xchg adc push test jbe jg roll addr16 xor add push fwait ds clc and pop xchg loope dec dec xchg icebp insl adc dec adc pop xchg insl test pop or adc orb fwait jno dec test popa int3 aad addr16 out and jecxz or push sub cmpsl sbb mov stos insb addr16 insb dec enter add dec imulw add push and pop mov scas or data16 push inc sbb inc pop inc shlb inc stos stos xor fisubrl add loop mov and inc loope xchg (bad) fcmovnbe fdivs xor xor fidivl mov ljmp cltd shrb push pop cli lahf sar inc jb jg imull int push cli cmc movsl mov aam sub lds (bad) or and mov add push in repnz sbb scas mov test ljmp sub ret pop adc jae in insb scas movl cmp jp pop imul cmpsb fwait (bad) lret jg aas imul sarb out ja out xchg int jo mov push out xchg stos add ret popa pop pop dec sub mov fidivl mov jo je cmp lock fidivrl push xchg outsb std pushf js xor mov sarb mov out xchg cmp xor shrl and repz (bad) stc ljmp test in push lcall mov mov sbb stc adc adc out subb sbb mov (bad) jmp adc mov je push daa test lods fnsave mov add push ficom jb out jle dec fstpt dec sub scas push notb loop cmp les add test addr16 cmpsl fs in and pop pop ror sarl sbb nop je punpckldq jno xchg lods test and mov outsb dec mull push outsb in mov inc frstor pop fcompl mov (bad) out mov std xor addr16 lahf or xchg lods fcomip and out notl maxps pop ljmp mov add inc and das jl sub pop push out xlat in xlat addr16 or add cmp and fidivr jg dec push or addb cmp cltd push or xchg add mov lahf jmp test jp cld outsl mov jg cmp pop shlb ret (bad) mov and mov aas test dec in mov bound lahf (bad) or xchg loop stos popa cmp cmp push mov pop insl cmp pop and and jae adc jmp jns imul (bad) mov sub cltd cmp mov jo cltd rcrl call call fistp xor mov pushf (bad) jmp fcmovnu xor adc jge or sub pop xor jb mov xchg or fwait sub pop leave cmp mov add cmp dec sti loope out dec in jmp mov add xor xchg (bad) (bad) repnz inc xor mov jo pop cmpsb dec pop (bad) je scas insl out rorl stc out pushf and repnz arpl jmp sbb jo mov jbe add inc adc pop rcl xor in mov fcomps and mov xchg jb,pn fdivl mov push mov loop mov dec mov (bad) mov iret cmp sub pop int cmp movb or sub adc sbb dec pushf cmp sub and sbb mov and mov call add mov mov xorl mov lods add mov mov cmp out aas mov sub mov dec test dec aas mov les pop out rcll aam or mov adc dec or js inc add out push pop int cmp pusha jge xor gs ja pop jae movsl mov pop push test aad addr16 (bad) or inc shlb popf mov in xchg pop out sarb adc sub jo ds adc mov jecxz (bad) dec inc incl pop stos fwait xlat xchg imul sub hlt out xchg push cwtl xchg mov xchg xor or iret sahf addl mov out les adc inc mov push jle stos dec inc push push cmp out push jbe gs cs pushf jo icebp or mov pop outsl sub sub (bad) add or mov push in mov pop js leave notl into sub lcall lock cld mov and jg ljmp adc xor cmc rorl rclb icebp lods add cld push lcall add jbe push loopne rorb push outsl and aaa (bad) mov mov and mov icebp cli call cmp rolb or es mov inc xor sbb mov es scas xchg fsts aad push lret outsl mov push arpl pop int mov cmp ret stc inc xchg push daa daa sbb lea inc cli xchg cltd xor (bad) fdivrs lds pop ficom mov or cmp loop push xlat loopne push insl add hlt mov mov sahf mov mov enter adc lret les frstor xor dec xchg sbb imul xchg (bad) (bad) movsb data16 push (bad) mov std xor in adcl add pop (bad) or aam mov xchg insb dec lods imul lret or cmc inc fwait mov cld and imul ror push mov xor loop ljmp das in pop (bad) (bad) xor stos into std ret out scas jp leave test neg mov or sti jp lods loopne fnsetpm(287 enter imul aas pop or jecxz push and shrl icebp enter adc inc xchg or aas enter ljmp repnz mov das (bad) push lds mov test and in imul xlat jge pop out xor cltd and and call jo pop mov xor js mov (bad) repnz aam jle rclb inc jb and movsl xchg mov aad ja jae rorl lret divl dec inc nop arpl dec xor and repz cmp loope in sbb lea mov fnstsw cmp dec test repnz into repnz sub and add push stos sbb sbb out roll add stos push into test arpl in movsl aad or jnp lea in aad das mov loope xor and xchg repnz lock push pop mov mov xor mov mov adc in lret lods ret rcrl dec jb or xchg fs outsl pop cmp loope sub jbe jae outsl xor ret xchg cmpsb inc and xor push pop xchg aas xchg sti push mov test out dec sbb scas xchg scas ljmp mov outsl push jmp sub cmp (bad) cld mov dec mov pop jl fisubr js pop int xor repnz stos mov jl inc notb cmp mov mov movsl pop das sub ret iret mov push std dec in popa loopne mov or sti sub dec aas mov out xchg lea or lods cli (bad) cld inc sub leave (bad) lret dec pop hlt arpl mov imul mul (bad) inc mov loop xor enter insb out test pop push iret adc in sbb or xchg lea sar int imul stos push sub xchg push ret (bad) js and in fcomps arpl inc cli iret adc in and std ljmp jns dec dec addl in xor mov nop sbb mov push mov inc movsb dec fs mov fidivrl xor dec outsl lods pop (bad) dec test inc repnz outsb mov (bad) cs sub call es sbb leave ss popa dec cwtl pop scas lods pushf dec ret adc icebp sub xchg popf loopne pusha push inc xchg or pushf push ds pop dec mov scas xor fisubrl leave iret das jne or in pop inc inc cmp mov sbb jle nop addr16 cli repnz push js or outsb sbbl fdivrl mov aad cmp adc mov popa mov inc test inc jl dec pop rorb ljmp pop fs stos xchg jbe mov pop push test xor test loop aas sub mov iretw int3 cs shll bound sbb (bad) fimul cmpxchg sub scas outsb mov sti push pop in movsl dec popa sub or arpl push jb in out fstpl or roll fidivl imul inc js (bad) je xor outsl shl mov adc ret mov cmp push ljmp xchg jo push jno (bad) mov dec dec mov js and lds push test push pop mov nop push (bad) ja jo loop add fsts divb push cmp fcoml addr16 add orl rep mov pop jo (bad) jl jnp adc push in cmpsb xchg sub sahf ret loop test cmc outsb xchg stos sbbl sbb inc std adc sub lock int3 pop in xlat xor add cmp cmpsl (bad) fldl sbb dec iret outsb aas add xlat sbb jo clc dec nop fidivr aaa lock add add scas jns add jg loopne push cwtl add popa fs fcomp sub stc cs outsl mov xlat lcall mov mov aaa leave lret add inc inc push xchg (bad) mov and xchg in cmpsb inc add lret jb pusha (bad) cli leave pushf xor sti icebp pop fbstp mov les rolb test outsb push push jecxz repnz mov mov out lcall ret (bad) push mov mov mov add mov loopne cmp push add ficom arpl sahf popf lods fiadd cltd mov mov adc and add data16 cmpsl les cmp xchg xchg sbb repnz sub ret push dec jmp push outsb cld (bad) hlt and cld out sub outsb frstor in test jecxz dec xchg or stos xor hlt push gs sahf sbb flds jle idiv aas imul arpl outsb jle cmp mov mov sti dec cmp addr16 mov sbb int3 int call cwtl mov push cmp insl mov (bad) pop mov ljmp mov pop lret mov std cmpsl jb,pt push sub pop insl lahf pop iret fidivl in aas and or mov ss out lahf ret rcrl rcl mov sahf mull int sbbb jecxz xor xchg pop mov inc leave int3 leave push xchg sbb dec adc dec and cmp je pop adc mov mov das std cs aad push push push inc push jns test mov int3 jmp push sbb jae enter and push test push enter push je ss fisub shrl fadd dec pop call movsl int3 inc add inc push mov mov and push push jle or add aaa push call lcall (bad) test mov jb adc mov dec mov fldcw mov push mov ret std outsl in daa xchg cmp int lea jo dec in push mov scas cmp push mov push repnz dec mov in jns sbb pop out jno sbb jae outsb push dec push (bad) test pop xchg js xor cmp inc and mov subl sbb out out js cmp xor js or or jbe mov dec lret mov (bad) ds fs and or (bad) aas shll push and pop push (bad) ret sbb or xor movsl push xchg push inc pop (bad) jg (bad) std pop mov inc mov fstp movsl ficoml insl fwait shlb jmp sbb cmp rol mov push (bad) nop dec sbb lcall mov mov outsl or fistpl mov enter mov scas out inc loop loopne aam nop or mov dec cmp shld js (bad) add pop and lahf popf mov in xlat mov or fsubrs (bad) jno xchg dec sar stos scas and fmulp sbb jmp xchg mov loop pop mov jno adc fcomps push mov je jmp sub int3 imul sub inc mov dec xor fisubl push repnz mov lds int3 cmp push sbb pop sbb dec pop stos and movb jg mov pop sti sub jmp mov cmp lret insb bnd fimull dec repnz adc mov push out insl jecxz jnp pop jnp xor sub ss (bad) xchg iret xchg fstpl test ret inc or lods push call dec dec pop sti adc push aas inc adc adcb cmpsb pop pop aas outsb lods adc fisubl adc negl lret gs sarl jno lret (bad) pop enter ljmp xchg jp je imul or (bad) stc lds fsubs sbb repz stos stos ljmp push cld dec fsubp xchg stos sub insl mov bound mov fsubr xchg stos lea push sbb xor push mov adc (bad) push push in adc xchg push std insb sahf lret into (bad) jmp movb sub in aas sbbl or testb push iret push cld outsl scas adc jnp inc fistpl sbb dec jl addr16 inc mov fist xchg mov es sti js loop cmc jno cmpsl mov push pushf pop outsb jl iret jge dec cmpsl daa call mov insb ja mov in or inc pushf stc icebp inc lea (bad) test outsl (bad) jmp or dec jbe inc dec into out rcl aad dec xor push push iret cmp (bad) pmuludq int out or add mov xchg cltd xchg arpl push add cltd and pop into xchg sahf dec and call ret or loopne leave pushf pop inc dec sbb frstor jnp int3 pop or loopne (bad) sbb popa and mov das cmp mov pop cmp adc dec add fsubrs mov mov mov mov xchg inc pop add xchg xor das xlat or inc or mov push mov add jg scas cltd xchg adc movsl xlat dec mov mov insl and xor nop ja mov adc xchg push ljmp sbb push jo jge dec dec movsl xor fldenv jb or push int3 jg fwait rol addr16 sbb mov test loopne scas mov xchg cmp pop cmpsl inc and sub add cltd data16 xchg push push outsb xchg ss push xchg mov cmpsb sub push fsubrl test pop aas add or rolb inc in jmp sbb mov int3 jbe jg lds out push js mov push push xchg pop idivl push xchg jne jmp pop movsb mov std mov adc sbb aad imull mov repz pop lods mov sahf push lahf sub std or vhaddpd stos mov cwtl data16 pushl mov int in ss call pop add jmp dec fmuls cmc jmp cmp add outsb mov and jge push mov ds gs lock fdivl lock nop xchg cli loopne inc cmp push popf in mov pop cwtl sbb mov mov pop test movsb xor ror sbb mov dec cmp push mov es or mov sar push les or xchg cwtl mov pop in xchg or push (bad) push cmpsb dec sub pop add sbb nop test cli xchg ret and push push xlat jb ret cmp mov mov ficoml fmuls in xor inc cmp (bad) pop or aad test cwtl popf xor mov test insb cmp mov es fnstenv mov cwtl xor mov mov mov push scas cwtl sti rcrl out popa test cld push inc cmp stos cmp arpl xorl pop bound jle lods mov repnz mov stos iret (bad) int test jge fwait lds (bad) repz xchg or inc push sub call out ja in int3 or sub nop call mov mov inc enter cmp mov lahf xor ret aad fistp repnz mov scas mov aad or fnstcw push ss rcrb mov loope andb scas incb test and xchg clc cmp sub int3 scas iret loopne (bad) icebp xchg scas in in cmp add or lods fs cmpsl jp shll daa jns sbb popa mov lods jmp mov arpl jle dec test xchg mov or orl aad scas lcall xchg dec push roll frstor gs roll jmp das lods ja ds mov push xor jno aas idivl and add xchg popl and out data16 cmc inc push inc mov jmp pushf stc inc mov adc push stos sbb neg cvtpi2ps bound fstpt jnp add testl cmp xchg jno test jmp cmpsb outsb and adc nop rorb call je (bad) and jbe repnz arpl fildll in sub movsl pop stc adc cmp push call xor sub jg fisttp test mov mull dec mov sub lods mov int pop out dec mul inc inc jb enter mov arpl (bad) xor mov xor mov push add gs (bad) jp jns pop popf dec (bad) cmp mov out (bad) jne iret (bad) cltd mov cld mov cmpl insb bound pop pop test or adc and daa adcl test arpl sub adc sub mov je enter js xchg jbe int sub movsl loop sahf (bad) push push fsubrl cmp sahf outsb cmp push xor ret lret push jae add inc and sarl inc jno popf cmp fldcw (bad) cld rcll jb sbb out fcompl loop fidivrl mov mov jp fwait arpl inc mov fstpl stos pop and mov dec fwait pop into jl xor lahf mov mov icebp pop and fsts out or (bad) xchg lds mov adc (bad) or or aaa stc push cwtl push imull jns and jae daa add or push dec loope or ret mov icebp fs jnp cmp insl lahf push jle dec cmp jle push mov aas xchg add adc or mov outsl cmp mov mov pop repnz daa pop jg fist mov push xor xor jo xchg (bad) mov jge inc movsl or icebp mov xor lea rcll lods dec xchg push sub sbb mov loope (bad) and add cwtl lcall imul lock cmpsl fstps jae or outsb push in mov int3 dec push adc movsl fimull (bad) xor out mov adc jle rolb push hlt ficom pushf and pop jle and cmp jmp lods dec test mov pop js xchg icebp lea jge aas fistpll test shl add push cs add test xlat pop mov xchg jo sbb nop cmc cmp icebp out jmp insb lds jle push std insl or (bad) cwtl lock out cld mov and cmp and push jp xchg jae ret pop cmp add push leave pop in push stc pop mov ret out sbb pushw dec in mov (bad) out adc adc fwait sbb xor fistp loop popa andl jns clc loopne fwait or mov xor xlat mov mov push cmpsl add shll or pop mov push aam lea jo (bad) rolb xchg and in sbb mov (bad) pop xor and dec fmul and jbe mov je dec stos enter sbb sti lea fs mov or into (bad) inc push ret mov ljmp js leave dec out inc rorl les inc push adc and dec mov icebp adc test inc jo add clc insb pop sarl push hlt push lock std xchg push les push mov lcall rorl movsb mov lods imul rolb add repz mov sbb add test stos gs jl and sbb pop cwtl mov dec cmp add push popf pop das sub push shrl dec arpl fwait mov mov inc dec data16 fstl repz push xlat test scas xor jle mov pop jns push neg dec mov pop loop mov mov xchg loop add adc xlat push int3 mov pushf leave mov in sbb sub mov pop sahf pop xchg pop push xchg ds push and inc push imul sub shrl shll sahf jnp and jns lahf or movsb mov push pop sub mov roll mov mov inc mov cmc mov jge or push out pop arpl subl nop stos in adc inc dec jnp ja and inc mov cmp mov mov jp mov shl mov fldcw hlt rorb (bad) int in outsl xchg xor xor lods dec jnp mov push loopne mov orb sub movsl test or cmp and inc sbbl push cwtl out neg mov cmp pop pop cld popa fcmovnbe mov enter xor mov stos xchg fs imul cmpsl lea mov stc push imul fwait pusha mov jecxz mov pop insl int pop ds sahf dec movl or gs push dec out (bad) pop and adc cltd je mov popa mov jge jbe aam call rcll ror or lret jl add mov shl stos sbb xchg loope xchg cltd sub xchg cmpsl jle out adc dec data16 aaa sub mov jmp push xchg pop dec mov ret notl sarl js movsb pushf cli mov or outsb cwtl cld (bad) fdivr push add leave add and les insl (bad) sahf cmp imul add push cmp xchg cmp repnz std push and add (bad) sub push lods or xchg rclb jp cmpsb or dec test sub je call and movsl cmpsb movsl mov pop dec push sub bound push adc sbb fiaddl lock pop fisubr xchg mov adc scas test dec mov sbb xor aaa mov (bad) push jno and push leave xchg in jae or out mov inc xchg xchg and cmpsl enter xchg int3 jecxz fbld mov add xor jge and iret cmp sbbl xor sub pop add sub scas std dec xor jbe push loop icebp adc push lock outsb add push shrb jl hlt and aam pusha (bad) and push mov es fs mov pushl fmull pop jbe mov xchg (bad) into js adc out xlat inc add or push loopne cli dec inc dec mov fisubl outsl dec clc cmpsb cmp pop enter push imul enter mov pushf inc jne cltd fcoml aas and mov sarl (bad) adc enter nop cmp decb aad fwait add or adcl add xchg mov inc sub inc arpl rclb add into pop sub sub call mov pushf mov push cltd jb push subl in rorl jge out out push enter jl sub inc cmpsl (bad) mov mov (bad) push mov pop sub or dec dec repnz sbb mov imul push pop push cmp insl push arpl and imul xchg js in xchg jmp mov or js xor (bad) shr sub daa js jb mov mov insb fbld cld mov inc or push ret rol rorl mov pop mov rolb (bad) loope pop cltd xchg xchg popf outsb js pop movlps mov push shrl mov pop pop sbb popf loopne fs lods outsb inc and pop push push cmp jnp ljmp lock lret int out nop popa push testl xchg sbb inc sbb pop in adc or mov or gs test leave (bad) test loop push daa xor xchg xor je js adc or int setg (bad) jo call mov sub adc lods push add jae fnop aaa dec gs andb iret pop imul adc sbb hlt fwait cmpsl pop push xlat (bad) iret jmp outsl fstpl sub leave sarl xchg mov xlat je jno enter inc (bad) xchg xchg fwait scas shlb test xor sbb out sub outsl push aaa push xor je fcoml daa lcall push push sar rclb jo mov and and jmp mov or aaa lods and sub adc adc xchg adc and inc pop jbe adc dec mov rcl xchg xchg inc iret inc sub ja and andl cmp or push cmpsl inc add icebp mov in cmpsl mov sbb dec lahf fbstp jno leave dec push fdivs xchg rorl out jnp and jne testl and jmp test jo dec push dec fstps negb cmp or imulb dec gs sub dec push lds stos dec mov mov push xor xchg je and mov jl add mov test mov shlb rclb sub xchg add ror push jne lahf fidiv (bad) mov and mov adc xchg in hlt adc cmpsb pop mov cs push fiadd imul mov scas xor cmp push or inc or xchg (bad) and and cmp out mov aaa pop dec mov dec dec daa dec addr16 pop pop mov ja adc mov jae push ret jo (bad) negb js or ror xchg repz ds or les cwtl jno pop push stos jmp aaa aaa mov mov arpl xchg mov pop mov sarb adc xor stos dec xchg fistl jl neg out adc dec mov dec adcb hlt mov mov xchg loopne testb or testb mov push jecxz movsb aas xchg stc (bad) aaa mov mov mov scas or add xor lahf gs hlt and into adc ret pop add xor push fild (bad) jl es movsl out mov aam xchg add mov mov sbb inc add jp mov popf mov scas test ficom int loope lret jbe in negb cmpsb icebp xor (bad) fiadd xor push popf push pop into mov push mov mov (bad) icebp sub mov outsl pop ss (bad) xchg adc fs out je (bad) leave pop rcr mov jae add mov sub pause sahf and rcrb fsubrs je mov or ds inc ret xchg imul inc mov fchs cs rcrb sarb mov xor ret rol in out jmp lods es inc add push xorl mov add push or nop dec cli popf dec out or push fstl nop and and iret (bad) int mov and xchg xchg cmp or gs (bad) adc out xchg and in lret sub mov test inc roll ja scas jl pusha and push lret jae leave inc dec jns rorl jb int cltd aas jle push decl mov mov dec dec push aaa pushf xchg addr16 in test cmpsb fnstenv ja mov ret xchg cmp adc jo cmp xor xchg sub xchg int ljmp or lahf popl dec les dec (bad) sub dec adc (bad) ljmp sahf insl loop push mov ljmp nop js aaa pop frstor and int3 stos mov add roll je fistl je sbb dec stos nop jno jb cmp add orl jb dec fistp pop add sbb jb pop pop addl mov xchg aas icebp fildl cmp test repnz mov cmp inc jg movsl lahf fs bound pushf xor lcall fsubr pusha dec jle adc dec adc cmp popf pop pop es addl loop outsl sbb pop push xor sbb push or pop jg dec mov mov icebp test inc mov mov mov test jno add push push adc orl imul fidivl or mov pop mov lcall std rol sub stos test fcomps adc sbb push push out inc int3 dec jno in iret rcll inc iret lret mov cmp negl repz xor sbb mov mov add aaa ret sub sbb and rcrl orl add xchg xor fnop jge aas fstpl sbb pop rorb xor add fisttpl push dec add lahf pushf mov push jmp (bad) out sbb sbb sbb mov push push outsb pop cmp jae clc icebp loope and fistl jg cmpsb out (bad) cmp addb addr16 dec loop (bad) ljmp js (bad) adc lea dec addr16 pop int cmp movsb call insl mov jl dec lds cld xorl (bad) jno jge add push jo les jp call sub rcrb add aas jmp ret test cmp jmp aaa jb inc repnz add sahf xchg out add arpl xchg fsubl xor xor mov dec test cmpsl loop fisub (bad) mov dec outsb jo xchg mov test pushf jbe (bad) ja call cmpsl vmovaps mov mov into sahf sahf mov push add add jl inc xchg sbb pop scas add pop idivl negb js add dec orl xchg fstpt and call xor je test adc sahf pusha cs adc std and outsb cs xlat and loopne pop jbe in sbb inc sbb xor mov cmpsl int or mov mov jnp inc adc xlat adc (bad) mov jne adc sub mov jae lods xchg loopne rclb lcall stc and popf push dec push (bad) pop sti sarb inc testl dec fmuls nop pop pop adc (bad) push out int or jae mov jp pop xor push add das cmpsb or mov dec xchg shl jmp cld cmp ret div mov mov push xchg sub cld xchg out ret xchg mov insb outsl sbb inc mull push frstor cwtl or aam inc mov adc mov (bad) inc lods pop or inc in rorb loope cli jo,pn cmc mov aas rolb and test pop and ret sbb mov dec fucom bndldx jecxz out mov and mov les add jecxz sub mov push mov sbb jne insl scas ljmp mov jecxz xchg mov in pop mov cmpsl aas icebp popa jne sbb mov sahf call loop mov subl cld imul inc lods xchg jg rcrb pop fnstcw lret jle mov and inc jmp ss pop push xor mov fcom add insl jo inc or popf mov push cs in roll inc fucompp loopne lock insl orl adc outsb mov lcall pusha fdivrl cmpsl inc dec push cmp inc ja fcomp aas (bad) or add addr16 push jae pop imul rcr add inc shrl clc inc rol fsubs sub mov and idivb xor in jl outsb int jns ret fidiv pusha inc mov jle pushl loopne push jle icebp mov cmp fildll popa pop je and dec fucom pop std xlat (bad) xor fsubrs mul mov or out je mov xchg cltd or adc sbb dec dec ss adc or xchg add xchg call cld cltd inc xchg lea push jbe cmp jl mov enter sahf dec testb xchg xor imulb cmc push data16 popa cmovne je dec cwtl and sbb mov popa sahf dec (bad) (bad) fnstenv mov aad pop pop and mov fbstp ret inc stos lds jne pop mov jno mov adc lcall mov in mov push xorb insb movsb pop adc push out gs gs pop add out jb jl jecxz dec jmp pop fldenv aam mov dec mov outsl jno add gs je xchg mov inc and pop lods xchg in std fwait sbb in call mov std in jae dec sbb xor xchg sti gs aas fcomps out inc and sub lock and inc pop cmc loopne adc fs fildll sbb cmpsb jge or fidivr mov mov (bad) dec xchg (bad) and insb and cmp mov fmull int icebp push movsb test (bad) jnp data16 add mov mov les inc dec out addr16 dec mov aam stc add xchg in popa out sub rclb negb pusha jmp xor adc mov dec outsl sbb popa call fimull lret test sbb and jmp popf ss lret sti data16 fsubs pop popf cmp rcll push and daa mov idivb xor jmp fsubrl mov ficompl mov insl sbb push pop jno sub sub xor leave pavgb hlt jg scas or inc (bad) mov rorl into sbb pop shrb in dec mov or test pop xchg int3 inc sti sub push inc jmp sub shlb cli scas inc adc mov mov jne or and xor jo pop imul pop (bad) stc jl cmp (bad) div and inc mov ficompl inc sub out aaa (bad) or repnz aad out scas xchg sub xchg inc js dec loopne mov loopne inc gs lret loopne shll jmp dec xor iret sub aaa mov sbb sbb xor dec test loope enter inc stos mov mov sar pop out int call push inc inc sub movl (bad) or inc mov fldenv enter lcall enter push pop (bad) inc in imul int cld popa mov aad or xchg pop inc mov test fldcw and ret je mov dec leave dec mov jae testb iret bound jg push pop pushf mov scas push das mov movsl cmp loopne scas fs cltd outsl pop test jmp mov adcl lret mov adc inc test pop lods mov cmp mov and aad dec (bad) sahf push movsb clc jnp jno loop repnz loop mov cmc xchg pushl test inc xchg or jge dec xchg xchg mov in cmc aam and add mov jne push push mov sub loop cld pop mov (bad) hlt dec lcall lcall movsl icebp inc out sbb les mov push (bad) rcl mov out icebp mov scas stos pop hlt inc insb cs mov (bad) enter outsl inc andl cmpsl cld insl stos add mov mov xchg sbb push xchg lods xlat fidiv mov dec jne xor sbb xor push out push outsl in (bad) push lret xor rclb push inc sub pop mov xchg jge sbb jmp xchg into add out cmp adc xor outsl xchg fwait and int mov sbb jne or add push push adc sbb sub popf in insl xchg mov push (bad) cmp mov dec inc jecxz push stc mov jmp popf enter cwtl lcall mov pop movsb jb (bad) divb inc lods movsb sbb jp pop imul das mov loope jns into jae pop and jmp mov pop mov stos cwtl dec fnstcw in mov cmpsb dec xor jp push das movsl sub jne test les adc add pushf lods mov xchg daa aam mov into push adc repnz movsl push inc es jl or pop cmp (bad) and (bad) cmpsl jmp (bad) dec popf jp aad fcmove aas push xchg dec push add mov mov (bad) pop mov cs scas addr16 mov sbb nop fcomps movsb ds idiv lret pop xlat fdivl mov je lods lods imul movsl inc cmpb lcall or pushl jmp insl cmp push mov push test aas cmc out adc mov fadds mov push add xor je cmc sbb and cmc inc mov cmp es rcr and cmp mov std push xchg movsb pop push adc (bad) enter jmp mov mov lods bound lcall mov push xor xor test push pop or dec mov int aas sbb iret pushf roll mov je imul add lods xor scas cs inc cwtl pop inc fistp sub xchg dec jo cmp xlat fs mov roll imul push xacquire popf pop mov rcr fiaddl outsb and sub adc mov jns or adc inc popf jnp ljmp cli clc lock push inc outsb jg lret daa ljmp pop (bad) mov (bad) xchg sbb scas jbe adc outsb inc notb mov sahf and int jl xchg (bad) aam aam dec xchg cmpsb or addr16 push loope rcl pop enter sbb negl mov movsl movsb sub pop int3 movsl inc jnp (bad) into ret adc mov mov dec sti xor (bad) mov sbb int3 pop (bad) lock lahf jl cmp insb sub mov mov imul inc lods mov jle inc pop add insb push mov mov push push inc mov mov cli adcb mov mov fsubrl mov push inc dec or jp mov popf mov (bad) repnz dec aad dec sbb in mov sti es mov nop mov dec sub pop movsl loope lret xor sub or jp dec jl pop pusha push cld movsl mov pop in push mov jge pushaw xchg sti pop and rolb xor xor adc jmp mov shrb sahf loop pop push sub sbb std insl xor es gs in sbb mov (bad) cmpsb jno dec sbb mov and or mov mov cld in pop inc (bad) bound clc inc lcall int3 or jne (bad) iret (bad) push test cmp in mov int3 xor dec rcll xor insb gs xor les pop mov cld dec add dec pushf mov push push ficompl mov cmc push jp push vunpckhps add add add add cmp fisubrl sbb repz loop hlt and subl pop mov mov hlt mov push mov imul pop lds push and je adc sbb sbb pop rcll mov mov dec mov data16 mov into cmp and and xchg pop inc shlb loope mov popa pop nop cmpsb inc jg or cmp jno pusha jbe pop sub jne,pt fildl loope lcall sbb push and (bad) or test push pop mov cmp ja nop dec mov nop cli fisttp loope add pusha sbb lret and je pop jle arpl add inc icebp (bad) inc dec (bad) iret stos or je ljmp movsl leave mov test cli mov int3 adc pop jecxz mov xor xchg add add jne cmp add pop (bad) call xchg jg inc into rclb jne or xor sbb push jne mov aad jmp cltd inc cmp in sbb lea divl addb test repnz cs cmp mov push pop (bad) jge or mov mov mov mov and xchg push movsb out mulb jg test inc mov mov inc sbb std and mov lcall xchg mov sub xlat xchg mov and mov insb push fildll xchg pop add or push pop cmp mov push pop aaa inc mov cltd pop stos jb inc pusha scas jge ret (bad) mov jmp lock (bad) push xor loope mov xchg jb cmp loope lods cmp add push xchg dec inc out test pop ret test lock mov sub dec inc cmp mov dec cmpsb add add sub inc inc adc cmp mov push adc aaa mov cmpb js fildl mov mov popa mov sar mov sahf notl adc (bad) cmp mov dec test xchg in or jg dec mov enter sahf fiadd dec or (bad) cmp push repz mov xchg into test das pop inc pop (bad) sub pop cmpsb dec aam test fistpl push nop jns loop adc adc cltd out ja mov stos fwait (bad) clc push loop (bad) flds adc push movsb out xchg xchg inc ficom mov into jle inc add jp ljmp pushf repnz adc push cmp inc sbb mov lods (bad) enter sub pushf jmp div (bad) fadds jo call stos sub sbb pusha imul sub add iret fwait push push mov pop dec das jg jne jle and andl rcrb xor (bad) (bad) jo fwait push faddl aas sub movsl fadds mov xchg sbb loop repz and iret or in cmp dec test lds gs mov fimull push leave mov mov add mov lea scas iret pop push inc scas push je fbld jo cld push daa dec mov and xor jno jp jb ljmp lods fs pop mov ficomp or mov in outsl insl xor shr cli push jns enter pop icebp enter inc cmp test mov insb jmp ja (bad) push inc (bad) int cmp imul mov add lods pop inc popa inc mov in jmp lock loopne pusha or push pop push sti int stc inc out xchg andb out int push add movsl jp or inc popf leave pop xor in fwait daa in push fs dec lods cli inc mov or gs jl (bad) ljmp fild jb and push test cmp test mov xchg inc lock dec inc fs adc pop mov mov stos adc popa mov dec fildll les pop lret xchg leave cmpsb push sbb push in pop or sub ss xor pop xor mov ret shrb stc push das push adc or lret add stos sub mov push xor loope push ret imul repnz rcrl repz adc fstl scas inc push sbb pop pop push cwtl andb inc pusha les test jae fldl and xchg lret sbb popa pop scas or mov jp and iret pushf ljmp pop xadd or bswap mov (bad) sbb cld repnz xchg push stos mov imul imul mov out jnp clc pop mov sbb add hlt pop rcl push pusha test stc inc pop sub dec or pushf outsb mov mov push ret sub lret orl cltd ss (bad) jae cld lcall xchg mov add xchg imul dec nop pop pop fsubs jns or inc inc push lea in clc pop enter popf rcrb data16 scas add (bad) xchg inc call and mov add icebp cmp and lret je iret rcl push sarl adc sub mov add movsl jg mov inc xor cli cwtl pop push (bad) jecxz push mov mov jp daa aam and jle mov inc mov fadd cmp add jno jl data16 inc lahf cmp and mov mov xor mov or movsb mov fldcw fs mull lods jne adc push in xchg sbb dec fsubl mov jb ret inc pop (bad) (bad) sub movsb leave mov imul pop push xor xchg cmp push pop jle push sti loope out in push ret mov mov pop lret jae or nop inc jno gs popa xlat add ret insb mov xchg inc lret or imul notb dec cmp push pop orl dec ljmp add mov mov mov jns or jns jecxz dec mov mov in mov or xchg dec or mov std push pop dec (bad) mov mov fsubs insb fisubr mull lea push add xchg cmpsb fiaddl loop iret (bad) or pop es cltd iret test cmpsb mov add (bad) mov jp into imul cwtl fwait push add push cmc dec jge bound xor inc out sub pop add mov xchg cmp sbb loope scas mov (bad) mov mov lock orb mov iret std jle rcll lahf mov test pusha mov rcl ss iret loop (bad) cmp call scas jge in dec mov mov push xchg inc mov xchg lahf or ret movsl aad jo out daa arpl popf lret stos add es jle pop cmp insb jmp rcrb fs lods lods popf and xchg fcmovu sub sbb outsl ret cwtl pushf arpl test mov popf cld or sub dec xchg cmpsl cmp dec pop push lcall fisubl out call sub les int push sub mov xlat test lret call rclb dec arpl and mov adc push shlb jno loope cmpsb push xchg fstl sbb push xchg into jp in js scas xor sbb pusha mov inc or lock inc test and xchg popa dec and jbe stos inc adc sub aad jno divl adc mov aam cmp (bad) cmp sbb mov xchg xchg inc mov hlt inc xor or ss fstps je test (bad) mov cmp pop cwtl xchg adc popf int push lret dec adc cmp sub shlb push test das jo lds xchg mov mov (bad) push ss xor sbb test xchg pop push cltd cmp (bad) sti pushf jl mov dec inc push sub inc inc push test addl int3 lcall popa insb push scas aaa or sub imul push jg xchg mov dec popa mov jnp lods jge das dec mov rcll stos xor xchg arpl dec adc sbb pop data16 push push mov or iret (bad) mov movsb push sbb xor lret popf pop orb icebp push mov mov and or cs xchg xchg mov mov insl sarb out cli pop stc mov jl push sub mov add jp daa loop subl cmp lcall lret xchg insl mov cltd push adc mov push and mov xchg push in mov fs lcall xor cmovbe inc frstor dec cmp inc and sub mov call loopne jmp mov fcmovbe in cwtl mov push dec sbb (bad) and jmp push loope lods nop xchg in lret sbb pop dec stos push xor or push ret test and or or sbb jae mov sahf movsl mov dec mov or pop cmc ja xor arpl insb push xor sub or xor test adc movsl cmp ror lcall je dec test jg cmp fiaddl pusha jnp xchg lcall or sbb mov aas (bad) xchg icebp std sbb (bad) adc jg or movb mov vucomisd pop insb adc sbb mov fisubrl push aam mov or aad test sbb jg dec sub xchg lahf mov fisubl sbb andl sarb adc and mov test and negb test xor and mov cmp test mov sub iret and fisubl mov mov cmp pop inc push inc xor cwtl and pushf jbe,pt pop mov movsl mov icebp add dec cmpsl push pop cmc add cmp mov int push rolb xchg scas cmp (bad) sub xchg icebp pusha mov ss add xlat mov in or (bad) pop lds movsl add lret cli fbstp ret mov mov enter pop lock loope or ffreep mov push cld cmp shll xchg jnp ret mov mov aam sbb nop push test sub pop jnp mov inc ret shrl stc fldcw loopne push push (bad) insb inc add js sub push push push push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 rorl jns daa call pop jecxz fidivrl mov mov outsl clc sub mov gs or (bad) lea mov cmc shlb xor jge sahf mov lds lahf adc mov je push or cltd fwait out loope jge test mov aam mov push inc cmp aaa out aam push lds (bad) cmp or or bound xor loopne xlat lea in fisttpl jmp je pop xchg mov cmp cmp loopne aaa inc pusha hlt inc test stos jle icebp int3 mov pop out and cmpsl lea sbb arpl jbe mov mov adc xchg cmp xlat mov mov (bad) cmp es lods aaa fdivr lods lcall insl add xchg int lods add mov imul (bad) std dec cmp out or mov push shrb xchg sub loopne pushf adc dec ss adc insl mov loopne insb sub insb fsubp mov in in cmc out adc mov stos scas mov mov lret mov les cli and adc lods popa mov clc push into clc test shll jae pop sti sbb xchg inc dec les mov mov in push xchg rorb cmp push pop ret adc in or rcrb test movsb daa js xchg add pop fwait negl add xchg ret enter pop cmpl mov push inc cmp sbb xchg rclb and or inc dec adc addr16 jae mov cmpsl outsl (bad) cltd dec mov movsl movsl decl repz and repnz pop mov mulb sbb pop cmp iret pushf add iret sub rorb add mov test mov loop (bad) jae icebp mov ljmp adc lret lds insb inc psubw add sbb inc inc hlt sbb into sub dec or xchg out in ret jg lcall add jae cmovp sub push lret pop cmp stc test fldenv mov data16 pop push add mov jnp fstpt aad ret (bad) jb jg (bad) ja into cs aas jnp outsb leave cmc (bad) jo js sbb (bad) xor mov ja rorb mov push xor negl out mov inc sbb out or shrl out aaa adc pop mov xchg cs adc inc xchg pop sahf inc cli mov mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec dec in mulb jl stc (bad) fsubr js lahf bound dec xor dec push dec fwait xchg adc push stos stc mov das test jmp adc xor sbb push mov das lahf ret bound pusha and xor add (bad) jl and out jle ret and push mov and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 rorl jns daa call pop jecxz fidivrl mov mov outsl clc sub mov gs or (bad) lea mov add lods adc int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 rorl jns daa call pop jecxz fidivrl mov mov outsl clc sub mov gs or (bad) lea mov sub in inc mov ret js rorl mov call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 dec jne idivb lret icebp mov mov insb (bad) jne or lock stos pop outsl pop push mov mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or add inc cwtl cmp mov aam aas mov pop daa fwait sub icebp inc or sub (bad) push jp or ds lea mul dec add sahf ret pop mov mov jle icebp hlt pop add lret pusha jge test enter push xor xor cmp fs xor inc mov sub testb pop push or ds push subl xchg jl idiv cmp cmpsl addr16 test inc ret push arpl cli add mov jl (bad) xchg jecxz inc cmp jecxz pop pop dec jl popf test pop add ss insb cli fprem1 (bad) mov inc (bad) aam cmpsl push arpl dec in sub mov inc icebp lods lods mov mov jecxz mov outsb fcomp jns fdivrp jl or xchg inc es fucomi pop insb ret xchg pop cmp jecxz jae jecxz in in not bnd push out and jne call (bad) cltd mov enter (bad) push mov aad xor cld (bad) scas jbe pop sub or push and mov cmp jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov pop idivb lods sti repz sbb push dec shrb push pop divb add enter inc loopne jmp pop negb sbb cmp rorb mov loope divb sub jne hlt mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 dec dec in pop and pop or idivl lahf bound lcall or and and jl xor addr16 push sub inc inc mov movl movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec cmc nop in jge loope pop jle,pn push push loopne test add push jecxz movb mov fwait insl xchg inc pusha sub lods mov nop lods fdiv mov push mov das lahf ret and pop repz add lods shrb mov movsb test mov dec leave ror ss xor inc js jmp fwait add push cmp stos mov daa inc inc les sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or add mov mov push mov (bad) (bad) xchg movsb pop pop jb mov sbb (bad) lea mov cmc jp cmpsl inc popf xor sbb addr16 popa adc aas imul mov mov lods test mov icebp sbb fnstenv jne lods xor bound mov stos and inc in xchg int3 add jbe je test in cmp stos repz insl inc rorl jmp lods or mov mov mov mov stos xor xchg pop mov cmpsl xchg sub cmp fisubl lds sbb pop add cmc dec lods sti push ficoml mov lcall xchg adc aam push pop jl bound mov dec imulb leave clc xchg in mov sub add mov push sbb sub jecxz add ficomp mov push jecxz and pop sub inc das and xor push (bad) (bad) xchg dec mov jle lret sbb nop or and sbb leave and and or sarl out aam ret les outsl outsl hlt cld mov pop fnop push movsl enter hlt dec push sahf repnz and or mov lret sahf xchg sbb mov pop cld unpckhps push pushf pop jns cmp push insb push clc test movsl test sub mov or in push pop cmp jae shlb mov insb and adc (bad) mov xchg fisttp jle insb jb mov push or xlat in pop movsl iret add xor enter popf inc test dec mov pop mov mov mov fnop pushf or or push es and mov mov (bad) adc es iret jns fwait push int int3 loopne mov xor ret imul cmp notl repnz xchg jp mov rcrb aam xor or rorb rcll nop cwtl add or jb push ljmp dec or add cld andl and cmp inc inc std insl sub add xor in xor stos stc pop aas adc xchg mov or aaa shrl mov push sub sti inc repz adc xor es lods add cltd les jo pop push (bad) mov or adc ret mov es xor jb pusha mov dec insb stos xchg mov xchg arpl push out dec inc (bad) lret and pop or popa mov popf jnp jo adc mov cmp stos popf lods fcoms rcr pop add int3 jge nop roll mov inc popa out xchg inc lods ret in or sarl jmp pop and push sub sbb incl sub fucomp jmp stc jl mull jle inc pop lahf inc lcall adc jp aas andl in jmp and mov insb stos dec cmpsb (bad) notl adc dec inc inc lcall es add sbb call push adc aaa push mov das sub test in in push or pop arpl ficompl jnp mov pusha mov pop adcb xchg (bad) notb mov int jno cld das inc adc jecxz fs push jnp lahf sbb push sti xchg and ror add mov enter xlat and push push push mov jg std pop add out rolb in xor dec aas xchg test (bad) jb jno xchg ds push gs out je jb adc push lea mov fwait adc nop mov xor or scas pop inc mov scas outsb cmpsb jecxz (bad) repnz or cmc pop pop cmp arpl inc test cltd add popf sub es das cmpsb mov fidiv aas das fiadd push jne loopne popf push call dec popa push loope in dec lcall insb push add (bad) jne mov int jecxz cmp mov cmp aad sbb outsl stc sub cltd push aas sbb dec icebp mov leave inc (bad) sti (bad) jae negb (bad) ss aas out mov sbb dec fs cmpb (bad) clc push (bad) xor xchg fwait push lahf jle in mov push in loopw fcomi mov mov pop dec cmp roll ljmp mov mov mov sarb int3 xor add mov in xchg jns sub dec add std sbb adc fstl add rcl test fisubrl fcomps mov out mov flds mov pop mov adc cmp sbb xchg sbb fs sub pop bound mov lods outsl adc jne lret jae xor call inc pop inc push pop les sbb movsb movsl das push inc cmp xchg aam imulb jae pop mov push dec adc (bad) roll outsl mov fcos test stc daa sti test frstor add pop xchg push dec mov xor ja inc xor int mov js sbb mov xchg lahf pop and mov mov jae js or cli sub jo cmpsl and fistpll mov adc sbb pop ds adc sbb inc xchg fwait cld in lds (bad) in jnp and xor add lods notl sbbb in loop mov inc cmp pop (bad) aas xchg xor dec cli int3 cmpsl out movsb push xor enter int3 add inc dec imul mov mov lret aad fs insl fwait xor pop xchg sub (bad) sahf push decb mov pop lret push pop jno outsl inc subl xor or insl or sbb mov lods repz imul cmp dec mov shrl and mov push cmp xor push lret or pop mov scas pop cmp push or iret add add imul push scas lahf testb adc fistpl adc loope and dec out je enter cmp or or lock mov (bad) in jae xlat push xchg outsl push insb dec mulb out adc push jp pop inc mov xchg sbbl mov into sub test inc mov sub cwtl outsl (bad) jge outsl pop sbb inc outsl (bad) icebp pushf or lcall cli push xchg (bad) xchg mov into jmp pop fmull mov lcall mov pop push cmp pop adc sub or dec xor aas mov fldt je xchg mov ret shll inc aad (bad) xchg or or pusha and inc pushf sbb fisubrl dec lds divl push jp pusha push mov cmp int sbb inc gs xchg push or lds or or bound hlt push mov mov sbb scas in adcb insb dec into test enter jae mov or daa ret scas lret sbb pop fsub cli mov sub loop adc xor cld jo sbb scas insl pop out push ror outsb sub fmull jge fnsave jno and popa cld cmp xchg sub (bad) push aad dec (bad) loop cmp mov push mov int3 add test inc out or mov mov fbstp adc jle lret gs rcrl and data16 mov cs jae add xor jmp int3 int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 inc mov cmp jg and adc sbb xchg daa inc push lods or rorb xchg (bad) loop xor xchg ret mov addl cmp push dec stc das jmp (bad) mov push xor in enter xlat movsb cmp cmp sbb push (bad) leave lods mov jecxz out daa aam adc mov mov push add mov cmpsb shrb mov jnp xor inc mov and cmpsb push cmp adcl fwait loop adcl fidivr mov fldcw popf call leave add cmpl mov test push and in dec mov loopne and xchg dec or xchg int xchg and les cmp ds cmp lret xchg dec popa sub mov test mov mov pop inc lret inc xchg fucomi loop xchg xor sahf xor mov shrb mov mov daa (bad) cmp pop inc (bad) rcr cmp cli sahf lret lods jge enter cltd add dec add frstor hlt mov push movsl cmp sub clts test push dec inc cmc push cmp mov dec lcall imul subl mov cmp sub sub bound push mov sbbl je loopne,pt in ret mov aad ret pop leave or (bad) xor mov loop sbb ds repz cwtl adc andl lods shrl popa (bad) pushf test (bad) lcall mov aam push aas (bad) icebp jns push movsb push mov cmp adc sub das fdivrp pop (bad) pusha fsubs jp pop loope add cmc jo (bad) leave mov mov mov movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 dec dec hlt jns lock cmp jl pop test pop lock lea movsl cmp mov sub mov mov mov into ljmp or out js rorl in add sahf pop add or sbb pop xchg fist test jecxz ljmp adc lods xchg adcb ljmp xor in xor je mov push or mov lods push rcll push add aas mov sbb push add lcall ret inc jecxz mov push xor push push out orb mov jnp mov stos and ret loopne andl shlb mov popf cmpsb jns mov aam add repnz scas aam stos push lret cmpsl repnz add mov sub jno jp dec fisttp dec jns mov dec xchg int3 clc mov ficompl pop mov sub sub sub xor (bad) jle jo std test cmpsl movsb je mov fbld cmpsb ja push jb xor in push loopne lret fisubl jb out mov add loopne jb icebp ss psubb jecxz,pt inc imul pop dec fldcw in lods pop or scas mov fistl adc mov scas fs push inc popf sbb fistpll mov daa out insl loope dec iret xchg pop or pop mov inc sbb rolb adc add (bad) mov mov sbb lds pop adc in adc cmpsl jp imul js int3 pop push sti jno bound gs mov inc test ss cmp push rcll mov mov cwtl (bad) cmc shl fcomps aas (bad) bound lret cwtl daa mov mov and std dec out and dec sbb (bad) cmp adc adc push int3 mov iret (bad) lock imul lods pop dec pushf pop adc cmp pop int3 dec mov pop xchg dec fisubr push sub lods lret add mov push inc add dec xor inc jbe jp test idiv sub add std gs lcall movsl (bad) aam xchg movsb ja das (bad) jno or xchg (bad) lahf fdivs and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 rorl jns daa call pop jecxz fidivrl mov mov outsl clc sub mov gs or (bad) lea mov push and push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or add inc cwtl out cmp fisttpll xchg xor pop imull insb jbe (bad) loop mov iret pop sbb lea push mov xor sub mov xchg xchg int3 lds cmpsl test inc fnstcw mov push xorl mov negl or and in dec loopne cmp leave mov cld stc imul mov scas ret data16 data16 jg loop push jns imul push mov mov xor arpl dec xlat cmp sbb mov addr16 stos sbb push xchg cmc mov push pop ret adc insl dec out pop dec cwtl jg mov imul add dec cmp mov fisttpl and popa push xchg xor lea daa pop ret mov aam jns cmp mov mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov in mov ljmp pop dec faddl iret pop stos insb or aad (bad) pop or adc int jecxz (bad) mov xchg mov dec xchg (bad) lods stos addr16 cmp in xor adcl lock inc aaa ds (bad) out jge jle cmp lock dec loopne dec xor les add push or addl int fs push push cmpb ja fsubr mov ss rol jp mov lret fsubl mov inc cmc (bad) cmp pop dec pushf push rcrl sbb adc lds pop add sbb test sub lret fcmovnbe jns subps es add xor repnz pop into sbb imul mov call push adc sbb test fidivrl cmp push pop mov sahf sahf push sub rorl daa xchg test (bad) into xchg or lds in dec int insl sub int jmp insb scas in push sbb adc (bad) cmp inc cmpsl jbe in jno pushf ds xor cltd (bad) (bad) scas stos lea (bad) sarb jb hlt call dec ds pop inc jl mov jle and enter and add and or mov scas rclb loop fnop addl jmp jae aas mov pop xlat iret mov loope inc sbb test int (bad) cmp jl repnz sub cmp ja jae aaa inc loop adc nop outsb mov rcrb addl rol xchg fistpl dec in pmuludq xor inc ljmp pop mov jbe xchg mov mov mov ja div ja push out shl mov popf mov cmp sahf lahf dec pop jl repnz lock fist leave pop dec xchg mov stos loopne ja pushl add movsb or and aad fstl in push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lock fwait sub adc fwait push xchg insb jbe mov ja inc test test xchg scas push xorl mov or mov add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 mov adc inc insl push dec push add inc mov push clc mov jnp push jne sub nop lret icebp lret or (bad) lea mov mov and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc mov push mov pusha jmp jno mov sahf cltd fidivrl xchg mov adc jb push mov push mov (bad) mov jmp mov icebp mov mov xor pop jnp (bad) lods xchg out aad mov movsl mov psubsw inc sti enter mov or js hlt lahf or mov mov pusha sub xchg test iret push test or (bad) je jne cli fadds sbb or mov mulb pusha insl cmpsl xchg adcl movsl and pop add imul sbb clc xchg mov aad lret sub in cmp inc mov and scas bound inc xchg gs mov dec lods std mov mov mov inc dec mov or (bad) addr16 push mov cltd mov xchg add rcrl xor iret roll clc sti xor inc push ds xchg inc mov inc inc cmpsl jbe mulb sbb adcb enter jb add push sbb inc insl mov lds or pop mov arpl roll movsb pop out aam cmc clc daa fstps es push or or xchg pop into inc popf test std lods cmp push je ja sub inc rorb add cmc add mov jno or pop dec adc inc push push add pop sbb in mov sub dec pop dec mov insl mov push add imul dec inc adc xchg iret add jp fwait or jmp incl mov int out pop out dec ja iret aad (bad) xor mov or (bad) jmp dec cmpsl jecxz and dec pushf sub scas mov cmp popa out pop cmpsl mov adc inc push add in cmp add test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 (bad) jns insb ljmp xchg inc sub xchg adc jecxz das (bad) sti loopne stos pop outsl pop sub push mov push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or add mov adc out inc xor dec sti mov mov xchg fs and fnop fcmove dec sti push jbe lcall fwait mov or pop jb hlt dec aad cli xlat fistpl sub xor aaa inc gs test mov pop fisttp call data16 ret out pop push fnstsw lahf pop loop and cmp (bad) xlat pusha push mov or call cmpl mov xor sbb ret lods inc and stc xor out push (bad) jbe scas lret iret js jp repz aaa push mov cmp push mov (bad) pushf push cmp popf add je outsl imul cmpsb dec add into add fcmove imul dec sub and push jge pop divl mov call clc push dec cmpsl sbb lock pop dec fisub popa das push nop into and sbb loopne test idivb mov dec ret pop mov pop jg push dec xor or in and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or add adc test fstpt call mov ja mov imull mov mov sub roll mov adc push test mov lds or xchg jle jo pusha cltd jnp mov xor scas jbe mov lret insb jno push jmp mov pop fwait mov ss mov add das stos shrb pop inc mov sub imul retw pop add ror xchg and call repz dec xor sub jg popa cmp jnp pop enter pop jg cmp jecxz (bad) mov std mov push add stos cmpsl xchg jecxz push aas dec jnp fdivrs ret es sub in ret jo lods add mov roll dec jle sbb in xchg jle sbb (bad) mov loope or mov jbe repz lock cmp out push xor cmp aas sub dec popl sbb ss (bad) jle in jne in push inc fsubrl add dec or fildll mov add sahf pop mov dec adc mov pop dec inc jo xor add push adc dec add sub pop out dec aad or push rclb adc xchg jbe outsl xchg int3 inc pushf xchg lret inc mov les fsts pop sahf jecxz cltd xchg lret cmp iret ret icebp fwait lods cmp (bad) enter mov sahf in mov mov adc xor cmp repz clc das test stos pushf pop add jbe xchg iret lock sbb ds sbb cltd sub push setge adc mov mov dec jns pop xor push ja cmp test dec pop mov outsl mov mov xor nop notb push pop int3 lds push shrb or imul pop cmc int3 int sub sbb out call xor xlat enter popl jmp clc xchg xchg dec mov fstpt cmpsb popa fwait xor dec pop dec mov popf scas (bad) pop dec and adc push inc add mov ret mov inc sub (bad) push movsl repnz insb pop pop in idivl sahf add inc xchg mov push enter jmp push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 mov or add inc fwait cmp pop out cmp rcrb loope adc mov sub adc add pop test mov iret fisubl pop mov pop cmp mov dec mov add push in inc jl aaa ret cli mov inc int3 nop push aaa push mov push mov outsb adc push xor stos cwtl adc jmp xor pop pop out outsl or std mov and (bad) adc imul (bad) add sbb push shrl or inc (bad) movsl imull int push enter jl jns sbb xor add inc les add arpl jle stos push scas xchg add lcall aad pmulhuw jge std jge les pop enter mov xchg xor mov jo xor arpl imul fidivrl and lret xchg jecxz nop cmc imul push and cmp mov into rcrl (bad) push jno pop jecxz popa loope mov idivl mov das fstpt (bad) cmc jb out xor fistl rcrb cltd mov fwait add lfs sarb xchg insl mov shr inc test sbb add xchg cmp into mov jmp cmpsb (bad) xchg inc je mov cmp shlb cmp call (bad) pop mov jbe xchg mov pop cmp cmc rcl lock pushf outsl sub iret mov sar stos lods shl orb cld xor in xor lods popf xchg push pop dec mov in (bad) rcrl aad ja test pop loop mov stc fwait mov add mov xor sbb scas (bad) or scas gs int3 mov adc mov stos jmp nop enter lahf push cmpsl test out lods in sbb xlat lock cmc or inc dec loop xchg ds cli outsb push and jo jne pusha rcrb aaa mov bound sub xchg loope xchg push pop test outsl adc lods mov scas cmpsb xor repz mov pop into lret adc sti insl adc ljmp jmp fisttpll push cwtl mov add dec sub jp cmpsl mov push sub lods cwtl cmp ja mov es fldt sbb das repnz xchg add fucompp aam mov popa movsl lret cmp and push std jo stos adc inc repz fildl sub inc add jmp push sahf aad sbb hlt adc andl add cwtl out fs orl mov mov jb sub inc push jnp es xchg xchg mov or cmp cmpsb push fcoml pop xor aam mov stos std jo push sahf ljmp mov xor mov jmp cmp addl in push dec and jp ss fs xchg push popa lods or or and mov sahf push outsb cmp (bad) xchg dec scas xor mov inc jne push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or add adc test xlat or adc mov pop negl pop fdivl mov repz ss shl outsl movb sbb jo jne sub xor gs or cltd in je xchg gs ret mov xchg loopne mov std (bad) push mov jo inc xchg pop jp push (bad) mov stc lret push jbe je xchg (bad) xchg in cmp push rcll ss (bad) int fidivr push jno lret jg test out movsb jne (bad) mov push xchg loop (bad) push push jb push out pop adc ja add out jecxz add and add jle xor mov dec fcoms fbstp mov mov mov adc cmp pop mov dec pop inc add and add pop push scas call rorb into aam lods sub xchg (bad) mov push jo mov jbe clc movsbl xor js arpl sarb push jecxz or inc cmp loopne xchg lret cmpsl lcall mov out shlb xchg push pop dec leave pop mov cmp add (bad) mov divl xor sub add or cwtl push shrl and adc xchg pop adc out mov popf in es and (bad) out add aaa data16 or and std (bad) mov inc leave mulb das xchg pop mov jne jne cwtl jnp call rcll cmp mov cmp add or in insb aaa mov leave sub inc or pop ja (bad) lret jecxz enter das cmp inc movl sub jmp (bad) pusha aaa adc fcompl or sub push jl jbe jbe dec mov mov adc lret adc dec loope iret xchg subl sbb xchg jne inc xor mov add nop xorl jge repz or jmp aam push test lahf push repz (bad) push insb call push add insb bound in inc insb push pop adc out icebp sahf jge adc imul push mov sub imul jecxz or outsl adc into sbb mov mov test dec test jbe jl icebp lret enter pop stos lock sbb std data16 mov out in lds mov cmp lcall xor test or imulb cmc dec cmp (bad) jbe rcrl aaa push out inc mov lret ljmp adc push add push push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov insl insb sbb decl inc scas int3 mov push dec ljmp mov push int pop mov jp scas sub jmp pop push xchg scas mov fdiv cmp lcall add mov adc sbb xchg daa adcl (bad) les xlat pusha movsb ss leave xor (bad) xor bound or xor mov pop pop push les cwtl out mov push sub add push sub xchg sbb dec stc add pop cmc mov cmpsl lret pusha insl xchg inc test push aas outsb arpl sbb (bad) aas xor ret push icebp (bad) cmpsl sbb andl test fcmovnbe negb mov dec push or cwtl fs dec xchg adc (bad) movsl jnp mov (bad) xlat sub cmpl je mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 dec pop hlt jns cmp gs js lahf bound push mov test jne call test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 push je pop and fs sbb gs pop jge mov jp inc fwait sub stc inc scas pop outsb mov nop shr ljmp popa adc pop mov das inc add das add sbb mov test out out mov add dec mov cmp jmp fwait add sub push mov push push push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov pop mov cmpsl and mov sub insl adc loope pusha jecxz cmp push aas mov sbb adc ja jge lcall lea aad movsl shlb (bad) mov call xchg cs scas bound dec popf mov dec adc pop mov lar add xor sub (bad) hlt fisubl mov pushf cmp (bad) mov fwait test dec iret xchg jg dec repnz aad cmp push ret mov xor fildl or add hlt pusha mov jecxz pop or sahf or pop sbb (bad) jo lods in mov push fcmovbe jns mov daa xor out std push pop cmp mov inc mov lahf inc inc add mov dec lods jns je cltd (bad) int adcl dec xor xchg adc scas divb je repnz icebp dec fs xchg pop stc and out adc dec dec push gs je mov mov (bad) cli fnstcw jle adc lret and mov repz jne or insb dec xor lea into xor daa addl scas das lock mov (bad) repnz dec aas pop mov adc mov sub stos sub add es mov xchg push or mov ljmp hlt ss cli push fstpt add (bad) cli addr16 test add push loopne inc sbb pop cmp push fdivrl shrl push push mov repnz cwtl (bad) mov bound call mov in outsl dec or repz aas lret faddp mov sbb in gs mov xchg mov pop mov inc cmpl jne cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 mov or add xchg jno stos cmpb in leave fsubl cmc mov dec ja sub pop jecxz adc test pop outsb mov pop sub mov ja hlt rclb adc cmp add lahf shl mov sbb mov xor sub out pop mov mov ljmp fnsave add aam enter int mov loopne data16 and mov ret cmp cmp lods pusha push sbb sub jae mov cmpsl push repnz mov jae das inc cmp movsl jle (bad) mov pop xchg out add fs pop addb mov test mov or out jle lods sti push int xor outsb or or outsb dec fcmovbe xor cltd das dec sbb stos test push (bad) jns xchg push sti or subb leave mov rcll je repz cmp mov aad insb imul mov jo add pushf sub mov es popf mov clc sbb sub inc scas call xchg and mov jno lods adc dec mov aaa faddl lea pop pop or movsb inc sbbl sub inc sbb aas je lret pusha adc insb add mov push shl dec cld lea cmpsl cs add out jge aaa mov sub out jne mov mov pusha lock pop dec pop add xchg pusha shr in pop push jp cli (bad) mov aas xlat and loopne insb mov cmp push cmp dec cld sub in xchg clc or xor stos into repz jno ret mov icebp out pop push mov mov data16 push pop out pop cld fdivl (bad) idiv mov fsubrs cmp (bad) cld pop stc and subb inc push es dec clc cltd repnz stos jns cmp popa rorb nop jo in test and lods push into add iret les push mov (bad) mov adc push mov repz repnz adc addr16 push fisubrl xchg inc push inc adc pop (bad) into xchg (bad) call out ljmp cltd loope (bad) xor aad ror mov sbb mov mov cmp pop lret pop push jl rorb lock fwait mov cmp mov lods aad lret outsb daa add icebp dec stos jl add add or es inc mov or es popa aas lcall mov adc mov adc lea adc lea adc mov adc lea adc mov adc mov adc inc and cmp je cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc lahf stc dec ss and xor mov push in fwait or push xchg mov (bad) stos mov aam pop sub lahf sbb scas js mov xchg std push cmp out rorl loope,pn divb sub jne hlt push mov and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or xchg mov jno fnstsw loop jp dec imul xchg lret mov xchg roll mov stos stos shlb in inc movd lahf sbb lret mov jp adc xor popl xor jmp inc in jle sbb hlt aas push test sarb push sbb dec in movsb dec sbb out xchg xchg sbb dec arpl sub inc push lods jmp xor cmc ljmp icebp (bad) ja ss icebp mov or dec adc fwait std mov push dec cmp pop pop adc add (bad) pop fsubrl mov psrld sub (bad) nop das push popf and ds (bad) mov lea jb or mov adc add orl inc lcall cmpsl cmp mov xchg in in cmpsb mov insb sub xor xor repz call push cmpsl mov xchg push out daa out and xlat out movsl mov sbb cmp lea pop jmp hlt pop (bad) dec shrl out shlb sub imul in orb fwait lds xchg sub in sti aad sub sbb icebp arpl out pusha inc notl rcr outsb ds ss push inc mov cli xor or lret jg ror sbb test sbb dec lret rclb movsl dec sbb sub data16 cmp andl idivb xor into test movsb push adc mov mov mov xchg push ret mov lods adc jg nop les jns jb inc lds iret add pop or dec sbb enter (bad) jo xor nop data16 rcl xor and cmpsl inc les ret jge cmpl mov (bad) cli out std dec es rorb mov loop int inc ret add pusha push adc sub xor or es inc movsb sar xchg or je orl cltd in test insb popf sub push xchg push out inc or mov std sub jnp roll out xchg mov jne inc aas cmpsl push (bad) xor nop xchg outsb xor jmp mov (bad) push jmp sarl daa (bad) maxps cmpsl push out in es inc jo lcall xchg dec (bad) imul xlat or std stos loop stos cli add dec loope stos divb or xchg dec push leave add sub (bad) ss sbb lock ret push out xchg xor jle adcl xor insb mov testl dec cmpsb daa neg cmc mov sahf arpl xchg sub shrl lcall mov jl jg pop cwtl sbb xchg adc lods adc pop insl mov movsb add dec pusha (bad) jne ds loope aad jbe pop jno jecxz lcall jbe push dec ja lcall pusha mov jmp gs jo jb fistl outsl test aam mov (bad) pop and mov cld inc lret xor sbb fidivrl cwtl xlat xor mov and das cmp jmp loope cli add dec sahf and (bad) mov fs sbb mov aas mov fimul insb ja ja xchg mov leave mov orl cmpsl data16 jl popa inc loop gs jo addl popa mov cmp in fsub xlat cmc cwtl mov xchg mov and pop movsl adc lret mov mov xchg cmpsl mov sub call adc out inc call out cs xlat cmp cmc movsl and sbb mov xchg inc inc sbb cld adc or jp mul fwait adc dec dec fcompl je clc mov mov negb mov adc sub pop ret or sbb jmp add add mov pop sbb fiadd outsb inc ret shr xor push iret mov lret cld mov jp inc or scas mov outsb insl mov sarb inc test repz push push mov cmp mov mov (bad) fidivrl lret pop mov cli ret insl lea sub mov lcall mov mov unpcklps imul repz ror lret lret out shlb sub push fnstcw cs xchg scas shl lahf lret pop ret push xchg test pushf or jno lcall mov adc pop stos mov mov cmp jmp mov or int mov cmpsl or push pop pop jbe rorl xchg (bad) push out pop es (bad) roll xchg fisubrl popf orb and adc (bad) mov imull lcall adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 mov insl fs movsl outsb out pop dec shrb mov sahf dec mov dec scas sub xlat sub pop inc xor jge lcall lea pop mov xchg ss mov fisubl movsb inc mov loopne dec sub push adc fildl sub mov jmp es xchg and divl sub push popa lods adc clc cmc mov je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl cmpsl jmp mov xchg cmc lret mov mov jno pop repz add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 dec pop hlt jns lock or cli dec mov mov loop push pop imul push sbb js outsb or jl add inc scas mov lret mov das lahf lcall sub mov aaa lret aaa mov test jle xchg je xchg jno fiaddl loope mov cmp jmp fwait add xchg dec sub mov jge jbe popf push mov jecxz cmp push sbb fcomp (bad) mov leave imul add fadd push jb dec jl xchg xor in loopne insb adc and sub cmpsl mov mov cmpsl jge adc jg sub int3 rclb aaa jo in xor sbb ret sbb lds xor push sbb mov loope jl and outsl add aad or cmp xchg jg cmp outsb push pop cld mov fisttpl aad lahf mov test cld mov popa pop fcmovnb aas cli aaa or lods fisttpll stc sbb popf sub jmp sub aaa dec cmp ret add inc outsl addr16 mov into mov and popa xor cltd xor sub test cmp aad insb xchg or add jg mov push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov sbb add mov fwait xchg jmp jnp outsl mov push push sbb (bad) rorb lods sub aas (bad) adc mov pop push dec cs inc inc adc sub adc xor cmpsb dec popa inc cmc test in (bad) in push push inc fs xor xor mov push rcrl cmp xchg fdivrs cmp fbstp push pop xchg push or or inc cmp push mov xchg xor push fsub popf mov adc jp ficom and aam adc loop jno cwtl sbb xchg stos loopne xchg insb in hlt sub and iret mov cmpsb inc cmc popf fiadd inc pop jns les adc xor (bad) xlat sub mov test jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov lods pop cmp bound bound mov movl push mov ret inc jo xlat pusha movsb or shlb jb ljmp xchg ljmp mov ret js rorl aad mov xor sub mov test movsl es cmpsl lea push adc cmp mov sti fidiv ffree sbb xchg loope adc add arpl out cmp jbe out pop fisttpl jmp xor pop push (bad) fmuls xchg lea jbe mov cmp pop sbb out mov ja sbb pop je mov cld pushf add pop fs cwtl xchg add or mov dec sbb in fldl lea lcall inc mov sub ret mov xchg std frstor popf jae inc pop insb pop enter notl gs into ds jl clc pusha mov inc sub fcomp push in mov insl int in (bad) int3 test push ds mov daa lods fnstcw xchg xchg xacquire jae fcmovnu repnz cmp mov jo adc lods push jo idivb mov add (bad) into (bad) into outsb xchg sub (bad) ficom sub push pop out scas call dec mov xchg mov fist loop imul dec inc push mov xchg cmp fistl adc inc sbb sub xchg xchg daa cmpsl xor add scas xchg mov int3 mov pop push jbe jo cwtl ja jo fimul pop xchg dec push aas sbb fwait xorl inc cmc rcrb xor mov test inc push out pop add dec jecxz mov shr jge pop orl xchg cmp daa das mov mov mov inc inc sub cld orb movsl loope cltd cltd adc out cmp jb (bad) fcomp pop add and aad fldl push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 mov mov add cmp xcrypt-cfb cmpsl gs mov sub int3 push inc xchg or sti pop lock add push int jp or cmpsl pop sahf aam leave cmpsl inc test mov inc jo mov movsb push enter or addb dec data16 cmp push jns jne std mov sbb or and es lods and xor adc out push cmp cmp inc (bad) jno push rclb jb inc shll cwtl test aam jge iret mov xor pop cmp mov inc test push pop arpl out push in lret dec jmp push cmp push stc jecxz lds pop test cvtpi2ps aaa notb cli enter nop lcall push jnp jle lcall mov (bad) xlat sub sub testl mov cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 mov ret leave adcl test pop clc pop aad jge jns push aad pop imull adc xchg pop xchg fidivr dec repz jmp in inc mov and cltd and lahf ret bound push stos into fsubrl inc sub cmp lret mov icebp cmp lahf sbb sub inc lahf and int mov dec jnp in lret mov xor jne jne cmp sti xor stc aas test cmpsl jb (bad) add ja inc inc jae aad movsb ljmp inc (bad) jbe dec xchg mov pop inc cltd mov loope pop test (bad) (bad) enter in leave or jl fisttp ror adc xlat or jle js lcall aad out ljmp sbb outsb aaa into mov mov (bad) jmp (bad) cmp mov push (bad) in or jae lea je mov inc mov imul xor aaa fldt xchg mov insl or aad dec loop loopne dec inc loop mov pop insl movsl inc stc xchg bound mov sbb call push pop movsl dec jl std pop mov push enter imul les push or mov and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov insl insb pop aaa or mov stc clc mov lea jecxz sub jns dec addr16 xchg push jmp (bad) test adc mov (bad) lods (bad) pop dec lcall mov out scas xchg xor enter rclb xchg add pop nop jns ljmp xor add scas jg popf test mov je mov dec and stc lods mov cmc fnsave jmp dec setbe add out mov xor mov fwait ja pop add mov mov sbb (bad) es ja add cmpsb pop dec dec ror stc cmpsb jg cwtl insb mov cld mov bound aaa mov adc hlt push loop mov and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 mov mov in or mov shrl mov ja inc mov out push mov mov fwait insl xchg inc lcall xchg ljmp iret in pop and inc lods je inc popf jl jecxz fmull icebp cmp push sbb or sti push sub xchg rcll or (bad) mov das xor add in cmp cmp test mov insl call movsl cmp aam fild dec jne pusha jle imul push mov add xor xor repz pop mov ja and pop (bad) xorb lret rorl mov push xlat ret stc fsubp ds fwait push out pop xor out std push pop add ret dec das dec push push rorb mov jp inc mov (bad) xchg out xchg dec lods mov les cmp inc adc data16 (bad) out das js pop jecxz and adc mov loop test cs jno xchg fsubl sub cmp loope test push dec lcall xchg push add mov int3 mov xor daa sub lret pop or aas and mov inc lock gs adc lea and arpl movsl mov hlt hlt or scas sbb imul ljmp cwtl sbb or scas into mov stos (bad) std mov push negl push xorl in stc mov sti xor inc in dec ret mov inc dec adc xor ret pushf cli imul inc mov mov negl ja mov fisttp xchg ficoml and sub in divl clc adc ds cmp dec popf xchg mov inc jns repz js xor pop scas mov dec nop movl add add push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 dec lds xor inc sub cmp call fs pop mull and enter inc dec or pop push js jge mov popa (bad) stos shlb fild scas cmp mov stc pop xchg pop int3 insl mov sbb gs jge ret pop movsb mov jno jle pop cmp dec int mul xchg mov out sbb jl mov lds aaa repnz fldt cld mov rcll lahf pop sub loop bound push or enter xor dec mov push mov dec stos push jne and cltd fldln2 xchg lahf cmp lret adc adc movb jns or sub imul movsb in or dec xor sub arpl (bad) mov test (bad) inc xor adc (bad) rol xchg xchg or xor mov mov scas mov aad fisubl into xor xlat jne xchg aad pop je ret in and repnz insb pop pop jne mov add cwtl stos (bad) popa nop movlps add out mov mov push xchg xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 mov or xchg jno dec xor pop fs mov push or lock stos pop outsl pop mov outsl inc aas pop in (bad) xor cmp cmc das lahf xor movsb mov gs arpl and adc orl pop cmp sub dec mov jns xlat mov aas insl xchg pop aam push mov mov pop cmpsb mov xchg mov cmp mov mov mov mov je insb sbb or mov mov fs lahf (bad) ljmp (bad) mov enter mov add sub sbb lock sbb push or jl adc shr in or lea jl out ret aad push sarl sub cmpsb mov incb xchg inc jl ror sahf (bad) iret xchg scas pop xor stos loop int sbb in (bad) lea xchg sbb or addr16 mov popf stc adc scas cmp fisubr fstpl sub ret iret mov (bad) (bad) popa lods sbb or scas mov xor addr16 jno sbb rcl jecxz pop fcmove and cmp in inc movsw popl jns add push mov xchg lock or lods ss sub inc cs and lds mov aas xchg dec adc scas lret xor mov push push cli cltd dec mov (bad) cmp cmc (bad) push je xchg inc cmpsl sbb cmp sbb adc call pop test cmpsl fwait xorb xchg push and xor or and fcomi (bad) repnz pop jmp and pop push rcrb mov add notl add aam nop mov arpl mov loopne (bad) div adc fs lea and loop mov sbb sahf push hlt std rorl dec es mov ret imul fsubl outsl or int adc mov fldenv out cmp leave std (bad) xchg out push lods hlt repnz cmpsb dec jle,pn lock cmp repz jne mov jnp and pop cmp fisubl arpl mov push scas push mov arpl jg (bad) (bad) mov pushf or adc pop jbe (bad) sbb shrb outsl jae das dec ss inc sbb cmp pop sbb mov ds push xor lret jp mov test (bad) mov and movups cmp sbb fwait les fwait sbb out cmp mov jle scas mov inc jnp cmp mov ljmp push pushf xchg jae mov sbb imul stc (bad) dec mov jmp mov inc cmp adc iret imul fs cmp mov jl ficom mov mov aam sbb jl mov add sub dec xor (bad) mov adc xchg aas pop in inc push cmp ret xchg mov mov xchg mov loopne mov (bad) (bad) test fldt mov jmp rol outsl cltd adc fdivrl push adc popa fsubrp xchg sub ds bound xchg fcoml and sub sbb pushf or jnp pop dec out and jle sbb lods jo lret cmp mov (bad) idivl cmp cmp xor fs sbb inc push cli ja aam xchg sahf cmc mov or mov mov popf and test adc test xor stos stos lods pop cltd push (bad) fld test fwait in enter arpl xchg mov fcoml cmp sub mov cltd xor repz sbb ret mov adc jmp inc (bad) call sbb dec insb pop loope sub js mov mov leave sahf ret cld jmp sarb push cmc out gs test jne adcb adc test jge shrb fiadd jno cltd add xchg mov outsl or push pushf (bad) cmp imul addr16 xor mov inc cltd lock inc aas mov xor xor fmul inc mov cmp sbb inc lea notb es xor rcr and sub pop movsb inc movsb adc add loopne sbb mov xchg pop pop mov hlt pop push lods les (bad) shrl dec jne pop dec cmp bnd mov xor lods push dec inc mov fiadd imul js jle test or into stos fldl sub push or (bad) popf xchg rcr cmp xor push sub out in inc lcall test push out stos ds push mov xorl out out mov sub and adc test push or mov cmp jecxz cmp inc push test (bad) repnz arpl mov (bad) push push fidivr scas mov xchg xchg cmp jg pop push bound div test insb iret std hlt dec inc lcall lea lock pop cmp sbb lock dec loope fistpl sbb rolb hlt sbb add mov outsl push (bad) adc daa jne lock repnz xlat pop xchg xor sub cltd xchg push adc adc mov push addl cmpsb xor cld and push incb fsts add mov pop loopne xchg fsubrs int3 jno or scas nop stos jnp pop sub sub lret lock pop push faddl aad mov mov sub test inc ret mov jmp jne addr16 and cmpsb data16 sbb arpl jmp (bad) out ds dec sti add dec pop addl inc xorl ret jp jl fldl sub test addl add insl xchg sbb add xlat push mov dec jp mov and mov dec sbbl sbbl aad add jns dec (bad) hlt arpl add xor pop pop inc rcrl or mov rcrb stos sub and (bad) jle add (bad) bound mov roll repnz jo sbbl rcrl mov dec sbb or xchg sbb incl mov in and cltd or cmpsl cmpsl inc xor aas pop cmp jle jp sub mulb pushf aaa cmp jge pop xchg lret jae fcoms aad cwtl cli lcall aas enter mov push inc bound cmc mov push pop mov push lods (bad) js pop mov xchg inc movsb dec sbb dec xlat nop fldt dec insl sbb stos and sub pusha jno sti mov push fildl sub or inc dec rcr dec cmpsl test lock ljmp jle or icebp pop jle ja jge sub arpl sar rolb sarl sub jbe xor push pop push loop iret add repnz ja adc (bad) leave or dec push ds xchg add insl in jp add arpl sbb sub lahf aaa mov cmp sub ja (bad) imulb call jp or repnz adc xchg data16 popa lods jg add or ret out out imul sub rolb rolb lods push pop xlat scas cli or xlat cld sub sbb stc and dec test add xor gs mov fistp lret bound ret inc mov mov and xchg iret xlat sahf popf outsl call cmp push int3 rol mov das jge cmpps or jg jg push xchg (bad) push sbb pop arpl xor outsb repz dec inc fisubrl (bad) or mov dec push xor dec mov jecxz xchg push push adc insl cmpsb rcl xor out (bad) insb mov icebp insb fisttpll ja aas popf inc push sbb sub xchg lret adc jle data16 aam adc je lock push sbb dec and sub pusha mov fiaddl dec xchg test push push pop jno xor repz sub adc popa xor xor lahf shlb in sbb dec out ljmp lret or (bad) cs sbbb xchg lock pop sbb mov xchg sbb xor jae sarl sar sbb jb and sbb loop xchg lret push push imul insl and sub adc test mov mov mov leave bnd sub dec divps mov pop sub les add push cmp lds xor cmc lcall adc xchg mov xor cmp jmp inc or aad jle xchg les inc adc pop mov xor (bad) ret std adc cmp dec daa jnp or ror mov inc lret sbb adc lds (bad) mov mov scas daa decl push fsubrl mov pop xlat xchg push dec and jno lock mov and xchg pop sub js popa insl fs xor add int3 lds dec mull fwait push enter into inc sub mov addr16 pop mov cmp daa (bad) jns pop call lea cwtl (bad) in repz das ja xor cmp js in enter mov cmp jbe xor je ret hlt sti pop adc (bad) pusha aas and pop add pop lods jb cli (bad) cwtl or jne ss fldcw inc inc pop xor mov das sub push scas stos add or adc lret stos xlat jecxz call cmp in neg orl shrl das dec (bad) aaa hlt out fldenv hlt adc lcall arpl mov xchg lcall fdivrs sbb lahf iret cld popf outsl inc daa cmp and mov test and aam jp js jl jg jmp push or dec sub (bad) stc inc dec mov mov mov add aaa hlt lea (bad) fwait mov jno addr16 push mov scas idivb (bad) lods jp inc imul and in dec mov or iret xchg xchg std pop cli add pusha clc add int and or mov leave xorl mov test pop mov adc loopne lea xchg popa es outsb dec addl out or jl inc cmpsb jl adc cs mov or pop or jne ss pop sbb mov (bad) mov cmp rcl dec lret or (bad) int3 jo push pop lea xchg popa adc movsl imul lds lock je rol mov dec pusha cwtl mov push cmp repnz rol test sti cwtl cmp jmp jnp mov test std dec cmp pop lahf cli scas fstps mov lahf ds idivl xor push mov xor jne ret lret cwtl fsts mov lea or (bad) mov pop popa stos pop or push icebp fdivl dec xlat aam xchg fnsave push xchg scas cltd fist jge (bad) mov sti iret and hlt cs sub mov mov jb xor sbb faddl movsb cli or (bad) and xor mov lcall jge lods in pop shll inc sbb in inc push fild jp cmp cmpsb stos mov rorl sbb arpl jae inc cmp xor mov in jp mov jo popa prefetch xchg js lods pop mov pop fsubrs xor js fwait insl pop (bad) in (bad) pop mov rorl mov mov xor paddd shrb cmp fldt fwait pop adc xor pop and cmp js pop and pop and mov sbb push push aad xor jge pop (bad) mov sub pusha (bad) fxtract cmp and outsl mov bound sub ja andl (bad) mov stos fbld lods ja js jne add dec inc cltd mov or iret xchg movsl push int3 inc sub ljmp shrl cmp add push sbb xor sbb (bad) jp add inc in lret sub out jmp sub pop les aaa lcall xor mov jle shrl scas daa jne idiv pop xlat (bad) push dec fwait (bad) pushf pop mov inc or fstpt dec cmp ret loopne test daa mov mov popa fxch inc sbb dec mov inc test mov mul or aad ljmp dec inc out out jnp dec pop jle out or xchg ds fisub in cld mov out repnz (bad) lds jmp scas repz mov scas aam pop jae fild dec mov dec nop push (bad) daa (bad) scas leave xor das loop das xor mov jl mov loopne cmp movsl (bad) pminub mov popa mulb xor mov xor adc and xor cmp pop xchg mov sub mov mov mov js sub jne lds mov dec sub stos stc fs call jae cld mov lock outsb loop enter loopne sbb add mov ret movsl and pop mov pop ja cs test and push popf xchg loopne xor push sub sbb dec lret imull popa popa adc pandn sub mov aam hlt out mov add cmp dec mov mov cld dec jb mov hlt int push (bad) sub fildl call mov dec in int3 test sub jl pop (bad) clc mul outsb adc test das enter dec sbb fisubr scas mov xlat loopne cltd inc mov movsb iret inc sub pop testl xor popa mov push sbb push out shlb sbb sar scas jp jp mov or xor cmc inc mov add sub shll lods lcall fwait add aas sbb jnp mov and ret pop adc cmp std cmpl cmp pop (bad) cmp in xor xor outsb pop push mov test push push mov andb or test mov xor fildll jg xchg mov add (bad) fs or xor push and or xchg jnp adc jo cmp push (bad) mov mov pusha lods dec mov or cmp lcall addr16 popf mov mov daa int xorb mov add imul mov xchg (bad) gs call aam fmuls int sbb mov add cli fistp jns enter pop push stc jecxz mov out inc jnp out ja lea xlat mov rclb fdiv insb adc test or pusha pop inc or pop fist mov inc es or jns cmp sbb jb jle or aas stos jne cmp and popf jne jo js daa (bad) test push ljmp add xchg mov or fadds inc or adc add sub leave enter cs mov mov pop mov jno lods push into loopne sbb stos sub add lock adc lods push jo push nop mov cmp adc mov pop ds or icebp ret testb and pop adc cmp mov mov dec (bad) and pop test hlt mov sbb inc lret mov aad pop mov push pop xorl (bad) jl ss add cmpsb add xchg (bad) cmp addr16 arpl int3 mov or mov lcall cmpsl sbb cmp daa insl push jge insl cld and (bad) cmp xlat and test test sbb lahf sbb imul xchg fist sub loopne jb (bad) pusha (bad) jo lds dec stc stos xor inc (bad) mov out fsts stos out jbe (bad) addr16 mov fucomip sub sub mov fisubl sub sub aaa ds xchg mov sub push insb rol pop cmp loopne ror push pushf ficoml sarb mov rcr cmp sub cltd mov (bad) ret insb add adc and push dec addr16 or rcr jae jg jne mov fisttpll ss js lea mov jecxz dec fdivr (bad) or dec sbb push imul lods sbb pop cs jp dec sbb add mov lret pusha gs out sub mov push cmp mov test mov sbb dec jo dec sti cli insl mov xchg push pop or lock imul mov mov or cmpsl mov out push dec cmc scas dec pop int rorb adcl mov xchg xlat cmp pop pop jecxz adc imul pop test inc add fild mov cld sbb jns ret lods and dec pop adc xchg orl icebp mov in cmp aam add pop (bad) push add or popf lods lahf (bad) in enter sbb test push or and add loop wbinvd fistpl test icebp test jl push mov inc push cmp mov adc inc vcmpsd test dec sbb int3 fucomp dec push cli popa jae roll mov or or adc bound bound jb rclb or shrl outsb pop mov int3 jmp sbb scas push call iret outsb mov imul jge mov in rcll scas inc mov inc in add push mov divb xchg pop lahf pop stos repnz push addr16 outsb aam or xchg fsub mov int3 jae sub test arpl iret pop lahf mov sub pop cmp mov dec (bad) int insl shr (bad) fsubrp lcall (bad) mov cli jp clc xorb ret jbe cmp add mov shrb sub sub sbb fdivl daa iret enter insb inc adc push mov into adc sbb xor adc dec sahf pop nop dec pop xchg imul int3 repz push rol mov add add imul loopne,pn sub fmuls rorl aaa push jne mov inc int insb lret mov xor jmp cmp das or mov mov jg dec mov ljmp and idivb gs xchg jle outsb stc fmul sbb jnp and cmp int3 out adc frstor outsb mov mov jnp jb dec mov push sub cli xor mov nop (bad) enter call icebp das push aaa adc add lock mov loope and jle enter and mov arpl stos and push lock mov dec sbb js mov inc lret mov xor pop jecxz jmp insl addr16 js mov insb sbb mov jp xchg and jl gs std adc push adc push adc push clc xorb xorb js hlt loopne inc or mov and jno push jnp sbb rcr pop aad mov pusha fdivl adc int3 mov mov loop or mov cmp je mov movsb in mov mov inc loope clc and cli or daa leave pop ret incb inc push jne mov aam sti fs sub aam or inc fisubr pusha and inc aaa jno add jne xchg icebp cmp xchg and addb push rcrl mov push dec mov (bad) cmp ljmp (bad) iret mov sub cmpsb mov dec mov in xchg add sub loop jb and adc push push jp pushf (bad) test add mov (bad) sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov or sbb fwait imul rorl ja and xor fldcw xchg insb dec aas sbb push adc scas pop out and xorb cmp xor add mov sbb ss cwtl xchg gs push stos rcrl sub lods pop imul adc inc or movsl iret xchg lret (bad) xor outsb fldenv add jg or mov or rclb jg or jb nop dec push push sub cs mov cmpsl fnstsw xor cmpsl pusha adc stc jle imul jnp mov bound es push and arpl jg call pop sbb (bad) and stos dec cmp push mov ret xor (bad) xchg aad add mov jl inc (bad) int cmp pop dec mov lret je or fmull icebp mov jo loopne sbb mov cwtl das sbb fstl movsl lods jge lods mov xor jl and sub in outsl ficompl mov test pop jmp pop pop cmp out dec cmc insb pop xchg and cmp xchg fsubs cmp cld in xor pusha fbstp lahf rol lods or aam fsts imul in inc mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret mov or cs cmp add and inc sbb mov outsl adc inc sub cmc inc orl aam scas sbb js das cli add mov sub or inc mov sub mov inc xor mov jl negb (bad) out ljmp inc pusha sub mov jge sub fwait clc sarl jnp jbe mov inc hlt mov jns js outsl add scas xchg mov mov jb jmp movsb or cmp mov or jle cmp loopne inc fwait jb push (bad) mov sti and pop pusha pop pop vpsubusb adc add in push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or mov sbb inc dec dec scas adc ja pop into mov pop fwait sub mov stos xchg push fild xorps mov movq movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 mov or mov rcrb popa inc jb xor repz adc xor inc push mov shr cltd or add push lcall enter mov loope fcoms cwtl ja int3 test ja cld sub hlt mov mov push mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 mov or cs cmp add and inc sbb mov xor mov adc rcl jb xor adc mov xor clc pop out mov cmpsl inc nop pop xchg mov bound xor jne hlt mov mov push mov sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 inc into adc mov xor jne or lock stos pop outsl pop push mov sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec mov mov or out js lahf bound push mov mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 mov or sbb fwait imul push mov sub inc push pop fwait iret out inc fsubrs inc push rep pop aam jmp push mov imul mov arpl pop repnz dec xchg jb cld xchg loope divb sub jne hlt mov mov push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov or mov inc scas adc mov jmp insl add in decl lods daa pop pop push jg leave cmpl jmp rcrb cld test adc fidiv hlt mov mov push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 mov or fs or dec idivl lahf bound mov mov test cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 mov or cs sub mov push insl inc sbb mov xor clc in fildl mov mov (bad) xchg cmc jns sbb ja out fs das lahf ret sub mov cld sub dec jle mov aam enter jg sbb call add push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp lods mov cmp cmp mov shrb xor out mov cwtl mov inc mov out add (bad) mov orb pop sbb and fisubrl lds in mov fwait jne jb cld xchg loope divb sub jne hlt push mov sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 mov or sbb fwait imul cmp retw loopne stos pop outsl pop push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 mov or sbb fwait imul mov mov loop jns and scas shr mov sub cmp inc mov xlat and ret leave das lahf ret bound add es xchg jg inc mov jmp adc nop movsl imul or sub es out ss fnstenv aad std cmpb (bad) lea cltd in add sbb pop inc mov leave and rcrb loopne dec mov (bad) loopne add inc push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret mov or sbb fwait imul xchg shr imul and pop lods repz insb and (bad) pop stos pop pushf lock fsts (bad) or loopne inc inc das xor movsl pusha into mov in sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or sbb call add aaa cmp in or fstps incb push repz adc fidivr and mov mov jp sbb cli in or jp not xchg mov mov and add js aam push push sbb xchg push sbb arpl sbb jae adc mov add xchg fs cmp push mov mov add (bad) stos fucomip shr or fiaddl cmp repz xchg xor sar inc test arpl xchg shr stc fs movsl dec dec adc pop pusha pop int adc jle ret subl cld jecxz push lock (bad) sbb xor fsts scas pop bound sbb popa aad xor (bad) jmp int ljmp push jns inc insb mov sub and cld or sub sub ret cmpsb push pop sbb pop add xchg xchg call loopne push in int pop repz cmp es jb jb daa and xchg inc mov xor mov das inc cmpsl jbe (bad) fisubl pop inc lock and inc test cmp test add loope mov jge ljmp jg or lods sub push adc sbb inc orb (bad) xchg or jo mov push subb inc mov fldln2 lds xlat aas sbb sub mov cmpl inc cs repnz mov inc fnstsw push push std fiaddl int pop mov movsb sub add popf sbb jge cmp push fwait dec or dec imul push dec mov push outsl or (bad) ljmp adc fwait dec mov in pusha or outsl fcompl add jecxz xor xchg (bad) gs adc std fwait subl and mov addr16 lea daa in jne inc stos pop int3 in add fwait and xlat adc test sbb aaa adc cs rcll popa stc xchg cld and ljmp adc int jl out or frstor mov loope in sahf cli jne testl insl jp jae lcall out push mov rcrl sbb sbb sbb bound jl aas dec ret lret push outsb pop test cmovns stos xchg add jbe aad scas test mov add test fstpl xor iret fiaddl lock aam xor scas loopne xchg (bad) incb and or outsl in testl jo std dec push xchg pop mov addl mov lahf ficompl cwtl js pop pop jl cmc pop bound inc divb mov call movb pop cmp push loop,pt mov pop jecxz pop push pop ret stos dec stc (bad) mov (bad) xor vxorps out icebp pop jge mov shrb mov sub in icebp dec cmp inc pop xchg imul aam cli (bad) fmulp (bad) or jl sub ss cmp adc push adc ljmp adc fs enter inc fwait aad test jmp mov xor es cmp pop stos fidiv or push pop mov insl into sub and or mov repz inc aad jmp int3 popa (bad) inc lods jmp ficomp xchg push lds out dec xchg mov and xchg cmp jl into add in and sahf orl fisubr push jnp and mov (bad) imul dec pop scas sub xor jecxz cmc fucomip mov xchg cmp sbb cmp inc ret fstl jmp mov mov cmpsl fs insb decl cmp pop cli xchg push pop jl sbb lds mov (bad) clc fwait pushl imul test insl mov ja add pop mov ss gs (bad) sub aam cmpsb in in into jecxz ror dec push decb mov (bad) ljmp fnstcw addr16 inc add xor cmp out iret pop rcrb bound icebp mov gs pop add and out inc mov and pop xor mov stc aas fsubrl int imul sbb mov popa dec cmpsl js test jge sbb cmpsb sarl xlat scas addb xchg orb mov xor mov insb into pop movsl sub mov (bad) insl add xchg fadds dec leave outsb or add xchg add cmp xchg insl mov enter lds mov add push sub cli outsl lods roll mov loopne sbb xor repnz mov cmpsl popa loope jmp xchg push mov sbb or into sub or neg add jmp jb adc aad ror mov addb jg lock or mov and push aam mov lods (bad) xor mov or test sub mov sub pop inc ss jns out adc scas xchg pop inc lds add lret cmpsl pop ljmp lahf icebp mov cld aam int xchg cld sarl repnz imull mov in out nop adc imul (bad) sahf in push fisubrl mov jbe fisttpll pop inc adc jmp mov sub cmp push in stos pop fidivl leave push fnop fcomps mov out daa mov jbe cmpsb mov xchg mov call adc mov cmp lds xor or push dec cltd dec mov adc fldl add jp rcrb cmp test sti cltd mov push cmp int3 scas adc js dec pop aam inc mov imull inc stos mov xor sbb jmp xor cmp push test mov cmc mov mov popa cmc enter dec xchg jnp in sub inc add test lret push sbb and and cltd das jae outsb mov jne mov fisttpll sub (bad) cld int3 (bad) lds (bad) pushf xor lahf outsl xor ret clc jnp hlt xor dec xchg (bad) push dec adc clc (bad) or xlat xchg xor pushf mov and sbb mov pop pop or stc cmc testb iret jmp push or fmull xor mov int sub push cmpsl sub fsubrs into jo mov inc out sub and sti stos jbe nop shll mov loopne and aam (bad) jmp xor sbb outsb mov test mov push jno xor mov nop ljmp fiaddl pop fs push int cltd imul pop mov mov lret icebp mov or push movsl xchg into js mov mov jae push js push imull inc or mov subb jae mov dec pop cld dec add mov sbb lods fisubr jo fs xchg cwtl mov aam dec mov sub xor test mov or and xchg sbb inc (bad) (bad) and sbb sti xchg lds loopne mov ds xor mov add cld (bad) jge or push (bad) or outsl dec adc xor add ja (bad) cmp fstl xor je fcomps jne movsb out sub mov adc iret ret lock mov ja mov add and inc mov inc inc cmpb mov adc xchg pop sbb mov into out fistpl fdivrs sub out lds rclb adc insl ds mov incb push dec icebp sub push lds addr16 and jp and bound add cmp test movsb xchg sbb fwait rorb fisttp mov ret (bad) dec ljmp js orb xor sub jo pop fldt dec (bad) fistl fsubr adc shll mov inc or adc xchg jp fisubl mov add (bad) ror je mov jmp pusha push dec rclb cmp in mov mov cs js sbb sub cltd inc mov lods push add imul aam add mov imul cmc and xor icebp sub fsubl out mov inc mov out popa xchg dec in mov and test cmc lcall fsts fidivl call pushf nop (bad) ret adc mov sub dec add enter xor (bad) mov sub mov loop test in pop push lock jae je adc aad clc (bad) roll std cmp loop inc xor adc push mov int ret mov jmp dec or stc ret std rcrb cmp stos push int3 outsb mov jle (bad) rcrl loope mov mov clc fmull lds push dec test popf ds jl mov or lea or (bad) insl stos cmpsb xor cltd push sti mov iret int3 lods cs (bad) sub xor and adc (bad) adc jae mov or jnp adc add jp pop lea jns loop inc cli and sub leave dec xchg xor xchg cmp in les or mov loop cmp jae xlat in fldl inc push cwtl scas subps xchg mov lods out out sub add lds mov xchg sbb imul fst (bad) jmp jmp (bad) icebp add inc jg lock sbb pop inc and dec hlt lcall xchg xchg cmp xchg adc or dec mov setne sub jae aam orl (bad) repz aas lcall push popf adc inc jo mov cwtl add (bad) aam test fwait mov mov pusha or sti mov int rolb and stc dec popf into adc dec or out cs stos fsubrl cmp mov mov dec mov into mov mov jmp jne jg loop fadds outsb repz xor imul int3 sub and fist in xchg pop leave lret dec fwait and in sub sub (bad) jl or dec and xchg ret stc jbe xor outsb adc scas sub dec inc xlat mov pushf imul jno imul movsb loopne jbe sti mov (bad) xor add popl cld shl dec inc sarl inc mov jecxz push inc lds cltd mov mov jnp cli sub in jno pop pop xchg xor inc pop mov sub scas pop or jecxz lret insl adcl sbb sub push push xor pop mov out cld cltd scas or cld outsl add cli in sarl imul mov in adc loop mov adc mov imulb sti or outsb ds push inc add bound (bad) pmulhuw lahf popf xchg sub insl or push mov cmpsl int3 mov pop or ss dec in lahf or cmp inc (bad) sbb pop aad lds adc sahf rcrb push push out popa movsb adc and pop into fs arpl add adc int3 mov rorl arpl xchg mov adcl andl jns into fisub pop (bad) (bad) jo ds pop fadds rcll int3 call cmp mov push sarb inc ret ljmp stos (bad) daa movsl movsb insb ret adc insl lds gs bound lret (bad) in negl cltd dec jp inc hlt les enter (bad) inc xsavec jge add xor jae pop mov out lret jp aas inc lds adc pop jecxz xchg imul xor enter xor inc test and or cmp stos add shll add sub popf inc repz mov jae dec mov dec cltd inc and xor scas xlat (bad) icebp mov (bad) mov cwtl sub aam jne push adc dec loop dec sub mov in mov test addl mov std (bad) push mov fnstcw xor les (bad) stos add loopne nop sahf lret or adc xchg test daa mov (bad) mov mov out dec mov mov roll xor jecxz push test pop movsb pushf ret daa scas pop mov jmp movsb push daa jnp dec cmp repz insb (bad) hlt (bad) cltd add in insb das rorl and in scas sti in push mov stos mov loop and pop and lods pop adc in dec das cmp mov push sub fdivrs outsl sbb (bad) fwait pop pop mulb sbb scas mov push mov lahf out xchg cmpsb jno ret lcall xor push dec (bad) xchg gs push mov out sbb ds sbb and mov cmpb mov scas dec loop fdivr data16 cmp ja or popf fistl sub xlat mov (bad) lret add scas lds mov inc rcrl push dec es mov jle hlt and (bad) mov stos test test jns test and bound (bad) cli xor push sub pushf int out cltd std popa sbb (bad) test into addr16 dec sub fmul push jns (bad) cli lcall in mov out fisub jl and jae repnz testl jnp pop add mov arpl lods test loope mov and fisttpl and mov push ds call andl inc stos ss mov adcb scas jo push add push fcom adc xor jne pop outsb scas mov mov pop mov mov (bad) jno sub (bad) adc mov bound mov cmc jo dec pop insl xchg aaa mov enter push (bad) lret pushf or add pop xor out addr16 sbb jecxz inc push mov cmpsl add sbb arpl cld add mov xchg add pop adcl cmp movsb dec mov adc jecxz jmp dec mov pop ret ret mov xor cmp int3 mov or pop push cmp or cmpl js sub hlt add xor fsubrl xchg mov sbb cli mov std jge xchg popa jg cmc stos cltd and call cmc mov xchg cli jno test inc inc cmp jns jecxz mov in jnp cmpsb and pop jl aas sub lea aaa xchg jl dec push (bad) jp and fldt cltd mov jecxz jg mov xchg bound leave addb pop push pop push cmovge adc pusha stos rcrl or cmp pop ficomp pop insl (bad) aad push inc jae sbb clc add pop push outsb arpl cli jbe xor sahf aam insb xor (bad) mov xchg jp jne lds mov loopne or enter aam xor adc adc (bad) imul sub cmp adc out pushf out xor leave jnp ret cmp cmp push adc jno xchg inc push int3 cmp insl shr or sub int les sub test add mov ret jecxz aas sbb aas pop jno in cmp loopne mov push nop imul neg push mov mov (bad) cwtl xchg sub (bad) add ret imul pop insb sub pop popa add test (bad) out loopne xchg or movsl inc mov dec mov outsl (bad) into dec and imul es out roll or shl cli adc cld jne dec mov imul sub jns cmp rcll or in stc or aas (bad) sti xchg push test adc stos loopne push das (bad) (bad) lock cmp in xor cwtl dec cmp inc ljmp mov mov movsb mov (bad) sub sub xor jecxz jo dec add outsl sbb xlat frstor xor or adc xlat (bad) int3 lods in cld mov loop hlt pop cltd rcr pusha xor inc stos mov mov sub rorb aam insl movsl inc pop dec lods push add push in pop jl mov imul cmc ljmp inc push je adc testl js mov ljmp mov and ss inc inc roll xor sbb add inc scas inc jle ret mov js lods pop insl popf aam fbld adc dec in addr16 push lock sbb add mov inc cmp aas loop jae jmp mov ja stos adc cmpsb (bad) or inc cmp xlat adc xor sarb into push (bad) loope sub sub icebp push xorl repnz xor mov sahf cmpsl mov scas ret ret and pop int test mov push and pop leave jae adc outsb rcrl xlat push jecxz call mov (bad) cli dec mov fs push mov addr16 push testl adc pop mov inc cmp push (bad) (bad) mov ljmp cld fs or and test push clc test movsb mov loopne mov add mov pop dec pause ljmp nop push xor loopne pop pop popf xchg daa jmp fcoml test mov pop movsl push xchg mov imul cmp inc gs sbbb jmp jge lods popf lret pop stc in pop cmpsl mov pop add sahf mov dec adcl cmp pusha xor sbb out sub das jo mov push push cmp jmp repz fisttp mov xchg mov dec jmp ret mov movsb (bad) daa mov and push pop ds add int3 test mov jl faddp mov adc leave out leave ss das xchg sub pop mov mov imul js ljmp test mov inc jg dec and jns bound in sbb js dec mov gs pushf inc jmp test je sbb lret cs inc mov cmp ja push mov test inc xchg sbb fdivl dec sahf ja sbb aaa cmp inc mov mov mov into lahf sti xor aad call sahf cmp mov cmpsb cs cli fsts xor xchg roll popl scas ret mov xor outsb inc (bad) dec adc pop adc add or mov push fs aaa jmp or pause sub rorl sti aam push and addb jns clc push cmp inc arpl push cmpsb (bad) or sbb inc or in shll jne pop lods adc and inc loop mov cmpsl mov jnp lods movsl add dec xor push sub inc adc pop (bad) pop imul bound mov clc pop sub pushf dec jns inc rcrb call and into fidivrl pop mov mov scas (bad) int adc dec sub flds flds or aad add out add adc jnp loope fistp (bad) lahf pop dec int cmp push pop popa shl mov paddd dec je imul and call in (bad) mov dec mov jg mov cmpsl in (bad) cmp pop arpl adc insb int jo fisubl lds push pop in add imul mov bound jmp js inc out push aaa or inc popf mov (bad) test mov lcall cmp push push sub out pop cld mov ficoml jmp out ss movsl lock or jl or mov inc addr16 popa subl movsb lods mov fildll das jp movsb inc repnz add cmp repnz dec pop jle out cmp movsl mov pop pop push push imul adc mov push add sub fldlg2 add movsl sub jmp (bad) stc pop in xchg xorl sub pop loopne or inc cmp out lret mov pusha pop imul pop push and nop das test jbe jp or mov (bad) aas fdivrs popf in mov aam push mov (bad) xor mov call and mov mov popa stc mov adc mov push add outsb stc jns int jg and mov cs mov cmp insb push iret lahf movsb ljmp jbe es (bad) pop sbb lea inc ds andl push xchg les mov (bad) ljmp dec stos add enter ja jnp iret pop jecxz cmp shrb cmpsl xchg cld lods ret int3 ja cltd cltd pop mov lock mov and lods add out ficomp les repz (bad) cwtl inc ret xchg inc push pop int es jo test cwtl xor mov mov push cmp dec push jp lods out xor mov mov push (bad) out stos dec push mov out mov xchg mov or lret jnp shl and cmpb repz jge jl xchg sub adc cld lea ret (bad) fldl in and test out lods (bad) or cltd aad addr16 sarb xor stos ret mov mov xor je mov mov pop rorb xor nop mov ja dec sub jl loopne jae lret outsb cwtl mov dec inc push mov lods ljmp imul adc aas out in sahf flds dec or lret push inc xor pushf xor inc cmp xchg movsl mov fistpll mov mov out lcall xchg cmpsl movsb inc mov or cmpsl bound pop adc (bad) or jl sbb orl and (bad) stc mov jl aam repnz loope sbb mov leave mov test rcrb jmp popf add loopne dec sbb scas lods sbb pop inc jmp or pop leave outsb shrb dec adc mov fdivrs lea xchg int xchg les jg xchg push cld sub ret pusha jmp fidiv or out mov push dec in sbb outsl js fildl pop sbb jge sub mov and stos xchg popa sub stc add jecxz mov mov std adc push cmp adc sbb in xchg fcoms ja (bad) cmpb jae and (bad) call push add xchg js xor cld mov iret lcall push sbb lret std lea mov push mov push scas pusha add icebp movsb push and inc xchg sbb sub xor daa cmpsb mov dec mov (bad) cltd xlat jl jecxz cmp mov cs addr16 mov enter jmp decb in adc test pushf inc movsb push and stos jae mov (bad) jle cli mov loopne les push xchg pushf ss adc in sti xchg inc movsl push shll cmovp jmp xchg lahf adc mov arpl inc lods jecxz test add xor pop loopne push rcrl xchg dec jge xlat or out ret xor adc push mov xorl dec fildl aad (bad) mov gs pop cmp and shll jno xchg mov cmc sub mov lea aas dec daa push pop lock fmul je (bad) mov in mov test mov jecxz sti xlat lea pushf roll mov sbb fs je mov push inc jmp out cmp pop lret push mov mov xor subl sbb add mov fisubrl push sbb add rolb push add pop out lahf mov lds jg call mov xor mov lret mov movsl push icebp lret adc fistp int3 adc inc aaa repnz cwtl lahf mov inc loope inc in dec xchg lret push in inc dec mov stos jmp fsts sbb lea sbb dec pop lahf push mov push clc cmp fstpl inc das lcall inc cmpsb mov mov (bad) cli sub cltd sbb stc or jae pop mov scas push shrl rolb jg ret bound mov mov cmp mov frstor ret cld or jne bound das lods daa es push mov push xchg ret test pusha jnp fcom xchg add jo xor lods fcmovnu lods mov dec pop pop movsl push test out adc dec push add pop and mov push arpl lahf (bad) xor pop ja or dec mov js pop dec rol cmp pop std pop fwait std inc fwait iret jb aas xchg test repnz or mov lcall imul push lret stos ljmp popa dec jg ljmp enter fs std inc adc and jnp cwtl add sarb negl sub into lods cmp cmpsl sti push adc add lahf cmp out mov js fisub mov out push cwtl mov cli shll mov adc dec push sub or or arpl inc jp test aad jns xchg sub adc and mov sbb clc dec loop adc mov sbb xchg cmp das aas xor add rcrb pop push test adc in cltd frstor shll incb inc (bad) mov pop and push cmpsb hlt rcll push and sahf or stc fwait jp ja mov mov dec dec pop loop pusha and aam adc adc add mov add lods test pop dec popf call aad fwait and ljmp pop sub mov jge dec fild cs push cmp cld gs mov test jle (bad) (bad) and mov mov push test test and aad push dec subb fs popf mov fstpl in repz mov (bad) lret jp pop dec mov mov push pusha iret pop es bound sti xor pop repnz clts mov sbb push pop stc fmuls pop (bad) and jp fwait xchg pop xor mov xlat and sub daa popa push adc xor leave jbe cmpsl mov aad push sub arpl push inc rcrb cmp shll inc xlat mov iret add in mov xchg xor ss (bad) mov movsb xchg dec xor mov jnp orb push or jb es ja pop mov scas ds lock ja jecxz test or pop and shrb out bound cld dec push push mov pusha pop mov dec cmpsb cmp in call mov sbb rorb std adc cmp rdpmc adc adc fldl loopne int push aas shl add aam imul mov sbb fwait mov xor jo fildl mov cmp stos jno mov ficompl adc (bad) push in fcmovne lods (bad) jns fisttpl (bad) shr enter add ret sub xchg add ret cltd fisubrl pusha subb mov lahf jp ds test and in subl push xchg addr16 daa ret (bad) out push mov xor sub mov ss dec cli hlt lods lods nop pop add lret adc loopne test fildll push pop or pop mov push xor inc jbe mov (bad) xlat or sbb and fldenv adc stos mov sbb xchg sub cwtl cmp in xor out sbb in fwait cmp inc call jge xchg repz add mov mov push add jl inc dec addl lret (bad) (bad) mov or xchg xchg cmc jg mov pusha add xchg fdivrl aad sub cmc add (bad) cs add sub aas jmp pop xor outsl insb stos sub dec mov and fcoms and adc sti sahf adcb push push stc aam pop in jmp imul sub arpl out or or adc aaa xchg pop cmpsl scas pop fnstenv dec lcall inc mov fisubr or cmc mov rcll sub stc mov jne mov mov sub cmpsb test loope inc sbb rcll fidivrl mov fcoms inc shlb jle test ret fsubrs push int3 jg (bad) cmp cmp call mov (bad) fstpt mov (bad) iret sbb bnd nop loopne stos mov imul int adc push in sub sub dec popf cmpsb loop fisttpll push out cwtl and sbb adc or cmp notw sbb adc fnsave fldl push inc jl bnd (bad) and in fbstp add sub testb cmp iret fucomi cwtl lret jbe enter test insb cmp add push sarl or (bad) jnp stos lods out (bad) xchg mov pop jae lds rcll mov xchg (bad) out int loopne aas (bad) popf outsb mov add pop mov push test adc sub pop pusha xchg (bad) push bound repnz mov es std xchg inc cmp xchg jne cs test ljmp (bad) enter int3 adc in cld enter adc arpl add add std cmp inc pop inc push negb sub aas movsb test icebp rcll mov xchg jns lgs xor or rclb lcall stos mov and mov ja pop nop xlat cmp insl xor inc sahf lret addb mov ljmp in dec jno pop rolb sbb scas movsb xor icebp cmp mov clc cltd ss xor cmc hlt fwait inc mov (bad) mov icebp add or ss jg and mov rol push push (bad) repnz xchg xchg into repz lods sub push and dec adc cmp repnz icebp xchg pop clc or dec adc cmc jne xchg hlt shlb rolb lahf mov shrb mov rclb push jmp (bad) push addb dec sub lret clc mov mov mov repz jg out int3 iret add jl cli adc cmp and adc pop int inc ret pop and inc xchg out rcl or xchg mov pop xchg sti sti mov adc sub repz nopl xchg mov and push cmp lock push push mov xor in ret (bad) ja mov or pop enter popf cmpsb stos lock dec lcall fwait sub and push (bad) iret and jb cmp scas int sub (bad) adc or sahf test pop xor and sbb aam (bad) notb inc xor xor loopne xchg pushf sbb loop (bad) jle pop jle lods iret xor aad add mov lahf loope popa mov inc mov cld lret call cwtl mov mov sbb lcall xor pop cmc push nop ret add mov iret push sbb jne push imul push cltd in (bad) stc mov cli cwtl out lock (bad) and lock ret adc push push mov mov jp cmpsb lods mov push mov shrb fidivr jecxz jo and sahf jne and or jecxz cmp (bad) mov movsl xchg sub (bad) push push int mov (bad) jb loope adc pushf lods mov mov test jb lret inc sbb cmp pusha test call dec std push or pop jae in sub insl nop xlat cmpsl xchg inc cld sbb or sbb xchg push mov xor sub and sub (bad) mov mov (bad) cli mov fnop sahf mov addr16 inc inc push lods aaa cmp mov addb mov cwtl arpl dec sbb dec popa mov movsl jmp (bad) insl mov jbe jnp orl icebp adc test xor (bad) cmpsl pushf ja mov xchg movsl cmp lahf mov sbb xchg das mov inc pop out or gs pop or add or add mov cmpsl add sbb jb sub push pop pop (bad) mov daa mov mov stos movb pop fwait je sbb and pop jae fidivrl xor scas xchg and bound cs out push and popf push xchg ret or or (bad) data16 xchg test inc and sub repnz ja mov cmp jne fiaddl lods or fldcw cwtl jg cmp idivl loopne dec test orl fsubrl cwtl in bound repz les icebp xchg lret add jno pusha les bound xchg fisubl xchg mov adc adc jle pop xor lret popa js dec js (bad) mov add jge inc adc sahf test pushf xchg in adc les scas push dec push or test test nop imul sbb scas mov xchg pop or jnp push lret mov je rol lret xchg push jmp jle push lock aaa mov inc sub or push pusha loopne cmp fcoms mov fisttpl aad (bad) es stos cmpl test xchg dec ret fisubr jns (bad) loopne and lret mov dec add mov mov mov mov push in push fstpl dec mov push push adc pop data16 add je jecxz sub negl push test jae and ret fnop in push hlt out or ret adcb leave xor sbb iret push hlt add out aad iret mov (bad) sub scas jg cltd imulb repnz sbb fwait push push xchg data16 xor lods (bad) mov ss jns pop dec add cmp lahf rclb mov mov insb or lret xor mov les cmp test aam leave dec pop call decb lea popa les daa lahf or pop adc imul je sar mov mov mov adc in in sub aas test in cli ret scas mov mov ja sub repnz jp pop cmc push dec (bad) push fsts and mov inc loope mov rcll sbb pop jbe cmc or ds psraw aam sahf (bad) sbb xor pop mov sub std mov jne imul jb add lret push loopne sub cwtl jae,pn push mov rcll pop imul fidivl ror stc dec imul fsubl sub mov leave cmp mov mov test xor jl ret sbb pop or cmp test scas mov in pop add loope jnp (bad) es fwait adc lods aas ret lods cmp arpl (bad) cli inc in lods inc xchg lods rorl test fsts or nop inc ds inc roll and rorl bsf cwtl mov cld loope push pop pop add test lahf fwait push fsubrl xor test sub push and mov add dec and je dec cwtl outsb or add scas pop or and out cld pop push rclb jmp lret dec fwait shll test into xchg mov gs insl xor orl dec lea (bad) cmc sub push mov mov cmc lret pop ljmp fnsave lcall pop shll jecxz xchg add cmp sbb mov repnz jbe jb (bad) mov or dec pop push insl add mov or in loope fildll push in je cmp jge into sbb cmpb jns push xlat movsb popf lea adc daa loope pop mov inc add rcrl jp arpl mov xor pusha inc jae (bad) cmp sbb in cltd lahf test mov push arpl sbb cmc out repz ret mov pop lret lret mov inc testb mov add pusha lret rorb sub sub jmp in dec inc mov test int je cmp pushf mov pop pop cmp mov enter (bad) mov sub xlat mov mov (bad) notb push sub jp xor push pop inc icebp test pushf imul lret jbe aaa out xchg fdivl test or dec push mov jo push pusha jmp jbe mov mov (bad) out pop fisubl xchg aad lret and pop scas fs lock imul mov push fcompl dec jno dec xlat cmp popa scas notl outsb jo (bad) hlt outsb scas (bad) xchg loopne adcb add push outsl aam inc outsl mov or lret mov or add mov test ret sub dec xchg xchg test dec dec inc sub sub sub psraw add ret stos insl cmp jle div pop mov mov cwtl pop push sarb lock xlat mov and mov data16 mov cmp jo (bad) inc popa les mov rcl movsb (bad) mov jo cmp jns pop mov mov sub or int3 mov dec fwait cmc add xor fisub mov int mov adc pop arpl mov mov cwtl sbb mov mov jl xor cmpsl sub sub lock mov adcl nop test xor adc cmp xchg mov imul jp (bad) lahf push sbb ss push loopne dec test (bad) mov divl mov test pusha cmp rorb push arpl mov adc mov and clc pop mov mov pop mov xor mov mov inc xchg adcl xchg push fs pop lcall xor push mov and mov mov lahf lock cmp call repz mov fdivrs sub mov addr16 sbb int3 daa aad pushf lock mov push mov xchg or push ret jg jo jp and fdivrs push (bad) test and mov test bound aad lret and shlb movsb xchg out mov js push push in repnz (bad) in sub xor je xor addr16 adc and push xor call sarl mov insb mov leave addr16 xchg rclb inc and mov jno sub cmp lahf aaa xor or loop bound xlat xor and pop sbb jbe inc in add out insl cmp sbb mov and lcall out jmp (bad) push ret adc lods (bad) dec popf push add test inc (bad) scas add mov mov leave mov inc xor (bad) movsb imul or push js xchg mov pop mov out dec scas mov mov adc das movsl push adc sub (bad) xor (bad) and xor sti lret xor sub ficomp push inc or xor and fadd sub cmc pushf call orl or inc pushf add or into dec jnp mov je,pt movsb fs add push jbe push add push call dec fs push xor cmpsb sub pushf mov add test sysexit mov lret cli dec sbb nop jno stos xchg push xor add and mov pop mov outsb clc outsb outsb jp xor incl test inc push in scas mov fsubrl xchg icebp enter inc (bad) cli inc pop mov push imul sub mov fwait adc insb data16 cmp sbb inc mov lret imul inc outsl xor aaa ljmpw mov js test call or push fnsave sub cmp mov repz iret adc sbb stc push aad ret lods outsl mov jl cltd dec push adc sti leave sub es adc fimull scas sar mov scas popa push mov push test in ret ret push mov clc loope xchg scas clc icebp imul push pop push (bad) sub sub out aas xchg dec addr16 lock jmp mov jmp shr ret push pop add sti xchg jns shlb scas add loop xor mov into dec dec das popa pop arpl imul mov xor xor push fmul and jecxz lea fsts nop (bad) repz add hlt pop decb lods js jnp movl arpl cmp stos jp mov les cmp cmovns and daa jns lods addl scas cli les mov lahf add and (bad) or dec cmp and or (bad) xor mov push push out stos xor mov pop xor scas xchg pop out push cmp outsl (bad) outsb hlt xchg xchg mov int rcl or cmpsl int push cs lea jbe pop mov rorl es sub (bad) in sbb mov mov (bad) pusha mov in or daa insl pop pop (bad) add push int3 mov push dec pop (bad) mov or adc fcompl sbb mov lods fimul loope mov data16 popa lods mov pop pop outsl js jno lds cmp data16 xchg pop inc inc jno or clc push sbb insb repnz prefetchw or test aas loope dec cmpsb mov xor dec xor aaa pop popf mov mov add jle push jg or (bad) cld push aam outsl sub sub jle adc inc sub out mov fisub (bad) dec sub or pop add cmp imul gs adc or mov loopne jle mov into jbe push push ds or jnp sbb iret push xlat xchg dec mov addl test test and or aaa (bad) mov or mov cmp pop loopne xlat jle inc notb xchg add inc push fcmovne mov mov es ltr aam in push loope xchg in push in rcrb xchg dec test nop scas xchg mov insb out out test xchg jne (bad) je int popa jmp mov fistpll mov push dec inc cmp mov jno add push jl rclb data16 pushf fidivr (bad) or sub push in das mov pop ljmp scas mov lods out xchg or (bad) sahf or pop mov int3 cmc dec dec xchg push stos loop cmc add jns add xor jns scas inc xchg jg test sub pop and push fisubr push jmp mov push movlps xor jno inc jmp movsl insb (bad) cwtl cmp jae pop (bad) fwait lds clc addr16 (bad) jbe adc stos adc mov adc mov arpl xchg aas add (bad) or insb push xor and mov push xor es shrb (bad) xlat das fs adc rolb xchg scas pop add mov cld push loopne jle push arpl popf xor adc dec fwait add imul and std cmpsb inc xor arpl dec (bad) ja inc add cwtl cmp pop push lea mov dec repz je cwtl pusha lahf fstpl clc movsb pop mov jno cmc pop jg aas mov cmc sahf cmp jb inc bsr cs mov cmpsb cmc cmp ss gs and addr16 mov insl popf outsb outsb cmp imul into sarb nop js roll or pop stc (bad) jb mov sub das cs cmpsb sbb sbb add or shrl shll jp insb popa fstpt ffree push js jl addb mulb pop imul jns mov pop sub fsubrl push pop xchg (bad) call pop jb in (bad) jecxz cmp out jns pop imul dec push into xchg lods orl insb inc ret sahf pop mov mov and xor test (bad) in lret mov imull pop cltd aad push cmp push les push je sub push pop rcrb jnp aad scas sub cmp pusha loope pop lret (bad) pop out mov and les lock sbb sub into xchg pop pop cwtl lods icebp and or or fildll sub sbb jg add add cmp int mov ja or je fs inc out xlat cmp xchg jecxz adc and outsl mov sti inc dec icebp add pop jmp pushf fs mov pusha or or xor push jne jns daa nop rclb out stc mov jb aad stos pop push stc js loope mov mov es push loopne xchg add mov je std sbb std xor push dec jge jno adcl (bad) int3 add outsl jne pop pop jmp push or scas adc insb adcl aam push sub mov fsubs sub inc rcrb and xor lret aas fcomps in pop sarl mov lods xor xor jg arpl pop clc add mov into xchg das sbb xor or movsb aam popf mov (bad) repnz mov in cli ds ds loope add stos (bad) xor inc mov push inc cli loope (bad) sbb inc out cmc sub sahf imul or push sbb fmull fwait lcall mov mov push pop xor inc sbb cmc clc sti out inc out subl sbb dec loope xor lods inc aad xchg xchg popw jg or xlat cmpsl push dec dec (bad) notl adc add xorl sub sub mov bound mov es mov jp popf popf push loope mov add push into adc in jne jge loope sbb inc loope int3 into test xchg pop mov (bad) aad cmc addr16 pop cwtl mov jbe leave xor sub xor fucomp jne cmp dec sub test rolb shr imul dec push jno mov sbb mov mov movsl test ret testl lods popl setbe sub insl push out les jecxz jo or xchg addr16 lods cmpsb out xchg pop jo sbb fidivl sub test fwait insb add mov cmp jnp fisubrl bnd sbb clc shrb or mov iret push mov ret stos daa shrl call add mov outsl jp (bad) in adcl jae (bad) fist insb inc scas cs mov loopne xchg xchg pop shrb jmp push push data16 cld mov or cli xchg imul in xor jl lea cmp and mov jmp push mov jmp in mov xchg inc gs push pop adc mov cs xlat clc pop mov push mov cmp dec daa insl fwait sbb fistl mov jecxz movsb or out fbld nop xor andl repz adcl xor scas push add dec mov sti jmp mov ret pmuludq lcall pop xchg xchg inc cwtl xchg or jbe out cmc cmp negl std mov std ss mov and (bad) pop stos jo mov dec inc jbe push lods sbb mov mov movsl cmp loop push iret xlat jg mov mov mov call pop subb or inc mov jae or xchg cmc xor mov sub jae mov mov push jle adc mov mov rcrl icebp data16 cmpsb xor icebp mov lcall fisttpl sub add int subl push pop adc popf xor ja insl sbb xchg fnstcw xchg daa mov and push push or sub icebp in imul mov movsb push (bad) jg mov dec lods pop mov aad into cli xchg xchg dec dec mov cmp (bad) jne stos xchg xchg add (bad) repnz hlt adc xchg mov leave hlt sbb out out add add (bad) scas (bad) mov hlt test lods lods stos or push movsb enter xchg stc inc ja orl mov or fwait jbe ss or mov ficom jae iret pop out push mov add xlat or dec adc fcmove jb dec sbb fnstsw push out mov or leave add pop gs and and out pop inc (bad) cmp ljmp adc push cmpsl dec inc add cli and pop adc pop push stos sbb mov sbb mov je sbb cmc es out mov jge jp sub (bad) lahf dec mov cmpsb das dec mov pushf fwait cs mov repnz cmpsb cmc fistp xchg imul jbe iret jae aas mov mov (bad) in xorl jo lock movsl sub fscale cld loop sub xchg pop push push movsb pusha outsb xor dec ds sar jmp xchg sub mov int3 test iret rclb (bad) xor and lcall jp das ret ss inc popl lods mov cmc and repnz sbb gs sub scas xchg cs (bad) ljmp push xchg pop js clc dec iret mov pop rorl rolb sub (bad) not ljmp jae xchg addr16 stc jns push dec adc (bad) shrl (bad) mov and pop test push (bad) xlat mov mov jmp jns jmp add push or cld mov (bad) mov dec sahf and test mov (bad) outsl std mov mov inc xor stos xchg jb div outsb mov repnz and psrlw pop (bad) mov push xchg push stos mov sbb pop jno das jp dec pop dec cmpsl jns test pop cmp stc push mov mov push imul lods scas mov cmpsl push xchg sub (bad) jne or push int3 aad ljmp aaa in icebp cli pop push imul leave mov data16 fcoml mov mov cmpsl inc cmp sub pop dec ret cli add loop rcrb stos cs sbb adc push out mov xor lret fcoms (bad) leave pop adc push cmpsb popf jns mov pop lahf js adc ret sub jle dec dec cmpb dec add adc gs or lea or mov push aad or add mov inc xchg mov pop sub sbb mov call aaa mov aam (bad) int inc (bad) pop pop xlat add dec stc mov adc dec mov dec stos dec and enter scas cmp cmpb pop (bad) test mov jne xchg sub mov jmp and push fnstcw adc and xchg aam dec xchg call gs inc push out pop or in sbb jno push cmp fildl out sub pop pop push mov into gs push sub push cmp xchg adc jo mov loop dec mov xchg sub adc pop test sbb cwtl adc pop cltd cld iret inc (bad) loope sub movsl fcoml sbb dec jl sub test (bad) pusha add sahf cmp and lret dec icebp and xchg mov mov and test adc fs es ss scas xor push gs or (bad) or add pop pop cmp call jl adc cmp data16 xchg (bad) stc mov (bad) sbb or sbb ljmp decl inc and pop stc pusha mov jne imul fwait lea dec out loop in int3 sahf adc add cmpsl hlt push add imul and lds dec cwtl imul int3 test add sbb (bad) mov (bad) xor or sbb adc mov mov fadds push insl dec mov cmp cmp mov inc adc inc popa je movsb in cmp adc xchg fnstsw and mov mov or jecxz test int3 outsl inc imul pop mov jnp test ljmp (bad) mov jns (bad) ds (bad) ret adc xor loop out daa data16 int3 ret test sbb inc icebp cmp xchg jb fcom ret mov cmpsl inc daa arpl jle jo cmp movsb push jne sbb push lcall xchg xor lods ja add movsl ret inc es (bad) aaa mov inc aas movsb push aas lds cmp or inc xchg pushf clc in mov shrb jge in jnp cli sbb dec pop mov cmp sbb pop add dec jmp insb inc scas pop cmpsl push sub add (bad) or repnz popf xor push push xchg dec or js fisttpll add gs mov inc les xor push in mov fdivr and aas icebp jae xchg cmp sub push bound (bad) jae cmp lds adcl sub (bad) rorb cs out outsl mov ja,pt and push jmp cmpsb iret xor xchg pop lret ljmp mov push cmpsb out pop add push daa or fdivr fnstcw shrl push jae rorb call addl repz insb jns cmp and test add cmc xchg aas scas aas lahf mov mov jnp sub lods mov push add clc push inc enter or or fsubr and add adc (bad) xor ffreep insl push mov push inc push loop cmpsb lcall addr16 mov xchg jne movsl vmovhps lea repnz mov mov inc inc sub mov (bad) or aaa or xor mov ret sti movsl and mov scas repnz and jmp outsb sub mov adc dec jmp stos add sub call lcall (bad) out int3 or (bad) les shl pop outsl sbb xorl push ret mov push (bad) stc inc adc or and xchg mov lock add adc rol push dec mov rcrl aaa hlt adcb ret and push ret loopne mov or mov mov dec (bad) mov movsb mov dec and js lahf sub and popf mov lds xchg in testb jns imul jno inc jmp fisttpl arpl in dec and rcr in shll ja lret mov aad adc mov cmpsl xchg push movsw bound pop dec pop mov hlt mov jo rcrl test or push jne mov scas sbb loope in or and js mov cli divb test sbb pop jne scas fwait sub and push fs jo (bad) les out out jecxz inc fdivl bswap out (bad) out cmp clc jmp imul test mov decb jp lret mov sbb test xor mov fsqrt mov mov ds sbb ja pusha jle push mov or sarb add (bad) jle out jp,pn fstpt push (bad) add fdivp mov fldt scas ror ret mov sub in adc adc mov addb mov arpl mov sub (bad) mov mov push (bad) mov xor sti xor ret push pop ror scas xchg sub mov int insl imul cmp push int3 and add and jmp jae repz push cltd insb or pop cmp push mov out dec or or jns mov hlt int3 ss jb into dec and mov mov leave xchg aad add jae pop mov push ror std jno add in imul into and xchg (bad) jg dec and jge sub test mull daa cltd mov xchg cli cmc and clc mov pop push and jmp repz repnz nop pop pop xor or les out jg clc inc pop notb mov pop lea pop mov add insb mov add mov cmpsb imul push and adc cld mulb or adc fwait jecxz push jg cmp insl ret (bad) mov or jbe jge sarb mov cmp sub out mov lods cmp int shll push imul push push fiadd jnp lahf sbb cmp xor (bad) add popf push imul jno sbb xor lea jl add and pop mov xor repnz adc dec mov ljmp addr16 aaa subl push arpl mov aas jl ljmp popf and cmp mov cmp shrb les and dec dec rorb cmp xchg mov inc in mov enter ja lods fidivrl cmp fwait mov lret dec aas ret hlt psubq popa xor xor repz sbb fsts scas mov les bound movsb iret push std cltd repnz aas and in fdivl fxam std (bad) jge ret mov rclb xchg bswap fisubrl lock jl cmp lods cmp data16 xlat and adc xchg gs (bad) shlb mov or (bad) int stos pop dec add je fldenv mov xor lcall sti add fdivrs xlat cltd mov (bad) xor jnp stos cmp enter in mov cmc scas repnz cwtl mov xor push and aas pop jecxz mov xchg imul adc ror pop aad jg incl das jns ja adc ret dec stc push sarb lds ljmp pop xchg and loop test (bad) ljmp icebp mov nop in add jecxz sbb (bad) jo lret out in xlat and out sbb cmc adcb lods sbb sub xrstors sub mov jno (bad) mov sbb mov adc (bad) mov xor repnz lret fisub popa leave lods dec or mov (bad) sbb aam lahf bound mov xor push movsl jae pop in mov or (bad) fbld les mov stos call mov gs dec repnz pop shl fcompl add outsl sub pop cmp pop stc mov lret adc mov loope xchg cli das lcall lods (bad) sub cmp jmp outsb jb pop fs loopne out popa insl jecxz loopne lds xor xor jl (bad) push stc movsb test xchg and daa cmp and and imul adc js xor mov outsb aaa or dec nop lret pop xchg mov pop dec fwait imul or pop call arpl ficom gs add jmp add add lds cmp inc push and xchg pop pusha jecxz test dec out push scas jg fiadd pushf mov aas jb gs jae dec les (bad) xchg fwait pop xor jge pop jmp pop ret bound dec js dec mov in mov sahf jmp es ss sub push ss inc cli dec dec mull jl std or push pop and data16 push adc imul mov insb (bad) mov or shl rcrb inc adc ret sub push add nop (bad) sarl push aam outsb nop xor and movsl mov xchg es xor sub pop push xor movsb xor push mov lret pop sbb pusha xor mov xor xor std (bad) in add mov xchg inc push aaa adc subps adc fnsave test add inc dec inc das jb negl bound sub sub aaa mov mov es (bad) je mov cltd stos sub xchg xor cmpsb push popf nop popf nop jae jg addr16 aaa xor jbe daa ljmp sbb sub addr16 lock mov rol sbb jmp fistl imul testl mov xor aad jl fnop outsl dec push fsubl pop (bad) mov sub adcb dec cmp stc imul outsb pop imul fmul add ja sub xchg data16 push dec fidivrl ds adc lock xor pop pushf add jge repz jecxz dec xor fisubl outsb leave stc addl ss mov xor mov out outsl (bad) or or xlat insl mov stos xchg hlt ja icebp in fiadd jo loope push aas dec pushf divb xchg ss sub nop jne jge dec xor ret outsb push into fisttpll add adc jno jb rcrb cmp aad popf and (bad) adc stos add mov cmp add push push cmpl mov in add jb sbb push and xchg push mov xchg or and mov loope mov rcrl ret sbb push xor xchg jns cltd adc xchg repz daa xchg decl cmp or and dec mov xor test and lahf sub lret sbb cmp and add pop pop mov mov cltd jb test xchg jne bound fsubs sub push and aam dec mov mov jecxz,pn pop outsl jne xchg jmp hlt sub cmpl lods movsl pop fimull clc test pop adc xorl ja jb jnp in pop xor outsb (bad) jbe dec pushf dec mov scas pushf sub ljmp ror inc test pop and outsl xchg add cmc je push fmull cmp test xor in xchg fdivrl int3 jmpw pusha sti jb mov jge cltd popa sub stc mov mov rdpmc xchg mov out imulb movsl outsl inc mov xor les xchg and pop imul xor repz cmpsl out and and loope iret jns outsl jmp icebp or call ss and xchg stc ja pop sub and pop xchg sbb jmp cs xchg add lret imul jb pop jnp cmp mov adc cmp mov fdivrp in dec sti mov sub cmp (bad) sti xor sysenter aad add and xlat add jl fwait add jecxz aaa push jae xchg out sbb jmp inc popf mov test outsl int3 sub sar in adc pop jl xchg inc mov fidivr jnp adc inc pop and test mov daa jb out cmp notb lcall jnp push pushf xor fdivs cld aaa test repz jge xchg loope jns fwait adc fcmovbe adc mov call imul xchg icebp cmp pop mov and into inc dec sti dec stc clc mov dec adc xchg das lret xchg (bad) das outsl xor icebp xor mov imul arpl fildll ljmp push inc daa jge sbb repnz and iret push pop imul inc xchg lcall cs faddl pop pop dec adc pop lea adc xor mov repz jg dec dec xor cmp cli push stos icebp (bad) addr16 and (bad) hlt mov fbld iret dec jne daa inc mov fcomip mov xchg test loopne or cmp fsts push les (bad) rorl xor sub mov pop push dec subl imul les add sbb pop inc jnp cli pusha std inc dec dec fnstcw aas dec stos or sub push dec sbb dec aad jge in out or cmp call daa adc call stos sub es insl nop lahf call ret fdivs lret lahf xor mov aam in cld sbb dec pushf xlat mov test xchg adc jnp icebp (bad) xor cs xchg mov test mov popf test xor jp movsl push imulb jle jns lret cltd adc push sbb (bad) popa clc push (bad) fcoml dec and sbb and insb push adc into roll mov test cltd push or cli loope dec test lahf pusha sarl jb mov in inc push jbe mov jecxz in pusha les pop inc push ret stc leave adc test jne aad or sbb rcrl jnp int3 add lock or aaa sub cmp cmp mov add out in hlt test dec pop inc dec outsl cmp call and cmp repnz cmp ljmp ss shlb mov mov xchg cmp or rorb in or add or xor xchg sti daa arpl nop mov sbb jge push js dec push fiaddl popa pop mov fwait out test pop jae or nop jo adc test in sbbl jge pop (bad) stos xchg repz sbb sub cmp test add mov cmp mov jg incb adc push je dec outsb adc stc jnp and lods pushf xor cmp inc out jbe fcmovb addr16 pop mov out push push push in and pop cmpl inc ret rorb adc mov rol clc cmp inc mov jg jo adc jo (bad) mov (bad) mov add ret or mov shr in mov mov out fadds lcall xchg push or pushw add test lea mov lock aam out push outsb inc cmp shrb popl incl mov loope in pop fstpl out mov or div mov insw lret pop aam sub into push sbb dec shll lods sub pop jl sbb test inc fistl (bad) lret mov xchg jecxz mov lods popf ljmp cld mov adc xchg mov mov jb jnp daa test jg sbb add test dec jl roll sbb add mov sub pop add (bad) xor rcl cltd lds addb lods fnsave pop mov pop pop push xchg cmp adc xchg jle sarl xchg jae sbb in stc cmp in mov pop lods (bad) push xchg dec ja ret cld mov movsb and pop pop add and push add push jmp pop and cmp dec mov dec insl in fbstp push pop aad pusha outsb push and push adc mov sbb mov cmp push jmp mov inc mov mov and ja jbe sbb push mov xchg pushf adc call int3 xchg jmp inc sbb mov mov mov or arpl imull xchg inc (bad) movb in xchg and pop aas mov mov stos mov outsl stos jg push push sti mov sbb mov jmp mov (bad) xchg cmpsb loopne das mov popa dec out das mov jg xchg jge mov cli daa add dec cmp (bad) dec imul dec rorb lahf sub data16 inc sti repnz jo dec cmc das es into push sbb dec pop cmc dec pop mov push popf mov js xchg mov or pusha push ret xor roll (bad) in stc test andb mov mov xchg out pop mov addr16 sbb sti aas pop outsl add push cmp mov in loop int3 adc cmp dec inc fldpi mov ja hlt xor pop add iret lea jb sub cmp test call stc mov jl or lods scas inc dec pop es daa (bad) mov mov and (bad) xor push push (bad) and in mov xchg dec mov pop pop and imul cmp dec pop push lds divl or xor add push mov into push cltd push sbb sub lock jno int adc mov repz fcmove bound and test ficompl in cmp sub push outsb adc sahf in xor sub (bad) fs mov sub adc inc insb mov push jl jg mov (bad) rcll pop push jl pop ds pop out ja fist cmp and fcmovnu mov xor pushw jne pop or jns into mov xchg or cmpsl les jg sub adc insl cmp lret pop shl mov ss jo stos mov pop adc bound adc fwait inc lock in rcrb cmp daa imul loope sub jb push jae xchg stos dec (bad) fisubrl jp adc adc mov cmp enter xor mov jl jecxz movsl and jnp jbe dec andb js js repz test sbb add jne dec adc test (bad) dec jge dec (bad) fbstp stc adc icebp fsubrp pop xchg mov lock cltd aas push sbb inc pop in movzbl daa jmp jb frstor sbb hlt mov push je pop pop mov mov push xor in notw xchg hlt jno push mov pop ret dec stc imul aaa lea sarb pop inc dec push cld rcrl aaa xor adc xchg call adc jmp (bad) cs shrl and mov or jb mov push jl mov sbb push dec xchg add cmp cmc es (bad) mov (bad) test call mov fwait xchg and test or push aas test test add icebp sar in daa push xchg in pop (bad) cmc cmp mov ja adc gs xchg pop cs (bad) mov inc (bad) jbe std jae push cltd jmp dec adc mov int sub cmp mov adc test mov stos jno pop jp int3 fldt push add jb push out mov adc or imul dec into sub add cmp sbbl xor push push pop int jbe lcall rol cmp test sbb int out push mov push popa xchg ja mov rcl cmp inc rolb and mov (bad) pop in ss xor lret icebp test mov mov mov notl xor xor out rorl insb adc scas mov jg int3 mov loop mov jo fs (bad) bound xor les mov sti (bad) (bad) sarb (bad) aad fs pop fldcw fsubrs (bad) (bad) jne mov mov popa outsb loopne rcr mov lcall jbe mov fs cmpsb addr16 clc fsub and ret test mov ret outsb (bad) (bad) adc negl repz imul scas xchg movsl adc push mov aad repz cmpsb pop lods cs xchg pushf ljmp or fs pushf (bad) (bad) lds repz int3 aad stc cmp sub jno rcrl or jns and and add dec xor jle in out xlat mov sub sbbl add add in sub mov mov loopne dec add push mov (bad) xlat dec loopne sub fidivl mov mulb lahf jle ja or cmp repnz xchg mov cmp fcoms nop inc cli and adc sub push ds mov out (bad) dec pop cmp gs and add sbb or push mov leave xor jl test lret xchg push mov or and clc in cs leave push movsl std xor popa adc leave js (bad) call adc push out (bad) es fisttp mov dec mov mov adc rcr test inc sub push movzbl mov out (bad) sbb cmpsb ljmp in add cli cmpl push in cltd pop ja push cmpsl jl dec mov aam pop sti adc pusha hlt and sub push and or lock je xchg xor test sahf push xchg pushw lock jb ss cmc or dec dec dec jne mov scas pop or out sub xor sbb insb sbb fimul cli incl cmp rcll xor repz xchg ds inc cmp add incb les ja test mov mov dec push dec sbb mov clc xor mov imul (bad) jae xlat mov jecxz and fs adc fdivs or dec lds dec iret xchg sti repz and into mov add dec insb inc jge aas loopne adc jecxz pusha scas arpl hlt xor or jno mov rol fs test adcl mov or les ljmp push rclb fdivs cltd int sub int sarl inc inc movsb mov sbb sarl adc les jp adc and adc dec mov add movsl dec in out test pop scas pusha stos cmpsb insl jecxz (bad) (bad) jo pop (bad) jno iret pop and mov push jnp or sbb push (bad) sahf cltd outsb push xchg mov dec sahf pop cmp mov sub out outsl add mov sbb inc mov jb xchg jae mov int xchg clc sub outsl mov add stc dec rcl pop pop xlat pop out pop lcall movsb (bad) in push sti insb and fcoms sbb (bad) iret sti mov mov mov dec inc push test inc ja mov fisubrl or sub jno xchg inc loopne mov jb fidivr sbb cmp xchg aad pop inc (bad) pop scas out or dec and or dec insl insl adc and sub add xchg outsb ret add push es xor mov sub mov xchg mov inc in int3 (bad) xlat jmp dec jg scas mov and cmp aad nop push pop jecxz adc ljmp pop xlat out bound pusha lret inc pop cmpsb lahf cltd xor jmp imul jp cltd cmpsl loop mov cmp sbbl xchg xor aam xchg sub jge repnz pop xor dec jb sbb mov jne out pop jg add mov fidiv pusha clc imull popa (bad) push jns imul xorl out leave push aaa mov sahf inc aaa fwait and mov inc adc mov pop shrl jp and and dec inc loopne mov cmp push mov das lods (bad) mov mov into enter shrl jae dec push cwtl ljmp mov loop cmp adcb cmp fsubs stc jbe sbb or int3 xor inc sbb xor in mov and xchg xchg test push mov xchg lret push jne lret fs xchg ret or inc mov mov push sub call fild std mov dec xorl sbb cmp xor mov adc dec push in mov xchg into lcall (bad) mov (bad) sub jno shrb mov loopne mov test cmpsl cld mov movsb adc and mov out pop xor insb lods (bad) fstps ret lret pop in cmpsb aam pop ja add sarb fs in and inc dec and sti jg fist and inc test insb imul jmp rclb adc fmull xor mov mov repnz sub repnz cmp add aam dec lret test mov ja data16 mov mov mov add push push push outsl stc shrl cwtl sub imul jmp jns shlb je jbe adc clc mov (bad) mov out cmp xor in dec jge or in stc mov outsb push shll sbbl (bad) or mov and sbb pusha pop fcoml jno repz rcrb jno insl pusha int3 jno jb sbb fisttpl es lods mov icebp iret (bad) adc dec add xor lea cli mov adc nop add les subl sbb popf xchg insb and stos sbb cltd pusha push stos inc pop jp aaa (bad) mov or inc sbb loop sub inc cmc sbb out pop (bad) mov mov out jg lock fsubl pop xchg (bad) push mov jbe push inc fcoml push sub jno aaa lds xchg mov pusha mov cmp (bad) test or sbb pusha mov aad xchg xchg sub flds and fwait sahf mov pop pop inc push add aam or and in jecxz sub ja mov adcl pushf ljmp xchg imul cmpsb es jns jle test mov add dec aas add ss push push (bad) fmull mov inc iret (bad) out mov ret lahf jmp sbb aam mov cwtl std dec mov inc mov xor inc cmc dec leave push into icebp lods leave push daa cs jecxz push repz sarb cmp ret dec jae out cmp pushf jmp in cmc and mov fistl dec jmp out mov (bad) and mov push roll outsl sub (bad) fistp mov cli (bad) out mov jno xchg xor pop addl aam pushf aam mov lahf stos cmp mov cmpsb sbb sub adc xor rorb ja (bad) jmp cmp outsl outsb mov xchg and cmp int3 add sbb and lcall mov jg sbb mov mov sub iret in ret or pop and aaa push in (bad) xor ret sti and and jb add or cltd pop mov inc scas loop sub mov pushf cli mov cmp jg xor push aam (bad) push (bad) and mov pop int3 lods arpl sti lcall pop xchg dec inc lea xor push push cmp setae loope es call pop push notl jecxz pop mov pop loopne push push and sarl mov cwtl mov sub test rorl test aas insb xchg scas in stos pop imul insl aaa adc rorb in les mov fidiv mov mov stc stos shl mov mov movsb mov fcmovnbe xchg fmuls test loope aam push fisttp mov ss cli sub imul jo jnp sub adc mov mov icebp dec popa in xchg das inc or or out movsb sbb mov xor je loope mov arpl bound dec out jp xor push fwait or js,pt out sbb imul or cmp xchg ja inc sbb arpl out test pusha movsl lea jmp addr16 out jge lds sub movsl (bad) push xor cld aad pop and jne pop xchg (bad) es mov dec (bad) movb lds mov inc arpl pop and push mov roll loopne out repz and test push mov adc leave inc jecxz,pn add test jno fist sbb sbbb xor add scas sub pushf xor inc fisub or repnz gs mov stos movsb push fistp test add cmpb xchg mov jecxz mov loope hlt mov jo and lcall into sbb jmp lods lea add dec adc lret out dec adc cmp pop (bad) repz lret xor adc mov scas lds (bad) sahf (bad) dec enter or ljmp xchg cmp leave popf jae mov loopne jl pusha das xchg inc add pop inc add stos mov jns mov (bad) lahf push (bad) popa cmp icebp out adcb lds add cmp sub jnp add pop fstp dec lahf lcall add xor and pop jp xor std sarb adc enter lea adc fs popf ret and cmp cmc lds push xchg shrb rclb xor data16 cmc in sti icebp ljmp add push add fwait mov or jae movsl cs mov inc sbb inc addr16 in pminub ljmp icebp push adc jns push adc jle sbb and add movsl sahf mov add daa flds cmpsl ds lea sbb pop mov push jno pop mov jns inc adc in (bad) std mov cmpsb jmp outsl and sub jno popf pcmpgtb cmp mov insb aas rcrl inc sbb movsb mov in sub je test repnz scas xchg xchg popf jno sbb dec jmp sti stc push sub dec sub ret mov loop scas adc sbbb adc push sbb leave js mov fsubrs divl pop (bad) cmpsb jns pop or nop jg jno adc sbb mov mov cld neg cmc sub dec push lahf aaa mov int sub push leave mov pushf pop in sub inc cmp (bad) xor leave iret mov out pop add bound jo hlt xor push mov pop xor lds fiaddl arpl adc xchg call mov (bad) out outsb inc mov pop addr16 sub mov je je fwait imul mov xchg push std cltd outsb inc sbbl xchg or xchg gs fldt cmp xor jo inc inc (bad) mov cmp enter or pusha lcall ljmp loop pop iret mov sarl cmp jb fwait or adc dec (bad) mov push pop pusha mov push sbb xor imul nop and inc out ds and sbb push mov jnp mov iret stos mov in xor push movsl pop or test out fimull shll lret mov jl into dec mov adc out mov mov sar sub mov dec mov fsubrs cmpsl sbb sbb jg aas or inc (bad) or xchg jmp test mov or sahf or pusha scas add lahf test mov gs fldenv add lret cmp int3 jmp xor ret int3 mov cmp stc cmp xlat inc mov out test mov inc iret pusha popf dec addb jno cmpsl jge dec je outsb in jo daa int add stos gs and push loope add sbb push fisub outsl dec fist scas into in and pushf inc push lods xchg push fldcw movsl cltd push loop lods aad cmp push add aaa out stos fndisi(8087 mov cmc push cltd and dec push repz negb imul inc mov cmc mov ret sbb pop insl inc js dec orl stos push in imul mov ljmp das sbb (bad) adc movsl test das push sbb mov pop add xchg aas in cmpsb mov movsb lcall mov inc sub movsl (bad) xor cmpsb xchg sarl dec mov rorl fbld out mov mov mov lds lods xor sbb jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc mov aas stos mov dec push out stos fstl (bad) xor jo mov call outsb gs pop fstpl xchg jbe and cmpsb ret loope and mov mov lahf ret bound je inc xor xchg pushf mov movsl fs xchg lahf sbb mov cs outsl jp out aam fildll inc xchg outsl icebp xor inc lds jge jbe sub in dec cmp push xor ret sub fs lret test push int3 adc jmp mov or adc stos sub jmp aam or dec inc inc sub sbb test (bad) cmc mov lcall inc in out mov pop cmp in ret test jmp lret cwtl into mov arpl push jmp aas je mov int cmp fcmovne call xchg sub mov jne ds mov and popf dec sub imul xchg or fstpl imul xor or scas and dec inc cmpsl aas adcl sti xor nop pop sahf xchg dec mov cmp sub or push jo push add (bad) ss cli sahf sbb push cmpsb add push mov add xor fsts dec jbe pop mov scas rclb jecxz adc das jp adc es aas mov pop femms and loop inc sbb test jns fild clc cmp push pop cs std cwtl sub data16 arpl cmp fnsave sbb cmp and loop out push aas pop inc cmp adc push insb jno rcll jle xor inc test mov ror lds mov fidiv les cmpsl call outsl mov cmpsb lock ds (bad) popl scas fcoml sub jns nop lock xchg movsb jmp mov inc push (bad) add ret (bad) addb popf push out or cwtl mov pushf xchg lret adc neg sub lea push pushl pushl call add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret inc mov and je test in mov out dec out cmp mov xchg push mov push pop ror sub mov stos lahf popf xor push cmp mov imul jbe push jle push in or mov es mov jo pusha pop or or pop mov int icebp push xchg xchg cwtl adc mov stos mov aam imul movsb jge shl (bad) jp call jmp lods adc xchg popf stos jp cmp push aad xchg mov inc test mov xor or out or fbstp fnstcw mov jns or out push push cwtl push lahf sti mov jno shrb (bad) jns movb lods in clc push xor cmp std (bad) out inc xor iret scas (bad) mov loopne cmc inc in lcall and fisubrl jecxz sbb ficomp xchg xor in in sub mov leave xor shrb (bad) sti imul scas mov inc mov popa and outsl add jns fildll (bad) pop xchg jge data16 popl aaa mov test scas adc dec jo idivb mov inc mov xchg (bad) xchg push adc out loop scas mov pop dec push fidivrl mov sbb addr16 outsb pushf push int cs dec mov lahf pop je or jae adc jecxz roll inc sbb test push lods or mov add add sbb adc and mov inc rcrb aas cltd std add xchg dec (bad) icebp in mov jno insb add xor les cmp daa add sahf les and in adc in mov inc nop sub push push ja inc sbb mov dec pop jl mov in mov sbb lret jne or loop in out dec jle adc dec mov dec popa rcrl push daa fbld mov test push pop sub adc enter sub test adcb call icebp sahf jge int dec insl jp icebp enter add movsb test clc fcmovnu nop xchg pop pop adc int mov lds pop movsb push sbb int3 jae xchg insb jmp (bad) jmp in stos jae and sub mov int3 out scas inc rorl xor mov pushf jle pop pop cmp mov mov dec xchg lahf sub pop cmpsb push jg adc fs sahf std rorb test xchg cwtl (bad) mov outsl cmp fs push jle sub sub loop scas mov jno je cld insl add xchg adc js clc insl in xchg in out dec stos stos jmp incl push or sarb push fnstcw jb popa enter mov push push dec pop fistp push xor cld xor sbb data16 (bad) pop xchg cmpsb mov mov pop ljmp in cmc lret push mov movsl add shrb sti loopne or pop xchg mov push hlt sbb jbe out adc inc rcll lds test mov dec lods adc add xlat (bad) and push cmp test shrl mov and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc mov jno mov fsubp bound out mov outsb movsb push push in out pop pop xchg iret dec xlat sub sub inc iret int3 faddl mov xchg ret out mov in push popf sbb vpor es mov dec fdivr mov or jge lea (bad) jnp jecxz adc cwtl arpl dec cmp stos pop inc sbb mov xchg in mov adc push sbbl pop xchg ljmp test push jbe test xchg xor inc js push dec push rolb insl or enter popf lret xchg pop iret sub mov test xlat sub fmull add je and push push (bad) jbe (bad) test mov jnp add push sarb or test test xor mov popl lods jnp jg enter movsb shr jp (bad) dec or data16 inc push mov test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp mov or cmp fdivrp adc stos sub jmp cmp (bad) mov dec leave dec inc pop fsubs pop ja test push mov mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret mov or xchg jne je das xor push mov fnstenv mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp mov lods pop cmp lods jle pop aaa inc lea jae,pn je mov mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret mov or sbb mov sub jns inc push stos ret or fs xchg sub mov adc movsl or sarb ret hlt mov in je fsubrs int3 test sbb movsb cmp insb pop out lods mov pop cld pop lret ss pop es fs cmpb popl pushf xor cltd cltd std add aad xchg ficompl loopne push lret cli push imul repz push xchg mov xchg jg in and lods roll pop cmc sub lods jne loopne push sbbl mov sbb pop clc sbb (bad) xor xor icebp ret push dec add jg ret pop jno sbb in push pushl mov call movl mov pop pop ret andl mov andl movl movl ret mov or cs insl data16 cmp test aam mov add mov andl movl movl ret int3 int3 dec jne mov daa inc or push mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret scas ds cmpsb or popf inc call mov orl mov call mov orl mov ret mov ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret mov or ja fdivrp mov jae insb push mov push or jb ror gs or out icebp mov repz adc aam dec pop ret fisubr cmc add lahf lahf xlat mov jmp dec das das mov scas mov and cmpl and dec popa add rclb inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret mov clc mulb lock push jae pushl push pop push xchg mov jge add shlb jo push mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret mov or fwait jne sub dec jmp aad dec (bad) in orl mov into sub and (bad) mov or aam sub xchg clc fwait movsl mov lret adc mov add xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret lods mov sbb xor mov sahf je jae mov fcompl push xchg inc xchg stos inc int3 mov jmp cli and push sbb ret cmp xor sahf test outsl je lahf mov lock mov mov or aam cmp push ljmp dec int (bad) mov scas aad aad mov in push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret mov or fs dec push adc out or enter pusha loop lcall push push mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret mov or jl popf mov mov mov cmp shl add mov ret push mov push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret mov mov inc dec jle das xor jns stos sub or dec sbb pop push cli aad aad (bad) sub das jne inc addr16 inc adc jp cwtl add mov jle js adc in jne into outsb xor in sub mov xor mov push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret lods mov dec dec fisttpll in push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret mov or sbb movsl cmp push xchg sbb jnp adc stos in or aas loop pop sub add popa movsl gs cmp mov fwait jne test in push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret mov or xchg jne in dec mov mov mov in sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret mov or mov add roll xchg jno or icebp ljmp pop notb data16 cmpsb jb mov and xor xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp mov or mov add roll xchg jno lods pop lock shlb adc add flds mov pop sbb addr16 push xchg fwait lret test bnd mov pop mov xchg ljmp and sub mov jns xchg or std push ss imul das icebp jb iret ja push or pusha pop pop xchg inc mov jge add jne call pop test js cmp jae mov pop ret xor pop ret mov or mov add roll xchg jno fildll push loop xor cltd jg hlt mov gs xchg (bad) jo fstl test jno mov shrl xor cmp ret pop and loopne sub add xor mov cmp xchg cmp inc daa inc inc inc pusha or mov jno dec inc mov arpl xor pushf scas inc js scas out cmpsb dec lahf mov xor int3 push out xchg inc lods test aas das inc fidiv call sahf push icebp cmc je mov clc lcall push mov xor call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 mov or sbb mov push xchg sbb je jp out cmp xor inc (bad) jecxz rclb stos xchg push fild push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop arpl dec fldl in ret addr16 cld add jno std jle aas xchg outsl xchg lods push push xchg mov cwtl rorl xchg (bad) enter imul push int3 mov pop sbb xchg mov std je sbb rcrb scas fs mov adc sbb adc divb out sbb cmp (bad) xor std ja lods cld dec (bad) stos fstpt and and and ss fisttpl cmp int3 pop and test mov push lods mov xor push cmp adc cmp adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc mov (bad) push cs or aas arpl test movsb icebp nop dec push les hlt jge jo xchg mov mov xor inc rcll cmp pusha (bad) or lcall mov ror es std inc adc push sbb pusha push cwtl jge push shll iret iret out push push in mov aad xor pop xor js,pn push bound add dec inc adc sub mov mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret mov or jb call or push in insl es popa dec sub adc jmp cs sbb jo mov ficompl jb xchg test mov inc pop xor xor mov jo lds mov push jmp push or test repz push xor or (bad) mov xor push mov push push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret mov or sbb sub shrl lock je or test mov lret mov jmp fldl push xchg adc ret js rorl mov push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret dec cltd lods xchg ljmp cmp enter jg add (bad) (bad) decl or (bad) (bad) call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret mov or mov adc adc ficomp cmp mov lods jbe pop pop int3 fs xor adc jb movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret das and std or or mov loope or scas mov cmp xlat mov test inc repz mov jmp adc (bad) out iret push call pop mov ret push mov cmpb jne call call push call pop mov pop ret das and jge lea (bad) fsubr js lahf bound in push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp mov or fs stos mov cmpb adc dec shr xor or loop add cltd outsl inc pop pop dec sub stc xchg jne test dec out xor add mov and sub aad pop ja,pn pop inc add sbb mov push out adc xchg out das and sub out adc pop jp loope lret sub popf mov nop shr push mov push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret scas stc mov xor das xlat les sbbl dec pop or jecxz dec movb (bad) fmuls push xchg insl outsl (bad) imul inc or je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call cmpsb push insl orb add adc jnp push xor and push aad add mov pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret mov or sbb inc cwtl out cmp xor xchg arpl xchg pop imull repnz mov int3 inc fucomip push push add jno and stos sub or push mov mov dec lcall es daa or pop insl mov movsb jno push sbb cld xorl pop js lods and or push dec jge jbe jp stc aas popa xor icebp add inc cltd fadds pop cltd mov rorb jg lcall lods leave xchg fwait pop setnp push jne mov pop jg (bad) scas jl jmp mov or sbb fpatan and sti jne mov pop enter aam push bound xchg cmp stos ss popf ds mov and mov aad push les mulb adc data16 stos pop cmp fsub sub popa mov pop js fninit cs jo fwait call add sub mov std repnz xchg dec gs jne (bad) (bad) pop mulps addr16 (bad) popa pop loop movsl push xor mov add sub popa add inc sbb je xor jl jmp xor std cmp sub or sub adcb imul adc out ret adc add dec rcr enter out iret call stc xor sti insl or loopne push es stos call das jp fnsave push sub out lods or (bad) imul sarl in in or mov pop xchg dec xor movsl pop (bad) mov push mov jle popf xchg mov pop mov les cmp xchg icebp push push int testl insb jns add pop xorb scas bound aaa cli adc enter push jb and and out decb jl pop leave das outsb in cmp insl mov (bad) out out fldl pop in or repz push add sbb dec popa enter iret (bad) xor sub test in cld add sub push xchg sub call lahf (bad) push in aad idivb jg xchg xchg lea push (bad) sbb in xorl sbb psraw clc add incl mov gs int3 aam aam sti pop dec push push bound cmp fstpl jg es sub outsb xor mov repnz icebp popa cmp cli insl mov and xchg (bad) rolb scas jg mov rcrb addr16 out push cmp out stos push (bad) je ljmp sbb sti (bad) mov cld dec repnz aam imul add adc add jle or adc push push lahf (bad) notb or (bad) nop decb mov mov fwait pop or pushf sarb mov push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 mov or xchg insl call mov inc ss dec daa inc ljmp leave dec sti fisubr push call mov mov cmpl jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 dec mov negb adc and bound popf clc xor dec div stos inc subl pop inc inc sbb lahf shl mov lret fadd and shll cltd cmp movsb mov scas dec push cmp cmp sarb imul cltd dec int lea stc popa (bad) scas aad (bad) xchg inc lods and inc (bad) faddl jne cmp and cmp add into (bad) dec push shr mov pop jb cmp mov xchg (bad) out xor and adcl pop jp test (bad) xchg loopne shl or std push adc ret dec cmpsl mov or add clc andl push mov jbe xchg ljmp cmpsl and inc mov out mov dec daa lahf xchg mov in xchg adcl sahf icebp add cmp dec jb cs das sbb mov je jg das sub cmp cmp shrl push dec xor in pushl mov call pop ret dec mov negb jmp sar shr imul sub jmp mov mov dec jb xor sti add xlat dec xchg es cs jb fwait inc cmp mov xchg mov mov jne mov and or movsb xchg out xchg xor pushl and jb aad push js es add inc lds push push push call add ret dec mov cs daa aas stos popa inc or mov push loopne lods mov loope adc stos push call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret dec mov negb movsl and inc shrb mov mov bound (bad) mov int adc sbb es mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp dec mov negb adc and bound popf clc xor dec and (bad) adc jmp xchg sarb rcrb xchg jbe mov scas loop cli es add les lahf pop pop cltd pop xor adc ljmp or jp sbb jo int3 call push stos cmp (bad) xor stos jo repz (bad) rorb jb movsl jne psrlw cmp mov xor mov aam and (bad) enter mov jno icebp aaa in xor jg mov repz add jecxz insb pop repz lcall scas cmc lods mov repz xlat lahf addl pop imul ja lret mov add inc sub mov idivb ja add fs mov xchg sti lret add pop cmp aad pop cmpsl pop add sub or push je je inc daa sub shr imul push outsb cld (bad) push insb sub sbb into es xchg pusha push outsb pop or lods fldt inc lcall outsb mov iret out inc push fisub xor scas mov repnz loop ss dec jg mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp dec mov negb movsl pop pushf test push insl fidivr dec mov scas push mov das call insl push adc pop mov insl dec out xor insb adc icebp and dec fldl cs and push (bad) cmc push push sub test mov popa and (bad) icebp dec lods xor aaa out xchg imul push or cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret inc std adc and dec xor xor xchg mov dec (bad) push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret dec mov negb fwait add clc in mov mov loopne sbb outsl jbe lret ja mov jmp cs loopne test insb fninit pusha into push cmp cmc xchg rol js jo loopne mov das cmp in sub loop cmp xchg push push or (bad) addr16 cmp add aad movsb (bad) add outsl add leave inc and pop xchg pop or scas mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret dec mov negb push adc dec les xor pop mov lret lods xchg add pop outsl xchg pop popa cltd pop xchg (bad) stos mov push mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret dec mov negb push adc xor stos jecxz out sub cmp aam dec (bad) fiadd inc xchg push adcl or mov mov push mov push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret dec mov negb and jnp movsb dec push das cmp jb pop insb mov faddl shr push push add add sub inc pusha cltd ja adc aas pop adc jmp imul add add xchg enter fisttpl or cs mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc lock sub push jne pop xchg or sbb arpl push inc (bad) and in ret in sub jbe xlat out insl add xor adc inc movzwl sub je sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret dec inc clc mov cmp gs aaa mov popa adc dec mov xchg cmp mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret inc cmp out push inc or test clc dec inc push sahf andl in cmc or mov cmpw je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret idiv xlat das mov fwait xor and loopne mov and pop imull mov lret ficom inc shrb popa xor sub push add shll in pop cmp or lcall dec (bad) inc das push or xor es arpl and sbb cmp mov inc mov int3 (bad) xor int fisttpll jge xor test inc out or lcall pushf xchg mov mov mov xor lahf and inc test in out or jp out subb movsb sbb or lcall sbb stos cmp cmp jns lcall push push out jg pop push sahf inc mov mov ret mov lcall lds repz out testl xor sub inc pop push dec enter cwtl fwait mov mov int fwait js jo mov cmp pop mov mov popa lods jl fwait dec jl mov mov xchg jg mov push loop aam push popa insb sar push and pop mov xchg in adc jb dec addb call in push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret dec mov negb and loopne lods pop (bad) daa dec mov push dec fildl fistpll adc xlat push xchg and pop test cmp add and sbb adc sub or xor aas sbb lea adc pop xchg lret push repnz popf lods sub xchg xor scas pop hlt out ss dec je inc lret rcr jge mov jb inc movsb adc mov push push cmpl into ljmp mov push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret lods mov dec out or jg aas and mov mov mov push push mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret inc jge call or jmp mov insl cmp test xlat (bad) jl mov int3 test (bad) pop push mov push imul dec (bad) push inc mov push mov mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret dec mov negb fwait add insl mov (bad) jb xor lods cltd lods lods adc sbb sbbb jp jno mov add lea cmp lret out fistpl pop pop push inc movsl movsb lret addl rclb sub and and aaa pop mov sub loop lods inc test imul sub push ss xchg pop ss dec stos repz push mov push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret dec mov negb fwait mov cmp ss inc jnp push imul cld cmc push mov cmp push jp,pn add mov shlb sbb pop or outsb push dec sub sbb mov in fisttp fs loopne gs sub xor or lods int3 fstps dec cmp jb iret ja fcmovu cmpsb inc shll ret cs arpl fidiv push mov mov jg push cmp test inc mulb inc daa pushf cmpsb cmpsl js mov jne jmp hlt movsl je push mov fcompl nop call and and mov movsl xchg lock adc cwtl (bad) cwtl inc mov jp xor push sub xchg jle leave sbb outsl or xor outsl cmc lahf cmp dec mov pop push rolb and or ljmp and mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret dec mov negb movsl pop xchg and add cmpsb adc mov out jnp mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret dec mov negb sbb not and sbb xor das inc je mov adc pop inc repz jmp xchg and mov mov or and mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret dec mov negb mov xor cltd jnp das jg or sbb lods lods je ret xchg fldt adc push or or divl insl ljmp cld add or push mov xor hlt mov loop adc pop mov int3 (bad) aas cmp mov mov ret mov movsb pushf dec enter xor test insb loope jno or add aam ror mov aad or call in sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret dec mov negb sbb shrl lods inc cmpsl mov cmp not cli fwait sub in push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret dec mov negb sub insl adc add or test dec lahf sbb (bad) dec jbe cmp dec sbb and push and mov mov ljmp mov lock adc icebp mov je movsb test rcll pop shrl cmp push icebp les mov std stos (bad) loop shrb add imul xorl mov hlt dec mov sbb ljmp xor cmp and and xor decl loope cmp and dec outsl stc and pop pop mov add mov scas cmp mov dec outsb (bad) mov test add iret test adc iret test adc iret test adc iret test adc iret test mov mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret dec mov negb mov loopne fstps sahf jnp out jns into stos push (bad) je lret xlat pop inc xchg sub lahf push gs test mov adc mov adc ja stos test insl xor xor xlat fwait test mov dec or jmp dec inc enter call in sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret dec mov negb mov test mov icebp push ja and xor sub stc inc lahf enter mov pop test mov scas jno in add xchg adc in repnz pop xor mov mov pop ds fsubrl adc nop movsl push loop lods enter xor insb fwait push pop jno bound inc pop std (bad) inc mov push mov mov mov movzbl push call mov movb mov mov pushl pushl call pop ret dec mov or dec adc mov stos lahf inc dec mov pop xchg sub sti inc js sub or jecxz shrb inc pop test push in mov cmp jl stc lahf adc idivb int icebp jne jnp add xlat xchg mov cmp imul pusha cmp dec dec in mov test scas aam sahf in bound out mov test jle insb std cmp dec outsb push sbb xor pop mov das dec cmp fcoml xor xor ret test aas or scas jnp xchg jmp stos cmpsl adc cmpsb fnsetpm(287 push pop addr16 lds int3 mov lods fsubl shrb mov sbb cmp test clc xchg push lahf or xor call jns push cmp mov inc mov jecxz fwait jae (bad) in mov divl push mov bnd xchg fild (bad) jg sub add je mov ret push push push push push call int3 inc cmp call sbb dec push insl mov jecxz stc xchg dec mov mov out xchg mov push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret dec mov negb inc scas adc push mov in pushf cltd jecxz fwait inc out push aad pop inc xchg jmp xchg or lcall jecxz lods rcrb jb mov mov inc pop int3 icebp stc mov pop test xchg sbb (bad) mov clc dec mov aam sub push sarl sti dec pop les add stc aas inc dec mov or rcrl ret mov mov cli (bad) xor push data16 xchg pop shlb cmpsl xor mov jge and mov sarb push cltd cld adc xlat lahf inc pop cmp in in jecxz xchg jmp push jbe std pop xchg call fmuls cmpsl lcall das jmp das push push xlat dec push or nop es mov mov out jbe inc flds mov stos pusha (bad) lea and insl push mov cli aad sub or enter mov adc sub or mov mov ds mov stc xor mov jbe mov push in rcrb lret ret mov mov pop enter mov xor cmp shlb je dec sti adc xor clc fistpll push or mov stos fs (bad) jo popa push mov pop cmc inc aam hlt and lcall aas clc inc push ficompl dec negb lock aad mov aad lds inc sub jno inc rorb test sbb push mov ja (bad) clc stc push and mov sub scas mov inc ja adcl pop lods gs arpl xchg cltd push (bad) ss jg stc (bad) mov pop or jmp aad adc mov xchg loop mov (bad) adc je xchg icebp xor inc (bad) and rcl xor test push cli fs mov (bad) pop push aam and mov addl iret stc mov mov xor cmpl mov ret rcr jno dec loopne adc pusha add pop loop arpl xchg fs lret sub mov (bad) (bad) mov mov repnz or mov fucom imul xchg and and test and xlat add addr16 jmp iret jg jge lods push dec loopne cmp pop and in sub or pop fisttp mov mov inc cmp insb fcompl test cmp jb mov sub adc rcrl inc addr16 pop dec mov aaa fcomp les imul pop and push pushf nop sub aad stos dec out repz cmc ret sub xchg pushf jecxz ret inc lea mov or dec adc (bad) jns enter xchg insl mov hlt (bad) pop dec cld xor adc xchg sub movsb or pop mov cmp loopne (bad) pushl fistpll repnz inc insb push mov push mov push sahf cmc adc pop gs in sbb fisttpl jge add fistl sub inc hlt and add push mulb cmp or adc (bad) pop push (bad) out int jmp outsl mov das insb hlt adc mov pop clc shrb pop sbb test mov fisttpll imul pop clc xor lods ret pop sbb mov jecxz loop rorl sub or mov (bad) jns gs add xchg or fwait xor mov dec in pop cli test mov or in mov out cmpl xor lcall cmp add mov push cld repz sub sub or push xor mov (bad) iret jbe xchg lret mov lea loopne or cs sahf push hlt psraw xor insb or xchg push (bad) mov or out cs mov push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret dec mov negb sbb jge out mov into pop xchg (bad) je push push mov dec addl out arpl iret (bad) cmc insb mov or mov loop std pop iret adc cmpsl mov aaa fnstsw (bad) adc sbb ja xor clc fwait xchg xor xor sarb aam mov btc mov jmp in jns and jmp dec add mov jge lea jns movsb sub cmp push ja mov divb cmp js adc mov mov js stos cmp pop push pop inc aad adc gs dec lds mov pop sbb cwtl lret das (bad) xor jg int mov arpl push lock cmp add xlat mov pop jecxz dec push and enter adc out xor sbb in xor out std repnz aas bound xor sarl lret inc lds fcmovb nop fiaddl push lahf fstpt inc inc push jbe sbb daa shr stc xor repz fcmovnu cmpsb lcall popl aaa mov lods lods push inc leave push cmp mov xchg (bad) arpl pop jno stos outsl stc js pusha sub sbb xor loopne adc or adc adc mov cmpsb add xchg lcall sbb xchg fidivr pop push mov jnp push xchg pop xchg jmp cmp and xor sbb mov mov dec imul (bad) push dec in notb adc cwtl inc test sub push lret bound andl cmp cmp scas mov push into jnp and lea xchg inc pop in (bad) mov fcompl adc xchg int3 mov pop mov dec jno dec loopne in clc add fwait (bad) repz hlt adc inc hlt fwait or rcl push ret jnp mov xchg xchg sbb fcompl mov cmp mov inc mov daa sbb shrl add sbb mov mov jp jae mov sahf add lock mov lret add cwtl hlt mov and add sarl outsl popa jbe cmp (bad) and xlat push lcall subl pop jo test sub inc movsb icebp pop push ljmp leave sti mov test push cmp loop add (bad) xadd or sub in and es lret mov repz loopne xor out imul call mov mov je mov insb mov mov imul or jae mov into xor sbb and push pushf aam adc xchg jge outsb cwtl jecxz cli xlat fwait adc es lods push clc push mov lcall jbe pop adc sbb mov xchg aas sub pop sbb adc xchg pushf lods sbb lahf daa jne sbb add into ds (bad) pop das fcomps lcall jp leave mov pop dec pop into movsl pop mov pop fwait mov in (bad) push inc fucom les imul or fsts inc push xor pop jecxz leave push inc cmpsb mov repnz clc xor jmp dec mov std mov mov and ret xor mov pop xchg shll xor loopne cmpsb loope xor ds pop mov fisttp push test pop addb pop sub fimul pop in ja xor lods push movsb pop rolb adc lods sub stos and jl xor jno jmp xchg push jmp js inc cmp inc adc mov inc mov pop or dec sub cli adc mov repnz adc add iret adc and fs fsubrp pop clc sbbb mov cltd jne push stos xor (bad) cwtl mov cmp mov lea sbb dec cmpl or cmp xchg sub xchg mov dec inc mov in xchg popa int enter and and xchg and outsl cmp pop out pop dec inc ljmp cs ret mov dec out out aad dec jmp nop xchg push shlb add jne mulb movb aaa mov shrl pop cmp add push or add jno or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret dec inc lock daa add pop sarl lea scas inc xchg dec icebp pop daa sub outsl mov xchg (bad) rcr pop rolb cmpl push mov (bad) adc aam sbb push insb sub clc test mov mov (bad) scas fs adc mov mov test js cmp jle cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret dec mov mov mov mov push xorb lock dec jg or addr16 (bad) out out js call icebp call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret dec mov negb push and mov clc dec lock mov ljmp xor sbb mov mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret dec mov negb sub (bad) dec or push mov push or jae imul pop es push xlat fdivs mov lods cmp adc sti (bad) sti shl sarb icebp cmc mov outsb ret insl push xor pusha add xchg xchg jle adc call in addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret inc jge call or jmp mov insl cmp test cmp inc inc adc jle fsubrs rcl jnp mov push xchg jbe mov scas loop insb es (bad) mov push iret stc mov mov push mov push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret dec mov negb adc adc mov pop xor mov push mov pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret dec mov negb xchg in xchg jecxz nop jo inc push mov adc imul lret fidivr jo push aas adc dec notb xor add or jns adc in pop and repz adc dec sub fwait add push cmpsb dec dec scas sarb mov mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret dec mov negb inc inc mov fstpt cmp daa jae mov adc or xchg pop test ret xchg jno mov aad stos shlb pop or mov adc out xor arpl ss test fs popl es xlat stos leave lea negl call addr16 xlat jge add dec mov xor sub scas push pushf in and mov pusha jae push add jnp pop xchg arpl sahf push insb push jb mov fadd xchg push and add (bad) daa ss adc (bad) icebp adc sub gs pop scas in or mov (bad) (bad) pushf adc fisttpl push xor and enter and and push lahf dec mov mov cwtl arpl cld pop stc aas inc mov dec notb adc push push call xor mov test setne test jne call movl call xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp dec mov negb das xor mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp dec mov negb sbb adc mov outsl mov push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret dec mov negb adc js lahf bound test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret cmp nop data16 cwtl cmp (bad) push add push push or push (bad) (bad) mov jmp mov jne sti inc sbb enter (bad) push in mov add sub push cmp dec jle call in push call mov push mov call pop mov call mov pop pop ret das add xchg dec xor es aad pop call test jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret dec mov negb movsl and sbb je (bad) adc in push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret dec mov negb fdivs addr16 (bad) pop loop dec fs loopne ret lods sbb in mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret dec mov negb sbb insl dec cmp lock jb cmp loopne add gs add test xchg push es push (bad) loop sub in sbb popf das lahf ret bound sbb push add cmp adc dec lcall mov cmp jle mov js fsubr lods daa pop dec hlt mov ss mov call in mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret dec mov negb adc xchg xlat dec push ret out sarb sub mov dec push bound ljmp test (bad) mov adc loop inc mov dec add mov pusha daa add add adc mov cmc fstpt loop popa inc les int3 mov idivl test stos sub repz mov fs cmp xor jle pop push imul cli lea addr16 aad stos mov ret add nop mov (bad) rorl jge enter test or or rorb xor int xor pop (bad) dec ja repz sbb mov jle clc cltd mov and outsl insl mov loop inc jge xchg inc jle les cmp inc mov xchg les add xor js ret cmp lea mov inc mov inc lods insl pop enter loope int3 inc sti jl ret mov add and push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret dec mov negb test cli push test mov ret cmp cltd push pop push ficomp je push push jmp inc pop pop dec xchg pop xchg mov mov rolb sbb bound jne sarb add aaa inc stos pop cmp (bad) insl sahf xchg lock call xor sub repz mov mov and dec (bad) ficompl adc test push sti mov jmp je aad popa adc push mov inc nop sbb adc loop push push sbb push cltd imul jo xchg sbbl lret sub popa or rol push pop add cmp mov sbb or cmp loop,pt add cmp push ret inc pop add mov lock repnz cmp sti or int add jbe xor das add mov test fs in ljmp sub jb dec fisubl jb push mov push xor pusha lods jl push mov loopne jp mov add nop jp xchg (bad) adc sbb mov cwtl fdivs repz iret mov enter add repnz sub pop scas lahf (bad) mov sbb mov arpl push mov stc (bad) adc test (bad) xchg fsubp aaa adc or (bad) es enter leave mov loop or mov xchg xorl cld test ja jo pop jbe mov lea daa or in xor dec xor xchg ficoml call in sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 dec mov negb xchg cmp fwait enter or mov mov in scas insb cltd rcr push xchg jb mov insl in sbb adc add insl fsubl pop mov pop test and mov push pusha or lock mov icebp arpl nop clc pusha sbb (bad) enter or sub test cwtl (bad) lods test das inc mov pop adc stos mov aas pop in scas mov out call in push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret dec mov negb jmp sar shr imul daa out es inc div stos fwait xor mov or jne sub ficomp nop and pop imul cmc mov out mov and push push call andl push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret dec mov negb sbb icebp aad pop push push call mov test jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret dec mov negb xchg xor adc sbb mov (bad) popa dec add cmpsl sbb ljmp pop mov arpl mov nop cmp sbb dec popa (bad) xor adc or test jno fiadd call in pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret inc jno xchg ljmp inc dec in lea (bad) mov pop lret inc or fnop sbb cltd sbb jecxz sbb xor stos xchg (bad) repz mov jl cmp das mov mov test jg cmp pop shl call or (bad) dec mov out inc cli fist shll cmp push std fidivl inc mov jno test jecxz inc ljmp ja adc mov ret pop mov xchg jno (bad) ja loop jp add jmp aaa insl mov stos cmpsl sub cld push es lret adc push (bad) clc roll stos (bad) push pop ds pusha (bad) lock xorl (bad) aam addb imul jns adc jo pop lret test mov dec mov shl aas pop sbb ljmp xchg dec lcall js adc add jmp cmp and xchg mov sbb fsub pop mov imul mov enter push into inc sub lock inc adc test sub daa adc gs incl imul push idivb sbb sub mov cmp mov pop gs sub adc push or rorl pop sahf cmp mov into sbb jnp pop test ds js sbb inc add popf or ja cmpsl fidivr add cmpl movsl mov in rcr dec jae inc addr16 mov xor pop fwait xor cmp ljmp pushf inc movsl pop stos mov cmp aam leave push and pop pop sti mov push mov push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret dec mov negb push sub inc dec scas cmpsb sub mov and xor inc jbe (bad) aad cmp pop addr16 and mov out fcoms mov jge cmp daa iret ret aam pop pop or inc das mov mov push mov mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret dec mov negb cltd imul pushf je dec cmp call in push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret scas push push cmpsb xor das jmp xchg cmpsl inc sub xchg mov cmpsb loope call mov ret mov ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret dec mov negb fwait xchg mov aas fisubrl jmp dec adc inc (bad) mov mov push xchg mov jl push mov sarb mov gs dec pushf pop mov mov ret jge pop ss mov xchg arpl popa inc idivb mov arpl xor iret fs cmp inc push ret sarb aam cmpsl mov cs dec jo ret add das pop iret (bad) ret shr sbb pop or mov into mov and gs push icebp pusha mov xchg cmp adc cmpsb dec mov xor push jge imul (bad) pop les mov pushf fistpll test (bad) jo mov add sub xchg ljmp cmp mov test jns insl sbb push jb loope inc cmp sub in popa mov push in test xlat movsb sahf popa test and repz fisub mov (bad) fsubrl inc lcall insb push pop (bad) out add test cltd rcrl or add sbb lret (bad) jmp ss lods mov loop mov mov ret cmc daa pop lock jno pop aam add in push dec pop rclb inc inc xchg (bad) cwtl jno std lret cltd lods movsb pop cs lcall pop call aas cmp and sub mov mov shll sub cmc jge popa or in call cmp arpl mov int3 loop subl ds xorl sub in mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret dec mov negb cmp sar rclb gs dec ds and dec addr16 add inc ficom inc (bad) iret cmpsl repz ret (bad) cmpsl dec mov push pop cmpsl xor popa dec xchg jg lods jl add lret cmc push cmc mov sbb (bad) lods rcll mov lods xchg das mov rolb aam adc cmp pop imulb popf (bad) fcoml movsb adc mov daa in cmp aad push sbb (bad) rol jne aam (bad) rolb stc jg push cmc mov push mov push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret dec mov negb xchg cmp mov loope jae mov ret mov cli test les in cltd (bad) out outsb rcrb nop lods rcl and lods xor popa ds sbb rcll and jge jno sbb inc push jns aaa mov mov jnp sub mov in xor xlat push loope movsb inc jbe divps ret daa test (bad) adc mov out daa lret add or jl (bad) (bad) or push call mov mov lea push push call mov pop pop add mov pop ret dec mov negb test cli push test sub xchg inc jbe shlb jmp inc orl imul aas pop mov xchg addb movsb inc mov mov icebp jp push fdivrl add in pop xchg lret cmp xor aam in jo mov xadd fisttpll stos pop mov lds and mov dec stc flds mov xchg mov scas pop mov nop arpl inc int3 pop out cli sbb test icebp xor out mov mov mov push cmpsb inc push ret xlat repz adc sti fcmovnu fprem1 xchg test inc dec adc imul add jns ds stc mov test xor (bad) jl sarl test les push sahf ret mov das adc lds cwtl cmp lds insl std repnz xchg dec lcall inc pop movsl test cmp ds pop cmp sti xor cmp and push pusha and loop sbb repz fwait mov clc xchg daa scas sub jno push add lds jb dec xchg push cmp cmp int (bad) push movsl inc packssdw and cmpsl in cltd lds (bad) push mov cmp maxps popf sub (bad) jle movsl insb fdivl xchg jbe jno xchg mov fisttpl cmp add jnp sub lret in sub cs sbb mov jno pop sti imul xchg outsb fildll jle push adc sub jecxz,pn sub pop dec dec gs call mov rolb sub std add call ror loop (bad) sar cmp stos call pop pushf cld popf add test sbb pop pop scas cmp push inc lret loope shll (bad) call dec xchg (bad) lcall push add mov gs sub shll adc sarl dec or add test enter xchg jno in push rorl lods insl stos rorb in sub inc sbb push (bad) or jg sahf mov xchg pop jle push xchg sbb jge mov mov adc inc inc mov nop jle add shrb xlat xor cmp push jl cltd jg pop xor sbb int sub (bad) sub xor mov rol pop mov in jle movsb xchg ret and mov xchg (bad) or jp ja jno cwtl and scas add jl fidiv mov stos jno push ljmp add dec (bad) push push enter cmp in dec aad mov cmp jb jnp movsl loope insb mov sub sti or or and nop jne (bad) and in fld1 divb xchg aad sbb stos jp mov inc in out sti mov mov push mov push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 lods xchg mov dec (bad) popa fldenv (bad) and mov je adc jo (bad) fimul out mov imul jg xor adc xor inc arpl stc test cltd cld xor xchg int3 pop mov mov loope add push fcompl addr16 push xor js rclb stos test cmp loope arpl loopne fisttpll movsb inc dec das sbb shrl hlt insl xor fisub fdivr mov sti sbb lret into inc rcll bound out aas in add jae repz mov xor loope cmpsl cli lret mov loope call test cmpsl adc dec sub hlt or mov and jmp ljmp arpl sub test cmp fs ret jbe bound mov mov movsb sub cmp xbegin ljmp jae daa in jge and aaa mov shrb stos jecxz sbb lods push cmpsl leave cmp fs mov pop and mov mov push mov mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret dec mov negb movsb inc xchg push shrb add dec mov xchg pushf rolb (bad) adc and xchg sarb lcall (bad) insb fnsave push sub in push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret dec pop hlt jno adc ljmp cmp push jns sbb sbb or mov pop push push lcall mov and cltd dec movsl pop mov negb ds je aaa pop pop dec mov movhps inc xlat mov bound push cmp into dec jo popf dec je bound push mov xor mov test jo sbb test scas mov shll incl into aad add mov data16 cwtl cld pop loopne adc lcall push mov pop inc sbb (bad) jge xchg in lret mov in call mov fs adc cmpsb data16 jb pusha lods clc shrb adc add cmpsb out push mov inc xchg mov loope xchg hlt or mov add orl call pop add xchg movsb adc out insl sub xor cwtl xchg orl cmp adc or imul mov and out or andl fwait mov cwtl xchg sti insb sub lods push sbb mov in ficompl adc jae pop rcll fiaddl pusha inc daa in lret cld (bad) bound dec fsts movsb bswap repz scas cmc push (bad) adc popf (bad) lret cmp add out scas fwait xor movaps outsb loop inc sbb in add call pop movsb enter nop or xchg je cmp inc or (bad) movsb and inc js call in sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret dec mov negb push sub inc dec scas cmpsb sub mov and xor inc loope (bad) aad cmp mov push mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret dec mov negb xchg mov mov push insb scas cmc xor sub jge lock dec stos stc push mov rolb faddl addr16 jg stos rorb dec clc daa stos pop aaa imul dec in mov cmp je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 dec mov or jle push cmp mov push bound push mov loope mov adc mov xor lahf pop adc cmpsb jne pop es lahf aas add xchg (bad) and mov scas popf cmp pop jne mov and inc aam fxch cld adc std dec mov and mov enter mov insb sbb imul imul xchg jmp lahf pop stos adc loop add mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret dec mov negb test cli push test jae mov cmp dec xchg jl shll inc test fist (bad) lea mov ficoml xchg std xchg les jmp icebp js sub push dec mov insb scas mov xchg les (bad) lods fcmovnb fistp cwtl in lea pop push cmp mov outsb lds lea subl fisttpll enter cmpsb sti pusha xor dec pop das movsl out mov push jno stos scas (bad) jg scas xor xchg or popf xchg or ljmp (bad) xor sub in xchg pop mov inc adc sbb scas lret mov push mov push mov mov cmp je mov mov test jne call mov pop pop ret dec mov negb fwait sub mov or adc jecxz (bad) je movsb insb or pop pop test daa sti inc xor ret push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret dec mov negb inc mov push fwait adc and data16 ja scas push dec imul adc sbb int jp (bad) iret xor mov sbb mov mov (bad) jae add cpuid jns pushf and fimull or das nop jecxz ljmp xor mov mov xor ss xor add leave (bad) idivb (bad) cmp js mov imul push pop xchg je xchg fsubrp mov adc leave cmp push (bad) or pop mov mov mov enter jge int3 lods xchg or mov jecxz mov and std pop in xchg mov add scas loope push xor and mov jno subb jbe arpl aas sbb mov iret push hlt (bad) mov das seta mov or (bad) push inc (bad) ds lcall inc cmp je mov xor insl push xchg jp out pop in and push incl mov pop mov imul daa sub (bad) fs push mov cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 dec mov negb adc and bound popf shr aas xchg jmp mov sarb xchg addr16 (bad) addr16 fsubrs testb mov das add sub cmpxchg mov inc and mov imul sbb sarb sahf je int3 mov xchg test mov and into ljmp jle std xchg mov ror lret in lret sarl aad movsb cwtl add test push lea push jmp add pop xchg nop lea mov pop gs orb push cmp pop pusha pop (bad) mov jns repz push es mov scas cli push fcmovbe ret mov mov jno push mov mov xchg addr16 and and jge dec mov jge or cmp add pop enter and ret cmp xchg sahf mov or in jae push outsl cld rep daa aad dec aas or and scas repz pop (bad) popa lods aam adc scas mov int3 (bad) fisttpl (bad) leave movsb or xchg pop scas add pop bound js mov mov inc les push jno imulb shrl cmp jle add mov (bad) add sbb mov pop (bad) in lds jmp or xor adc cmp rcl inc add out mov pop xor sarb clc cmp xchg aaa repnz es cmp xchg fidiv mov test fwait stos jmp adc addl negl push mov out idivl into mov dec cmp inc pcmpgtd pop es push sub pop subl movsb push cmp ror mov pop jo xchg jle enter loop nop aaa stc and scas cmp in inc call dec dec call mov (bad) pop mov cmp pop rorb mov xor leave popf jp mov push dec sbb fistp mov xor test inc sub sar ds stc push cld add leave push cltd pop pop xchg inc mov or lahf jl sahf es mov test lods pop add cld jp jl fistp xchg inc lret mov scas sub insl adc add pop jnp (bad) dec mov cltd mov push sub call in sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret dec mov negb push sub inc dec scas cmpsb sub mov and xor inc movsl lret aad cmp mov jae adc jle out movsb dec jp sarb pop mov lods inc shll cld jmp add add inc or xchg stos jae mov out jl rorl mov xchg out xchg loopne xor mov jae pop ret ss aam movsb jne sbb mov ja or xchg dec mov enter jg push inc (bad) sbb stc and fildl aam xchg movsb daa add in push outsb mov mov push mov mov mov mov cltd in cmp cmp xor mov push mov mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret dec mov negb jmp sar shr imul lret sarb mov add adc xchg pop or jbe push xchg adc aas (bad) ficompl pop jmp adc push enter hlt sub mov lret pop inc fnstcw mov mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret dec mov negb jmp sar shr imul lret sarb mov add adc xchg pop or jbe push xchg (bad) lea mov cltd xlat dec xchg es cs shrb sahf call mov js je nop stc pop jg fwait add and push mov push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret dec mov negb jmp sar shr imul lret sarb mov insb movups xchg pop repz jecxz cs cli cmp xlat lods aam std loop pop jmp adc mov add or sub cmpsb push mov cmp ret sub push mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret fs cmpsb xor xor jo xchg jno (bad) adc in enter roll add int3 xchg xor add jle shll and (bad) mov (bad) adc mov fisub push inc push pop insb popa sti insb mov mov inc push (bad) adc cmp ds jmp lahf mov cmpsl aam xchg cmc shrl pop lea imul dec sbb pop dec in and fs loope xchg mov insl xor (bad) pop or xor push pop mov push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret dec mov negb fwait xchg mov nop lods dec fs add jns (bad) mov movsb jecxz lret lods adc in cltd (bad) (bad) push push adc test cmpsb xchg rcl stos (bad) (bad) mov and inc xor mov out das das inc inc into mov daa or add ficom mov (bad) dec mov xchg iret pop scas decb fwait jg and jo icebp xor scas jecxz dec xchg xchg fcmovnu les dec jbe cmp mov sub mov int int stc in and aas mov jl jl adc stos mov loopne and sbb and add psraw push xor cmpsl shll imul mov sbb fs mov fistp data16 adc cmp ja push cld sub mov mov inc ret shrb xchg add call in push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret dec mov negb inc scas or adc test cltd mov repnz out xor cmp xchg lea or loope xchg xchg out xor movsl inc pushf (bad) lods pop mov insb cmpsb outsl movsb pop enter shlb xchg les test (bad) bound int movsl rcrl add imulb pop (bad) cld inc mov mov dec jle sbbl add iret mov jmp je aad and jg daa sti cli into mov xchg xor loope mov dec add out and and or test or fwait mov in (bad) xchg add fadds and add xchg cmpsb in (bad) cmpl mov xchg or push xor cmpsl ds cmovbe mov and add dec (bad) hlt mov call jne fldln2 sub adc (bad) fmuls inc jecxz out dec sbb popf and push insb das cmp xchg sbb aaa dec ret push cmp push mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret dec mov cs lock sub jmp add (bad) and cmp clc or (bad) jecxz pop pop out pusha mov (bad) mov popa daa push call and ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret dec mov negb inc mov push loopne movb in pushl mov call pushl mov call pushl mov call pushl mov call pop ret das cmpsl daa bound clc xchg stc hlt mov test cli enter push lahf inc or in es gs fs daa mov adc (bad) lea xor sub jp orb insl aas sub cs and clc mov pop cmp mov sbb enter jne mov sub rcl xor jp lods lret into inc les mov jne pop imul stc mov fldt (bad) xor add mov hlt pop xchg repnz arpl cld dec lds xchg test jge jmp or pop pop out das imul adc pop addr16 cmp cld jbe mov aam sbb mov imul inc ja add pusha popa push lcall sahf in sub lods inc ds (bad) fidivr in mov loop pop xor pop inc cmp adc push mov pop daa push and cmp leave or aad dec push das insl and jno inc out xor pusha mov jne popa cmpl or adc stc insb sub add xor xchg (bad) (bad) jle andl push jbe adc test xchg stos (bad) je imulb pop (bad) rclb pop lret push mov cmp incl dec pop sbb pop movmskps mov lods bound dec push arpl xchg scas repnz or pop jmp push xchg cwtl xchg inc outsl lret sub push inc dec (bad) std push jge leave add dec arpl shrw xchg pop aaa mov mov sbb jbe lods pusha sbb mov mov test adc cmp movsb xor sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret scas cmpb dec ret int3 add aad dec push fwait adc sub dec dec cmp aas adc inc xlat call (bad) shlb adc ja mov mov and adc inc insb sbb jl adc jne dec inc outsl stos test inc nop bound out pop mov (bad) dec shrb loope (bad) loop and add adc xor jns fcomps imul xor mov (bad) mov mov gs cmp mov jae mull mov pop stc jbe jno add jmp call xor mov test xchg xchg mov mov fcmovbe ret shll lock fstps addb outsl xchg push inc and (bad) sbb ljmp lret mov push mov push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret dec mov negb fwait xchg mov pusha (bad) xor mov gs mov add add pop xchg pop test xchg xchg jno mov aad stos shlb pop sbb dec add pop repz xchg je inc xor scas ss pop and jge test int3 pop das cmpsl movsl ss add aaa out cmp js mov into inc pop leave test (bad) stc ret insl roll jmp fbld dec or xchg push or pop andl mov icebp shlb push insb xchg insb inc mov or loop test push ss pause enter jmp daa sbb mov add scas lcall flds xchg clc outsl pop inc xchg jno fistp ret pop in lret and cmp jg xchg push inc pop test inc mov test push xor push cmc sub aas dec xor add (bad) int dec push mov (bad) aam loope les jbe mov add and mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret dec mov negb xchg cmp mov mov fdivr fs adc in lock out mov int3 dec jecxz mov pop xchg cli cmp dec cltd test xchg hlt add imull pop dec inc pop sbb int3 lds call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret fs add data16 push cmp test gs mov stos cmp pop imull xor add xchg cmp cmc imul addb pop test jecxz jmp dec ficomp fcoms test es push jnp jno sbb mov push mov push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret dec mov negb cmp out cmp fidivr loope je insb or into insl mov shll adc xorl jno out xlat idivl mov hlt mov icebp das outsb aaa xchg cwtl xchg lret mov (bad) xor jmp jge loope mov mov mov cmpl enter or lods pop aad leave inc lds jno outsb das jne add es cmp inc stos and lahf and rorl je xchg dec cmp cmp inc data16 add ja ljmp mov cmp mov push movsl std push xor cmc and mov sbb inc inc xchg cmc iret xchg rol andl scas add (bad) call xchg popa xchg inc repz inc outsb gs pop cmp pop stos xor test stos dec mov cmp jmp add jne std or xor in inc js rclb xchg gs jge test dec mov dec repz mov sarb and (bad) popa push sbb fxch mov daa out dec xor adcl xchg and hlt ljmp mov push push popf enter call and dec jo or jl test pop dec push inc pop ljmp mov push mov push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret dec mov notb and jae imul mov out xchg sub mov lret inc (bad) mov xchg xchg jmp xchg inc lahf mov push xchg sti xchg push ret xlat mov cs fwait std cs sub mov mov ret jp mov mov jge adc (bad) stc clc movsb jmp inc xor fs test jp frstor pop push test inc dec cld cmp (bad) cwtl fadds or and (bad) decl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret dec mov notb shrl xor mov push dec daa sbb cmp fwait das push jecxz outsb or sub inc repz jmp (bad) jp adc mov or mov ja or lods pop (bad) adcl stc cmp pop dec sbb leave daa leave mov int movsb sbb es pop lcall mov add ds xlat xor sub lods mov jnp pop ret lods xchg inc cmp scas sub add jp push fistpl fdivrp lea loope jle or out out mov mov pop daa push aas mov dec pusha jp std loope out rcll call in mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret dec mov negb inc fwait sbb dec push insl bound fdivr sbb adc out cmpsl xor push fsubrs jp push xchg or mov sub mov and (bad) mov jecxz mov popf xor lret mov or sbb aas out ja cli sbb fildll or sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret dec mov negb test cli push test sbbl mov or xorb in pop pop sbb les mov and pop pop ja mov fldenv jecxz shrb stos loop sub cmp cmp fimull pop adc pop in add mov (bad) verr mov scas aam pop mov sbb xor push dec jb pushf test std or cmp push mov pop xchg je int jmp or (bad) inc cmp scas mov push nop cmp andl aad addl sub repnz loope in xchg aad or mov push sub mov and dec pop push ja shrb sbb mov aam (bad) push xor (bad) in mov lods jge add inc xor jg or scas rorl ret xchg and loop aas mov add or sub cmp mov dec jecxz popa lods add std repnz insl sub xor dec ss mov or inc dec sub sti insb push mov popa lods rcr dec repz shld mov fldt outsb and add add cli mov xchg cmc mov sub fwait into pop stc sahf ror ja inc jnp and sub (bad) add imul or iret adc cmpsb (bad) xor mov mov and enter adc loop test fiaddl mov lret mov test pop sbb cmp adc movsl add adc mov cmpsb mov push mov mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret dec mov negb jmp sar shr imul sahf xorl or mov push and movsb dec out push and std mov mov fwait out call in fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret dec mov negb lret adc icebp push push clc xor pop mov push mov push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret dec mov negb test cli push test push jne or add test mov dec jbe fdivrp ljmp rcrl mov lahf ret bound insb outsl jo clc xor jmp iret push fwait cmp push int mov imul inc rcl iret add mul add lock push adc push xor inc xchg scas add adc jmp icebp nop (bad) aas das mov ret xchg fs push adc fsubr lcall jecxz iret push rol mov push xchg or les or popa stos ss sbb aas push xchg pop add sti enter cmp push (bad) cmp jb pusha cs jg cmpsb mov xchg push xchg mov xchg std int3 mov push mov sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret lods mov lea pushl fnstenv or lock stos pop push mov sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop add andb push out movsl jg jmp sbb movb xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp cmp fstp fldt movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp cmp aas xchg loop fcomp fcomp out test je fchs ret fstp fstp fld1 ret cmp mov jl,pn add das xor push mov sub pop mov es add fnop xchg pushf fxch fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg add andb push out rcr fcomp fcomp sub or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret mov jnp (bad) loop push ljmp cmp and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret dec mov negb movsl sub cmp mov cmc ds cmp mov push mov jmp xchg xchg jbe negl xchg repz (bad) (bad) and bound je call jge add movsl movsb xor cs (bad) data16 xor sub pop pop scas stos dec jo xor (bad) pop mov or scas or dec jmp mov jnp je loop cmp into lea xchg jo xchg sbb movb sbb lret (bad) (bad) sub hlt pop pop dec call pop sbb setb mov shlb jb xchg call jne daa imul stos and scas aam das xchg mov out jl fadds mov ds into push lret sub ljmp insb jge xchg rorb mov popa js adc inc sub xchg push imul inc inc stos jecxz jecxz les fwait lahf mov push mov mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret dec mov negb fwait xchg mov pushf hlt les sub gs out imull icebp cli nop inc and jmp xchg cmp mov mov shll in cmp sahf ret mov mov js adcb popf sbb xor mov push mul loope and es aas iret dec pop xor scas decb lcall xchg and loopne in cmp push rol (bad) insl dec out or inc xchg mov cld js loope fnstenv ret stos pop aas mov add fistpl pop out popf and pop dec jecxz pop ja,pn xor or dec rolb adc pop add jmp sbb or (bad) (bad) sub popf and inc push sub ficom pop imul xor cmpsl test sub jbe mov hlt ljmp leave mov mov rcrl pop adc daa push test ficompl aad inc cmp or pusha mov sub aad fldt outsl pop stc test xchg cmp jns stos fnstcw shl push mov inc lods js movb scas dec inc stos (bad) or fdivrs adc and stc cmp sbb mov push dec inc jno push cmp (bad) cltd mov bound std movsl js fnstenv lock dec xchg or subb jp mov jnp inc mov jae lds push fisub pop clc push dec aaa imul inc cmpsb (bad) icebp mov hlt gs mov in js xchg push repz mov push jl repnz inc push push add add ret iret out insl mov xchg (bad) inc push int3 xlat nop in mov ret push xchg jg icebp mov xchg imul movsb into jae in fwait mov es xor stos dec jns mov pop push sub mov fisub xchg xor sbb addr16 sbb int fcoml or mov imul je and stc inc adc push add icebp or jb lock (bad) ja mov sbb test jle cmp test mov xchg inc cld inc addr16 adc inc xor movsb rcl mov sub in sbb aas or xchg (bad) into push xlat out dec out mov xchg or inc cmp jp inc ret xchg aas popf fild jmp (bad) and push xor out push inc mov divb jp mov shrb jp push push cmp ror lods out adc lea jbe push loope das out pop pop out mov jp icebp (bad) mov test cli cmp rclb ret add or mov push in push gs arpl lret jo aas xchg dec push movl xchg das add cmc mov std iret inc adc loop iret fwait push mov mov enter push data16 jb pusha mov push mov fnop push adc imul pushf cmp adc ret and lret insb add add mov mov mov fldl pop adc pusha jge jne jnp mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret dec mov negb fwait xchg mov pushf in les stc cltd xchg cmp pop inc xchg lcall or pop fistp lods mov cmp leave aaa adc jno push lahf mov push push or es hlt jge test (bad) or int3 mov mov icebp pop push negl and addr16 lods jp mov pushf add pop sub mov inc sub repz xchg adc rcr dec fdivrp or xchg add test cs mov fcoms icebp or push pop js rep xchg sub xchg pop mov sbb call push (bad) or dec mov xor loope daa pusha fld mov int lahf loopne push pop ds jo cmpsb mov clc movsl test repz jg xchg fwait je lock mov aaa sub bswap iret xor daa insl pop mov fs movsl mov dec mov (bad) add loop out adc inc enter adc popa in cli test add jmp roll inc (bad) mov xchg and in je inc and imul push mov push inc fbld (bad) cs popa inc cmp push push xlat movsl enter pop cld dec (bad) loop mov jmp pop xchg adc jns roll xchg test mov je xchg mov jmp cmp inc sub fnop push inc jp jb rcll sahf andb pop pop in test inc test test sbb (bad) sub cld cmpsl dec lcall jmp movb fs in pop bound (bad) loope mov popa imull sub adc (bad) sbb (bad) mov pop adc xchg push (bad) push pop and mov aam adc mov push mov sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret dec mov negb adc and bound popf (bad) fildl jbe mov insb mov ss and pop xor jmp cmpl xor addr16 sbb xor outsl add mov popl icebp xor movsl push adc mov int3 call xor push test pop aam std mov jb (bad) fdivrl sbb (bad) pop sub cmp push arpl stos sub shr adc movsb and ljmp dec ja leave xchg std or (bad) in jecxz and jbe mov stc and mov lock cmpsl outsb adc lahf dec pop aam dec (bad) dec stc push fidivrl bound cmp std pop in test cmp cmp mov ret xor negl icebp add xchg nop mov dec idivl push jbe pop ljmp fist or cmp pop das jb pop mul push aad mov imulb ficom jl jo push push xor inc (bad) and sub insl cs and mov jae jg lcall mov pop dec ss inc fs dec adc pop cmp pop lea (bad) lock pop add std xchg ret (bad) repnz mov imul (bad) mov pop push repz daa inc popf test mov cmp inc movsb (bad) loope std icebp movsl ret jne push shr adc enter ret gs iret pop popa pop sarb sar data16 sbb xchg adc and inc (bad) xor icebp sub repnz xchg out pop pop xchg leave cmp out clc cmc adc sbb mov (bad) mov lret int cmpsb (bad) jle mov fldt out dec cmpl pop or jg mov xor jnp pop mov pop sbb mov mov lret xlat clc inc outsb aas and cwtl jne ljmp mov sbb aas jl jo adc sbb imul push add popf or push imul sub jl inc repnz nop xlat xor popa mov sbb xchg mov pop xchg cld jp mov xlat pop xchg mov pushf popf jno mov sub (bad) xor mov movsl cs mov cmp call in sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 dec mov negb inc fwait add pop stos int mov stc pop repz popa sub sbb pop xchg js inc mov jno adc xor enter mov (bad) fdivrl push adc mov mov sbb mov lods mov mov pusha movsl sti dec xor push ss ds jb lret fcompl jo cmp jecxz jle push arpl jmp push roll cmp ja lea xor inc (bad) aaa ret stos pop or xchg ficomp sarb adc in or jmp sbb cmc int3 inc pop aaa testl cmp rorb sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret dec mov negb inc fwait add pop stos iret adc popf stc pop repz popa sub sbb pop xchg js inc mov jno adc xor enter mov (bad) fdivrl push adc mov mov sbb mov lods mov mov pusha movsl sti dec xor push ss ds jb lret fcompl jo cmp jecxz jle push arpl jmp push leave and mov inc fistpl das data16 sbb arpl call jecxz cmp sbb mov push mov or add es dec pop (bad) cmpsl ja push mov test cmc mov push mov mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp dec mov negb test cli push test sub daa jae xchg and xchg (bad) les push (bad) fincstp aad daa andl out mov out stos xchg pop pop gs je inc xchg jg inc sub fwait mov xlat outsl faddl add je or jge in jo je add scas aad xchg cmpl inc popf aad or ja push mov add and mov out mov inc add or lret icebp nop xor xchg loopne movb sbb mov dec (bad) int jnp xchg aaa in push ret xchg pusha mov push (bad) xchg mov mov ret movsb jb ds mov cs insl xor add xor push push cwtl lods popa cmp mov repz mov sub dec xorb lcall and mov imull cmp mov pop andb mov cmpsl or inc pop mov sub addr16 in insl mov dec ljmp xlat (bad) lahf pop aad mov sahf mov movsl pop or push in das and in push enter cmp popf pop add stc cltd scas mov mov mov lahf (bad) cltd test pop sub popf jge add jns lock xchg push mov in mov jg add lea or mov mov mov jbe in mov mov jecxz lret mov out test add xchg lret cmp xchg (bad) repnz sub in test mov cld es mov sbb nop outsb mov xor adc orl rcll sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret dec mov negb inc fwait add pop stos loopne mov scas push loop lahf aam imul daa xchg dec jbe adc loope out cmp es cld xlat ljmp add sub mov dec and neg mov xor cmp xor sub mov cmpsb sahf sbb dec add lods mov push int pop cld inc xor stc test mov xchg push iret mov ljmp pop fcomps subb pop bound out xor mov push mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret dec mov negb adc and bound popf mov jae mov scas ljmp (bad) mov xlat fstps jecxz adc test lods fdiv mov lahf ret loop sbb sbb jbe dec pop out inc dec add cmpsl jmp xchg les push lds dec or maskmovq mull out pop inc inc bound sub scas std (bad) xchg jp or xchg cmp jle mov (bad) mov push (bad) repz sbb ret je hlt (bad) aam loopne sbbl or repz loopne dec sahf sti or ss jle cltd or pop (bad) icebp jne bound dec mov cwtl pusha ret push sbb xor pop add mov movsb (bad) lret into or xor push cmc int3 aad fisubrl sub jl push idivb out dec xor mov (bad) mov ss lcall adc mov das aas or mov out dec ljmp loopne sti push jl mov outsb sbb (bad) lea test mov dec or outsb xchg insb repz fwait pop (bad) push js mov mov sbb in (bad) lea hlt mov fwait dec jge mov pop add shr pop movsl enter cltd lock imul fist mov repz and das aaa inc cwtl daa xor mov inc cmpsb pop cmovbe pop mov sbb fcomi inc jne mov add sbb (bad) stc sbb sub mov ja jae bound sbb dec mov addl mov xchg jnp xchg ficompl pop sahf xor nop mov inc adc (bad) push add cmp int3 sub sbb (bad) je arpl jg enter in jp punpckhdq mov mov inc ret mov rcll rcrb push fsub jbe mov cli scas rcrb loope push xchg cmp jmp or add xor pop jo pop and adc rcrl cwtl in mov ss orl repnz add jl fdivs out xchg imul mov cs fcmovu pop fs pop pop inc pop test xchg jge fisttp xor jle jno ds test int dec repnz jmp cmpsb in cmp mov jb xor les leave cmp (bad) dec ds rolb mov adc mov loop jae or in jns in lret outsb cmp jg ret inc xchg das idivl in in int loopne xchg jo or out loope mov mov lahf (bad) popf or ds adc adc xor push mov sub xor out xchg push nop stos shll pop sbb fsubrl sbb or or (bad) frstor das inc mov add sbb fstl data16 add mov and mov sub xor xchg pop lcall mov jl push sbb xchg inc lcall (bad) mov repz mov ss mov xchg insb mul adc or int3 pop (bad) dec jle jmp and fistp push sbb fbstp cld dec jo mov mov loope adc mov rcrb push pop (bad) call pop mov jle aas insl sub fcos dec jae sub shrb ja sub sbb fcmovnbe orl fwait call pop mov mov fucomp call enter push mov push scas cmp push xor xor mov mov mov cmc shrb push mov ljmp add lock jne jae and les jbe cmp icebp mov imul jle sbb mov adc (bad) movsb mov sub mov mov dec popa cmp (bad) push movsl ret and mov bound fsubl mov xor cli mov (bad) int3 xor pop lea pop jge inc testl xchg mov cmp mov and cli arpl push (bad) xorl das stc mov push jecxz cmp leave in out adc out lcall fisttpll push xor imul and data16 out mov push fistpl fst inc (bad) mov jbe xchg pop push mov inc (bad) leave mov out dec popf push push insl popf lret xor iret (bad) fistpl outsl pop or inc mov (bad) (bad) inc adc icebp shrl adc pandn cli push movsb and icebp xlat pop dec shl cmovno jb push out loope adc jo aas mov cmpsb and push xchg divb jg mov ret lret pop jbe loope dec or xor loopne stos pop xchg jmp addr16 pop cmp pop jnp lret cmp mov dec in jns ret (bad) or sub sub push sarb dec cmp mov inc sub hlt add adc movsl test stc mov lahf repnz ficomp pop test mov cmp outsb mov stc stos pop bound mov enter rcl push nop xor sbb test adc xchg ret pop test inc and rcrl mov int3 add pushf mov jle xor add into push adc aam mov pop (bad) jo push js arpl add push cmpsl fs ret cmp xorl add ljmp (bad) adc jle jle xor xchg sahf cmpsl mov cltd add nop sbb push (bad) pop (bad) (bad) lret jo mov sarl adc stos in cmp jl mov decb jns adc scas scas pop loop dec pop popa test gs mov dec pop mov inc xchg xor hlt (bad) into lds and xchg pusha xchg imul inc test gs repz xchg mov hlt fisubl pop mov icebp pop test jl xlat dec enter lret repnz mov (bad) int mov adc jae gs inc aad les sbb mov inc in (bad) mov (bad) sti mov pop mov mov xchg jge and push jne mov out add pop push sbb jo (bad) sbb incl mov popa lahf xor (bad) mov mov test mov cmpsl ret sub jle test cs push fsub jne or lods pop nop aaa xor js adc inc (bad) inc xor jl aam pop scas pop inc lret pop push sub xlat es aad pushf mov imul jns adcl out push jl (bad) mov jne push cli sub pop ret dec mov mov ljmp ret cmp leave (bad) popf test pop cmp push push ds xchg mov push mov jae jle aas xchg lret (bad) mov mov mov adc dec dec xchg push pop icebp cmp (bad) leave outsb lcall xor jbe js push mov roll gs xchg fidivr inc in pop xor fmuls mov dec and add cmp xchg mov xchg jb xchg ficomp xor adc dec ficompl or je repz push push inc sbb (bad) jmp out lret mov cwtl xchg dec sahf adc xchg addr16 into and int pop dec and sbb and sbb pushf mov xchg sbb xlat cmpsl or dec repz out in cld loopne or cwtl fbld lahf int mov mov sbb xor lds adc cmp mov mov (bad) adc fsts mov mov inc in loopne pop push bound add jg dec pop xor ja emms mov pusha nop (bad) dec mov fcompl xchg je sub cmp mov xor and test sti popf sub in xchg addr16 (bad) stos (bad) cmp in mov pop dec js pop inc stos fcomps inc insl scas inc (bad) adc xchg lock sub (bad) movl and loope cli xlat lods push das mov fcoml fildll mov (bad) aaa mov lahf or into adc or std mov xor loope cmc adc or add iret mov sub sub cmpsb ja insl pop call (bad) std outsl lahf pop gs mov sahf ret out iret jl mov ljmp testb add lds movsb mov ja mov xchg mov in push test ss rclb push in pop jae fnstsw aaa pop push sbb in xlat xor test mov lds mov daa xchg mov sarl push fdivl push into inc xchg xor subb jp or nop xchg or adc ja push pop (bad) mov push adc push testl and or jne daa lahf popa decl or stc stc jmp leave adc xchg dec js (bad) jl lods add jecxz fs pop fnstenv pop adc push ja jns or inc push cmp gs cmpsb sub insw call jmp mov inc stc jecxz xor and push inc inc jge mov inc mov xchg inc pop in mov movsb repz dec mov andl in loope movsb into push roll outsl fs outsl dec adc mov scas mov jp cli adc xor dec dec pusha adc fist outsl lods pop push out inc jge les lcall push stos xchg xor insb xchg bound cmpsl jno mov ret jns lret in or stos (bad) ja cli enter mov mov hlt jnp (bad) (bad) imul mov xchg jno sub push pop hlt mov xchg fisttpll shlb sbb test and push cmp push jecxz push andb and xchg flds or mov push mov scas jnp jno jmp fimul insb push and cmp dec mov mov movsb sbb xor scas or (bad) cmp fsts adcl sbb push xchg and ljmp adc jns jmp mov repnz or icebp insl sbb int3 mov jne xor cld pushf push or mov xchg in mov out push add sub incl movsb sbb push jecxz adc push pop (bad) xor (bad) fs (bad) adc scas sub outsb pop add xor lcall xchg fistpl popa repz int3 xor bound aad sub js dec add mov add push js mov call lcall fcoms aam out mov push ret lds cmc stos lcall xor lds adc inc cmpsb xor cmp cmp je fs ret or mov sarl or hlt testb repz inc adc mov pop leave or (bad) (bad) fsubs popf aaa and inc repz (bad) out es outsb push adc mov adc mov inc in int loop incb cmp dec mov adc (bad) pop xchg jnp add std sbb mov in adc or jge xchg mov rol subb mov or ljmp mov lret or cmpsb lahf hlt xchg pop pop inc orl pop jmp lock jo and mov test rcll les loop pop jg cmpsl hlt hlt fistp or or fcoms fs arpl lods inc or jecxz dec cmp std xor and fdivs add dec test mov lods lods mov sbb ss test scas xchg (bad) push rol int3 adc ljmp cmp jb add (bad) shll dec inc mov lods lds daa or fucompp popa cltd call clc or shlb mov jge mov mov and gs xchg jne cmp mov xchg sub mov gs imul xlat push xor ja sub loopne sbb incl pinsrw mov cmp add pop nop adc cmp addr16 gs sbb xchg leave push xor sarb decb fimul or sbb pop arpl stc adc test xchg sbb aam fsubrs mov imul xor push mov clc inc pop mov aas jae push mov ror outsb shrl or lds jb add je ljmp repnz or inc int3 or xor cmpsb lahf mov out mov sbb clc in mov or push int3 aaa stc clc cltd pop adc jmp lds repnz push mov pusha or xchg outsb jmp lods push (bad) fwait les dec loope jnp jbe push into es pusha lahf sbb aas mov ds imul data16 pop fisttpl jbe je movsb jge sti nop (bad) aas mov sub test mov mov or and cmpsl push out cmp dec inc outsb jge mov mov mov dec xchg mov rolb jno dec mov (bad) push int iret dec xchg and imul or pop test xchg ret adc loope and dec popf sub ss (bad) loop mov mov repz popa adc insb jmp and jo add call sub sbb sar dec stc mov das (bad) rcll add (bad) iret or xor xor sub add rcrb in dec push loop dec fcmovne pop jg cmc ret loope and sbb ret (bad) mov sub xchg insb xchg jne jp inc cmp test in or push pusha jmp or in mov mov pop leave sbb jecxz insb fwait test fisub dec icebp mov rolb je cmp pop repz sti pop xor push dec sub jecxz add test mov jnp cmp adc sahf hlt test repz out scas (bad) jb clc sub mov (bad) pop nop jne inc enter ljmp pop adc lods popf adc clc cmp cmp mov dec loopne cmpsb or mov jmp jno lea sub dec pmulhw lods xor ret pop mov push bound jp xor push jb fwait rorb adc insb jae insl imul popl add ljmp xchg push pop mov xchg cltd arpl clc aam (bad) aam fs pop lret out sub shrl or push jns (bad) shr xchg cmp and fistp stc daa cmp pop (bad) fs jnp hlt and loop (bad) retw cmpl pop cmp sub fwait mov dec lret add cmpsb popf inc lock arpl xor sub jae int3 push sar push call mov lds lods aam xor jnp and adc mov jecxz inc or push add push inc inc daa sarb (bad) sub (bad) rolb mov and aad aas cmp int (bad) iret fninit or pop mov in sbb test icebp pop ds aas aaa mov out mov push rcll jmp call in push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret dec mov negb xchg cmp and xchg add je dec ja scas nop sbb arpl idivb pop ja addr16 add cli ss pop mov cltd nop sbb mov and popa sahf push mov aam mov lea push xchg imul xchg ret cmp cs (bad) leave mov push mov push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret dec mov negb sbb adc mov outsl mov push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret dec mov negb pop sub dec cmp and out cmpsb pusha adc fwait cs psrld pop mov pop into and or in movsb test rcl adc sub or pop sub xchg xchg and lock adc icebp loop je aam adc aas pop (bad) push and es xchg out push ss outsb push pop fisubrl ss xor pop daa jg std mov and and dec add mov mov push mov mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop inc jno imul push dec inc xchg push mov adc sahf mov loop push fistl imul or mov xchg and mov test cmp and loop (bad) (bad) call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp mov or xchg jne in imul mov cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 mov or fs das fs fwait cmp sub out sub sbb cld cmp mov jl out pop (bad) bound rcl push test jb pop test push loope int mov roll call sub jne hlt mov mov push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret mov or in and push and cmp cmp dec mov sub add (bad) ja ja mov (bad) (bad) lea add andb enter dec lahf loope,pn divb cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp rolb iret loop add int3 jl jno dec leave jae add out arpl repnz mov daa jne loopne test mov xor lret negl xchg popf mov or mov je enter and insl loop jno mov clc lods cmp in fdivs pop movsl aad jge rorb push imull mov test jge dec push gs sbbl or push xlat fs adc jo inc jecxz mov subb cmp pusha test pop inc inc (bad) frstor les call in push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or cs faddl and inc sbb mov outsl adc push sub sbb mov test (bad) in divl push bnd inc scas clc out mov lds lahf ret sub das mov sub mov (bad) lret les test mov popa int jae int int3 sbb add aaa sub test push pop xor lret dec fisttpll jge jbe je add es cmp lods dec push int3 push test into aad loopne arpl ljmp in loopne aaa inc popa push inc test stos jle icebp int3 mov out jno stos cmpsl outsl push pop mov pop sbb pop add leave jge sti lcall in mov les mov loopne ficoml cmpsb out or mov call dec lcall mov lcall inc and popf adc pop hlt rcr xchg in in sub mov leave xor cltd (bad) rcl push and add sub out lcall outsl add jns arpl fwait cmp cmpsb les popl aaa mov xchg sub jo div shrl inc mov jns rclb enter mov add cmpsb push adc push add scas rclb loop adc pop sbb jp,pn adc icebp mov pop or pop mov test mov enter ret test cs fdivr mov jo xchg push mov adc jb jecxz push jbe mov fwait dec mov stos jmp push dec in divb xchg xor inc test xor icebp out pop add cwtl movsl lds sub mov mul repz into aad mov jle aaa mov dec in jo cmp pop jl aas int cmp adc jbe stos pop leave dec jecxz iret stc mov sbb pop push pop pop inc pushf mov pop adc and rcll xor rcl and jecxz sbb mov sbb in out mov xlat jg cltd xlat insb loopne addb icebp sahf call (bad) (bad) (bad) jae push jb (bad) cmp sub fcmovnu mov xor jb andl mov aaa movsb fs sbb adc sarl xchg mov in ds lahf pusha jbe push xor add pop jg mov out jge fisttpll or jge adc dec inc test jo mov jl rcrb cltd shrl mov jmp adc (bad) hlt aaa or sbb data16 pop dec push jne pusha lock mov dec cli jns iret fwait mov cwtl (bad) gs insb pop lods cltd mov mov pushf adc lds movsb and outsb adc or scas stos in adc stc in add push jle ljmp jmp popf mov out xchg sarb cwtl sar cmpsb in pop adc dec inc xchg and daa cmp dec cmp lret das pop enter or add add pushf adc test mov stos fstl xchg inc mov jne pop xchg fnop test mov cmp mov imul add dec cld leave data16 imul shll mov mov mov cmp jle inc pop sbb scas je dec mov xlat mov cmpsb fildl into sub push outsb (bad) dec dec inc push ret push jo add xchg pop sbb (bad) fmul mov dec cltd pop sbb fdiv adc shr push pop and cmc sbb cmp add fistpl in sbb outsl sbb push mov ret dec pop shrb shrb mov or (bad) das pop loopne sbb xor xor add or fistl and jno mov push adc inc sbb jno (bad) sbb and jae (bad) or sub adc push or xchg xlat xchg dec ror lods push decb sbb mov jl mov lock xor xchg and xor jno sub add jecxz jg hlt mov js sbb arpl cli adc and aaa es xor cmp push mov jecxz mov and mov in fsubrl test inc ss outsb and lea fsts negb mov dec loope fadd cmp dec (bad) fiaddl roll pushf lea js (bad) outsb xor call add adc push sub in xchg movsl adc lock xor inc test mov and mov mov push mov test lods adc jl repz out push jecxz lret fwait inc jmp in out out and jo in add push loopne jnp shlb adc jmp sub cmpsb shrl std mov and cmp in (bad) jp mov push stos sub and icebp daa stos fisubr lods aas push inc inc imul cli pushf and hlt mov mov sbb insb rcrw and out add je push fidivr js cmp mov int3 test push xor (bad) mov mov inc fisttp sbb (bad) lods xchg nop push aam jmp sbb insb fidiv das lods (bad) fisttpll adc gs loop data16 xchg push imul or std push in call xor jne in cmpsb push int3 stos lahf rcrl push std in mov (bad) sahf lods push or jmp add lret fldcw (bad) js int mov cmpxchg dec mov (bad) dec (bad) int pop mov sbb mov (bad) pop dec imul cmc xchg pusha inc scas mov sbb int3 mov bound cmp cmp fldenv movsl xor rcrb sbb and ljmp or bound out mov (bad) fcom roll xchg mov inc into popf int jg adc cmpsl xor cltd out pop jno dec jnp jecxz les xchg and cmp lods xchg aas ljmp aas adc clc icebp outsb popf (bad) or inc in leave or push push ret test arpl out mov xchg lcall lock jg shl and aad mov cmpsl jecxz sub (bad) jg jmp and inc inc into adc lret movsl add fs xchg test pop out loop pop push ret cmpsl jp,pt loope icebp stos ret sub fadd ljmp fwait jnp cltd pop (bad) divl xor daa test dec insl xlat scas xor and faddl lcall (bad) call push mov adc mov (bad) ds addl in xchg fwait xor in negl mov pop cmp rorb rcr out pop lods out cmp scas int3 (bad) dec xchg pop mov push inc and out in std je out test push inc sbb jbe add lcall jns dec iret mov cmp lea sub xor sahf sbb pop arpl sbb or xchg sub mov mov mov or push in dec mov inc les xchg push mov push xor xchg sbb test cmp or ss (bad) jnp loop push and sbb insl sub fwait ljmp jmp les test sbb mov cld mov pop lds or es mov test ret push sbb movl dec push push test arpl nop test mov mov out add outsl push mov sub cmp addr16 sub (bad) repnz or sub in (bad) or xlat mov mov dec add movsl mov and push jae xchg lahf lret dec das (bad) sub mov nop inc push push pop fdiv adc xchg insb xchg sarl cwtl jb mov adcl sbb dec loopne mov jns dec movsb add dec ds or xorb dec fisubl es daa (bad) pop icebp or es cmp or or notb jle ret mov pop xchg retw out and push int jle,pn subb repz mov jmp movsl xchg jns subl sahf ss hlt cmpsl xor outsb cmp mov cld push push add and jp popa dec push into int ljmp out clc mov mov mov cmpsl lods dec pop popf (bad) sbb push je mov inc add ret imul andl jae mov fwait adc fmuls push sbb sbb pop fcomp mov or push inc scas lods cmpsb (bad) fwait and push add adc data16 aas mov mov mov (bad) outsl push in out sbb push addr16 popa js inc sbbb mov loopne cmp mov and xchg sub pop imul outsb xchg int lcall clc mov out test cmp xor pop je sbb mov test mov xor sahf sub sbb pop pop adc add sbb inc push out mov std adc mov add addr16 dec sahf call ljmp cmp test dec sbb icebp movl (bad) pop add mov jmp lret jb bound rcrb addr16 xor call call fucomp jle ret jecxz or sbb lret or leave bound popa inc inc mov sbb inc imul xchg lret (bad) xor pop in sbb clc leave cli dec lds mov mov in jb aaa or xor mov rorb pop dec mov popf xchg pop xchg mov mov lods pop add in fidivl lcall scas sub mov insl cmc lds sub fcoms cltd out xchg pushf xchg inc mov mov out inc mov cmp cmc cmp pusha xchg add pop mov push xchg es and mov push xchg sbb push push movsl inc pop jmp aas sti mov fs xchg les inc sub adc pop or inc cltd add hlt mov test clc inc xlat xchg dec jecxz sbb lods in (bad) cmpsb int3 push adc fstps movsl xor lea rorb push pushf addl sbb push mov (bad) or and outsb cmp pusha cli js mov sti pop dec test cli jne sar cld fcoms std mov in push xorb push mov cmp push hlt mov add adc faddl inc xchg pusha in cmpsb lods jae pushf in data16 xchg call adc outsl loop insl xchg dec pop ja push pop in push dec and sub pop jge push insl pop hlt fldcw sbb mov ljmp sbb add ds mov pop imul pop mov or xchg fwait pop or imul sub mov pop loope (bad) jecxz xchg les outsb jmp xchg sub je add and cmc cld std xchg stc les cld icebp cmp es ss jb xor pop icebp and mov fwait and sahf into push mov push out pop or jmp mov mov xlat cmpsl mov outsb clc fisttp mov cmpsl jge orl mov xor sti mov mov shrl enter shll or jno cmp loopne rcll add outsb pop sahf std std xlat push sbb or lea lock fcmovnu pushf addr16 sub fnstenv movsb lret rcl aas push out enter cmp add les inc (bad) push out pop mov push mov cmp fistpl and fsubp push leave fmull sti sub cmp sti push dec (bad) fcomip sbb outsb xlat mov pop xor push movsb or xchg xchg jmp (bad) js int3 mov repnz xor jmp neg push roll cmp (bad) adc xchg pop test sbb add das xchg inc mov outsb inc xchg xchg jl les pop mov inc mov push mov insb xchg (bad) out pop cmp call push movl sbb mov add ss mov cmp mov lcall shll mov inc shlb daa pop fdivrl sar jg test and lea fcompl mov inc sub cmp (bad) (bad) int3 pop sti jl jno and xchg jo jo sub sbb daa jno adc or jno push and dec aad jno fs and dec jb cmp outsl ljmp mov (bad) pop inc jmp sbb mov hlt xchg ljmp out aad loope add inc mov inc popf sbb (bad) scas dec dec or in mulb xchg pop jle cmpsb lret fisubl ret clc cmp idivl cmpsb dec add lahf cmp ss inc mov or ret int3 xor or or subb or rcrb ficoml movb andl addl mov stc fwait pop lods rorl (bad) jl cmp dec xlat push fcomip xchg outsl xor gs lds push sub stc ret sub adcl mov lock add lods mov xchg and in jl or divl inc mov ljmp cli cmpsl imul shl arpl or test push inc scas dec inc bound mov mov in jae,pn mov mov xchg mov push xchg vpshufd mov lret and xchg sar adc jae std in push loopne (bad) xor and mov and push ljmp fbstp insb rorb hlt xchg cmp icebp add int iret movsl aaa loop fildll (bad) rcrb push les sti ret xor mov mov mov je inc mov xor fstsw in std lods and cmc clc cmp iret push pushl xor ss aam xor cmp decb sahf fwait pop daa ret negb pop inc xor rorb out cmp xor bound pushf dec (bad) lods lea fisubr cmc popf ret cmp push sbb loopne imul stos pop mov sahf fldcw popf leave (bad) test cmpl adc arpl jp xchg sahf xchg or or inc add jecxz cmp jno and pop inc mov push xor pop stos push icebp lds test mov pop aaa je xor adc inc (bad) mov aad cmp nop jg aas mov cmp out ret cltd cmp out lahf mov into orl lods insb gs int add lods xor dec popa lret fnsave dec add lods leave (bad) aaa jbe pop (bad) test lcall js sbb xchg xor lcall push fiaddl popf add push inc push (bad) (bad) mov xor loope cmpsl jmp pop out mov sbb cmc inc push test icebp xor jo and aad mov push ficoml add dec rorl mov outsb xor lock jo mov and push dec cmpsb lcall sbb jne jl shlb jne jmp mov jo mov lods in fwait adcl repnz aam mov add rorl or cmpsb loope ret cmp or in xchg mov popf fdivrl mov gs rorl pop jo movd je push out pop mov mov pop push mov lret pop ret dec mov dec aam scas and sub je dec xchg add mov jge mov push add xchg lds fnsave lea xchg push jmp addl sbb (bad) ret or aas xor cmpsl loopne ret add mov popa xor mov imul clc flds jns (bad) frstor enter pop pop and jge clc cmp add pop ficom test arpl add bound ds lea lcall lods push clc jl and loopne push addr16 sbb fs push test popf fldenv cmpsl cmpsb mov into push push sub je (bad) adc dec icebp enter cltd inc or stc cmp aaa dec call inc bnd jmp cwtl mov bswap cwtl xchg and outsl jno stos sbb add inc inc inc cmp mov adc sbb xchg arpl sub std mov mov test leave test faddl xchg (bad) mov mul mov push hlt out mov call mov jb rcrb sub (bad) cmp (bad) (bad) (bad) clc out and pop mov xchg and call xchg negb cli jb cwtl xchg (bad) mov push loop pusha inc xchg dec xlat pcmpgtd stc xchg mov in jae inc aaa adc mov mov imul xchg aas (bad) push or adc aaa inc fsubrs enter insb out out loop fs stos mov cmp test adc frstor mov adc cld fildl bound loopne sarb leave fstpt stos cwtl jo int shrb and mov mov pop cs cmp sub cli or out mov adc push out daa aaa lret lock push pop mov test sub cs shrl stos addl sbb mov in test out adc xor dec jg jbe lods (bad) pop sub lcall in mov cmpsl sub fisubrl mov aad and icebp hlt stos or push (bad) imul rolb pop mov inc dec jae pop cmp scas jg push cmp jbe inc mov xor mov sub lret xchg add mov fs cmpsl subl push xor ljmp js mov es adc (bad) (bad) cltd adc xchg or lods andb jmp movsl mov xchg sbb adc mov and pop sub add js inc outsb xchg mov sub xchg sbb jmp xor push mov mov imul int push cld rcr dec jl std inc loop jge mov clc push sbb popa into jbe ja sbb mov clc pop (bad) push sbb jl push scas addr16 xchg xchg inc mov fisttpl add dec sbb popf outsl js cltd lret negl cs lds out jbe insl xor xor cmp inc icebp xor mov aas sub pop pop pop pop and sub pop mov cs mov hlt aad lret pop scas jg test iret decl cmp pop jmp mov mov (bad) sbb adc sbb mov fxam xchg daa sub cs lods pop pop mov (bad) dec xor xchg shr mov jbe fistpl lcall pop xor jmp movsl cmp repnz mov adcl std negb mov pop ljmp pop sahf in (bad) ss mov xchg lods call inc pusha pop cmc (bad) xor mov or test das lea xchg cmpsl lock jno fcmovbe jbe cmc rdtsc jecxz pusha push jp mov or adc jb mov and and jbe iret imul in inc cmc cmp out jo js jno push sub inc out les (bad) mov inc push mov dec aam outsb jle xlat mov sub movsl std adc (bad) adc or inc mov and hlt push test lcall nop stos inc or icebp jp data16 push sub dec add cmp testl (bad) (bad) jmp cmc cwtl dec je sbbb push jmp iret loop stc addr16 pop cmp jnp int3 mov dec xchg in sub xchg xchg aas dec popf in push out add push loop cmpl adc outsb pop in mov sub (bad) sub aaa inc into popf mov fs mov lret or rcll das jae mov jbe cmp into fisttpl (bad) (bad) in push ds pop popa add mull pop inc ja mov popa inc sbbl jl xchg inc fistl loope inc adc (bad) addr16 (bad) les xor ret or cmp inc cltd cld in mov ds movsl pop pop hlt out les mov rcl sbb (bad) or repnz mov movsl push cmp mov push cmp pushf push mov aaa mov cltd cs sub mov adc xor sahf mov scas push sub adcl inc inc mov jge int3 mov and cld xor sbb sub imul mov xchg push rcll sbb std lea and (bad) inc stc pusha das scas xor hlt push das cwtl mov sub fisubl pop adc add xor lcall pop sub push jl scas and cmp dec ficoml push aam cmp cmp dec fldl mov hlt js mov pop xchg sbb ds dec or push push sub (bad) pop movsl outsb sub popa outsl push mov std inc cmc ret and in push lods into mov out push sbbb jl adc mov and and adc fcomps lods and inc inc sub es xchg inc int jnp inc or mov pushf pusha push (bad) mov cmp arpl test fcoml jl test in outsb mov (bad) pusha sbb cmp lods ja fsubs movsb test or xlat pop sbb dec cli add (bad) cmp adc jno bound cmp adc mov pop (bad) negb xchg mov aam mov sub or pop inc ja pop inc mov mov mov push imul in cmpsb add (bad) mul ficom sbb int or inc sti pop inc add dec mov call cmp into pop pop test xor mov or cmp pop mov fbld pop std mov lcall cmp and sub scas lock (bad) or pop sub gs push inc mov push adc pop pop push mov addr16 push shll movsl xor (bad) stc stc or in cmpsl fstpl inc bound jg add lods (bad) mov ss sub jbe mov dec push xchg inc and xchg cltd loope pop xchg jle pop insb xchg dec mov adc ds jb sti cmpsb fsubrl lret inc push das adc push jbe int jb mov inc into xor call xchg test (bad) jle scas cld pop mov mov mov mov lcall fdiv xchg int ss xchg xor stos adc push (bad) cs insb jns ret into push mov adc sub xchg andb (bad) xlat sahf inc insl pop cmp (bad) lods cwtl push repz mov ret aad xchg dec cmp pushf popw sub shrb scas mov bound movsb push or gs test jb adc jns add outsb push roll (bad) es pop loopne pop xchg or leave sub inc aas mov sub pop push sub loope and add fcmovnu add pop jle mov sub pop xchg dec jno or fadd jmp xchg xchg aaa loopne movsb jb fld outsb sub sbb js mov (bad) sub lahf ljmp cld mov jae lock dec pushl dec mov popf pop andb lret xchg adc lahf inc aas jbe dec adc jbe pop or push into aad popa pop fcom push add push sub mov addr16 pop dec clc inc or sbb mov pusha and mov test mov sub icebp ss pop mov testl pop jl into stos repnz sbb xchg (bad) out leave mov and pop daa ljmp negl sub fist add and enter das lret and outsl mov lock dec cmp or sub pop mov push pop movsb in stos sub stos pop pop repnz or mov sub sub push cmp add add jns xor jb out pop lods jbe xchg dec mov xchg ficoml lahf pusha mov inc cld add in xchg pop sbb sub cld dec or mov xchg shr das xlat adc aaa call (bad) hlt sbb adc das mov dec fucomip add sub push pop test cmc inc into out xchg js xor sub fistpll pop jns jb push sub adc rclb pop adc sub add sbb iret outsb mov push pop add stc rolb push xchg mov or push pusha lods rcrb sahf movq jmp cmp scas adc mov and adc sub outsl inc scas pop cmp push aad jno jecxz mov es hlt (bad) js outsb inc xor xor cmp dec xor js addl popf test inc outsb xchg xchg sbb or sbb je ds mov inc pop push cmp mov jae or pop and cli xchg cmp inc movsl ljmp mov mov cli movsl popf inc or (bad) nop push push ljmp sbb add adcb into leave int3 (bad) and xabort mov mov fs mov mov or lret jbe mov jno fist lods jne or xchg (bad) pusha insl xchg xchg sbb (bad) int3 or or leave push inc dec xor mov or fs enter xacquire in inc cmpsl aad mov xchg in dec lea adc ss add bound dec mov xchg xchg jo adc add jne push lret xchg lcall sub sbbl pop pop cld pop sub pop or cwtl mov rclb add outsb test push inc cmp sub repnz lahf xchg inc sahf and sub cmp js cwtl and cmp xor xchg std xchg xor cs cwtl mov mov xor sahf mov (bad) negb mov fisttpl jns mov dec sbb int3 lcall stos rcll cmp mov aam pusha shr adc addr16 and fwait mov scas sti shl mov iret lods outsl loope push call push arpl mov pop lret movsb cmp cmp cltd and mov and mov xchg xchg jae aaa jne fisttpll xor bound (bad) sub pop pop rol jle inc mov xchg sbb inc push pop xor xor mov in fsubs lea or popa frstor xchg inc leave aad xor mov xor jb add dec mov cs stos or mov (bad) xchg nop addr16 jbe scas lock inc hlt or insl sbb inc ret adc lods mov mov push mov xchg xor fs ret divl jl cs lock addr16 mov jge mov push xor mov mov neg mov push dec inc mov xlat pusha push fldl stos pushf loope dec stc mov rcrl push pop fcomps lock jp pop test (bad) add fld push (bad) (bad) out lods repz test push push bound loop insb mov mov jg jno inc (bad) ficom jnp in adc mov inc aam call adcl rcll insb das add scas aas sub pop pop (bad) lahf mov cmpsl push cli int3 push xchg mov (bad) mov cwtl add cmp inc (bad) stc and loopne (bad) les (bad) sti or mov mov js cmp inc pop xlat xor scas push add push insb sub imul push pop in lea push lcall pop jns sahf jl add fdivrs scas scas lcall mov ficoml in out (bad) lods in ret std cwtl bound aad testb lods jg sbb jne notb add out aam ret xor jnp jne scas xchg add int out lahf and cmpsl sarb shlb and outsb jns out fwait mov cmp xchg add push push lret int3 pop mov lret and jg mov xchg aas xchg adc fldcw (bad) jmp andl cli iret push and jmp sbb nop cmpsw pop and push inc popf xlat xchg ljmpw mov movsl mov add mov and daa xor mov jb stos or mov or dec jns mov inc mov and icebp sub inc rsm lock push pop es add cs mov xor ja jno loope or push sbb repz les xor (bad) out cmp popf (bad) pop into cmp xabort imul inc and pusha sbb out add loop and xchg nop jbe pop push push enter imul or nop stos out arpl mov cmc movsb pop je inc lret sub enter adc mov cmp jecxz iret stos fwait gs push dec adc xlat and sub jnp cs mov loop hlt push mov movsb cld mov out mov clc sti inc mov insl dec ds dec dec sahf cmc pop xchg jg bnd sbb rcl inc aam aaa sub or mov int3 push sti add imul testb mov and fwait lcall iret add jle dec mov inc frstor xor or cltd push add fwait inc out or in cmp push adc and (bad) fidivrl ret in test fmul notb out mov inc inc xor cmp mov cmc test out jns shrl or xor int adc inc cmpsb mov add in xor sbb in mov pop (bad) push lods rorl rcl insb mov sbb pop das push jb lret jecxz ja jge pop add push jg cs add in cmp in pop mov mov (bad) adc (bad) icebp lahf jo movsl add pop push jecxz cmp test cmp jmp test cli cmp (bad) divb loope push pop (bad) mov jl repnz call and in test cmp lcall jg sub mov mov adc loope push inc out mov mov sbb outsb push cmp je xor scas imul data16 jnp shll js popf inc dec insl add or movsl ss push fnsave adc add jnp fstpt or jno jl push imul (bad) sbb inc (bad) movsl dec imul and inc ss js push pop xlat ljmp test (bad) jg pop cld arpl and xor ljmp cmp aaa mov jae ds xor push jae dec dec cmpsb jb mov (bad) movsb xlat lea mov mov xchg mov or ds mov xchg push test lods push rol sub outsl jo stc (bad) jge das inc jle popf or enter xchg test enter mov mov mov sbb add push insl mov add das cwtl in nop adc mov dec xchg lcall int3 xor fsubrl push pop mov inc jp xchg mov adc xchg add mov mov lea fs jb scas xor imul loopne (bad) cmp cmpsb mov into insb xor stos call and xor cmp push pushf pop jb daa test inc shl pop fcompl add pop xchg adc (bad) (bad) push rcll xor daa add jmp pop dec shrb add les pop push adc adc pop jecxz push sbb std cmpsb push decl push mov popa ljmp xchg mov iret out jg (bad) movsb scas test xchg and push lret sub js xchg dec sbb push adc ret xor mov mov jb nop cmp sbb jno (bad) mov js ret or mov jmp sbb xchg or mov dec or test push stos iret enter and add xchg dec sti dec js popf popf xchg xor or movsl jae lahf xchg add inc mov inc jae sub xchg stc das cmp inc mov push mov or inc xlat fstps mov ljmp fisubl or xor scas mov subb push fcoms or dec insl mov push jl mov cmovge int lods or f2xm1 xor adc fwait cmc sbb or dec aas jae das icebp fild and movsl das or repz push xor (bad) enter jns leave sbb inc daa aaa jle pop mov in test push mov lea sahf inc (bad) mov hlt pop aaa pop fxam inc (bad) (bad) jae and scas fstpt inc jo add xchg int jo pop and test cmpsl xor pop int stc cli insl nop (bad) pusha mov mov or xlat iret mov or mov xchg push enter lret dec jecxz add mov mov or sub cmpsb out mov inc fs pop mov (bad) xor cs or lds mov mov call pop push test ret sbb dec mov push or cwtl nop test test arpl (bad) clc xchg lods ja cltd and sbb ret and into enter pop mov fwait jmp out xchg mov stos adc in inc jecxz insb adc cmp push adc jle sti sbb cmc aam xchg (bad) not mov jle dec jge imul imulb push test ret cmp out xlat std ret or pop test es jne ss jnp adc add ficoml int jg xlat xchg mov out add (bad) jo mov jae jmp push pop push ja jecxz ret in push pop jae cmpsl fdivrl push mov lods mov fwait sub add dec das lock and fisttpll (bad) cmp mov out xor mov idivb push pop push jno into pop or xor sbb and dec cli mov aam aaa xchg faddl (bad) mov mov cmovbe jae icebp sbbb dec xchg fwait inc or pop sbb aas xchg push dec pop (bad) jns push xor sub xor fsubs jmp inc cmpsb pop pusha clc or mov shrl ss xor push pop mov pop loopne adc leave inc mov mov cld xlat inc rorb cmp xor mov (bad) movsb inc dec das cmpsl lcall dec add aam outsb jmp lds inc mov (bad) xchg lcall lods int3 push pop mov outsb roll xacquire aam (bad) sbb aad push out inc test lock ret popa clc sub gs mov lret cmp pop cmp fnstcw clc imul lret movsb cmpsl popa cmp scas lods aaa dec jo addr16 aas test cmp rcrb ja adc xchg mov inc nop add fwait imul and inc push lock mov mov push sbb inc adc inc mov or lahf add (bad) mov adc push cmpsl leave iret out xchg push push out popf out lock sbb pushf das out pop stos call sbb xchg fidiv (bad) push jle popf pop daa adc adc js pusha jae push mov testb xchg test push daa xor out fisttp hlt add xchg stc mov jge std push jg leave sti add push push mulb xchg iret push dec mov xor mov pusha mov stc sbb bswap int3 pop fbld or xchg jns,pn push (bad) sbb sub nop cwtl call enter cs xchg testb mov sub das punpckldq dec mov lret jle inc cmp adc movl cmp rcll mov or or cmpsl in fwait lcall push sub pop js ds repz lcall lods mov jl inc popf das ret dec dec in or push mov popa lock hlt ja das xchg cltd in mov pop int fldenv mov mov pop pop test mov push dec xchg pop loop cmpsl add outsb mov imul fistpll fisubrl out and int cmc push mov in cltd add push mov xlat mov repz test cli stc mov je mov sbb stos sti cmp ds or dec aam add movsl jno js push in pop leave jnp jmp pop sub dec out scas movsb dec add jo and test cmpsl and dec mov std aaa pop adc mov jecxz xchg fisub xor test imul push ja movsl cmc dec mov and sub cmc or stc int3 jge js push xchg jb inc add test mov movb mov and push insb cmpsb int3 lahf int3 pop mov icebp dec pop push (bad) scas push fsts test xchg mov jp add sti stos rolb (bad) mov mov scas rol push adc xor gs cmpsb lods test pop xor xchg pop jle cmpsb mov xchg adc cmc (bad) stos jne mov clc or cwtl cwtd inc pop rcll xchg orb sahf insb outsb push es sub dec rcrb out sbb sub ja fwait pop cltd xchg into movsl pop insl cmpsb faddl in push or jbe push jmp sub pop or in aam aad fild xchg push push cltd popa in bound std cmpsl clc cld subps out repz push jg fcmovnu or xchg andl hlt enter cmpsb leave adc call sbb ds xor pushw cmpsl stc cmpsb jnp xlat stos cmp std dec pop pop and loop jle mov add or xor xor sahf sti fdiv jb and jne out out ja (bad) outsb gs xchg jg shl clc jae mov push sarl out addl mov lahf adc fimull ja jne ljmp push call adc pusha push call and add aas mov jb mov lods nop pop xor dec daa stos cli aad imul xchg pop aam lock (bad) fxch mov or and pop imul sbb jp push pop bound mov jmp and or popf in jae xor mov push jmp mov jl sub test aad les and mov incl lret jl imul and mov icebp das test pop js jb popf ljmp lds cmp sarb or sbb (bad) fyl2xp1 sub mov cmpsb test jg adc adc hlt out ficoml jno rolb add (bad) mov pop into mov in mov jbe loope mov popf pop pusha aas test sahf je test and xchg and fs out push add gs sbb xor test andl push pop push (bad) fimull pop push in or ss dec frstor jne add pop leave and sahf fisttp xchg incb shrl pop dec xchg repnz sahf stos daa popf jno dec or clc push ss push ret lret (bad) jne xor cmp add xchg mov sbb (bad) mov xchg adc rorb inc mov aad push fcompl or push xchg test and fadd insb outsb and (bad) in int3 scas mov in loop sub and xor pop orb push sub push jae pop in cld and lods ds cmpsl ss sub imul adc sbb xorl mov adc mov dec sbb frstor mov cmp out ret out sub jae dec cwtl repnz cmc xchg cmp and dec or negb sbb adc imul inc xchg adc jne pushf push jne aaa adc in (bad) shlb gs imul xor pop clc int push add movsb inc rclb inc iret loopne scas popf stos (bad) data16 mov add popf mov push arpl inc out mov mov push or shr mov outsl ss jecxz leave and fwait vmwrite into xor mov scas sti xor lahf pop push test xor sub data16 mov dec cmp pop add mov xlat out jns cltd enter cmp mov icebp mov cmp cmpsb (bad) dec or loop sbb xchg (bad) negb xor pop push test mov (bad) adc xchg add and das scas out popf or fs inc cmp (bad) mov lcall jmp (bad) mov clc pop xorb sbb add inc pushf inc inc rorb in pop xchg out shll popa fisubl (bad) imul mov pop daa lods hlt xorb icebp std xchg xchg xchg jle loopne and adc jne xchg add push (bad) sub mov incl mov xlat add and pop mov shr andb cmp fwait std and arpl pop pop repz pop sti jl xor xlat insl lock jmp mov push jp ja pop mov add in adc mov push nop xchg cwtl sbb push add push test sbb or bound push mov bound mov jl cmp (bad) enter int3 mov dec fldt ret loop pmulhuw mov fimull into aad (bad) out sub sbb int out (bad) mov jb das adc mov mov loop push into dec pop adc adc jne mov sbb xlat sbb or xor fcmovnbe jbe mov jno adc xchg mov push in int3 dec fiadd xor (bad) jno repz rol outsl je and (bad) in mov das pop xor mov mov or pop inc sti dec or lret mov movb ret je dec add mov cwtl fs inc push dec (bad) sahf sbb stos and into das pop jge cmp dec pop dec rorl xchg gs orl or (bad) xor in mov sub cmp mov push sbb push fcmovnbe aad pop fstpl jne cmp pop insl into dec mov mov enter repnz xchg test mov addl or sub je mov mov test sarl dec pop push or lret mov push arpl and (bad) lea mov add aaa dec aas push cmpsb bound mov jo rcl xchg les (bad) icebp dec (bad) push cld mov arpl xor sub rcrl xchg int3 dec or insb mov das mov xchg cmp rclb mov push sarl repz and loop pop mov clc mov (bad) mov dec aaa in out sub call ljmp stos out (bad) or cmp push loope (bad) call or cmp cmp adc shlb add fwait or test jbe mov mov sub inc xor sbb in stos xlat out test sub popa fdivr mov int inc ljmp (bad) bnd mov push dec push addr16 add inc out outsl xor mov aad jno and or fdivrs ds test pop xchg cmp sub clc call (bad) mov ret mov add shlb fisttpl adc or test or ret stos dec inc mov outsb (bad) aas mov loopne add inc hlt dec out gs daa ret pushf add (bad) mov (bad) je mov add fimull jbe adc in push out out adc mov mov (bad) dec loope inc push adcl mov ss adcb ljmp add aaa fwait mov or das jl outsb lret movsb pop xor test jg xor in lret inc pop add push push jmp fadd inc jns push jb imul flds push push scas sub add (bad) repnz mov or insl jae xor dec pop fwait pop lods pop adc je mov push adc fcoms popl aaa xor pop pop sahf jle stc and roll aaa data16 mov scas or (bad) mov cld inc insl cmpsl sub dec adc sub ret inc (bad) cmp mov or cmp cmpsl unpckhps pop stc fcoml ror pop ret popf xchg call mov gs adc cli lods mov outsl mov lahf (bad) insb fucomp lods in (bad) jo pop sbb jl cmp push or mov jp rcrl sbb and fisubl cwtl enter int pop movsb xchg pop arpl or cli pop pop addl mov or or dec shr test into cs mov loop xor (bad) mov into test xor jae lds xorl mov lcall add dec cld xchg or or test out pop fnsave in out test cltd push cmp mov mov int rclb shll outsb xchg mov pop jb sbb into xchg hlt add (bad) push xchg sub shll push xchg repnz insl test dec outsb repnz dec or xor test xchg in repnz shlb mov jg popf cmp arpl je lods or insb cli pop add add ret cmp jo fisttp je inc and dec and test in and std xor pop and add mov lret int sub mov cmp aad push and gs xlat dec out (bad) cmp cmp js mov addr16 pop xlat addr16 outsl mov (bad) shrb xlat movsb mov shl ljmp outsb mov sub int3 cmp mov xor fstl in push mull sub adc and push (bad) int3 or mov arpl add add out cmp faddp push add inc loop jne sbb xlat jb mov data16 addl mov xor in rol pop das or fistp xlat add arpl xchg das inc cwtl cltd rorl cmp addr16 mov xchg xor mov mov aaa fwait (bad) loope jo xor js imul ret or adc lret sub test mov jmp loopne rcrb imul push mov mov mov inc fsubrs cwtl or in out pop jne push cmp popa or push and ljmp scas lret mov fisttpll jne js adc shrl mov loop cli dec adc hlt jb and scas std cmp outsl ljmp aas outsl rcrb movl xchg dec push cwtl arpl in insb test pop jne xchg dec jg pop inc cmp inc dec test data16 pop mov rcll loop das test xchg add dec adc adc ljmp (bad) mov add mov cltd jge or fnsave xchg xchg (bad) adc xor adcb inc jnp mov loope lahf pop stos xchg cs jb jne xor dec cmp sarl scas mov les js mov jo xchg ret out jb pop popa dec xchg push out sbb inc jnp inc cmp fwait test sub aaa push pop mov xor out fcompl lods push loope ja bound mov in in jle xchg fst in cmp jge xor insb lret loope sahf dec jp or lahf pop push lcall neg test xor jns mov adc cmp xor cmp lea cmpsb inc and cmp push lods sub es inc or enter sbb loop xchg cmp push push rcll fs cmpsl ror and incl jmp fwait add dec je mov mov mov mov push cmp push movsb int3 jmp hlt jo cmp inc cmp aaa (bad) pop push test fnstenv int gs dec lods insb ret inc mov fmuls nop ret mov fisub dec fistl add jne loop sub (bad) pop or fstp inc fidivr xchg add das pop xchg lods roll call cmc adc stos in inc rcrb movsl mov or mov mov clc ja (bad) movsb push or fcmovbe clc dec sbb sbb pop pop int xor mov mov int sbb and addr16 fcoms cltd ret pop int cmp mov add out sbb add lods jns ljmp add stc pop sbb insl adc repz pop sbb fnstsw hlt mov pop xor jmp pop sbb sbb cli jecxz sub xchg outsl cmc ret mov xchg jo pop orl cmp int add loop gs mov mov mov add out push repz in ljmp sub mov mov scas push cmp xchg fisubr push shrl sti les repnz and (bad) xchg ss fdivs jne cmp mov pop into and pop pop hlt sub repnz mov xor out jecxz sub (bad) fisttpll loopne ja pop in and push push rcr (bad) push xchg push rclb and (bad) and jno loopne push loopne pop lret (bad) push sbb cmpsb cmp pushf sub repz dec fisubr push cld adc pushf sub rcll dec mov jge enter mov mov out loopne test (bad) mov enter xor sub in sbb cld ss add dec dec mov fdivp add arpl adc sbb fidiv mov adc and add push (bad) xor fwait stos push pop sub lahf (bad) std xchg insl stc mov lret in sbbl add gs sbb cmpsb nop ficomp or or sub leave cwtl aaa add jbe push cmp daa xchg imul lods jnp hlt push jb es ret mov ficomp cmp jo push push mov int3 add jae push or xlat cs jg xor fprem1 inc jns mov xor aad mov cmp stos inc (bad) lret hlt call jno xor and ja or mov ds push call jne mov out mov cmpsl fiadd cmp lcallw bound clc or loopne popf cmp add push sbb lahf pop aaa dec cltd stos mov xor fdivrs stc inc mov mov and (bad) sbb test outsb xor mov sub imul jo daa (bad) xlat mov or lods jno daa add inc js adc or and ficomp mov and push imul sbb dec aam dec mov (bad) into mov sub cmpsb mov and mov jl sub and imul jno jp ret mull push cmpsl mov shrb cli sbb mov mov cmp pop pop jo xlat out lcall stos movsb stos cmp or scas jae or movsl lods movsl sbb mov lods cmc and out jecxz clc jp and (bad) std mov fstl je std ja repz mov in mov jno xchg (bad) xor imul pop gs add cmp xchg pop pop sub dec fistpl add fmulp inc out mov aaa sbb loop lret test mov popa stc outsb adc imul mov sbb (bad) xor shr adc test jg mov sbb test stc dec les fcmovnbe sub push dec mov test push inc (bad) jne push add mov out sbb and mov dec push ret add xchg lret ljmp mov pushf push jle xchg mov and adc xor cmc enter sar or jb adc aam gs fbstp mov sbb push jg adc sbb decb xor mov outsb cmp mov lds leave dec mov test adc mov lahf lcall int3 aaa lods and lret mov enter push pop pop lods cmp and nop push jmp add sarl imul lock andb sbb jns pop arpl subl mov cmp mov mov and xchg ss js mov and jns mov xchg ffree xchg int3 pop push cld in jno je shrb cmpsl dec and xchg pop adc adc (bad) nop pop xor mov mov fsubrs pop scas sbb inc cld sub insb fsub lret jns jmp adc mov test (bad) rol push mov dec pop fmull pop ljmp (bad) mov roll cld adc pop lahf mov lret xchg mov (bad) int mov out pop jle call inc mov lods call mov nop scas ja mov jnp scas cmp fisubr and andl sbb ds and pop push cs jbe sahf cmp and mov or mov rol jno mov xor lock ss lret aaa xor inc (bad) ljmp mov popa (bad) divb push ret js gs mov xchg add mov add das dec jge (bad) lock movsl cmc jecxz cwtl mov sub mov mov sbb int cmp inc mov lock bound (bad) hlt or outsl int3 dec dec adc mov test adc push shll xor pop jne dec hlt std sub rcll lret lcall ljmp ds pop lock fldl xchg fstpt lret add and jmp lds mov jb mov cmpsb jl adc push lret pop jp nop out add xchg or loope ficomp insl lahf cmc or jge sub ss push jmp ret cmp jp icebp adc inc cli aad mov mov and jno mov jl out add push iret testl pop (bad) xor cmp mov jns sbb mov mov insl ja xchg fwait push dec mov mov popf sarl sti pop cwtl adcb (bad) jmp movsl pop stos xchg cmp ljmp mov (bad) (bad) (bad) repnz mov fucomi std lret movsl loopne or sbb sbb jl and push mov les xchg repnz roll scas jb cmpsb es jb pushf xchg out mov scas aaa inc sub pusha imull test push js sbb and (bad) sub aam imul xchg mov les mov jnp cmp jae icebp xchg test inc inc lea fs imul in stos push jns aad push (bad) bound xchg aad cs or jmp xor imul xor enter xor test out pop (bad) jecxz inc dec mov pop movzwl dec and popa popf push adc ljmp in bound pop sub sub subl out and mov daa fwait sub test adc inc pop mov idivl pop in dec push xchg leave cmpsb fmul jb out inc xchg outsl les jp test leave mov int fs mov cltd lea xor clc cmpsl mov mov fmuls sbb stc sub jecxz (bad) fimul push mov adc jg fidiv lahf loop cltd fmul ss pop cmp iret popa jae xchg add (bad) xchg and fmull and pop push enter xor and mov sub mov or mov or das mov xor shlb add push leave fstl shll push inc push std insl xor scas pop lret adc fstpt xor bound add mov repnz fwait hlt mov (bad) push lods shll mov jp mov push jbe hlt pop cmp sbb push mov mov sub pop fnsave outsl push fsubp add mov push das or jno rclb pop push aad repnz out mov inc roll leave jp pushf sub cwtl fwait cmp inc je pusha push lock push xor icebp rcr mov mov dec pop dec add ret cmp sbb popa (bad) lret mov push sub outsb popa bound cmc mov dec fs sti push stc adc ds popf xor ljmp cmp cltd push xor jp and subb leave (bad) stos sub sahf out mov adc mov cmpsl inc or add adc inc loop xor xor mov dec (bad) mov jl jno mov sub iret or cltd fs in push xchg setge icebp inc test xchg movb sbb scas add int sti and xor icebp inc pop test adc js adc adc int mov lods pop mov mov fdivp sub cli xchg xchg int jle inc lcall mov stc inc jbe jl out adc rorb (bad) adc or popa lret mov aam mov addr16 mov sbb insb in adc jno jno inc repnz sub mov leave test enter sub stc aas mov lods cmp rcrb shrb and inc (bad) ss jge mov cli (bad) mov loop,pn xor xchg xchg arpl mov add sub mov into mov cmp push movsl xchg mov xchg bound sbb xchg cmp lods (bad) in ret and sub fstps loopne popf cmpsb jecxz pushf mov shl arpl imul inc mov mov in add and pop inc add dec loopne add outsl xor fimul orl dec in jl inc push cmp stos jge ret jge (bad) rorb xchg sub pop mov dec mov pusha call xchg xor cwtl inc mov leave pop lret lea call and in jo frstor popa sbb pop (bad) sub sub mov mov push xchg xchg fisubrl or icebp inc lret sbb push (bad) out out leave js mov clc sub imul negl pop (bad) jmp inc dec xchg mov bound lret fwait mov fstpt push lock sub cld jns or pop sbbl arpl add mov cmpsl adc or cmpsl or test jne or add icebp cmp jmp add mov mov inc gs loopne push fdivs ret xchg cmp mov or lds xor rdpmc cmc mov cmc mov (bad) jle mov sbb xor cmp mov int jge (bad) fildll leave adc dec sub adc adc (bad) dec add dec outsb ja fstl sub add jae aas jp or (bad) dec ret leave loop,pt fidivrl mov adc out dec leave pop addl cltd js push mov cmp pop imull aas fisub pop jb and add (bad) (bad) inc loopne lods in push outsl cmp stos (bad) ljmp ficom mov sub lods and pop mov xchg repz in fs push mov xchg mov jo aas bound add pop adc aaa loope cmpsl sub nop outsl mov stos clc xchg jp xchg and mov jg sub mov int3 jne test lock inc push cwtl and adc jmp js jbe icebp or inc add lea or cmp pop mov jp pop xchg pusha xchg push sub popa call jb (bad) pop push adc imul mov add std cmc cmc jmp cmp lret popf sarl mov loope push inc adc or jne xor xchg jns mov pushf lock insb out push sub cld dec out jns add xchg mov jo push out enter popa push popf jmp or imul fbstp stos loope push ljmp cld (bad) stos sub inc data16 stos sub (bad) dec xlat in jmp sbb jge (bad) adc data16 add fisttpll cmp push add xor sbb test add (bad) sahf daa fdivrs or (bad) cwtl cli test adc sbb je fldenv (bad) mov pop ja xchg cwtl jae dec ds hlt sti xor loop cwtl push popf inc cs adc cmp fs jecxz jg add in adc bound mov aaa mov adc pop mov jbe cli sub jg inc xor push jno sbb test notl (bad) jne je cmp cmp add dec jmp clc xchg lret bound aad add cmp mov ja dec dec push mov dec mov imul shrb mov xchg mov clc inc sub jecxz or add adc test imul fs ja sti je push lea and xchg adc dec adc cmpsl push enter nop aad bound xchg and push rolb and push es inc adc icebp gs out add sahf xlat lea push add popf outsb sti rolb pop rorb sahf pop out lds out aam jl test push stos ror mov cmp fwait or insb enter cmp daa repnz inc mov movsl inc shrl jno cmp xchg bound dec inc (bad) cli mov mov xchg adc dec and cld push mov (bad) fistpl and fistp in add addl cmpsl mov cltd jns jecxz repz and push push inc add mov add cld add jno int aad in insb sbb in mov sarl (bad) out sub adc mov popf sbb xor jmp imul xor mov cwtl and and fnclex test or mov iret popf hlt mov mov imul jmp test sarb pop adc jecxz xchg cmpsl in hlt adc xchg faddl cld divb mov rcll sub mov pop pop or push adc je jle fldt sbb push mov call fcompl bound or cltd shrb pop ljmp into cmpsl jmp add pop lods movsl fs inc pop icebp fcoml aaa into ret gs mov outsb fisub rcl sub mov fs mov cltd cli mov test dec fxch mov jo sbb cmp push loopne gs pop (bad) sbb mov sbb or loop mov jl lods cmp stc mov xor (bad) mov (bad) mov and out xchg cmpsb arpl mov jmp mov movsb jbe cmp les jae stos cmp fisubrl pop sbb sbb push push ret sub daa jg pop cmpsl inc mov mov cs mov xchg mov dec mov sub sti adc cli out adc insb sbb pmullw test inc or dec repz into cmp cmp movsb xchg mov cli cld pop add cli rcr wbinvd sahf add sub movsl out pop xor dec add sub fndisi(8087 es jae ss into mov adc repnz cmpsb out and cmp pushf cli and xchg sub addr16 dec sbb mov test idivl cs sub test and ret push mov push dec jnp sbb addl iret bnd adc sbb mov out sub popa mov aas and mov mov or cltd sub adc rolb loope adc rclb (bad) leave sahf js int3 push mov fcomps std lret mov jae fstpl sbb in mov pushf (bad) stos add test je mov dec mov pop pop jb pop inc mov push jb icebp fcoml data16 loope or pop in mov stos cld loopne adc cltd sbb dec ret mov and outsb pop test repnz push jmp and sub rcrl cmp dec imul cmp add add or xchg sbb inc adc inc and or xor (bad) lods inc inc or dec arpl enter (bad) inc and les or (bad) hlt aas or push jnp cmp jl aam sub test and jl fdivs and jecxz rclb aas cmp add mov mov xchg sbbb inc pop inc mov add add popf xchg repnz jge in fs add leave xchg shrb js sbb and inc and xchg flds sub in out or lahf out jmp stos sbbl mov clc adc jle mov ret mov jns pop mov mov mov mov mov xor xchg orl stos shll push (bad) mov mov xor fdivrs xchg shr out mov jbe sarb pop fistp fisubl nop xor xchg jl popa adc fisttpll adc stc pop xor fistpl add into fldln2 outsl xchg (bad) ficompl movsb (bad) fstpt xchg pusha inc movsl shll cmp int ret cwtl pusha lea and push lods and pop sub (bad) dec push lret orl cwtl int3 sbb pop mov arpl mov loop pop sti notl push scas inc loopne (bad) in and adc mull xor nop jnp sbb insb sbb aad xchg lods or dec mov adcl (bad) inc xor mov sub sub rcrl xor nop jnp iret sbb xchg pop test and push sbb sub pop dec xor push pop pushf adc inc (bad) mulb xchg sbb xor fdivs add int3 sub sahf pushf incb push push cs fidiv cmp cmp (bad) aaa ss or sub stos push jecxz (bad) icebp int xor pop jl jne xor mov pusha lcall mov push aaa rorl push (bad) sbb arpl repz adc movsl sub fisubrl in jbe pop enter mov in cltd mov enter jo popa adc xor sub insl mov push xor leave insb enter dec mov mov xchg mov mov xorl sbb jns rcrb xchg mov push sub nop test xchg bound pusha push jnp leave jbe mov lret in pop fistp or cmp (bad) mov testb dec xor roll xchg and mov cmpsl repz cmp je mov fcmovb push pop mov lods test xlat and enter loop imul mov and cwtl sub lods push adc dec lcall jl push cmpsb xchg popf jge adc test push cmp fdivrl (bad) mov adc jp mov stos jns cmp push mov insb out je aad mov test insb jp lock hlt push inc push jne sbb or pop clc (bad) je push mov rorb out push lcall xlat dec (bad) in fcoms subb int fbstp jmp xchg mov (bad) pop fisub int3 (bad) (bad) repnz xor inc pop pop mov je or pop mov pop outsl mov popa xchg lock or outsl test push push push jbe daa xor popf cmpsb pusha or sarl ret push inc ds (bad) bnd sbb leave call mov mov dec pop pop out jno outsl mov cltd stc sub mov call divw and xor sti insl mov sarl xchg dec cwtl (bad) idiv (bad) jb pushf add dec or rcrl xor fimull pop insb mov lret mov subb arpl js loope mov les cmpsb dec sub sbb jle sbb cmp incb and dec pop jge lods push pop leave push xor jge fs mov xor add sbb out (bad) add in pop and xor push pop push ds cmp gs cmp sub mov mov dec mov mov mov fisttpll or ja daa popf sub dec mov sbb xchg or mov fwait push dec push stos xchg test addr16 jb jge movsb and cmp jmp or sahf inc in cmp lock cs mov mov call adc jmp jg loope or ss jg jbe cmp (bad) (bad) or int mov xchg (bad) das push pop es mov push xchg (bad) loope mov lret cltd mov inc into mov loopne fwait pop test xchg cmpsl sub (bad) loopne mov out cmpsb addr16 repnz incl gs fldl mov cltd (bad) jecxz movsb jmp mov cmp jns cmc xchg sahf lods in jge sbb adc nop push xor adcl icebp addb loopne (bad) or andl in inc nop lret cmp sub sbb (bad) push xor (bad) cmpl hlt or inc (bad) jno outsl dec push push repz push mov test adc add (bad) (bad) movsl jno cli cwtl mov sarb shr fildll xor ret jne or lds hlt push outsb sub push mov dec mov mov jge and out lods (bad) stc aaa popl dec lret mov xchg sahf jbe es imul adc jnp cmpsb cwtl pop (bad) movsl ret test jb add cmpsb (bad) iret aam lcall stos sub and mov outsb into nop push pop (bad) mov lea jecxz sarl ftst aam and bnd mov (bad) or leave xchg orl jne inc daa (bad) adc sub stos sbb xor stos mov push sbb (bad) das clc ja push xor in push jmp pop dec lret or in fldenv clc imul or test pop sbb dec fldt jp popa cmpsb (bad) cmp fidiv (bad) dec adc xor imulb push enter mov (bad) sub xor ljmp push push dec sbb inc mov jno or jecxz cs loopne shr int3 mov xlat das subl or insl mov dec mov ss pop and jb fdivrs push fucomip pop mov scas mov mov enter call (bad) (bad) in outsl (bad) je lret cmpsb sub adc sbb inc mov stos in icebp dec and dec rol jmp ds and and cmp into inc (bad) int (bad) mov sub ret xchg push xor mov or or inc push xchg arpl adc test lahf cmp add (bad) fmul inc popf cmp cmpsl test test xchg and jo and adc cld push imul sahf sbb out jle cmpl jne js sbb ret adc ret dec mov outsb sbb imul adc nop push sub nop notl mov pop sbb in sbb pop lock mov loopne test test stos (bad) mov xlat lret (bad) jmp (bad) push sbb into sub push push push icebp and fisttp push jno clc push hlt cmp adc xchg push inc jno fwait jo leave icebp or test test (bad) or pop xlat icebp adc mov or ret inc cmpsl dec mov xlat rcrb mov fldcw mov insb pop mov pop lods dec ja test inc pushf mov int bound test jnp cltd fmul xchg lods mov push scas push movsb ljmp adcb aaa pop jl inc xor lods add and ja mov mov lock (bad) mov mov aaa dec outsb push jl leave push dec imul (bad) aaa inc cltd add sub repz xchg push sbb pop into pushf xor inc add push lock xor sbb mov out and enter add ss repnz pop lret mov jmp test jnp inc (bad) das xchg xor sub (bad) cmp aad adc push push xor add movsb mov cmp fsubrl leave jmp xor dec fisubl mov jmp leave cmpsb outsb sub jle adc push rolb fstps and hlt push push les inc mov aam hlt mov add jecxz pusha mov push dec and imull pop into push lea lahf mov daa sub sti nop mov iret je push (bad) out sahf cmp lret fnstcw shrb push fisttpll arpl sub jae inc test in xor inc or fbstp cwtl pop mov push lret stos mov insl aam mov xor inc push jno js sub pop in lcall sub leave xchg xor stc sbb in std js aas out sub cli aad lock pop mov out mov rcl lcall out in jge adc lods and clc mov jae jns adc xor lret rcl push fmuls rcrl aaa leave xor sub sub jo jmp test movsb sub push or xor mov in push outsl push cmp inc mov sub scas inc mov ss pop pop addr16 jne xchg out sbb (bad) fisubr and xchg test out xor and sbb sub inc das mov rcrb push popf mov or popa push xlat pop repnz idivb rcll clc sub sahf out (bad) jns xor into xchg or cmp shlb sbb mov mov xchg mov cwtl jno push xchg xor pop jo fmuls inc imul loopne pushf int3 add rcrl aad mov out pop rcl pop iret jns mov bound mov fisubl fldenv mov and mov cmpsl test test cmpsl or mov or mov and iret sub mov ja cmp sbb sarb dec imul jecxz das jnp jo add mov xchg xchg mov nop movsl cld cwtl hlt int3 cmpsb dec js fisub lods and iret rorl mov jae clc jo and jmp add mov add push pop xlat sub (bad) testb cmp adc js sbbl push ljmp lret lods in or inc ret das bound fsubs jmp sbb insb sbb mov cld pop push adc jl mov jae rcrb (bad) ficom loopne sti mov or xor mov (bad) cwtl jle jmp cmc or fistpll in cltd (bad) or pop sub loope xor inc iret xor mov std movsl mov push jbe mov push inc or inc mov les cltd (bad) xor pop pop imulb or or fidivrl xchg aas gs and shr ficomp int3 in (bad) xlat sbb sbb sub xchg push mov jbe pop out and pop adc leave roll xorb sub mov inc jb push pop lods jmp adc jnp and popf rolb mov and push aas in dec out inc mov and fwait jecxz xor (bad) or sbb and cwtl lret push adc push outsb rcr test xchg daa mov dec jmp inc (bad) mov xor inc ret aam push popf data16 cmp mov je adc clc insl test or roll pop je (bad) ja lret mov or inc mov mov inc and cwtl cmpsl mov pop scas mov mov jge jl (bad) push add jns bound mov mov pop sbb cmp add inc cmpsb cli (bad) xor pop movsb cld xlat insb and xchg push adc not pusha push cmpsl scas push pushf push test fbstp jmp iret iret xor dec fnstsw mov int cmp clc sub sub xlat pusha stos adc pop shrl imul pop inc (bad) jmp mov popf adc push adc sub or gs rcr repz pushf out lea dec popa add test fdivrp lods inc push ds push stos and (bad) push (bad) aaa je stos and aad adc sub mov or push in cld xchg xchg dec rcrl cwtl mov sbb adcb inc icebp push negl out out sbb sub mov cmpsb fstl lret je jmp (bad) or cli rorb push std cs ds lret sub addb mov (bad) cmp add (bad) cld jmp jecxz xchg pushf xchg imul pushf or mov sub and mov sbb sub and ljmp fstp push pop xchg (bad) lcall ljmp dec movsb xchg adc jg iret out lods jmp xchg out dec jnp push and pop call shlb sarb xchg aas setbe les push icebp mov fsubl leave loopne enter cwtl aad jbe jl push ret or or push ret mov add cwtl push cmp add lahf out jl (bad) fldcw jnp es mov outsb mov movsb mov ljmp fmull jle pop mov cli mov aam xchg inc stos lds or sub mov push lar (bad) or je mov ret and add jmp mov (bad) loope loope or add mov scas jo mov int3 push xchg dec pop shr and cmp jnp push enter outsl vcvtps2udq sub int cmpsl int3 daa or out push outsl push mov aas xchg stos mov aas ja mov or mov add inc pop inc push push in (bad) sbb jl add mov add leave or inc (bad) and sbb inc cmpb add sub or mov sahf xchg js mov or rolb out sub repz mov push imul mov out aam idiv (bad) adc movsl sub lods int jmp xorb xor or outsb aas fidivr fwait jp stos dec dec push fdiv push jbe mov fwait fs push adc rcll cli sub shrl dec test xor enter stos idivb mov push mov jecxz mov lods out (bad) and das cwtl cltd (bad) call push adc in xor mov repnz into mov mov movsb data16 ljmp mov repz repz pop ja test scas pop jge push pop jb sbb repnz add add xor sub lret dec fldt aad lods nop xor pop test add adc je pop xchg jo dec add das inc call xchg mov addr16 out mov mov inc pcmpeqb ds xor or and cmp jmp xchg push psraw dec mov into stc add add push xchg add mov push fwait lret fsubrl fmuls icebp pop cmp adc cmp xor jl push out ficom sub dec std clc test aas cwtl mov pop jae cmp scas cmp dec inc cmp sub jp adc into out mov adc lcall test mov shrb inc test inc add mov ficomp inc push test inc out xchg loop push inc jno scas or adc xlat mov nop sbb dec test dec popf dec js pop cld lret popf mov and cmp push ret lret mov mov dec fdivrl mov js cld add aas mov frstor out pop sub pop jge int movsl push outsl out jno mov pmuludq mov je sbb mov mov lods xchg jle xor jno out shr clc test in push inc out inc std stos (bad) mov mov aad repz lahf xlat mov jg mov inc lret mov push mov popa push insb push inc fisubrl adc lds lds mov pushf jbe xchg add dec movsl cmpxchg (bad) or mov pop xchg fdivrs in ljmp (bad) pop scas lock push push ret push fwait inc inc std cwtl das xchg mov sub sub inc popa sbb jae jne push out and xor jl roll pop std cmpsb mov mov test sub push mov adc enter in mov jno andl mul rorl sub mov push movsl outsb dec cmp jmp hlt mov mov lahf adc das subl mov sub movsl cmp fisub je pop (bad) mov mov sub shlb cmp les in sub stos push test jns cpuid stos sbb mov mov sbb xchg jle dec push mov or test test push hlt fnop cld ja out inc adc add sbb cwtl test lea xor push jns or cmp ljmp dec scas shr icebp fsub jbe pop inc xlat mov jmp mov in sub jge ljmp lods out lret adc add movsb cltd out andl pop push imul out mov daa sub lock or movsl add lds ss aas push shl or ja lods lds and and mov jb fsubrp jge or adc (bad) in pop jns outsl daa mov push ja out push jecxz xchg cwtl sub sbb mov imul and or (bad) movsl cmp movsb test push fdiv sbb sbb adc adc inc insb (bad) push insb sub mulb jnp adc jb out das daa xchg and inc roll ror push sti adc dec inc pushw dec sbb add push addr16 fnstcw pop xor aam xchg int and xchg push fcmovne push push pop or ret xor jl sbb mov or cmpsl fcmovnu cmp out xchg setbe sub icebp stos pop popf mov and loop add (bad) dec ret sub push imul data16 pop sar push push in jae ror mov dec pop pop sub arpl insb jg loopne push jae (bad) or test popa push or add jp push xor aas xchg out out packsswb outsb outsl in lahf cli xchg lret pop (bad) mov mov sub fmuls lock jmp and jbe faddl add sub xor mov pop jb mov (bad) rcll lds cs mov sub push push out mov cld bound (bad) and mov cld popf push insl daa popa dec sub dec (bad) fldl mov pop (bad) idivl mov push push pop daa aad mov stos push out arpl inc ja cmp mov int3 mov ret mov es pusha lds jle mov (bad) stos ds sub (bad) jp and jnp inc cmpsb sbb jns imul and pushf (bad) clc fwait ds (bad) es test movb jo ret and cmc mov andl adc sbb mov add lock imul popf les decb sbb pop push jg jnp js cmp jmp push adc adc cmp push fwait xlat push xchg and push xor mov ljmp inc push inc cmp push int3 sbb add inc insl mov lock loope and leave stc mov xchg hlt pop jmp push xor js adc mov fwait adc mov sbb fstps mov fmul xor xor or jp shrl sub xchg lock addr16 pusha ds xchg push clc lods imul add pop xchg pop and push pusha xor stos in rcll das cmp cmc xor push in icebp cs or (bad) daa or scas adc dec adc dec mov jg jae out jne dec movsb and shll and mov sar das sbb fistl xor enter pusha shll sbb adc leave int jl fistpl mov sahf xor dec xor rcll add mov xor mov loope pop sbb and and es repz movsl popa ret outsb add insl arpl int mov fist mov jbe fwait (bad) (bad) imul mov hlt sub lret bound xor in lods fcmovu out loopne xor xchg popf and dec fldl js ror lods jo sar cmp xchg jle pushf cmp int cmp push jmp pusha sbb lea popa iret cmp enter popf mov jg or fldcw pop (bad) test sub jge fldl nop pop test sarb ja (bad) clc mov cmp les mov or add inc jp (bad) mov ficoml arpl pop xlat ss push push and inc in jae int3 add cmp push or jbe push inc cmpsl sti out shl loopne mov push inc mov jg jbe adc (bad) jo pop lahf mov rorb bound adc cmpb cs in xor sub cmp out push rcll mov fwait shrl dec pop lret ja push imul cmp call popa mov rcrl rcll std mov out adcl xor adc sbb dec mov jecxz mov fcoms xchg pusha jbe or lds add in xor cmp aaa fist shr imul ds xchg mov xor mov adc imul (bad) daa and out mov push (bad) rcll movl sub mov or lret inc cmpsl or inc (bad) pop sahf adc das sarl xchg fildl out scas jg (bad) iret or jle xchg out lea pop les jo stc sbb dec sbb hlt xor stc or inc adc adc xchg and mov mov push push idivl mov push aaa clc sti fisubr sbb mov fcom ljmp push pop fdivrs out dec lds outsb adc and adc dec xchg push or iret mov push inc and jno daa repnz rclb adc in mov in test fimul dec add adc add mov push lods sub adc mov xchg adc jp lahf xor cmp les clc stos or mov sbb sbb add sbb sbb push inc xchg jb aaa add lret fcompl push shl out mov push mov xchg cmp call xorb clc mov pusha push mov push fistl add pop add adc inc and add adc les leave loope notl jg data16 sar dec inc cld xchg push jae cld adc imul lret test aad pop dec repz loop lods jp dec sbb incb jae in or mov lds outsl inc loope clc jge lret (bad) aam adc sub pusha lock or jmp aas (bad) insl adc vmovaps cwtd in pop (bad) mov lret movsl mov rolb lahf daa adc ss pop pop adc mov jo in cmpsl adc or add sbb out sahf dec or lock sbb push push ljmp sahf js cltd jns xchg int mov and and cmp mov jl lods and clc xchg test popa jno fdivs andl and (bad) aas sbb xchg mov roll xor sub call xor push cs and or roll or push aam dec lahf push and arpl and shrb adc bound nop movsl cld and jns (bad) dec movsl xchg sti push inc cmpsb out scas adc idivl and mov mov adc push jmp cmovnp repnz sbb (bad) jno mov daa out xchg mov idiv pop fstl xchg mov fsts scas movsb push fwait or add lret addr16 je jbe into ljmp lock fwait cmpsl dec imul inc and lds xor divl (bad) push jno in and cmc sub jge gs pop pop dec cmc lods test pop fs xchg mov lods xlat test subl and add mov scas push push add lods xchg pop sti out loope xor les clc cmc jbe inc xchg pop pusha xchg movsb fcoml jecxz adc or mov mov gs repz fs xchg aam cmp addr16 sbb sbb call mov jp mov pop in mov idivb xor push idivb (bad) lret mov mov sub jmp xchg cltd stos xchg jecxz xchg ja lcall xor push ljmp insl stc fimul dec push sub jbe imul dec mov repnz data16 pop dec test adc stc mov cmc mov aaa mov std outsl mov out decb incl adc inc mov ret adc sbb aam call lret gs jl jg pop lret (bad) addl cmpsl test (bad) hlt mov mov jmp xchg repnz mov push shll sub cld pop mov stos out (bad) in or je es inc add push nop adc add insb stos incb push lea out andb ret xchg xor jno mov in pop add leave rclb cmpsb shll pop push mov jg scas dec jp (bad) dec xlat mov xchg cmp mov movsb push dec dec fnstenv repnz xor mov dec test scas sub in loope or (bad) jo gs pop xsha256 cmpsb adc push (bad) adc into pusha xchg jmp xlat push dec jg loop pop hlt cmp cmp dec adc movsb xor in xor sub ds mov mov add repnz sbb inc or (bad) ja sub and push cmp adc sbb stc mov push push mov push adc and pop test xlat inc pop cmp (bad) fwait cmp fcmovnu jmp cmpsl or test xchg xorl push pop pop and sbb fldt movsb popa fucomi push adc sbb or jns aam push xor pop and out sub inc pop mov imul mov pop mov sub pop int3 inc into push push (bad) into sar test and dec movhps and fs lds inc jecxz cld or movsl lahf clc bound fidivr dec cwtl inc into jnp imul movsb jecxz cld jge lret addb or ret ja jle push lds scas push mov xchg xor add daa repz cmpsb clc outsl mov push cmp push test aam aas push mov jno loopne inc sbb notb lods pop arpl pop adc out sbb lods jmp xchg mov xchg (bad) dec mov cltd sub cmpsb pushf dec mov scas lret (bad) sahf jl insb mov jp dec inc imul add sub int3 into rol mov loop push shrb push testl jae loope loop out add xor ret scas and and xor lods popa arpl mov inc aam gs fcompl push sub mov mov cmpb mov lods or pop idivl decl xchg or push sub (bad) cmp cmc xchg jb outsb or insb scas sahf cmp lea jae rcrb xchg pop cmpl fbld inc mov fs mov repz stc pop and iret mov ljmp daa mov ss nop sbb dec push (bad) mov enter cs movsb sub jno bound mov push xor bound pop or out mov mov dec dec push push sahf cmp jge (bad) xor dec insl dec or jp push ds jne,pn push adc ljmp fnstenv pushf jg cmp sub insb push aad mov (bad) arpl (bad) sbb jb mov dec and lcall (bad) rclb arpl icebp inc and push (bad) mov mov or add dec (bad) sbb mov fcmovu in into jmp js pop push jg int add jle pop mov xchg sbb aas scas loopne sahf jns dec cmp sbb (bad) add rorl popa insl xchg inc into jg inc xor insl inc daa pop test sbb or cmp or test jne pop ds add stos push xor mov daa adc dec daa push jecxz jp faddl inc inc and imul imull jb cmc por pop shlb mov (bad) or mov (bad) adc (bad) fcomp xor adc outsl (bad) out jecxz push inc aas andl jae mov sti add sub mov xchg mov push (bad) sub outsl xchg ss data16 test fcompl repnz cmpsb into bound into jae dec xorb movsb cmp mov sti mov pop pop lea xor pop cmp lds scas fwait bound rcrl addb or and inc jnp loope int adc push ja mov gs aam add and test je (bad) mov jo fist into je jmp push jae jae int3 jg pop lret push sahf jmp add mov mov mov pop fnstsw sahf pop mov and mov pop popa mov sub jp mov or jle xor inc (bad) push (bad) roll add int movsl cmpsb (bad) xor and jns cli ds lahf adc mov dec inc lret popa jle lret leave ss mov dec dec aaa jbe jle in test sub cmpb bound or ljmp mov push pop add ret mov mov mov (bad) iret push mov cmc jnp mov xchg ret lea pop add push (bad) xor push fstps sub push repnz xchg sub dec jmp out pop fisttpl cli sahf incb ja shrb and pop in fdivrl xor pop lock lret test dec and stos pop fs movsb mov std clc inc mov inc adc andb aas lock push jbe pop cmc scas cld (bad) out mov sahf outsb imul test das imul add and jl outsl insb pop mov mov or lds pop aaa jecxz fcom orl lock sub xchg lock jg cmpsl lcall leave scas fildll fist imul adc (bad) nop pop data16 dec pop xor sahf dec xchg je mov dec movsb in addr16 lods imull daa inc jg sub jns aam outsb ljmp stc inc (bad) (bad) lea pop mov mov mov outsl push int mov aas in out mov faddp inc jno dec loop jae inc xlat incb dec xchg cmc fnsave ljmp adc mov jne sbb ficomp xor clc cmp stos loop into pop mov nop ror addr16 push xchg je enter test add cmp repnz pop adc lcall (bad) jb pusha popf daa out loop jge mov mov int3 sbb xchg add add insl pcmpeqd out inc pop loop jbe hlt call pop cld dec push pop xor mov sub xchg mov inc leave test jle int3 pop sbb xchg xchg outsb mov lods xchg push mov xchg aam xchg and enter add mov into repnz bound in sti movsl pop dec arpl fildl lock jnp pushf std adc mov in adc aam stos dec mov cwtl pusha ret addr16 push xchg adc adc pushl xchg test std pop movsl inc dec cmpsl xor adc sub xchg inc inc stc mov add imul jo jmp dec std xor pop push xchg xchg dec lret in sbb fcom dec jecxz inc jno sqrtps jne stc mov pop jl mov pop sub mov pop stc arpl sbb lea sbb nop orl (bad) and xorl and jle inc enter pop stos sbb xchg cmp adc enter out in push or fbld pop add shrl push subl gs imul xor xchg adc aad out push add cmp sub fsts psubb leave jecxz fs push sub addr16 sahf jb in pop sbb pop mov (bad) sbb hlt imul lahf xchg mov clc (bad) xor push or lds std cs adc cmc mov sub out mov inc mov popa popf add fsubrs aad add jge xchg push gs lcall mov ret dec cmp xor test mov mov jae mov mov jbe es (bad) lcall jle decb cmc cld xchg sbb mov in cwtl outsb xor sub add popa mov push mov ja imul (bad) stc mov push or mov aam inc pop aaa fadd mov push stc cld mov dec mov mov push icebp jle test cmp mov insb leave push ret (bad) repz mov or or push dec cmp movsl mov movsb test xor xor sahf (bad) int3 shlb jp mov jg test inc sbb xor fistp les shrl pop fwait adc or scas call inc xor jmp sarb xor jp push xchg push cmp pop in insb (bad) lcall cwtl xchg ror stos mov movsl cmpsb movsb sub pop incl inc xor or mov xchg das faddl ret adc data16 cs (bad) xor mov mov pop cmp (bad) xchg jg add fisttp rcll js mov pop fnstsw mov push data16 adc ret add cs loope xlat xchg lock mov adc cmp or shll (bad) push fidiv jne,pn xchg sbb sbb cltd in test (bad) sbb xor cmpsl cmp test mov (bad) push adc lock jecxz out outsl negl or test or (bad) shlb mov inc aam lods cld loopne (bad) fisub in movsb or subb jnp es mov int3 xor jo jge mov idivb and data16 ret clc pusha jp fdivr xchg fsubs push loope ret nop in fs sbb pop popf clc repnz mov ja aaa cmpsl dec xchg negl in lret jmp xchg scas push mov ss mov and aad (bad) stc inc into into xchg clc (bad) std lcall lods jmp (bad) ret out cli jo ror add sbb jl mov js cmc mov fmull mov push cmp std inc hlt lret jne dec mov aaa mov add (bad) out ss movsl stos or shrl xchg (bad) lcall enter mov aam mov out aaa cmp jmp cmp lahf xor cli std xchg mov jbe cmp or iret or xchg loopne ret faddl ss dec or inc mov xchg xchg fxch cmp jnp enter inc ja les test xorl mov out mov sbb loop mov push stos aam jmp cld dec fucomi sub jb out imul mov jl out clc jbe fcoms xchg xor mov jg aaa push cmp fnstenv xor sbb mov jbe push loop sub es aaa jge repz pushf mov xor inc aam push cs (bad) jp mov push test test mov cmp std adc mov sti mov push adc mov mov xor dec add inc ds or or addl push std dec xor test cld fsubrl insb mov pusha js ja dec adc loop sbb in add pusha iret daa mov mov sbb (bad) stos loop sub pop mov (bad) repz cmp popf in adc xor pop pop in in jnp addl orl ss mov jbe test push stos ficoml mov mov fisttpl shll pop cmp es pushf (bad) aad add pushf pop mov enter es rcrb sub pushf pusha repnz rol fstl and outsl jb adc adc aas xlat push sbb popf inc mov inc add shl lods mov and jle add jne neg out pop jns loope or mov daa push pop inc out test push dec call std icebp insb pop btr lds and loope call cmc sub add dec rcr fidivr jno push les lcall std roll dec test pop inc dec das fstps rcll pushf xchg insb insl add dec mov xchg out int sbb sub pop mov pop sub cmp mov inc push dec jae mov mov enter lahf add or test sbb push xchg or push mov scas jnp in cmp lods mov xor insl rdtsc ret lcall mov cwtl insl add ljmp mov insb adc jle (bad) jnp lahf sbb inc mov data16 sub add xchg repnz aad or mov xchg cmp insl mov cmp xor adc nop icebp push jae movsl mov push fsubrp imul std ljmp and fsubrs add xlat repz adc dec mov ss (bad) jno loope subb shrl add int (bad) mov lret stc hlt pop pop les aaa aam sbb ljmp jl sub lea xchg daa and push add mov movsb cli cmp mov pusha push dec stos xor (bad) icebp xor mov dec ja adc enter pop in inc or in jae mov loop cmp mov xorl adc cs xor add xorl movnti out xchg dec ja sbbb mov addb outsb inc xchg cmp mov jne push out loope pop pop lea fadds cwtl in push mov mov jle das and xchg cli xor ficom cmp stos adc std (bad) cmp cmp mov xchg and dec sbb in dec js push rcll pusha in sbb hlt adc mov fisttpll or (bad) in repz (bad) aam (bad) xlat pop or mov pop xor mov push je or push jmp push sub and (bad) pop pop sub test jp pop push les ret xchg cmp or in js fcoms mov adc sbb loop outsl cld fs or mov mov xchg jb lods xor or lret (bad) lahf push pop xor cmp ja (bad) sub (bad) js push rol and push test xchg orl clc fiadd cmp sub into and xor mov add mov jno add jo fs (bad) xor push xchg out jge out inc out popa adc mov cs sarb inc jmp fdivr mov or jmp lcall mov mov pop push jle adc push push and and mov xor adc pusha cmp or stos ds adc and pop scas std push lods imul sahf movsb cs or push mov mov or out and mov fwait gs je mov dec adc (bad) lods jnp out sbb xrelease fdivrs pop inc ja pop xlat push cmp bnd test icebp int test cmp fisttpll cwtl pop mov test inc cltd clc (bad) (bad) flds pop or clc mov sbb add addb cs xchg repnz mov (bad) push push sub xchg add mov into jne sub xor jle cmp lea mov pop cmp addr16 dec mov das or mov dec and mov inc xor imul xorl push jo cli lcall inc mov sti mov inc fisubl sbbb add shrl test mov stc pop sbb fstps push sbb xchg sub xor xchg and jns push subl cmp sbb xor jns sub cmp mov push inc loope pop jno xchg pop sub aas inc dec dec mov xor pushf adc test (bad) cld pop mov cmp push jle test push add cmp push std js inc sti pop or sub lret push sti clc inc div repz aam loope and dec out (bad) or dec and jb scas add test xor int xor pop mov sbbl fwait mov push (bad) xchg cli xlat sbb dec loopne adc sbb mov and jecxz xor cvtps2pd pop fcoml adc jge cwtl dec inc (bad) fsubrp sbb roll ja test test push (bad) jmp jnp aam cmp out test sti inc cmp xchg bound enter pop mov dec mov ljmp cwtl jo cmp mov repnz mov in xchg dec dec loopne inc data16 adc or xchg outsl jp mov jmp loopne and dec inc out sbb fucomp test test mov (bad) shrd mov mov xlat sbb push lret mov pusha fs js adc push xor and mov nop sbb aam das pop in mov sub aaa mov rolb and mov (bad) loop rolb mov adc cld sub pop (bad) xor xlat ljmp and inc insl roll and fisttp sahf movsb pop test sti fisubrl or ficom jne lods pusha sti jge mov cli sbb jg add leave fucomp insl lahf xchg jmp push push xchg add jno fcompl dec inc rep pop and jb (bad) mov jbe int (bad) fistpl test fnsave aaa inc loop add aam and xor mov dec bound mov lods adc sbb cmp push jmp pop pusha dec sub push and and sub sar and mov push daa lock movntq out aas aam test into add mov arpl (bad) call pop push cltd jno ds jg sbb or popa ljmp xchg add fnsave int push push popa adc (bad) inc sti je mov (bad) adc stos xchg fidivr into inc mov rol in mov jns outsb add jecxz mov enter jbe pop jmp (bad) push mov xor dec jbe fwait test std loop outsb inc addb xchg or loop jns sub inc cwtl in and add adc mov mov insl sub cmpsb sub sub mov ror add (bad) movsb loopne scas push sysenter lds push xor (bad) add aaa pop add shrl or mov dec aad mov inc and inc test into xchg mov adc xchg xchg dec divl push mov cmp jns addr16 sbb inc sub enter dec pop push pop inc sbb push hlt cmpsl sbb iret int3 pop add std xlat and dec int3 inc rol cmpsl sahf xchg add repz sbb xor das cmp fmull addl shrb fbstp out xchg jge jmp inc es sbb jbe cs xor hlt pop (bad) or jp cmp loope or cli pop ret arpl mov insl fldcw ret (bad) sbb sub and repz push ret andl and sbb scas cmp push in mov clc cs popf add fldt ljmp test cwtl adc fistpll negb cmp xor rol xor in pop cmp inc fnstsw addl cwtl stos adc in mov adc pop scas xor and push dec mov lss add push sbb xorps out stos ljmp cmc mov movsl sbb hlt adc cli jge mov stos insb cmp pop jle xlat mov or mov mov jmp sub out mov and xor sbb sub jge testb cli rorl mov fnsave data16 ja ror lds outsb or lods bound sub movsl sbb movsl repz mov das (bad) mov test xchg sub ficoml xlat mov sbb pop mov insb mov mov icebp inc sbb mov in pop mov es pop leave xor popl mov div das lods add (bad) xchg or push mov (bad) sti or scas rorl lret ds add fmuls out subl (bad) xchg adc nop fsubl or es add loop in pop fsubr mov cmp fildl xor adc inc lahf std aad (bad) mov mov push cmp mov cmovnp loop dec (bad) mov jnp sub dec mul mov stos pop icebp lret js nop mov orps (bad) jo cmp arpl inc (bad) xor jne divl ja xor cs mov lock cmpl add lods xor jne pop push std loop jp inc test or shlb mov (bad) jno ja int3 mov pop aad mov repz inc sbb pop fwait (bad) xchg ret mov adcl xor jmp test sub and add aas cli jmp fs mov pop mov sub jle stos popf ljmp cmp cmp adc xchg addr16 pop cwtl xor fs outsb pop insb stos fwait out sub mov mov dec adc add xchg ds jbe pop cmp jnp push mov adc test cwtl xor stos mov push test sahf or ffreep pmulhuw in gs mov or cmp mov (bad) je xchg mov push aam popa add mov (bad) cmpsl (bad) fnop fmul out insl movsb sub cmp fwait sub cmp inc xor repz lcall inc and cli sbb push add clc icebp out xlat loope out loopne cmpsb mov int3 xchg insl hlt daa lcall mov icebp push inc fdivr imul mov mov clc pop flds popf jnp stos js cwtl dec ja mov sub adc dec dec pop jns pop sub mov divb lea nop es lds sbb aas xchg and mov inc sti push (bad) and data16 mov sub cltd insb pop jo mov aad std ljmp popa mov test lock ret mov (bad) mov cld sub adc inc mov jno stos sub in push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret pop out xor xor das out js lahf lea jmp lea jmp dec inc inc xchg xor pop bnd les pop test cmc sub retw loopne stos mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp pop dec xor xor das out js lahf bound lcall dec out adc jg push adc ss mov stos xchg push fild and push mov sarl sti mov adc or repz aaa or push sub pop lret sbb mov ret mov sub cmp jmp fwait add fbld or aad popf and dec shlb add (bad) cmc xchg jecxz test push rol movsb (bad) aam push movsb arpl xor cmpsb test pop cmp mov (bad) rorb ja loopne outsl pushf shrb movsb mov dec outsb shrb lahf inc cld jae or imul loopne xchg xor imull jns outsl push lret cmpsl jl add xor dec aaa cmp mov cmp add jno decl test or pop lods and pop cmp cli sub dec (bad) int pop xor jge mov scas adc xor push cltd arpl pusha (bad) fdivl insl xor pop pop cmpsl (bad) (bad) in out fadds sub data16 cmp pop sbb rorb add jne dec sahf or mov aam cwtl rorl subl jmp sahf mov push cld mov push pop mov pop adc adc int3 mov in sub xor xchg test loop in repnz out aas mov pop popf mov sbb loop sub dec jl push fwait andl mov pop mov enter imul insl out dec cmp mov dec (bad) cmp xchg sbb in ds cmpsl sti add push cmp js mov fbstp sbb fldt es fdivrl je mov stos inc idivb call xor psubusw sbb ja xchg mov jge repnz mov sbb mov insb push mov pop in fstpt (bad) add repz fcmovb inc fsubp mov test orl jl sbb rcr jne fbld pop scas or pop xchg int jo je or adc jb outsl mov push push xchg aam mov std sub call pop iret loop mov jge jp test loopne pop jge lcall test iret lods lds test inc jl dec sar and shrb icebp iret add out jo shll out mov (bad) xchg int3 or ss clc xchg and ljmp in repz push movsb fildll or push and inc in imul int xchg pop outsb mov aaa loopne xor hlt pop sbb outsb je daa pop dec dec andl fcmovbe aam leave xor popf inc mov dec xchg scas add imul or shl add sbb movsb pop ss das shl ret (bad) out lret insl mov stos aas enter stc imulb cld flds push jno popf push fucomip adc and aaa mov xor rorb or xchg add js imul push add (bad) rorl pop aas pop stos (bad) stc mov jae sub sbb sbb stos scas xchg fsubl dec sub pushf insl out mov arpl cmpsl call jmp ss xorl push int fdivs rolb push das orb out jno ds iret out mov addl mov mov test sahf cmp rorl xor and icebp enter push cmpsb inc pop pusha jmp cmc sbb xlat mov nop iret jle xor jae (bad) popf gs rclb sub js (bad) add xchg je sbb jg cmp mov jb pusha inc sbb fiadd sbbl mov pop inc testb lock inc adc and add (bad) repnz xchg adc mov sub inc sub icebp xor push mov daa inc insl jle xchg push push rclb movsb ret pusha shl repz adc pusha jnp sbb stc push sub pusha jmp jmp stc gs stc jo cs scas cld std cmp push sbb insl enter call ret mov mov stos push jl add jno (bad) jns and hlt pop push lods pop dec sbb (bad) mov orb rolb jbe push arpl cmp xor in jmp xchg cmc pop cmp pop mov jnp push inc or xchg sbb test outsb lret or mov pop dec xchg scas (bad) xor rcl sbb cmp fsubrs decl add or dec faddl cmc stc ljmp mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 lods jb cmp sub xor hlt push imul shll pop fdivrs scas mov inc and mov jne push icebp inc sbb add xor add (bad) enter inc std in mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec dec cmp adc in lea ss adc shr xor or push mov mov jne in inc sbb iret inc rcr (bad) pop pop mov out js rorl scas add ret dec das xor jo lock and int3 mov ds in aad push and ss jne bnd inc xchg aad dec in aaa jbe or out daa js pop or fwait add inc idiv inc (bad) je test push cmp pop lea jmp xor lahf sti xor cmp popa mov setae cmpsl clc movsb sub rcll (bad) pusha inc int3 imul mov int3 or pushf mov loope out adc fisttpl call ret shll lods xor lds add test mov sbb cmp jne lcall call aad fidivl daa insl mov pop xchg aas add in mov add push xchg xchg inc aad xor cmp dec xchg or xor out inc pop or xchg js and jbe pushf sub out roll lods mov mov sbb sbb jle cs rcr jg,pt mov or jmp inc rorl push pop fistp push lds into (bad) jne dec call lods in ret mul xor adc mov cli mov xchg jmp aad inc push sbb inc sub push hlt inc aam daa inc adc das and and and xchg in insl es and mov into test sbb iret xchg dec xchg sbb idivl es dec lret imul stos dec cld in mov inc imul sbb jg cmp mov fsubl scas fsubr xchg xor pop mov or mov pop pop addl xchg popa mov sub insl inc sub add push fldl mov push fcmovb stos fisub scas mov rorb jb daa pop iret cmp sti lea adc (bad) sub gs mov int and int add data16 fwait (bad) jb loope xchg stos mov lock adc pushf jge jp notl mov ljmp sti push sbb xchg fmuls hlt out cmpsl cmp stos lidtl xor or or and push cmp out mov fsubrl jns (bad) lock roll mov adc aas lcall xchg repnz in test and inc in imul xor aam mov jne adc mov in mov sbb mov lret or mov (bad) mov (bad) div pop xchg je arpl mov imul dec cmp push push inc movsl leave mov addr16 aam mov sbb mov lcall pop jae push lock out adc and divl xor fstl mov adc in test cs dec hlt adcl sbb lret insb lahf cmp (bad) arpl lahf shrl inc into inc add aaa (bad) add into movsl xor inc sub sub push push data16 inc mov movsl mov ljmp cmpsl fidivl add push inc sub (bad) mov mov add mov test jecxz ret ret mov mov mov js cmp pop mov pop scas cmp inc in cmp mov sbbl cltd fildl es pushf add add rcl lahf orb jae fcmovne aam mov sbb or cmp popl xchg xchg sbb adc adc cmp cmp fidiv mov jmp mov xchg cwtl mov mov adc pop idivl push hlt mov dec adc inc (bad) rorb xlat test cli cmp insb lods mov std pop xchg out test dec stc repz xor mov jb pop jge out mov gs mov jb fisubl test ret mov inc cmpsl daa leave xor push call dec call or (bad) ljmp adc push stos popf mov gs addr16 imul sub sbb in enter mov rolb je push arpl cmp xor in jmp dec int3 jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp dec inc add loopne dec je sub mov add jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 dec inc cmp xor lods adc mov int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 lods sahf insl cmp sub imul dec lods jmp lea jmp lea jmp lea jmp dec inc sub push pop pop repnz jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 pop mov (bad) xor das out js lahf bound cwtl hlt ljmp jno sub push pop outsl lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec inc push xchg mov dec int3 jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp dec inc push xchg adc (bad) jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp dec inc insb xchg shll popf or insb mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 dec inc and pop cli popf inc bound mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec dec inc or adc push sarb jmp int3 int3 int3 int3 int3 lea jmp lea jmp pop cmpsb pop (bad) xor das out js lahf bound lea jmp lea jmp lea jmp lea jmp dec inc jl leave movsl pop repnz jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret dec inc add aam pop test out mov retw loopne stos pop outsl push mov push call add ret push mov push call add ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lods mov add sub imul dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp pop and (bad) xor das out js lahf bound fnstenv or js lods adc adc int3 int3 int3 int3 int3 pop (bad) pop (bad) xor das out js lahf bound mov jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp dec inc nop xchg aam pop repnz rcll and lods adc mov int3 int3 push mov push call add ret pop rcrb (bad) xor das mov insb cmp outsl jns mov jmp dec inc insb xchg fwait or mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp dec dec loopne mov push icebp lea inc mov stos outsb and bts pop jbe push adc test add or cmc imul fcom sub xchg (bad) lods inc (bad) xchg (bad) cmp mov fwait jmp pop mov pop jns (bad) repnz sahf data16 mov inc or rcl xor cmp cmp add (bad) mov aaa scas mov cmpsl mulb inc shr jbe add push hlt jmp (bad) out nop and ss dec add cmpl idiv push jmp rep jmp imul pop ds test mov stos dec xor jp leave inc data16 lahf data16 mov cmp mulb nop aaa js dec sbb jge jg push push repz icebp je pop jg repnz leave inc (bad) mov sub lret jle pop insb jp lock popf in jno cmove std sub lahf in dec sub mov or inc scas test jnp pop jge scas sub push aam sbb stc pop jb adc push pop dec incl lcall je loop dec stos sbb pop mov popa mov pop add push arpl (bad) mov sar sarl add cmpsb pop ss shll call lcall fildll fldt loope xchg mov mov in xchg iret adc adc push adc lock in test jae or das loopne imulb pop pop or pusha cmp addr16 stos icebp mov xor adc and mov pushf sub addr16 cmp into in xchg lock jl jnp push inc (bad) ja (bad) jg addr16 inc or out pop leave jp lret pop mov jnp xchg mov repz mov jle pop pusha cmc stc aad xchg jge inc das mov insl cmp adc addr16 ror push repz add add push inc push ror xchg xlat xor fsubrl pop xor fmul adc ja xchg out popf aad mov sahf (bad) cmp add es popf imul ss adc leave jge popa add xor lahf out repz je jge add or sub adc rcr xor or jae cmc int3 cltd xor pop cltd cmc push lea stos pop xchg mov int ret jns jmp push jge daa sarb jmp insl fs cltd xlat adc js fadds incl es mov sbb nop into cmp rolb push cmp cmp (bad) (bad) imull mov lods mov outsb adc outsb sbb mov ja lret inc xchg inc mov xchg sub addr16 das leave jne xor mov jae and je mov mov test mov xchg fisttp pop mov aad jmp mov imul jecxz inc xorl jb xchg push lock cmp mov ret dec clc or jnp data16 ss cmc and cmpsl mov add test cmpsb out mov push add out mov xchg sbb test ss subb jns jmp dec xchg inc lods and mull add adc xchg (bad) in add cmp and adcl test jb insb dec sbb jg cli lret imul cmpsl push mov jns xor ja xor dec jl je push dec neg pop xchg jbe les fdivs fstl jp sbb cmp das orb adc jno ds out mov addl mov mov xor xor xchg rorl xor jne jecxz es xor cmp test adc mov sub lahf mov cltd xor jbe ret ss leave pop and or test and ret popf mov cmp lahf aas sti sub mov xor lods jo mov aad pop mov je loope dec ss xor mov insl jns leave andb sbb cmp pop mov push aam in fcomi cltd add or dec rcrl mov adcl sti add adcl sub mov and (bad) lea icebp inc dec sbb aaa cmc ljmp icebp pop push loop jb aas addr16 enter call sbb popf sbb cltd dec scas xchg xlat insl lods adc sbb sub sub in enter mov rolb aam cli pop push mov (bad) push cmp xor in jmp xchg cmc cmp or lea lock xchg pop pop movsb xor jnp rcr inc mov loop idivl lfs adc add cmpsb addr16 and aam or jae jle xor out lahf out lea cmp sbb loope jb call aad into inc lcall lock xchg lea push ljmp mov mov out and xchg pop push sub mov cmp or mov inc subl ja (bad) sub jnp cmc hlt inc and les stos test and arpl inc jp or and arpl push in and xchg imul or jg inc (bad) mov add push dec out mov cmp lahf stos aaa and xchg mov lock or push iret push icebp pop sub fsub in js pop xor outsb and std scas and aam adc cmp enter js adc sub xchg inc sbb notb sub mov insl cmp mulb rcrl call popf mov ret mov jp aas xchg push xchg jae mov pusha fwait push std cwtl cmc sub inc das repnz xchg stos popf ffreep mov andb outsl int xor cmpsl push mov jno and or adc mov push js ret inc ret gs and outsb nop pop mov int inc js cmp dec fucomp pushf dec scas jl into loope jbe xchg jmp int iret push data16 or sahf cmp icebp cmp or inc dec fnsave adc or icebp xor push adc cld sbb mov mov xchg fbstp dec or sbb inc (bad) xor loope add jmp lcall jmp or les insb aam daa insb push xor adc insb stc pop xlat (bad) xchg adc dec ljmp cwtl popf mov jmp idivb adc pop std cltd sub xor outsl inc js xor jo scas jge add or adc lret adc sub sub xor cmc xor repz lods outsb imul cld pop push insl orb jbe ds fst mov jmp sub mov fwait mov imul lods adc xchg sub and (bad) test jmp push xor ds mov in adc repnz insl jne aas out adc mov cmpsb jnp inc (bad) xor mov pop das xchg jle lock lahf lods add ss cld les mov jl out lahf (bad) leave or or and aas (bad) mov xor rcrb sbb inc lods jg fildl pushf cmp or lods es movsb (bad) lret xor xchg sbb and cmpsb mov sub mov scas mov push mov add in scas add or ret out sub fbstp iret frstor cmpsl inc and dec lahf jb cmp cmp sub inc (bad) out shlb sbb aad loopne mov out fwait jne dec les mov xor or pop mul dec outsl outsl push (bad) push xchg jle push scas xchg sbb pop mov push divb sub jl fcmovnbe pop ljmp dec decl cmp xchg cmp rorl hlt push jno mov adc or out enter fildl lods dec fwait out test pop dec and cmp sbb sub orb mov push (bad) pop jno test lods aaa jne aas xchg xchg fistp sbb leave push mov adc adc fmull aas sbbl adc (bad) mov dec or dec call sub mov mov aaa (bad) or sti xchg leave pop imul cmp mov ret xchg cmc sbb jns enter mov inc sub mov dec (bad) push scas mov dec (bad) movsl loopne pop push testb mov lds jl dec enter gs xchg les lods sub popf lds gs xchg aaa int3 or (bad) add (bad) sbb insb jmp fwait add pop jo sub aaa sti mov fnstsw shr lods lods sub mov testl push jg pop jmp inc or aad jle xchg jne ret jmp cli gs or in mov call xor inc adc mov cmp mov pop stos (bad) out mov cli mov lcall add scas cmpsl push push inc pushf int3 nop cmp test icebp loope call inc mov pop iret or and aas pop cmp and cmp and leave jmp lret addr16 mulb add lret js aad add jne gs xor sbb arpl movsb or push push arpl adc lds fsubrs xor ficom xor call (bad) mov mov out mov pop add cmpb daa xor aad aaa int add fist jge mov xchg add andl ret imul xchg ja xor lock xor pusha xor or sub loope or int mov fs sbb xor xchg sti push mov int3 inc addr16 mov add sbbl shlb or pop mov fndisi(8087 lahf dec sarl int3 inc (bad) fidivrl mov cmpsb gs jl (bad) popf sbb leave fistpl or push push daa cmp outsl dec insb and sbb dec shrl lret insb mov lea icebp aam jo push lahf mov inc dec ret mov cwtl jg xor imul sub sub sub iret aaa adc mov mov data16 sub cwtl bsr adc or add (bad) push push cmp pushf xor in inc pushf out imul jne into xor inc rcrb imul call fcmovu leave aad lcall and pop jge sbb pop push inc aam jecxz sti pop xchg and cwtd mov push insb les adcl xor and fadd cs sbb stos ss pushf mov push jbe aaa sub push adc imul inc push js jbe mov lods lds xor fldcw (bad) jnp addr16 scas test aas dec stc ret mov dec dec or cmp mov mov call int3 add mov and (bad) mov les pop loope cmp lret in xor cmp lcall and fcmovu ret sti subb std mov ljmp push or test add pushf mov aad and xchg adc es xchg (bad) fnstcw fdivrl and test dec cmp pop push cmc sub cmp pop div sti hlt push cwtl pop jnp cmp push jmp call subl xor loope into pop mov popf pop stos mov pop test lods mov les pop xchg adc sbb pop sbb stos out daa xchg mov pop cmp or add js and fidiv mov js add push bound pop push ret cld push inc mov or mov rol movsb jmp scas adc ljmp test (bad) jno sbb fbld mov into push cmp xchg push pop (bad) (bad) fist test cmp or cmp arpl es arpl dec fld lods ja aaa xchg mulb or in imul iret into push orb sub sti aas adc lods aad inc in mov sbb add stc pop or cmp fsub cld jnp (bad) ds scas sbb lcall rcrl sbbl mov shll jmp shlb mov pop std inc mov cltd dec mov bound xchg movsb pop ja sti xchg hlt xchg xorb lahf sub dec movsl jbe stc push hlt inc fwait call cmp cwtl cmp leave (bad) dec cmp xchg cmp and loopne jne push adc aam je scas jnp imul cmp mov sub add popa push ja and call popa mov pop lods mov jmp cltd gs cltd lds jnp in push mov (bad) les and jnp and repnz and adc inc dec push inc inc sbb lret jno pop mov (bad) rorb ja mov inc sub mov cmp test mov int3 adc xchg inc add out mov js xor xrelease cmpsb adc push cld stos and out sbb push sub das dec jge mov divb outsl mov push fldl adc mov (bad) lods xor xchg xchg push inc push mov add shl sub lods mov movsl popf sub sub mov out xor add push lret test addr16 imul push dec pop cltd add add push cmp rcl add cmc enter sbb sti aaa push xchg pop rorl test jg sti mov pop rcll or cmp adc xor add pop ret dec and push or xor cmp push sbb outsb ss movsb icebp popf inc cld sub jnp hlt or mov fldt dec xor outsl mov mov jmp jae mov mov adc cmp sub lds ret pop or jne clc bound lret sbb into mov mov push cmc cmp lods das dec inc push bound (bad) insl fadd (bad) vphsubwd test mov cmp lods and mov xchg jno push in jge ja loop enter mov sbb jle mov test push dec xor add pop push sbb or js xor cld xor outsl das push ret (bad) push ljmp cmp sub cmp icebp scas rcll push push push lods or xchg cwtl mov sarl dec or push in outsb into or call mov xor (bad) jmp popa gs mov cli loope xchg aaa inc push ss repnz lea and push fidivrl loop sub scas into adc orl gs daa test (bad) int outsb jb ret js in js out jb (bad) rorl fldl js xchg psubd mov repnz xlat lahf negl xor pop imul jge js xchg sbb lret sub push dec sub out and mov xchg mov mov and xchg push xorl loop cmp lcall cmc mov lret sbb cwtl es js dec adc sbb jle adc or pop js hlt divb lods shl vmread cmpsb stos lds jno js out inc es stos push ds int3 mov cmp dec lock dec pop hlt jne cmp jge inc jl xchg xor inc lcall and lea jmp mov lea mov xor call mov jmp dec pop hlt jne cmp jge inc jl (bad) xor inc (bad) pusha dec dec dec mov push and lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or sbb xlat imul movsb mov ja scas xor outsl pop push lea sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or sbb fwait imul shl lret pop mul out dec test rclb xor clc push ret sbb add pushf out mov (bad) lods xchg repnz (bad) or loopne sub xor or push and scas in cwtl in gs mov pop mov mov (bad) divb push and cli sahf dec push adc inc jnp pop ljmp pop ret mov dec add shrb inc iret leave push or mov loope or jmp adc cmp setae sub stc sub (bad) pop in ror push leave lds ret or mov (bad) mov dec pop push mov sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 mov or sbb fwait imul inc cs loop adc xor and cli sbb sub jmp push jp into add repnz xchg pop ret ret les pop sub sbb add dec std xchg or shrb xchg lea lahf add mov and std xchg mov (bad) or jmp mov clc push cmp sub cli loope in add dec inc mov das test xor (bad) cmp in lret fsubl mov inc push lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp sbb or push das std andb pop jp or test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or cs rcr add and inc sbb mov outsl adc sub mov loop dec cmp push xchg int3 or das (bad) mov ret mov das lahf pop fs movsb repz aad pop mov lods or push nop gs or outsb in (bad) loope cld clc jne lods xor and mov xor test (bad) movsb (bad) mov js mov mov inc push push dec sub fcmovnbe les and and jo inc add sbb add and push icebp mov inc sti mov cmpsl xchg je arpl int3 outsb jecxz sbb sub sbb pop add mov ret add mov jns mov adc xchg cwtl fsubrs push xchg ljmp cmpsb out inc lret insl pop mov dec xchg push addr16 shrl mov test (bad) cmp loop jae sub xchg sub popf fcmovbe (bad) fs mov pop lea pop pop call repnz jne fsubrs (bad) mov test (bad) in xchg pop mov dec mov add mov or sub fsubrl cmpsl stos sub sbb fistpll sbb dec sub mov int fistpll dec jo dec dec push lock fadd fadds inc or movsl add push mov push mov adc arpl mov scas sbb cmpsb aad inc popf pop insl (bad) jp rorb out mov or in loope (bad) jmp push nop repz cmp xchg test scas xchg data16 dec and add (bad) jb jecxz sbb lock inc dec adc xchg divl fistpl cltd sub fdiv mov test xor and or sti inc dec out ss mov andb iret imul (bad) cmpsb add jge into inc (bad) popf mov dec pop or nop lock sbb out jnp mov int jg popa outsb and jb inc xor dec imul fisttpll pop jb (bad) je mov xlat ds into xor aam pop sbb adc jge dec fwait mov add push inc loope call xchg pop testb repnz insl jp jae repnz mov repz shll pop jle (bad) xlat adc jae push jl pop fnsave dec inc fsub mov dec fmuls or call stc xchg adc (bad) icebp int3 add test leave xor icebp lock adc add test imul loopne je dec xchg adc rcrl inc out stos clc aaa mov mov dec jnp in int3 mov ficomp mov or fbstp jb add jmp jbe faddp repz jmp push adc mov fidivr jge imul mov jbe xchg ret mov cmp mov movsl leave andb daa mov (bad) sub sub popa loopne mov inc sbb fs flds sbb scas fs fdivr stos bound pop call ficomp xor fdivs sub xchg out xor xchg cmp mov lods paddq inc mov xor repnz in mov test (bad) outsl mov gs jb lcall push xor je sbb inc out push ret jle inc arpl in xchg (bad) cmp mov imul xchg aas pop add insb mov inc out jle jo or movsl jnp,pn push lret inc std mov ret or cmp ret (bad) jmp mov cltd or out jmpw std mov push dec push sbb mov xor sbb dec enter or bound xchg enter dec lea loopne sbb fdivs add jg add adc xor xchg inc pop xor dec test pop jno popf jne loopne inc decl lock cmc out inc jmp cmp sbb cmp xlat push popa adc in pop sbb push xchg icebp adc push scas (bad) test inc std and pop (bad) inc dec pcmpeqw mov pushf add aad push mov mov cld mov jne cmp sbbl js fcmovnb addl (bad) aas sbb xchg (bad) cmc pop mov jb or jbe cli imul fidivl cmp ja outsl inc (bad) repnz xchg pop adc sar lods or fstpl pop int jl pushf inc pop cmp pop add mov and dec ret int3 mov xchg frstor cmp daa mov xchg in pusha sarb push jmp rclb pop lcall lea idivl push pop jmp cmpsl xchg ljmp xchg ss scas icebp loope push cmp sbb mov popa inc sbb mov shr (bad) orb xor call outsl rorb mov push aad nop loopne (bad) loope fidivl mov xchg inc lods sub inc (bad) sub cmp scas and imul (bad) loopne sub sbb xor lods adc es pop and imul call adc jns and push daa scas lret and pop (bad) scas and xchg mov aaa pop ror mov in jle jg dec (bad) mov out push and mov cmp aam push enter cmpsb add dec sub mov and cwtl (bad) mov adc cltd repnz add add stc test mov push lahf and xor test ret dec push mov out (bad) loope fwait push and mov mov mov in in lahf mov sbb mov inc pop pop rorb lret xchg fist lods and sbb xor jnp xchg imull dec cmp xchg nop pop in addb dec bound les (bad) jbe jge fadds jecxz push ret and push sub mov icebp mov addr16 jo outsl mov sub fsubrp enter (bad) cmovnp fiaddl cwtl jmp rol incl lahf in xchg mov pop into neg movsl mov dec imulb xchg pop gs mov dec add ds jb jbe sbb insl popa stos lcall imul out mov out cltd and cltd or fwait adc mov out adc int mov and jge fimull sub imul cli push dec mov push mov adc xor and dec sbb inc adc inc jl idivb adc iret aas dec stos adc mov pop push cmp push mov cmp fadd mov push pop aas (bad) fistp test (bad) fwait pop pop ret mov dec add insl sbb pop push lods push stos push in mov cmp inc xor (bad) shl jnp sbb (bad) ja mov cmp gs fild movsb adc rolb or sarb test loop mov out addr16 pop ds jnp inc xchg lods and mov pop movsb jg jns inc adc pop sbbb jmp inc pop mov imul adc lock pop iret addb push xor cmp push nop aaa mov ja add sub mov mov test out js xchg fcomp push sub loope repnz mov (bad) xor fwait or jl es sbb outsb out lahf xchg push cld cmp mov lcall test loopne into daa sub addr16 sarb lds mov push daa lret aaa xor rcrl mov push mov decl sbb fmull xchg push subl repnz xchg fistpll in and (bad) cmp pop jle in call (bad) lcall inc jl mov (bad) outsb xor aaa xor pushf outsb (bad) sbb aad fwait mov dec dec mov (bad) adcl dec lea jo daa (bad) pop loop ds stos push sar out fs sub loop inc (bad) aad fsubl dec orb dec cs inc int3 aam (bad) dec ds imul pop sti xlat xor jg cli cmp add cli push ds and fist mov and in xchg ret or mov imul mov cs ficom fwait jl jnp xchg (bad) push mov push sub sub add jmp adc ljmp daa call add adc loopne push fcoms sbb pop pop (bad) cmp mov fcmovnb inc inc cmp clc pop movl movsl shr cmpsb addr16 push cmpsb mov push mov pop and xchg or xchg inc (bad) cmp pusha iret ret mov xor jmp xchg out xchg pop xlat (bad) je mov in out shl xchg das mov cmc and cmp sub repz xor fcoms mov fsubrs call mov je popa xlat cmc divl mov repz adc bound cmp push rorb jl push (bad) fsubrs mov pusha bound cs imul xchg dec das dec mov dec and (bad) repnz mov xor mov jge xor or sub loope and lea test mov loop pop (bad) lods loop sub addr16 rolb insb dec inc adc std or mov mov xor out pop jb inc (bad) popf insl pop or jne mov scas pop mov enter push fwait test (bad) jp in les sti fist jmp cmp jns and cmp scas aad shrb cmp adc outsb lods pusha test jnp sub ss xchg jge push cmp adc jge cmp icebp sbb xor hlt inc xchg je or jl sub (bad) xor cmp jge data16 fmuls arpl push lret xchg mov lods mov lods fwait fs in jno jge sbb lds jbe or mov test ss mov jl pop xor adc cwtl bound lods fs sbb lea pop pop xor idivb mov int sub xchg lods repz push aad icebp sbb das aam bound cmpsb dec (bad) mov sbb xchg adc aaa subl dec xchg pushf ds push imul into cmp mov repnz test addr16 and pop and add mov lods jl or xchg iret or aam mov imull xchg (bad) xchg sarb jp xor mov (bad) pop adc into bound jae imul sar jnp jg mov (bad) sub sub inc inc inc push shr popf out mov ja stc add inc sub shrl lock lahf xor fsqrt jne enter sub jg inc mov mov mov rep std std pop mov enter push loope jle out push jns and push mov mov dec gs nop mov mov jno xor cltd push jb xchg rcll jnp clc mov and mov push stc subl pop jmp out sbb dec notl mov mov jmp dec push adc or jle inc lods movsb or rcrl fadd or ljmp std adc sub add es cmpsl sbb (bad) leave sbb iret push lock scas in aad dec int3 jl cs mov fist aaa popl mov popa (bad) dec pop cmp cmp pop and gs imul pop lret inc or sbb cwtl in inc lock dec mov insl (bad) mov gs sub cmpsb sub jmp faddl dec jo (bad) cmc (bad) dec das dec jns and push mov js (bad) push adc in (bad) push mov cmp push lcall push outsb and jle or and stc pop out js (bad) loop inc out jae xor imulb push dec movsl scas push test mov push xor stos add movsb imul fsubrs jecxz cmp outsl dec popf lret jo dec int (bad) in sub pop xchg cmp jmp xor xchg icebp popf jb xchg mov (bad) aaa rcrb push imul push adc pop es lret or pop cmp cmp cmp sub cmp sbbl push insl and lcall push sbb fcompp lcall mov adc or sub loop mov jmp mov ljmp in dec inc shrl cmp bnd ss jmp fwait mov scas dec pop fistpll icebp mov dec sub pop jp jno hlt pop or lret xor push int pop mov pop sbb dec adc mov xchg out out imul (bad) mov add sbb mov jae mov subb fnstsw xchg add sbb push int3 mov stos pushf pop sarl stos outsb jmp lret idivl xchg int3 int3 mov jge (bad) adc lock cmpsl dec popa sbb lcall sbb cmp add daa or sbb outsb fistp jecxz xlat jp push xor cs dec xor xor push out pop adc mov fldenv fsub inc movsb jno mov dec negl xchg jp mov cwtl xor decb int3 push mov xchg cli popf outsl and cmp sub pop outsb or and call dec gs in xor adc lret jmp inc add dec lods andl push insb ds jae jne push cmp je sahf mov inc cmp mov lcall push push repz dec and mov in (bad) aas dec pop push pop xchg pop jp out (bad) imul loopne bound test ret sub nop mov mull stos mov cs or outsb jp movsl out add out xor ljmp dec ret inc sbb js xchg mul adc inc dec das pop and in adc (bad) movl fldenv push testl ret sbb outsl cmp adc inc jae sbb adc pop mov adc rcrl cwtl outsl and into jl inc mov mov adc mov add scas mov xchg or ficomp adc pop mov loopne lds adc es and imul addr16 mov xor mov adc sti jl outsl mov fistl jmp mov insl dec sysenter mov push and xchg push insl add pop jno addl imul push js mov pop test out sub inc pushl mov fldenv test stos and mov inc dec ja,pn loopne mov pop ds lret mov int jl test shl mov js adc push add dec fcoms xor xchg cmp lcall into lods sbb clc jge adc push insl inc lcall push movsl and aas mov pop fiaddl stos mov test jne ljmp pushf fildl push out (bad) cmp mov test sbb xchg dec ss cmc pop sbb or dec jne popf pop dec jg push cwtl shrl imul dec or in (bad) js clc int xorb xor and int3 mov (bad) aas test inc in adc dec xchg or xor add orl ss leave or stos sbb xorl test mov cmc das cltd (bad) iret sub add mov cs sahf jecxz leave andl sbb (bad) xor mov js scas push push xchg (bad) out lods push xchg (bad) (bad) mov rcrl (bad) pop in dec aam or lods mov out dec and fwait cmpsb fs int3 scas leave in fdivr daa test insb bound lret or sbb pop (bad) ja dec inc mov fstps jl aas pop (bad) sti mov cmpsb movsl mov ja test pop ja (bad) orl or and cmp vsubpd outsb push jmp push xor outsl fsubs test xor adc cmp rcl arpl mov push xchg pop adc js dec dec cwtl fisubrl pop imul les test cmpsb inc ss mov adc sub mov sbb clc ret ja sub inc fwait dec wrmsr pop jnp add bound scas add out xchg dec jne sub das cmc mov stos mov lea aam (bad) aad jns fdiv or xor (bad) les test jno imul cmovge and push push pusha mov aam inc adc out out mov mov call and mov xor es loopne inc pop jmp inc adc cltd jo outsb xor roll daa xlat aad lcall pop (bad) lock das (bad) in jle shr mov mov dec in in lea ret sub xchg inc in and fisttp and lahf jg jbe (bad) out xor cltd and adc sahf cmp add int fdivrl dec outsb mov mov xchg xor das adc cmp and sarb or push adc xor addb mov sarb insl das jo inc inc dec add mov dec stos mov subl xchg lds lds lahf lcall push adc sbb pop ret mov adc or push jne cmp in jecxz mov sub sub fbstp ds iret es add aam imul push cmc xor xor sbb js arpl lcall addr16 and sti aam scas jb movsb push shr mov ljmp repz sbb fldcw subl cmpsb xlat cmp push or adc je mov pop push xchg (bad) xor xchg push jg loop push fnsave lock xor jge (bad) fisubr (bad) mov xchg rcr cmpsl sub cmp and push fsubs bound adcl xorl sbb loop sbb sub fildl adc rcr mov (bad) movsl adc in outsl shrb adc adc test mov ds data16 jge shrb js mov mov mov jbe aad mov popa sub (bad) adc cmp xchg add insl js in repnz imul jne ljmp pop sti adc inc add shr sub cmp mov (bad) in jnp cwtl in bound shrl adc sbb dec jbe mov adc sbb sti sub mov dec lahf aad dec loope fild mov imul inc mov cld sbb inc test aad fdivs mov scas mov loop push clc (bad) (bad) mov icebp clc jnp xlat or loop clc pop (bad) sbb aas push adc cld sub inc dec or (bad) or adc fstl test cmpsb jnp dec cmpsl fnop jnp lods cmp mov stos xchg (bad) dec cld aaa mulb fisub mov repz das xor in mov mov pop fisubrl lods pop cmp (bad) ss aaa int xor int3 jle push xor cltd popf js,pn cmc shrb xchg data16 iret pusha mov (bad) or mov or jl fxch test ficoml mov lahf sbb lahf add mov repnz inc int xchg sub cs sub jns mov mov cld sub cwtl negl lret dec mov push push data16 xlat or and mov dec xchg inc cmp sub or sbb lods sbb stos mov inc xor cmpsb and fldenv smsw add jge push arpl cmp push cmpsl pusha mov xor loope jne pop mov mov sub cmpsb mov xchg fs cld int cmp lds repz es or outsl xor pop aaa imul dec aam (bad) repnz aaa mov ljmp fisubrl loop sbb push shll clc mov int3 shrl movsl push fwait mov dec xchg jb in or pop xchg push dec mov (bad) mov xchg std mov mov bound or int3 inc pop mov in es popf jle xor mov shll xchg arpl jno dec stc jp add lcall imul sub push xor addl int call push test jmp push mov ja xchg lret bound pop mov lea das mov mov mov cli jnp ror mov pop xor inc movsb (bad) repnz adc push pop jno push iret xchg push ljmp push dec addr16 rcll les inc fcompl add xchg pop push push jecxz repnz mov mov out mov int3 loopne (bad) push mov mov mov inc dec jle xchg sbb mov xor mov adc push lock or lret ficom sub lods sbb sub jg add adc add inc lret inc mov (bad) sti push xor aaa addr16 or adc pop data16 xor jg sbb testl and test lret bound imul adcl lret xchg addr16 loope mov xchg or mov or or stc leave and stc dec jl pop lcall fldcw adc push mov orl xor fisubr test inc aam mov addr16 and sbb mov in fldl2t jl and inc or sti scas sahf cmp aas daa pop mov mov out fisubl and addr16 push or cmp adc push je and arpl jbe loope push inc pop or jp xlat fistp nop lahf push cltd cli ficoml arpl jo ficom loopne push xlat ljmp cwtl in sub sarb test cmp jmp dec in inc (bad) mov mov pushf sbb xchg in mov aas cmpsl push jb int dec dec int3 pop cmp jae add xchg mov into ja imul in xchg scas cs dec mov jmp mov pop jno mov mov (bad) push out ret sbb cmpsl mov in lahf pop push inc mov shr imul jae arpl xchg fnstsw mov sub ds into inc mov sub pop in outsl (bad) dec pop repnz pop rcrl push dec mov ret sahf (bad) cs orl push jns (bad) dec aam das adc mov std xchg xchg push outsl mov mov sub rclb flds push popa or sub pop pop adc (bad) jno adc pop or xchg icebp out pop ds adc in lcall mov push (bad) sbb mov outsb cltd jno fsubs push cwtl leave xchg inc xor push xor insl push int3 cwtl pop add sbb xor insl popf mov cmp jo pop aam mov push pop pop and out mov pop dec test ret push mov cmpsl mov pop test insb fwait scas add jl jg vpsllq (bad) out lock icebp push xor out mov es stos push mov push jp sub test js hlt pop ret add outsb mov sbb inc xor xchg and repnz imulb dec popf mov dec sub movsb int (bad) jno pop and jmp mov std test dec jp sti add and (bad) inc bound inc cwtl dec jge pop or inc stos adc ljmp mov imul movsb fstpl sahf jmp cmp leave nop popa push call push fwait lds mov cli stc jnp decb mov xchg and dec or mov jecxz sub (bad) js cmp cs cmpl dec aad jg mov call repnz and and push xlat mov (bad) push pop ret and fld xor adc test jl scas dec push hlt int push ss pop sarl inc loopne data16 xor adc outsb push pop jae or jnp cmpsb sbb stc add outsb adc ficomp in in test xchg mov or xor mov dec ja pop add cmp mov int sbb push push xchg test or bound push mov cmp cmpsb ficoml fsubrp std orl in loopne mov mov data16 icebp sbb mov mov addb jnp dec call bound jecxz push mov call or and cld and iret test insl lds sbb jns add movsb ja fnstenv cld fisttp out (bad) ss mov cmp pop ds pushf enter cs mov hlt punpcklbw jmp aad test mov clc sbb arpl push xchg xchg (bad) sbbl dec cmc push inc scas or jnp repz addl lcall mov je mov jb orl fisub mov pop adc mov and push pop inc cmp mov or mov dec sub cmp ret or loop outsl mov push je ds (bad) mov outsb inc lock push xor dec fild adc shll and xchg cmp xor aam push in out cmc sbb dec (bad) aas out xchg and outsl ds xor (bad) or or jb mov push test loop push rclb icebp mov mov into jbe mov out mov sub jae dec xor clc push mov push mov mov scas jge movsl inc arpl pop cmpl push sbb dec leave xchg sbb iret jae or push idivl gs fcmovne cmp xor ror data16 icebp cli les jg sub sbb fwait xchg outsb cmp xor lahf sub adc data16 (bad) mov and fidivrl xor lcall jmp push test push xor inc push jle jne faddl imul cmpsb pop idivl into stc dec hlt enter fdivs jge dec (bad) das or arpl fild push sub in (bad) dec adc inc cmp and or pushf int3 and iret fstps shlb xor xor xchg das inc pop data16 mov out mov (bad) flds daa jbe push sahf outsl pop cmp data16 pop bound inc mov push inc in dec push push nop out or and mov das push jg shl in js (bad) out cmp movsb inc pop xchg lea int3 stos sbb and inc xchg xorb mov dec insl dec mov jb jg lods dec or cmp sub addr16 push pop test cmpsl mov and mov loopne adc push fsub test inc push adc mov cmp xchg (bad) fcmove xchg push gs into lock fidivl pushf xchg push subl movsl cmp or cmpsb adc sub shll std mov xchg xor or arpl repnz or ja lods push stos pop sbb mov insb or push adc (bad) mov loope out dec inc adc out stos xchg pushf (bad) cmp iret ret (bad) or xorl cmpsb cltd addr16 add jno int into fcomps mov loope xchg fnop pop and add xor cmp pushl push cmp pusha scas mov loope mov push cmpsl mov cld neg daa ljmp mov jmp scas dec push cmp xor test imull ljmp and es repz or push out or inc roll add xchg mov lcall pusha cld mov aas dec mov insl jns push sti sti xor ds sti aam imul lock lret mov sbb ja jns cmp (bad) mov inc test mov out push nop imul dec addb iret sti fistpl jne arpl inc ljmp dec loop or or dec mov lods add scas inc in or leave and (bad) lods xchg inc and cmp push sub jp inc adc push stc ret es test sbb jg sub push lds add sbb jp (bad) outsl pop in inc push imul xchg push aam movsl cmp mov insl inc (bad) je push or ss in aam add popa sub cmp jmp sub push cmc (bad) mov pop push aad ljmp test mov cmc loop subl test xchg (bad) jno repz lcall mov call mov ret jb aas mov and xor adc insl cmp jne push inc add sbb xor test adc aaa in dec imul pop repnz push imul pushf mov add test lea cmpsl fucomi inc insl jecxz les bound sub add (bad) jnp mov mov (bad) gs sahf les sti dec cld scas cmc mov insb ljmp in out arpl iret lret insl pusha ja fdivl jnp inc out lahf insl aad rolb adc lock xchg sti loope es jo sarl repz mov sbbl clc loopne clc aad pop add lods (bad) enter cmpsb insl adc test xlat add or jno,pn mov cltd data16 xlat insl lock sbb gs add jae lds out ret lret xchg das mov js push test and repz arpl adc push push dec adc (bad) cli iret jb sbb pop mov (bad) sarl sbb inc out nop lcall sub inc or push fmull add xchg fcmovu mov adc gs xor repz outsl xchg push push adc test mov jae mov pop cmpsl or pop sbb js (bad) jge mov int3 dec dec mov (bad) fcoml into adc out and xor fwait cld inc jns inc stos xchg (bad) adc mov (bad) jb sti cmc negl jg cltd stos vmovsd das sbb mov es inc mov addr16 loope mov icebp cwtl or adc pop and dec int3 jae adc iret add mov add mov out mov xor or fnstsw mov push test push mov mov adc inc mov jecxz mov pop push in jbe leave stos jno xor push jmp cmp and std outsb xchg jp mov daa out push leave or in sub in pop pop jl jp xchg clc sub ret fldcw out push or scas lock sbb jbe aas xchg pop aam divl rcrb in mov (bad) lods shll sub xchg lods out push push sbb sbb lahf and clc or scas mov int3 push icebp gs mov enter pop leave cmc mov (bad) into inc pop das sbb ror inc jecxz pop mov pop adc loop (bad) fwait xlat (bad) xor dec mov inc int3 xchg push repz stc fistl xor lods sbb test outsb sub inc and loope ds sahf jne cmpsb pushf fmuls notb pusha mov pop imul adc cmc fidivrl mov lods iret sub xchg sahf pop (bad) ficom call jmp decl push test sub push sub and lock shll adc std test cmp cmp add add hlt cmp add sbb adc jmp imul inc or inc mov int loope (bad) jle jmp mov movsb in jmp dec fcomip cwtl in pushf stos jo cltd stos push (bad) rorl cmp clc mov ss dec aas xlat inc cmp js add (bad) jmp xchg in enter push or push test int3 cmpsl sbb mov repnz cmp cmp xchg ljmp sbb clc mov arpl and and (bad) vcvtsi2sdl mov ret adc dec pop insb or lea push mov ljmp mov lahf jno (bad) pop in nop (bad) cmp test or repnz nop xchg adc mov (bad) fistpl dec loope add mov lea aas xchg jb cmp xchg cmp push xchg std stc (bad) dec and dec hlt lret mov cmp jge sbb xchg es (bad) aaa lret or mov int outsb lahf mov outsl dec mov scas jecxz leave sbbl decb xchg xor movsl jge inc push pop or lcall mov inc sbb cmpsb inc adc clc push push jne out push repnz mov sarb psubd repnz add lret lret inc mov (bad) in (bad) pop mov push push es outsl cwtl xlat mov test mov jbe push mov adc lock sbb jmp rep xchg adc test rcl sti (bad) (bad) sub mov xchg xor in lea push gs lods arpl loope pop dec addr16 enter adc and push xor dec fisttpl mov imul xchg jmp sbbl mov xchg add mov cld and mov fwait xchg mov aad inc push test in adc jg cs mov cmp lods repnz sub fildll pop repz ljmp outsl js push int3 dec test mov cs xchg fdivl call icebp inc shrl pop jne sub aas leave jne mov les and or sbb fwait lock add mov and inc mov cmp add mov shr cmp iret clc inc lret xchg popa xchg (bad) lods mov icebp dec sbbl cmc xor pop fdivs add sub frstor test jnp xchg dec js xchg (bad) (bad) ljmp xor jns xchg aaa imul xchg cli or xor (bad) fcmove test hlt gs fisubrl das bound push jnp or push aas xchg ja jg or cltd mov or dec xchg nop fisubl mov cli mov sub fnsave inc sbb cmp insb movsl mov mov incb mov ficomp adc push test repz pusha cli mov out sbb lcall cmp out pop push push rcrl aad ljmp mov mov sahf inc or sbb cmpsl dec cli sbb iret (bad) xchg pop xor xchg loope or out xchg (bad) popf pop push ret inc aas and adc andb push pop jo sti pop xchg jb lds fdivr (bad) (bad) into and and in and mov mov insl or jno dec out pop mov pop inc popa ret push pop jmp mov mov mov mov cmpsl dec jmp (bad) lret add test jmp dec jecxz hlt mov mov sarl (bad) gs and shlb cmp lea pop inc dec pandn xchg add cwtl outsb mov fmull cmp adc fnop int3 jb (bad) lods aad xchg inc sbb or xor jmp jno and mov jle add loopne lds xchg mov cwtl out jp fmull sub rcrb (bad) jmp sbb mov call out enter mov lcall push addr16 and mov clc out roll (bad) (bad) mov or add pushf xchg jmp mov shr push daa jne xchg cwtl movsl lret leave clc cmpsl ss push cwtl jne mov mov outsb imul hlt xor sbb and push (bad) es jns test bound inc (bad) push (bad) cmpsl mov sbb decl movsl xchg dec clc jb jnp or shl push mov lcall das fldl xchg xor ja sub repnz mov and mov stc push push jge add out outsl ret (bad) mov mov push inc mov mov frstor inc loopne or cmc push iret pop mov xchg je add push loope stos lods stos test rcrb or mov mov adc sbb pop stc and or jnp jl sti rclb or (bad) loopne clc lahf mov cltd mov push mov std mov dec (bad) jp scas fisttpl inc xchg xchg fnstcw sbb push hlt jge orl mov enter stos lds add mov sub (bad) lods (bad) or mov les cmp add jg (bad) movsl loop push or fwait lds enter or daa insl (bad) out sbb popf push imul mov pop scas adc mov xchg mov das cmp lods or jge fisttpl aaa xchg repnz adc loopne jo movsl movsl aam mov mov in inc rolb inc jae ror jbe jnp inc gs add dec aaa movl xor gs sub mov scas cmp ret inc sub rolb push pop or and mov mov jecxz movsl fisub out divl lret ss xchg and clc mov (bad) mov xor xor mov xchg pushf ljmp mov adc mov fdivr xor mov add fcompl negl jge outsb add adc xchg jle sarl popf push sahf sti mov xchg pop test loope leave pop push lcall ror in aaa mov fmull push sub imul sub stos sbb add (bad) add movsl test dec jg push fsubl lcall lods sub aam pusha sbb xchg or jg jg push (bad) fnsave sbb sbb add dec and jge lret movl out xchg xor iret cmp lret adc mov addr16 xor mov sbb mov fcmovne ja imul fs xor imulb rol pop (bad) (bad) pop outsb jb xlat popf dec xchg xor xor adc adc pop rcr out ds data16 mov sbb xchg int3 fsts jecxz,pn xchg lods int3 (bad) fild push cmp pusha ljmp aam les mov or mov repnz xchg mov das sti mov rcl popa aas pop push jns mov stc clc mov imul pusha xor add stos jmp cmp ja rcl test mov mov and fmull sbb imul jbe imul or pop andb out add or jmp out fdivs mov fildl mov ja nop pusha es jl shlb ja jg adc push jge test jmp loope lods stc aam scas or scas sub mov push lea and cmp adcl enter repz outsb xchg xchg dec sub push push (bad) adc push icebp sub (bad) (bad) fistpll mov mov in cmpsl pop sub std sub mov ficom scas mov and call dec stos into add pop lahf xor add lret jno repnz loopne fild inc imul aaa gs aad inc mov ljmp test mov cmp (bad) xor jbe push sub hlt sbb pusha mov jge pop clc cmp xchg jle add iret in aas clc cmpsb dec clc fdivrp sub into xchg xchg pop ljmp xchg cmpsl insb call fdivrp mov scas fisub outsb xchg inc faddp rcll add (bad) into xlat inc add (bad) aad add push and repnz test cmovp cs jae mov lds xchg mov jns (bad) popa je notl jmp add mov loopne in scas mulb int std shr nop jae adc mov lret push popf inc xchg es stos rcll adc movsl sbb loopne das movsb cmp and pop add add push cwtl cmpsb or mov rclb sbbb mov jmp out jb test jecxz enter sbb or lods inc stos mov aam and sbb dec inc add je in mov scas xor ja outsb arpl sbb cwtl cmp imul mov push aam call jmp vpor scas test out fwait jno and or mov stos sub mov adc sub jne imul sub add push out cli push xchg stc add jle xchg and stos dec add inc sahf lods mov xchg fs daa cli dec adc cwtl and lds mov stos inc mov mov sub inc mov std inc cmc mov clc mov sub jo loope or sub adc fnsave addr16 outsb (bad) cmp or stc and out mov les add push popf jge mov mov (bad) sub int std orl inc fmull and in stos test js nop inc and adc cmp fwait dec xchg aas jle inc cs pop add js add shrl xchg push mov popa test iret imul mov xor xchg (bad) sbb xchg pusha pop les pop test (bad) mov cli daa push mov cmc add mov out mov sbb negb mov pop in mov rol mov lcall mov sbb sbb cs dec loop pop mov pop sbb mov aaa and jmp xchg jecxz ret inc adc cmp out dec mov push add ret add pusha adc xor push jne jae rcrb sbb mov cmp jge push (bad) aam sbb addb or push pop xchg lods inc adc mov ja xor rcrb push xchg or sub jl test mov cwtl or sub les insb stos in push psrad xchg dec mov popa gs push scas jmp ret inc fiadd test or je dec add fidivl pushf in cltd sub sub add mov and mov stc dec subl sub into pop fldl2t adc test pop xchg mov push roll fcomp lcall mov (bad) das push cwtl test cmpsb jle push push mov cmp jge push sbb cmc mov cmp fmull dec pop dec mov outsl icebp xor rcrb push push lds std sti das xchg stos xchg xor clc sbb mov adc cmp (bad) jo push jb enter or cmpl movl sbb push mov xor fild insb push sarb mov push xor push pop jmp jg inc pop js adc ret fcmovnbe mov outsl xchg push repz sub pusha insb mov pop aad xor fwait lea shrl push mov daa imulb ret xor sub mov cmp mov push jbe jg les iret inc outsl pop jg in adc fldl in daa xor aam popf mov gs arpl int or and repz loop pop fiadd jo movsl rorb sahf arpl rcrl orl inc ficompl pusha push mov pop push insl cmp scas cmp jle rcl test mov pusha jle inc mov sub xchg or mov pop scas dec aad outsb pop adc test xor sbb add xchg add into or add fistl cltd cmp jmp int (bad) repz jbe scas clc sub dec mov jl mov mov and sbb cmpsb lcall fwait mov pop jp mov scas fs inc rep in lds cli xorb jge sub xor out cmp lret cld push fs dec pusha dec sub mov loop cltd push mov xchg sub int dec arpl push ret cmpsl dec sub outsl stc add mov out inc repnz mov in or inc (bad) (bad) push mov pop mov sti jo or pusha (bad) adc mov lea ja push in cmp cwtl sahf mov sub sarb or es lds jns xchg mov xchg push xchg in dec jmp scas inc inc ja aam test sbb pop (bad) repz cmp mov mov push xor dec int sbb fwait push (bad) std bnd mov xchg ja div pop ret je fistp in movl leave xchg xor mov popa jb push imul push cli push fimull sbb push addr16 xchg mov mov mov ffree xchg lods icebp fdivrs jne and pop js mov notl out aad out fs or aam scas sar pop es ljmp sbb rorl dec push into sub movsl inc sbb (bad) in inc and stos push in js cpuid mov xchg iret adc adc jb out arpl mov adc cmp push and or add push fsubrl jmp cltd jae test xchg add ds push sbb (bad) mov add add cld or test icebp mov aaa or or movsl mov mov adc push rol sbb lcall push inc inc popl push cmp (bad) aaa pop and enter xchg out pop out addr16 cmpsl lcall ja (bad) mov inc cltd and mov xchg (bad) pop daa inc (bad) or sub imul mov sbb cmp insl flds sbbl dec lods cmpsl push lds xchg out dec sbb cmc adc pop aam xor push sbb scas int3 sub xor or loop mov mov mov mov jno jp and adc and hlt pop inc outsb and test ss mov mov xor outsl incl fcmovb inc mov mov in repnz rolb xor lcall cltd jbe and pop mov xor mov cs test jge fnstsw mov add rcr sarb and sub out pop push adc pop test pop sub shl mov das (bad) sbb push xchg hlt insb pop dec lahf insb jbe scas addr16 sbb dec loopne push out dec lahf inc (bad) ds mov pop jbe int int3 mov popf js (bad) repz mov sbb or pop cmp sbb xor int3 inc xchg int test insl (bad) popa lret dec sub (bad) outsl pop xor jge or push jno jecxz inc (bad) mov test mov movsb jle pop psubd inc lods mov (bad) pop xor stos pushf into std jecxz ss fdivp (bad) and movb mov and jo out or xchg adc fldl fdiv (bad) jb inc fmuls add cmp jne fucomi repz arpl jb sub nop jno pop mov fldcw push int3 xor jle mov cmp fsubrl and sbb pop call mov fsubs les mov aad ljmp and es xchg rorb fisubl xlat dec sub js in dec mov insl test mov hlt shrl pop mov lods sbb cltd insl pop dec and push xor xchg push loopne adc cld dec cmc ret adc into das sub and xchg aam inc in fild sub and out subl lret mov sbb icebp adc (bad) movsb adc (bad) and das push sub enter std cmp sbb and (bad) mov sbb cs cwtl dec xchg mov jp push pop std cli dec mov stos xchg ss or dec cltd xor sbb fxtract dec lea fs cs pop lds mov dec out in pusha je dec dec push fwait pop xchg test xorl mov inc clc inc fistl and lea xor out inc xchg xchg adc cli mov push and fcmovnb dec pushf xchg xchg lods jno xchg jmp (bad) push xor jmp (bad) inc and ret ss xchg xor mov pop adc icebp jmp adc in jb xchg sub addl insl xor iret scas scas mov (bad) aas sbb pop in jle xchg or subl into mov push mov adc into cmpsb adc ss addr16 jl xchg jno jnp leave jbe pop (bad) fnstcw inc ljmp shlb das insb (bad) in mov (bad) add dec cmp add data16 mov scas and pop (bad) mov or xchg or xchg add push add jnp sarl push cmp sbb shlb movsl mov inc jne mov adc mov sbb push mov jp dec add sub mov mov (bad) pop jb std add cmpsb cli mov mov sti cmpsb xchg pop iret push imul cmp ds adc cmp and scas mov jae rol dec sbb pop fildl push xchg cwtl jno out cli scas mov pop pushf cmpsb aam and cmpsl out jnp xor push push ljmp cmp aam mov mov xor xchg push inc fcmovu int3 imul jns test or xor mov sbb lret lea in sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 mov or mov xlat jne mov push insl fidivr imul adc and sbb push dec test and xchg jbe js scas mov (bad) out js rorl in add sub das adc or xchg push (bad) xor push gs mov xchg cvttps2pi dec mov inc jp lods pop hlt clc test or push add jp jecxz mov sbb pminub shll mov pop jp push jnp mov xchg roll push pop xchg in icebp leave lret sbb jmp mov sbb pop orl out add jecxz ljmp xor mov ret sbb insb outsb push clc (bad) mov (bad) lock int3 mov push icebp outsl or cmp lock sub cmp push and mov xchg (bad) lock pop mov inc enter repnz mov addr16 ss cltd xchg mov push sar pop inc cmpsb cld mov out inc sti je adcl test mov jb popa cs add clc add es aaa mov dec sti sbb imul fiaddl or aaa and xor xor into add data16 lods sub lcall popa push inc mov das js jb or sub pop stc inc fiadd (bad) roll scas jge xchg jno mov sbb arpl cltd insb rcl jb mov add out jmp xlat push inc mov jns jl fdivrs inc out jns xchg or cmp test mov mov pop or mov cmp xchg and das mov sbb sub fsubs daa jae add or fsubrs clc bound pop cli xor ja cltd leave adc rclb add sar mov xor sbb outsb dec mov sbb dec das jnp xor dec mov rolb jmp add jae aam enter xor mov mov pushf pop les cmp adc insl pop add or lods test (bad) jno or xchg (bad) lahf fdivs test bswap cwtl lret pop jp sti (bad) sub xlat pop xchg xchg inc pop jns std push jno data16 adcb out pop lds repz mov xchg xchg mov daa sub test mov add scas add lods test pop adc cmpsb imul cltd adc xorl scas arpl dec cltd add jne xchg adc mov clc (bad) jo cmpl pop dec pop leave out jmp and jns adc and outsb cmp dec lods jle outsl sbb sbb pop lahf push stc outsl pop xor dec mov jmp (bad) xor shll in cmpsl inc stos in xchg test xor testl adc push mov sti or mov xor sub gs push pusha ja xor and xor push lcall inc jo xor test andl add sbb iret ret psllq adc aad add xor mov test fs andb iret in jle jmp rolb mov arpl pop dec aam inc fidivr sbb cs stos ds xchg mov push clc mov mov and out mov pushf and test mov ret pusha (bad) and push jg mov xor mov mov cmp bound aad sbb xlat repz xchg push (bad) pop push adc shll jle dec test sbb loop jns mov and call xor into inc out out pop fnsetpm(287 add mov rcll rol mov sub cmp or or mov mov sub rcll mov inc pop cltd dec sahf xor mov cmp outsb pop mov pop inc rcl outsb inc lds mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 