push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss jno test inc cwtl cmpsl add and push icebp sub inc outsb xchg xor jbe xor dec fldenv xchg addr16 ja aam nop ja ret adc push sub jmp fcoml fwait adc fs inc mov pop mov loopne icebp xchg lret xor push out rcl loopne movsb inc pop xchg adc add add pushf sub cltd push cmp insb sbb lock icebp push fbld mov inc cmp mov inc loopne (bad) push inc lahf inc xor data16 mov cmpl out outsl in das dec push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss (bad) push xchg pop pop lods inc jp enter repz mov dec xchg fild xor jbe lds shl or add call xchg mov jo push stc fdivl adc cmp jno add add cmpsl and jo adc mov aam (bad) mov inc lea popa out (bad) popf sbb pop sbb fadd pop ret (bad) inc xlat fwait cmp bound fs insb sbb cltd xor lds stc adc or outsb mov loope les xor mov imull mov in stos cmp out daa aad les lret pop gs xchg pop xor or lds jo imul test inc inc mov insb ret (bad) mov mov sbb ss and fidivr fiaddl ja and push ret jns add rorb setb cmp stc aad and test call in push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 and ss (bad) jmp xchg pop pop lods inc jp enter repz mov dec xchg fist xor jbe sub sub inc mov adc fstpl mov outsl cmp adc fstpt mov mov and jl jae lock dec pop rorl call iret imul dec mov ret jns pushf sahf mov push in imul data16 adc movsb gs cmp stos cli jmp xor xchg mov aas push dec sbb cmpl inc lahf inc xor push les mov out fcomps fcmovne xor hlt sub inc cmp jbe (bad) iret lahf and out sbb xchg rcll (bad) inc inc icebp daa pop fnsave xchg mov fldcw sbb mov mulb xchg iret xor mov jge fs mov sbb lahf sbb sbb pop xchg movsb sahf test mov fdivrp test push ljmp mov aas add out rcrl stos cmp stos in notb das mov dec xor in mov (bad) cmp and aam ss insb call lods inc icebp imul mov push mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss test les dec push add je push inc test movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl icebp popa jno cmp loopne aam pop cmp adc aam dec push add jl hlt ljmp xor or cld pop imul mov (bad) cmp adc mov movsl rcl jno repz (bad) adc lea fiaddl push insb mov add push adc dec mov sahf fisttp shrl ja mov fs insb loop jbe lret mov mov jnp in repnz dec pop shll jne pop mov flds mov mov test or and insb inc pop rorb loop sbbb mov jmp (bad) stos inc stc daa popa in xchg sub pop stos arpl fidivrl pop icebp iret mov xor sahf mov (bad) in mov test scas pusha adc mov xchg xlat add fidiv or and xchg cld mov cmpl mov jno jbe into in xchg or mov fldenv test arpl pop pop sahf fwait lods sub movb push ret (bad) pop xlat xor ds mov data16 popa sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss jno test dec cwtl cmpsl add push dec mov cmc xor movsl cli xchg leave out stc pop cmp or mov jp enter mull adcl mov ficom in push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 and outsl aam aaa aad pop lods mov bound pop push lock dec mov jbe movsb xchg lds rcrb popf mov add pop cmp in push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss jno test dec cwtl cmpsl add push dec mov cmc or mov outsb or inc cmp cmp push mov dec fdivl aaa xchg xchg push jb cmp mov lock push aam sbb pop mov mov fbstp mov and mov dec fiaddl arpl sub jno fistpll and test ds jne fucomip sbb (bad) leave insl test xlat test hlt mov jl or imul fwait pop fprem cmpsb fwait mov dec xchg sub mov scas (bad) movsb out dec call push push or pop push inc sbb addr16 jecxz inc test in sub and xchg repnz (bad) push dec mov xchg sub repnz out in mov mov mov and cmp xor in bswap cli cmp lahf mov lods inc fimul and jnp ja mov cli or cmp fmul out lret jnp cmp inc rcl pop (bad) fneni(8087 call adc sbb nop clc jae (bad) fistpl rcrl je andl pop jb add lret (bad) pop xchg add cmp dec loopne pop sub in lds dec icebp push shrb pop cmp daa and jl push fiadd movsb sbb test (bad) (bad) xor jne jns add xor pop dec mov cltd mov fisttp jno jns push nop inc xor sub mov ja into push shl insl add in inc ljmp sbb dec addb and dec scas inc std fisttpl sbb icebp jl cmp push aad mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss insl aas negb rclb in push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret and outsl sbb inc dec jo cld mov jp xor gs dec movsl out jb jmp stc loopne mov adc cld mov aaa in mov xchg mov cmp and push mov push push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret and outsl push xchg inc dec (bad) sarl jne xchg (bad) repnz shrl adc mov adc (bad) icebp push pop fs ja imul imul in mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc (bad) ss dec addr16 pop pop lods inc jp enter repz mov dec xchg fist xchg xor jbe sub or ja in add cld popa adc mov call push lahf add push sbb adc data16 aaa insl xchg inc aaa mov int3 inc xchg cmp jno (bad) mul es inc pop mov cld xor and add in shrb pop sbb mov or cmpsb je je pop and and les pop mov jle hlt negb jp xchg adc cs pushf jmp mov mov cmpsl jbe aas pop jne push xor out (bad) adc sub xchg mov dec pusha or mov xor mov push cmc jge lcall fs jbe xchg stos ret or jmp push add std xchg test leave adc ja or push nop and push leave pop mov mov pop jnp dec jmp adc inc and xlat std out in mov inc xor mov xor imul jmp sbb jnp inc xchg jp (bad) cmp cmpsb pushf adcl imul lods and jg add inc inc js mov inc mov fldcw ljmp loope mov sbb in aam enter lock jno pushf xchg pop dec jp jae xchg adc sti adc adcb stos push mov test mov repnz loopne pop std fisttp in ret cld pop cmp xchg push ficompl push sti mov into pop js sub std mov aaa push cltd mov pop mov clc jbe cmp in lods fstl jge adc jle xchg ljmp js dec pop ret push daa inc jp mov fnstsw mov push add jl,pt lds repz sub push mov pop or dec data16 adc mov mov push push adc in pop stc xor popa mov aas imull ficomp mov test mov xchg push xchg add sbb pop push shrl std divl outsl hlt call push sbb push mov or pop popa sbb stos mov aad adc jp jnp push inc cmpsl andb cmp mov add pop cmpsl mov popf inc lds pushf mov enter xor push enter lret adc iret mov addr16 (bad) mov mov dec mov jo imull out and add int lcall or imul pop push pushf rorb jnp out je sub push ja leave jecxz xchg inc addr16 mov xor cltd cmp pop push imul (bad) int3 (bad) cltd (bad) adc jmp lret addb test cmp mov mov loopne data16 shlb addr16 pushf lcall pop test pop stc enter fdivs ret or mov dec xor fst je or add sbb fstps cmp adc xchg dec sub push insb push stc xor add mov das scas pushf add test mov into ret or inc cltd nop fisttpl dec cmp arpl jge mov pop mov mov or notb xchg into movsl inc inc xchg dec imull dec inc test test insb ljmp or push sbb test xchg jle aas aas fdivrs jecxz dec daa dec xchg sub fidiv pop int and jge push fsubrs adc dec daa mov jg jmp mov sbb in mov xor add lea pop dec dec test aam jge push repnz mov cmc dec inc fisubl jp pushf sbb cli int3 adc shrb aam inc jmp mov je mov jmp mov xor mov icebp es mov stos mov out sahf add and push cmc sbb mov sbb loop or mov mov xchg aas fisubl lods pop in jb cs jns int3 push movsb pusha pushf dec shrb repz jno fnstcw out fisubrl push js je mull stos adc inc cmp add jbe arpl iret outsl das test sub stos ljmp inc ds lcall rcr aad mov std inc popf rcll add lods lea addr16 (bad) cmc inc in mov lahf es jmp add pop mov lret push pop ja pandn loop in in ret sbb xchg jbe jbe movsl dec negl fldl jl fnstenv mov xchg mov aas rolb les pop cmp (bad) in inc (bad) or xchg inc xchg insl jecxz jl js pop push mov cmp int jmp xchg mov mov sbb and ljmp mov roll fcomps jo popa cmp and cltd jmp mov mov mov inc jnp fs push pop lods inc ja fs cltd lods rcl xlat data16 adc mov push (bad) in test jne dec xchg jno movsb jecxz,pn lahf push mov xlat out fnstcw sahf out cmp gs jmp jle push fidivrl sbb mov ret sub test and pusha aad fisubr cwtl into or jne movzwl repnz das scas add xchg cltd dec push pop mov jno adc adc adc into outsb fidivrl sbb inc cs cmp notb xchg sub pop aad inc sti fstps clc cwtl sahf loopne stc pop mov fisub or push mov mov sub xchg jmp add sbb jge xor cmpsb test int inc push arpl orl movsb and int xchg mov mov add out push add aad and dec in fistp add mov and dec dec int fildll (bad) (bad) es lea mov push cmpsl jge (bad) int xchg ret loope jp mov jns dec push sbb push and xor (bad) arpl movsl out add adc xchg stos insl (bad) sbb xchg push arpl addr16 out stos or fildl sbb test push inc nop and ja pop and adc repnz xor repz (bad) in mov jae xchg sbb adc enter push add inc sub mov inc pushf dec fimull push into ror and mov xor stos lea cli (bad) inc jp xlat enter jae jg adc adc imul mov and push sbb jp or (bad) push and xchg pop les ja xchg out aam fldcw push lods movsb inc mov lea ja ss insl jmp sbb pop mov popa lret cli jl packsswb (bad) aaa or sbb mov pop push cmp shrb dec xchg add dec lret or xor pop or mov cmp loop add cli in ljmp std (bad) mov (bad) or fs mov inc mov adc jg test je push adc lea inc fcomps xor int push std xchg out scas push fdiv jge cmpsl inc xchg ds fiadd (bad) in pop and push into pop jae inc push ljmp mov inc mov out cmp inc push loop sub outsb lcall sbb xchg test leave and lods inc std les adc fs pop cwtl (bad) xor mov dec cmpsl push jbe repz fnop pusha sbb stos lahf cmp sub orl pop lea pop sbb mov pop gs xchg push sub xchg mov inc in pop jp in xchg add pop inc enter out sub mov int clc (bad) add pusha mov mov decl enter movsb xchg lea jne and fmull adc or or push or sub rclb mov lahf test jle push sarl fucomi mov adc dec and mov mov das jns idiv mov call mov pusha sbb loop outsb adc dec test out lahf adc test ja add mov pop lcall mov mov jg les shll out mov scas aaa incl iret mov xchg mull sbb push jno xchg push js mov cltd loop (bad) ds xchg sbb shr stos mov aad loop mov mov lcall push lods sbb lahf dec pop mov inc insl inc push rcrl in adc pusha addr16 or (bad) into push cmpsb cmp sub sub stc es and and rorl out call xor ss insb mov test mov adc push cld sub (bad) jmp sbb mov jl ret push mov lods xchg stos out mov (bad) sbb add leave push sub loope push lcall or mov test and shrl push xchg mov ret cli pop adc xchg add inc mov dec cmc inc enter inc stos adc pop jl mov divl cltd sub mov mov fsubl pop in cmp std in popa adc jle mov jb xchg lea pusha cmpsl lret loopne enter push popcnt ds cmpl inc je sbb fldcw push fs cmp (bad) mov inc inc in loope cmp out or stc (bad) xor jp (bad) jo mov movsb jae sbb pop mov shrb push dec adc fiaddl popf scas jge insl inc lds push and add fbld dec roll mov and loop mov cmpxchg popa mov xor adc or imul test fs sub and inc or mov rcl aas out fdivl mov popa mov sbb or inc cmpsl int3 cmp mov pusha cmpsb cltd fwait push hlt mov loopne loope repz fcoml cmp test jb aaa mov dec jecxz (bad) cwtl xor add dec mov jge jmp movsl add stos cli jecxz insb push movsl fs pop jl std pop inc mov push lret inc (bad) cmp cwtl out movl cmp mov or jmp mov and pop lea repnz sti pop std (bad) call lahf (bad) popa jne xor mov addr16 mov pop cli scas ds add cs fist mov jo bound ret inc dec test test jge outsl or ret inc xchg mov add mov add pushf jl jl jb cmpsl lret inc mov shr movsb xor mov frstor mov mov pop xchg in pop fstp jp pop mov sbb stos repz ljmp aas fmul (bad) gs cmp jmp sub dec rorl pop and aam inc pop cli stc push jecxz or leave cmpsl mov (bad) jmp adc sub dec ja (bad) ds mov or sbb imul int3 (bad) mov pop cmp stos (bad) lret (bad) js rcl in dec xchg lahf mov cmp sub in pushf mov lahf or mov cmp fs aaa test sbb lock mov aas rcl roll lret jo inc rcrl push cmp pop aaa mov push rcrb cmc inc dec xchg popf into inc push inc sub aam and jnp in mov sub cmp and and cwtl xchg scas sub lods addl cmp or pop xor push and mov mov mov mov mov cld nop inc les mov lret jo xchg xabort int3 pop jnp lret pop add xchg mov sbb arpl and sub xchg loope sub es rolb dec inc data16 inc outsl mov aam mov ss cmp xchg push (bad) outsb lret insb and adc loop mov lcall ret loopne push mov insb inc je jp mov or enter mov out call pusha xchg mov imul dec fildll aad dec sbb cs mov mov fwait popf lret pop mov (bad) ja dec testb lods xchg movsb subl mov out jle out push mov in or ljmp cmpsl mov or sahf (bad) sahf frstor pushf and imul mov xorl and lea aaa xchg inc dec xchg cmp or je je nop adc push out bound dec xchg cwtl push or mov xlat lods scas (bad) sub gs daa mov (bad) pop pop mov enter cmpsb lcall in movsb cmpl cmpl adc xchg aas jo (bad) imull mov mov jg notb jmp push je icebp addr16 fidiv or sbb sbb mov adc sbb inc pushf push arpl sbb inc clc in xchg gs jmp fmuls aad gs mov leave outsb xor faddp out push lret ss or fildl or and cmp test popf repz dec jl and jge push arpl or xchg in inc or out das and dec mov rorb jmp lret les iret inc aaa cwtl xchg dec inc push mov (bad) sar sub pop fst outsb and dec (bad) mov pop (bad) xchg mov adc lds jge,pn arpl cmp fildl movsbl int3 mov xchg xor add outsl adc (bad) cmp outsl xor aaa insb pop fstpl aad bound inc out inc pop imul mov fs inc (bad) push adc mov xor out out in inc aaa ljmp cmpsb inc push cmp mov push fdecstp inc leave std les sbb andb xchg hlt icebp fldl xor cmpsl jmp jno jae mov out repnz in add xor das add bswap fcompl jecxz les test sub stos mov repz popa outsl and lret inc xlat xor jae cmp hlt sbb pushf scas xchg int3 cmp lods repnz mov mov mov pop mov xor or test mov dec jbe mov lods jle push jge scas movsb jo dec inc shl aad dec xchg ljmp add cmp leave leave fiaddl orl cmp in (bad) adc pop sti ss ret (bad) cmp add subl cmc test xchg aam in negb or js push pop cmpsl sub fwait rcrb (bad) popa outsb repnz and aam ljmp mov sbb add jmp mov cs jmp lret mov jb les les mov fidiv inc ja xchg loop push sbb lcall sub lcall test aam inc push aad push ss push ret es inc lcall mov jns and out cltd fldl jnp jbe lock lods sahf negb jecxz ret fs fdivs js push stos (bad) cmp jns fmull loope dec es repz push fisttp cs (bad) jno jns dec cmp cli sbb test outsl mov jmp inc sbb or shrl sahf mov sub jmp or pop xchg add into outsb das sbb jae mov popa xchg fnsave pandn dec jbe fimull std insb pop jmp or push mov sub push daa pop dec push pop in stos mov jmp lcall mov sti pop pop lods int jecxz push insb xorl cmpsl lock lret pushf int out out mov sbb mov pop or insl out lahf push cmpsl scas inc pushf cmp sub adc or aaa jne xchg cmpsb push push mov popf cmp add ds jbe pusha inc lock sahf hlt outsb jne xor scas repz or inc jp fwait imul lds adc in xor repnz inc sub inc stos cltd sbb outsl jl js ret lret xor jg mov loope mov inc dec aaa test dec (bad) mov add and xchg xchg lock in and push sub mov repz cmp push cmpsl stos pop fstpt cmpsl jp fldenv stos (bad) push or cmpsl inc and int3 loopne mov std mov fsubrs (bad) mov add in cs xchg cli push pop or fs loopne inc (bad) jne sti add xchg fldenv jb adc sbb sub fwait pop adc mov xor xor test test pop movsl mov jge adc ljmp xor in lcall pop (bad) jge xchg sbb in mov test sbb or xor ljmp jns adc das iret in push rcrb repnz insb js xor fldt pop (bad) aam stc mov xchg adc cmp jp pop jg pop fsubl dec lret loope and pop (bad) xchg mov call decb js out dec lcall popf xor push sbb cmp add jbe mov ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 and adc pop push mov loope xchg push data16 ret sbb mov icebp pop cmp sbb or jbe mov adc fnstenv mov push jbe ss push sbb or stos imul call iret imul (bad) push xchg pop pop pusha sahf mov push pop (bad) repnz xor dec insb es imul clc fdivrs mov clc add add pop (bad) sti sahf xor sbb stos es jo jp icebp add sbb cltd fisubrl lret gs inc dec push mov mov mov and jns lahf sub nop jecxz popa std and imul icebp pop jl sarb mull xchg iret in mov leave in xchg jae pop or or pushf shrb nop xor lret pusha dec arpl das test iret call jp out in mov lret mov jne or in data16 cltd cli out rcll clc jb je out push arpl add pop sahf fwait hlt loopne outsl dec enter fs adcl or push xor int cmpsb stc mov fnstcw aad leave sub inc pop adc push outsl mov pop dec aaa lea mov adc push scas dec loope or aad clc lock mov add sbb push cltd push mov loop test insb cld data16 stc or sub popf push pop das push push mov sbb outsb mov inc add sbb jb mov sub clc dec or push sub xor or jle or test or mov int3 or stos lods dec mov push mov pop sub scas adc inc clc aaa ss lods sub mov mov cmp jge stc jns inc add xchg (bad) gs fldt enter dec stos jo fadds fldl push lods pop aam xlat ret jecxz push je jbe test sub into daa add cmc mov sbb sub mov cltd aam dec imul cmpsl inc clc and shrb mov inc lds shrb fldl sbb xchg das repnz and int3 addl out cli inc (bad) stc mov fist cltd bound lcall ja popl cs shl cmp repz cli pop pusha xchg dec fadds scas pop (bad) jmp lods in dec cmc push daa cld or adc mov sub scas adc stos (bad) adc mov sbb fs sub dec jge cmpsb push inc stos dec inc shll out ds pop pop pop movsl sub daa sbb xor dec iret jecxz outsb jecxz add les or sbb push cmc jno push push ret cmpl dec xchg popa dec mov push call mov xchg movsl jge or dec loop mov mov ds hlt xor push loope add das test pop jecxz arpl adc or into and xor (bad) (bad) fisttpl nopl in repz add pop mov outsl mov xchg adc sub push add jp outsb push mov jmp inc jo jle jae fldcw stc push sbb sbb sahf jb jg je into mov scas clc push inc fwait test mov lret stos sub inc cwtl and mov sbb lods xchg and shl cmp fcomps es pop mov pop aad xchg xchg fs sbb icebp xor push fstpl addl inc jb mov jle cltd mov das jp sub push (bad) xor add popa (bad) call dec push sub nop loope pop sbb scas popa (bad) scas jecxz (bad) mov and sub inc movsb (bad) jb imul push adc out xchg adc add or sub xor or mov mov adc mov ss pop nop add mov xor add push pop mov (bad) icebp es push or sub jb imul dec jg fldenv icebp fnop into ljmp mov hlt out aas adc (bad) inc cmp mov outsb pop mov xchg lret loopne insl rolb dec push inc lods xchg mov out pop pop aad popf jb test gs sub jo lret fs xchg push es jbe in daa jmp pop jbe fs jo in cmp rorl aaa inc (bad) jnp repz xor xor cmp mov mov repz mov dec pusha insl sbb sub dec in jmp cmpsl incb shll lcall lcall je aam ret (bad) adc cltd xor push sub out sbb pop or addr16 daa adc mov jne mov ret clc imul hlt mov or or cwtl movsb mov sub test in jg stc or jl loope sbb rcrl jl sub lcall lods mov aad cld or pop ss sub je jle pop push adc adc dec and les add mov cli loope inc push ficomp ljmp outsl sub js lods fimull push in pop mulb mov xchg or sbb mov cmp in dec xor mov pop and or dec adc jge mov jns popf nop inc and add gs jb call gs jl fisub fldcw jecxz push das movsl push mov push cmpsb pop or mov movsl inc das mov jge xchg aas aad call jle pusha inc sbb cs and (bad) call stos sub add dec cmp mov dec aam mov sub cli mov pushf adc loop jg addr16 int in push (bad) hlt addr16 inc mov andl (bad) fldcw push pop std push mov sahf adc jae sbb fimul jmp push (bad) cli dec dec popf clc push sub or jne adc mov inc jg mov (bad) jecxz icebp inc (bad) mov enter imul adc out bound (bad) xor repz aas fs xor hlt lds aad imul sub or lods stos (bad) mov adc or push mov xor lods jno out push dec mov mov xchg test fcomi add fiadd repnz or js fsubs pop or xchg int3 frstor loopne (bad) aad jle push aaa loope leave jnp in jb cmpsl sbb jecxz add das adc add mov fadds (bad) pop cmp adc adc dec inc mov push mov jl push outsl or lods lods scas lcall arpl sub enter aas lds scas or ret jl or mov fldcw cmp adc popa loop int3 andl out into pushl repnz or sarb aaa mov pushl in sbb pop test mov mov movsl lret push (bad) mov ss movb (bad) cld fcoml adc adc push xor imul push out lds sahf dec movsb pop fsts repz std out ret insb in mov jl or addr16 sarb mov (bad) leave fadd xchg xchg or test ss jecxz lods xchg fnstsw hlt notl sbb js lahf or cmp fidivr test xchg or push js cmpsb mov (bad) testb inc xchg sbb mov loopne xchg bound push and gs loope sbb sbb xor cmp orl xchg stc int3 jne in sbb adc pushl mov sti add mov push jl je (bad) loop pop xchg les addr16 xchg clc (bad) dec in pushf addr16 xor test jl pop mov sub sbb (bad) hlt mov push add xor and push shrl pop jae lock shl mov enter ja stos mov inc xchg sub subl sbb icebp into jmp mov xchg jae mov and add mov out pop mov (bad) into repnz dec xor pop dec stos inc out out mov sbb aas adc xor push scas pushf jecxz fsts and and push push and xor (bad) or adc jae ror pop pop or mulps inc cmp push xchg fldln2 cs xchg adc push pop mov pop and xor neg ret rcrl mov subl (bad) xor jmp xchg or cmp lea test (bad) pushf clc dec fadd pop insl mov pop ss push pop add xchg test aad jnp and ret aaa das pop dec xchg rcrl out test mov cltd mov add xchg push push mov (bad) cmp add mov jle dec int3 dec adc adcl mov pop mov dec stos mov push xor fcmovb fcoms pushf add mov push xor sub mov int out pop out push (bad) xchg test jg in enter push sub xorl sahf cltd movsb mov test dec add ljmp push repz test cltd or jae cmc ja push pusha jae subb data16 cmp insl sub scas push and scas sbb mov lds repz (bad) mov adc sub jno iret push (bad) cmp test aad and adc ss loope repnz pop leave add mov outsl xchg int3 fwait pop inc sbb mov mov inc pop leave (bad) xchg inc fcmovbe aam push sbb dec bound (bad) mov adc jno movd clc mov repz sub jg cmpsl sbb loope and xor lods ret sahf xchg (bad) lock movsb insb call lret dec jae push mov pop stos inc aad fs test add mov cmp or adc jle adc push adc negl mov mov out push mov add push mov dec or fldt das cmove andl mov popf std jg pop push fisubr mov lret out lods add das int mov sti mov mov mov daa cmpsb add push dec (bad) mov add dec xchg jg lret push cltd jae and inc mov sbb in or inc adc sbb cmp mov push push sti push iret xchg cmp dec inc xlat leave pusha sbb outsb cmpl outsb imul rcrb cmp mov sbb sub in in es jl aas sbb cmpsb add cmp jle ret repnz lods mov xor push adc pop and adc inc jge push (bad) mov aaa push adc ret xor pop push add test insl scas mov pop fs pop sti ljmp push fcmovnbe or sti push shr stc add test in rolb shlb add je mov fildl xor repz aam pop jns fnop xchg dec je pop push ljmp mov push push push pop sub sti jmp pop mov xchg sbb sti ljmp and adc pop mov adc lret movsl negl cld push cmpsb test in cld sbb add sbb scas hlt adc ret in and and add mov rclb inc lret xor insb movsb jno mov cmp xor mov rcrb popl into sub pop in imul insb orl pop inc xchg fildll pop jb cmp out in dec sahf mov mov out adc in scas addr16 nop jmp add jns xlat mov ja aam lret lock cmc gs (bad) test fs pusha pop xor inc mov mov test mov mov cmp lea bound inc inc nop icebp jmp mov mov test incl nop add sbb in test or inc ja fwait mov mov out pop leave pusha mov addl test mov aaa pop mov pop test inc mov dec (bad) push jge (bad) ficomp mov mov and sub cmp aam and call mov mov (bad) and shr inc add xor pop pop lods ja add jno out outsb subl repnz repz repz out out sub jmp das cmp or (bad) jmp or inc loope dec aas std lods pop mov and fdivrs pop rcr jge jl xor jmp jo cmp pop inc hlt mov cmp aaa (bad) std jle pop lahf adc int3 sub test (bad) dec pushf push xlat fcmovbe sub and lods scas hlt pop xchg ds gs hlt in into fildl jge sub mov push popa xor iret mov fsub imul arpl repz or mov in adc jnp imul xchg inc and rcr inc jno (bad) (bad) hlt jnp jnp sbb out (bad) mov fisubrl test aad bound xor sub inc aaa xor fwait sarl popf ds pop orb mov out mov mov lret clc test int movsb movsl dec test negb (bad) add cmpsb push ret xchg das xchg dec xchg cmp mov mov dec sahf xor cmp (bad) jns (bad) nop cmp inc xchg fnsave call movsb lods jl jg cli fdivl mov sub mov pop insb jecxz and mov in xchg xor daa fisubr dec cmp push jo mov clc punpcklwd mov stc pusha pop je inc inc ja outsb aam out fsub lea std inc or dec gs and pop xchg ret sti (bad) mov lret iret jo mov mov push jl repnz and mov rcr leave std out lret xorb push hlt scas mov loope push mov mov pop lea xor test mov inc mov insb sbb sub and inc pmulhw pop xor mov cmc imul xchg mov ljmp icebp push or lcall or fwait mov dec mov pop mov jp movsl add add inc jmp ret or sub pop sbb jnp inc divl movsb loope out rcrb cmc push ds and scas mov sahf pop mov loopne inc adc outsb in into ljmp cmc jmp sub push mov push aaa pusha loope (bad) rol mov ret imul and divl xor jo sbb xchg push imul jg mov bound xor out adc (bad) xchg mov fidiv push clc imul xor sbb lret jns mov lret das sbb and inc call imulb push mov popa lret jne iret (bad) test lds pop adc push xchg lock mov mov jns pop in mov cltd xor lret and insb fsubrs int cmp mov stc xor cmp daa jbe pop loope (bad) cltd sbbl pop jmp push jge xor sti adc or mov iret std shrl push repz cmpsl ja outsl (bad) mov icebp xchg imul mov sbb ds push addr16 in jmp inc (bad) sbb push testb in inc xchg and dec sub (bad) and xlat out int and scas lret popf (bad) hlt inc es mov mov cmpsb insb fisubrl pop stos ss push sub cmp fwait mov popa mov mov push insl pop cltd loope loope mov push lds fistl mov (bad) rorl lods pop out push addl in sub pop xlat jecxz mov decl sahf sbbl lret mov xor rolb loop dec pop push xorl or sahf dec pushf cs lcall sbb mov cmc xor idivb std mov (bad) or sub leave mov mov pop out aad test data16 idiv stos pop insl dec xchg arpl lea mov test scas fucomp leave fwait pop push loopne pop out les inc push mov dec fcompl xchg xchg pop cmp fwait iret jl push or mov push int3 stos loope ljmp jns sub sbb imul (bad) ja add mov inc cmpsl rorl jecxz les xor inc jne jl cwtl jecxz cmp xor lret sbb pushf clc inc push xlat xchg je jp insl pop cltd push cli sbb cltd sub add loope xor cmc jge pop mov incb aam imul cmp test cmp pop add int3 xchg inc insl (bad) cmc sub mov movsb xor (bad) push inc in dec cli arpl (bad) dec xchg fs dec xchg xchg in push mov dec mov and in xchg jo xchg mov add popa jne cmpsb mov mov (bad) mulb repz sbb dec mov dec and inc add mov stos xchg rolb or mov sti andl mov adc aam in les fbstp in xor cmp push arpl jmp popf dec add mov inc call mov mov or (bad) das cmpsb lods sahf loope icebp xor movsl sbb or inc inc mov inc push push pop ja mov mov fildll add imul push cs xchg xor (bad) repnz push cwtl pop test mov ss xchg std xchg dec aad test clc jo fldt repz add pop (bad) (bad) or or or push sbb xchg mov cmp adc and fs mov aam shll dec ss push cmp ljmp stos sahf xchg das xchg xchg adc mov rcll jge sbb xlat pop std aaa inc cwtl out jmp repnz mov mov nop int3 sub popf push adc ds mov es jo add sub push and pop lock lea shlb mov (bad) imull jns rcrl dec pop adc jle xor sbb push (bad) mov xchg sbb roll pop inc add shlb xchg (bad) push mov cmovle dec iret js mov mov cmc inc movsl jecxz cmp ret jl jns xchg repz inc dec pop arpl fcoms sub out mov lahf in sbb cmp in mov mov lock pop pop pushf cmp xor and cli jmp lcall bndstx dec cltd xchg pop cld pop or popa outsb or mull cld cmp mov and pop decl pop add jne leave vcvttpd2dqx dec fimull sbbb iret xor mov cmp fmull lock gs adcl lods rcrl add es bound mov jmp mov inc (bad) sub adc mov and out mov dec push imul notl mov loop les push and push pop dec imul sti out outsl mov mov popf adc inc lods mov push jnp sbb ret test cmc into dec inc les or gs pusha sbb clc sub cmp gs sub pmullw mov in paddq (bad) je addr16 sub cli out dec mov mov loop adc push jecxz call test mov into in mov jnp xchg psadbw sub sbb aas into jp aad dec and es icebp lret enter lret sahf jae sbb mov push cmp pop popf xor jb xchg jno jmp leave pushf test outsb pop nop jb insl loop xchg (bad) dec (bad) push push call cmpsl sbb cli int test mov cmp and or repz xchg iret xor mov loopne cmp test pop xchg loope push fwait or in mov mov hlt inc mov or dec xor punpckhdq bound push or or sahf cmp sbb int3 out xchg popf leave dec xor movsb xchg rcrb jo out inc mov xchg (bad) lods mov arpl js or jecxz loop push idivb insb or xchg iret push add popa jmp daa jne in jp xchg cmp fdivl aad sbb jg fist xorps xchg into cmc lcall adc cli pop mov push add push add movsb mov xchg sub fimull adc fstps or mov dec dec (bad) jb sub popa xchg lahf lods shr or pop std pop add mov push xor scas inc loopne jle dec and hlt or dec lds imul mov add ficom and xlat adcl cmp stos (bad) std xchg pop xor add sub cs jbe mov xchg pop cmp mov pushf imul mov or push fildl inc adc mov adc or xor dec out push sbb push fidiv not (bad) cmp pop sti mov jge sub mov pop inc aam jg sbb ss js sbb test enter adc jl (bad) adc or sub dec dec xchg mov mov lods (bad) jmp cld sub ss xor jp add imulb fs fist jae or addl repz push repnz cmp popf call pushf mov pushf add ret xchg stos enter mov fist and stos push data16 data16 add imul inc mov aad out mov sbb popf adc lret fnstenv jb out pop or inc gs cmp or bound mov sbbb jno imul pop (bad) clc add push mov insl and push add mov push jmp xchg mov jecxz sub push mov sbb popf fisubr daa jns and das inc pop lods lock fs iret adc inc (bad) repnz xlat pop in not pusha outsl daa mov cmp (bad) in dec pushl imul inc mov lret movzwl jnp push inc fs scas xchg loop push cmp daa adc dec fwait das xor test lods mov mov leave push mov inc movsl mov sub cltd mov inc popa es insl (bad) ss cmp jecxz mov cmpsl jecxz test add cmpsl push fwait jbe pop mov inc sbb dec dec data16 notb add fistpll pushf or adc scas inc push mov and add xlat ja outsb xor adc xor loopne lds fcom repnz shrb sub fdivl iret loop jnp mov jnp push leave mov jb pop je mov js bound pop add stc idivl pop sbb push arpl lds out (bad) mov loope xchg jmp ss stos sub mov push jge (bad) in jns aad (bad) out (bad) mov and xchg rcrb mov dec mov not push mov idivb out cmp lret (bad) jno out sub je cltd pop xlat pop and pop imull dec nop lahf inc sub dec stos pop (bad) or insb push xchg xchg and in lds sti out aaa fcmovbe movsl insb ja dec leave imul lock sbbl ljmp and pop pop test ss adc rol push pop out xchg fucomi mov pop push sub dec sbb test lret inc mov scas adc sub pop test mov in xchg daa lds add and or cmp jne xor inc jle in out xchg dec jns jbe add sbb call sub cmp push (bad) (bad) ret ret inc leave mov lret mov pop lea cltd (bad) shrb mov jp pop dec mov pop mov call clc (bad) pop inc pop pop adc dec xchg mov mov imul subb mov test sub arpl aaa stc test jo adc popf or clc lods aaa sbb cmp movsb int and cmc repz call mov jp insb cwtl or (bad) jo lods adc je and jmp pop xchg ja call es sub mov sub mov adc jge rorb call popf sub enter nop cmp stos add jb ja mov lock or push sahf fdivrp pop mov sub adc or mov add scas mov add sub jge test jecxz xchg orl enter mov daa xchg mov icebp cltd push pop jp repnz ret rol arpl xor push inc fidiv pop pop xor imul cwtl adc cmpl cli add (bad) xor fcompl sub pop les mov cmp fs adc push dec idivl dec push ljmp addr16 insb les xor jmpw mov test mov jge mov push rcrl mov loopne dec xor inc sbb fdivrl mov mov negb movsl mov cmpsl jg pop cltd scas jb cmpsl xor lea mov sub sarb xor out jl cltd push gs adc mov jmp sub inc mov push mov sub sahf dec push and in out or stc push (bad) shlb rcl inc sbb push push push in gs mov cmp mov push xor mov inc cmp mov push pop fidiv xor cltd int mov dec push cli add mov loop jg pop push and imul inc les mov and stos or arpl test and jnp cmpsl stos and cltd data16 ficomp loopne out mov jbe ja or sahf mov rcrb sub lods aas push jg pop jns divl jb fs xchg jne ss cwtl jae mov mov and dec vmptrst jl sbb sub incb dec bound clc test or enter mov stos sbb mov pop (bad) push lret aas and xchg in xchg (bad) pushf ja pop cmc mov test or or pop hlt ds inc mov test (bad) outsb jne xchg cmp orb jle mov xlat insb jo popa cmp test jge dec lret pop iret stos out dec jp pop dec int cmp outsb cs in mov aaa push mov (bad) test mov cmp xchg jno movl aam push fwait cmc shrl and lret cmp or and leave push push sub inc pop sub into shl mov pop adc pushl or (bad) push or das mov inc mov mov pop xchg add sub sahf lahf cmp sub flds or stos je popf aad cld pop enter adc mov popa sub adc outsl inc cld aas jnp in into add adc stos fs test hlt cmp push xchg mov sti das enter lcall mov pop cli push popa mov inc xor adc loope add sbb lahf out popa lods mov mov pop cmc mov (bad) push xchg xorb rclb push cmpsb iret das jb leave adc mov leave push pop xorb push mov rcrb inc xor or xchg mov iret push and out fmul mov lret mov mov lahf mov daa (bad) mov inc push fsubrl das adc out outsb jb outsl mov rcrl mov iret mov add insl stos jecxz lds sti inc xchg inc cmpsb ret shrb xchg sarl pop adc (bad) xor and repz jb ret push inc insl push adc loopne lahf push bound xor mov lret cmp leave inc mulb rcll push pop (bad) popa std mov add cmp (bad) mov out int mov hlt jge inc leave xor dec dec sub repz mov mov inc (bad) movsb fstps lock and or pop xchg outsb mov sti jbe push push addr16 adc call fisttpll jb lahf jle push push test (bad) mov lods add in (bad) repz adc daa ficompl add jne dec jbe lea lods into scas mov in jnp adc mov xchg data16 fs xchg lock mov sub (bad) (bad) out inc movsb sbb cs xor xchg sub add pop adc mov mov iret xor jo popa push (bad) stc jge dec xchg jne out leave mov int test adc ljmp imul in mov push inc sub (bad) fcoml test insb test xor les aaa fnstcw fwait into cmp push or das movsb out incb jp cmp call xchg ss les push into cmc jmp mov sub and fcoms aas jae mov mov pop lret lcall dec (bad) stos dec ret xor dec (bad) mulb jae out jbe xor jnp aam pop fbld notl int jns xchg jl loop ds call xor addr16 movsb test std in rcr dec inc mov pop xor std and xor bound ljmp dec push xor clc cmc push jg mov push pop mov outsl mov or xchg sbb cld rolb mov xor js mov mov mov imul lods aas icebp dec sub popa out inc std in addl cmp or lea movsb inc adc mov imul pop inc add mov xlat mov pop mov sbb out sbb sbb daa inc push xor xchg lock stos and rcrl loop aad sub cmpsb stos test ret popf das les aam cli xlat ja clc sti or xchg jbe jl sbb sub (bad) lahf movsb sbb inc into fist mov pop mov jo add cmp pop test mov out dec sub in pop push hlt dec fwait jl scas iret hlt inc inc pop out mov lods mov and dec pop loope pop insl int sub jge lcall add or pop leave fwait xchg clc mov sbb sbb arpl xchg cld sbb push out les leave sbb adc mov sub dec xchg clc cld lea ss xchg fdivrs xor lds mov (bad) fsubl mov addr16 xor fdivrl xor sub sahf pop fs test test and mov jnp es xor cmp fiaddl mov (bad) jp inc ss mov cmpsl xchg test outsl addr16 mov mov push dec into xchg mov shrb insb push es fwait jne inc std mov and clc mov cld mov push into add lods out imul ja sbb or add arpl push imul mov dec sbb add mov std or and mov cs scas push and test sbb gs jae pushf int3 mov adc leave add fdivl cld xchg lods cmp cmp push adc outsb cli sbb (bad) gs push insl mov xor aam jl mov sub data16 dec (bad) fcomps and lds pusha mov movsb xchg or inc mov call je es in push imul (bad) in push lds fwait jne movsl out mov inc add push fwait mov add mov jno decl dec mov adc mov test outsl sub loope xor data16 push sub enter adc or rclb das or jl aas mov add aam les insl out mov enter scas jo (bad) int3 dec bound adc pop data16 (bad) lret mov shrd jno flds inc loopne pop mov jnp jg inc loopne gs inc stos ljmp ret in repz dec sub stos cmp lret in (bad) pop mov jmp out xor and icebp ljmp mov or in mov cmp pop sub or js ret pop movsb les push test push (bad) mov mov (bad) jbe fwait add loope pop mov and and pop aas mov out xchg push negb out das loopne inc and inc sbb push cltd adc pusha sbb mov data16 fwait cmp jp dec mov cmp lret and push or bound push popf ds push fmull xorl cmp mov mov pop push cmp in add jno adc dec inc subb dec jae negb xor loope lahf aas push mov leave ss mov pop adc cmc imul jg test mov pop aas pop and mov das fsubl in fdivr test inc mov add out jo or cld arpl inc lods or repz cld xor dec addr16 or and and popf cs js cmp mov out lea (bad) pop dec out or jae les sub mov ret arpl ffreep lds sub cmc daa mov jle inc adc sahf outsb fisttpll stos push scas cs daa loop add cltd lock sub add mov sub fstps mov cld mov and cwtl mov ret or js scas int3 das lds push (bad) call xchg cmpsl inc lds or (bad) nop cmpsb out and pop pop dec push cmc mov nop dec repz push cmp or lds dec xor je jnp fs shufps pop popa xor adc arpl inc sub (bad) xor mov xor incb std sbb dec xchg lds xchg adc lods cli fs test data16 sub push sbb dec dec in aad pop iret ljmp mov cli and (bad) leave add ror int ret adc imul jb inc (bad) lret push call sbb shlb fistpll add jbe mov jmp insb mov mov jns add cmp test mov sahf daa push les addr16 loopne sbb sub cmpsl xchg dec push rcrb sub mov jae,pn outsb lret xchg push xchg imull stos pop pop rcrl or push rcrb movsl add xor lret mov into das cld mov jg aam cmp aad cli inc in jmp repnz jl mov pop shrl jnp icebp mov cs shrb and pop cmp or push pop mov (bad) and pop jo mov xor xlat sti (bad) cmpsl xor sbb les scas add movsl call cmpl sbb add jo and mov mov push push pop sarl dec cmp pop jb xlat outsb insl jno popf push pop lahf xor sub sti mov cmp push jge leave popf cwtl icebp xchg roll popa sub mov out hlt (bad) call (bad) pop xchg jne mov (bad) fisub scas (bad) cmpl psllw mov adc imul jo cmp aaa mov jp add sub cmp inc sub ret loop mov jl pop fcoms xor push stc inc shrb mov clc nop jnp notb push cwtl mov fwait scas xchg (bad) and add iret jecxz int push lcall adc xchg out push (bad) mov loop dec (bad) mov shr pop mov fisub rcl inc loopne call ret sahf gs mov or icebp mov popf add and fwait test les pop jns jne mov and sbb nop inc inc fidivrl test push jne (bad) (bad) lret pop adc sub push sahf jle popf movsb add sti mov fsubrs mov push fwait inc data16 xchg inc neg fsub imul arpl inc xchg das cld mov (bad) outsl addr16 rolb mov jnp add addr16 fsub mov jecxz mov ss loop js mov cmp dec push ficom mov stos adc jge ds psrld sti dec sbb daa jp daa std push out sub jns mov fwait dec (bad) mov push push mov rorl ja movsl sub shrb mov loope insb mov int3 push or frstor clc cwtl mov in fidiv test mov xchg nop inc push lods arpl jo cwtl test mov call mov (bad) sub je fdivl nop xor imul xlat adc cmpsl xchg and aad inc mov xchg out sti xor les jge and xor call xor inc cwtl push push imul imul (bad) and movsb clc (bad) int outsb xor arpl pusha xchg mov jp add (bad) jg dec fild sbb mov cmpl sbb dec ds addb jmp cmc repnz xchg stos insl dec pop in jl pop in ret sbb mov js mov pop or push andl cld xor inc jge mov xor jne jbe out pop add fs sbb pop pop das and loopne movsl (bad) lcall pop adc sbb mov lret (bad) push cwtl lahf lock ja cmc sub mov imul mov sbb popa movsb repz in mull push outsb sbb in jae xor movsl jnp pop enter pop (bad) dec mov (bad) ret loop lods or (bad) call out dec mov add mov je repz jg xchg (bad) lcall mov in jle (bad) jbe scas outsl sub call add pushf mov xchg pop mov jno cmp sbb (bad) pop push nop (bad) lock into lods lock into mov xor xor shrl dec out js push mov mov push add xchg in test movsl add sub and xchg ret mov fidivrl outsb clc aas inc xchg cmpsl leave dec xor mov aas mov xor je outsb fildl in addr16 jle ljmp icebp (bad) outsl scas test dec lcall inc loop push lcall jg cltd push lock adc adc mov sti mov shlb xchg adc cwtl es (bad) mov clc hlt insb mov mov clc sbb xor and jo pushf int repnz cwtl (bad) stos out mov mov mov mov pop adc call out lock inc lds push (bad) decl test jmp cli inc cld push mov jl addr16 negl std fs aad jae (bad) out pop fs mov lcall leave sbb icebp addr16 inc cmp std sbb mov mov stc cmp sbb dec pop outsl and pushf scas push scas jbe adc inc sbb pushf mov iret mull repz fs lahf add add call in or cmc push inc sarl iret scas (bad) xchg in xor jae les cltd cmpsb dec dec xchg xchg sbbl inc cltd int3 add mov movsb (bad) idiv mov arpl and inc cmp into sahf nop data16 mov andl in stos (bad) imul xor sub lret test xor out sti sub in or pop xor (bad) inc xchg cmpsl mov ficoml xlat xchg push js gs out (bad) dec addr16 sub lock and xchg out and xor pop clc mov je lods push outsb add jle mov fldt pop xchg (bad) xchg lea mov mov jle xor dec aam int3 fistp cld dec cmc xor sbb mov dec push mov sbb mov jmp pop fs outsl xchg movsl cwtl aam inc mov mov pop dec mov inc in cwtl dec xor (bad) xchg mov call out mov sbb aas cli jmp rcrb test (bad) pop pusha sti movsl adc push rcrl cmp sub mov adc lcall dec sbb sbb push adc jmp mov xor dec or mov xchg stos inc jmp (bad) xchg push not mov mov rol aas outsl (bad) ret sub and mov adc bound enter and push push sbb xor shlb nop jp nop in pop push adc push imull out jo jb cmc pushf imulb loopne js xchg pushf mov pop mov into fnstsw jp test mov sub outsl or cmp test popf push (bad) push rorb iret sub cwtl cmp xor shrb cmpsb cmp xchg cmpsl mov inc xor inc dec das jns push jmp daa cltd lock mov pop xlat outsl (bad) pop jo mov or mov and (bad) pop notl and mov cmpsl fsubr pop mov xor inc xlat jmp xchg inc cli int push mov cmp (bad) hlt sub xlat push cmp push and adc outsl pop pop int3 sarb pop mov test jo orl fistl jle dec imul xchg mov mov mov and mov aad sub xchg shr fistp push nop sub xor jp cmpb and sahf or roll fsubl js addr16 push out in mov pushf push mov mov inc test lret ss sbb std pop jmp cmc or dec push (bad) stc push js bound inc stos lahf in push idivb aam in add fs mov lret sbb popa out cltd sub cltd shlb (bad) and inc stos roll sbb xor sahf call dec jmp nop aad mov jl outsb mov cmp sets clc sbb pusha jle dec popa jbe add loope scas mov cmp fisubl cld pop sti pop mov (bad) test lcall dec cmpsl jecxz mov dec cmp in shrb add add in mov xchg bound or pop adc or cwtl push sbb mov dec inc or stos sbb dec adc adc lahf xor inc mov jns mov jl clc test mov ss pop into mov sub loope xchg (bad) pop lods out cmp xchg and mov mul push pop and and and xor sbb nop sarb sub xlat xchg pop jl or jp movsl ja out pop enter mov dec clc movsl adc mov ret (bad) mov bound sub jle sub les jecxz int3 add rolb pop inc mov out pop xchg in xor in dec ret add sub test fstpl testl cmp xor lret fisubr ljmp push mov cld mov mov insl xchg rcr and dec adc in out lods inc inc out sti fcompl in jne jp cmp lcall inc xchg adc mov sbb fwait push outsl pop and lahf cwtl adc imul pop push out jecxz xor (bad) mov inc rorb inc arpl cmpsl push sbb sub push xorb outsl jge xor (bad) pop add sbb push mov push dec (bad) push loop push inc cmpsb add bound lds jns dec xlat mov into les (bad) fidivrl test inc sub fsubr mov cmp push ss push jbe xor sahf cmp inc xchg aas mov aas rolb pusha and pop sub sbb jbe mov int3 pushl xchg dec mov dec mov out or pushf push lahf fs pop ja out das push loop cmc jbe and pop pop mov cli jle xchg mov xchg stos pop pop lahf int in mov xor xchg adc mov jmp jnp mov in cld sub mov pop cmp mov fild rcrl stc lahf xchg ljmp mov or lods ljmp jg fs and roll fwait cmpsl push sti or mov inc mov mov nop and pop xchg mov jp aas int3 fisttpll cmpsl mov vaddsubpd dec add and out push iret pop popf mov ja push jle sub nop je xlat clc or (bad) push loope (bad) sti xchg pop (bad) fistp cmp xchg jae test call inc mov cmpsl in dec les mov add bound sbb mov iret mov sub lahf push adc sahf aam pushf xchg jge mov dec and xor xchg cmp jbe repnz pop or sub mov fbld maskmovq (bad) rdtsc sbb lret test adc xor incb arpl out xor lds inc add mov sbb insb fistp iret or pop pop jne push iret lds inc sbb cmpsb das je mov out fistp jno aaa daa int repz ficoml xor hlt js sahf sahf xor pop add jb cmp cmpsl negl sbb xchg jnp mov leave xchg sarb push and or pop iret roll ja sbb hlt int3 popa mov bound or les pop jmp and cmp mov cld sbb push add loop xor jb test mov xchg and insb add adc test in neg inc cld push mov mov iret sub xchg mov cmpsl mov ret dec jmp subl int and jo aam sbb sub fwait test mov sbb mov orb push mov ds sub lods (bad) and mov pop call ret fisubrl (bad) je cmc lea add popf cmp xchg test lds lods or out in mov sbbb jg shrb mov lods repz popa dec inc in in sub call cmp arpl adc mov mov inc leave iret lret insl sub mov shll ljmp call iret fimull cli repnz sarb push (bad) shlb imul inc pop lds fidivr roll jnp adcl mov xor xchg xchg mov das lahf sbb jg fcmovnu sub sti ss cmp jns (bad) std int cmp jb js sti popa adc inc std push mov xchg es jmp xchg sub rorb jae xor movsl push in add popf xor lcall cmpsl out xchg mov orl cmp pop inc cmc js (bad) outsl je inc hlt add cwtl in dec sbb mov mov lret cmp les pop mov pushf out test cmpsb xor dec aaa out (bad) js xchg pop je insb add jecxz sub out stos hlt xor insb mov adc and jge lret int adc icebp in cld stc inc dec cmc (bad) dec pusha lods jo or ja pop divl iret outsb popf inc dec (bad) (bad) lods pop xor mov std mov inc or push and lods dec dec xchg or outsb outsl push out lds imul or dec ret clc pop in lea iret (bad) ds and adc movsl dec lods loopne clc add nop mov cs inc pop enter xchg mov into cmp ljmp inc push and mov dec lock sahf pusha lods rcr and or lock shrl or dec mov fsubl outsl psrlw xchg popl in sbb push mov cmp sbb or cmpsl pop xchg pop xor sbb mov mov dec add lcall sbb inc xchg pcmpeqw outsb xor lods cmp adc mov xlat cmovae xchg js daa call loop sbb incl (bad) jmp push xor jl or fstps mov fisubr sbb push inc xor xlat lock ds repnz pop bound cmp sbb shlb xchg stc fisttpl add test or push fwait rcpps leave or insb xchg sub (bad) (bad) paddusw inc (bad) adc out push jp mov gs ret jne fsubrl sub jge (bad) jmp iret xorl push mov pop xchg lods and cmp in dec int3 jno mov mov rcrb lahf mov mov test add mov outsb mov stos movsl jb push sbb fistpll jbe or dec ret loope or or (bad) mov pop mov mov ds into jl dec ds scas cmp mov mov mov aam push add inc pop cwtl jne (bad) xor mov (bad) call sbb inc js xor pop mov ret jae mov or sbb xchg repnz xor enter insb out inc add pop jp sbb scas xor mov xor jo xor mov mov mov xlat out xchg fucomip jne cmp pusha cmp jmp in mov xlat lods jg xchg jb push loope cmpsl ror (bad) fstps in xchg aaa hlt cltd add pop movl or sti cld pop ljmp pop jo dec inc test (bad) out cmp jecxz dec pop xor add mov jmp and jp (bad) aad (bad) dec daa mov int3 pop mov mov xor mov adc cmp lahf inc mov mov hlt decl pop fcomp add adc jbe push cwtl stos imulb hlt mov dec and or pop (bad) (bad) mov adc lock add xchg mov out cwtl push test mov test or jne push loope push xchg mov pusha jp push push xor xor fidivrl arpl cmpsb rclb push mov negl inc pop or jb (bad) cmpsl mov hlt lea xchg dec mov cmp cld aas stos sub pusha cmpsb mov mov pusha daa dec test jb movsl jb lret dec pop test inc sahf orb bnd ret movsl iret loope mov cmp inc cmp mov push cli insl sub xor mov sahf dec je enter iret sub ret push int3 flds mull cltd fnstsw or test js cmpsl (bad) iret ret cmp dec dec pop insb xchg (bad) ss rorb out and inc (bad) out jmp aaa xor test lcall pop lea js add jae push andl ja fldl int3 dec mov jle or xchg push jne sahf push lods mov pop incb aaa cmpsb push aad sarl inc js out adc (bad) cmp add mov mov adc cld aaa pop cmpsl iret out rol clc cmp pushl mov mov mov lcall or lret xor rorb movsl xchg xor loop out mov rcrl mov sub inc sub xor (bad) (bad) in mov mov sti jne xchg (bad) jno test adc push xor push jg outsl mov xlat push add arpl mov loope fwait pop mov pusha jbe lods and roll and mov (bad) (bad) rorl jp shl push int sbb scas mov arpl add loopne and imul xor addl ss mov sbb mov jae movsl dec inc cmp sahf mov xchg fs aaa xchg movsb jb mov mov out pushf je mov mov jns cs aad mov jl clc mov xorl adc jmp lock sub add (bad) addr16 xchg jo xor shrb (bad) fs cmpsb insl xor sub cmpsl pop aad xchg clc and in xorl pop sbb mov dec ret xor (bad) aad in xchg push movsb mov inc repz add fwait xchg adc jmp fistpl cmc xor repnz jne repz ljmp sarb loop cmp jmp mov fldcw nop das enter jns mov icebp addps (bad) pop sbb push imul loop in push sbb cli push push nop push aas inc (bad) fwait xchg dec rorb outsb rol push fldenv jl xchg and daa xor mov (bad) jle mov pop mov sbb lahf nopl cmp pop ret lret into fptan cmpsl push sarb sub nop push mov jle pusha dec in push dec push loop insb mov and dec scas or xlat insb std cli jb sahf shlb loop jnp into pop jo xchg xor outsl aaa fild lock mov inc mov cmpsl cmp adc (bad) mov loope mov pop out and jge and cmp test add movsl fsubrp xlat pop adc push dec jge dec mov subl mov adc imul or int pushf mov or fistp xor xor fnstenv enter cmp mov adc lcall xlat movsb sub movsb mov inc jbe xchg xor cmp iret adc aam pop hlt push push sarl popf loop pop shlb add adc movsl cmpsb (bad) sub repz icebp je fldt lods (bad) das ljmp fidiv sbb stos pop push fdivr cmp (bad) sub xor fs call xchg xchg je adc mov mov adc sub sub stos ret out ss mov jge test cmp jecxz out scas xchg shrb jnp push push mov push push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret and ss test (bad) clc test sub xchg xchg ss and out pop push call pop ret aas or mov jle stc jl push lret inc jl jl mov popa jmp inc jmp xchg lods jl,pt pop sbb stos orl and call push call pop ret push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fidivl cmp jnp js fbstp xchg into cwtl lahf dec aas sahf push mov xor fucom icebp mov inc jae mov aaa push rcl lock gs adcl mov fimul dec lahf cmpsb dec pop aas pushl adc cwtl out mov sub xchg add imul test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 and ss imul mov bound sub xor clc push push jae push and mov imul mov xor loopne cltd push scas or in jg sub jb push jl jns jns stos lret adc es pop inc mov and fidivr rorb out and sbb fiaddl pusha jb fucomip push cs lret pushf test mov adc scas push cmp mov xchg mov sbb sub jle push std pop dec push cmp arpl cmp mov fsubr xchg into pop dec cmp fildl mov pop push pop inc and clc out or mov dec and push fnstsw (bad) (bad) xor in dec and and cmpsb or push loop jne pop mov pop pop lret inc pop dec enter repz push addr16 dec jns hlt xor loope lret mov xchg adc lock add xchg adc data16 dec sahf xor divl sub loopne ret mov push gs sbb or mov mov mov mov shl mov pop lret in dec (bad) push jmp dec add lods pop cmp add insl sbb jno ljmp pop adc arpl jl enter pop and aad mov xchg dec (bad) cmc insl pop push ret shrb leave lret mov sahf test add inc roll jle repnz inc jno cwtl ds ljmp inc arpl xchg sbb shr aas lcall xchg jge in cmp aaa push js mov and pop xor jnp mov and scas sub lock pushf jns sub mov mov stc pop add mov mov or rolb jp in (bad) mov into sahf push mov iret mov jae fildl sub xchg or lea dec sbb rep jl or dec cmp call inc out push ljmp and pusha push cmp (bad) popf inc insb addb inc lock lahf pop (bad) movsl (bad) mov inc mov inc jo je scas faddp mov out bound cmp mov scas mov (bad) jge outsl and jg lds push jecxz out and inc mull rorl insb cmp add daa (bad) xor mov inc rcrb push fcmovbe dec adc mov or mov data16 and fstpl fstpt jle dec rolb or lods mov dec pop stos fist fs loopne (bad) into movsl movl imul repz orl (bad) lret and pop dec jo (bad) clc data16 (bad) mov call fsubrs or lret insl sti sti xchg xchg addl daa sbb pop push sbb fwait loopne pop or aam xchg test inc adc cli adc inc pusha gs stos fsub mov dec lods adc pusha fisub int addr16 repnz repnz mov stos jb cmp pop sbb add jge mov xchg std and cmp push xchg or cli adc dec or call pop mov mov fisttpl aam and push push mov shll fstps aam xchg or in mov bnd leave arpl ljmp pushl push repz adc stos test mov xchg mulb inc push cmc stos ds sub mov movsl sub and jmp mov cmpsb jmp inc mov sub pop rclb or cmp jmp and cmp stos mov mov cmp lods jbe ret loope xlat adc sub adc (bad) mov inc out jg imul mov mov mov mov das xchg test in fnstcw inc movsl adc pop mov mov adc in push cmp pop mov fdivs cld in insb inc or or sbb sub and (bad) div dec push jecxz ret mov xor icebp or push aas lret sbb in and jno sub add cmp mov dec or fwait sbb in adc pop call loope rolb jge dec or int3 imul jae sub fdivs add jle (bad) fisubrl lods push mov outsl push jne (bad) sub mov lea in fwait jecxz xchg imull das pop stc (bad) add jnp mov movsb jp pop out sub enter dec rolb mov or xchg jo fiaddl movsb inc in int loope stos divps insb xchg mov (bad) int aam xor mov push nop pushf sub mov jnp cmp add in test (bad) fincstp jne mov inc or xchg mov jbe scas mov mov (bad) icebp cmpsb lret in mov int lods data16 dec xchg pop sahf xchg jne,pt jmp mov cmpsb ret sub mov scas push cmpsb icebp lret fs sub add (bad) lods mov lods jo sbb mov scas adc push xor push mov and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 and ss decb lods inc jp enter repz mov dec leave pop lret xor and pop loopne dec xor imul or xor mov call (bad) jmp push out gs out mov jbe mov aas mov add imul mov xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 and ss (bad) pop lea sub and mov dec leave dec sarl jno shrb sbb add sarl sbb jmp push enter push push fildl aam fildll scas cmp mov mov aas mov inc add pop push js out xor in jno push imul popa aam adc inc out fdecstp shrl mov fs push add outsb mov jbe fsub pop mov fnstcw push popf pop cmp cld sarl fs lret xchg clc sbb xor outsl lods enter xchg push mov jae push lret dec xlat dec pop popa movsb push mov mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 and ss imul or xlat je jnp jecxz adc mov xchg sub jo inc mov lahf test push sub inc adc add add inc adc add add add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 and xchg push or jae enter or sub jecxz xchg inc xchg aam fldt push inc aas or test push jmp mov push sbb aaa add mov add xor stos or adc push dec cmp fwait jne xchg stos xor adc mov ljmp lahf lcall sar (bad) cli inc jmp insb pcmpeqw mov cmp lahf or mov push sahf pushf push mov sub and add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg sbbl loopne adc mov aam mov repz dec aas sahf push push mov push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 and ss imul ds cli adc xchg aad lods fsubrl outsl cmc scas jp inc rcll cli ljmp pusha std cmp stc xor and sub rcrl std xchg mov lea insb push jbe mov stos gs jns (bad) ficom fs (bad) jmp xchg fistp mov xchg sbb in pop push inc xor and int3 mov and jne shrl jle imul aaa mov pop xchg pop stos pop arpl daa and sbb jb mov sub shll fxch sub push rcrl into push mov rcll and pop xchg out fildl sub xchg dec dec mov add mov sbb cwtl xor dec lock and inc jnp sti pop dec cmpsb into (bad) enter repz scas lret and out dec mov or inc cwtl push or and lock cmp and xor lcall jmp sbb ret in mov jae jns jb xchg ss xor xchg cwtl lods mov outsb lret leave nop lret add mov jbe fsubrl enter dec inc popa std mov adc and mov mov mov xor cltd inc pop push int mov jb pop push (bad) cmp stos into jge (bad) je pop jnp in jge std cmp push push inc insb int3 mov fcomp sbb or or push sbb dec add mov out fs test xchg test clc xchg xor lret push leave mov pop push ret mov cmc dec outsb shll fprem1 push push scas les and iret fwait lcall add xor icebp js adc inc dec (bad) enter ja xchg sbb push inc adc cltd (bad) lods ror sub addr16 adc lcall std xchg hlt dec loopne jns pop out mov andl mov test fnstcw or mov cmpsl cmp arpl (bad) mov out js jno mov jg sbb xchg or rorb inc adc push pop and sbb add sarl adc aas push insl mov push inc xchg pop jns nop cmpsb std in jbe xor inc jbe add push cmp jnp inc pop push cmp dec dec add dec dec push or bound adc jle rclb or imul inc jecxz lods mov pop aad cmp fldenv mov dec test jnp scas mov pop ja lret or push imul jl lahf sahf fisttpll popa push mov mov mov mov rcrl sbb dec add (bad) arpl jg mov pop (bad) xlat mov dec jo mov fld xor xchg jne push (bad) outsl xor mov jge,pn mov hlt fmul cmp (bad) jl out mov mov loopne out decl or loope sub imull gs inc shrb loop pop stc in int cwtl test ja in aad and mov into cmp scas outsb push sub sub int3 in sub nop jbe push jmp (bad) loope push inc or mov fiadd sub aad movsl repnz dec (bad) mov sbb leave pop pop push mov pop mov jp pusha pop jmp icebp dec cmp cltd cwtl fnstcw inc mov cmp decl mov cs ds pop dec ss or sbb jg push pop aaa lcall xchg cltd jp xchg pop stc push jns jnp pop arpl orl push mov sti aam cmp int3 (bad) xchg insl xchg push outsb popf or sub mov das xor fldl2t xor imul test int xchg aas idivb mov xorl mov sub cld std in jb pop fsubr jae or lahf push mov pop lds push aas and mov pop insb mov (bad) outsl inc cld gs stos cmpsb shlb fwait int aad add sbb adc dec (bad) rcrb sub str adc outsb rcrl pop arpl mov cmp sbb pushf and std mov test push fs xchg movsl aam movd scas sub scas repz ja sbb es out cmp fnstenv ss gs movsb clc xchg mov xchg bound push mov fistl or pop stc scas adcb sbb mov scas and cmp mov pop lods mov mov jbe inc sbb cmp subl inc sbb add iret sti add into lret xchg lcall jae sarl cmpsb das test push xor cmp rcr dec jo sbb or pop push mov (bad) xchg lods repz inc adc frstor cs es xor sub (bad) pusha imul movsb or pop sub mov into movsb pop insl mov jne out dec insl inc cld mov and mov scas push adc push lret popa cli loope (bad) mov faddl push ja arpl mov dec popf sbb das adc adc inc imul push inc adc jl mov inc ror movsl push add (bad) into dec xchg lods ret mov jne popa xchg in mov out adc adc xchg dec enter xor repz mov add loop push gs mov notl and in push adc (bad) addr16 inc push jle cmpsb fiadd push cmc das mov jno push dec fdivl rcrl push std arpl dec push mov rcr and jecxz outsl decb adc push sbb jp popa cmc aad test mov mov lea mov repnz cwtl je sub jnp jmp xchg mov jno les jb xchg std mov mov addr16 out mov fsub nop dec in mov je fwait adc imul pop ret call js (bad) mov aas out fmuls call sub jg pop in out and mov mov jg jle pop push fnstenv subl push scas mov pop xchg push cmpsb aaa cs add cld std shrl jmp sbb or inc ds push loop scas js sti mov out stos adc repz jb add mov xchg push pop test je mov mov out jns (bad) or in push mov je loopne inc (bad) cmpsb sub sbb repz in jge out data16 je push mov in sub lock gs aaa pusha fsubrp int das cmp dec das fadds popa fisubr xor fcoms sub push xchg lods fwait cltd test push and fstpt pop scas loop leave mov jnp hlt ret in fist xchg jbe nop lea xchg addl lcall add int3 outsl and inc pop ss test ds scas int jno push lret mov jg iret adc xchg sub mov xor (bad) adcl arpl (bad) addr16 stos lds xor mov mov push mov xchg or aaa (bad) jne inc sub and popa fcomp mov push (bad) call cltd dec mov sbb inc push push push pop insl mov push add add inc mov fimul sbb loopne fs sub pop push outsl cmp scas or lods out xor or mov push jle dec lcall dec aam das xchg inc insb cs fdivrs (bad) (bad) js adc outsb add dec or adc cmp cs push clc inc (bad) outsl popf movsb das and pusha pop dec mov cmp mov cld testl xor (bad) jl bound xor enter in loope int mov dec inc and lret pop int3 rcl into int3 cmc adc cwtl mov lahf aaa stos test mov lret dec mov shll loopne aas dec dec pushf jmp movsl and xorl inc add and add das (bad) rcll dec in xor push loop lret iret aam jno lahf add aaa (bad) scas add bound sbb ss jmp mov inc mov sub mov (bad) jge (bad) adc sbb lock jg mov sub xor cltd lret push stc and les int cmpsl push xlat jge ret std fistpll pop add roll or pop ret sahf adc addr16 or popa (bad) adc sub icebp cmp clc popa push jmp test hlt dec test daa shrb jb insb fdivs test and and (bad) mov xchg aaa movsb mov mov jae scas dec pop xor les mov aam inc rcrl cmp stc lea inc sub rorb lcall not mov sub (bad) mov repz dec repnz test sbb repz cmp cli jl das jnp or pushf jb xchg lret cmp mov xchg jge cmp outsl cwtl leave movsl mov dec adc cmp scas xor xchg jmp mov (bad) xchg lea jmp mov and repnz add adc or out mov in mov inc add dec aad mov call int3 mov outsb add xchg in dec mov jno xor pop mov pop pop (bad) or mov in movsb or mov movsl (bad) mov pushf lcall push inc jb inc xor push (bad) loopne popf imul ss leave jbe add jns imul cld inc mov mov push pushf shrl call stos add jge stc or push out push mov xchg jo fbstp jle xchg inc cmpsl fisttpl test repnz xor jg les loop inc push enter test icebp gs cmpsw (bad) mov mov outsb movsl or jmp cmp add pop xlat in or lahf cwtl fmul test lock dec cmp (bad) cmpsl outsl sahf sbb sbb pop push pop ljmp mov mov mov nop cmp aam inc lock sub fs mov dec mov xchg or jmp pop dec sub cmp ret sbb addr16 cwtl and xor call jmp cmp sub jb jge mov aaa pop lret fwait (bad) ja into (bad) ja xchg xlat mov xchg mov mov add jne sub push pop icebp jae stc cwtl xchg inc mov ret insb and push xor sub adc popa or dec dec push jne pop sub mov (bad) pop sub in xor nop jl test (bad) or nop jae (bad) clc jbe mov push sub sbb stos dec pop add xor pusha fcompl add xchg xor ss cwtl gs (bad) and loope lret jnp stos jns test lock mov stos bound (bad) hlt cmovnp mov xor and sub cmpsl jp cmc inc cltd mov or jmp cwtl cmp jb cld mov mov mov (bad) aas push push popa sti cltd mov inc out add fiadd scas das int3 sub ja cmc ret cld mov sahf pop push das jae adc sub pop lds sahf (bad) fwait or rol test nop mov pushf and scas adc push and clc jle jp movlps xchg pop clc hlt adc scas in sahf xchg cli fiadd jle rclb jbe out inc je xor push xlat insl movsb out sub jne push divl jmp fcoms sarl lea add adc cmp (bad) add mov outsl xchg in dec jl lret ds popa jo shrl lret adc aam push pop dec addr16 push jg cli (bad) cmc lea or jmp jmp mov mov push sbb aad mov inc movsb mov int test pop dec mov pop dec push inc fwait ja pop mov out je jmp into fst pop leave ds clc or or cmp lods inc mov ss sbb sub or dec and sbb push mov pop sbb lods or mov and pusha xor add jb dec leave das icebp mov lret notl xlat ret int3 gs aaa xor adc scas pop xchg scas out push lods inc mov lds mov dec inc mov lock sub adc out stc in lea jbe sub fdivrp pop jg adc stos mov lock stc mov pop or dec and push mov mov scas push aad call hlt dec xchg aam push mov sub orb push lahf cwtl sbb data16 hlt mov add fcmovnbe mov loop xchg roll jno fiadd mov dec xchg addr16 mov jmp not and jno add arpl lea ljmp adc mov outsb je push in cmpsl pop cli jecxz sahf out add pop sub inc jmp pop repz dec jne rol dec clc inc arpl pminsw loopne ja xor sbb nop (bad) push aam inc repnz sub daa fstpl push jbe fdivr xchg sahf lcall inc pop fiaddl cmp out sub ret mov mov xchg (bad) mov push ror mov jl sub ret inc mov xor (bad) jns dec outsl push clc inc mov sub in jmp jg xchg adc xor mov insl rorb icebp xlat jecxz clc mov call sbb rorb ficoml in mov push sbb mov repz jbe ljmp lahf (bad) push ds mov mov in fs add in ret push ret cmp sbb mov jae cmp and sub imull pop xchg mov mov ja sbb inc cmp lahf jb test (bad) adc xor aas mov sbb jp hlt mov fisub nop call in xor xchg jmp fstpt leave cmpsb (bad) xchg add scas dec cmp push mov pop dec dec mov pop push jae movsl rclb dec xor sub cmp lods test mov popf stos mov in inc iret addr16 popf xor leave xchg cmp mov jmp mov xchg dec scas (bad) in lds sub xor ljmp mov mov sbb aaa icebp push lock add imul cmp inc inc push and (bad) rcl adc mov lods and xchg xor xchg jecxz push mov ficom xchg push xchg xor and dec cs add push mov mov sub cmp xor mov and cmp clc push mov sbb ret sub scas and cmc push dec sbb xlat jae popa jmp (bad) rol inc jb ret pop into js jg xor popf insb out dec jnp mov lret out loop inc mov push pop subb mov hlt sub adc iret or fcoml lea arpl dec (bad) dec cwtl push push rolb gs or mov xchg inc mov (bad) ret mov lret xor les int3 scas movsl push out gs mov jne mov pusha sbb mov insb cmp outsb daa cmp inc repz cmc xor outsl test loope mov addl mull scas lahf rcl lret scas cli mov jae and inc cmp jmp in cmpsl xchg cld cmpsl xor and inc out ret mov inc add pop stos jle jb inc cmp push out and outsl fs in out xlat cs ret mov aaa mov or test jne pusha loope sub dec push lds loop (bad) adc ljmp sarl mov imul loopne sti fstpt jg jecxz dec push (bad) std dec inc pop inc mov out data16 repnz push cmp aam mov dec ss inc pop jb out test adc icebp lret sub out data16 lds dec push imul mov sbb cltd dec pop push mov insb jno mov mov adc sti dec out jg lock cmpsl cmpsl xor sbb cmpb jnp movsl (bad) stos aaa aas mov dec (bad) dec inc jl hlt clc incb icebp cmp mov in sbb sub push cld inc loope jmp jecxz test mov add push mov in mov mov fcompl ret fcmovbe popa clc fsts xor jle popa aad sbb in ljmp mov mov inc pop cs insl (bad) scas cs repnz mov (bad) aam add ret (bad) or sub fcoml jmp aad repz dec and add std push ja push call xor cltd jne cld inc sub popf dec adc iret aam cmp popa fdivl das or jecxz or jmp pop mov dec (bad) adc and xchg icebp sub cmp adc stos in or sub lock xchg xchg push repnz push daa rcr cmc mov addr16 xchg inc mov sbb pushf dec lods jge imul sub mov cli lds xchg inc mov inc push adc shlb pop or mov outsb lock movsl xor js loope pop inc (bad) fist add sbb mov mov inc icebp add bound movsb xchg cmp or fidiv outsb xor aam imul push sti aad inc testb mov push sbb ds jae rolb xchg mov xchg mov inc das xchg (bad) jae or adcl andl sbb sub mov adc add nop std popa and or push pop push dec jno imul pop push leave xlat popa xchg inc sub pop loop ret cs arpl mov mov cld pop rclb push or lret and (bad) mov mov inc test repz stos out rcrl and nop sub (bad) mov inc test arpl push pop push mov scas outsb test mov dec jge push fimull cwtl push inc fistpl push imul test sub inc je adc inc nop jecxz test sub xor adc shl adc cld jae cmpsl mov dec and (bad) aaa cli mov nop inc popf mov in out movsl and insl pop ret push out jnp test sbb inc jne mov add sub (bad) or xor adc lret and inc add push mov sbb mov jnp pop fcomip imul sub dec repz call jno fsub (bad) or fmul cmp inc addr16 clc js push cmc mov push sub add mov cmp and push sbb or jbe mov jge mov jo in inc cmp mov pop ret add mov dec push inc jae fwait mov in sub popf jo pop adc dec pop push xchg repz dec mov inc (bad) inc repnz sbb sahf sub cmp xchg (bad) sti sarb es xchg cmp ss xor lds ljmp sub and pop push (bad) ds or sub mov aas sub cmpsb push test (bad) and imul and jle cmpsl stos mov outsb faddp inc mov xchg xor push mov sub sbb sub and leave and les mov adc aam push int3 std outsl stos push mov lret or pop mov inc pop lods pop outsl lods jge push int xchg cli adc or cmp call pop dec xor jne pop fldenv sbb xor push pop sbb mov sbb sub cmp jecxz inc pusha scas and pop stc nop jns add push or (bad) mov ficompl xchg xor cmp jmp inc jl roll cs add dec addl cwtl sub cwtl or out arpl jge add ror fidiv (bad) jns fnstcw cmp fwait in in mov push int xchg and pop scas mov or ljmp (bad) movsl cli gs jb ds pop push shlb cmp push and push mov movb mov cmp push pop cmp mov lcall lods xor mov xor int3 inc xor add test xor outsl test or insb sub pop adc cmp mov and js xchg inc jne sbb popf mov jle sub adc out mov iret jecxz js push test enter repz and dec aad aam int3 and int movsl imul rolb cmp pop sbb (bad) push lds cs push nop cmpl repnz push fistp ljmp mov mov mov bound or xor mov ss out push (bad) cmp jle (bad) fnstcw pop (bad) ja je add xor add push mov or insl sub or push xchg xor sbb lea popa loop popf sbb bound cs cs outsl add push (bad) divb mov shll pop leave addr16 dec aad push sub inc lret inc bnd dec add fnsave mov push out int or loopne (bad) pop aas adc pop std repz cmc sub sti xor mov mov add inc push xor data16 (bad) gs mov ja sub (bad) mov jns xchg (bad) repnz dec inc rolb pop sbb sbb stos inc mov inc jmp (bad) ss je inc cmpsb mov ret (bad) sbb sahf cmpsb jb adc jns lcall sbb cmp cmpsl lret clc and in div pop adc xchg mov fwait lods adc jle add int3 int3 int3 int3 int3 int3 and cmp (bad) xor sbb sub and push jmp (bad) aas sub fldcw ss imul pop dec xor adc or jo xchg (bad) ja test cltd adc aas dec mov imul into and es pop add frstor test sti jo sub fisubr add out add sbb push mov pop sub (bad) xchg cmpsl cltd in or test and lods mov push inc xchg test cmp dec xor (bad) jl andl xchg push es das dec dec inc mov ss jl (bad) push lahf sti xor dec xchg mov lret ds and and divb sbb js sbb in sti aaa cmpsl jl inc fisttpll cmpsl mov js test in jns test xor into out dec jmp pushf add addr16 das popf test imul dec (bad) je xor xor adc test xchg add mov enter (bad) mov jae repnz (bad) sarl mov mov mov loopne xor int3 aad push fildl pop sbb ljmp aaa jge das or ljmp (bad) divb xchg push pop rcrb loope pusha idivb int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 xchg ja rclb fbld icebp or pushf lods mov hlt adc add pop inc xor ds outsb mov pusha std cmp and aam shl push and lcall in lock decl push fdivrp lahf lret nop test imul les popf sub ficomp adc sbb int3 enter jne scas inc mov sti dec sub sub jmp insb jb flds out and lock out lods cwtl xchg call push aas pop mov inc xor adc jg dec add inc out scas insl jne mov pop jbe lods xor cmpsb fist (bad) inc sbb push mov push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rcrb insl sbb cmpsl imul in cmp lcall mov xchg xchg pop adc jns addl mov push mov loop fnstsw cmp popa inc mov fwait iret lds adcl mov and loope mov shrb inc push xchg enter lahf inc jmp push mov xor mov cld lds add lret mov adc stos (bad) xchg fimull call cltd test sarl jo xchg pushf push cmp fstpl cmp push and mov notb out mov inc cmp cli aas push addl pop inc mov mov jns loopne push ror bnd por or lds sub pop inc push int3 add adc mov or add and mov fs (bad) decl xor bound out or and hlt mov adc shrb ljmp sbb mov and xchg mov inc lea mov pop jae leave mov mov jbe (bad) cmp scas mov sub scas fdivrl xor mov fisttpll adc push xor pop popa push jbe pushf mov roll or inc into test js adc add xor aad cmc dec mov mov stc popa xor xlat push mov or mov push cmp loope aam mov in cmpsb xchg dec sbb aam adc fwait into (bad) ss lahf xchg sub fistl shrb xor inc and sub movsl in fild jne push xor dec (bad) rsqrtps lret jecxz fild push cmp push test inc es jno lret fimull scas sti popa jmp jo shrl (bad) and imul lret pop orl roll mov xchg subl shrb jbe mov gs mov xchg out sub rorb aas or inc movsb jmp push pop pop or inc dec inc inc inc js push adc pop leave insb iret mov movsl xchg pusha movsb adc mov rcl mov lea push out pop inc xor out pop in clc push pop aad rol ss push sbb in add leave (bad) push jb test imul aas adc fsub dec add adc xchg xor dec cmp dec sub adc test pop or sar mov stos jmp stc sbb lcall jl mov xchg cmp push xor lret mov and ja xor idiv xor cmc das (bad) hlt mov sub cmp sbb jne jno pop and imul das call rclb mov repnz mov imul into sbb mov mov cli mov sub (bad) daa push push push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 and ss imul cmp pop leave rcrb in ret lock repnz leave leave jno lcall mov lock sbb xchg sti jmp gs adcl mov fisub repz mov ret (bad) jb pop ljmp pop add mov mov imul insl jl fcomps jg xchg jnp mov inc pop (bad) adc inc add lods jmp mov call ljmp rorl lret popa ret (bad) mov jmp cmc in fidiv adc in test scas das or dec push (bad) loope adc (bad) adc jecxz jb adc loope sbb movsb push sbb jmp mov sti mov jle fldpi dec fwait or sahf push sub test sbb mov add iret mov xor pushf lret sysexit jp (bad) mov pop push xchg push and fistpl push push push rorl push movsb shrb (bad) mov bound inc ss add and aam out sub mov mov cmp jae cmc and pusha xchg and sub cmp imul mov jecxz out push dec adc js mov das sub sbb ret vmovsd shll cmpsb popf adc fnstsw jle mov test scas mov mov or jge es add lock dec clc lock mov mov enter xrelease insl push shrl and lret insb sbb dec add mov cld in xchg out popl fistl fldcw mov insl inc jg es dec adc inc mov adc add xor loopne in and sub fiaddl push daa shll mov decl jns dec and jle xchg leave xor jge into stc or imul (bad) sbb mov pop movl sbb ror inc lock outsb xor jb and mov mov xorl loopne dec add into cwtl addr16 pop inc ss inc dec fstpl xchg xlat ret jecxz sub cmp push mov pop lahf fidiv fstps sahf movsl addl and fldl pop (bad) mov aad jg daa add inc inc vxorpd sbb test in aad inc cwtl add mov test push cmp xor inc adc add in jo out dec (bad) (bad) mov fs int inc push loope and adc push ds pusha insl dec sub popa popa sbb ja and test pop cmpsb test stos dec xchg adc push or add adc clc cli xchg (bad) mov lds (bad) in cmova mov icebp jb lcall add lock push fbstp test jae mov sub int mov jne ret sbb cmp stos mov and or add es jmp mov aad pop ss lds mov or nop insb fdivrs adc mov mov push call xchg adc ds fimull inc cwtl gs mov int3 push and repnz call dec repz mov fisubrl sub cltd dec dec pop push mov mov inc sbb xor fnstsw and cmp in popf rcrl inc mov dec in lods daa xor js outsb jae loop data16 xchg or movsb enter negb adc lods pop xchg or dec daa sbb fcomp push jne xchg sbb test sbb out mov mov pop dec test pop pop in inc jge push jge pushf loop lcall pop and int adc jne push dec in pop addl iret test (bad) loope cmp in les sbb (bad) ljmp pop xchg cmpsb mov sub shrb lret jo (bad) icebp push mov adc and cmc cmp xchg out imul xchg sub mov cmp push sub dec lahf mov iret lods test fcoms mov (bad) dec sti inc cmpsb push mov add xlat pop xor push pop mov push or dec mov test (bad) shrl aas (bad) dec pop ja in or mov jecxz pop fdivrs test push cmp jne jle jno add icebp cmpsl lock mov das icebp lretw aam mov inc scas test jns jns xchg lds push jae aaa pop cmp les fsubrp rcrb clc sbb sub sub call dec ljmp hlt or mov mov jns adc inc out cmp push jle scas and or nop lret add pop push and inc dec cmp lahf push add cmp dec or rcrb divl sbbb xor mov in sbb push in dec (bad) out pop and test addl mov arpl mov mov mov pop mov ret cmp inc clc xor icebp fildll lcall inc lahf daa fwait lcall cmp mov mov sbbl cmpsl aam xchg out test mov pop (bad) sar pop and jne pop pushf (bad) adc aam leave je dec sbb push cs xlat add les push pusha cmp int3 dec cs sbb and insb push inc cs jns in mov out mov hlt adc or out or arpl fnop fwait jge inc sub (bad) fs sub xor mov xor pop movsb arpl movsl es into sbb xlat jecxz sub movsb (bad) negb pop or push jmp sbb mov (bad) xchg push loopne je rcll sub and dec mov loope xor push adc movsb dec xor add mov icebp imul adc mov inc sbb loope xchg stc es sahf inc rcrb push mov jg cli inc ljmp cld call aaa mov pop fidivl and adc mov mov fmulp lds in movsb fcomps pop outsb test movsl sarb sub xchg les mov fistl inc xchg ljmp loopne fisubl add mov xchg add adc adcb out in aam pop aam sbbl lea add js xchg pop adc mov test push loope std out sti mov push push mov rcrl xchg jns sahf paddsw into (bad) cmp test shlb icebp and enter dec sarb fsubrl rol addps jb mov jb lahf (bad) idivl xlat idiv call inc dec sub rorl mov ljmp pop mov adc lea fadds inc test dec loop adc mov cli jg and mul inc pop mov and cmc addl sahf inc lock sub bound imul push mov sub ja dec popa dec dec sub int3 aad shr pop cld arpl mov aad into test mov shlb sbb (bad) adc inc call mov aaa das xor mull xchg sbb int push xlat mov cmp mov sub dec popf js jo xchg mov xor fisttpl lods pop das mov iret xchg fdivl inc dec icebp stc or xlat outsb outsb (bad) mov mov loopne cmpsl jns cmp into out ljmp push popl aas mov scas cmpsb jl mov cmpsb push andl dec pop adcl jge stos mov std gs sbb mov sub xchg inc movsl (bad) pop xchg inc mov push push adc ret ljmp pop pop mov cmp scas pushf push fxch dec cltd cmpsl ja jg (bad) or fcom enter add jg call cwtl imul and movsb push mov inc test cmp sub andb push sub scas push test loop jns push popa loop and cmp fcomps cmp xchg jmp leave mov mov insl xchg (bad) adc jns stos mov and xchg cld hlt sar xchg xchg and in and out je stos pop lods mov cmp jecxz adc add repnz add add jnp in add cmpsb dec mov xor mov popa pop cli xor subb ss sbb mov add leave addr16 push sub in test sbb inc clc or pop adc fistpl (bad) pextrw adc push push stc scas aad mov dec dec jo xorl stos inc push pop xchg sub jp je or dec and mov mov inc add jge test push daa jmp xchg out das lcall sbbl cmpsb int3 sahf rcrl fimull cli cmpsl lret adc jbe xor ret shl aam (bad) xchg adc outsl imul ds mov pusha or sub fsubr js cmc lods (bad) pop int3 fldenv push scas cwtl or ds mov mov or dec pop mov sub sub cmp std in cmp mov cmp push lret lock (bad) xor jmp adc dec (bad) (bad) sub add cltd enter and add mov inc pop fwait enter test xchg sub cmp test out popa xor ja sbb push roll sbb bound xchg fldt popa popa dec mov sbb cltd push in inc int3 push mov aas xchg mov xor and orl fs repnz sbb add mov clc and loope inc dec insb popa ficom add sbb aam adc pop push lock pop (bad) pop sbb push mov adc cmp lods lret cmc lods cld sbb (bad) pop push inc (bad) and xchg sbb inc imul rcll inc mov mov mov ficoml push out mov xor bound in sbb xor rorl jl push in add sub xchg outsb xor pop mov inc hlt jo jmp (bad) inc jno or add pop mov out cwtl call add push out push or rcll mov mov or mov inc je add data16 push fcompl hlt mov out xor std cmp adc xchg fwait dec jmp mov out jge sub cmp out ss ljmp addr16 and es enter xor mov mov push inc sbb loope mov mov fs aaa fnop mov arpl in test into psraw and add lds incl mov cmp cmp adc push mov push jp jo les pop nop aad icebp sbb movsl xor or ret mov xor nop insl stc mov or repz test lds int3 lea pop bound xchg mov cmpsb dec jbe mov xchg xchg or mov dec mov and jp ljmp cmp subl sbb dec inc inc icebp repnz mov pop (bad) scas push mov sarl fnsave cwtl pop clc mov dec ret jp les cmc (bad) jnp call jle cld ds les dec leave and push or or jp gs loopw out out or out jl mov int3 sub xchg adc es rcr mov jecxz in in xchg sub mov inc sahf por jne loop shll vmovntps aam xor pop outsl push push xchg fisubr int std into jg repnz insb pop mov or aam es or xchg out int3 (bad) std fcmovb lock sbb call lret (bad) pop mov iret les lea out fsub leave loopne cli call mov adc ja jg out mov das pop jne and nop fidivl sub sub in mov jmp xor movsb enter (bad) loopne and mov inc shrl pusha xchg aas das setne jb mov mov enter inc in in stc test mov fwait mov mov sub xchg loop sub lcall gs imul in xchg scas dec fsubl pop sbb pop xor fsub or (bad) lcall mov pop pop aas addr16 fimull out sti (bad) int sub mov test (bad) pop jl lcall gs pop cmp adc xchg mov enter inc repnz xchg xchg loope jbe stc loope pop nop test lds outsb sbb push addr16 xor cmp pop jno lret push cmp mov mov in mov add jmp lds pusha or notl push gs mov cmpsb mov lret sub je popf xor mov (bad) aad and cmpsl pop pop or push lcall push repnz out jp repnz inc sbb add mov pop leave mov ja (bad) int3 push xchg ljmp test pop int3 cmpsb dec adc clc pop add jns xor fstp mov das in imul xchg xchg dec ja int3 or pop ret movsb (bad) rclb jmp add pop push (bad) icebp test inc imul repz lea dec fs (bad) add mov xchg push push jae sbb sbb sub adc insl push pop out lock es jb mov mov sbb or sbb xchg test push shrl pusha mov jge fmul hlt xchg aam mov push cs outsb ret fstpt mov xchg dec lahf (bad) jne sub and jne push fcompl adc or pushl xor adc xor sbb mov jecxz enter pop jge mov fidiv inc nop jl push jae jo ret rolb data16 mov std hlt adc in lcall mov dec mov or aas stos lock push xchg adc pop push dec js sbb ja cmp inc cmpb bound fldcw dec adc nop call in and xchg jmp fstpt leave cmpsb (bad) xchg rolw scas dec cmp push mov fsts mov rorb inc shrl mov xchg dec xchg test stos and lods mov sub aam pop mov dec jno mov int3 sahf mov enter mov loopne hlt xchg add hlt fnstenv loopne flds adc xor mov cmp testb fmull (bad) ja sub les jae lcall out xor in jge,pn lods stos inc outsb jmp stc popl gs inc cmp out xchg push adc adc sub mov (bad) pop in jmp adcl xor xor mov fdivs scas cmp sbb jl adc push rcll (bad) es out (bad) push mov cmp xchg pop loop cli sbb dec push xlat push push push inc jle mov bound imul add fwait xor lds (bad) jne out shl pop xorb pop test daa mov lods stc fmuls xlat inc adc cli lahf int3 int xor xor cs inc cmpsb (bad) sbb cmp add scas stos dec mov leave sub fnstenv imul iret jo popa xchg pop outsl ficompl movsb lret mov pop and xchg jg push sub push pop xchg mov or mov sub and stc test adc push and jmp cwtl jle adc mov add aas mov (bad) mov in push and push addr16 fsubrl mov adc leave mov repnz push cld pop test movl pop arpl adc sti aaa aam mov pop aaa ficomp mov dec mov incb jae mov (bad) mov insl pop pop (bad) loope test (bad) out ljmp dec dec cmp (bad) mov int cmp pop mov sarb nop sahf fiaddl inc xor inc pop adc xchg lret imul bound dec sub pusha jbe push pop sbb dec popf pop aaa lret xchg mov xor in jg xor incl push jne dec ds gs jo jl dec (bad) xor cmp xor inc idiv test arpl jge data16 mov outsb loope clc mov ja cmpsb ret sti jle sub lahf push cli mull cmpsl mov dec int dec inc mov mov mov cmp add xchg (bad) mov cmp aad pop sub imul mov fcoml fs cld sub and inc or or mov ss push or insb inc mov and sbb adc mov jb data16 imul clc stos pop aaa scas add outsl std fldcw jmp aam push sub xchg adc outsb or push dec lahf cmp loop js aam inc add cmp mov xor add ljmp fcoms pop or int3 xor pop ret xchg mov mov ret rolb cmp std mov lahf ja xchg je notl mov mov jg push sub cld add jmp (bad) das adc fs das roll outsb repz sarb add add push dec out mov pop in inc inc cmp push popf add scas es sub inc setle add push out push dec fsub scas sahf loop or push out (bad) movsl cmpsb mov xchg xlat dec gs (bad) lods mov pop jl mov xchg dec or mov in push inc decl std adc fs lds jnp jmp (bad) int3 out and mov shll test lcall sub nop orl mov std adc (bad) out (bad) jmp xor je mov (bad) jp sbb xchg mov stc add xchg adc mov fsubr jp sbb inc mov popa mov mov aad dec jmp jnp or xchg fwait push dec int3 movsl jb add push aas dec jmp loope and push loopne and andl jle lods test mov xchg ret lret stos push lods jp adc arpl out hlt or cmp repz mov xchg push aad cld jmp xor add jno jo xor dec adc bound and hlt fisttpl or mov rclb mov xchg lahf pop gs fstpl mov aam inc add pop stos xchg int3 cwtl out sub repz rcrl jbe daa add repz or mov int3 clc cmp fmuls xchg pop testb jecxz shlb loope data16 adc dec jae add or imul dec mov push daa xor xchg push sbb add cmpsl orl or (bad) aaa aas push int xchg popf xlat cmp test adc xor jns out mov addr16 xchg aaa call or dec lret lret pop loopne mov pop dec jo je js imul xchg mov (bad) ret arpl cwtl orl aad xor push pop ret out fwait dec xchg and std cmp mov andl imul arpl cmp lods sti adc xchg cmp les dec mov jmp (bad) leave sbb sub xchg jg push jo push mov push cmp bnd je mov dec lret jne cmp ss int push adc sub imul dec popf mov fnstenv mov pushf adc test mov and mov jg xlat dec addr16 or icebp cmp mov jecxz fldl push adc bound add mov frstor sub dec inc jecxz mov (bad) xor inc fwait (bad) int rorb lret xchg add fistpll inc cmpsb ljmp out es add sarl pop in out sbb mov rcrb aad or fimul xor loope addl scas popf dec cs or aas dec lods add addr16 insb mov adc loopne cmpsl cmpsb dec xchg scas int sarb (bad) (bad) jnp dec fldt test bound gs pop or test pop ret test leave and loopne insb cmp and fucomp inc loopne icebp dec jecxz test inc xchg cmp hlt cld adc dec mov cmp mov cmc jg push mov and inc ds dec ja inc jne cmp cmp pop xor fcoml or enter sbb pop sbb push xor xor (bad) (bad) mov xchg dec ret inc jg daa fild pop in jno pop push inc jp imul adc inc inc mov std sbb rcr mov sub dec mov xchg sbbl xchg push adc dec aaa into xor test (bad) rcrb fimull mov push ror ret es aad and outsb mov and pop repz movsb stc cmc inc stc add cmpsl xor fcomp loop cmp movsb push aas jge movsl jge cli pop xor sahf mov cmp and out fnstsw jge add loopne pop and xchg xchg cwtl mov sub mov leave mov in add leave pop sub daa out in cmp or mov lret je sub scas jge inc xlat je dec int3 std mov fistp stos test pop aaa jl lcall js adc push push mov out scas call inc fldt fisubl ds cmc daa test mov jge out lcall test push xchg lods inc in stc les mov add jae enter jmp push mov xchg sbb les jnp fnstcw sub cmp jmp add xor addr16 sbb insl or add leave into imul pop sahf inc push arpl repz and sahf lods mov xchg mov fcoms out lcall sbb jns pop mov add divl mov fidiv mov ret add bound js adc out mov sub sub roll xchg clc das jecxz mov imul dec sub out repnz or add jp iret js popf or andl cmp mov jmp mov xchg test and lret add mov push inc jl shrb adc cmp inc lret (bad) xor in xor cmp ja std mov fucom mov pop iret insl jo mov das jae ficomp mov stc mov test mov loop xor add in flds fldt jmp in jl lahf lock mov push int3 xor dec push movsl mov fdivrl sbb xor pop inc test add lds mov xorb push push repz movsb cmp mov cwtl mov add pop cwtl mov adc addr16 shl ss push rcr rcr add xor les lock xor (bad) jecxz inc push popf push in out insb adc jb mov (bad) dec or ds jne push out pop sbb jg clc out xchg shlb (bad) jns jbe xchg cmc adc cmp std imul jb test pop ljmp xchg sbb add pop fdivl push push push popf adc repnz jo pusha inc lock js cmp orl xchg dec and fstpt adc xor inc ret aam mov jp loop sub inc out jbe jb pop loop call (bad) dec test xor ljmp mov inc mov (bad) insb sbb enter mov push mov das mov cmp dec cmpsl popf int or push dec and push scas ret daa add data16 icebp xor mov lea lods xchg popf iret lahf (bad) std bsr aam int (bad) leave jp stos (bad) mov out xor scas pop int3 add jmp addr16 pop fnsave cmp add fwait pushf loop sub mov pop mov adc les push or and adc fpatan xchg xchg mov xchg and ret jmp aas jo xchg pop fist insb push orl add pushf das das pop cmc loopne mov inc repnz (bad) icebp jbe negl inc adc push lods cli out (bad) cmpsl mov repz sbb fs push call ja sbb push fdivs aas xor rcrb add push (bad) mov jb sub or push movsb or shlb dec push sub lret push xchg (bad) push fs mov jno and cmp sub sub test xor stc push (bad) jp sub jns mov sbb sub pop mov ljmp add mov aaa mov sbb dec mov test stos mov push sub fisubl lock les rclb mov xchg cmpb repnz lret inc jns mov mov test or mov ja inc xor push cmp in mov and sbb (bad) mov es or mov jae (bad) mov pop xchg mov stos sbb call sub int3 and je test icebp mov cmp iret or pop inc in lcall (bad) cmp stc cltd aaa push lea clc inc icebp jge mov stc cli out mov lahf mov lods sbb and test movsl (bad) and jnp scas sub jo inc lcall xor bound das or in or dec mov nop loope test jg enter adc inc pusha xor aaa xchg fldt fisubl aas aam stc lods xchg dec fmuls jl pop out push xchg sbb sarb cmp sub pop adc inc adc in cmp scas push cwtl pop add mov add out mov add cld ffreep xor in fisttpll jb test mov push gs scas bswap xor fdivrs fs lcall mov out cld fisttp jle cmpsl sysexit fmuls mov mov (bad) inc adcb fidivr push lods cltd iret xchg dec arpl (bad) in mov loop sbb sub cmp daa mov cmp lret jno mov push or adc add int mov shlb out mov lcall aaa jg xchg movsb in pop push fs dec xchg test xchg inc pop leave xor das aaa hlt mov (bad) and insl mov pop mov into out cmp hlt lds adc imul scas movl sbb jg sti push movsb inc ret test mov fcoml fadds push dec in mov not mov jne pop fcmovne ljmp ja cmpsb inc adc xchg daa (bad) jmp cltd stos push cs cmp pop lods pop out lods fidivrl call popf in stc sub in inc dec test jmp stc push mov jl cwtl lock lret insl scas dec in enter fxtract in fs inc add jl mov loope dec lea imul faddl (bad) lock cmp ja stc inc popa fcmove stos leave mov mov sbb nop mov int3 repz cld push push xchg xor jle rolb cmp pusha into push xlat dec xchg adc mov inc jo repz push sbb lods lcall add and mov imul mov mov jne xchg je std aas lods lds ja jl xor sbb mov flds lock aad addl pop cmp cmpsb popa mov ljmp dec push dec and adc and imul fcmovnu mov ljmp das add stos pop xor lds in sbb (bad) (bad) xchg cli pop sbb adc and sbb push cmp (bad) dec int stc movsl lahf lret cld lock je sbb in sbb lods pop mov sbb or cmp fisubr jg icebp repz mov mov sub mov shrb or mov xchg stc (bad) insb sub dec jbe fcoms fnstenv int mov nop sub mov push mov sbb jae mov cmp sub mov pop dec dec mov ss das or fcmovb outsb cmp clc or mov lods addr16 sub push hlt dec jbe iret mov fldenv push push pop pop sub aaa adc inc cmp (bad) rcrb mov jmp xchg cli out fildl xchg push mov lcall inc outsb out or mov mov add pop cmp in ss stos or pop repnz daa sbb push push mov fistpll lahf cld add xchg lods in fistl sbb dec pop jle mov adc icebp fild adc cmp jo scas inc repnz pop mov xor ja (bad) mov lea inc sub lahf jle aas jns stos cmpsb imul push adc cld out pop test repnz xor xor mov jae push testb jo daa mov inc push movsb adc repz out xchg inc (bad) xchg cmc xor test pop sbb sub jp es mov pop sub inc cmp xchg test xor rcrb cli cmc cmc add divl push inc jae mov xchg into cmp mov iret popf rorl cmpsb mov inc into xchg inc or ret addr16 add and xor out lds loop lock sub lahf jbe ja imul lahf ficom lcall (bad) jmp jle insb pop lcall xchg aas pop sti rolb mov daa in mov mov lods fs int3 stc data16 ss sub ss std mov mov fcomps adc xchg xchg shr hlt ret (bad) insl dec mov fdivr or add sahf in dec (bad) out add mov enter adc pop inc and shrb jns or out fsqrt or stc push adc ret bound jbe js sarb pop cmp (bad) out push popa movsb into (bad) icebp subb (bad) out (bad) sbb add enter idivl mov inc lahf stos push mov movsb xor mov sbb les xchg sub and loope loope in dec pop in jnp pop ja ja (bad) lahf ret jnp scas inc stos test test inc fildl push pop push or cmp fadd jl dec iret inc idivl pop daa adc jg pop adc and lret or jmp rcrl stos out mov icebp inc shrb nop mov imul mov push pop mov ret sub sub push divb cltd fwait es adc sub fildll in aaa mov mov mov decb daa lret xchg data16 in into jnp cmp mov dec lods cld mov push xor call in pop and push jbe out popa adc sbb stos dec cmp push subl sbb pop jmp aas mov or inc popa jp push movsl or sub mov (bad) out and lds add (bad) dec sbb lock loope call xchg cmp imul xchg inc push in add inc sti out fucomi xor jb out push es icebp push loope bound pop jbe jg pop sbb add movsb sbb loopne stos sub iret mov cli sub push es sbb sbb inc dec cmp rorl mov loope lock subb xor test xchg into fisttpl es popf push stos xor inc dec je jo fstl les jnp aad dec xchg pop fwait das jge in sbb pop pushf xor mov cmpsl iret jle test mov leave and lcall test mov imul (bad) pushl (bad) jle aas cmc vaddss mov sbb imul mov push mov add mov scas push lret cmp jle adc (bad) xor sti pusha aaa push jle sbb lret xor insb js aas imul das les sbb rol addr16 mov data16 mov push sub add cmp pop stos in and sub dec ss movsb push xchg cmp addb mov mov push inc sbb jne mov stc add fidivl lds add dec sti mov andl jmp xor dec xchg cmpsb xor mov cli sbb cmp fwait (bad) pushf pop jp and test shr es aas or movups lahf mov mov pop outsl jb call push mov add push xchg push push and iret pop mov lret movsb out cld mov cltd push stos pusha mov xchg cmp mov arpl push pop test insb cli fcomps or mov sub push mov fimull ja int3 or push dec push imul scas pop mov lock sub jns adc loop mov in mov push cmp (bad) lock rcll fwait arpl push pop (bad) dec fnsetpm(287 mov cltd dec fwait dec mov call mov sahf mov imul push inc mov cld push cld jnp adc cmpsl mov fistpl jbe xchg pop adc pushf xorl stc (bad) fnsave in mov ds inc mov sbb cli and repz mov fs or and mov and push pop ljmp xor clc cmp cmc mov jno inc mov xlat xchg shlb push scas int3 data16 loop push mov popf or enter push mov ljmp jno lahf jg push dec gs mov or mov pop push mov fdiv in cmpsb dec rorb inc xor lret jp pop xchg dec inc xchg xchg mov add push insl ret sbb sbb dec dec add scas daa push dec mov (bad) iret cmp add cmp test push xchg movsb movsb dec ljmp daa pusha out sub xor imul mov xlat mov arpl sbb mov jmp mov in adc imul lret jecxz (bad) enter xor fiaddl dec in inc pop sub and das and xchg mov jge add rclb test xor (bad) neg xchg aad xor dec jns cmpl fldcw dec push mov mov mov jb scas cmp cmpsl sti push dec jp dec aam sub ss jmp jbe mov ds repnz push jno aas cmpsl jle add cmp cmp sbb or rolb aas stos leave xor iret jns xor jg push icebp and jmp (bad) scas adc bound fucomip cmp sti jnp sub cmp nop mov das inc pop sub cmpsl xor jo cs push stc jg push in arpl insb or xor call imul inc (bad) cmp repz and leave cli mov inc adc jae loope icebp jae xlat outsb into imul add and divl daa lcall and mov dec pop xor lahf divb push stos mov push fdivr push sbb outsb test icebp or lahf push xchg add scas mov out outsb lock add cmp inc mov mov push fimul push jae scas mov dec push enter int3 out out mov mov adc cmpsb push shrb mov add jae (bad) inc xor adc fnstcw hlt xor dec mov push in jge or daa pop rclb adc inc jae in shrb lds ja or gs out movl xchg pop mov sbb lods xchg cmpsl in (bad) (bad) xchg std sub jo push (bad) icebp cmpsb mov adc ss clc inc test in fildll ret mov adc es or sarl sbb mov fidiv mov mov dec fiadd mov sub seto adc (bad) cmc inc pop (bad) add pop pop fldt inc push dec mov out cld std jo addr16 sbb daa pushf dec and pop mov cmpsl idivl sub jbe sub stos repz cpuid push xchg xchg sar subb pop lahf inc or daa (bad) mov div cmpl lahf mov xlat add jmp push pop jmp nop or mov lret imul out dec lods xchg dec loope cmc pminub push push sub cmp out adc call add les sbb xor out hlt or ja in xchg sbb test sub push push aad add ljmp mov mov sub test cmp push mov rcrb mov insl mov cmpsb cld xor movhlps (bad) adc xchg jge into (bad) xor add xlat sbb inc sub test gs scas repz fwait popa or or ljmp rcl xchg mov pop pop scas decl push sub dec xor add add into mov clc pop shrl dec fwait dec xchg jge sbb aam or sarl fistpl jmp loop pop xchg xor sbb fdivl xor sub or xorl (bad) daa push mov push lods mov mov dec dec push mov adc lret dec mov and pop bound repz fidivr lds loop lods test ret push push in and or xchg inc xor lds cmp es dec lods dec mov and lods rol jno ljmp mov mov ret inc adc or outsl lahf jle push aaa or sub ret (bad) dec addr16 hlt mov jmp xor mov pop out mov ss enter mov ret adc jge inc lret inc cmpsl push push mov cmp push add out cmp or pusha cmpsb add fcoms cltd jge addr16 lret insl pop stos leave cmp (bad) jle push or xchg mov pop ffreep ret and js xchg (bad) popf dec insl clc (bad) in ret pop lods xchg out (bad) clc loopne nop movsb leave xor jecxz xchg sbb lret insb jmp inc pop (bad) loopne push clc (bad) jo or mov out xchg push shrb enter push mov cmp jns cmp mov sub jg outsb rcll aaa outsl test push push mov push sbb dec lret loopne in addl (bad) js sub shrl sbb ja sub gs out push sbb mov mov (bad) cmp inc loopne dec scas ljmp mov outsb add test (bad) mov pushf mov mov jg in mov mulb rol pop in mov jmp fs inc imul test (bad) rcrl inc jg xor push sbb mov mov pop jb cmp dec pop push das into hlt adc xchg fisubl inc mov out xor lods mov add (bad) nop pop aas enter rcll cmpsl jo loope fcomps push inc mov xchg and xor mov orl (bad) inc mov out test repnz jecxz mov xchg scas dec nop jae mov dec sub loop in jnp push stc iret xchg mov js lea mov sub sti xor je out sub xchg lcall ret jnp xchg cmp mov cmp and xor adc push dec adc scas and xchg push leave daa mov nop sbb mov lahf into push movsb cmp push push dec xor push sti hlt inc gs lret jne cmp aad jle sub jne add loop inc inc (bad) pop push aam pop subb out shll add xor lret cmpsl adc loop ret xchg xor shrb dec aaa jle jg mov inc dec fdivr ss stos enter dec mov jb mulb jns shll sbb loope sbb add mov test adc nop mov inc data16 mov daa (bad) adc xchg fmull cli leave xchg cmp dec loop (bad) js lock add hlt fnsave dec xchg fidivl shrl ret (bad) push stos fdivp leave (bad) xchg mov and mov add and lods jecxz mov dec cmp xor fsts test fldl fxch shrb std cli cs cli sbb fs jnp dec dec add and out jecxz sbb mov fcmove mov mov out std pmullw mov mov popf movsl into push addr16 xchg roll sub mov fs mul icebp mov mov lret jae jmp fiadd mov fbld scas jno out out stos inc out rclb aam sub inc enter jmp lret daa stos adc (bad) mov push xchg or arpl (bad) fisubr fdivrs mov adc inc push ss into adc sbb fwait adc add aam lea pop mov push daa cmp stc pusha cld dec aas shll jmp dec lcall pop inc mov ficoml cmp mov call push test and xchg mov ss mov push flds fstpl inc sub in inc mov movsl adc insl push ljmp enter pop sarl pop cmp cmp (bad) and or inc popf push and and shrb dec xor xorl rorl sub jl lea mov aad imul jg lret mov outsl ljmp rolb cltd lret rolb mov aad adc add cwtl das and int inc pop aaa in xor xchg and arpl sub das cmc dec clc mov cmp in call push lret xchg jle in in sbbl iret test inc jmp in imul std movsl jecxz mov inc ds adc cs stos (bad) rolb insb iret cli mov shr outsl lret pop mov mov pop ret xchg dec in test sahf or (bad) bound das jo pop or xchg cli aaa out (bad) hlt subl out lahf enter scas movsl ja (bad) sti incb push arpl jecxz jb or scas jo out push outsb mov pop data16 sub aas setnp jge cltd gs xchg iret cmp lret stc imul jp movsb push mov jnp xor std shll fs fistp mov sbb xchg stos orb xchg (bad) push cli add mov xchg push pop push out sub sub popa (bad) xlat sbb sahf xor sbb push pop (bad) sub aam mov lcall and in jo jp push jmp enter mov outsb scas push add orl cmc inc fdivrs aaa inc les int adc or repnz lods iret cmp or sub xchg je enter dec imul mov push int3 (bad) divb xchg imul insl mov insl cmp jecxz fwait xor adc nop mov mov loop jnp int3 enter pusha inc xor (bad) inc repz mov push subb or jae gs out je pop aam lds pop cmpsl or mov and xchg (bad) fs in fcoml or (bad) fldl (bad) cmc push lahf clc or dec std add cmp loope pop imul push es fldl mov fistl mov mov lahf push into adc lret int (bad) sbb sub or lahf loop sbb clc push mov mov cli pop inc cmp cld je mov push push cli sub mov ja outsl or mov popa aaa pop pop (bad) or ds and mov (bad) mov pop lods int3 and jnp sub mov pop jecxz sti mov mov xchg nop aas pushf (bad) ljmp sbb push mov cmp mov lretw adc loopne mov (bad) cmp xchg add stc leave (bad) in inc xor sub dec jp jp out jnp out inc mov pop out sub ret loop sbb pop mov aam push (bad) fisttp cmpb pop mov xchg imull jns mov jge add dec sub pop lret mov pop add and push loop push clc orb pop ss or add (bad) sar mov mov pop out dec lock out (bad) arpl test add fldcw ret fs jmp in mov mov mov dec sbb and notl cli aaa mov cmp js (bad) sub mov daa pop in mov pushf gs mov ss insb movsl int3 push sbb cmpsl xchg (bad) adc cmp movd movsb arpl add xor out arpl jo ficomp push imull (bad) imul mov out jbe rcrl shlb neg ja hlt jne inc adc mov stos repz mull lods sbb (bad) cmc imul add cs sub shll cwtl mov sbb and pop enter xchg enterw lods xchg addr16 dec movsb cmp fadd aas fwait scas (bad) sub test gs ljmp cmp cmp icebp shrb add dec dec xchg hlt jl cmp (bad) repz rol jecxz pop lods ja adc adc lahf push je out lods imul inc mov hlt mov push inc pop repnz cmp sbb sbb mov jae cmp jbe stos inc adc ret xchg dec fs lret lret cmp test jg cmpsb adc bound call push lcall sub les mov inc xor je and lcall (bad) outsl pop movsb adc cmpsl mov shr test add add and data16 (bad) push mov or add (bad) adc les insl jle inc sub repnz stos inc in jge mov enter cmpsl dec shr pop add (bad) xor ret cs loope fimull jle sub outsb and cmp dec cmc or or and mov inc pop je imul scas inc icebp cmpsl (bad) xor clc jmp cmp and (bad) lret jnp sbb mov xor mov inc push pop icebp mov pop xchg mov jo mov add mov fstps arpl hlt stos and sub cli add sub sahf popf jne cmp pushf nop cwtl and add dec ret xor stos (bad) mov jl lret mov fiadd add cld jp je xchg mov lds cltd add repz insl rcl xor mov mov jle pushf je xor aad mov stos cld pop fisubr shl (bad) dec ss mov jae push inc mov shrb sub enter loop add insb and inc lea jnp dec mov push repz lret adc or mov push mov mov and pop sti sbb test insb (bad) pop fs insb loope sub cmp push add test lahf popa fisttpll ss rorl xchg fsubrl fldl test stos mov cmp std aaa movsl mov inc mov sub push and lods dec dec sub jne sbb sbb int3 add (bad) add mov push adcl test push ds addr16 cmp data16 into sbb dec jge mov push mov sub xchg xchg dec lret jns mov test dec cmpsl pushf cmpb int3 add imul and pop push add stos xor push dec push test inc lcall insb les cmp lahf cmp je push jbe test inc ljmp dec inc lcall pop xor jl or sbb add cltd in pusha dec push js jge adc aad stc mov and dec out fild divb pop sub std stos rclb (bad) mov xor clc pop movsl xor sub adc hlt pop in mov push int3 or insb dec dec imul mov cwtl xchg sti fwait mov scas int3 movb jne dec mov jp xchg (bad) xchg jno shrl xor insl xchg inc gs xor (bad) xchg mov mov lahf adc in test inc add movsl gs jle pop mov ficompl mov nop mov adc lock data16 xor or push xchg ljmp ret cmp dec mov adc mov std ljmp push mov dec ds mov push dec sahf mov and repnz jg xlat aam add or adc mov dec mov inc cmpsl mov leave mull dec fcmovbe lds into xor push mov fldenv lods flds and arpl push jecxz data16 ds scas insl xchg loop fwait popl scas ljmp test jno jl pop aad sahf test popf adcl aaa ljmp pop xor jbe insb adc lret push push pop lock fist sub fcompl out cltd push dec mov mov pusha inc push sbb dec sub in mov push add and jnp pop sub inc pop mov imul sahf frstor lret push push scas not in test xchg inc xchg xlat nop idivl shr mov lods and out lret rcrb enter push outsl andl outsl hlt shll repz and sbb std (bad) daa ss rol lea enter jo cmp jae push fdivrs sub inc inc mov pop pop sbb div ret outsb mov adc sbb jns xchg xchg pop cmp or sbb sahf idivl cmc cltd cwtl mov test xor sub (bad) aam dec out iret test sbb jge aaa cmp scas push push lea xchg mov dec mov test push xchg test xor sbb fucomp push jne xchg popf xorl or imul and (bad) out mov xchg cmpsb es (bad) mov sbb mov fcmovnbe sbb push sarl notl pop imul push xor fistp flds ret mov outsb mov xchg cmpsb lea out (bad) div jmp into mov mul jle rorb popa and mov call jmp push les jl or movsl stos out jns jno jae (bad) and lahf les das ljmp dec adc jg sahf cli cmp fbld je cs push mov aaa ljmp xor lods cmp mov dec push cmpsb pop cmp icebp cli cmp xor mov fstpt das call inc mov xchg pop fadds ffree sahf sahf push mov cs mov inc aaa orb insb jo or and or mov movsb movq (bad) cmpsb adc mov adc cmp fs popa mov inc add mov ja mov mov add xlat aas (bad) sahf jne jns jnp out cmc dec or mov ret push fwait and pop sub xchg mov sbb pop mov test outsb mov in add int int and fs mov sbb or stos mov mov sub jae (bad) sbb push repnz add pop inc pop cmp cmp pop movsb adc mov repnz sbb pop popf clc push js cli xchg data16 loopne decb dec mov mov int push sahf xorl pushf adc sbb ss repnz cmp out int and cmp fwait jp stc adc push xchg arpl mov sub mov inc sub call mov push mov adc into repnz dec push es loop cmc test and adcl fildl push xor mov pop or setne pusha mov lea lret in xchg push scas out out or test and jnp pop dec sub lea push fidivrl scas jle iret aaa push inc lods (bad) call mov pusha sbb out into or call fcoml pop inc pop dec adc inc push mov (bad) inc mov sub sub dec in and repz adc fist hlt int imul enter (bad) leave les (bad) hlt add mov cmp ficoml lcall add jecxz test (bad) test add pop sub mov out popa jp adc sub pop and leave and sub fdivrl jb sahf inc sbb sbb xor push xor aaa and mov aam nop scas mov sub xchg sub int flds mov push pop dec test push cmp or outsb shr sbb pop jnp jmp shrl rep leave mov push ds sub repnz cmpsb dec push or fmul jne test into and cmpsb and cmp rorb push out cmc sbb icebp mov out push loopne sub sub sbb adc jmp cld cmpsb adc push lock adc stos std inc push into cmpsb jge cld andl pushl (bad) adc imul mov sti adc lret sahf idivb data16 inc pop decb cmp or mov jmp jle or roll sbb int3 cmpsl out cmc dec cmp adc lcall inc je jns in repz cs insl lds push cmpsb and mov cmc jmp inc test fs jno out fs mov xor inc mov loopne aam push jle inc rcrb push ret xchg (bad) icebp dec daa add sbb inc mov ret jnp push or dec sbb xor in pop xor inc and sbb sbbl enter jne jmp je je leave repz adc and ljmp jecxz test inc add (bad) lcall mov imul aaa orl add addr16 stos add pop mov hlt leave loope and xor aas jl push jmp cmp popf lock inc jne pop out in rol popa add dec push xor insl dec pop pop int3 ds out frstor dec clc in mov push shrb lret add sahf pop add dec pop psllw push mov cld jmp jge sahf and sbb test jecxz popf in nop stos (bad) jmp xchg (bad) fdiv gs push mov dec repnz jge fsubr mov bound and insl cmp test lret mov daa inc aam dec cwtl push adc test jae fmull icebp fdivrl lods lods xchg lods (bad) enter jmp jl and lock xchg push enter sub shll stos sub mov adc and in (bad) fwait dec int and xchg jae inc fadds cmp (bad) (bad) dec mov lods cld das insl ss mov cwtl adc ret dec cmp xor adc stos xchg sahf or fisttpl push nop dec divl or dec sbb insb shr cmp xchg insl insl ja inc lock add cmp hlt int or lods add pop jns aaa jnp imulb xchg push and jmp add insb inc dec cmp fwait sbb popf jge out cmp xchg in das fisttp xor adc iret xchg sbb mov cld and rcll (bad) mov fdivr pushf arpl jmp xchg xlat mov rol data16 es aad int3 in hlt push shl out aad ljmp outsb pop lea push divb out popa cmp push jbe (bad) fmull lcall xor adc inc xor sub loop ja xor hlt test aaa cmc imul cmpsb pop imul repnz cmc or (bad) inc fcmove mov or fwait (bad) dec mov lea lods mov or (bad) lods daa pop ljmp clc mov cmp repz mov dec pushf dec ret push idivl jmp imul js in fwait adc push das sahf push stc xorl mov mov inc int pop or aam pop movsb inc pop fist push loop ret adcb cs cmpsl (bad) xchg sarb fwait test hlt pop hlt jle sub pop es push divb aaa adc testb mov pop int inc pminsw movsb (bad) mov (bad) xchg xchg call (bad) pop fistpll mov mov xchg jnp and mov cmp aad push mov mov cmp dec xor pop mov add pop mov stc dec xor or xchg hlt loopnew mov mov test lret jb scas gs stos adc ja inc ficompl pop dec and lea xchg insb lcall shr jns jae loope test mov shrb das pop std out dec outsb dec sahf outsb inc mov or adc stos repz cmpsl and adc cmp mov inc pop sti nop sbb pusha (bad) mov les cmp mov and sub cmp mov pop sahf sbb and cmp lds adc mov imul mov and mov test adc cmc pushf sub xor mov ds lods mov movsl xchg loope sbb mov jmp sti add arpl in dec sub pop in push xor inc aas add cmp cli sti (bad) fcmovbe jns mov fdivrl lcall xor sub (bad) xor sarb pop and das stc cmp push sbb mov xchg mov int3 (bad) in sbb std or (bad) xor jecxz mov fcmovb jl and rorl mov mov pop jnp outsl gs push cwtl dec xchg mov fidiv (bad) mov cmp insb mov add mov stos cmpsl icebp imul loopne pslld add rcl push push push mov add rcl xchg mov dec arpl cmp adc or gs aad and pop fwait inc in xor lcall cwtl dec pop jecxz push jle les in jge jmp and aad xor push xor es sti jno sub add jp cwtl push test xchg xor mov notl jl add scas and xor jbe inc xchg jne pop pop test rorl mov idivl sbb push dec dec outsl in (bad) or lds lods jmp std pop pop nop cmp loope (bad) dec xor mov pop ds sbb aaa popf fldenv shrl mov inc repnz jp daa and aaa insb sub out mov jl icebp fwait (bad) dec fild push cs and dec jle popa outsl stos jnp cmp shl pop call ret pop loopne inc xlat popf int xorl push inc pushl add ja aad lods jnp jbe mov xchg sahf imul xchg dec mov (bad) in inc xor sub pop popa mov jmp mov xchg scas into addl daa sub rcr arpl add cmp jmp add jp aaa or scas sub push idivb mov push test dec cwtl mov push push fsts cmp jl mov mov nop rorb cwtl dec mulb nop xchg jp std or cmpsl mov (bad) aad add xor imul (bad) mov out test int cmp mov dec or (bad) push push sarl imulb mov ret js ljmp lret push jne adc or popf pop cmc or jbe test xor (bad) mov mov dec lods test sub mov repz sbb je mov popf hlt insb add cmc daa loop scas mov scas insl mov inc mov rcll xor sbb mov push lret mov push (bad) push or mov add in ret cwtl sbb clc xchg add mov lock jae xchg sbb push xor in into sub (bad) jae xor jo pop mulb addr16 jg xchg fild xor pop xchg pop pop add cwtl push loope leave sahf int or or pop nop mov push pushf push xor data16 xchg mov mov dec sbb aad mov push mov pusha or xchg imul cmp (bad) jl xor mov add fmuls enter mov xor test (bad) in cmp inc inc xlat xchg fsubs loopne lea xlat rolb outsb inc mov xchg push rep pusha jae inc ds dec and lret inc add pop adc push sub adc and mov sbb cwtl cmp dec inc lcall shrl mov pop jg and sti movl cmc inc and out les cmp jae and inc sub lcall movsl mov insl iret or mov xchg inc push sahf gs pusha push push fidiv repnz jle stos mov pusha scas insb or pop popf mov andb adc lret xor mov cmp push cmpsb cmpsb jns fdivs mov js xchg adc mov test clc loopne,pt xorl icebp pop sbb jl mulb xor mov adc adc pop popa (bad) mov cs das dec mov repnz fnstsw sub mov dec jbe cmpl out inc stos jnp test jp cmp sbb and scas icebp cmp sbb loopne mov push das push lret fucomip imul por inc mov ja lods notb addr16 jg push jo pop add js (bad) bound cmpsb fucomip mov or arpl rolb push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 inc mov sbb jae adc mov ss dec dec xchg aaa push xchg lods outsb aas push cmp pop push popf mov add pop cmp push call push enter and sbb fildll (bad) jno push push mov jecxz mov inc push dec or addr16 repz sahf sbb sbb outsl dec push sarl adc sub test in dec imul and test add imul adc jg push mov in stos mov (bad) loopne popf jo out ljmp xchg gs add inc jmp or and jle cmp fcoml (bad) adc sub insb push jb shll hlt arpl (bad) xchg xchg push pop int3 (bad) pop mov jg dec in sbb pop mov mov idiv pop push je ja push sahf repnz cmpb out in repz ret aaa lret (bad) xor ret fnstsw pop fmuls jp bound jb add insl arpl mov les jge cmp adc lea rclb popa dec fdivrp jae pushf lods aam add cmp in in push movsb mov test inc imul xor jb xor scas mov push shrb push and sbbl jnp stc lock mov cld pop xor mov push jno push pop dec hlt aam pop dec dec add jo rcr test sub jmp xchg movsb inc leave push sbbl jne xchg inc jge adc dec outsb flds xchg sbb add loope xor cmpsl inc sub movsb dec jns pop xor inc inc dec loop xchg xchg aad test or js xorl dec rolb dec cs push mov xchg mov and mov loop loopne push and lods daa jno push sub jmp xlat push cltd add stos dec in lcall inc dec fnstsw sbb sub iret pop push mov int3 out rol (bad) sbb imul fcmovnbe mov push lret xor xchg movsl cmp fldl ret cmp pop mov xchg fcmovnbe lret dec test mov insb shll pop sub xor jge pop aad mov outsl pop jl mov out xor mov adc test fwait jo out dec (bad) imul add out imul enter inc sub push (bad) aam test xor movsl inc imul loope cmpsl test dec es xor lock mov mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fidivl pop dec mov and or add data16 mov jle insl or leave adc shl or icebp mov push fbstp cmp and enter xrelease cmp pop pop xlat pop or lret lret out stc arpl out and lahf shll in cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 inc mov sbb jae adc mov ss leave dec dec xchg aaa push xchg lods outsb aas push cmp pop push popf mov add pop cmp add lods adc int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 inc mov sbb jae adc mov ss dec dec xchg aaa push xchg lods outsb aas push cmp pop push popf mov add pop cmp pop (bad) adc adcl mov ficom icebp call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 fimull movsl inc hlt pop jnp add das leave mov mov lahf dec aas sahf push mov xor mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss imul mov aad xor dec jge loope sub jl add cmp (bad) repz fisubr cwtl test xchg cmpsb adc mov add test out repnz xchg mov adc loop mov aas mov inc add call gs mov jmp jmp push push in in push fisubrl xor cmp mov mov lods stos int3 fnstsw inc cmp test push xchg arpl sbb and addr16 std mov xor xchg jmp in rcrl popl sarb jo test or ret jg cmp pop in and sar fild or add in push xorl setl adc xorb movsb imul movsl or fdiv incl popa addr16 sarl pop push cmp sub mov push mov das ret mov or dec stos shr outsl test cld imul inc add mov jecxz lcall scas ljmpw mov cmp jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and cmp dec mov and mov movsb es sbb add add (bad) mov xchg ljmp lahf mov add and andb xchg add and mov mov pop jb sub lahf cmpsb dec pop aas pushl or sub int3 int3 int3 int3 int3 fidivl inc lods inc sub icebp or jo in rclb pop xchg cmp scas in lret xchg xor or sbb and dec or cmpl add movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fimull stos xchg scas push hlt pop loopne test inc mov and jns jnp (bad) mov push cltd arpl cli stos xchg xor ret ficom and lock repz xchg fildll mov nop inc mov xor add rcrb mov inc mov xchg jns (bad) cmc xor cmp fstps xchg add test ja cmp shrb mov jmp (bad) dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss imul jnp inc into pop jbe icebp mov insb imul test scas sbb xlat sbb mov add pop cmp push inc std cmp jg xor fwait cmp scas cmp lahf dec pop aas pushl insb out adc stc mov rorb inc add mov fs sbb mov (bad) int push jae out ljmp mov cli inc imul mov loop xchg imul or outsb mov jbe fdivl jg jg push mov in stos (bad) mov daa test shr outsl and push pop scas nop loop (bad) jl mov fs xchg aas in jae ret and sbb pop mov ds xchg mov mov xchg dec and in cmp jo pop xlat jns fildl xor test sbb fmull aam jo adc test push pop push out sbb xor or pop xlat je push popf mov inc jecxz call je and jns pop mov dec jnp xchg pushf cmp (bad) cmp es imul mov jmp xor icebp rcrb jo mov jne pop sbb sub or sbb push sbb stos cwtl rolb rcl cltd mov cwtl cmp push (bad) gs cmp jg sti mov pop push testl psubusb sub lods int3 (bad) xor insl push repnz and pop push add cmpsl (bad) movsl (bad) fucomip and addr16 or sbb movsb fcomps xchg push adc dec and lret and inc bound adc mov mov adc dec and cmp (bad) ds (bad) or lock sti pushf lock mov out leave into adc xchg sbb add fnsave es test jle adc cmp daa xchg cli pop adc lods add dec cmp (bad) pop mov add push icebp inc dec loopne cmp jns xchg lcall out in jg dec cltd aaa mov sub lods iret test sbb mov cmpsl mov xchg pop lds and aam pop jns mov adc adc je inc pusha push rcl movsb daa enter ljmp or adc es pop aad andl lds xchg js fisttp xlat inc sahf dec and dec daa pushf fisubl bnd push and mov push loope shlb lahf mov nop or fnstcw mov in mov enter into jo pop inc jns imul in stc xor cmp les in xlat jp out pop enter or add ficoml sbb mov push sbb loop fwait or fistp cwtl je xchg aas mov mul sti popa sarl ret call cmp xchg repnz aaa in jp mov imul pop lcall or je iret fisubrl cmovge inc or stos mov mov daa sahf int3 cli and repnz dec jg xchg fimull dec or mov sbb loopne mov xor mov lret into into in repnz outsl push popa rcr sub push mov push cld and jg jmp (bad) icebp stc fs movsb daa nop rclb rcrb out xchg sahf adc push scas je mov cwtl push xor test push inc jae push add int (bad) icebp or sub jle pop inc mov cwtl dec pop mov into ljmp int3 mov cmpsb aad fdivrl inc stos pop jp jo push push jl loopne push pop inc sbb mov push pushf je dec lahf data16 fmull cmp fisub aam mov push lcall jecxz je push divb pop jcxz fidiv mov aaa and xchg xor sbb iret add popf ja sbb cs cmovg xchg inc push fcom dec add mov push mov jno addr16 sti cmp mov push jmp pusha sub ret xor roll inc add mov mov adc pop pop add mov loopne and fldcw push movsl pop fisttpl push or sti xchg in ret mov cltd mov addr16 out in jecxz xchg add into adc mov dec loopne inc jne,pn mov test roll cmpl cmp fcoml popf jnp dec mov push repnz mov stc shr adc rol out aam jecxz sbb jmp cmpl imul cltd jbe add insb xor mov mov mov pop cmp adc ds inc jge or rcll xchg mov pop mov mov dec repz add in loop bound push sub dec dec or inc push stos sbb sbb daa sub lds int shll mov int3 pop push mov dec movsl push mov bound xchg bound add jecxz cli dec xor cld into sbb and hlt sbb je pop xlat dec pop jecxz mov loopne sbb ss push insl dec dec das dec aas arpl (bad) js pop cmpsb aas les jnp in pushf cs lea (bad) cmp adc xor mov jp (bad) or adc iret sbb repnz sbb xchg (bad) lods pop cmp inc into push jmp lock adc les shrl out sub lcall cmp mov int movsb (bad) ja mov pop aad sbb bound pushf adcl in popa les aaa pop outsl insb repnz pusha jne push jg fistpll jecxz data16 clc dec movsl adc mov mov push mov mov inc push jecxz dec dec dec mov lods ss cmp jne push fidiv das dec xchg push out (bad) xor xchg inc sbb andl arpl lret adc aad daa je into push pop pop and push ret push mov cld lret movsl pushf (bad) adc fstps xor cltd data16 sbb dec inc loop shl mov push xchg test jbe fildll cli repz mov jecxz pop and ljmp (bad) and and pop cmp test pop orl fcompl arpl repnz sbb into xchg xor cs jo push pop adc data16 js dec and jns jp xchg stos or pop dec xchg or adc shll fdivl pusha lock cmp dec mov sub or cmpb fdivrl cmp loop data16 lret dec add pop mov shlb je neg (bad) inc cmp adc mov fist out loop,pn mov in and test dec (bad) enter int3 and adc cmc in (bad) mov cmp dec popf push call stos sahf sbb jmp adc dec in insl jle pop gs mov dec dec dec jl outsb test cmc scas jo call jmp or fadd jo fidivr adc mov in sbb aaa jmp lods sbb je (bad) adc mov sub add adc jmp (bad) lret jbe sbb mov push jne mov or ja icebp pop movsb sahf cmpsl cmpsl addr16 loopne and and enter push pusha sbb sub (bad) push bound jnp fs frstor ret wbinvd mov aad js mov ficomp push mov shll shr cmpsb addr16 dec int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 rcrb insl sbb lret aaa ja adc cli insb jge test add cltd cmp dec or add das inc sar add mov mov lock repz ret sar (bad) lock inc (bad) int cltd pop call lcall aam dec xchg adc lahf aam jb push in cmp and call and inc xor cmp cs iret (bad) sub or enter fistpll loopne (bad) dec clc add inc shlb cmpl outsb sarb outsb fucomip mov mov mov or and (bad) mov (bad) xchg lret push adc test stos cmp movsl or cmpsb adc and add ficomp clc flds (bad) inc fildll lcall hlt xchg insb cltd jmp jmp dec daa dec aad loop shl fdivs in in mov stc jmp jge jg rorb lock jne pushf pop push push or adc lahf pop je jbe lea loopne (bad) dec pop jno cmpsl jb (bad) jecxz (bad) cmp call test mov push int3 out iret add push inc mov (bad) jg pop pop mov mov cmp inc adc divl add sub cmpsl mov jle ficompl imul mov lock dec push cs or ret add cltd pop cwtl fdivl fldt dec inc xor imul mov into jae in mov imul jp rcrl orb dec fs insb lret (bad) xor and mov shll rol sbb inc adc pop xor loopne,pt mov inc push fadds push aam orl and repz daa pop xor push out cmc stos inc sub int jno imul movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 fidivl sub jns add jo sub mov pop hlt push scas les xchg mov cltd test and or hlt adcl mov ficomp push mov mov jno pushf adc mov dec int xor mov and dec outsb outsl rorl pushf rorl lahf loop xchg xor rorl hlt jnp pop inc push outsl loop mov ds loop stos fcoms mov loop cmp dec jg into jecxz rcr cmc lods fnstcw jbe leave jo mov jge mov xor dec lcall mov insl adc out mov sbb lock mov jmp mov (bad) icebp outsb ds adc mov mov push clc out push test mov test insl mov jnp and mov adc insb or (bad) (bad) mov loope sbb fsub es mov or insb arpl jecxz insl rcrl inc ljmp mov (bad) int3 mov movsb adc and (bad) and xchg fstp mov fnclex enter adc xchg test jae cwtl and inc es add sbbl push xor or test clc lock dec clc cmp stc shlb insl dec mov imul cmpsl cmpsb inc (bad) fild cs addr16 mov adc mov mov sub and ret movsl pop es addb push mov je dec mov cmp jne sbb pop andps or jb pop sub push mov xor out je mov cmpsl pop fwait clc test fxch outsl pop and xchg lods xchg das add mov lds gs sub push pop mov adc mov in cmpb sbb je xor aas cmp inc mov aam js adc leave adc xchg sbb or rcl (bad) push (bad) mov jmp ret mov dec in fidivl hlt add cmc or mov and cmp fmuls push mov je sbb push jp fistl mov mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 inc mov sbb jae adc mov ss dec dec xchg aaa push xchg lods outsb aas push cmp pop push popf mov add pop cmp mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss imul leavew das pop xorl stc pusha and nop (bad) add enter cmp mov lock cmpsb jo add mov fcmovnu pop stc mov and sti inc push dec icebp inc incb jge cmp inc jge int3 test imul cmp dec xchg cmc dec aas sub dec and jns cmpsl cmp jns pop lea js mov push cltd mov push call repz or adc pop mov in (bad) fcompl mov stos mov movsb pop hlt jg outsb fwait out and sti dec pop movb loope cltd std call xor pop int3 push enter inc mov fwait xor outsl loopne dec stc and fimull scas (bad) mov xchg sbb cs loope sub aaa (bad) enter push mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 and negb and cmp lods cmp mov stc icebp pop cmp dec stos lock mov jns sub push mov lret push test jge cmp nop sub jbe xor std add lods jmp adc repz adc (bad) sbb loope mov xorl rol pop sti cltd dec jle test fdivrs jmp rorb sbb pop and mov xchg jp sub sarl (bad) pusha pop fbstp jp cmc xor (bad) jae shrd sahf dec sbb lret call mov sub scas mov jg insb mov push daa mov cmovl and lret pop neg push pop out adc lcall insl cli and enter xor adc mov es mov jb xor imul mov cs sbb ss fidivr xor mov stc decb out adc fistl imul jg jmp dec sbb fisub pop sub xchg lock push lret mov adc int3 fsubrl mov inc and and sbb fidivrl aad mov inc add popf pushf xchg pop add adc cmp inc das leave ud2 shrb enter mov dec daa jp mov clc cmp dec inc out xchg pop ficompl mov stos xchg std dec dec int push jbe (bad) in mov out add mov outsl push mov lods inc mov fwait adc out out scas andb rorb push mov cld xchg fistpll dec jns dec push mov xor or je mov cmp xor clc add mov mov subl inc mov shll and dec or stos xchg mov jecxz mov xchg cld lret lods (bad) push pop push mov push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 cs and lret inc cwtl in test add lock jns aaa add adc add pop inc cs stc xor jae pop pop daa in repz add pop cs and mov mov add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 and cmp pop add int3 inc jge pop (bad) xor divb lea jg imul popf mov add pop cmp in and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rcrb xchg or aas adc jnp cmp out mov repnz jo fstl xor push in cmp mov xchg fnstenv or lret dec movsb lret dec mov rclb int3 xor enter daa test dec dec sbb push daa add dec popa add jnp cmp enter clc jno fsubrs stos negb mov lcall popf mov xlat shlb out mov adc add outsb sbb mov jmp push fs adc out sub daa test and test dec adc sti cwtl mov mov daa stos cmp and mov lea mov daa std les fwait movsl repz fcomp sbb nop insb in push jmp jo pop fldlg2 ficom (bad) cltd and (bad) jne dec (bad) xor in pop push std jnp arpl (bad) push adc mov pop add rolb inc pushf adc aaa push xchg inc loopne push testl inc cli sub lcall or test xchg stc daa push sahf adc lcall dec xchg xchg inc and mov xchg fs mov dec out inc add (bad) push ret jl xchg xchg mov sub (bad) call jg and into cltd inc (bad) push pop xor shrb or and adc repz lods rcl mov inc jl fistpl mov cmp outsb sub ja fisttpll cwtl mov push cmp outsb dec out push cmpsl push cli cltd popf mov out jmp stc stos ret leave (bad) mov (bad) fsubp in or sahf pop js jb dec mov cli xchg and je add inc mov cltd lret jno std fsubrl inc add repz lret cmp push jmp (bad) stos mov pop push push in js mov setle xchg and pop stc in cld mov sub test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push test jbe adc push lahf jbe lea mov xchg xor push mov xor push mov push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss imul popf xor pop loopne (bad) loope mov xchg push fbstp fstl xchg add mov xchg in jmp dec pop aad cmpsb fs clc cmp call pop xchg bound cltd jecxz test jnp sti lea iret (bad) xchg add pop sbb ja add loopne sub mov and cmp enter js mov add jo arpl lock inc scas xor push js popf (bad) test icebp scas fcmovne xor loopne mov je jno (bad) mov push inc xchg lret repz (bad) out add (bad) jo mov jg bound cmp jbe mov pop and cmp out adc mov pop idivb ljmp shll xchg xor cld out push jg mov adc in push out cmp loop cmc (bad) jmp faddl ffree and enter mov leave out jp push into adc push mov and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss imul or cs dec dec (bad) jmp jle vcmppd cmp test jmp mov nop sti sub push or (bad) jmp mov push loop sbb xchg mov nop mov das test test aaa cmp push pop (bad) out gs sar jmp popa inc sbb mov je imul loop stos sub nop adc inc pop or lock sbb cmp adc (bad) mov xlat aas push das jl inc or xor jne (bad) aas test mov outsl and pushf sub adc xor jae xor repz (bad) fisubrl and in out movsb push jge das and xor ret imul fmulp inc mov xor sub in jo or xor scas mov aad cs (bad) jns aas sbb mov adc in mov add add sbb cmp ret and push test outsl pop shrl jo mov mov cmc push sahf sub cltd add (bad) in out xlat call add jbe orb push adc xchg add jae mov xchg inc jns push es je add sar stos pop jle jle xchg dec movsb bound scas fnstsw popa scas xchg mov or adc cmp and lcall loope push sub out scas loop push into ficomp loope mov es xchg cld dec dec int outsl dec std (bad) sbb push xchg sbbl mov and sub lea xor sti dec add inc int test dec cmp push and lret mov push mov jp movsl test xchg dec mov cmp es lea lods and and mulb test and or push mov test sbb inc inc (bad) push xchg lret popa lods popa xchg jno push mov or push je mov and enter lea ss xchg xor int cmp and mov xchg or pop pop (bad) popf (bad) mov jmp out scas xchg cmp addr16 xor xlat jge sbb in jmp dec rcrl fldl pop mov ds das push bound loop mov mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 and ss imul mov outsb popf adc sub repz scas (bad) jbe and lcall fimull mov pusha mov inc mov cmp push outsb inc imul pop push pop mov pop sbb lock push sub lea cmp inc xor into xchg and sub or mov in (bad) sahf jle (bad) mov pop fdiv jo inc inc add jg mov xchg loopne pop mov sbb mov add ss shll pop adc into rdtsc jecxz sbb and dec push (bad) jecxz lock sbb stos cmovge loop outsl mov clc mov dec jle jmp (bad) imulb add ds icebp push loopne,pn inc aaa and adc sub and cmp punpckldq rcl xor jo add push cmpsb pop icebp loop std sbb or jmp outsl repnz mov inc shl sub mov addr16 jno pop popa imul push pop cli or sbb cmpsl adcl aaa faddl adc aad subl pop xchg xchg repz sti lret inc in mov sub cltd sub fstpl or sbb arpl push dec sbb cmc outsl pop cmp cmc lods aam jp jno icebp xchg add rol dec or arpl lds sbb (bad) pop ficoml push inc fs xorl (bad) adc inc ret sub mov push adc or js pop das lock xor nop xor cmp push xchg ljmp xor imul call dec mov in or out dec (bad) addr16 lds scas fmuls push mov inc adc test mov lret push lods mov gs mov xchg std pusha cld aam dec int xor sub cmpsb lahf cmp outsl mov in pop jge xor and sbb ret and fmulp test push (bad) int3 mov xchg mov notb xor test jmp add cld and dec aad jg addr16 repz or test int sub data16 ror insb cmpb push jecxz fsubs or pop sarb or cmp (bad) sub je imul push sub aam (bad) ja push cli and push push popf dec pop es mov xchg aas rclb sahf pop cmp stos mov mov enter movsb mov jo mov jae or sbb lret mov jne (bad) sbb in mov lds (bad) cmpl loopne pushf mov in (bad) in jne and push aas adc pop stos xchg xchg aas sub xchg notb icebp cmp or jnp pop cs sbb addl dec mull (bad) pop fistpl pop jge sti jecxz sbb leave pop pop in cmp or adc idivb adc mov icebp push mov les lds sahf push popf lods je mov out insb push into dec cmpsl jl add adc and mov pop push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss imul or jne lock fcmovnb testb add mov push fisubr clc mov sti mov sub inc mov xlat inc fbstp loope repnz jecxz sti push scas add rclb cli pop (bad) mov sub cmp adc scas push clc jno inc xchg inc imul mov dec inc imul fs test mov jmp mov adc mov hlt fs aaa mov pop into mov cltd js cmp test daa cld inc lock or dec js cmp sbb shrl or and movsl pop xor pop xchg xchg adc jmp push cmc add pop (bad) loop test pop adc cmp xor bound daa inc mov clc daa add out xchg loop push jae push cli (bad) shrb pop addr16 inc xchg jne sbb mov movsb incl sbb jbe xor idiv mov pop xor rclb mov rcrl xor out jbe jge jbe jnp push dec das (bad) aaa mov cmp adc adc jb xor pusha stos inc jnp push test sti xor and icebp gs mov in rclb icebp push push repnz mov add pause inc or dec imul lds xchg mov int fldt xlat sti or cmp mov mov jl xchg sub pop push push xorl (bad) in and push push inc add into jmp xchg sbb mov cmp mov mov and add cmp jo lret ja repz int mov repnz ror es test out adcl es inc jmp or push ss pop push arpl lcall in adc dec pop stc in mov sbb xchg fadds fs mov mov jl repnz xor movsl mov sbb ljmp sbb or xor jg jge js pop cwtl ficom adc stos mov mov fadd dec ja pop xor jg inc push cmp jmp jge in leave (bad) dec adc sbb icebp lret push xchg test sbb outsb mov and in mov imul and inc xor jg adc loop push adc push pusha pop in (bad) mov in stos sub mov dec mov repnz cmp mov dec jns imul and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and lahf dec inc inc popa inc inc pop fs mov sbb sarl dec outsb ds mov mov out inc mov imul dec mov mov shr andb ret mov (bad) ret xchg mov rolb push inc mov (bad) je movsl inc sbb mov cmc adc cmp loop sbb adc jnp out test shrl jecxz lods sub dec insl mov jecxz stc push test dec mov push push dec pushl rolb dec push push movq sbb and pop jmp in aas movsl cmc into aas and out repnz addr16 inc fwait adc cmpsl adc jge add dec andl jbe jbe stos cwtl adc ja mov sti xor repz lods mov dec js pop setb or pop sub and cmpl je mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 fisubl sbb sub scas sbb adc (bad) jne call test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 sahf mov ds push cmp add arpl movsl xchg (bad) je lock (bad) incl pop cmp leave mull and mov or std jge adc cmp jmp ds jo adc or lahf imul dec fstps adc jle aas add test inc jecxz pop inc add test ja in or mov push push push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and btc and cmp repz sub lock jbe pushf in mov pusha ffreep imul js xchg xchg mov xchg aaa xchg repz cmpsb cmp add fnsave jle es cmp scas jae sub and daa and fadds outsb mov icebp add sub data16 les dec insl in mov jge out push inc inc jnp stos sub add aas pop xchg mov cli js push jo or outsb jns aas in iret pop mov (bad) mov jge mov test ret xor pushf and (bad) addb add insb xchg mov fisubl mov aaa and and addr16 (bad) push xor xchg call cli fcomp mov adc cs fcmovu cmpxchg int3 ja or mov hlt sub inc fistl or or shrb repnz mov mov ret xchg jns cltd shl scas shll mov xor add inc mov clc sahf out push clc jae mov push ss insb lret push roll popf fsub inc cmpsb aam xchg fldl push gs push xchg (bad) mov dec sub sbb cmpsl xor xor jb sbb add icebp pop jge cwtl cmpsl dec gs ds pop dec add adc lea add lds xor adc push das fiaddl stos sbb cmp pop mov cmp jo add pushl loopne jg cmp add inc cmp gs imul sub scas icebp lret pop jge xchg lret pop cmpsb inc imul lods jb js mov (bad) mov scas cmpsl mov subl jns add cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 and ss imul add inc enter jno inc and (bad) outsb push inc or and sub xchg es (bad) ja xchg ret push jmp mov inc mov loop sbb xchg jo shlb data16 push sahf scas cs cli (bad) mov xchg jo mov add mov pop inc mov rcr cli xchg jns inc outsl pop cli mov sahf dec (bad) (bad) shl stos sub push cmp (bad) xlat test les jle das pop pop xchg fbstp mov je sub addr16 fs mov mov mov and (bad) sub lock int mov cmp jle imul ret and sbb mov jmp (bad) jmp popf cmp outsl testb cltd jne xor movsl cmpsb ds xor and sub sbb dec aas mov cltd pavgb arpl aad mov pop inc imul inc popa int xor leave or ret add xor fild mov cmpsb sti lret int cli pop addb repz sbb and mov mov (bad) mov dec adc xchg daa mov fistpll adc push flds mov cmc addr16 aaa ja push push pop and aad cmpsl (bad) pop sahf and rcrb aam test dec push xchg leave cmp jp pop cmpsl imul into jge (bad) push sbb out inc sbb lahf divb mov ljmp inc pop pop mov mov movsb dec mov sbb ds mov jecxz jg stos jg fbld mov jbe jle lret inc cmpsl lods out or jae xor jp test (bad) lret jmp mov xor repnz minps lret daa aad sbb inc roll or stos lods icebp sub adc xor into ss loopne or push fildl dec lock enter stc (bad) aam jl adc mov jns pop repz aas pusha push cmp inc sbb adc out movsl stc mov sti insb sub adc mov push add sbb outsl add push test pop cmpb lcall fwait sub xchg jl repnz pop outsb addr16 jg add movsb and ds dec aaa bnd inc jb ret repnz mov push in aaa nop lahf (bad) fmul mul fs jle sbb adc mov (bad) jnp mov push (bad) ja movsb xchg imul adc mov adc mov adc mov adc mov adc lea adc mov adc lea adc mov or cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) sub adc adc es inc shrl cmc add test add loop lret (bad) out push scas mov push push test inc lods mov cmp mov fisubr sub lahf cmpsb dec pop aas push mov and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and add (bad) jns gs inc or jp add inc ja loop daa dec sbb add push enter jge jnp in lods jg mov outsl aaa dec push stc aaa mov pushf in ret sahf fst and ds inc in (bad) test clc mov pusha lods test jmp inc xor jb sbb jnp push jmp in pop ficom mov adc btr jnp xchg or cli aam add push cmp shrb dec cmp int3 loopne mov cltd call iret mov in pop loope jno or pusha cmp pushl mov mov aam push dec dec and push mov cmpsl xchg stos mov mov shll sub es lret xchg ljmp negb mov insl fs addl testb or test and mov lahf (bad) repnz push je jns and mov and lods cmc fbstp lret fwait or (bad) mov jmp adc clc adc imul fwait addr16 jno scas pushl and aad (bad) outsb dec inc xchg ret lods push jmp mov mov sbb in leave in (bad) int mov popf roll sahf clc xchg xchg sbbl push pop sub daa test outsb fst jb out or inc in pop add push sbb or mov mov jne push mov inc mov jmp pop cmpsl outsb or lret and xchg cld dec xchg fwait lret adc jmp loopne fcomi daa mov scas les popf int fbld rcrl push loopne cmp in sub jp jmp jbe (bad) cmp adc xor mov push mov loop into fucomp mov enter mov mov mov lahf add imull sbb mov cmp in add shr cmp insb mov jle adc jle mov ja js inc xchg xor inc dec jl fcoml cld push in adc xchg jecxz jmp cmp mov mov jle lods mov jmp repnz aad cmp add test jle repnz and fadd jp and pop out push sbb repnz add dec sbb mov push repnz fcomip lods (bad) shl roll push mov gs jg xlat int3 inc fadds leave xchg sub and xchg das int3 sbb (bad) ret and push into and xchg xchg ljmp (bad) add loopne and rol (bad) dec movsl sbbb sub imul (bad) add pop imul jne (bad) into mov cmpsb xor jo sub int push mov xchg or test in and bound cmc call xchg push out outsl inc insl mov xchg adc jo sbb push jg jbe cli lods pop and or test mov pushl dec jmp xchg xor lods push ss dec (bad) mov mov mov dec pusha jmp rolb lcall add lret fnop xor pop sbb ret in mov and insb xchg pop mov fnstenv inc jne dec push div sub xor xchg rcrl out inc fimul dec push jle or and and jns cwtl (bad) mov test jecxz cmc add inc push in sub stc stc jecxz add fdivrs jmp add faddp repz xchg or and mov rorb rol dec out and jb sbb jg daa xorb xchg xor enter mov dec pop dec enter or cmp pop mov loope ja ficoml imul mov scas xor mov mov mov jo sub decb pop popf mov cwtl adc cmp inc sub adc shrb lds jo mov lock cmp sbb push cmp fimul insb inc sub mov xchg mov cld and fs jmp mov loopw jne adc push insb sbb out adc fist dec mov and cmp aam sahf out ret and out jnp shrl mov jnp (bad) outsb pop out fisubl iret dec mov push cmp jne pushf and std add je mov lea jae (bad) in sbb inc mov push insl bound mov pop jo mov leave icebp aam push inc mov aaa inc xor mov jbe loopne dec in cmp dec lcall jb sbb and test loop shl cmp cmpsb mov and add mov sbb cmp jle dec add stos cmp xchg mov push gs pop orl sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 and mov stos jp enter cs xchg xchg jb (bad) lea mov adc xchg (bad) fwait sbb das xchg mov xchg pop mov loop adc add hlt and ret rcrl jp pop test imul sub arpl dec mov cmp jp (bad) test ja adc mov cmp je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl aaa adc sub mov add aam mov add add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 fisubl scas ja,pn scas cmp das push mov dec sbb adc or stc pop inc jg xchg adc aaa nop stos sbb std mov cld stos lods dec lods enter stos inc jecxz xchg jo lcall inc movsb je jo adc test mov sub mov test ja addr16 sbb add dec (bad) ljmp and out and xchg out jmp test into mov and inc stos cli (bad) ret mov stos xor ljmp xchg loop push add in adc daa stos xchg scas dec lret cmpsl fbstp pop testb lea or movswl push sbb add fcoml jg push cltd ret xor mov add sti int pop ds mov scas sub xor into cli jp sbb or aas xchg push add nop or testb sbbl xchg adc pop sub push pop sbb mov push ds adc test inc (bad) movsb bound inc mov jle in leave in mov push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and or push cwtl lret mov mov adc gs adc mov nop mov xchg cmp (bad) xor sub in push test xchg push adc mov mov movsl popa bound repz dec fimul int pop cmp mov loop pusha inc movsl mov jno xor jne xchg pusha or adc mov adc insb and add push sub sbb xor out push push xchg or outsb mov cmc stos int3 jecxz mov fnstcw das dec mov mov mov mov enter (bad) pop or cli jae inc pop jp jae adc lcall cmc lret inc jo fsubs lock ds in imul dec dec xor fldl inc sub add add jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 and xchg cmp or add xchg inc jge in adc sub push mov push xchg mov jnp stos lahf lods orl add jg scas lods xor mull adcl mov fisub (bad) les in popa pop dec ljmp mov out mov les mov mov clc fldl push popf loope popf (bad) loope (bad) mov mov popf test arpl cmp mov ret jo hlt and cwtl mov xchg lret stos inc mov std fildl test imul xchg or dec xor out mul mov dec or loop mov pop (bad) mov jne add jne lods addl pop mov outsb aam mov mov imul fcomp mov xor popl test or lret or (bad) fwait sub (bad) mov hlt inc push fcoml jne pop (bad) (bad) out out dec mov xchg pop int3 stos push dec pop cmp test inc int stos pop stc pop loope push dec add outsl mov mov cmp mov into mov inc mov dec adcl cwtl push cmp lret sarb ds out sti movb das mov jmp push adc mov cmp sub lahf xlat std jb sub std cltd add aaa ja mov dec push call pusha pop adc loope jmp cmp and or mov sbb push push xchg xlat mov lods rcr push out cmp (bad) dec sbb jl push cwtl inc roll mov out and adc stos popf adc fimull push dec out inc push (bad) clc cld cmp (bad) mov pop mov loope cmp xor push xchg sub (bad) scas jmp mov mov push int3 lret pop push (bad) mov ss in das jno nop mov fistp movsb adc test stc fucomp aaa mov (bad) push pop sub push push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 and or dec cwtl (bad) mov ss add daa imul pop xor sbb test jge jmp jge cmpsb adc call jl mov push inc jae push insb dec xchg and bound mov mov ret leave adc mov xor dec rcll scas push and xor imul insb ljmp out imul or das loope jmp jno cmp jae out adc mov cld imul push push cwtl add or xchg cmc les imul xchg test adc repz std outsb pop inc sub (bad) sti subps push sti out outsl leave ret cld (bad) jae xchg fwait out imul imul cmp fldl in or inc sub add add cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 and stc stos out mov cld or aas cmp in mov aaa cmc sbb jmp mov mov inc out xchg pop or cli imul fwait adc xor repz stos and pop imul jae xor cmp inc jno adc push add ret inc jb mov dec xchg push das sbb sbb cmpl push in rorb xchg int gs adc jne idivl bound mov lret or repz add dec nop divl fdivrs out and mov fisubl sbb mov xor add xchg inc xchg (bad) mov ja and mov inc outsl enter adc xchg mov out xchg jnp push inc xor lret add jb add adc out mov xor lcall aad mov aas outsb cmp xchg xorl cmp subb fldt add and bound inc ficoml mov mulb (bad) mov out push out xor push iret jb fbld cli fidivrl scas ljmpw in movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and push (bad) sbb add xlat or xlat push daa shll (bad) sbb xchg gs push inc or scas lock in out jecxz or mov dec and mov cmp or mov mov or push pop nop call int3 cwtl (bad) xor adc lcall jecxz inc mov insl push sbb mov add adc ret clc and fwait adc cmp into push daa imul push and dec into js imul mov jae pusha lret jne pop in cli mov ja into rcr push pusha lret mov lret dec and mov cld or and out mov and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 and xorl negb push test call push loope and loop,pt xor xchg fidivr cmp stos insl xchg mov xchg xchg xor pop or add and push ja ret cmp mov loope pop es mov pop lods test mov (bad) daa aad pop sbb push clc sbb pop rorb xor sbb call fcmovb dec ljmp rclb ja int js mov iret jecxz push or movq jle or cmp andl xchg sbb mov mov or addr16 cwtl mov cmp jo jno in sahf into cld pop je mov stos and xlat xchg mov xlat lahf xor sub rclb movsl jbe mov fcoml jmp sti adc mov imul xor adc (bad) into pop mov add mov or or add icebp add push mull xor xchg lret lods data16 sub aam dec mov sub (bad) clc push jb cmpsb (bad) xchg xor cmp mov sub negl (bad) faddl add clc dec or pop mov je inc jmp fsubl and test fwait pop sbb icebp arpl pop pop dec pop push jne sub mov jmp lret adc jg lods iret out mov mov in (bad) mov rclb idiv fimull pop lock fistpl xor xchg inc mov xor ds fsubrl add jae sub inc aad inc jnp dec mov daa cltd cmp in jmp aam xchg (bad) cmp loopne stos nop arpl xlat pop out out dec jp jl inc movsb jp stc or push xor aas pop (bad) mov aas pop icebp cmp les xchg add sub lea push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 fidivrl lods add push cmp ret jo enter xchg in dec dec bound js fnstsw adc xchg and xchg loop outsb rcrb aaa mov enter aas mov push xchg imul mov lds mov out jmp inc lods test jge std and fisubrl push add ret jno cwtl xlat adc outsl sub loop adc mov and test and sbb dec mov mov mov or lock imul daa fs sub push lahf xchg and inc pop test sarb inc imul in push rol prefetch or jl mov pop push fistpll rolb decl insl dec mov (bad) cmpsl adc dec mull (bad) xchg arpl adc das cmp mov pop (bad) mov cwtl mov outsl xor dec mov ftst add lret xchg (bad) push mov out jns xor fldl jno into mov xchg ja,pt enter pop sub dec push mov cmp stos cmp jecxz xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 and ss pop cmp jnp xchg in mov cwtl mov lahf dec aas sahf push mov xor xchg or bound sbbb (bad) mov mov enter add sti and js xor and add lcall movsb mov andps fist insl sahf mov fsubrs push or jmp insl sbb mov push sahf pushf out sbb outsb aad popf jecxz or (bad) xchg je mov xor movsb call pop fidivr pushf jge mov jle or out in (bad) and dec cwtl out outsl ret mov lods or mov inc in pushf lods out inc mov fsts lock std movsl xor stos xor imul icebp outsb roll and mov or push dec clc test cmp cmp fstp and jno in addr16 push jae test enter aas addl jl xor xor jmp sbb imul pushf cmpsb mov out enter daa shrb mov or std leave nop lret add ljmp out mov in leave in sbb lret mov mov lods cmp adc (bad) and stc je add cmpsl cmpsb push jp je jg pop push mov outsb jle cmp mov cmp or stos adc mov fildl push mov add or dec mov (bad) xchg inc and call push inc jo idiv addr16 movsb fcomip into into sbb cwtl sbb inc xor dec mov rcrl xor adcl dec and xor ss and mov xor clc and xor aad mov mov dec push and sbb shrb and test sub loopne mov xchg in inc push jnp stc jmp mov movsl mov mov xchg out jnp dec dec add es loopne cli leave out in jae call scas sahf mov push xor push cwtl fidivr sub ficompl addl popa xchg outsl in rorb jle scas pop stos mov mov inc (bad) loopne fwait test pop mov (bad) out mov jb sarl adc dec scas test sbb jmp xor ss pop fucomi shr lret hlt std sbb xchg cmp jae negb outsl bound cmp cli mov adc mov jbe daa cld or pushw mov sub mov aas dec inc nop adc mov rol or or sub dec jns sub lock cmp cmp push mov std loopne loopne js dec mov (bad) aas push daa xchg jp scas loopne adc mov popf fs xor ss repz jo hlt and cmp cli iret lock sbb cmp rorl (bad) pushf push cld cmc aad cmp mov cltd comiss in sbb test cmpsb sub scas callw add mov add (bad) or inc pusha pop cltd xor call jnp imul sub and in xor or mov mov push xor pushf jbe push sbb inc jge (bad) test div stos mov add sarl imul loopne (bad) mov pusha jp jge xchg adc or sub mov inc lods ret es push add jno xchg inc mov gs cmp inc sub xorl and mov dec orl out xor cli stos jb xor inc sarb jg insb insl jle push jns test pop pop fimull aas (bad) lods and mov push int3 jmp fmuls jecxz (bad) mov cmc mov js jb fisttpll popf cli push sbb and fwait fwait icebp mov scas mov int test aad jge frstor cmc cmp xchg out movsb sbb lods adc jp insl sbb (bad) mov outsl inc mov adc pop jecxz mov xlat ret jl adc imul dec fcompl nop and mov fs sub xor faddl cwtl dec dec sub popf xchg je pop mov xor push out xor pop lds inc insl push out jo xchg inc push and rclb xor or call fimul xchg lds pusha lea test push hlt sbb mov aam repnz push adc cld stos cmpsl dec ja and sbb push mov inc insl jbe fmull fcmove dec jl cmp mov jle cmpl xchg cmp pusha lds mov (bad) xor lea pop cmp or aaa mov imul lock lock negl loope (bad) nop lret pop (bad) and push mov jne jne dec push test lret out (bad) clc shl push add daa out xor and jo orb (bad) scas shrl inc je int3 fsubrl test or pop adc in out push ret jle ret and xor aad mov sub mov mov bound pop loopne mov (bad) cld push (bad) loop xor dec mov jmp jnp les imul mov in adc stos sub add sbb or pop inc mov dec in in cli push sub mov and int3 leave xchg lahf jmp test jns add test lds mov push out sub lods jle insl fs icebp push dec pop mov decl sbb jb cmc pusha lods fidivr inc mov mov cs in sub ljmp pop xchg data16 push repz stc sub sbb sbb andl flds movlps and xchg pop dec insb (bad) ds xor icebp mov jecxz xor es xchg xchg xor test dec repnz dec arpl and and lcall stos xor stos pop (bad) mov jns into (bad) jns sub movsl adc call adc (bad) popa fs out adcl xlat test mov loopne sbb daa mov mov into (bad) dec aam mov and stc adc test lea pavgw aas mov movsb aam mov mov dec jnp cwtl adc cmovns cmp std (bad) call add dec pcmpgtd int cs mov or sub and mov adc jp adc popf mov and (bad) cmc sbb mov stos inc mov dec xor mov in xchg or jae dec mov popa insb pusha movsl pop (bad) (bad) out iret addr16 pop push pop add shrl mov pop pushf pop mov mov jno bound (bad) fcomps dec iret aaa arpl negb jno sti popa sbb call dec jecxz cmpsb or adc insl and out (bad) cmp push cmpsb popf adc jb push test std adc leave insb mov cmpsl int3 pop mov je xchg clc and jp test cmpsb ror add sbb push inc jbe xchg (bad) rorb data16 and dec xchg cltd fnop (bad) fist stc mov mov pop cmp pushf lret or cmpsl out mov xchg std adc imul daa xchg pop andl subl movsb stos pop and pop cmp mov outsb push xchg dec push push stc rclb jecxz mov lret int3 movsb sbb mov and cmp fisttpll sub je pop push inc sub add jb sbb jae in sbb or add sbb sbb sub cmp ja sbb loope adc add adc das sbb mov fucomi push (bad) adc popf movsl sub (bad) xlat (bad) out push push or int dec inc imul mov addr16 pop loopne dec imul lods mov pop gs imul xlat fdivrl into inc or pusha ret jno cmp lods repnz and inc ror pop xchg sti stos push hlt mov ficompl xor or pop fsubrl aad push nop sub pop test sbb mov fcomip cs fnsave xchg sbb xchg leave inc cmp mov add dec inc inc or mov inc mov scas cwtl jne lock xchg inc pop movsb js sub mov xchg xchg pushf jns (bad) (bad) ret adc or xor xor subl sub (bad) insb sti push (bad) jne lds test xchg loopne shl fs aas pop push cmp repnz int3 xor sbb in xchg and push xor outsb sbb push popa push ljmp fldcw or (bad) daa push (bad) jecxz repnz push rorl (bad) push sub cmp jnp jns inc sub adc pop or cli (bad) outsl mov test mov adc scas movsl push xchg (bad) icebp std dec sbb push (bad) xchg mov cltd (bad) jecxz stos stos xchg fmuls jg sub or fucomp mov hlt dec mov xor push mov test fidivrl push data16 jmp mov movsb js or lahf int pop fcmovnbe fiaddl ja and or mov lcall enter icebp push into mov xor repz jge jecxz mov data16 adc dec outsl mov movsl test mov xchg (bad) shr xor mov pop cmp jae cmp dec shlb test inc loope push scas or mov es adc push push insl jne hlt lret jbe cmp xor popa (bad) and mov adc pop push test ja push in jnp loopne loop cmp push pmulhw cltd pop repz (bad) sbb enter jbe cmpsb lahf or test (bad) cli sbb in mov test inc add movsb jmp aas fild stos push push les sub cli mov push cs sahf mov fadds inc mov push sbb xor inc jno popaw (bad) push mov cmpsb insb push js pop pushf (bad) pop add ljmp mov into cld xchg cmpsb add outsb rolb sub push sbb mov imul cmpsl pop inc jno je (bad) lock pop dec fbstp push imul aaa mov std dec out fucomp jmp sub arpl daa xchg mov daa jl lea mov test jnp cmp ficom xchg jecxz xchg fsts jg add fcompl push xor and insb dec mov pop fwait add or or xchg mov dec call sub xor add sbb in std enter inc or inc cmp and out lods sub mov jp pop mov xor cmp cmp cmp pop pop insb sahf add in mov inc ror popa and or add fs jae mov popa adc gs mov mov mov sbb xchg out cmc add stos adc push insl push je cli ljmp insl inc scas xor js push xchg outsb sbb xchg lahf sbb jnp cltd leave jbe ja mov ds xor popa push and imul icebp cmc cmp push fyl2x push push fistl dec in jl into cs add in ret sub imul into mov (bad) insb inc adc jns movb mov xor aas dec mov imul fstl inc int3 pushf stos jb xchg enter pop xlat xchg mov loope addr16 mov xchg push inc or add test dec xor test daa xor and jne mov xchg repnz pop xor dec jecxz int jmp xchg or hlt push adcl fistpl std (bad) ffreep (bad) pop mov data16 aam outsb mov xchg adc das pop adc mov add into adc xchg push jmp (bad) sar and fidivl movsl fstpt sbb push mov push sahf xchg or movl ret and fidiv pop (bad) ljmp fsubs ja sbbl cmp add pop fistl cmc stos hlt cld jg and rcrb (bad) pop lods scas (bad) sub mov mull adc inc rol push mov dec or push cmp cmp dec xchg ljmp sub jl les push xchg pusha cmpsb (bad) jge outsb xrelease sbb (bad) cwtl popf pop das mov cmp sub les fs mov loopne mov ja add rorb das mov push lgs mov adc inc push adc pop aad xor jp aad pushf xor cli or jl es push insb xor inc fbstp pop sub (bad) mov lock addr16 es push jge orl sahf (bad) in out pusha adc (bad) cld xlat lahf je sub cwtl repz lcall fcmovnu ret fstl repnz fidiv mov test mov in xor nop push test or (bad) (bad) xor add push fimull add test jl and inc jb inc inc rol bound adc inc lret les movsl test leave daa outsl pop lret push jns xor fistl das or cli push push sahf pop fstl sub xchg out adc mov push jnp add cli mov (bad) pop mov insb push and out xchg (bad) adc movsb mov cld inc jns fisubr movsl push pusha pop (bad) and sbb lcall push clc das pop sub fdivl add andb (bad) fimul mov imul inc out notl pop (bad) (bad) xor fistl xor pop mov mov inc push cmp aam cmpxchg sub and xchg mov adc dec mov into push xchg cmp div pop xchg (bad) test ret push dec fcmovb out push fldl lcall outsl test lcall pop fnstenv mov mov rcr inc cmp mov hlt sbb fucomp scas pop movsb stos pop and cmp mov in or test pushf into inc daa sbb push fwait jae and (bad) or push andl test aam add mov rol or mov sbbl mov push mov (bad) or into add idivb (bad) xor push sbb mov pusha (bad) test mov je bound mov sbb (bad) scas sub lods mov sbb (bad) lea mov jmp and popa mov scas inc in cmpsb mov pop shlb das pop sbb sbb loope jl negb js out jno test insl xchg xor clc sub ja or mov mov dec rcll pop adc xchg (bad) push xchg jp xlat dec add add push aad jl in jo in outsb jae pop jne push mov (bad) jp mov clc (bad) adc mov cltd cld and andl shlb insl jae inc addr16 mov inc outsl inc inc and imul lock jb inc imul sub sub mov sub dec sub imul dec sbb xor lock cltd nop (bad) mov movsl in out imul fstl mov mov push adc std lcall cmp cmc xor inc hlt psrad pusha ds rclb dec popf and fldcw lds adc cld mov jecxz add inc int3 jp pop outsb dec mov fnsave hlt or mov pusha add ret mov jbe xchg cmp push arpl lret pushf dec out dec es in imul mov xor sub inc call in outsb push or repz (bad) mov xor das jb fstp popa xor insb pop insl jae and cmpsb mov arpl mov loope push xchg push vmovdqa pop das cmp adc stos cmp lcall sahf sti lahf adc cltd inc aas lods (bad) and jno push out enter arpl add pop and push lcall add dec pop repz mov xchg inc push jnp pop int3 push stos and fadd (bad) lods (bad) cmpsl fldenv push mull (bad) imul movsl mov lret inc mov or iret ja inc in in (bad) jp pusha (bad) sub mov mov inc jae xchg dec fsub xchg pop add inc xchg (bad) and fnstenv inc lret cmp (bad) fs gs dec mov faddl mov jp jp add push pushl pop fstl cmp dec or adc and sbb xor dec lods fidivr push mov xchg fcomp repnz mov fisubr ficomp mov jmp mov aas inc daa loope dec std xlat popa int3 add fidivr jno inc loopne mov fstp sbb ss and add arpl lret rclb mov pop in cmp pop imul xorb xchg xchg and js lea mov sbb pushf cmpl int3 mov jp jnp dec add rorl jns pop add sub push movsl iret xchg data16 arpl out push imul pop sub addr16 cli gs shrb insl sub inc aas xchg movsb dec xchg loope add nop sbb outsl sbb fidivl jle cli cmpsb mov test enter pushw mov and and icebp mov pop adc and stc test push sbb xchg imul das cmpsb xchg in mov js adc aas out fimul lcall rcll aas bound cmp cmc clc (bad) repnz and dec mov xchg and ljmp sbb nop js jge sarl test pop fidivl lods ret fdivl cmp in add icebp bswap sbb into sub xchg jmp movsb or xchg lahf push xchg pop fild jne hlt add in nop xor sub xchg mov movsb stos pop jns inc sub mov into inc xor add test push xchg jmp cld jno insl pop add aam ret sub stos loope shl xlat ljmp push mov test push int3 cmp leave jns cmp test subl addr16 mov notl xchg repz ds mov icebp dec inc and sub mov add jecxz inc cmc push dec dec mov cmpsb lgs neg xorl mov add in and mov mov inc sub int3 leave nop sub xchg stc fs scas push shrb scas into js testl pusha (bad) shr ret je rorl fnstsw pushf jae xchg jno fs inc add ljmp xchg les sbb pushf outsb or push aaa jo bound in dec jbe inc or push xor enter mov out lds or push push fidiv push ss cmp jno (bad) out popa shll lahf insb (bad) push sar cmp dec sub mov mov rcrl aam int mov mov scas loopne (bad) jecxz out dec dec pop jmp jns test mov push cmp pop xchg push (bad) stos xchg inc xchg (bad) stos cmp push lcall mov into or iret cs fucomp rcrl sti cmp and sub pop cmpsl div into dec mov push pop (bad) inc ljmp or jne push xchg les xchg pop jmp scas sbb emms sahf adc popf inc jmp imul lods push incl dec ret inc mov bound inc (bad) aaa int sbb lahf and out jp fnstenv lcall sub (bad) adc cltd sub cmp dec lret sbb sub lcall leave out push xchg (bad) xchg cli xchg out xchg adc fdivs out out or cli pop mov xor rcll mov out and call cvttps2pi push in pop sub and dec jb sbb or xchg movsl jg mov pop inc or xchg lcall jmp inc mov cmpsl lock inc xchg pushf out lds in sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 and ss jno test mov daa adc cmp mov sub jbe sbb push mov xchg divb jg addr16 jbe xchg push jp shl inc xchg inc jge cmc lahf xor in int sub aam insl daa xor inc lahf pop pop cmp mov loopne adc push rol test (bad) es mov sbb inc cmp leave jl jge sbb pop aaa cmp cmp sub or pop sub outsb jle (bad) stos popf cmp loope (bad) cs pop push inc mov dec add adc imul mov xor sub push push es fstl push outsb repz hlt std push popa jl outsb data16 es mov scas pop mov mov jno mov in inc mov outsl push lcall test jge fs mov mov and jnp mov mov popf jne loope lds sub dec xor std es in je mov mov mov mov (bad) and lds cltd sbb mov jo fwait sub hlt add ljmp lods adc adc rolb (bad) out pop xchg adcl in sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret and ss (bad) jmp xchg pop pop lods inc jp enter repz mov dec xchg fildll xchg xor jbe (bad) or or mov lds mov ret cmp or jge sbb mov fcmovbe push jl jae ss and jo adc in icebp push ss push xchg sub popf fs shrl mov jmp mov add pop cmp ja cli mov inc add rcll cld ja insb mov gs (bad) and ss jmp ss sbb and (bad) or and cmp dec adc popa sub outsb leave sub (bad) popl pop and loope and push mov push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and outsl aam aaa aad sbb jne lock and mov scas sbb (bad) aad pop push popf mov add pop cmp push rorb add inc add jl adc add jl adc int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 and ss sub push mov out xchg les out pusha and leave push sub add shrl lahf repnz jmp mov cmp xor ja nop fs (bad) je lahf cmpsb dec pop aas pushl in push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 and ss (bad) jmp xchg pop pop lods inc jp enter repz mov dec leave jp jb in jecxz cmp dec or hlt fsubs adc inc aaa xchg or daa xchg mov stc aam push sbb mov xchg mov ds mov sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 (bad) xor push push xchg jl mov cld or mov mov lahf dec aas sahf push mov xor sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fimull fdivrp push (bad) aad shlb icebp or in mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 and ss jno test inc cwtl cmpsl add and rcrl (bad) lahf rcrl lcall fldcw (bad) fiadd mov mov js or sub xor (bad) jae imul dec pop aas pushl insb and sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 and ss (bad) cmc pop cmp dec add adc push int loope adc and sar dec inc fidivr ja xchg data16 cli cld lea popf aas jno push fwait out cmp es imul dec pop aas pushl in lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 and ss or mov or add sarb leave cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 and ss (bad) mov lods inc jp enter repz mov dec leave je adc jbe rcrb lcall aam xchg mov subl xchg push and or ret xchg jo ret cwtl shrl jno (bad) xchg loopne mov hlt lock test dec call add push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp cmp push xchg sti cmp enter jge mov repz inc mov scas cmpl jnp jbe push aad mov stos ret adc ljmp lods jae imul dec pop aas push mov sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 and ss jno test inc cwtl cmpsl add daa and xor xor cwtl lahf dec aas sahf push mov xor sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 and ss jno test inc cwtl cmpsl xor aas sub jle pop cmp sbb in fdivrl aam and mov adc mov (bad) ja enter mov xchg leave mov mov repnz jl (bad) mov hlt ljmp mov push xchg iret shll lods insl mov xor cmp popfw mov icebp cmp outsl xchg addr16 popa sbb clc pop scas mov in jmp jbe cmp pop (bad) je mov aaa shrl pop fbstp jp push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret and ss jno test inc cwtl cmpsl add daa and xor cltd or mov mov xchg sub jo sub (bad) jae xor aad mov ss mov sarb mov sbb mov push test inc test je push mov sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss jno xchg ja add ljmp fnstsw repz inc bound mov jno inc inc outsb aad add push push jnp sub mov mov or sub clc into xor inc cmp dec inc inc mov in fucom adc roll cmp add xchg arpl mov jmp (bad) repnz lahf lret mov push xor inc loope push clc imul mov insl outsl daa push ds and jmp mov jnp fnstcw insl and sub ss arpl (bad) daa test (bad) imul push lds aas sti popl pop aam mov mov call xchg mov jl insb repnz fstpl testb jne out push mov fsubs jae fildll stc and add and sbb loopnew mov xor pop sti mov mov rcrl int3 hlt and stos aaa pop mov lds adcl and test loope xchg xchg jno fcoml or cmp jae call jo xchg pusha mov mov stc add sub or and add in leave in sbb lret leave inc inc inc dec xchg icebp push fisttp gs mov mov pop mov sbb iret aas pop repz or mov lret add push push jg and or sub mov scas adc std fcompl sti (bad) cmpsl xlat cmp xor ja sbb mov (bad) aad sti adc inc nop out sbb xchg mov lcall lret jle pop ljmp aaa add fs fbstp scas popf (bad) jmp lret xlat inc cmpsl xor mov hlt adc cmp lods lods fcmovne adc lds mov scas lcall push inc mov icebp mov dec pop stc in mov cmp sub or sub mov ret jb pop or adc test sahf data16 or (bad) mov push repz or xor cmp jno cmp sbb aam outsl (bad) mov data16 ret lods push jecxz cs xchg jle pop js mov scas outsb shll jmp cwtl stos call mov pop (bad) bound mov subb sbb sbb cmp enter aad xor sbb data16 into je cmp push int3 pop mov test clc lods cmpsl push (bad) (bad) imul outsb sub lods mov cmp push pushf or mov int iret movsb sbb jo push jg adc ret push or lods jp lods inc notb (bad) rorl xchg test lcall lea out push and jns inc lea mov arpl movsb imul cltd pushf fcoms inc mov sbb add jo xor fcomi pop int3 cmp stos into stc (bad) rcrb test add cs ret fmul jae mov fsts pop sbb out lahf inc test (bad) sub inc cmpsb adc fisttpl inc dec outsl scas fs mov mov in out sbbl rclb adc mov ror sub push mov inc cld and jle jmp xor inc (bad) negb out push mov xchg sahf aam clc pmulhw mov mov insb or add inc out mov insb repz push xchg arpl mov jle sbb in mov xchg mov data16 cmp dec test xor sar xor xchg sbb xorb xor fistpll cmp inc mov lods pop movsl mov (bad) repnz pop xchg xchg lods dec add icebp xor sub rorb popa (bad) sbb sub loope sub arpl jne repnz push ds loopne (bad) push or scas mov mov sub cmpl and and iret lds dec ret testb lock mov cmp cltd jp push xchg fcoms xor inc or push ficom mov lds and jecxz aas pop pusha xchg lds sbb (bad) in push add or xchg inc in add and pusha mov pop jmp adc cmpsb rolb fs mov mov cld cmp dec adc push (bad) aam inc ds jle xor jne sbb int3 xor fimull lahf inc (bad) fstpt adc adc out std and dec add pop jns add mov fstps icebp outsb cmp fcompl fiaddl cwtl xchg inc xchg sub add mov push mov or nop pushf fidivrl pop push fistl popa lret or fmul cmp hlt sbb jl sub ret subb scas (bad) mov and jecxz into mov clc fldenv or addr16 pushf lahf ret or movsl aas xchg imul leave stc insb fisttpl lock sbb lds xor call (bad) cwtl lea fild shl inc (bad) sti xor test es and or loopne xchg xor fsubrl add test mov mov cli into add test pop aad popa sti test (bad) jo out cmp sbb push cmp xor inc bound sbb or notb xor jecxz in (bad) pop lea pop stc cmp test pop ret rorb lds pop inc dec xchg in inc and imul xchg add xor xchg jp jp push insl test iret sub push shr sbb imul xor jecxz mov in leave sub jo sbb imul and stos insl dec and mov mov jae ljmp in stos xchg movsb adc imul sbb cmp cmp imul js cltd pop pusha loopne bnd sbb clc mov repz popf rorl popf mov mov push les fbstp lret fxch or outsl aad add sub cmp xchg (bad) dec xchg sbb out sbb test or aaa sub fnstcw (bad) std dec addr16 movsb fadds jmp xor mov mov push frstor push mov pop orl xchg (bad) out sbb sahf adc jg jl xchg mov adc dec lock and (bad) aad gs movsl add or dec imul or pop out mov lods sbb xchg int3 stos and cmp lcall leave fnstenv dec mov popf pop gs lods (bad) add xchg pop bts push mov dec mov out (bad) ss xor loope and mov mov sbb imul enter and xor push mov or add xchg jecxz negb inc out popa (bad) fidivr xchg repnz imul sbb sbb dec pop xor mov sbb cld imul pop js mov mov push dec mov fstpl ret jo loope sbb notl dec arpl or add ja dec js jns sbb sub gs jmp test jae or and and ret roll ret mov int loop (bad) loopne jecxz dec ficomp (bad) (bad) mov inc (bad) out cmp push lods sti (bad) scas loope dec test push sub lcall mov xchg (bad) sub push lods pop scas int3 xor leave fwait inc push setbe xor addl push mov outsb or inc xchg push sub sbb (bad) in icebp dec mov pop sahf out xchg or jge fiaddl or sub pop xor jmp xchg fs loop lds jns (bad) xor and aad xlat mov cmp mov push int mov xchg add or imul loopne sbb jns pop dec imul (bad) les mov mov pop push iret ret loopne lods bound sets xchg int sbb inc arpl loopne inc adc cmp and push cmp jb (bad) bound out das xor pop add add xchg test inc xor mov adc into sub scas xchg (bad) (bad) lods xchg sub mov xchg xchg push out adc aad in insl mov lock adc push dec or sub jo outsl (bad) int movsl xchg adc addr16 scas arpl (bad) mov aas jns inc mov insl jae test scas cmp fdivrs mov imul aad xchg cmpsl xchg sarl mov test or or icebp in xchg fild xor lret adc icebp push dec jne mov push gs nop incl aaa je mov xor xchg lds je cmpsb jecxz inc cmp lock and movsb lds test mov xchg dec push ret iret pop adc stc notl add (bad) adc xorl push stos ret mov mov mov addr16 stos lahf mov jbe adc cmpsb push mov cmp push fucomip sbb jne movsb mov pop hlt idivl mov push cmpsl bound lret sub cmpl push mov adc mov pop xor push mov mov loope adc cmp sti dec pop pop sbb jbe pop icebp repnz movsl inc (bad) xchg pavgb xchg mov fcomps dec pushf push sahf js push inc add xchg roll fisttp imul pop (bad) std adc notl cmp out sbb mov xchg lods dec jo or inc push push loopne mov lods jmp nop pop js adc mov (bad) mov (bad) dec cvtps2pd sub mov sbb xchg outsl mov js mov (bad) fadds dec fs xchg jmp sub (bad) push adc push sbb cld das sub inc (bad) push and popa sarb xorl sbb test push (bad) add loope (bad) jmp (bad) fucomi push hlt dec test pop add cmpsl adc gs adc js ds aaa add lea fcoml inc in and xchg into inc dec sub cwtl xor add sbb or test cmp mov or pop mov jb add pusha cmp jns call int inc movsb mov jmp and xor sbb sbb repnz outsb dec imul cltd (bad) xchg das pop divl mov add subl in add iret aas add push and cmp add jbe stos scas xchg push fsts jo sbb xchg stos xor pop out add outsl push aas gs dec or (bad) pop imul push pop jns out (bad) icebp add cs mov jo jg fcompl iret xor sub xchg sbb cli scas iret inc cmpsl mov mov shrl js add inc hlt add add ss inc sub imul inc add mov sub ret (bad) in loop cltd inc dec push add pop mov lock call pop add push add cltd outsl xor pushf fidiv jnp mov or cmc enter push xchg in dec int adc test inc pop lret push mov mov cs cmc cmp jle pop mov jmp movsl insb dec dec xchg adc mov sub cmpl mov mov std lds dec sbb (bad) movsl fisttpll js stos xchg mov mov (bad) jmp adc push (bad) push loope cli rol add pop adc xchg pusha jne cmp scas enter adc out fisubl js pop mov sbb inc enter mov xchg div pop fldt dec xor mov push das (bad) mov in int3 out dec popf jne add out aad outsb mov mov push cmp inc xchg and cmp xor call push outsl insb push jo sbb xchg push je sub rclb xor push stos cmp loop call push push mov mov iret jmp int arpl cvttps2pi nop imull dec dec ljmp push clc sbb sub leave enter xor jg (bad) or stos jp gs adc (bad) (bad) mov pop jns div bound inc (bad) cwtl cld mov mov (bad) mov incl fdivrl jp (bad) push pop mov xor adc mov jbe outsl xor sti xchg nop mov lcall lahf dec test cmp fildl jns jmp cmp (bad) push xchg movb jne mov inc or sub insb idivl lds inc movsb es loopne and das xchg jo int3 popf dec daa pop or cmp xor mov rcr fisttpll loopne arpl pop gs sub fcmovnu ret cli int3 (bad) lea test lcall pop sbb sbb shrl scas sub clc and ss push add jns jne and loope xchg lds stc mov scas es and (bad) out stos rcl and jae std mov jae sbb jmp fistpll and cmp push pop pop (bad) in pop lret scas mov and push mov mov push test push or popa scas clc arpl xor pop outsl enter xchg sar bound and mov push outsl cltd mov (bad) sub sbbl out (bad) out xchg aad pop push sub push fmul mov push icebp push pop push sahf xor push js mov xor mov push cmp int dec hlt inc push mov mov lods ret sub lds mov jl mov push jbe xor mov das test mov adc cmpsb add push mov push jbe scas data16 insl out sub dec mov inc mov add sub rol arpl jns out adc sbb xchg es insb inc out pop xchg lahf mov jmp push aam es aam or cmp mov and cld cmpsl movsl rolb aas dec repnz (bad) div mov inc jns insl rorb in call int dec sbb jb test vphaddbd jne (bad) push inc lea popa pusha cmp leave js pushf lret cmp loop jp js mov das adc xchg fisubl xchg xor sub cmp loopne pop fnsave movsl leave dec xchg in mov mov stos add inc lods cmp sub mov mov (bad) push mov in sub call jb pop or cmpsb mov jb push mov pop mov enter jae push fild jbe mov das xor jno cmc and in mov jbe ja arpl aas repz lret ret ljmp mov bound inc pusha jle in int popf scas mov ja mov and pop jp lods dec pop stos sub xor mov push aaa outsl inc cmp xchg xchg das sub in xchg bound dec (bad) push jmp mov icebp fisttpll (bad) sbb out das lcall (bad) xor test pop sub mov in inc pop mov mull pop loopne or nop mov mov pop fiadd incb cmc rorb mov dec loope fnsave cmc pop xchg adc push sahf and sub push movsl insb stos cs scas lret mov dec mov jle movsl xchg sub jle jge mov stc sbb sbb mov js das imul inc fwait mov inc push arpl cmp scas lret lods dec popf dec in gs notb call insl (bad) xor aam and outsb popa cmp js cmp dec jecxz fs sbb sbb fdivr mov pop cmc push jmp inc sbb add cltd (bad) hlt pop mov enter pop jmp addl pusha jo pusha inc jnp inc jb (bad) xchg mov stc setle imul loope pop mov imul xor dec scas push (bad) adc ja push mov in aas sahf dec fisub aas push test scas mov adc hlt bound jnp lret (bad) loopne gs ss repz aam icebp push jle out sub cs pop cli test arpl mov mov test fcoml mov popa push jno pop and inc inc push jne jecxz mov sub jmp lds cmp fnstenv out mov ret loope sbb mov gs mov sbbb outsb inc out dec mov aam mov in das and cmp or jne arpl adc mov aad push imulb push enter mov imul scas or gs and xor mov push pop dec and mov push lahf push int push push sbb shr mov push push sbb imul jp xchg hlt mov mov fdivl and mov cmp stc dec pop call cmc outsl nop cs pop jp pushf aad add sbb lods mov jae jle (bad) rcrl rolb jbe jne bnd mov gs dec not mov pop in in cltd mov shl (bad) scas mov shrb (bad) push cwtl loopne push mov jns hlt inc adc add mov jo sbb inc jge sti mov sub mov mov aad inc cs dec sub mov sbb dec (bad) xchg sub inc inc fdivrs inc test mov (bad) and push cltd mov adc sti sahf adc mov movsl enter addb mov addr16 pop pop rclb insl pop rolb adc push test in push addr16 cmp sbb rorl (bad) dec inc cmp xor lcall xlat push xchg std xchg dec sbb xlat es mov sbb sbb test roll std (bad) xlat in add sbb sti repz xchg pop jns jg imul mov push inc mov and test scas jae push out cmp push push idivb cmpsl fsubl fstl (bad) loop cmp outsl jle mov aad adc bound xor pop and loope stc or lcall test lcall icebp dec inc aaa stc mov test test push inc inc push icebp and cmp ja in (bad) push xor stos push xor dec cmc iret les sub or (bad) jle add mov cmp pusha xor aam test sbb inc aad xchg movsb ret pop mov pop mov mov fs jns jo lds dec fadd jne or fadds inc stc fildll fdivs loope fistpll fnsave jmp add cmpsb outsb (bad) outsl fwait jle pop push mov inc popf pop jge ret cwtl pop mov adc xchg popa dec pop jne popf nop mov pushf pop daa neg cld movsb cmp add loop icebp mov push jbe mov ret sub int3 insl gs add scas fbld aam aad xor jge and jbe enter jl cmp add (bad) int out sbb popa and push push sbb aas subl lods fs (bad) pop int adc mov mov inc or mov adc mov js sahf pusha cmp inc mov idiv push jb xchg sbb cmp leave (bad) (bad) roll insb or das pop mov xor mov mov test push insl push jmp mov or shll lret lret addr16 or test xchg mov into mov repz enter cmpsb add or xor cli ja das xor pushl cmc imul add mov addr16 xchg adc add adc (bad) mov aad cmp or or ret mov push push xchg mov mov cmp pop cli sbb stos ror das push insb mov xchg test inc dec out inc lret pop imul mov clc pop mov cmovnp jne push sbb cld pop or or pop jbe pop jb xor and mov scas cmp pop cmp push cmp dec int aad mov out mov xchg sbb lea jne sbb adc loopne push loopne ss dec insb pop mov fidivr cmp adc push dec add stos sbb mov sub std fwait js and xor out ret sub mov rcr mov inc jb mov or ds mov aaa enter add icebp lahf loop mov push push insb lcall xchg sbb cwtl push rcll mov mov pop mov inc mov jbe mov fdivrl (bad) lods mov jge mov bound adc jo mov mov push mov leave add out shr (bad) jnp push cmp clc bound xchg sbb mov outsb jge in or aad mov mov out push fs mov push mov insl push xor sahf in push mov push stc inc adc (bad) ret into aaa cld shl inc cmp stc mov xor pusha xor aaa inc in fistpl out (bad) dec dec into jne std push inc pop pushf jmp xchg mov jp mov fcoml jge call fisttp push jae xor cwtl jmp ret cld or and rorb pushf sti jecxz sub dec jno inc sub jp mov cmpsl cmp jp mov sbbb fnsave jae add mov rcrb mov adc hlt in call sub inc sub ja (bad) cmp mov mov shl lret inc je cmp scas xchg sub fwait mov dec (bad) mov scas cld cmpsb mov mov ss sub and sbbl lcall frstor (bad) jl cs shrb cmp mov mov sbb aaa (bad) adc loop fwait sub dec das dec pop inc sub cs jg push ret sahf mulb fisttp and and lahf dec lret sbb iret ds ret ljmp rorb sub outsb push decl sbb ja hlt lahf jb mov outsl xor dec pop test lods adc scas std ja add mov and cmpsb fiaddl daa or inc cmpl movsb gs rolb jp mov out leave push andb mov push std mov scas loop push idiv ds dec (bad) cmp cmc cmp push (bad) out add and jmp add add sub out (bad) cli and dec sbb add push dec xchg push ret mulb lods mov sbb ss dec inc cs loope roll out xorl lret dec push fiaddl add mov sbb pop into mov ret call add in mov ds rcrb sbb cwtl and insb add pop popf and or jno cltd rorl out popa pminsw popa inc push pcmpgtd jbe mov inc fisubl nop ja sti dec test inc inc pusha push aad (bad) pop loope jae jle sahf and mov sbb out lods arpl (bad) or enter push fidiv jbe sti dec push repz mov jns cwtl pop adc clc or pop jo inc gs sub cmpsb bound int dec leave iret mov out stc sti sub imul jge and mov sti (bad) int3 imul xor jb sub or push idivb scas push inc add jge mov leave cli xchg (bad) adc daa cwtl les mov xor (bad) sti jno sub add aaa dec ds sbb fiadd inc jmp daa xor dec cmpsl aam push sti aam test inc aam push adc sbb pop mov jbe jmp add adc jns and lret sbb inc dec or pusha mov mov jecxz pushl cltd ljmp pushf cmpsb cwtl jmp mov bound test mov adc loop ror push pusha sbb iret pop jl and jecxz mov or cmp loop sub dec jmp push sahf fnstcw scas pushf loope mov aad and fimull jae addr16 and out dec push imul gs testl cmp imul add outsb ret dec lcall push std or mov aaa or xchg cmp add pop sbb test inc jns movsb lods and movsl adc std icebp outsl xchg pop push fiadd sub xlat sub rolb xor mov xchg jl (bad) pop or es jg lcall lds aad sub adc xchg jl cmp mov outsl sub xlat loopne xor ret add in insl mov adc xchg shl mov mov push lods jbe scas mov lcall shll xlat pop mov inc push dec imull loope sub stos push xchg in cli sbb sub or inc mov mov jns jno cmp push or (bad) dec or xchg je dec sub jp sub adc dec sbb inc sbb jmp mov add mov jno sub sub (bad) in iret mov mov int jp push pop lock sub sbb imul cmp call adc fmull lcall pop std or mov jg dec xchg push gs jo lea das and in inc cmc cmp repnz shll repz jmp testl dec jg shlb movsb mov lds loop mov jnp sub mov fwait add cmpsl jge sub push popf fidivrl nop mov sbb xchg or insl push out pushf ss pop cmp cmpsl rol mov out ss sbb (bad) and lcall lock dec or scas lcall mov sbb cvtpi2ps or push sbbb popf cmp mov clc jnp pop bound movsl mov mov into lcall (bad) int3 or xchg sbb mov scas adc sbb into fnop mov cmc nop aad fsubrs cmp jecxz stos mov fiaddl movb lods xor xor fimul int3 push int3 ds mov sbb xchg sub lds sbb ficomp xor lock (bad) mov adc jbe mov jg adc sbb ljmp stos in or jns cmp xor xor xor mov cmp iret cmp out je sub int inc mov (bad) push xchg aaa add insb enter cltd xchg pop xchg movsl cmp mov xor data16 ret xor mov or sub dec lea jp inc inc xchg xor xchg stc imul and (bad) cmc push shrb dec out push jl push iret mov or in sarl cmp shrl or lahf fucomi (bad) sarl out daa rorl inc lods ljmp pop push aas push movsl stos jno or mov mov sub dec out mov addr16 rorl (bad) cmp sub repnz sbb dec dec out pop or int3 cmp fcomps and mov js xchg fcoms push sarl and shlb mov add inc push popf (bad) dec into sub in aad sub in inc inc push mov xchg push mov out inc mov pop mov popf adc or cmp dec push adc rcrb dec push (bad) std ja aad dec push add js orb inc out inc or dec or inc dec ret pop mov out jno mov inc into enter sub jns mov (bad) sub push mov jge inc and mov or jno push (bad) ficoml cmp fstpl push sub inc mov jne (bad) sub and sub dec dec test cmpsl ja sub jns sbb (bad) dec nop stos dec lahf pop test lret pushf cmp mov std jecxz addr16 sub daa idivw dec int3 lahf xorl mov pop cs test call cmpsb pop xlat test mov or push xor cmp dec addr16 cmpsb arpl jmp rolb inc inc aad jge popf sbb fistpll imul out jmp cmp sahf pslld gs flds xchg inc (bad) sub push pop hlt adc (bad) adc pop add testl cmpsb out jnp jl lea call icebp pusha mov or repnz mov js xor inc cmp inc iret hlt push push movsb xchg mov mov pop ret aam sbb xor xchg shr pop or in test js (bad) jg mov xchg leave mov fdivs fxch subl cmpl js call jbe pop xchg jno inc bound jns dec push imul xchg inc aaa subl pop movsl in sub pop mov in dec sbb cmp pop divl sti lods push inc ds popf xorb mov repz aas mov shrb imul xor test mov and push jbe outsb outsl xor (bad) mov add jl jbe mov mov hlt xchg mov pop mov add push aaa insb sub jge icebp push push push xor int3 xchg addr16 mov jge and cmp pop xchg xchg mov movsb jg pop imul in xor insl cmpsb scas cli jbe mov fs adc and lret clc pop cltd ja (bad) adc aad xchg mov inc mov jnp and jmp or add (bad) mov dec aas test aas ror lods inc gs out xchg jns mov aad jne jae mov dec nop jnp icebp inc cmpl or (bad) je loopne xor mov xchg sub xchg das adc push (bad) rorl cwtl rorb sub dec sahf (bad) jbe adc dec push pop mov aam xorl mov xor lret sub lea mov fs cwtl iret sti dec dec cmp inc out and xlat out sbb cmpsl adc mov andl push jl inc bound addr16 mov repnz jmp cmp (bad) cld xor lea scas mov mov arpl test cmpsb mov push adc pop sub jnp cmp fwait push cmp push push scas push mov rcll insb leave or xchg lahf int3 int xor aad mov add sbb in inc adc shl popa fisubr dec lcall sbb xor (bad) nop mov adc or fwait test sub sti stos sub sub push and adc mov sarl sahf sbb popa cmc push stc jbe out cmp add pop xchg pop adc mov mov insl insl sti adc push outsl push cltd cmc sti pop jb xchg push xor rcll xor mov out ret mov and jmp sarb or fildl pop inc repz test cmc enter pop (bad) arpl imul sub hlt add fsubs psrlw xor jmp mov mov lds sarb les shll movsl mov jl inc lods into jge lods iret or add pop testl rol xchg data16 mov mov mov pop mov mov ja mov mov xchg xchg nop adc gs push ret and mov jae fs enter mov shl cmp mov mov adc add push je imul ds jb es int push ret and sub push (bad) jmp dec mov push jmp add or fcomps jge mov pop pushf xor mov cmpsl stc or and inc pop mov xor fs insl and (bad) lods cmp jle rcr sar xlat xchg imul lret xchg lds push divl dec shl lret mov insl stos les pop fisub mov loopne jle mov xchg clc or mov mov xchg xchg mov stc adc hlt add or jne std push popa push fbstp fbstp mov in pop cmp and bound pop cli pminub test inc sub negb add lock stos dec push sub lahf cmpsl std add xchg xchg dec adc fwait pop sbbb dec ret test data16 (bad) mov or sbb addr16 cs cmp sahf mov jg or push sti push lret pop in jbe outsb ja pop cmp add (bad) dec leave rorl adc dec mov xchg addl cld dec cmpl ljmp in mul mov cmp sbb sbb push and scas xchg add cmp lods fisttpll fsubl mov sub jl jb test jb inc and fsubrs daa adc and cmpsl push pop hlt into call fs test dec int3 sbb add inc and xor imul loop test inc dec sti xchg inc sub or test les push sub aam fldt push lds nop (bad) mov pop cmp cmp mov call das sbb xchg or jne test mov out and jnp adc pusha inc add sub cmp push test jl loopne jb in kmovb test push cmp aad adc test aaa and xchg clc addr16 xor fcomps inc lahf xchg fsubl dec ds ret add aaa ret jl scas notb pop (bad) ffreep movsl pop inc lods push adc push inc pop enter adc jp idiv fimul mov and xor mull sbb cwtl call icebp pop inc xorl mov mov inc jge pusha jno (bad) pop inc cmc hlt sub enter jnp nop (bad) movsb gs adc stc push jp or cmp sarb or add call fnstcw (bad) dec frstor or (bad) jl loopne cld add and push sar (bad) mov push loopne stos lods scas cmpsb cli jne shr sub and adc jecxz inc (bad) jbe outsb shr sbb pop sub insb add mov inc push (bad) lret ljmp sbb lahf sahf imull push rcl mov or jo jns add pop out (bad) dec nop adc stc les out pusha mov mov jb loope sbb inc frstor in lods jp xchg mov scas and xchg cmp int mov idivb lret (bad) mov mov leave lret jp push push idivb jp call sub aas scas stc cld mov je ror (bad) sbb insl add mov dec lea sbb mov pop jmp adc mov cmp (bad) je or mov imul jp mov (bad) ss push ja ret popf (bad) jne mov xchg cmp popf into test and adc mov pop ss sub mov mov ljmp cmc adc dec or daa sbb adc push sub sahf pop movsb mov arpl mov mov and cltd adc inc imul repz xor (bad) sarb or cwtl outsl push test mov jg js xlat dec test jb out outsb push ja cmp xchg dec jg xchg mov sbb cmp or mov cs dec mov cmpsb stos ljmp ds dec stos jns call pop mov fsubrl jo pusha cmp dec (bad) xor sub aad mov (bad) fiaddl push lods imul stos lcall and pop mov int3 int aad push loopne add lock hlt and imul xor ss fs push loopne pop (bad) outsb scas pusha dec xchg pop mov sbb (bad) dec xchg inc mov arpl jp das ficoml into and icebp insl xor icebp add cmp in fmulp lods pop lds pop add jnp je frstor adc xchg adc or add fsubs and pop inc sub cmpsb add mov pop inc and jbe fcmovnbe or test and sbb dec lcall inc inc fsubr and cwtl jo addr16 push incl cmp lret push mov lret repnz xchg sub arpl mov fisttpll cmp fsubrs and loop negl pop sub test xlat jo out pusha jle call (bad) out xchg push jno popf adc mov pop mov test insl xlat sub lock mov js jl push js pop fcmovnu push clc or dec adc dec inc pop pop imulb (bad) jmp mov test xchg loope addl mov sbb or mov sar rcll inc loopne push cwtl (bad) sti xchg pop mov pop daa vunpckhps lcall mov mov pushf push rol lock inc push push repnz cmp inc adc test rclb leave les (bad) fdivrp out cmp fldt insb sub cmp imul (bad) cmp je orl aad rcl in fs rol je dec fsubr cvtps2pi (bad) shrl mov std pop sahf mov cmp movsb sbb xor sbb mov mov inc dec or ja xor sti pop lods rcr xor ss ret call loop dec rcrl xchg fnstcw mov mov sarb jne sub sahf es dec add adc mov sub imul jae sub xchg push js js mov fnop movsb dec mov into lret adc mov pop getsec sub cmp popa or xchg add shrb and pop loope mov sbb mov sub lcall jns out push cmp das call push sub outsb mov mov or sub mov lahf out pop push push xchg popf and adcb mov lea sub into (bad) es fdiv (bad) cld std repnz ja mov dec (bad) cs mov jp sub mov fildll pop mov pop cmc xchg scas xchg sub sbb (bad) push arpl bound lret and movl push data16 and xchg dec jnp mov iret test lods (bad) push enter xor test fs js add insb mov mov sub pushf add jp adcb call int3 (bad) shlb inc jno in cmpsl xchg jmp rolb rcrl sti dec inc dec ret or daa ss inc push loopne je outsb jae lods popa and or lea icebp arpl cwtl and jno daa mulb addr16 inc outsb adc andl cmp mov repnz movsb or and icebp ret pop adc xchg aam add sub out xchg ss (bad) and adc int3 clc mov dec and inc push sub cmp and sahf fs out imul cmp adc lret mov jmp pop pop pop inc mov fs imul mov imul push repnz sahf test jmp xchg int out pop jae lahf (bad) xchg pop xchg xchg in jne loopw,pn mov lcall mov (bad) mov adc sahf and mov addr16 gs dec psraw pop jg mov cld and mull xchg mov sub and sti push inc xchg sti les xchg imul add xchg (bad) das or int3 xor fimul sub or sbb in into ja xor add ficompl cs in add (bad) lret cwtl (bad) mov lock inc and fs mov mov call sbb mov mov fisttpll bnd call and insl xlat sbb sbb cmp scas mov inc in cmpsl mov int3 mov dec xor mov sub nop je cmpsl adc jb add add push ds rorl and insl fwait test push pop stos test ret insl push lcall insl mov (bad) mov jno stc cmp cwtl or flds push cltd movsl hlt pop imul cli inc mov ret int3 cwtl pop inc add add es int xchg cmpsl add cltd sbb fnsave cmp jnp mov adc mov cmp cmp jg push and outsb sbb adc js cmp fcmovnbe and pop dec mov xor dec out dec pop cmp xor dec xchg push pushf and jno jo sbb inc jmp sti (bad) lods rcrb daa jge adc cmpsl and fidivrl iret nop mov ss pop hlt cmp roll dec (bad) mov repz sbb aas mov mov hlt fwait mov and data16 clc inc enter push stos jo jg (bad) mov mul jmp not dec lods and dec imul aad jge mov fcomip daa addr16 pop ljmp mov push or test or xor sub adc loope mov mov outsl jne mov push dec cld and mov addr16 aas xor (bad) repnz mov (bad) mov jle pop imul test scas cs scas imul cmc xor subl mov inc clc pop xchg mov ret in adcb or cmp cmp adc (bad) and inc xlat lds repz adc fiadd mov and les (bad) iret call enter cmpsb xlat jecxz mov ja in lea stos mov xor adc push lahf push jae add mov fs jb mov xchg shr ror movsb shll lds pop and outsb fs cld (bad) sbb pop adc and stos mov pop (bad) jecxz call adc loop xor fnop xchg mov aas (bad) ja jg push negb mov movsb imull movl cld cmc or xchg xlat gs push lods loope lds lahf mov aam pop mov repz mov mov adc sub ja push stos inc pop mov std das fwait imul mov mov andb mov fcomps lahf (bad) adc cmp or inc jns cmpsl sbb jbe mov mov stos adc lcall and (bad) scas arpl orl inc data16 cmp mov movsl movsb mov jne add or push mov into jne aaa je dec push mov insb inc sub lahf mov stc and mov and mov xchg loopne mov xchg cs and std mov jecxz mov jle jle out pushl leave jb mov dec and sbb lahf imul pop pop imul or fwait test mov imulb or and (bad) subb mov outsl pop push lcall rcrl push inc jae lret inc or (bad) sar in test cwtl test arpl iret imul enter adc xchg fildll sub imul lahf fidiv pop scas xor push jmp (bad) pop cltd or push (bad) and add sub test cmpsl mov (bad) stos or xchg xchg cmpsl xor ret dec push push ljmp inc (bad) push dec cwtl xor adcb in push stc jmp sbb dec (bad) xchg notl lcall cmp loope sub in cmp sbb jl (bad) add rclb cld push call data16 mov jno mov mov (bad) sub int cmp aaa popf and dec dec rcrb pop and add mov adc rep les pop ret (bad) jge out sarl js inc pop push add dec lea inc daa pop sbb std das cmpsb pop mov inc mov mov fucom and movsl repnz pop in pcmpeqw bound adc pop ret sub (bad) emms ljmp mov mov jge ja dec jmp ss lods jae jne xor dec jg aaa roll sub bswap lds clc mov lcall (bad) std add mov scas xor cwtl inc and mov sbb mov pop out xchg sub les xchg inc in test (bad) cmp lds mov inc and cltd in push sahf in int jp pop adc unpcklps and sub push test dec ja cmp movsl (bad) pop imul pop add jle jns add sub fwait (bad) adc test pop jb jle sub or mov adc lea data16 rcrl scas sbb fistpl mov lahf mov pop cld sbb jmp out inc xor ret sbb ljmp outsl sbb jg jo xchg (bad) pop lcall pop mov jp push imul ss mov push enter popf xchg outsb insb push subl ror or mov xchg or std in nop mov out cmp jp xchg jne xor (bad) mov pop sub sub repnz popa mov loop (bad) lahf stc imul repnz movsb mov fild scas push xchg call jge int jae push jno stos cltd push cmpsl or mov hlt mov adc push aad mov pop lea repz call jmp les pop or test shrl cmp loop cmp lret cmpl xchg sub sbb cld test in push add (bad) mov test imul cmpsl pop imul push mov int3 sub cltd inc jg data16 sahf stc mov lcall mov xor out mov adc fwait xlat inc out jae inc xchg cmp jle aad cmp fwait inc stos popa cmc int3 dec (bad) cmp jae push lahf gs sub and mov jecxz inc dec add mov shrb in push adc mov mov popa and jne sub nop and sar outsb jecxz je jne mov add lret movb xchg out out call push jp iret pop mov inc or imul xor sbb notl mov cmpsl xor psubw iret pop ret cltd sbb push xchg jnp and movsb push fmull xor mov rcll jne adc and inc mov inc or call inc ret test sub cmp lret push pop mov pop mov loopne sbb xor sti push mov (bad) cmc pop xor push aam push lahf rorl fimul cmp lods loope pop call jecxz iret inc daa sarb aaa jmp or push and xlat lahf mov rcll mov xchg movsb test imul and inc cmp jne pop xlat pop add sbb push lret mov jmp js gs cmp mov mov cltd ret jg inc mov fistpl dec mov in ret jae clc jno fimul sbb popa pop dec jmp dec add lret mov jmp xchg call (bad) adc or or fisttpll jae jbe ss push xor inc or movsb loopne in aam xchg or xchg cltd data16 mov xchg fcom in std cmp mov stos mov mov sbb iret stos lea xchg punpckhbw fucom push jne insl pop adc aaa std and pop push (bad) mov mov push int3 call add cli jp loopne and or aam push imul sub push adc test or loope js push pop inc inc dec jle jns xor pop test mov push sbb (bad) insb xchg cmpsb cmp lea mov andb cmpsb or insl push push inc jno cmp sbb pop pop pop cmp xchg hlt add pop sbb xchg jecxz jo cmp ret orps cli fisttp insb test pop xor cmpl and pop call fist pop xchg pop pop out or push xor xor (bad) outsl cmp xorl xchg jp fdivl rcrb add (bad) mov fcoml lods jb ret sub (bad) sub imul fstpt ret push add and sarb clc outsl aas sub fldl dec mov nop sub cmp fisubl pop jae mov lcall push dec insb popa xor lcall sub inc pop mov cmp sbb arpl mov andl sbb jb loop xchg jmp mov das sbb ss (bad) popa outsl xchg push sub lcall sbb fbld fnstcw cwtl sbb mov push ss mov mov adc jg pop jns pop cmpsl adc (bad) push push fdivrl sub scas jnp cltd mov test adcl (bad) cmc xor outsb movsl repz xor push lcall test xor push sub jo pop push sub pop mov dec fwait cmp pusha insl and pusha xchg jbe jb sahf bound mov jle cli popf leave cmp mov add ret mov pop mov (bad) popa cmp (bad) inc pop fldt pop mov (bad) movsb push shll sbb dec sub hlt pop cmpsl add and decl movsb dec in mov dec sub outsb in rorl xor dec xchg jo lret inc jne imul je addr16 jno mov in mov push inc outsl jnp sub pextrw sbb jnp mov fstpt push push dec xor xor mov cmp push pop test mov sub pop pop xor scas cs fwait sbb sub aaa adc sub pop test adc fdivrp pop mov es outsb or xchg leave mov dec or (bad) lea cli xor js adc popa dec in jbe call lods arpl or xor dec pop adc or imull icebp movsl ja xor les jbe pop scas jmp fmulp adc shr ss inc and (bad) cmp add cmp ja mov imul ja in loope in (bad) mov jb or inc xchg mov cmp (bad) sbb outsl add inc (bad) mov mov mov xor inc loopne subl push repnz xchg dec mull xlat mov andb iret dec jns xor mov into aam in mov imul add xor out push addl (bad) mov dec js mov pushl mov inc shr ret adc test rcll and outsb dec fadd mov and bound push push dec sub rcll loopne mov jle add sbb int3 or ret dec sub jmp jno adc cmp enter call xor cmpsl add stos cmpsl cld jno popa xor and cmp pop bound xor stc mov xlat inc and inc add dec loope mov push push outsl out stos xchg mov lods imul mov in out lea mov pop (bad) mov ret fs mov lods adc mov enter jbe ja push fmuls dec xchg testb or push mov in fbld mov dec xchg outsl or mov lods mov xchg mov inc daa sarl mov jle and bound inc inc dec inc cli mov xchg pop rcr in test xchg cmp dec lcall fidivl pop mov mov pop mov stc std test mov cmp xchg dec in inc cmp stos or rcrb xchg (bad) adc jnp push inc daa loope dec mov (bad) out pop push mov cmpl iret xor xor xchg push jg lds fdivrs insl fcom ret push cmp jl dec les push or adc add xor (bad) cmc xchg imul xor or pop mov mov hlt sub xor inc push lds push cmp fstl insl das fnop jo fidivr dec outsb fdivrl fimul mov fisub xchg mov cmp enter lahf pop lds (bad) sahf cmpsl xor pop or push xchg dec cmpsb sbb arpl xor outsl in and daa cltd out push pushf mov mov jae (bad) stos jne xchg jae (bad) jno push mov arpl sbb leave and sti push push addr16 (bad) ret jg cltd xchg xor xor ljmp lods (bad) in jecxz addr16 push sbb add inc mov into jae fdivrl jmp sbb dec mov jne (bad) mov js inc or xchg and std insl pop mov nop xchg (bad) shrb or xchg xchg iret dec fs call pushf dec pop mov mov and (bad) mov sub pop mov pusha push lods push imul sbb pusha xor sbb (bad) mov mov repz cmpsb mov int mov lock push xor ljmp sarl xchg jp mov push insl gs pop out sub adc sbb fstpl ds lods push adc gs mov aaa fdiv adc and or mov cmpsl and push dec push adc push adc enter add cmp lret mov adc cmp fdivrs les out cmp mov (bad) push mov or (bad) (bad) out es hlt mov pop mov cmc push add xchg sbb add mov cmp mov (bad) sub scas xorl ficom dec loopne jns jmp rcll popf (bad) jno push mov xor out out lret jl in mov in sub mov insb pop inc mov (bad) idivb (bad) lock sub and inc push jp dec jl outsl notl add test out jae lcall mov cli sahf aad mov and inc cmp inc sbb fist jae scas (bad) (bad) lea fdiv cltd scas fsubl mov (bad) fsubs sahf cmc jb fsubrl xlat inc or pop and mov push jae mov lds and add adcl lock mov iret testl pop int lods mov add das aad lret (bad) mov or push and dec mov mov mov mov pop sahf pop pop sbb rcr in cmp push or loope or xor jecxz lcall fwait negb adc push lds sti inc lea mov test or pop sub lds fdivrs pushl jno fwait lret mov cmp es mov cmc push fild je cwtl ss pop lret cld or xor imul notl int3 push imul sub pop fucomip xchg sarb adc inc (bad) xlat pop ja ret in icebp jl data16 sub jns addr16 ret fimul int pop idivb sbb push test mov data16 icebp mov sti dec mov jmp ljmp insl add scas push jmp fs dec sub lods inc sub or popf icebp std aam cmp add aaa std sbb js add inc loop jb daa sub lcall and cwtl jl and dec std push and mov dec xchg mov xchg xor mov aaa or outsb jno (bad) shlb jbe cltd ror and sub push icebp rcl sbb std ja in daa or inc out mov cwtl sbb mov mov mov and and sbb add sub mov stos mul sahf (bad) mov aad movsb jmp repnz sub and ror cmp jae xor pop lods cld jmp fldcw cmp inc pop cmp push add xchg jns (bad) testl imul pushf mov adc xchg xor lock mov das sub in push jnp xor ret ds icebp sub fstl mov std std add jle mov adc push lret sub outsl int3 push nop in dec div mov pop lds subl rolb push jl fidivrl sub push dec adc fstpl push es aas push sbb sbbb pop rclb mov imul outsl xchg fwait repz dec (bad) pop xchg test dec fisub and inc ds (bad) mov mov stc pop rorb fmuls sub or cmc ds cmp (bad) sub fcmove lahf or clc mov inc jg je out cmp mov cs jecxz push dec dec cmpsl jp ficompl je dec mov and mov jecxz ss xchg lock xchg mov (bad) sbb adc and sbb xlat sub mov outsb addb cwtl push push enter or mov adc ljmp xor popl out and or mov stos ret pop scas pop insl xor or dec jmp add xchg es jge cs xchg das and xchg or sbb hlt pop pusha rep cmpl push in call out cmpsb dec jnp sub mov pop inc maxps data16 push mov lret mov test das xlat xor push xchg fmull pop insl dec pop mov mov pop lods das (bad) and cli enter test sub enter fistpll fsubrl jg mov scas das sbb test je sub inc jns mov icebp push lea jne leave sub aam pop xchg mov adc (bad) sub popl aaa inc sahf or (bad) jns fidivr nop cmp mov dec push push sti push inc das ret sbb jmp into mov fwait cli adc cmc inc pop add daa cs shll hlt pop push inc adc inc pop cmp (bad) nop dec cmpsb mov push jae and push add pop fcoms and sti loope xlat roll popf ljmp mov xor xchg jno neg push jg pop sub cmpsb sbb repnz daa sbb jb dec ds inc addr16 cld jg fistpl in or cmp jl inc (bad) sub (bad) add xor sub or sbb xchg mov fstl adc sti les aaa xchg jmp in inc cmc jle mov mov jmp xchg mov mov daa jne push movsb sahf lret add dec popa dec ret repnz jbe xor movsb dec pop ret pop jl loop into icebp test movsl cmp pop aaa fsubl or and push fnstenv push jp cmpsl xchg mov cmpsl aas inc scas es ds add sub mov push cmp mov ds and mov lods std or clc fnstsw mov movsl pop (bad) sub mov mov and lock pop cs cld fs or fild imul cli or xor sub sbb in jb xor das mov mov sbb out and call jge dec sub nop mov (bad) rcr stos or sbb je std (bad) sub mov mov mov inc jns xchg test cmp stc add testb idivb ret mov push test jecxz stc out cmpsb sahf dec dec outsb (bad) pop iret (bad) imulb (bad) gs lods ds popf sub or (bad) cld adc dec dec jae aam inc lds cmc mov imul out and lea xor jns push (bad) ja sar cmp data16 ret jne lret mov in mov fwait inc push test dec into or mov movsb pop push es xor fmuls aas cmp pusha mov inc inc clc repz cmp push xor ficoml jp subl mov cmp cli xchg cmp sub out adc dec lcall jno pushl adc inc iret out aas cmc add inc xor int mov (bad) sarl das add out push (bad) ss dec mov and test addr16 fldt push fs inc mov lods fsts mov cmp insb fcomip popf dec (bad) sub call test adc int dec xor xor lahf inc ds mov xchg (bad) mov out add xchg rcrb fwait dec mov xor (bad) dec in sbb xlat sub cs cld add inc insl mov xor mov adc push stos push ja add cltd mov add adc ljmp aas gs xchg mov pusha mov (bad) addr16 repnz out mov popa addr16 (bad) xor push movb mov pop fsin adc lret mov frstor mov loop mov dec pop xor bswap mov inc dec inc sbb lods popa mov in lds sub xor ret cmp push mov mov mov in fdivp pop inc lods test (bad) (bad) sbbl dec call xchg lods lret pop dec cmpsl aas push and dec mov mov cs push test mov clc and int (bad) or jno pusha fadds inc adc mov leave xor ja jmp jns pop xchg popf jmp inc xchg mov movsl lds (bad) jg push std adc or xor pop push push les cmpsb clc and test mov pop test (bad) fdivrl out dec out jle sub pop push popa cwtl or fisubrl arpl (bad) stc sbb bound stos ljmp pop data16 cltd fisttpll data16 lods pop xchg and insl sti leave fisubl dec xchg test mov adc jb fwait hlt std cs in jb push xlat or xor fwait pop scas ja mov addr16 andl popl jbe stos pop and ficompl das paddsw xchg xor (bad) jp out aaa xor mov stc mov or arpl negb out insl jb test mov add mov push mov and iret add add out movsb jno cmpl into mov inc jge push add dec inc xchg xchg jmp pusha pop lahf jo mov xor andl pop test xchg test push nop idivl imul sbb adc sbb rorb jo xchg imul fisttpll pop ret scas inc mov xchg push mov mov aas add rolb test or in (bad) (bad) lret xlat adc sbb clc or stos xor push mov sub adc xorl arpl cmp aam lret lock mov ret mov rcll xchg jb adc add mov mov cmpsl sbb adc int xchg ljmp clc rcrb lock icebp outsb std mov pop pop test repnz les dec inc scas jb movsb out xor cmp adcl cld jmp (bad) mov movsl jmp xorl pop pop push cmp inc test pushf cmp negl push cmpl fidivrl aad test jmp and sub cli pop imul jne loop cmp arpl add pop data16 adc cltd out push cmp pop jl pop push outsl dec or sbb jb loope rclb or push pop cmp out adc jmp lock outsl addr16 push mov movsl add outsb cmpsl insl jge push jle (bad) cs xchg icebp mov dec pop mov lea mov outsl inc cmp add mov jl ja xchg lret jg mov ret cmc mov (bad) pushf mov dec std xor xor sbb pop movsl popf inc lods xor jl int3 (bad) (bad) lock inc or decb rcr out sub pop setnp lret (bad) cld std lret fadd in insl mov aaa xchg add roll pop push (bad) imulb mov imul addl cmp enter push lock ja add ret pop push sbb dec cmp out adc fldcw dec jns inc push bswap xlat int3 sbb arpl loope push mov mov bound comiss cmpsb xlat cmpsb mov mov sub popf and cs push xchg mov pop push not mov lret fistpl xorb idivl pop pop and add mov bound dec mov fistpll adc mov push clc pushf rorl sub sbb cmpsl stc xor ds mov scas or js pop lock mov xor insl or popf adc push xchg les lock sbb pop and jge ss das push idivb insb adc xchg cmp pop cmp mov nop or lret adc in aas repz xchg cmp push pop dec addr16 gs shrb push mov popa inc sbb xor inc lcall push lods pop jg cmpsb fcmovnu (bad) adc cltd js lcall bound addb lea jne (bad) add adc fnstcw scas subb mov mov adc leave mov scas (bad) js sbb add or out push mov and (bad) clc pushl sti pop push cmpsl das js add xchg mov ficomp or outsl xor bound lock pushf jle dec or or jmp xchg pop sub add pop xchg fsubr icebp adcl shlb cmc pop jo sbb rcrb pop hlt inc mov dec and sbb sbb sub push mov les jne xchg sub sbb (bad) dec fiadd movsb insl xchg loope dec fnsave cmp sub in push or xor ret push adc in pushf cmp lret bound ljmp lret out xchg sbbl fs sbb jle (bad) push fist gs xor test insb fwait loop xchg mov sub shrl ss in jb or sub test and clc frstors xor jl test mov mov mov fiaddl into addr16 adc pop fcomps cli and pop ljmp stc fsts mov mov pop or push stos xor insl or fild pop icebp add jecxz sub aad sbb ljmp in and int3 iret fldl inc lret push jbe cli and dec push jns add arpl jno hlt add push xchg cmp cli clc mov mov outsb (bad) stos orl cmp mov add push cmp jo test test mov push mov dec pop nop pop daa out outsb lock outsb adcl jnp inc aad xor cs jo daa out inc pop shlb push frstor pop sbb dec in cltd (bad) mov movsl out (bad) push mulb adc jge xor test sbb xchg cmpl or mov popf push lods movsl mov add arpl int std pop (bad) dec mov pop xor mov jecxz jae add inc jns mov lods adc push adc dec stc out repnz loop xor pop ret popf js (bad) xor push out int scas push xchg jns subl cmpsb xor data16 sbb push mov cmp inc jecxz aad jmp (bad) jle adc mov cli cwtl sub out movsb jno scas mov jl dec xchg in aam xchg sub movsb test jmp mov cmp nop dec popa cld pop and sti loope cmp xor xchg mov in fldenv adc mov cmp ljmp push ror sbb out in mov inc enter rol cmc in xchg add test jecxz fldl arpl pop mov cmp jne pushl fs xchg push xchg lods adc rcr int hlt mulb mov ja ret jns xchg or xchg mov mov aas jns (bad) xor repz xor movsl xor pop addl in scas xchg fstpl (bad) and shll in int3 jno and sub div (bad) test dec (bad) stc (bad) xchg xor push pop cltd mov scas push (bad) xor loopne fldenv ret lcall dec cld mov fstpt sub inc sbbl test jmp test or scas (bad) adc push mov std incl pop dec fs mov data16 inc push testl and (bad) int3 xchg xchg mov fsubrs sahf jnp sub je fs mov insl sub lds mov cmc sub pop test enter je push jo push pop mov fidivl aam inc pusha cmpsl mov out dec xlat xlat cwtl sub lock rolb inc pop mov and dec testb xor lcall pusha cmp enter dec mov (bad) pop pop leave inc call or jge cwtl addl push ret push je jbe mov push xorl sub hlt pop fstps jbe xchg faddl popa mov push stos fbld or add ds pop popl cmp (bad) mov xchg aam mov or cld and xor add fwait cmp mov push or and aam inc cmpsl in aaa and mov stos int insb xor vmwrite loope es xchg mov jnp cwtl jge jae int3 int clc lea loopne dec jae cld iret insb loope (bad) jne dec test data16 jecxz int in in mov popa (bad) in ret mov adc leave mov insb stc jl push je fnstenv fdivrl lcall pop stos mov dec xchg mov inc in jg mov xchg nop pop mov xchg sarb repz mov xchg xchg loopne aam (bad) mov pop icebp idivb cmp scas outsl cmpsl lret xchg (bad) sti xchg pusha ret loope or and insl xchg jno xchg xor mov (bad) xor mov lcall jmp inc lock sub cmp jle jle jge out jbe movsb jl in (bad) dec test add test cmpsb jmp xchg jecxz pop (bad) lods lea mov add and aad jnp sub flds jg jmp inc in lods jno dec cmc cmp sar xor fdivl cmp xchg xor int3 add andl mov neg sbb push into jns je sub fistpl (bad) and and add stos out std and call pop lret out ljmp xor dec push push scas (bad) pushf jae es xor jbe rcrl pop add aaa fdivrl mov mov mov inc insl and (bad) sub xchg mov ds insl inc push aaa in dec out in (bad) sbb xchg sub sbb mov dec (bad) mov pop lods aam (bad) test or shlb movsb movsl sbb stc lock mov mov xor mov pop iret cs mov loopne or adc pushf rorl pop mov push mov dec jb mov stos (bad) std adc fmuls stc nop iret and mov call add pop mov xchg mov cmp (bad) mov es sub jae xchg mov jge sub daa adc mov pushf inc push pop xchg into test leave and scas test es fsubrl inc aaa mov data16 xchg pop (bad) mov clc inc dec cmovo leave sub xchg call mov pusha fwait clc (bad) jmp mov test jl mov fmulp push test stos int3 sbb cli scas jae push insb xor inc adc shrd add add addl pop inc test mov dec roll push (bad) mov out outsl dec adc push mov push imul inc test test push pop (bad) sbb or stos ds inc bound out test sbb aam jne dec sub pop in xor jo sbb mov ret xor (bad) in and cwtl scas add jp and int jmp (bad) jmp hlt hlt inc xor hlt or rcr loop in push add mov adc push cli lock adc xor push divl gs das test adc popa push add xor push test jae and pop sub shlb push xlat arpl mov sbb int (bad) mov movsb inc or xchg xchg and test js dec add xor adc add stc jae dec sbb loop mov xor mov and jle nop xor push mov das mov push xlat jl cld (bad) lahf xor adc (bad) or repnz add push cmp sbb or (bad) ss out fadd movsb rolb in push add cmpsl fcompl mov rcl pop cmp sub pop cli adc pop aas mov cmp leave jne and add mov sub add aad loop ss mov test movsb mov cltd (bad) ret and lods aas test out jmp hlt into push imul push gs lock adc push test xlat cwtl fisubrl pop aad in outsb fdivp and and rorb add add pop pop fidivrl gs fwait andl outsl mov push les push adc xor cmpsb addr16 cmpsb push sti outsb mov mov rclb mov add mov add push cmpl mov int roll stos cmpsb xchg lods cs dec mov or push mov inc lock jecxz repz enter or jnp js mov push push repz pop or sahf stos outsl iret dec pusha mov push jo dec cmp xor in and (bad) sbb movb loope lock and mull sbb mov and test fistl push repnz pop ss arpl loop mov mov lret mov aad popf pop aaa inc in popf push out cmpsl rcrl leave sbb mov jae nop mov (bad) enter ret push rorb adc push pusha gs inc imul mov xor enter loope jp stos push scas sahf in add add sub stos out lods adc jmp out roll stos cmpsl cmp cmp cld popf ds pop push les adc std pop xchg lahf cwtl stos cmpsl jne adc or cltd or insb int3 fbstp and scas insl aad into xor sti stc sub mov xor clc cmp sbbl push sub xchg test mov xor sub dec xchg add fidivrl cld add jecxz pusha sti inc ss pop repnz pop inc sbb xor leave mov mov mov sub outsb in mov iret adc sarl imul fisub repnz jbe fsub mov sbb pop scas xchg mov lods xor sub insb mov (bad) jl cmp movsl add clc mov mov pop push fdivrl lret andl test sub insl mov loope add xor les jle jno dec xchg gs xchg ror or ja rclb iret cli arpl xchg jecxz jbe pop mov aas iret inc inc dec imul xor insb rorl dec mov pop pop or (bad) sbb fmull aam cli inc leave add cmpsl loopne data16 fisttp call in cmpsb sbb shrb outsb xchg dec mov test jl insb gs add pop add test xchg push sub divb in xor aaa movsb xor lahf out fst adc insl add gs mov mov ret das in nop cmp les pop pop cmpsb gs cmp fs pop out mov fnsave inc mov cmp es pop es fdivl enter out data16 xchg inc fisttpll xlat xchg xorl scas mov arpl mov pop mov loop aas pop in fldt push sbb (bad) iret or fisubrl mov clc aam aaa adc jg push jmp cmp adc inc cmp mov je push jns fadds js movsb push (bad) cmpsb mull loop pop fcoml sub ds push sub jo lods call jns and xchg inc iret jg mov sbb (bad) and dec pminsw push xchg jge outsb scas jb outsb cmp fnsave push inc pop ja sbbl pop cmpl adc test gs pushf xchg lods stc inc adc sbb mov cltd ss xchg push xchg int push pop xor in and test add lock mov ffreep lds (bad) jno fdivrs sbb xchg xor cwtl out add cmpsl xchg mov shlb sahf or fwait es scas hlt nop pop xor sbb ficom ja cmpsl sbb cmp (bad) sti fucom outsb stc cmp insb xchg insb fmulp mov pushf mov cli inc lods (bad) (bad) popf lock lret cmp add gs rcr add mov cmp fwait sbb sbb xor push ror jge mov popa sbb jl add sbb or fcoml mov sub fdivs sahf int3 es (bad) imul int ficomp fisubr pop dec insb (bad) enter (bad) cmovne jno lret clc pop xlat test aas jg adc insb push outsl fs cltd and inc mov shlb sbb or std fldl jne ficoml mov pop pop (bad) xchg jnp enter or cmp test imul pushf sub mov jo dec stos std push stc (bad) xor test inc dec or adc mov push mov adc xchg scas pop jl (bad) mov cld cmpsl cs xchg inc pop xor push icebp inc dec leave push cmp pushf jge psrld int3 lea push ret xor outsb ljmp ss mov ljmp add xchg mov (bad) cmc cmp ss inc jb cmp inc push xchg sahf push sub ja lahf lods push jmp mov out test add xor movsl fsubrl and mov cmp or (bad) sbb cmpsl in dec cwtl inc mov cmp xor inc icebp nop cltd pop cld int3 or push das flds xor int mov mov mov push fisttpll ds sahf xchg mov stos shrb insl and js out push rclb out or repz dec test jb pop pop loopne rol lcall pop sub pop adc xor xchg mov pop push push and cs sbb (bad) ljmp cmp in adc sub ss inc aaa jp popa fidivr dec andb add repnz cmp jecxz cmp lock adc jmp bound test fiadd adc xorb out arpl popf and outsb inc inc xor aam stos pop xchg or push xor sbb repnz lret rclb imul in dec test inc adc jb out hlt add es sbb addl lret xchg ret and sti sbb insb mov pushf (bad) jbe cmp sti mov test sub in hlt mov popa repz sbb es rcrb cmp mov movsb mov mov rcrb out movsb iret lret xchg and inc aam (bad) cmp pop sbb fiadd xchg jg jge rclb dec clc sub dec (bad) repz fwait insb (bad) les sahf jmp or leave rcll xor sbb xchg inc xor cwtl test insb mov or sub sub (bad) mov std sti cltd es xor mov inc xor xchg push movsb bound and jnp jbe fcmovnu cs into push xchg add cld fstp mov add test sub mov std push add in fbld push sahf cmp in jp mov sti jne pop xchg jecxz push and enter inc sbb jmp adc std jo int3 pop imul jbe test push sbb sub cmp pop jl jne add ret inc mov xchg inc adc or and and imul repnz mov leave es mov jns adc addr16 mov pop dec roll sbb inc fwait (bad) push nop sub movsl add sti or push das pop xor test inc lods cmpsb jno mov add daa adc icebp dec aam add push inc sbb jno pop and hlt int3 xchg mov or xor xor sbb sahf ret cmp cli fldcw nop inc sub ss in sub pusha xchg rorl xchg mov and ret fldl sub adc lods adc or sub pop pminsw jmp push xor jnp shlb mov fldcw sbb and adc fucom dec sbb stos stc int3 sub xchg pop or in rcl sbb jo mov arpl dec xchg lock jg cmp jns adc jmp xor push sub mov in fisttpl lods arpl and out push or movsl mov adc mov clc ret mov add mov stos sbb adc jecxz imul xchg in clc jae pop out cmpsl push stc xor push push sub test cmc out mov sub gs xchg xchg xchg clc jl mov cli data16 in mov xchg loop popf shlb das mov jns rol xor jmp push addr16 inc sub jnp imul or and movsb inc sahf xchg ds call push jnp ret mov cmp cmp jnp sbb pop inc dec cmp dec lods aam xlat lcall dec dec mov lcall dec push xor lods fstps adc mov aaa sub shr hlt icebp test roll dec sar mov hlt push push sbb fisubl sub mov cmp lods (bad) fxam sbb xlat cmpsb test out sti sahf insb push xchg data16 sub mov jp je lock fiadd sbb loop dec pusha push xchg push inc repnz push ljmp lds pop add lcall and jnp mov dec cmovp shrl popa inc outsb sub aas out call xor test in inc std mov push sbb imul gs sub cmpsb loope push pushf enter loope ljmp adc insb call add movsl dec addr16 push outsb mov lahf out in mov je outsl in xchg inc xchg stos lret int3 adc fcom and in sub insl or or mov push mov mov pop lods pop fucom pop adc dec ljmp ja jl shrb adc xchg inc in push fistl aad loopne or pop (bad) stos (bad) icebp loopne or fisub js or pop inc pusha mov test adc jb cld inc clc pop cwtl mov push orb or sbb push std lret pop jae push push push ds mov pop pop insl pop repnz adc (bad) jno lods popa jb clc loope pop popf sbb popf inc xor lods test xlat test (bad) sarb cmp add mov cltd mov (bad) push in push imul adc mov push inc mov lret and testl test into ds sub inc cmp dec lcall mov adc cmp jecxz xchg mov sbb cmp mov add cmp xor pop ret sbb cs and sbb adc fs mov hlt and int3 xor pop xchg popf pusha or cmp int3 xor mov stos lahf adc mov dec push xchg sbb mov pop lret xchg andb lods cmovbe add call xchg pusha or mov jae add pop inc cltd mov jno mov xchg mov and add in imul add cld popa add dec mov jp (bad) mov bound inc sbb pop and inc add rcr pop push (bad) cs (bad) fsubl cmc and adc mov mov test stos xchg sahf fwait out or (bad) outsl pop jecxz loop ds int mov addb mov aas ficom lds sbb pop mov add in ret sub jbe pop or int3 int3 int3 int3 int3 int3 int3 int3 int3 aam ljmp out cwtl jno jp inc jbe ja in mov mov insb mov aad jle rcll ljmp movsb lret pushf nop jge ret adc call mov mov ret push jl jo test push push jmp mov inc mov dec in ret pop sti fbld sbb sbb add pop cli mov pop cmp inc sbb loop stos test aas cmp cs push shr insl or psrlw push ret dec ss mov mov xor outsl scas push xchg cmp sarb xchg subl adc lret sub cmpsb jnp sbb and scas (bad) into and stos (bad) das stc xchg (bad) and jae fldenv repz inc dec sub ja lods add jne ljmp mov mov dec inc je mov sbbl (bad) dec cmc mov pop into outsl in ja ret mov inc jecxz call lock mov hlt and cmc mov ret scas fstl lock pop cs pusha das xchg aam jp outsl dec enter mov inc cmp lock fdivl adc int3 adc add enter add lcall mov fwait mov inc sub into xchg int3 stos push fbld lds cmc jnp int (bad) mov cmp xor insb dec pop fistpl sbb jo lds add (bad) in mov fdivrs xchg movsb fisub arpl inc rol fwait sbb scas or add xor loopne insb hlt scas jns or add pop andps and iret push scas push dec das sbb arpl and repnz push sbb cmp (bad) mov test adc mov mov sbb add sbb (bad) imul xorps in mov or inc cwtl aas icebp cmp in cmp adc push push in adc mov jo sub lea push pushl pushl call add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret aam push dec push dec aad ja or mov es adcl adc frstor inc loopne lds jecxz dec sbb pop sti and (bad) fnstenv lock dec arpl imul lods ss mov ds sub out adc xchg or cmp loope and and cmp lcall xchg js push scas popf or adc jnp sbb cmp cmp sub and ljmp fild lods sbb int3 cmp repnz fdivs daa pusha mov stos dec lret xor xchg lock push sti jbe repz adc jmp popf pushw push and mull push mov lret jl and xchg arpl or fcomp mov and dec nop clc xor push sbb or or test push xchg and xlat add adc test push pop push mov or out in mov lret mov xor shrl pop loope xchg fdivrp int in mov xchg mov mov bnd xchg ss insb arpl das pop xchg cwtl lods xchg subl or repnz int3 jbe fsubrl mov out out stc mov lods inc pushf loopne (bad) loop mov sub mov pop push sti push xor mov sub push dec int nop aam rcrb pop mov push loopne mov push mov inc xor and stos fisubrl mov dec mov aam and jle push pusha push adc inc xchg movsb into popa aam clc scas fisttpl pop mov cwtl movsb addl jmp cs mov add push inc push or inc ret int3 pop mov dec lahf add adc fiadd lea and jns lds lods push ret or jg lcall mov insl stos xor mov xchg xor pop jle cmc xor rolb dec jle add loopne movl ljmp and inc dec pop mov add int3 imul sub jle fincstp xchg into fidivl push adc mov ds sub stos mov test and sub call clc fidivr vaddsd inc jmp out in mov movsl mov hlt push add jmp (bad) hlt dec xor mov arpl ljmp cmp jecxz mov data16 xlat ret andb in data16 fistpll cmpsl rorl xchg xor mov ss test xchg inc dec xchg popa mov sub (bad) adc push lock sti add (bad) mov mov or pop push sbb das insl cmp movsl push jno add or xchg cmp (bad) xor mov xor fwait ror xor sub fnstsw dec add adc mov xchg push int aas dec movsb push dec mov addr16 jno loopne out arpl fistpll push in rol clc mov arpl mov push mov stos push add sbb inc gs nop dec inc push xchg jno jb add int3 mov mov adc lods jp test mov sbb jle adc push and and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 rcrb insl (bad) or pop hlt rclb out lcall daa inc fcompl mov jl push or fs repz cld adc sbb dec unpckhps jg,pt inc sbb jno or mov femms and xorps and inc fildl adc or pop xchg arpl sbb jecxz int3 fsubs fmuls test hlt jecxz dec arpl out jne ds call cmp mov push sbb aas cs (bad) loopne cmpsl cmpsb mov fnstcw xchg movsl and mov cmp sbb and popf addr16 inc aad mov in jl or lret and dec (bad) jge mov ror bound cmc xor test cmpl loopne jno adc imul mov mov jle adc lret mov stos lcall test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp and ss push push mov pop xchg orl inc icebp mov sbb add jle xchg fxam push sbb dec mov out jb outsl push mov mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret and ss pop and inc sub cmpsl mov mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp and xchg cmp ret int adc int3 jns pop xchg push mov mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret and ss jno ds inc mov push enter adc push sahf icebp adc insl cmpsb xor sub lahf ffreep outsl adc mov mov mov fs add jb (bad) adc arpl mov cs lods das dec pop mov jmp mov icebp cmp scas pushf ret mov outsl jmp xchg jno jae insl aaa inc or adc out or pop imul add adc insl xor or pop insl push insl push insl popa mov stos mov push rcpps mov inc jnp xor add sarb pushl mov call movl mov pop pop ret andl mov andl movl movl ret and ss push cmp adc pop ret pop add sub pop imull popa add mov andl movl movl ret int3 int3 fmuls mov outsl inc les mov mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret aas ret pextrw pop jle adc call mov orl mov call mov orl mov ret mov ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret and outsl sbb dec hlt and pop inc xchg leave jbe mov push (bad) cmp int3 outsl aas push cmp jns fmull mov out ss insb insl dec leave scas movsb imul push mov jmp push adc pop and in popf pop imul call cmp xchg cld mov pop movsl mov mov inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret and xchg dec fcmovne lods cmp xor sub das leave jbe clc rolb add leave repz pop push mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret and outsl negl fwait pop sub mov jle inc mov loopne loopne mov push jp xchg xor jo cmp mov movsb lahf cli sbb and pushf push mov call xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret cmp mov sti or pop jl and mov testl es xchg out ficom movsl cmpsl add addr16 fsub pop mov xor or (bad) leave scas jge stc or xor shl test mov das jns adc xor jne xchg mov aam and mov push xchg (bad) jb cwtl push mov push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret and ss or cli pop adc leave and mov push cmp call mov mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret and ss adc adc (bad) call inc mov iret outsb dec out pusha sub jle xchg xor xchg inc cmp mov push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret and and inc sub mov add mov inc jge pop (bad) sbb xor xchg ljmp mov cli stos nop sbb (bad) out mov pop mul adc inc push lds push adc mov sub mov xor mov push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret cmp mul pop mov push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret and ss jno push sbb loopne (bad) pop das xor cwtl ret dec fsubrl jle jb or fisttpll shrb mov lahf ss fldt and imul adc push mov push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret and ss pop cmp mov cmp sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret and ss test mov arpl aam loope mov sahf fildll ljmp jae adc or push mov push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp and ss test mov arpl aam inc icebp mov movsl ljmp repz dec xor pop icebp push xchg mov jg ja nop inc test outsb jnp hlt ret mov mov ds jecxz push cmc stos insb (bad) fldt and pop mov mov out movsl mov mov push push pushf sahf xor xor or sub mov outsl repz jecxz jecxz mov or in cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret and ss test mov arpl aam xor outsb data16 sbb lret es fs push or js jg push jnp clc xor cmpsl adc (bad) jl repnz cmp push jg enter xchg (bad) roll in test ds push mov sar div dec test test adc mov sti xchg and xor js cmp adc cmp cltd (bad) or outsb inc push pop imul js adc faddl stos mov into jl mov stos jmp ret lret popa xchg lret aas xchg repnz lahf xchg hlt or call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 and ss jno mov push mov das xor cli sub and sub test rcl pop push popf mov add pop cmp mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop repz jne mov in mov or aam xor fistl add sub nop pop pop mov shlb mov lea lock mov push mov ds hlt nop call bnd and cli mov and ds pop inc add ficoml xchg ficomp xchg push mov dec jae in jbe ret mov mov sub test shr enter mov test xor jmp adc movd jecxz adc pop cmp adc cmp or pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc jae cmpsb and push leave daa push inc mov or cmp (bad) arpl inc mov add push jecxz hlt out pop inc adc pop scas mov jg jge lds and into cmpsl sub imul aas cli or mov inc imul xor and sub inc sub daa aaa dec ljmp repnz clc loope mov jno sub mov mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret and outsl push or pushl popa orb cli test std or dec xchg jmp in (bad) jge pop adc xchg out add mov stos mov daa mov fsubr nop jae adc adc xchg sti adc js clc jle add (bad) aam es push test push pop (bad) stos in test shrb cwtl imul fcmovnu cmp pop iret mov shll push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret and ss jno dec sbb das arpl or sbb mov pop add (bad) lds in add outsl lret cli cld cltd or hlt adcl mov fisubr push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret fisubl xchg fidivr call jmp scas push call mov test je mov call call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret and ss rcll cltd dec jge mov xor jb push mov ds add adc jb movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret mov jle dec inc adc mov mov cmc cld lods icebp mov adc push stos push bnd inc adc icebp js test mov xchg das es pushf push call pop mov ret push mov cmpb jne call call push call pop mov pop ret mov cmpsb cmp mov and or push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp and ss or sbb packuswb jb out in pusha les rcll jle rolb fwait jbe cmpsb add pop nop adc jns dec and scas adc (bad) out sbb outsl stos jne in and lahf imul call cmp sbb pushf stos inc enter nop aad inc inc aas cmovno mov mov iret dec dec pop mov outsl or shrl ficoml in push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret aas add mov jle inc inc sub dec dec mov das repnz icebp mov mov jb (bad) js repz mov inc xor mov jae inc nop shll cmp je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call lods push jecxz fisttpl cs rorl mull mov dec leave fcmovnbe jns leave movsb loopne mov fucom push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret and ss jno xchg ja push leavew incl fsubrl inc gs dec lret ljmp mov adc add outsl out adc jle (bad) xchg fnstenv inc jl xor mov les jmp in flds cmpl cmp and aas and mov push adc fs lret add push in lret mov jbe cmpsl push adc mov leave mov loop mov or outsl js rcrl dec xor and pop call add aad test sub jle cmp add andl push icebp lcall and cli and lods sub mov jl lret mov xor das or out mov lds (bad) mov ret imul dec mov out stos push or leave mov mov jp add dec fmul push scas pushf dec arpl sub sub cmp jecxz in push pop xchg (bad) mov and int3 add out mov out jge jno xor sub cld je daa adc bound (bad) mov insb dec enter mov xcrypt-ecb cmpsl mov mov fstps push les into cmpsl push sbb sbb adc enter push push test pop rcr fsubs push mov cld xchg jmp adc push xchg fadd pop mov cld and pop insl dec xchg and mov (bad) je lret push adc test out (bad) (bad) negb addr16 xor mov add mov daa dec sub lods mov sarb fisttpl shll daa sbb mov mov dec je cld dec fidivrl fxch fldenv mov or or pop popa add dec inc xchg fisubl jecxz inc xlat fiaddl sbb aas (bad) jno lock adc fisttpll pop adc out lods xchg dec add push data16 gs cmp sub or sti jo int stos in fsub les jb movsb (bad) mov inc mov sub xchg gs inc in xchg mov (bad) jae mov xchg bound mov mov cs loopne mov daa pop push popf test lahf jno (bad) mov add sub and xor add ljmp movsl xchg sbb jl aaa or (bad) loop leave pushf mov lods iret arpl sbb out je adc dec ret inc test and xor daa sahf outsb or lret adc sub ds push lods ret sbb mov in ret inc or lcall mov loope popa dec fwait ja pop jecxz sbb addr16 incl xchg adc mov push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 and ss inc xchg jnp push xor fistpl adc out ljmp push push call mov mov cmpl jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 fimull xchg jno daa sub lods lock aam xchg jnp xchg xor inc sbb adc mov adc pop sti xlat fdiv stos imul mov xor imull and push xor mov push in ds loope dec outsl enter dec xor inc push in cmp dec test fisubl rcrl cmp xchg lcall xchg je pop sti cmp shll stc inc push stc mov xor cs pop scas jbe mov aad inc aas arpl cltd jo push ret rorb in stos adc movhps ss or lahf es int3 out adc roll push xor mov stos imul sti loope test int inc inc and ss push aaa fwait pop pop sub dec mov and (bad) jle rcr aad jbe pop ja mov loopne out imul (bad) and test in xor (bad) (bad) jo je in and sbbl hlt int3 xor bound dec inc xor leave out jp call in pushl mov call pop ret fimull xchg jno pushf fidivr call int3 das jl inc in mov mov vmulpd lock stos loop jbe sbb mov scas imul int jmp fdivrs (bad) out dec imul fs scas stos and push rorb push cmp inc fisttp jge mov int3 jecxz pop cli arpl rclb push push call add ret fimull dec jnp push sbb inc les mov sarb and mov pop call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret fimull xchg jno movsl inc inc cmpsb in jl loope leave rcrb in mov lcall pop and (bad) pop push hlt mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp fimull xchg jno daa into jg cld lods lock aam xchg jnp xchg xor push sbb ds hlt ljmp (bad) ja and xchg mov xchg les lods xchg push sti (bad) push xor mov das idivb sub cmp (bad) repz iret data16 ret inc (bad) cld fwait mov fisubr push pop sti and mov js gs in inc push cld mov and add push or ja jmp pop mov imul adc cltd sub inc outsl (bad) sbb mov in add mov aas out xchg and and xchg inc icebp cmp imul loopne mov rcrl push outsl pop and and aas pop mov dec mov stc fdiv mov addr16 push mov add lock (bad) aad test push jne leave jmp inc out and shr mov lret push inc xor lcall call sbb dec xchg or stos jg mov (bad) xor mov aaa xchg out aad mov add sub sbb int or pop test push cmp decl sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp fimull xchg jno mov adc mov mov loop lock (bad) mov movsb xchg mov cltd shrl outsl cld or std push outsl in xchg arpl xor stos adc lock jmp addr16 xchg jno xchg outsb call mov iret imul arpl movsl mov int cmp xchg adc int3 push sub hlt add inc mov mov push mov cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret rolb sbb cmp jns cld or pop hlt push hlt cs ret mov mov push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret fimull xchg jno dec sbb imull pop mov cs aaa dec sbb or cli pop inc add cltd xchg call jmp hlt pusha adc popf gs push push repnz ret dec jb enter mov int xor or mov test mov loop ljmp ljmp lret sbb push sarl jb inc imul pop mov in push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret fimull xchg jno dec dec notb inc mov xchg loope insl adc (bad) lret cmpsb mov pop sub xchg repz pop cmp (bad) (bad) aaa mov push mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret fimull xchg jno dec dec notb xchg (bad) jb xor dec outsl loop aam inc pop inc (bad) cmp push out mov xchg adc dec and pop and xchg push mov mov push mov push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret fimull xchg jno dec sbb and pop aad fisub push sbb shll jl adc add or push cmp and cmp push aad inc mov test flds ja rorl mov push and xor push xchg xlat inc add lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc or sbb push nop les rcrb shll outsb stos dec aaa pcmpeqb pop sub adc je (bad) imul repnz mov mov call add sub je sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret fdivrs cmp jo stos pop ret mov and ljmp mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret xlat sar stc pop mov sbb mov das test adc pusha (bad) out ror adc sarb dec mov cmpw je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret data16 dec into outsb inc jmp sti mov roll in mov sbb push add enter jl push (bad) fisttp hlt mov bnd test mov movsb push dec push jmp ds jo ljmp mov out xchg call test jge ret lods scas push imul pop loope out movsb leave sbb out mov add (bad) sahf add stos mov loop stos and test inc call mov aas shlb or mov mov (bad) jg push jge sub ss popa jo daa test xor xor sbb mov out xlat insb add adc pop test inc test adc xchg cmpsl mov or sub add push fdivrp in (bad) popa fwait cltd or imul or cmp pusha cld add out cwtl lods push push data16 dec test test sahf into out push mov adc or inc xor imul aas fsubl adc aaa mov sbb rdmsr into sub jmp sbb jbe leave xor repnz xor fcomip dec jae stc sub lods jae popf adc ret (bad) lret pop mov cmp fucomi mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret fimull xchg jno dec sbb and mov sub xchg sub movsl (bad) cmp out or addr16 je and cld mov adc sub enter in sub xchg out xchg ret mov xor popf loop pop pop (bad) popf lods push add sar xchg sbb loop,pn cwtl ficompl pushf adc (bad) cld add sar sub bound mov shl stos test pop mov or push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret cmp adc inc adc testb cwtl sbb call mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret rolb lret loop adc enter sub repnz (bad) popf int icebp stos subl xchg in cmp mov cmp mov mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret fimull xchg jno dec sbb (bad) cld push rcl aaa mov lret jl ds leave jl test test lods hlt sarl sbb lahf cmp lds dec xor push push sti or mov sub test orl cmpsb arpl adc nop enter jnp aaa xchg cmc orb into mov sbb pusha fistpl test fcompl rorl call in push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret fimull xchg jno dec sbb cwtl jg leave mov loope lret dec xchg mov ror jecxz push jle xchg xchg cmpsl sbb cmp push jb inc sub loop fwait pop cld lcall jbe mov jg jnp push mov push (bad) mov test mov leave cld pop (bad) test sbb imul outsl cld sub add xchg loope insb mov int jae,pn mov or add push jl cmp and pusha pop sbb and repz mov out loopne jae or nop jecxz fidiv movsb imul mulb cmp repnz je sbb ret (bad) sbb idiv dec cli insb push loope movsl rcll outsl js adc jo pop xor fs or push ja sbb leave xchg mov hlt dec add inc in into jae cmp inc lret ret dec js call in sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret fimull xchg jno mov inc cmpsb nop push fist das xor pop push xchg daa pop dec movsl sti jb mov pop mov mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret fimull xchg jno sti cmp sbb fildll push mov mov repnz sahf fmul notl push std movups fidivr sbb out mov ds sub scas and mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret fimull xchg jno icebp (bad) mov fist arpl and insl add dec negb sub adc jae jbe imul push mov or sbb flds (bad) cltd xadd imul jo aam mov aas outsl lahf jmp jl xor fs aad push pop insl add mov inc cmp xor mov mov (bad) jl mov and mov or pop mov fcoml mov push mov sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret fimull xchg jno dec aad pop arpl out xchg mov push pop push stos ja dec xor add jae scas sbb xlat mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret fimull xchg jno inc dec cld sub ds sub jne aam mov pop add stos sub mov pop stos loop jbe pop add ss jmp fdivp aaa push mov (bad) jmp pop ja aad in std xor push movsl xor dec mov int3 insb add add (bad) aas mov ret mulps inc in mov xchg movsl xor fnstenv popf fdivr or sub and mov jne mov xchg repz ror jecxz mov jmp ret in jno js andl ljmp or pop mov lock push movsl xor push mov dec pop cmpsb negl mov lods sbb add iret test adc iret test adc iret test adc iret test adc iret test mov mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret fimull xchg jno daa push stos cmp pushf inc pop xor rcll mov xchg mov movsb inc lea movsl xchg (bad) lahf stos loope pop xchg jnp ss shr xor pop or mov scas stos push (bad) ror cs sbb insl mov sub movsl aad cmp pop add lcall in adc out lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret fimull xchg jno inc dec cld mov or cld push jge loope cmovae cmp adc notl imul mov je test stos jg push xchg and inc (bad) mov jmp dec lds or std jnp xchg leave loopne push (bad) stos stos int3 inc mov push in lock addr16 mov xor jno mov push mov mov mov movzbl push call mov movb mov mov pushl pushl call pop ret fimull push or cltd dec or mov data16 ret hlt xchg inc xor sti lret divl and jmp xchg por push iret mov mov and enter aas or mov roll cmp jne push mov aaa or jecxz mov mov jmp mov and ret (bad) bound ss icebp repz pop jmp (bad) ja push pop ficom jne cmp push mov out xor cmp jecxz cmp fdivrs and mull ss aas (bad) push fstl std (bad) pop (bad) in outsl and push dec into loope mov mov jmp jno dec fimul xor and push pop adc fs int loopne repz (bad) fadd cmpsl jbe and add ret pop lret sti xor jecxz shl and cmp sbb or add push push push push call int3 xlat shrb clc push xchg mov sub fstl stc sub iret pushf in jno aad out rorb mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret fimull xchg jno daa cs popa cwtl dec or adc jmp (bad) les lock cli (bad) xor nop cwtl cwtl aam lds pusha sbb xor jg dec das mov dec insl call mov pop pop sbb pop test mov push pop aam push cs ret rcrl or sbb sahf ds and jmp sti xchg dec jle hlt cmpsl mov loope mov loop out ret mov stos xchg or mov mov dec movsb push stos cmp jne flds outsl cmp cmpsl sti popa sti mov out dec sub in and rclb ljmp jo and popa fildl jae sbbl fmull icebp fnsave insb jle jns jb mov dec mov mov insb fdivrs lret (bad) mov jl jbe addr16 call popf xchg loop aam mov xor icebp xorb dec mov pushf pop ret mov mov lcall push jge push (bad) icebp iret add lcall popf mov inc sub dec jae arpl sbb ja mov cmp jl sub scas mov cmp inc dec or pushl (bad) aas sub loopne (bad) fcompl jno outsl jmp mov jl inc call cmp dec dec iret rcll inc mov mov push shrb cmc mov mov int3 dec incl mov add inc mov (bad) mov pop sbb lret (bad) lods das stos xchg cld int3 jge movsb test fstl pop insb pop xchg fwait push sarb es push pop xor dec insl cltd cmpsb mov test in pusha sub fldenv pop push ret je pop test mov loopne jmp mov add xor lea pop pop dec jnp push and xchg ror sbb adc in push push js mov cld insb repz fcoml sbb pop mov mov into adc dec add negl mov in add adc inc dec push and notb lahf pop push sbb test flds pop xchg mov int3 push int lock scas dec loop aas mov dec aad mov pop dec mov mov cli xchg jmp sub xor sbb cmp das stos rcr mov adc (bad) in aaa jecxz xchg les mov xchg out loop fcomps cmpsb scas rorl cs jg repz xor mov sub adc mov sub subl cmp dec movsb sbb scas in shr rcrb lods flds sub jnp out clc repnz clc mov cmp hlt sarb mov mov ljmp xlat sub push jmp faddl imul lcall imul inc negw pusha rol (bad) in xorl jnp jbe xchg js dec iret cld popf dec pop push or imul xor mov lods dec mov outsl jnp rclb decl xchg out cwtl pusha stos mov sbbl adc lea jb or mov out clc jae jge rolb lahf mov je xor jb aad push xchg ss xor imul xor mov lea add iret jae mov (bad) lcall and ljmp pop add mov push mov test cmp sub adc push test or pop pusha xchg ds mov in (bad) mov cmp into leave ret xor fcmovb lahf sub lock dec pop inc (bad) (bad) lahf pop jl push call sub add hlt push add push inc (bad) lods in aad (bad) and dec cmp mov test sub iret or out inc xchg pop shrl or jno shll add ljmp mov push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret fimull xchg jno dec aad pop mov leave xlat push adc fidivr adc jbe ljmp sub call shll femms push fnsave idivl in xor and pusha xchg ds mov xchg scas rorl jnp mov int3 push adc scas enter inc push popf lods subl dec mov mov ss loopne cmp or sub sbb in inc lods loopne scas (bad) (bad) xchg pusha sub inc int3 fdivrs cli pop pop pop mov daa rorb les cmc lret cli jb out xor push pushf push push push mov jae push lret dec sbb and and outsb sub jl imull test pop cmp sahf mov nop push fwait mov sbb dec fisubr inc jno pop rcrb mov ljmp xchg mov hlt test and xor ja enter mov in mov (bad) push popf add push sarb je cmp mov rcl out xor mov jb lcall out xchg call inc pop sub add xchg cwtl push imul mov jp aas inc enter xor (bad) and hlt in inc mov mov loopne push movsl outsl fdivl daa sbb test movsb jae dec and jbe jae dec add push lock mov cltd cltd or cli push out rclw mov sbb push mov (bad) mov dec (bad) js lock stc imul add frstor cli mov cltd sbb sub dec scas inc mov inc in mov jns (bad) flds push (bad) cmp push dec out mov push cwtl and pop (bad) sti leave jbe mov repz jo mov xor sub (bad) add (bad) xchg and xchg xchg sbb bound add out xchg pop jbe (bad) mov adc ret mov add push hlt (bad) sbb out cltd ljmp jle pop xor cltd std xlat dec pop cld imul lods xchg stc mov rcrl add stos jbe or xchg scas adc mov aas cmp sbb push inc in int3 sbb jno push stos jnp mov sti add fldl pop xchg (bad) cwtl stos and sub push push mov lods mov test inc cmp inc dec pop push cs aaa pop sbb push xor sbb lods xor pop xchg loop cltd push push jb xlat enter pop jno push stos cld push xlat jg xchg jb addr16 mov lret arpl dec lea mov adc sbbb xchg lea add push mov mov cmp inc dec sub ret cwtl pop adc inc (bad) divl sub orl mov or dec das int fwait ret jns mov add sbb xor dec fildl push es in adc stc (bad) mov shll xor inc jecxz xchg pusha cmc xchg in outsb ret stos pop mov xchg inc mov add mov mov pavgw test sub js cmp cmp adc shll mov push fisttp lea imul shl xchg xor mov (bad) jge push rclb inc sbb ljmp out fwait push sbb in pop ja xchg mov pusha clc mov (bad) out in (bad) jecxz int3 int and out arpl and mov push imul imul fldenv and cmc push (bad) mov arpl xchg sarl test dec ss repz ret fsubrs mov shll out pop sub cmpl or pop mov add js loopne cmpsl dec pop lret pop mov (bad) push push jge aam jbe jmp pop ja jp lahf adc nop mov sub aas fistl cli fidivrl pop pop or xchg cmp nop inc fsubrs pushf jne push ret lcall mov lds sbb stos je mov dec add xor mov fwait ss out cwtl js mov (bad) xlat sarl cs leave xchg jmp test sub outsb lahf sub push sbb ficom cmp loope adc js mov cmp jno leave fwait xchg push fwait adcb stc sahf mov test pop push add test pop hlt popa outsb push add push jnp lahf sti sub jmp cli popf fldenv push (bad) push inc shrl or push or add jno or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret fdivrs outsb js (bad) mov jns daa xchg adc add in jp test mov and sbb scas js jae stos or cli cld mov mov add inc fsubr orl jl xor jo test cmp test mov jmp push lods mov test js cmp jle cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret fbstp sub push in jmp add loop cli aam push pop add notb divl and mov call icebp call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret fimull xchg jno inc dec add in cwtl dec loope fmull adc dec mov lods enter sbb (bad) mov push push mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret fimull xchg jno inc dec cld sub xchg jo aaa pop pop add mov cs movsb stos ret xchg push es scas fyl2x jge jmp or lea in stos sbb xchg lock movl je adc jbe mov test adc mov push mov addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret rolb sub inc adc enter sub push add dec pop jle push fldcw or xchg pop inc ja and xchg mov add adc or repnz mov call in push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret fimull xchg jno mov aad std cwtl dec inc (bad) ss jne loope movsb insb pop call call in pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret fimull xchg jno push dec sub cltd fdiv popf add data16 pop (bad) and inc dec jmp jl jnp out adc clc out push push lea shll cmpl aas or icebp xchg sti cmp mov in aad mov call in mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret fimull xchg jno daa pop sub mov mov rclb adc stc add dec push cmp or sbb push outsl outsb ss pushf aaa mov dec scas push cmpsl out out fcoml adc ret shll aad push mov iret sahf in or dec stos mov aad jecxz fldcw into shll in mov aaa mov pop imul dec mov cwtl mov clc push fsubrs outsl lods sbb push test in fmul dec arpl (bad) enter mov xor adcb aam gs xchg adc push (bad) aam (bad) in sub loop push aaa dec sub xorb and pop stos out popf shrb sub (bad) lods push mov jbe push push clc xchg je cmp push (bad) lret fcomp mov mov pop fcmovu push push call xor mov test setne test jne call movl call xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp fimull xchg jno and inc sub mov push mov mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp fimull xchg jno cmp pop std cwtl dec inc push enter push loope xchg mov push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret fimull xchg jno and adc cld icebp or or test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret test jp mov (bad) aad inc popa adc das push cmc mov cld push in clc push cmpsb cwtl sub inc aas and sbb movsb adc out jmp aaa inc data16 mov shrl push xchg jnp or call in push call mov push mov call pop mov call mov pop pop ret mov (bad) (bad) jns call inc mov mov jle add test jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret fimull xchg jno mov inc cmpsb in push fildll xor and xchg mov test in push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret fimull xchg jno inc dec hlt fstpt test shrb xchg add sbb mov push mov mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret fimull xchg jno push aad sbb add sub sub mov jmp dec roll outsb out cwtl xor out lcall jge cmp in mov inc ret adc pushf jmp or je stos inc cmp push mov dec shrb add xor sub mov add sbb daa xor in mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret fimull xchg jno adc adc sbb jl loopew dec add not push push jl push jbe cmp icebp xor push add jae inc or inc aas pusha cmp sub push stc clc jae popf push in aad pop cmp (bad) loope mov adc mov sti add clc dec jnp movsb daa push fild cwtl sbb pop push dec popa and or es iret sub nop rcll mov cmp ljmp add enter stos inc rcrl adc lcall jnp xchg test mov mov stos es or outsl fcmovnbe pop pop mov jg cmpb xor and in fadds ret aad mov mov insb mov pop mov rcr aad pop popa (bad) push xchg fistl stc mov sub cmp xchg and push fcoml shrb in lods inc test mov mov sbb push scas adc mov (bad) decl (bad) jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret fimull xchg jno daa xor xchg ret adc push sbb inc mov les sahf jbe movsb mov outsb mov les pop out mov (bad) vrcpss push jb rorb lahf lds lret push xor aaa push mov xchg imul xor call lods (bad) fsub sub sub dec xchg xor insl mov outsb xlat lods jbe xor loop inc mov das int or pop push ds lahf loop mov sbb adc or ljmp ret add lahf es adc outsl (bad) mov fadds jns xchg data16 cmp fisttp mov stos mov cwtl shll es dec cld mov popa xorl push test fistp frstor sti xchg fcoml push adc loope sti in adc out mov or and and jp mov or jbe xor imul push hlt and fwait sbb notl cmp cmp in decb mov adc mov add cwtl xchg push stos loope repz sbb push push mov lahf sub in inc inc push sti arpl jl enter adc in fsubs sub inc add ja das add lds mov mov js loope arpl and aam mov or push inc push fs xor cmc xor shrl stos mov fsubrl out xchg pop fistl inc andl xchg daa test lock test cmp xlat push loope imul mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 fimull xchg jno xchg jnp negb jne sti sub mov inc push mov pop test push lods mov jae or clc jp icebp mov cmpsb and push pop mov lcall outsl sbb jg addr16 (bad) call sbb and sbb mov in les sub sahf fsub mov sti data16 nop int xchg imulb sbb das push orl dec into push mov push mov push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret fimull xchg jno pushf fidivr call int3 das jl cs mov mov ljmp sbb stos stos adc cmp imull or xor adc icebp test or int3 jns or clc push scas adc repz in push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret fimull xchg jno sti ret (bad) sbb xlat pop pop push mov mov or sbb scas adc stos out add jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret fimull xchg jno xchg jnp decb inc jge ss mov rolb cwtl sbb push cli jbe sub add scas repnz pop test inc ss bound insl repnz sbb cmp xor inc in scas rclb xchg scas jae mov fdivrp push mov push mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret rorb (bad) jl cmp mov push lock popf aaa inc ss and rcrl inc xor push xchg fsubrs mov fldln2 sarb fsts out stc enter or jo sub mov (bad) lcall ficom in ds inc xchg mov in pop push out add outsl das shrl lahf adc push and ret jns add push aad mov fcompl lea sahf and int inc loope sbb adc sbbl movsl cmp lcall push fisubrl outsb lods dec xchg or outsl (bad) in pop addr16 sarl and mov xor xchg aaa (bad) stc int3 idiv dec loop push xor adc ret shr test xchg popa mov hlt sub out stos cmp or mov pop shrb inc das push fnstcw push push test push jne jns adc and cli imul inc cli (bad) je mov push cmpsl mov cmp sub leave mov pop fwait or dec or push into and pop in vmovaps jle ret or xor jl adc outsb push int3 das mov sarb fdivl movsb mov rcrl loopne daa jne rcr (bad) push add dec cmpsl lds mov cmp and and adc mov sbb out jns jne dec pop popa sarl aaa pop iret not mov ret in and dec repnz sbb cmp sarb enter xchg lock lret jg es movsl mov lods inc das and push jmp ret out aas shll push dec cld mov dec test push hlt sub cld add push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret fimull xchg jno daa push hlt push in mov aad dec fnsave and inc sbb pop xchg sub test out xchg pusha in hlt mov (bad) ja jl mov mov (bad) mov repnz mov add mov mov call in mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret fimull xchg jno mov jnp cmpsl add daa sub fistl sub sarl mov push mov push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret aas repz pop jle inc inc sub or cmp xchg mov call mov ret mov ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret fimull xchg jno daa push sub pop xor pop aaa xchg bound sti (bad) clc jno adc rcrl jge xchg sbb jmp sub mov fdivl enter (bad) mov xchg adc lret test mov or lock fist pop sahf mov adc fldcw outsb xor jmp add mov cmp mov js pop push sbb jge repnz pop inc lcall inc ss repz mov jmp (bad) int3 out pop inc (bad) fiadd jae add mov dec add jmp sarb dec push xor (bad) sahf mov ror imul in xor and fbstp imul cmpb jp loope cmp adc pop ljmp mov cli mov aaa push mov mov mov sti sbb sub into jnp sahf pusha and or fsubr mov cmpsb pusha cmpsl mov mov jecxz,pn xor adc mov dec popa faddl loope adc add cli push inc sub sbb mov mov cmc mov rorl pop daa fsubrs jnp xor xchg outsb rorl sub sub jb sub or mov or (bad) rcll sarl or loope cli sub xchg clc je insl nop fnsave rclb pop push xchg (bad) push arpl push je mov mov xchg cmp and push jl xor dec lods inc jne (bad) jg mov push mov mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret fimull xchg jno push push cld aas pushf pop or in punpcklwd rolb bound fistl dec leave (bad) into mov lock push mov jb test jecxz icebp lock cli outsb dec mov sbb adc jo mov sbb jno cmp stos push es adc (bad) sbb mov mov ds in jl out mov sti lods fcoms xchg xchg test inc imul lret mov int3 iret or shr jae pop push cmp call in push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret fimull xchg jno xchg jnp negb mov ja xor testl vrsqrtss test or xchg es dec cmp shrb out test xchg lock pop ds pop cmp mov aas mov add cmpsb arpl xchg mov cmp loop rolb or sub and hlt shrl xor or add loop popf (bad) push add and pusha out or int3 fucomi push aaa data16 rcrb bound popf mov push pop imul add mov mov lea push push call mov pop pop add mov pop ret fimull xchg jno daa or xchg ret adc push push je dec sar scas inc movsb jne lret out adc add adc pop (bad) xor and scas adc out sti adc sbbb call inc aas mov add add dec mov fsubrs fildll jbe push push fildll (bad) pop pop xchg gs mov int3 jo mov jecxz mov mov xchg test pushl push leave rcll adc test sub aaa adc pop aad jb push cmp or xchg loop push add into and (bad) loop inc and scas (bad) jo jb sbb mov out xchg shll imul faddp mov and mov jg int mov andl ja cwtl inc sti loope push movsb push incb cld add aaa jmp out in mov js sbb fwait xor mov loope rol push pop (bad) sub int3 stos out ret xchg sbb push xchg iret lods aaa xorl sarb inc mov and mov enter pusha outsb xchg xchg stos add pop in pop outsl xor lret mov lods outsl int3 jg xor adc push inc xor aaa jge into mov insb cltd push (bad) xchg pop negb mov insl arpl xor dec inc mov pop fidivl or dec mov xchg repnz mov push mov and jg mov mov xor mov int3 imul orl aam out inc je xor jge call int push mov push ds pop push jo in lret jmp dec sub sti (bad) mov repz dec or inc test leave cmp jbe test xchg cwtl add and sub push push mov cmp mov pop cmpl sbb (bad) cmp mov dec lret jle add mov nop std aam dec mov xor jge inc out push inc repz dec dec xchg pop js in test (bad) inc mov leave fcmovnb ja je mov aad pop push pop sbb dec ss push push pop sbb mov dec xor xchg (bad) or pop (bad) mov ret movl shrl inc push sub mov jg fdivrl jecxz jl arpl shrl std dec push or push and adc jmp or bound stos mov mov adc and inc (bad) inc out aad sahf push xchg or adc push mov pop pop inc add jno jg add sbb adc push cmpsl das ficomp cwtl stos movsl fyl2xp1 enter je lret push xchg movsl loopne arpl lock mov push mov push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 cmp movsb punpckhdq fdivr push inc negl rcrb mov sarl leave mov mov xchg nop cmpsl dec cli dec cvtpi2ps xor jmp sub dec inc into and mov jecxz test adcl xchg cmp into (bad) or or call das mov add loopne dec sar xchg mov and mov int3 daa pusha orl mov aam push dec xchg xchg dec jge js pop push mov jg add dec pop shll (bad) push ljmp xchg loope or (bad) das mov jg fdivrp pop ja sahf push push pop cmp lods push inc enter xor cmpsb add cs movsl sub lds xchg stos sub fild adc hlt xchg push repz out mov ja aad fs arpl stc and (bad) ficomp out pop jae stc mov sbb lret clc pop js inc loop mov aas sti std jns cmp shrl loopne outsl sbb in jno mov in sub sbb xchg aaa dec das mov push mov mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret fimull xchg jno mov push fbld enter cmp dec push outsb push mov and push adc mov fcoms pop dec xchg fmuls mov in push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret fsubs lods inc inc cwtl and stc push push repnz cli add dec sbb insb xchg pop pop and addr16 mov movnti xor lods enter repz cs push or xchg cmp ret out (bad) hlt in fsubrl out jmp int3 mov xchg iret sahf ja mov cmpsb nop int mov lret fs push cmp add inc scas lods mov fs pop or fsubrs push mov cmp insl xchg sbb jg jae and xor je push push jle sbb xchg push sbbl js adc jo cmp xchg ja dec insl daa adc adc xor dec jne in aaa test and fcoms add test ss pop jle inc inc iret test lahf inc orb ja or (bad) mov ja dec adc sbb lds aaa sub xor popf cltd cli xor fwait push adc fwait and call jnp pop or in xchg ret (bad) daa fwait push dec ficoml push cmpsb call mov lods mov fisttpl lods sub test xchg outsb sbb or sub cltd sbb push sbb lock push add aas stos lock ret mov jle sub inc add mov daa lret out stos xchg dec lret lahf stos lcall push mov fisttpll sbb aad mov mov inc ret testl pop cmpsb jae stc xsha256 cmpsb shll push xchg mov push mov sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret fimull xchg jno daa push hlt push in mov aad dec fnsave and inc sbb pop xchg sub test out xchg pusha in mov push mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret fimull xchg jno xchg jnp jle inc divb sbb (bad) mov push sahf leave loopne lods xchg sbb jecxz repnz pop sbb jbe imul imul idivb fist sbbl xor or je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 fimull push and call addr16 pop dec add dec aaa push inc jb std enter repz sti cmpsb jg sbb outsb ss pushf mov les (bad) out mov cmp outsb fs test sub dec pop fiadd sbb mov dec jnp fwait arpl xchg push adc lahf lods sub fnop mov out ficom mov mov push call mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret fimull xchg jno daa loop,pn jecxz jo adc push fldcw adc (bad) ljmp and jp sub xchg outsl es nop and add in insl sar push push lahf cmp inc add jb dec (bad) xor aaa jge sub xchg mov scas adc adc cmpl inc pop (bad) fnsave xlat mov inc sbb inc and lods icebp jle pop adc mov xor push sbb adc mov push mov sub testl ds (bad) ja fnstenv adc push (bad) js add push orl and mov or sub popf shrd mov mov cmp je mov mov test jne call mov pop pop ret fimull xchg jno xchg ja out dec xor popa loopne xchg and inc mov (bad) pop cmp rolb scas xor ret push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret fimull xchg jno daa pop sub inc jp je,pt mov scas scas dec dec (bad) jecxz or jo and (bad) pop pop repnz mov add dec fnstsw (bad) push icebp aam scas push insb dec cmpsl mov pusha xchg add or pop jnp popl mov cwtl dec push xchg (bad) int3 add xor les and aam sub cld xchg loope xchg imulb bound sbb cli rcll outsb jecxz push aaa sub add outsb aaa xchg ret xchg jbe push push mov sub cltd aam and gs and sbb out adc jo mov jmp mov shrb sti or dec and sbb inc lock addr16 and inc aaa xchg and ret xchg outsb add mov cmp in or int3 adc mov inc or mov test dec sbb loop pop cmpsb sbb out es pusha xor add cli out mov orb (bad) xchg dec (bad) divb pop nop sbb xchg dec xchg idivb call jnp mov push mov cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 fimull xchg jno daa xchg inc adc lods lock aam xchg jnp xchg or pop (bad) dec sar sti jno fadd not test mov nop sbb xor repz (bad) jmp jle je mov adc inc in mov aas mov inc add out dec jle dec jnp aad out fcomps pushf lock and inc ss imul test dec arpl xchg outsl ret inc scas jp loop xor test xor std push or repz pushf mov in xchg das fs ficoml push push jbe jne test mov xor sbb adc cld popl das inc jnp jg and stos daa inc and and les jg fwait mov rorb cmp bound fdiv mov mov inc inc cmc push rcl repnz jo inc adc mov and (bad) loop stc sar out inc adc cmp cmp and xchg out mov jno xchg adc mov (bad) cwtl inc je lcall xchg jo add xchg rorl adc xchg insb xor lock xchg pop jmp inc jl leave nop jg (bad) ret or inc mov fsubrl jne dec jge mov (bad) fsubrl lds in xchg in leave mov xor cli test mov xchg push mov add (bad) fbld push mov mov pop mov or not or pop ficoml pop outsl lret sbb xchg les dec (bad) mov lods inc out out mov xchg adc pop and jl stos pop xor roll in lahf js je in or adc movsl rorb push shl jo add jnp ret aad cmp or mov xchg gs cwtl mov outsb fildl clc in sysret out xchg push ret and into (bad) bound shll fbstp add rclb ljmp push (bad) inc fisubr xchg loop dec aam sbb lds popf jb adc (bad) xor int3 or pop shll arpl cli inc add sbb push (bad) (bad) (bad) mov ror fisttpll popa adc mov mov mov subb jnp enter mov and mov jl pop adc or js push mov push mov sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret fimull xchg jno daa push hlt push in mov aad dec fnsave and inc sbb pop xchg sub test out xchg pusha in pop das imul test imul mov lret scas xchg out lods enter jecxz sbb sbb in xchg mov mov push test xor push push out iret stos pop rcl popl adc cld cld push mov daa xchg inc cmc nop mov in sbb loopne xor fisub mov adc scas aaa xchg ret mov mov or or or cmp xchg mov and inc push fstps fucom stos int3 inc cld push hlt inc sub adc and inc loopne std scas insb test jle inc cs clc mov push mov mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret fimull xchg jno pushf fidivr call int3 das cld push sub xor push pop inc ljmp sub loop xchg mov cli addr16 sbb mov cmp enter call scas or scas xlat out stos cmpsb (bad) daa mov push jne jge int3 mov push mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret fimull xchg jno pushf fidivr call int3 das cld inc sub xor push pop inc ljmp sub loop xchg mov cli addr16 adc or mov fsubrl fsubs xchg (bad) in int cmovns pop (bad) jmp imul mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret fimull xchg jno pushf fidivr call int3 das cld fsubrs inc xchg sbb iret push and decl xchg outsl push mov in push in ss push add enter call scas stos sahf or (bad) jle fidivr or mov arpl push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret hlt out lds movsl and xor aam cmp je pop push inc jmp loopne test adc fadd test test cmpsb xor adc mov push xchg imul arpl xchg push dec adc xchg aaa mov cmpb sub (bad) jl xor movsb (bad) idiv pop mov lock mov ficom les jle flds pop xchg jp mov xchg jl jp push add stos je lds jno and imul jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret fimull xchg jno daa pop sub pop xor mov sbb mov push mov jl adc mov fs mov outsb loope outsb in adc fwait aas out adc (bad) jae adc call imul in idivb pop sbb or cmp movsl mov push push je xchg arpl xchg xchg add addl sub mov movsl sub sbb outsb xor sub push xor out imul std cmp shrl loope fdivs lock js movntq out add pmulhw ljmp or fsubrp addl out test sub cmc aaa xchg push cli or xor and and mov sbb nop mov inc and rorb cld jle out pop movsl pushl xor jg in insl lea mov mov sbb or mov test or dec jnp push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret fimull xchg jno daa push sub je das dec jno mov les and notl jno fstl out jo in das mov xchg xor mov jo fistl fcomp imul sbb jbe std fcmovnu push and cmp mov (bad) xchg mov in push mull mov xchg and fwait arpl sbb rol fistpl lods popa and sub adc std sub insb pop js sub hlt and cwtl int or add dec push mov xchg jle out sbb pusha mov clc daa sbb cwtl add rcrb jo lret push pop imul cmp popa ja mov int3 outsl cmp mov mov pop xor and xchg mov cmpsl inc fwait xor std add int ja sbb pop xchg cmp cld mov sub sbbb pop out cmpsl test int adc ret push jne xor (bad) mov and fidivl ret aaa int fstpl mov mov mov add call in sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret fimull dec jnp sbbl pop cwtl push xchg cs add xor jp shl or or call and ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret fimull xchg jno mov inc inc inc or das leave jbe sub call in pushl mov call pushl mov call pushl mov call pushl mov call pop ret mov sar dec mov sbb aam pop bound in popa test loope fwait clc roll sti lahf or (bad) dec call mov push in fisub cld jl cmpb js mov aaa je test push jae insb dec aas cmp xchg sbb and jns jg cmp cmp loop pop mov adc cmp pop sti fiaddl jnp sahf gs dec sub jecxz outsl lcall add push lds sarl xor stc mov pop push out dec test les jno sub and xor push out pusha xor dec cmpsl popf (bad) mov pop pop cmpsl outsb or in (bad) fs (bad) stc lods test sub cwtl stos shll dec loop mov repz dec xor lahf out das cli xor mov or in dec adc and sbb mov les mov adc jbe orl fsubrs mov test ljmpw clc pop add pushf (bad) mov push push adc and lcall sbb jmp mov pop (bad) cli inc add sahf (bad) jo das out mov insb bnd test mov push cmp arpl arpl call cld mov mov loope pop pop sub xlat in leave mov xor scas xor shll (bad) inc add rcrl jmp int3 adc and in (bad) cs fadds inc arpl mov ljmp mov jne and adc int3 dec out cld jbe shrb xchg pop and or in push mov mov mov or cmpsb out cmp mov mov push mov sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret aas lret mov jo pop les das je,pt cmpb xchg fcmovnu cli pop je and sbb scas js mov inc daa mov in pusha incl cmpsb and push pop adc out repz mov (bad) js lret test jno fildll mov jge aas sub lahf sahf xlat pop mov data16 xchg add nop sbb stos out inc mov jae fs mov je xor mov pusha push mov fmuls rcrb fwait inc adc movsb stc mov std jae test loop fsts adc dec fiaddl jl mov shl and lods xchg loope jae and mov jbe fstl jmp dec loop insl mov xchg push clc js addr16 jb and call in push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret fimull xchg jno daa push sub pop cmp add les loopne lods xor rcrl addr16 aam outsb ss into aaa mov aam leave dec ret repnz add cmp push jl in fildl jno jns aas mov inc add test jmp mov sbb and in imul mov loop jp and and or mov (bad) fdivl adc (bad) hlt xchg andb cmp (bad) fstps repz std pop cmpb sub xor fstpt gs sub sbb insb jle inc or pop call dec pop gs pop das insb clc or pop pop pop call pop xchg neg fcmovu jns cmp cltd subl or int xor or cmp push push dec fcmovu gs std add push ja xor (bad) mov sbb in mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret fimull xchg jno xchg jnp negb jne lock inc cmp cmp int3 out icebp das adc dec lahf inc mov in in imul popa enter insb lret loop xor push push call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret hlt pop cmp pop xchg xchg cwtl (bad) mov (bad) pushl jae dec dec push repz add enter mov mov sbb movsb lahf loop xchg and adc push pushf rcrl js pop or xor xchg mov jo sub cmp mov push mov push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret fimull xchg jno inc push cld aas pushf addr16 mov je xchg sub xchg mov cli scas jnp mov xor (bad) mov cli xor call lahf cmp or xchg push xchg idivb pusha dec stos aam stos push stc adc test inc mov pop mov jnp cmp or popa inc cmp xchg loopne into xor or dec sub cmp pop cli stos (bad) or xor add inc imul bound sub add xchg cmp mov ss xor lcall push adc pushf adc arpl ljmp nop mov push xchg addl clc loop gs jmp sbb out (bad) popa adc pop jo xchg shrl std cmpsl bound fbstp mov xchg (bad) outsl lret sti cwtl mov fs js fdivrp jl jmp and inc adc inc push sbb mov inc jmp sbb pop packuswb gs fs (bad) pushf test dec cli ror inc sahf adc iret push in (bad) cmpsl rorl push lcall adc enter test xchg popa scas in ds add pop pop push jle ficomp jl icebp xlat adc fs inc push jbe inc aam mov jg (bad) jecxz jecxz add imul mov push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret fimull xchg jl xchg jnp jle shlb mov jne in daa jns push pop push push sahf cli pop cmpsl jl xlat into mov push jno scas push outsb aad xchg jbe push dec insb clc jge adc jno inc push jg jb or mov mov cmp inc xchg imulb fld addr16 andb fisubr fstps push das lcall sub jbe cmp mov push or decl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret fimull xchg jl pop aad cwtl cld mov and or dec cmp flds repz xor and sbb aaa mov aaa xchg xor sub cmp cmp xor xor mov lret (bad) lret test fs push mov push pop hlt push add outsl adc or jp arpl (bad) pushf popf mov shlb inc std das mov (bad) and xchg xlat jmp mov into jmp sub sub mov dec push mov jno push imul jne and es xchg fmuls hlt pusha stos lods es mov push mov mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret fimull xchg jno xchg jnp push xchg inc jnp enter mov loopne insb add std push jge lahf fldcw xchg and imul aam inc loope fsubrs adc pushf notl xor cmc jno leave jno (bad) xor push mov xor (bad) in push sub adc sbb mov sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret fimull xchg jno daa and xchg ret adc push push fsubl leave cli scas adc pop in addl test inc nop xchg (bad) adc roll ret push jl (bad) mov mov adc lods lds push lods inc add in lret fcoml pushf sahf mov push stc inc into sub movsb repnz cli bound adc adc out push aaa jo mov outsb aas sub mov std xor aaa sub (bad) sub stos mov pop mov orb shll inc iret jecxz push lret jl std push xchg mov inc jp daa cmp (bad) aas or and cmp lock movsl idiv shll mov in das jns and mov out lcall sbb and cmp xor fistpll jnp xchg or add cltd mov leave push popf jge pop fwait dec lock dec mov insb xchg outsb mov sub or clc and enter cmp sbb and push add jle mov cmc dec xchg lret add or mov les je sti mov movsl xor mov xchg xchg fistpll xchg add add daa and mull mov jno xchg push in repnz rcrl sbb add jle daa les cmp adc jo pop xchg leave mov mov stos insb fcoml fsub or fistpl loop test dec in out push call cmp das mov mov mov push mov mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret fimull xchg jno pushf fidivr call int3 das fcmovnb (bad) in pusha fmull data16 (bad) pop imul sub lcall xchg adcl adc stc int3 or mov jne lahf mov push mov fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret fimull xchg jno fadd inc enter daa sub or in push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret fimull xchg jno daa pop loop jecxz jo adc push ret inc lea sti pop inc xor mov loop cli mov sbb pushf mov icebp les mov dec dec stc js or mov imul fistl dec test inc mov or popa add (bad) out notb jge stos test pop jnp fdivrs movsb sbb add movsl pop cli add inc in fild mov mov call (bad) mov push push mov mov cmpsl fs dec add mov leave add push ret jb sub sub pushf loope,pt xchg cmpsb test cwtl div or int ds mov mov xor cmp and mov dec fimul sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret cmp push cmp xchg mov mov lahf dec aas sahf push mov push mov sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop xchg hlt mov push push cmpsb mov or mov (bad) (bad) (bad) (bad) xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp test fstp fldt movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp test add fstp fldz test je fchs ret fstp fstp fld1 ret stos or add (bad) mov sub push pop out leave jbe xor sbb insl add jge rol add stos stos lahf mov leave fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg xchg hlt mov push mov fcomp sub or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret xor out ret dec stos jg arpl mov cmp je and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret fimull xchg jno dec sbb cmpsb in leave in enter outsb sbb or sub decb fnstsw xor icebp sti imul ja mov jo,pt push leave (bad) out imul ret push aad incb mov cmp mov orl and arpl xor cli cmp pop cli das lcall out outsb inc imul mov mov aas cmp mov out cli lret mov fnstcw aam add jge (bad) mov jae (bad) xor test lret mov mov das push sbb sub and mov mov inc cmp lcall pop insb mov arpl outsl fstl aaa arpl push pop mov and fisttpl adc mov dec in repz fmul pop mov cmpsb mov enter insl cmp iret and pop les mov sub aas lods lds leave iret inc mov loopne mov sar mov or out sub mov mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret fimull xchg jno daa pop sub pop xor cld sbb cs (bad) mov enter daa (bad) and or insb (bad) aam scas push and mov mov jb and or push mov iret mov clc dec jle xchg xchg (bad) cmpsl (bad) fsubs lods test xchg jne in dec out xor lcall sub rcr lods data16 sarb aaa jle xor cli inc imul fs or int3 iret popf inc (bad) mov mov mov pop jle mov xor jb jb jb or setl (bad) inc mov in mov xchg mov outsl xor stos aad iret movsl cltd out mov jns mov icebp (bad) lods repnz sbb sub (bad) fs xchg inc mov mov push sbb dec sub (bad) fld negb or pop mov lahf jg cmp xor fs inc mov jp ds dec stos repz mov loope dec xchg jbe jno mov and add jno (bad) (bad) fcmove clc aaa sahf fwait mov push mov inc mov cltd out dec (bad) ljmp cmp test dec cmpsb lcall add bound fwait cmp shll xchg inc shlb in stos lds sbb inc sub movsl lods fwait cmpsb in add xchg cmp pusha inc mov push fcomip cld mov aaa es mov adc int lret movsb pop cmp mov js pop fstps mov xchg adc pop inc cmp and jp shlb and xor lods dec pop test (bad) sbb mov stos pop xor lea pop mov sahf dec rcrb gs ds (bad) je (bad) rol imul in sti inc inc xchg pushf cmp and pop sub jo lods adc cmc shrd cmp call sub xorl idivl jl bound jb add (bad) mov jno ret (bad) outsb dec sbb mov xor mov nop iret addr16 jae into aas and sbb push ja cli cmpsb pop mov add cli aad cli repnz bound sbb mov jbe aam rorb fdivrs outsl movsb stos mov mov fnstcw add or xchg xchg mov pop cmp lret mov push mov mov fldcw rolb and arpl pop push inc add push imul or push mov push or jge xchg inc xlat jmp cs sub aas inc push mov add outsb push mul mov repz test outsl inc (bad) jnp or xor sahf in jle js inc adcb add mov cltd repnz popa ficom fistpl clc dec sahf xchg aam sub pushf clc push xchg loope jg and mov mov adc (bad) pop scas dec jg sbb push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret fimull xchg jno daa pop sub pop xor cld or les push pop xor (bad) popa jl sarl adc xor inc add xchg fnstenv dec int xchg setle jge scas mov jl sub cmp jp mov jo inc outsl aas mov push mov fisubrl xchg xchg mov adc daa js cmp in cs jge mov fstpl and clc mov cltd leave or (bad) mov xor loopne leave out fwait leave pop mov pop push imul push push ja and push lods push insb and and push (bad) das insl enter and and push xor inc aas stos push sbb mov aaa frstor mov jno ret inc cmp repnz sub mov aad mov sbb imul mov arpl sbb cli arpl xor scas mov nop or (bad) (bad) lock push cwtl rcrb xchg add sub lahf xchg cmp jb jb jg dec (bad) out sub stc jns clc or dec jb lcall push or repz mov dec inc mov push add fs loop jl push rorl aam mov cmp rolb xlat (bad) sbb stos cmp jmp dec ret jb aaa jno pop jno aam data16 daa test dec pop cmp (bad) push loopne push (bad) pop mov out sti scas adc outsb lret addr16 in roll sahf mov adc hlt sti jmp leave (bad) lods mov int push jo mov sub fisttpll add out cwtl mov movsl xchg xchg outsb hlt xchg (bad) insl mov fnstsw jae test sub outsb push mov popf cld cmp leave (bad) lret inc jl xchg ficoml (bad) cmp lret cwtl inc push aam call in sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret fimull xchg jno daa lret cld lods lock aam xchg jnp xchg inc and push push cli scas sub push xchg aas (bad) test adc not daa mov fsubrs repnz cmp jge (bad) mov add adc in mov sub mov mov cmp xchg lret fldt pop sub jno adc sti add daa sub hlt jbe mov loop add sahf or or ror jecxz cmp adc sub in sub pop xor pop insl mov hlt icebp pusha int insb or jle cmp sub mov sub inc iret push leave rol mov clc fsubrs mov cs mov test fs aaa xchg cltd loopne out mov and or (bad) mov adc in test adc pop mov data16 add fmull xchg push adc fldt jnp and xor imul push cltd je (bad) mov inc or fcompl sahf mov (bad) and ss sbb (bad) mov cwtl lods sub fiaddl int xchg aad test test cmp scas out mov loope xchg push sbb xor inc mov data16 adc xchg pop jg jns mov (bad) out ljmp pop shrb sbbl fstpt (bad) mov jno mov xchg and jo jmp or push lret push leave cli jecxz pop stos lock adc mov mov gs mov xchg aam std ljmp or pop pop lods xchg cmpsb sbb or pop xor push and hlt repnz jp push mov mov popf pop mov jno xchg fild xor pop dec stos push xor adc jle popf xchg jg cmp pop pusha inc mov push pop inc mov xchg outsl inc mov push loopne mov mov or jno inc sub mov or out (bad) ljmp xchg cmp and pop push jo xchg int xor and int3 call js aas iret jmp movsb and pop popa ret loope jmp push ljmp mov (bad) xor lods lcall or insb rolb das test sahf (bad) jbe sbb fxch push mov int3 lea mov sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 fimull xchg jno xchg jnp push mov insl shrb push lock lods push pop dec or add enter stos js xlat out outsl adc sub add test test std jg inc mov xor pop mov clc inc imul call jne into jnp xor pop sbb pop imul bnd daa pop popa xchg iret and jno cld pushf sbb cmp out pop gs insb aas mov cmp es out loopne cmp movsb lahf loopne jae popf aad mov lcall push mov xlat and pushf add (bad) divl sbb cmp adc cmpl dec subl mov push mov sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret fimull xchg jno xchg jnp push mov insl shrb push lock lods push pop dec or add enter stos js xlat out outsl adc sub add test test std jg inc mov xor pop mov clc inc imul call jne into jnp xor pop sbb pop imul bnd daa pop popa xchg iret and jno cld (bad) sbb cmp out pop gs insb aas mov outsl (bad) adc sarb dec popf popf mov dec test pop out cwtl fisub jbe bound stos out jg repz mov xchg xlat daa sub repnz xor gs mov sub push imul mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp fimull xchg jno daa pop loop jecxz jo adc push fldcw or stc repz adc xchg dec pusha in sbb (bad) call mov pop dec push adc inc xchg pop xchg stos push xchg das mov ret push jl mov repnz test mov push mov stos scas fisubr stc mov and pop mov xlat test js sbb out ljmp sahf add push cmp xchg mov std cmp or loop sbb (bad) mov not leave jg movsl loope sub ss movb mov xchg xor mov mov push mov sbb push xor push adc and push lds decb shlb ret test (bad) push xchg jp cmpl mov in int3 (bad) cld imul test add xor and jl cmc inc outsb inc sub out cmpsb rcl (bad) daa xchg lods inc jb shr pop mov arpl sbb fs jge xor lcall sti and and bound imul ss (bad) xor mov addr16 outsb push js sahf fstpl or cmp adc sub pop dec (bad) into into inc jecxz push nop and dec xchg push lret xlat orl xchg sbb sub xor add ja sub mov lds loope imul mov mov fmull pusha loopne fcomp sbb (bad) out int3 inc lret ja dec sbb push lret jmp repz push xor aam mov stc out in int dec adc clc dec pop xchg cmp push mov sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret fimull xchg jno dec dec sub push mov insl rolb push lock xchg mov dec sbb (bad) loopne icebp pop cmp sbb jnp push out xchg mov mov enter inc aas mov inc dec mov test mov push push pop adc cmp inc (bad) out mov popa add out pop in push arpl mov ret push add jo rcr ss lods inc cmp mov adc jbe xor scas or clc lret sti dec (bad) or mov imul jno pusha mov push mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret fimull xchg jno daa out jp cld lods lock aam xchg jnp xchg inc fldcw add mul leave cli jecxz leave xchg lds pop mov mov shr adc outsb pop xor and dec movsl jmp jg inc in pop jae sub aas cmp cltd adc mov xchg dec shrb jne pushf pop xchg inc pop mov imul lods out (bad) xor pop inc (bad) (bad) test cli aad mov loope or daa xchg dec rorb mov push ror jecxz (bad) mov clc sub add mov ljmp xor daa loop mov (bad) aaa aad add movsb jmp or sub mov mov addr16 inc (bad) std sarb fwait stos ret outsl cli outsl sbb dec in jo sbb cmpb cmp adc jecxz aad mov adc test rcl fbld inc sub mov mov daa inc and xchg inc xor pop lret dec stc fidiv iret jbe test mov std xchg call popf mov int3 ja dec jo xchg aaa xchg jmp and pop movsl jle fiadd rol xchg inc adc aaa pusha stos add (bad) test mov int3 sub sbb mov cmp rcl popa addr16 fs lahf ds aam cmp mov cwtl clc mov cmp int or fisubr inc xchg adc cli cmpsb sub lds ja cmp hlt jmp push rclb jne pop test nop popa pop xor push sub add ficoml daa (bad) mov jecxz repnz mov xor js fldl outsl out fdivrl outsb daa (bad) ss imul icebp pop (bad) xchg clc add mov add xor movsb add ret and xchg adc xchg sbb fmulp fisttpl lret jne sub lods icebp ja (bad) xor cli xor repnz pop pop mov fnstsw xchg add jge push repnz dec xchg sub push mov jbe sbb ds sbb test stos rolb aas test (bad) dec popf jno push dec dec inc push and jecxz sub int jle imul rcl fnsave mov jnp jne pop imul cld or cmp mov cbtw xchg or sub loopne out mov mov push je or inc push sbb insl jmp clc add sub push xlat popf sub mov clc movsl inc add sub mov or fstps fwait push cld xchg adcl hlt in xchg or test imul (bad) pop cmpsl cmpsb mov (bad) (bad) loope js xchg push mov xchg imul adc (bad) sahf adc aad rcrb clc out jbe sub icebp inc xor jg leave mov or jnp jne nop add push ss in sub (bad) mov push ss outsl xor out dec mov and lods push and mov lea sbb inc (bad) cld inc (bad) add bound cmp xor dec addr16 stos imul stos pushf imul cmc lret lds jnp leave push shlb cli mov jecxz fmul mov je mov jmp pop pushf dec adc in fimull mov test dec (bad) mov and adc mov dec jae xor mov add and dec mov out sarb jmp cmp inc sub inc lret mov pop or xchg add xchg fs js pop sti (bad) cltd data16 pop int jne scas aas rolb enter imul es insb jl hlt or cmpsl stos xor mov mov pusha imul mov lock das mov push xchg mov jmp icebp fsubs push test fcomps mov ret push xor (bad) sbb stc xlat xor cmp mov push sbbb test inc dec cmc inc fwait das in je sahf imul icebp mov push test mov mov xchg (bad) (bad) les (bad) mov sub lods fcom popa sub mov jns out mov out fs push pop or lods jno addr16 push cmpsb loope xor outsl or jecxz adc out (bad) push dec push dec aad sub push mov mov pop lahf test mov xor daa add sub jmp xor inc mov popf aad (bad) xor loope jnp scas push jae enter jp mov mov iret mov inc imul mov and dec inc cmp add push out mov out pop and mov insl aam jl int fyl2x inc insl dec lret pusha cmp add insl mov mov xchg xchg sub (bad) in mov popa xchg mov outsb sub cmpsb rcrl in lcall or add xchg xlat pop lcall xor lahf arpl ja push adc push jo int push std and or jl adc int push adc adc roll nop ret and sub adc dec inc stos out mov push xchg dec xchg mov cmpsb scas sub (bad) jge mov fisttpl fmull sbb pop aas scas mov aaa cltd push mov in lods adc sbb movsb cmc sti aam dec xchg jg and sub and jo (bad) sarl pop shr adc xor push aas (bad) xor arpl cmc fdecstp sbb out add pusha sbb cs (bad) cltd jge sbb xor notb push push out or jg xor jmp out mov jl ret orl push std xchg fsubrl mov push inc (bad) int mov mull mov mov mov mov xchg xorb fldenv lret das push and cmpsb mov popa (bad) adc cmp xchg push jmp jns xlat and fisttp cmp sbb lahf rcrl mov sub xchg in and adc or adc xorl repz in inc sub or push test jno sub loop fnstcw pushf mov scas cmp jp and dec jle shlb sub cmpl scas cmpsb jle mov stos dec mov dec and hlt bound in icebp push adc ljmp scas icebp movsb call xor out enter cltd push adc push insl imul out outsl test out daa aaa xchg shll xor jbe dec and cmp push push sub rorb cwtl lock out fs add rcll add (bad) jae adc shll fsubl mov or andb sahf dec lea mov into xor cwtl cmp push lods jno test pop push push insl lret repz inc adcl lahf sti push cmpsb inc loop push in test mov cmp jnp (bad) cld pop add movsl cltd loop or push adc adc push xlat test insl adc mov int jmp xor mov adc subl outsl xchg sub lret push mov outsl sub xchg icebp jl lcall imul cld lock xchg xor push out cmp popa dec mov sbb fdivs sahf bound cli pop cs popa cli jnp cltd enter push mov fiaddl and mov loop shlb stc insb pusha sti into jp sahf mov mov fsts ljmp push xor inc (bad) incl adc cltd mov sub add test mov mov mov push es pop in fidivrl jne push push iret out fwait outsl dec mov mov lea pushf movsl cwtl mov and dec push aas test incl inc mov push (bad) adc in js push leave ss lcall and mov sub mov and pop adc sbb pop or shrb loop mov adc aad (bad) out ljmp xchg push dec insb enter mov jge mov xchg jae sbb testl ljmp (bad) jnp jmp rclb pop add xchg xchg pop pushf pop mov (bad) movsl imul inc mov push sub (bad) push inc les (bad) mov lock mov sub push cltd int3 add adc shl notl or mov or pop push sub and lcall (bad) out fs (bad) loop hlt pop clc inc fisubl sbbl pop insl (bad) dec inc lds dec xchg lcall ja xor or jl sbb (bad) pop mov divb jbe (bad) push and sbb sbb out push cmp mov clc enter push dec add sbb dec mov sub xchg xor push sahf in fbld mov pop xchg push ljmp dec add aas push inc and push pushf add jno dec jp mov mov popf mov mov and lods jmp pop adc dec sbbl idiv mov xor cltd jle es jo shlb mov jno xchg (bad) jb in dec lea fisubl xor mov mov fdivrp ret leave cmp loope jnp rcrl and subl (bad) or (bad) sub es xchg rcrl (bad) inc arpl sbb mov adc adc dec jb push xchg adc mov cmp (bad) je jmp and mov icebp (bad) fisttpl enter fcoms inc aad sahf std addr16 aam or push mov popf ret or rcl jo mov cmp cwtl xchg mov decl (bad) inc adc push jo xchg inc es (bad) add arpl inc andl cmp xchg movsb sbb push imul adc fldenv mov rcl cmp mov lcall pusha sbb aas test leave cmovbe ss stos jae xchg cs dec nop adc push xorl sub (bad) cmpxchg outsb cs xchg aaa aad imulb add fcompl jmp inc mov das cld mov in pop icebp dec (bad) popa mov pop out arpl fisubrl mov mov test orl scas sub push into jmp mov fild cmp cmpsl cmp and adc (bad) lret ret sub icebp sbb cmp jb xchg (bad) xor or sbb inc call jne aas (bad) jmp jmp and lock or shrb mov push ret add enter je call mov add inc mov (bad) or dec mov mov dec sbb lahf in jmp mov inc jnp stc push add lcall jl mov in xor or and xor outsb mov dec sbb lds cwtl pop test jle (bad) lock (bad) pop movsl in mov sub adc imul sub jbe mov dec mov daa enter mov pusha dec mov sti shlb adc pop jge gs pop in movsb jmp loop out in inc (bad) or mov fdivl in push cmp cmp (bad) mov enter push jno (bad) outsl sub sub dec jp pop lret pop xchg pushw pop lret push sbb add pushf cmp cmc mov test inc iret sbb jmp pop aas pop sarl sub inc jmp shl mov inc jl or loop mov sbb mov jno cld xor fadds je ds xor or pop cltd andnps lret jb dec or fsubrs cmp ds xchg and data16 pop aad mov push dec fidivrl (bad) std rolb cmp jne mov jno loopne lcall imul mov sbb jns dec repnz or mov jg jmp jbe xchg and add ds rcrb (bad) iret sbb fwait mov and jns or outsl aaa popa fiadd and sbb xor xchg ja mov imulb pop sub xchg ja imul gs pop dec fwait enter outsb jecxz std mov mov int fist sub sub mov xchg push pop sub and pop and int add daa pop adc dec dec (bad) aaa dec or into add fisttpl xor clc jne cwtl aad mov dec imull mov pop lock fstps pop lds add mov xor and in inc xor iret xchg jge jae xor push xlat shll xchg and bound popf popa xchg or sbb lods lret sti sub cli cwtl sbbl (bad) dec test leave adc cmp shr imulb movb push or dec lods xor cmp cmp xor mov imul lcall pop stos faddp pop int or rolb (bad) data16 sbb mov in aam les arpl bound push aaa hlt xchg scas (bad) mov xor test (bad) inc outsb orb (bad) ss push sti int3 aam (bad) aam or (bad) imul ret mov cmc sbb xor out mov inc out ror mov push shlb jmp mov push jb cs push dec in inc lds sub jns mov fprem1 adc mov out push in imul ja cs push inc mul or clc sbb mov aaa je jno mov inc rorb pop inc popf fimull adc das xchg insb imul stos dec out push (bad) adc fwait mov ljmp xchg pop fist lds orl fsubs and mov (bad) sahf (bad) cs sbb dec test (bad) sbb test pop sbb stos or sarb movsl lods (bad) mov imul cmovle lea push mov out mov divb addr16 dec (bad) mov xor repnz push (bad) test test scas jo mov je ret cwtl pop mov ficoml jae cmp lock or cmpsl stos pop and xlat dec pop mov add ljmp cmc xchg ljmp xor xor sub aas pop shll subl xchg push jne mov fistpl inc in repnz mov data16 inc add movsl in std dec fidivrl mov imul dec fsubl (bad) add mov iret add and mov xchg test xchg jle push les test adc sar imul pop ljmp add mov mov mov mov push out and lahf pop pusha or lret jge test lock lret jo inc adc lcall lds pop stos sbb aaa sahf adcl clc xchg cs movups sub cmp inc inc das mov faddl push in xor scas leave stc jp cmp sbb mov or and or mov aaa mov cs push int3 lret outsl in cld push sbb mov mov inc aas dec dec out test inc cmp jo bound aas jns mov xor mov push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret fimull xchg jno xchg outsl xchg (bad) (bad) ja das xor sbb jecxz leave pop inc cmp (bad) or fs gs pop js or in push in mov divb jg leave and cs jecxz and xchg sti adc fsubrl lods mov leave xchg mov mov mov in ret lcall in push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret fimull xchg jno cmp pop std cwtl dec inc push enter push loope xchg mov push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret fimull xchg jno inc push hlt pop in mov bswap lret cmc es cmp jo je aas gs jbe mov dec xchg and mov push sahf (bad) lods mov push mov mov and dec xchg or mov lret adcl movsl xor dec repz out pop rcl pushf stos aas arpl push out dec out inc ret push movsb xchg bound push sub cld lds ret (bad) lock pushf add add clc clc jno mov setl sub mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop rorb decb mov bnd repz (bad) or stc (bad) xchg dec lcall int pusha out movsb cmc mov mov dec sub fstl call call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp and ss pop cmp mov cmp cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 and ss or pushf sub push mov ds andb add in inc xchg xor test es xchg fstl cmp imul cmp leave mov xchg test jb sub lahf cmpsb dec pop aas pushl in push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret and ss mov call leave push mov inc xlat push jmp cmp xchg add jo xor dec fstl push jp sub xchg mov mov adc mov fisubr sub cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp inc jp pop sub push sbb int3 aad push mov sbb mov es ret mov mov xchg aaa mov sub pop (bad) pop lods push loope xchg jo fidivr popl daa jns cmpsb pop mov xor stc insb sub pop pop push sbb cs mov pop js xor push push popf sub mov cmc mov jne imul rcrl inc mov pusha faddl or xchg sbb addr16 dec mov jmp adc xor push pop mov mov int jg sbb out lods mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss dec xchg xchg pop pop lods inc jp enter repz mov dec xchg fisttp jbe jo sub adc test sbb sbb jb movups xchg or (bad) mov jmp cli addr16 ret fwait shrl jg jo fistpl mov popf jb mov dec and dec xchg arpl sub jno sbb shll add lahf fs loope inc imul cld stos out adc mov ds mov ror lock mov fnstcw push mov in stos mov (bad) loopne cmp out ljmp xchg loop push mov mov and xchg data16 ret out pop mov aad cmp mov sub xor mov mov lcall ret out cwtl adc adc dec ljmp mov xor push push je or inc pop mov mov in mov lret inc mov dec stc pop sub fs pusha mov mov and fidivl xchg ss insb arpl xchg jmp mov inc cmpsb lret leave nop lret add mov jbe fsubrl jmp mov xchg mov mov aad inc inc jne add popf pushf pop shlb pop dec and or das add (bad) fsubl les idivb int3 dec clc lock data16 test sbb je mov cli stos xchg cld cmp das int inc fisubrl out inc mov push cltd addr16 movsb fbld stos shlb cwtl or mov negl aas out out out scas jns sbb andps mov jp clc cmp popa adc sub mov lods adc jl jmp les mov dec jge mov ror pop repz push fnsave sbb (bad) jno icebp sbb sub rclb addr16 dec and es and and xchg pop pop pusha push add lret call in dec xor or pop cs xchg xor xor popf push stos sbb shr jnp rorb fsubl jl test mov inc mov pop inc jl mov aam aam push push inc (bad) xor push xor imul jnp insb xor adc inc pushf sbb bnd dec (bad) sub mov imul aas push xlat pop mov mov fcoms popa nop push fsubrl negl repz add mov sar test mov push mov cmp out jnp xchg mov xchg adc dec dec mov test jae lcall jge,pn hlt mov cmp xor or sarb divl add (bad) adc fistp data16 jns cltd xchg out les sbb testb jae xchg push jl (bad) or mov inc cwtl scas inc push icebp mov lahf ss cmp add or rcr les cmpsb pop into (bad) loopne in add mov xchg sti xchg xchg adc cli cmpsl (bad) popa push cltd nop fistpl enter cmp cltd adc (bad) lahf rcr sbb imul stos lcall fnstcw adc sub inc rorl addr16 adc cmpsb mov or inc mov mov push test fcmovnb and js mov cmpsl jge clc dec cwtl (bad) sbb lret dec and push lods ret mov sbbl arpl arpl out jle inc fisttpl mov inc sub shrl popa pop popa inc stos fnstcw add call mov daa in inc fisubl xor lds cld xchg (bad) mov push in cwtl lret shrl fdivs mov mov pusha (bad) sbb jo outsb xchg (bad) pop inc sahf repnz jmp int cmp dec aaa mov (bad) gs scas fisubrl imul loop jl sub int3 sbb mov sub mov cld test ljmp (bad) lock adc fnsave push inc cwtl mov push mov jbe pusha push and push outsl lods inc sti push or sbb fcmovb insb sub movsl cli sti sbb xor test inc cmpl add in cltd inc fs mov mov sub xchg dec fs out and add je aam insl cmc mov std test mov fdiv add outsl divl shl aaa mov and (bad) jbe sbb (bad) or inc incl notl mov call les icebp int3 dec int3 adc pushf fnstcw gs mov (bad) cmp cmpsb std push insb leave jns sub ja int3 sahf jne aas cmp push mov push pushf je into jb jb rcrl adc mov es cmpsl gs mov das xchg sarl test dec and shr mov test mov sti ret mov xchg dec lea xor adc in mov mov outsb mov insl or xor cwtl dec cli pop pushf push popl andl jno lds fnstcw pushl into jle scas stos mov (bad) push jne pop push jmp push pop sar xchg xor xchg loop jg int3 inc clc pop cmp xchg sub mov (bad) pop sbb add adc enter jbe sbb sub std (bad) dec pop icebp movsl pop pop call sbb xor mov mov cli xchg ret adc iret mov (bad) or cld negl stos insb sub jmp scas sub insb xchg jns cmp repz push (bad) push ret out das aas jbe mov cmc movsl (bad) repz int in xrelease test inc daa and sbb jmp or lret or xchg int xchg cmpsb adc mov jle fist ret jmp dec das xchg in fld ja sub dec cmp sbb cmp das mov push push mov (bad) cmp dec push clc imul inc inc (bad) sub push out and or or mov push movsb cmp lahf insb (bad) test scas pop cmp sarb enter dec outsl pop scas (bad) pop jns ss dec push mov lret out nop and sti movsl sbb lods sub inc pop out mov aam ss inc (bad) push push aad lock dec or in (bad) cmp (bad) mov xorl pop mov xor or loop mov movhps add jbe lcall sbb inc xchg add mov mov gs stos popa pop mov insb icebp stos fdivrl mov mov mov add pusha cld cmp fldt add lock js lret pop insl ljmp ja mov popf movsb lahf push xchg mov (bad) fnop jo mov cmpsb pop mov xlat outsl mov sbb xchg addl outsb mov scas mov aas fdivrp leave iret push dec scas push push add jae es lahf lea xchg xchg pop daa js int push inc adc cltd pop dec imulb xchg cmpsl mov ret icebp imul add cwtl sar loope mov shrb push (bad) mov mov daa out mov mov cmp mov push sbb sub fsubr xor mull lret mov or jg test leave sbb dec pop aas xchg in shrb aaa mov mov iret cs fimul (bad) cli into lret int mov fwait cmp mov xchg pop add sbbl inc and sbb outsl pop xchg shr pop popa inc sbb push xlat add jmp pop and mov push (bad) xchg pop popf jmp mov dec bound mov out cmp push adc push call pusha sbb clc aad test clc cmpsb in std lock pop mov push mov repnz daa stos dec xlat lods inc cmp (bad) fwait addr16 lds and add mov cmp mov sub jg idivl dec mov ficoml pushf shr ret (bad) shl lods pusha cmpsl sbbb fcmovnbe cli repz out dec test inc outsl jno scas pop out push fisub xchg jg mov add test xlat jnp (bad) cmp fdivp stos repnz xor add icebp mull jo leave cli and call mov rcll adc imul fdivrs or shr mov inc aaa cmp inc sahf add pop cmp dec mov pushf fsubrl rorl rorl jle stos cvtpi2ps adc es inc clc dec add sbb mov or lea cld cs jbe cld hlt adc pushf movsl imul sbb lock popf aad stos add push jmp jb or mov insl in in inc or mov pop push movsb adc je push scas mov mov lods ret dec lods xchg (bad) sbb les mov add loop scas lahf ljmp push lods jae mov popf scas pushf xchg mov lea or add mov jbe adcl out jle ljmp sbb pop int3 scas push add rorl sub and and daa mov jns cli lds test dec fmuls mov mov push or inc in loop ljmp outsl inc jmp ret outsb loopne mov repz jge cmpb stc mov push inc sub fist mov out mov cli jb and sbb lds adc aaa ja scas ja mov sahf decb shrb cli fnop add add mov cmpsb dec popa stc inc inc and cmp les arpl xchg fsubp mov cmp loopne stos jo aas xchg mov pop inc jmp mov ja data16 fsts sbb das xorb push pop dec pop xor ror jp jl push popa pop inc popa int cld mov aas daa inc (bad) inc add or or out popa xchg jbe loop fucomi fisttpl pop cmp jnp ret lods hlt mov and pop stos or mov pushf jge mov add cmp incl (bad) (bad) lods ljmp cmp (bad) loopne add push in (bad) pop pop xchg mov cld mov adc clc mov xchg pop scas sbb fnsave push cmp inc mov and xor dec out jo loop fisttp mov mov mov insl movsb stos adc mov add out icebp bound mov xchg adc inc out push por adc mov out or and mov push or fcomps push pop jb mov inc push pop jecxz pop dec push push loope popa inc inc or sahf dec sbb xlat leave mov dec sar scas jbe outsb in jmp (bad) mov decb or test insl inc jo fcmove rorb push push pop mov jo jmp sbb insl shlb or imul mov lcall sti cmp andb pushl dec sbb leave add ss xlat aam into pop sub hlt add ljmp (bad) call inc sub or pop shrl (bad) ja add sub or dec outsb xor jne or int rorb repz push mov mov push dec ret iret ljmp cmc push sbb into push repz add out fsubrl ret push mov ffreep xor hlt (bad) dec loope cmpsb sbb jns mov add lahf lcall and or push ja popf pop imul or (bad) ss mov enter shll and addr16 test add mov mov push adc mov adc or sbb movsb js loop ljmp dec or inc push pop les in dec sub mov into push bound inc lcall pop test mov ret cmp std data16 or insl stc pop cmc fsubl adc pusha call in test sub jo jae push push mov adc adc cld insl mov fs rorb xchg and adc (bad) pushl or out into mov add add out loopne rclb enter dec movsl fdivrl adc ljmp loop stos push iret loopne and push fisubrl lret orl mov add mov loop inc xor cmp insl rcl movsl call out adc call dec shrb negb pop pop jle jbe orl pusha sub jnp ja xor (bad) les mov jno rorl mov in repz mov loop pop je cmc test fildl imull dec test mov fsubs rclb popf jp (bad) fisubr rcl lods lahf out mov cmp sbb mov pop std mov aas (bad) pop dec je dec jno xchg push push aad push decl xor test cmpsl mov or jl lahf das or ss xor fidiv test sbb aad lds insl cmp and push dec pushf std sub gs and ljmp cs in pop add xchg pop jae sahf scas aaa pop imull ja inc inc je push dec or jae sahf jns (bad) call stc xor ljmp popa mov dec xorb (bad) out les stos mov lock adc lock inc xor xor jg out rorl loope adc xchg aad sarb (bad) (bad) (bad) sti add inc imul push mov pop faddl jl (bad) call fcompl rcrb dec dec incl out dec js sub scas (bad) mov js sbb inc into mov xchg pop loope imul sahf sub je or cld push daa mov add and cmpsb jecxz mov rol stos sub mov fs mov or cmpsb mov je (bad) repnz or xor imul movl inc mov mov sbb test lds aad clc iret sbb xchg les mov mov cltd test out imul imul dec jne xchg clc add xchg rol mov push ret jge cwtl mov mov cs jns pop push call pop ljmp (bad) cmp mov aad adc lods mov pop test lea dec cmp sti or cmc pop icebp (bad) xor mov jnp sbb adc dec in dec cmp cmpsb jns dec addr16 pop inc xor inc adc dec popa xchg mov orb bsr pop lock and cld (bad) lds leave add inc out mov sub aam (bad) dec jne sub xor inc ret mov enter sub mov cltd and inc (bad) mov xchg add loope andl arpl int fsubrs push inc pop sti shlb pop aad cmpsl fs cmc aam add js xchg or shrl sub int3 loope fdiv pop add dec iret lret add stc jmp or sahf sarl (bad) (bad) je imul pop pop xchg jmp mov inc out xor arpl adc dec inc into test or std aam pop mov sub (bad) test mov in jmp xlat faddp lret jne fcompl jo jle push push jb mov push mov scas out dec mov adc pop enter cmp (bad) or cmp pop pop xchg test xor add out (bad) cld cs and jp and sahf outsb popa (bad) iret nop repz xor add xor mov or js shlb add push cmpsb adc add dec xchg (bad) fstpl inc aas dec ljmp adc or xchg fucomip imul out loopne in push movsl insb (bad) cld inc or and xor mov pop outsb xor test (bad) xor cmpsl in and mov adc xor dec shll lock fldenv pop notb adc mov (bad) mov xchg rcrb xchg mul cld shrl cs repz fsubr cmp test pop sbb add insl cwtl mov xor lahf negb adc pop and popa out lods mov pop adc xchg and or into xchg das sahf dec mov je xchg adc inc xchg pop fistp cmp mov cmpsl pop scas (bad) lcall pop add inc adc ljmp repz ja dec mov out ja es sahf mov test faddp xchg mov xor ret dec lret or mov mov dec lcall es push mov xchg add (bad) cmp jmp stc dec roll inc add push push cmp lahf mov fcmovnb or jb adc pop insl pop sbb fs xchg repnz xor mov inc mov mov or ficompl fcoms jnp ja or or adc mov add insb orl xchg sub pop or call xchg xchg xchg loope cmp add jne imul push pop outsl test pop or cld in es ds sub fwait out lret dec mov loopne mov push cmp aaa ss loope fsubs inc out cmp mov sbb pop iret pushf aad mov mov test or jle cwtl stos js movsb (bad) mov lock xchg push mov lcall push mov xchg loopne sub ret movsl lret inc push dec push inc dec sub pop lret inc in or adc lds mov jp or outsl pop in lahf loope lret insb in add xlat jge jecxz inc xor push in add xor test xlat aaa insl cmp fwait mov cmpsb pop sub add imul movsb ja and ds dec and test (bad) mov int mov xchg inc adc dec pop shrl adc inc and nop lcall test cmpsl cmp sbb xchg xchg lret sarl stos mov mov mov pop loopne lods mov out je scas sub outsb imul push je xlat clc jl adc stc je (bad) mov dec xor (bad) int push insb (bad) mov aas insb sbb xor and shll dec and cmp lods aad and fwait push lods xor xchg adc ret cli pop ss dec mov lods ja push andl xchg mov cmp cmp jle mov push mov pop xchg fisubr pop fs in mov pop jge lahf icebp cs push inc cmp (bad) negb push or repz aam fistpl pop sub and mov push adc ret (bad) lcall cwtl sbb dec push xor in dec inc mov cmp loop fisubl testb push xchg testb push add repnz adc in fadds push icebp pop xchg fidiv shlb jae ret mov inc ds jecxz xor arpl popf repz adc sarl mov ljmp divb stos (bad) mov adc jno lcall fwait adc inc dec adc inc push addr16 xchg iret dec jne jge fs jnp int3 dec sub xchg fdiv inc cmp ret call push fs enter mov inc pop dec mov imul jmp xor (bad) dec dec mov add (bad) xor add lock cmp mov xabort push repz cmp imul ds inc (bad) notb gs cmp sbb push push aad das or aad pusha adc pop jg jl sbb pop out mov or repz (bad) hlt xor xchg push jge leave sarb (bad) and lock fcmovbe mov test test cmp sbb mov push cld and fdivrs stc out xor fcompl and loopne cli cmc or inc std add jno dec adc pusha push nop push ljmp dec fidivr cmp jno ret sub mov mov cmp pop sbb rorb jae mov fs pushf jae adc mov loopne jl cwtl cld cmp xchg jb sub nop inc adc bound add test push dec jne sub in stos add ja aam mov insb mov out cwtl adc lret cmp pushf in std (bad) (bad) mov cmp mov in test push dec into movsl mov sti lea loopne ror xchg push cmp pop adc pop subb inc popl rorb loop adc js fldcw scas jo xor ja sbb (bad) add mov js xor sahf hlt xor aaa pushf xor xchg fsts cld add into aam and push pop icebp stc mov or sbb or and xor mov dec cmp adc in jle shr or sbb jl jmp pop idivl sbb inc pusha and orb repnz sbb dec aaa push je sbb inc mov dec sysexit test push add mov inc sbb xchg je or shrl movsl mov mov dec fimull pop out movsl mov (bad) mov adc jne sub cmpsb add imul mov mov inc push pop ret ja pusha outsb adc idivl aaa in mov out stos dec shll inc addl mov roll inc dec popa pop sbb jg jae xchg insl aad movsb push mov repnz sbb mov fistpll fwait lcall nop xchg push popf gs mov jns or cld sub out add jno nop shlb loop pop js ljmp (bad) cmc ret loop popf outsl add jno jbe mov jb add lret jo sbb mov lds call js xor cs test enter mov jl (bad) ja mov adc gs aam movsb decl scas and cmp movb rclb or shrl sahf imul push aad fidivl xchg push leave cmpsl jg rorl mov lds mov cmp inc cmpsl out push imul adc loopne mov jge repnz fnstsw sub ljmp iret pusha sbb push add cld (bad) pop cmpsl xor cmc imul dec mov lret iret repz xor push adc inc adc xchg fmul add scas jno pop cmc dec hlt mov pushl sarl push fucom inc sub sub pop mov xchg push jge or (bad) mulb and sub js cli push sub mov inc je incb imul cmp add mov push push add shr out push icebp cmp xor inc add push insb loopne pop dec dec and std mov fisubl fmuls mov jecxz enter cmp (bad) and lcall mov outsl movsl lret jae js ret pop movsb ret inc faddl fs jb dec sub dec inc xlat roll (bad) testl ret xchg add fsubrs pop inc out or cmp add xchg cmp jp mov sub js scas inc xor movsl pushf xchg xchg cltd sub cmp ja jne cltd rol ljmp and dec andb xor mov push shrb pop in ret xlat ret inc pop pusha cmc cli test leave js mov insl (bad) scas fimull ret addr16 aam mov mov add std push pusha inc mov idivb pop cld in dec mov hlt xor jmp pusha pop mov jo xor mov push int mov mov leave xor adc fidiv addr16 iret jo sbb or fnsave outsl inc (bad) imul xor and int push lcall test aam pop clc lret push aaa (bad) mov xchg mov cmp add cmpsb mov int3 cmp ds lcall iret xchg jmp hlt nop loopne pop inc cmpsb daa jo dec add daa adc xchg stc jnp int3 addr16 xor push cmpsb enter adc or test add jecxz mov stos movsb push ljmp dec cmc in xor fwait dec push out xchg data16 scas stc call add into pop popa push out inc movsl push xor jecxz mov test mov clc (bad) cmpb pop mov or arpl pop adc push sbb jg lcall fwait ja xchg xchg std ret add or push cwtl cmp lahf pop adc jae lock jno (bad) test fbld fistl mov hlt mov ljmp icebp in mov push cld or ror dec dec xchg xor clc test cli sub int3 inc sub mov out xor (bad) xor mov xchg sub adc popa test jbe xor sbb fnstcw pop mov add mov xlat jl dec dec daa or cmc jecxz cmp lds xlat cmp js ret add pop imul ret mov les inc repz jb ja jae and jmp mov and hlt push rolb ja xor pop daa or and pop test scas lods xchg push jo sub sbb inc xchg add leave mov rcll arpl sarl xchg push xor sarl xor hlt cwtl fmull insb sbbl divb add jmp mov fldenv int3 mov inc iret xchg mov fcomp fs test pop fsubp cld jl or stc or and lds lods pop jo pop dec scas and imul push adc mov adc movb in mov sbb pop aas scas int mov js das cltd jecxz sub dec xor mov mov cmp add sub ret inc dec stc inc push test lds imul jg mov test add sbb jno or cmp jmp out xchg pop mov adc push sarb pop sub arpl mov rcrl jp insb xchg dec cmp mov and inc in xchg sub js mov sti and pop sub jno fnop jno and test int3 pop sbb or into xlat insb in popf imul pop sub sbb out inc test jns pop push or xchg mov mov outsl adc and cwtl iret pop mov fnop mov loop fistpl sbb repnz fdivrs jmp push cmp jg inc dec mov xchg mov lods dec jle or frstor ljmp out loop dec jbe js pusha hlt jo dec popl cwtl ds sbb cmp and mov outsb mov xor andl inc mov mov and add push cwtl dec ja cmp lret xchg or jl jmp cwtl push clc jbe sub test jmp fisttpl test scas js (bad) jecxz push scas add movsl xchg gs rolb adc enter sub and aas dec push jp xchg sbb das rclb rcr sub (bad) lret popa (bad) scas jo pop and addr16 sahf and daa mov cmp mov push int jb fs pusha out jp xchg inc scas and (bad) in ljmp popa fnstcw ret insl add insb movlps cwtl int3 sbb cmp out sbb pop lret (bad) int3 arpl and (bad) jae inc shr mov in add adc addr16 stos and add movsb js clc mov stc (bad) fmul adc jg ljmp imulb xchg add and inc adc mov inc add push add cmpsl adc push (bad) addr16 sbb sbb rol mov dec bound insb lret (bad) xchg ret mov pop xchg (bad) and mov es aam push flds pop pop xchg fwait sbb or pop cmp cmpsb popa mov ljmp dec or fmull daa add ss mov xchg pop (bad) cmpsl leave aas xchg out push mov mov xchg into test daa or mov dec (bad) pushf adc or xchg pop in push pop fwait cwtl jl fcmovbe add (bad) retw imul pop imul sbb sub das sub decb lock mov into nop and (bad) cmpsb scas les cmp inc insb and push mov mov sub xor loope hlt xchg cmpsb in cwtl pop mov sbb call sbb jbe popa mov mov or cmc sub cli or (bad) xor out or popf rclb ss sbb xor loop bound arpl cmp fldcw or cmp sbb fiaddl sbbb mov inc push pop push push lods lods mov insl mov loopne sbb mov stos mov mov mov adc cmp lcall jmp divb lret (bad) mov cmpsl push and inc shrl cmp inc push cwtl dec xor mov cs push and shrl into rcll push mov imul pop std push sub in jb stos imul pop sbb push xchg mov mov push gs lods rclb or (bad) cmc fisubr bound jns cmpsb stos imul pusha jge adc xor popa jb sub (bad) push insl push movsl mov xchg orl movsl jp jno mov loope cmp sbb rorl or adc aam repz rorb fisub pop or shlb repz push pop sub loop adc addr16 hlt adc negb fildll testl xchg jg push jmp pusha inc or inc test cmp xor aaa idiv add or lock add mov dec fwait pop orb cli mov or in sahf fmul inc mov (bad) in loop push lret jne fistl mov stc lahf mov out xor inc mov gs (bad) clc cli xchg jnp stc or mov fwait pop cmc or xchg add inc or out mov jno jle push add cwtl addr16 cli mov sub lahf add xchg xchg test xchg sbb adc xchg lret fcomi ljmp int dec cmp (bad) sub outsl mov xor xchg out roll std fsubs dec aad loopne flds popa push sbb pop mov sbb sub xor ret in mov (bad) jmp inc mov data16 fnstenv lods jp sub int add sub loope mov frstor scas in xchg pushf pop outsb cmpsb inc adc push repz sub in lea outsb and jg xchg push cmp dec jnp cmp arpl mov fildll ds int or add out out jge and xlat cmp add jnp in ja fbld or insb mov test test jecxz push mov xor vpsraw sarl data16 inc sbb xchg loopne out xor (bad) out icebp cmpsl xor mov rcr in dec mov jb sbb lret arpl dec lret jmp push inc adc in sub movsb popa xor fistl add adc dec aam sub sbb (bad) int jge fistl mov rorl jns sbb pop add cltd daa dec jae (bad) and popa jnp push imul xor pusha lock pop sub negb lahf mov addl lahf pop mov gs add sub sub gs push shr mov add ds cmpsl mov sub inc sub mov repz fcmovnu xchg outsb pushf sbb ret and push leave jno imul and fmul xor sbb movsb fdiv or lret push mov out (bad) adc es movsb dec aas (bad) lods int3 jbe (bad) scas inc mov jnp add dec fwait push insl fs roll je fsub (bad) sbb mov mov js sub inc pusha cli je popf das aam inc (bad) or adc scas push push nop ss sahf repz fwait aam in mov (bad) rol or xor dec stos loopne cmp (bad) mov (bad) mov aaa (bad) hlt mov xlat xchg xchg dec int arpl mov push cmpsl inc aaa (bad) cmc bnd mov stos enter cmpsl fwait call jl mov or stos cwtl mov xchg pop mov scas push call cwtl cmp cld fildl pusha lods stos call sbbb inc test rclb jecxz adcl loope jecxz fs jne sahf cmp cmp dec scas dec push int dec cmc and gs jne imul fst lea leave clc mov xor out popf cld out mov fs adc pop cltd das data16 pop mov or xchg inc push mov stos lods ret lods ljmp push inc (bad) adc orl dec movsb jno xor push sarb fistl enter leave and clc (bad) enter jg cmpsl sub mov cmpsl mov pushf push mov call mov pop imul mov xchg mov pop bound lds jge jno arpl add or or xchg xor int3 push pop (bad) mov mov and movsb and das es int3 cmp cli xchg mov push cmp out push cmpsl movsb adc jns jp sub sbb mov push sub xor repz aad pop fstps inc stos xchg icebp (bad) notl (bad) xchg jno les loopne add fnstenv or cltd mov cmp mov stc sahf dec adc rcrl lahf test sub cmp nop push test sbb mov cmp repz xchg enter int pusha push ret lahf fild mov rcl add mov sbb jae mov adc ret push stc mov lods jge inc inc pusha push push aam inc pop jnp aam pop negb out ljmp call cmp (bad) or leave mov pop xchg add inc (bad) aas and jge lret cwtl xor xchg or fwait and das cmp out cmpl dec mov mov push nop stos test jnp pop adc or pushf pop test test out xchg xchg push cmp std add fidiv lea daa mov or imul pop roll shrb sti bound pop (bad) lods rolb fldt mov mov in inc movsbl pushf popa js xor xor (bad) xchg popa fwait adc pop xor mov dec in push or fldt pop dec test int3 xchg pop adc sbb push andps test jg jb inc imul push (bad) adc stos (bad) lcall in daa cmc xchg pop xchg mov mov jmp ljmp jbe repz xchg aaa inc and scas lock (bad) push xchg ss ficomp inc cmp xor xchg ss leave mov jnp cli test jne lret sub cmc xchg rcll mov adc stos movsl (bad) sbb and push fnsave mov pop jae mov jns lock clc sti cli (bad) aad xchg push lea pop jbe pop aas rcrb xlat mov jle inc push arpl std xchg xor mov mov inc add mov stc adc push sarb lahf sbb mov pop push jge push add aad sti mov add sbb push cmp sub or movsl sub xchg inc repz adc flds ja in hlt sub push xchg push mov (bad) mul adc xor dec cmp test popa out cmp mov rcrl sar loop jle push push xor push dec or jle movsb xchg adc or bound shrb inc test sub aaa ret sbb andl cmp sub std stc xor pop stos jecxz inc dec ret (bad) cmp and pop and sbb lds xor xor std loope movsl std push mov add mulb jge imul aad mov int pop xchg and outsl jp and cmp jb jns in lahf or ljmp insl and fisttpl inc out xor cmp sahf int3 jb jae test fisubrl fildll clc xor rcl inc in mov xchg sti xlat fwait (bad) int3 stc pushf xlat cs scas jg jns adc xchg negb add in jne,pn dec or movsb jb cmpsb (bad) (bad) dec xor clc mov dec sahf pop mov popa addr16 es (bad) data16 int3 jae in cmp (bad) out jne pushf cmp fcoms dec test sarl out add or push jno lds (bad) xor mov and or sub jge jp mov fstps dec xchg push or and into cli cli aaa mov test (bad) push cmp jbe mov and aas pop cs lods data16 xchg jno push popf inc and mov mov jns iret stos sbb icebp scas xchg xor sub push (bad) jbe cmpsb xchg bound jbe fidivrl xlat add decb jmp dec dec fistp xchg cmp (bad) fcmovnu pop sbb xchg into jp incb in popa aad mov (bad) mov (bad) sub or xchg out push sbb (bad) dec or inc fadd add fmuls xor dec mov dec jno cs jge out jecxz (bad) movsl gs ja inc jmp cli xchg nop mov cmp les fidiv mov cld inc inc in dec xchg out add and std sbb stos in arpl (bad) pop mov push (bad) mov mov pop mov dec jb shrl jmp xchg stos insl adc push and sub push push (bad) mov sbb push sbb (bad) aaa es mov xchg cmp ret ja dec ret xor dec rcrl mov jb dec loop adc inc adc push mov jmp or sub adc sbb testb outsl int3 mov xchg fwait scas fmuls in push push dec cwtl (bad) lret movsl push pop insb pop jp pop sbb bound jmp imul cmc xchg imul inc or dec (bad) decl cmp fsubs push daa cmp xor xchg sahf rclb adc or jnp mov sub sub insb mov jne mov dec xchg rorb xor lcall ret jno daa ret data16 push sub (bad) ror cmp fs out das pop adc mov idiv mov dec mov leave sub sbb je xchg push mov dec ret ds lods add aad jmp cmp out cmp ror adc addr16 push add push lods divb test cltd mov out sub dec movsl mov push daa adc mov addr16 out cmp popa in lea sti mov rcll not (bad) imulb in (bad) mov mov mov mov or push test cmc and add iret jno pop fucomi jno xor inc xlat jbe ja insl loop jge outsb mov jo and ljmp lret or push add in ja xlat test add lret in jo data16 mov inc mov lahf (bad) out sti inc imul enter push xor in call sub popa jno xor lret or xchg push lods les mov and aaa pop sub jl es out xchg push out push scas cs xor mov sarl out lods lock xchg cmpsl cmp jl xchg mov shll adc popf fsubl xor daa dec (bad) add cmp sbb jne fucom xchg lret add mov sti das insb jo cs mov mov lret in rorb cmp push jp sarl mov push aad inc and mov xor outsb and loop in xchg lcall add xor xlat out cmp jne rcll push inc mov imul (bad) movsb xor sbb xor sbb stos insl cmp loopne push jne insl into call cld jo mov sub and sbb jb iret ja in fimul add int3 mov gs xor mov inc and aad iret ja test mov out std outsb js fwait sub pushl inc xor rcr and rcll sub dec dec add mov (bad) lock dec std popf stos int add popl dec aam leave push pop push int3 and mov pushf jmp xchg rorl lahf sbb popa inc sub xor push pushf divl mov xor or or es loop sbb cmpsb stos or cmp aad stc insb sbb dec sbb push fistp imul sbb mov add sbb push repz in add sbb test inc jb dec push rorl negb aam lret inc lahf adc in xor fdivrs loope daa (bad) in outsb inc (bad) pop aam (bad) fimul jb xlat sbb sahf bound push xchg inc sbb call fsubs jg pusha push push pop cmpsb mov pop sbb scas xor sarb sub and cmp fsubrs push cmp shl and pop stos push xor arpl loopew sub mov (bad) es pop or rcll jp ss or dec push ror int movsb fisttpl cmp cs add fidivl push (bad) xchg mov mov cmp fnop dec daa and test jbe gs shrb addr16 push fdivrs bnd or xor (bad) cld dec test jl in mov xchg xor jmp mov subb sti ja add sbbb (bad) push inc nop lds sbb rcrb and mov pop ret fsubl shufps cmp sub movsb dec popf movnti insl (bad) int add mov rclb dec pop out leave adc rcrb in pop jnp pushf repz dec pushf in out xchg int ret cmp fwait pop sbb inc dec mov mov dec mov lds shr xorb and (bad) pop leave stos rorl jl sbb repnz push jmp nop notl enter jmp sub loop push ror out push mov sbb ss daa insb push das scas add cmpsl mov sub push adc lods loope or adc popf out out frstor mov mov pop cmp mov mov cmpb pusha push jno push fisttpll mov fimul xor inc icebp push and in out das sub std jmp sbb inc push and insl cs push aam (bad) cmc mov push xor cltd clc iret jge jo jnp lret aas mov in push or pop pop out xor jae dec adc mov mov js mov test xchg and adc or std xor fwait clc mov iret lea push sbbl push lahf push inc add adc xchg sbb inc jbe cltd jo cmp int mov aaa (bad) jns in sahf (bad) repz ljmp or mov out je mov rolb outsl out cmp mov rolb (bad) jo lcall mov mov lahf xor cmp xchg into xor lret dec xor andl mov rcr push (bad) sar fwait sbb sbb mov mov shlb insb (bad) stc lret (bad) mov lret jp or push xchg ss lock (bad) shrl out in mov mov sub add cmp adcb dec lcall (bad) push bound (bad) les sbb out std inc cmp mov mov lret sbb adc add mov adc test or jnp rcr xchg js jo popa jecxz stc insb loopne dec (bad) test lods push (bad) incl sub subb fnstsw movsb mov push out es inc cmp in int add ja out pop lret shlb xchg pop cmp lock jne repz ja inc cmp jecxz mov int mov and loopne test fcoml and mov mov mov adc mov ficomp push popf push jl inc and shl sbb adc lock or cld inc test flds dec xor or or mov pop push pop push inc fs xor xlat mov xchg xchg bnd or sbb cmpsb mov inc fimul adc pop mov cmp pop xor and cmpsl bound cld out or repz fadd mov imulb xchg jge imul call dec push mov and lea add mov sub jae jg (bad) fisttp dec inc inc adc ret adc aas nop inc cmpsb add add sbb inc adc hlt loope pushf xchg jge mov add mov mov sti neg mov je sbb fistpll cld push sbb dec mov sub and cmp aaa mov mov in cmp sub jl mov hlt and pop movsb jne pop push test aam in pop or mov and dec sbb sub clc inc mov and or xor rclb cmc jmp push adc xchg cmp movsb ret push decb js and (bad) (bad) inc dec mov out call pop mov pop outsl sahf xchg movsl push shrl mov js js (bad) fst ret into mov add and std movsl cmp pop dec inc sbb pop cs into fsubl gs in lods fsubrs mov dec lahf shrl ljmp mov push dec test adc outsl jo insb inc invd fdivr cmp lea insb outsl je adc (bad) addr16 jl addr16 add inc and ret cmpsb insb addr16 mov xchg imul or and inc ljmp cmpsl adc imul insl push aad imul mov cmp repnz dec mov (bad) mov aam inc cmpsb leave lcall movsl out cmp fstpt rolb inc mov cmp (bad) mov mov ret jg movsl aam pop in mov js adc and inc dec stos (bad) pop xchg push aaa out mov in mov out cmp sub xor inc movsl mov and shll adc (bad) and stos shrb jg std cmp addr16 pop mov out (bad) mov cmpsb icebp lret stos sbb xor xlat mov and leave xor xor ret les orl cmp mov push pop push in and xor int3 pop jle push inc inc or inc in in loope cli xlat (bad) aas negb or push and xchg mov enter xchg aad xchg mov or int3 adc je push imul cmpsb sbb fs jne je sub scas stos push sahf enter fcoms fnstenv sub push jp sbbl add fwait cmp pop adcb sahf jne push sub out inc add call in push mov push out adc sbb mov stos loope pop cmpb repz das xlat pop and fild and les xor mov jmp cmp movsl adc loop mov xchg jecxz cld pop xchg add mov dec mov push loopne mov lock outsb std mov or xor fwait loop (bad) jmp push push jl pop pop je leave and fldt jno les mov sub dec in cmp adc loopne push inc hlt pusha sub imull in cltd push mov mov or or jle xchg movsb stc push ret xchg jbe and add push cmpsl adc push jne in xlat xor xchg daa push movsl fmull sub sbb stos into test iret sub jp inc aad outsl mov repnz xchg pop (bad) pop push gs xchg sbb jge mov repz test jg jmp clc lock jp cmc popa cmp pop pop jl nop or sti add das xchg push add adc adc xor into pop lahf outsb and xor dec adc (bad) pusha jnp mov addr16 shrl pusha bound les cmp mov fsubp inc lret lret or divb iret pop cmp daa test clc aaa insl and mov xchg lods fsubr mov bound subl cmc (bad) cwtl frstor out fbstp sub xor dec (bad) cwtd fmull adc cmc mov (bad) (bad) rol test cli add int xchg insb test leave pop mov and pop jg jl and or (bad) lret repz in sbb decl scas lret lret std pop sub lods hlt out movsl jp fldl imul je cmp push out push ds dec or mov stc dec dec jnp or cld test sbb cmp stos hlt lret push scas cwtl push test pop rclb inc popa mov flds push imul mov pop lock and jne cs nop (bad) pop lds jg xor push push pop lahf mov dec sub pop les in or mov xchg repz or jecxz paddsb xor in nop lret push or xchg mull pop mov push (bad) cmp cld loope pop mov xchg incb push jb cmp fstpt (bad) pop lods mov sbb fwait inc ret jmp test or popf fcoml mov inc adc xor dec jmp repz cs jl xor or jmp push int3 mov insb daa pop dec push or je addr16 and xchg cmp push add je adc out pop fsubl push push xor dec xchg xor push imul fildl push lods (bad) (bad) test lds fldcw mov pop adc mov rcll lret inc mov lods inc pop dec push or jb stos pop add xchg mov das mov cwtl push pop jl xchg cmp and lea (bad) (bad) mov das mov adc push mov int xchg push (bad) call mov test in cmp repz xlat out stc clc inc clc mov xchg mov push lods fsubs mov test scas push cmpsb jb fisttpl or (bad) cmp xchg movsl int sub fucomi cli test sbb cs iret jecxz or pop lret test aam (bad) mov dec mov adc pop shrl mov arpl or repz out ret fimul stos jne jno mov cmc dec xchg cmpsb or pop incl fwait (bad) mov add fnop push lret or mov push or add out mov push push les or push pop (bad) dec xchg repnz xchg ror xchg lods pop js jl mov sti mov pop fmuls push cmp in and adc adc add aad (bad) or pop cmpsb cmpsb push rcr xchg repnz xor xor in aaa dec stos out (bad) mov gs mov sti (bad) dec cmp or gs cltd popa sbb dec (bad) fstpt or notl lret push mov jo adc test icebp and pop pop aas xor and cld je scas sbb aaa lock sub int3 sbb mov bnd jecxz (bad) jbe out mov inc adc sbbl cs daa sbb stos fptan dec pop lods out and jmp popa sbb insl add dec dec xchg imul icebp xor es jmp iret pop cmpsl fwait and xchg fs shrl add push and (bad) and add push repnz addr16 inc mov hlt adc push getsec dec mov mov pop mov xor in push fdivrs inc or pushf mov pushf in dec inc arpl xchg dec and cwtl xchg shrl xor loopne push aas repnz cmp or call mov mov or js mov inc pop jne addb pop pop int insl test arpl mov pop xor call or mov pusha arpl imul and (bad) sbb repnz sbb xchg notb inc arpl xor aam and mov jne pop jbe stos dec icebp lock mov mov test in out dec push stos xchg ss sbb clc push sub shlb xchg push add inc or inc mov mov sub mov dec les push lret (bad) jp outsl inc mov add pop jmp dec lods xchg inc xlat and adc nop not rcl iret push ja aaa pop add ficomp dec and inc or inc mov and sahf push inc (bad) push clc push hlt (bad) into in ljmp mov mov mov (bad) mov lret push pop es push cmp add dec pop push rclb and jo jmp fisubrl push xor hlt and movsl repnz jns adc dec in xchg leave scas jle (bad) mov clc out lods fnsave shrl push loope mov cmp push (bad) sbb jl dec xchg sbb clc inc push push dec sbb mov in sahf test lret (bad) ljmp sbb push xor cmp adc in jns fstpt pop ficoml out imul dec xorl jnp je push mov jecxz aad dec in cmp mov mov scas or dec leave cltd inc inc mov loop dec fcmovne data16 inc pop xchg or sub movsl and jns adc lods pextrw addl cmpsb lods jo pop lcall mov mov stos mov cmpsb cmp jo fld sti repnz insb dec and add stos (bad) fmuls pop jbe jns sbb xchg push adc xchg mov mov in daa aas mov mov cmpsb mov lret adc mov ret pop fucomp out mov or adc imul lods test lods loopne inc push pop aas mov xchg out out (bad) push mov int3 arpl mov in sbb mov les mov pop addr16 add mov add das rorb aam lret lahf aad roll pop lock xor xchg les sub popl jmp loope dec fsubrs test aas and repnz lds js lahf push (bad) shll and sbb mov sbb stos into das (bad) adc cmpsb sbb out nop dec test jbe cmpsb dec movsb mov mov cmp ja nop xchg cmp fldcw cmp mov pop movsl cmpsl outsb cmpsb leave mov scas push mov sbb sub aas dec mov add nop lahf pop in cmp pop int3 cmc iret lods movsb cmp mov ret hlt leave mov inc mov inc push mov jno pop lret mov and rcr sub inc mov roll movsb (bad) mov fidivl cwtl gs aam mov leave cli or movsl int addr16 adc in push (bad) insl imul in int scas mov mov mov es xor mov daa fdivrs movsb or int arpl push mov scas xchg mov popa add js in fwait xchg scas flds jle cmp pushf aaa neg pop (bad) xor push fcoms cwtl icebp ja mov cltd push lods xchg xchg and sti pop call mov adc cmc sbb andl hlt clc inc add mov or and mov (bad) faddl xchg insb mov addr16 pusha fnsave jl pushf push push loope in cmpl pop in and xor mov dec outsb dec ret jl inc fadd mov cs jae cmp lret imul adc in icebp mov loopne inc pushf mov movb pop mov push push jle pop cmp jmp lock (bad) jbe jle jecxz insl (bad) cmp dec idivb (bad) rorb or pop and (bad) mov sub aas popf sbb fnstenv std adc mov lea jnp sbb push push aad aam sbb mov push outsb dec lea stc daa std add jns test xlat js sub dec dec jge cmp push mov inc cmp lods cwtl nop lret mov push push les loopne jmp push test sub jge loopne dec adc or out dec and lock add into push mov xor xor push sbb dec xor rorl cmpsb adc push lods int outsl cli icebp sbb sti (bad) (bad) stos inc out std pop inc cli pop and inc xchg std fsubrl test and adc cmpsb sub sbb dec or lret mov test add (bad) (bad) sub aas pop jb push (bad) fmuls push repnz hlt test or mov jae mov xor or scas mov mov lods icebp sub loopne pop sbb lea setnp push xchg call fcomip sbb lods add jle repnz fldl mov xlat sbb push rorl lret inc outsb loop mov sub ss or iret nop jne int lock fisub sub dec cwtl dec mov leave add inc (bad) in out imul or sub push or pop (bad) cmc push mov push pop or mov jae jp fistl inc pop (bad) dec cmc push mov cmc push jne hlt cmpsb loope shrb dec pusha cmp (bad) push adc call push jnp cwtl or orl adc push mov fidivr xchg jo stc dec jno fwait mov jle xchg bound jle (bad) hlt insb imul inc mov push dec cmp mov outsl repnz out in xor jnp pop cld ds nop fs jb jge xor ret movsb call mov sti sub cltd or ja pop and (bad) xchg outsb sbb jo sbb inc ret aad into ljmp mov loopne sub dec pop lcall fadd ds fild cmp xchg dec xchg xchg add dec mov int gs enter popf inc push in inc fidivr mov cld loope mov mov (bad) push icebp in pop es les sub in out fstpl sbb fwait push sub push call and sbb stos lcall mov jecxz mov and pop push insb daa xchg into xchg jmp or enter mov stos sbb movsl sub sbb dec out cmp fist sti dec or data16 ss inc mov out outsb enter inc js sub pop daa adc lods imul into cmp push jno inc xchg fs mov pop xchg sbb pop aas xor lret test cmpsl lods arpl adc mov xchg pmaddwd cmp mov sub pop sbb (bad) fwait push sbb sbb xchg std fstpl mov mov movsb mov jo push and lods ss lods jmp mov mov cmp sub pop inc sbb push pop sbb inc jns (bad) (bad) cmp mov push movsl fldenvs (bad) inc int3 aaa cmp inc loope jne fwait xor popf cmp sub ficoml pop and arpl (bad) xor stos push jge inc loop rcrl std xchg psrlq inc xor mov (bad) fldenv pop jnp dec insl dec xor insb test bound push insl or orl in pop sub es fildl xor jae lea (bad) xchg jne dec push outsb sbb lcall in push stc xor add cli pop mov jle pop pop cld rolb sbb and roll pop movsl add (bad) pop leave add or push fdivr mov or jno mov mov add in pop or xor sbb inc dec mov lods mov (bad) adc aad mov fcomi push sbb fiadd lods xchg insl arpl pop push in pop scas inc xchg adc and sbb lods jmp idivl ret loop mov or push or adc adc mov cwtl rcll and clc int3 and sbb and add fdivr in xchg dec popl dec out pop cmp xchg enter sahf ja sti add (bad) push add (bad) cmp insl jge out popa push outsb mov (bad) icebp jns add jns (bad) std ss fs test adc xchg mov (bad) xor roll jno ds mov popf sbb mov sub leave icebp adc cmp (bad) loop inc adc push jns ffree mov inc xchg cmp gs mov imul out sub adc dec ret add sub mov call jge xchg push fldenv ror mul sub mov fstps add cs pusha add jno daa js gs push inc rclb call mov jae jl xchg sahf idivl mov push iret sbb shlb jp sar popf ljmp enter imul cmpl and push ja cmp sbb mov jno in or hlt test popf jne jge loopne (bad) mov daa push xor jmp and or xchg int clc or test cli int3 push mov gs in inc lods dec fcmovnu loopne adc ljmp cmp pop mov push lret lods out sbb in stc rolb add cs push mov nop aad je mov cli std fldl int cmpsb shrl mov in dec test xlat mov aaa pushf je cmp add (bad) cmp and or scas and xlat mov jae inc inc insl pop stc dec out jo jo mov xchg cmpsl (bad) push bound cmp popa push loopne mov insb insl lret mov xchg sahf xchg cld (bad) xor inc add xchg outsl push repnz push jne sub aam adc dec jns mov movsb jbe cmp cmpsb (bad) leave jo push adc mov ss jle das shl mov dec test push jbe mov or call mov loop dec pushf negl or das ret pushf aad in xchg mov xor jb push and dec shll and popa jno push jnp imul sub xor cmp rclb ja mov pop push adc jb aam push inc xchg mov jns or aad dec lahf push arpl push cmp jbe fwait pop enter mov int outsb insl loop push mov push pop stos repz mov lcall push cmp xchg mov push push mov xchg nop ret test or fidivrl push jmp and mov and loope pop loopne push sti fstpl mov sbb cld cmp adc lods call loop and jno cs fldl out ret lods jno sub das inc xor dec out xchg les mov jmp mov pop sbb rol add jae jmp lds jo scas mov push mov std rcll ds inc mov mov pop xchg dec lock inc dec mov xorl adc push mov inc jmp cmp movsl lock mov jp in cld dec loope in fmull xchg push dec repz pop or cmp aas imul in lods mov dec test leave pop addr16 test xchg aad into ljmp mov pop out add mov fsubp dec mov in cli mov push cmp xor inc xor adc cmp push repnz sbb test bound stos inc xor in enter es sbb repz or (bad) and sub out add mov pmovmskb sbb sar mov es sub xor rcll out icebp cli add ja (bad) sub sub sti jle and mov cmp pusha je aas pop in clc outsb push inc push out add cmp in sbb stc scas in push arpl shrb (bad) mov xlat or sub sub cltd jmp aam inc ljmp aam iret repz movsb cmpsb pop mov ljmp inc (bad) clc icebp xorl arpl mov jmp jle out pop int fmuls xchg enter clc xchg push pop imull hlt pop push add xchg or scas jge add mov test outsb dec mov imul daa sbb dec pop call pushl (bad) cli stos lods xchg jmp inc xchg pop and stos mov sti cmp int or in out lret sub outsb (bad) loope sub es mov stos or outsl repz arpl aam jg (bad) popf push repnz call sub roll outsl cmp xchg xor mov scas adc (bad) lcall cmp sbb test lods add loopne jo (bad) mov out jle pusha jo pop aad fimull in fsubrs adc jmp pop (bad) call xor in in jge pop rclb gs (bad) mov and cli xchg scas cmp push adc xchg and outsb dec mov xor test (bad) and cltd data16 fucomp fucomi cmp js test cli mov enter sub (bad) cs sbb out or cmc add mov int3 jmp push je jl testl lods xchg inc inc ss xor add xchg mov sbb xchg mov fadd pop mov (bad) je cmp hlt mov mov je and (bad) imul or or add add je push lcall (bad) mov jl mov test inc insl int3 add add or out data16 test je cwtl pushfw dec arpl adc jecxz adc lret das (bad) lret mov sbb sbb (bad) mov sbb jo aaa adc mov fisttpll imul fisttpl andb or sbb out in (bad) negb sahf loopne xchg fs xchg nop jle dec xor cmp cmp mov out pop scas and fbld (bad) inc fwait and jg in test inc repz out adc lods aaa and inc repnz cmp mov int pop nop scas xor arpl pop (bad) pop xchg arpl or or mov sub add movsb inc sbb sub repz push stos inc and (bad) xor (bad) mov add in push subb pop xchg jbe sbb mov adc cwtl pop test jl loopne hlt mov and loopne movsl clc outsb neg dec dec icebp jp sbb fidivl (bad) cld cld fwait leave xchg mov movsl bswap inc pushf dec jle scas mov aad fidivl sub test mull mov mov push imul xlat repz out daa mov adcl mov mov xchg jmp adc imul adc clc movsb push mov dec cmp sbb sbb jns cmp jecxz lcall outsb (bad) stos cs scas xchg mov adc ljmp mov sete xor in pop mov stos xor cli xchg cli gs pop mov mov lret adc pop cmpsb dec mov push nop xchg fild cmpsl dec cmp mov popa cmp inc push pushf add dec mov push sub mov pop jle (bad) pop xchg cwtl dec loope add or add xor fistpl xorl mov jbe jns (bad) int sub mov or andb lea (bad) ja cmc sub dec jmp sti cmp add xchg fmull mov (bad) or roll arpl es aaa mov sub dec lods pop mov mov into mov stc add es mov adc inc mov call out cmp or mov into enter inc vhsubps fbstp inc cmp scas lahf sbb mov imul sbb or (bad) into jle push ret pop xor sarb dec mov fcmovnb inc stos aam jmp fbstp xchg or cmpsl scas out inc mov fcmovnbe push ficom lret inc xor mov mov xchg xlat adc xchg rorb popa adc hlt int3 cmp pop rcrl mov fidivr mov dec pop sahf xor push loopne repnz call (bad) and sbb sub or inc call add loope lds loop push jne (bad) jb cmp fs add and push sub xchg call test sbb jp pushf jae ja bound out addr16 test cmp and int cli xchg mov xchg cmp adc aam in rcrl sbb inc inc pop into or lds jl and sahf jmp out push lods stos leave (bad) and aam cmc jg fsubs rolb mov jge fisubl or push xor push sarb scas aam nopl es or push xchg cli mov loopne adc or int3 adc push adc notl ret imul ss xchg sub xchg pop (bad) mov mov mov mov or lods ret jge or jno push lods pusha mov xchg pop sub js scas incb push mov lods test inc loope fwait out mov ljmp es lcall and sbb mov cmpsb inc mov sbb sub adc sbb xchg sti pushf xchg or pushf mov aaa mov or enter insb (bad) (bad) jecxz mov adcl pop leave sub xor cltd in fs xor outsl int3 and push adc xlat push adc cmp loope mov aas and xchg mov mov jl test ret inc sub ja fwait es add test hlt xchg (bad) popa js rorl fidivl push test or fmuls or es sub lods rolb lcall movsl int ret inc mov jg xor mov arpl mov mov (bad) js xor sbb xor adc in lret and jmp fiadd jno cld aad cli xlat add or cmp jle adc (bad) in xor add nop test mov cli es mov mov push loopnew (bad) sarl and cs add mov je loopne add and call cld insb or mov test mov rorl sub cld xchg test stos push push cmpsl dec or ja imul push mov add mov fistpl lret icebp sbb dec mov outsb cmpsl inc add es adc cmp xlat sub addr16 and xchg js adc js cmp icebp adc mulb cmp push (bad) inc cli movsl shrl xchg cmpsl enter jnp cs jne sbb repnz lcall push repnz aad sbb fistpll scas dec xlat movsb sub clc mov jmp push notl or inc fisubl imul cmp stos sub sar mov mov pop jbe stos jb push sbb adc mov push out sbb sub mov popf push xchg out iret imul add xchg mov jl je idivl jmp mov xchg shrb jmp outsl orl stc loop and (bad) mov stc arpl je push (bad) enter pop cs sbb pop bound shl and mov test xlat stc imul mov outsl and jge rcrb icebp fnstcw or and (bad) fnop xchg mov fdivs cs and inc xor out ret lea outsb sub ja fucomip jne or dec add mov mov xlat sub lds xor xchg sub mov gs (bad) ss fstps adc adc lock mov push xchg mov lock mov dec jne adc add test repnz push roll cmp repnz int jne xlat es mov rclb mov cmp pop gs arpl test in stc jb fldt mov adc pop and push fwait enter inc lahf or cmp dec dec sbb sub stos mov mov push sbb ljmp inc adc and mov in mov push push std push mov and cmp jae ss or xor mov inc adc xor and sti xchg aam sbb xchg dec xchg (bad) push fisttpl push les sub sahf aaa orl inc js rorl fldcw bnd dec push (bad) mov pop in add and xlat leave ss pop and inc lahf push call fsubl lods inc sub rcrl or lahf sahf fwait mov dec cmp cmp arpl or mov inc mov mov inc cld mov ja pushf sbb cmp dec (bad) mov rcrl ja mov xor ljmp clc fs lods inc adc das push ret mov xchg call pop dec ret mov insl mov mov jae test mov jl popa inc data16 inc pusha jb fs fidivl insl int3 dec sahf fdivs lret bound mov pop xchg stos cltd mov loope movsb mov mov cmpsb add in negb lret dec xor and and sbb mov (bad) jne les (bad) leave mov pop add scas xchg cmpl imul mov lods cmp dec fdivp leave add inc fwait lock mulb and je mov xor bound inc iret out das jns sbb dec stc or and lahf mov pop mov pop insb ds jle inc mov push out sbb mov or test popf test adc sbb (bad) sbb sub popa sarl pop out addr16 pop jb out cmp mov mov jmp adc cli cmpl mov in mov pop enter inc (bad) (bad) aam dec (bad) insb jb sarb xchg shrb xchg push inc add leave (bad) xor pop sbb cmpb (bad) inc aam and faddl add mov and mov dec repz in (bad) int aaa or mov (bad) jo xor xchg mov and notb das dec mov nop imull mov adc xor push add jno mov mov scas ficomp jg test loope out mov push into nop ds repz mov xchg push fmul hlt cmp fdivr adc and mov mov push and test fiaddl inc xchg dec xorb aaa xor out inc ljmp pusha arpl and or mov add sbb sbb and lods dec or and add xor or jp and sbb aas dec cltd push js cmp mov jns repnz jmp pop dec mov mov mov mov incb stos (bad) aad aas sbb pop arpl int jmp inc icebp test inc imul loopne xchg sbb xchg hlt jno decl sbb jge push test icebp in and fnsave daa subl cmp dec sbb push mov js in fistl repnz jbe lock lds mov cmc mov aam popf or int3 outsb jmp jg lret mov jg mov lods inc repz inc cwtl dec aad js sbb push mov movsb or xchg bnd sub sub stc mov mov int cmp decl sub imul dec xchg mov add push push in fist pop fs jns gs in fbstp dec jle mov sub adc outsb ljmp mov adc xor dec mov cli sub xchg (bad) cli mov gs sbb xor push jmp cmpsb mov mov xor (bad) setno stos lea dec cmp and scas imul xchg mov imul sub sub stos adc jae mov fnop out mul ds mov sbb ja pop cli nop mov aad aaa mov pusha nop add out enter dec pcmpeqw icebp dec jno jns add divb cs xchg jmp (bad) fcoms js mov mov iret imul imulb loopne mov test (bad) dec jo lds jl into mov ret sub and add aad leave enter ror push pop pop sbb xor inc cmpsl ret inc or push (bad) andl incl (bad) (bad) pop jne outsl pop mov jns sub fcomps std sub pop and and cmpb (bad) pop and lahf mov inc mov mov aaa sub pop sti (bad) loopne jb incb (bad) adc cltd adc into repz add jle jne clc (bad) jno (bad) push sahf mov xchg add stc fiaddl dec (bad) insl lcall sti cmp cmc js lret scas idiv into or jbe pop nop sahf cmp lahf dec sahf push rolb and inc ret lret dec daa jle xchg or scas inc xchg push push fist out xor daa inc sbb jge sahf stos inc in mov mov mov enter loopne je daa mov dec out jb jle inc outsb into int3 sbb sub mov or (bad) xor sub cmp into push sbb push (bad) (bad) insb cmpsb lods adc push out inc sbb inc cmpsb dec popf pushf je ljmp (bad) (bad) fistpll xchg inc pop xchg in imul jg repz lods mov scas xor xor mov sbb stc dec inc xor push rorl test jmp adc pop mov push test aaa leave jp rclb jnp mov fidivr dec mov mov xchg adc (bad) push mov dec xchg fildll jne mov sub das push jp push arpl xchg (bad) xor mov mov stc mov in jne push adc inc sbb jnp jmp cli test adc (bad) mov rcrb mov jnp xchg (bad) add fcompl dec mov xchg ljmp jne cmpsb mov (bad) mov mov mov add fnstcw orl stos (bad) lcall pusha xchg (bad) pop xchg cwtl xchg sub lock and xchg outsb xor mov pop mov jl dec cmpsb insb shrb pop bound mov jbe jl hlt jne ds push aas fsubrl or popf fcoms sub mov js xchg mov out loope shl mov push xchg ret loopne das mov loopne xchg push push add or xchg sub jmp hlt sub mov cmp jmp cwtl iret sub jo lea adc xchg adc lret outsl xlat inc push repnz jb mov repz pop mov pop mov mov inc out clc test pop pop lea xlat call jp pop jecxz mov gs sbb inc xor or into testl push jns mov daa mov loope fdiv loopne ds inc xchg adc enter sub test imul adc pop std fptan mov add insb clc sahf add lret rorb adc stc inc add jle add (bad) sti cmc mov xchg push jne and lret cltd pop leave dec mov and gs pop mov adc scas int3 cmpsl and and (bad) fwait and addl std sub cld hlt pop xchg out ret orl xor flds bound movsl aas mov xchg sbb pop mov mov inc (bad) popf dec lret in pop test jl cmp scas lea sbb mov movsl in jg addr16 dec pop loope hlt pop scas idivl sbb push shlb out push push cmpl in lss imulb (bad) cmp push push inc (bad) cmp jae cmp mov mov pop stc roll lcall jecxz loopne pusha gs push cmp loop adc jne xlat in sub mov or xor sbb xchg jmp lahf xchg jge cwtl mov mov popa nop inc cmp xchg shll subb or sarb jecxz xchg stc add inc leave sub mov xor inc test adc cld scas push pmaxsw int3 test push inc mov bound mov popf fstpl (bad) in test mov aad negl dec mov push test aad fwait dec pop lods outsb inc jl inc scas daa sub loope adc xor xor movsb in outsb fs aam je outsl call fucom jl pop movl mov pop mov mov outsb loopne,pt loopne les push in ret cmp adc mov fisttpll movsb in not jno cli nop in add inc enter sub lods (bad) nop scas sub mov sahf mov push pop push mov lcall push mov rolb push jmp pop in inc mov or fsubs add bound sbb cwtl das jns daa enter shlb xchg dec in jnp imul or xor pop jmp test jl,pn icebp test dec mov stc movb fs mov adc fisubr dec mov cwtl jbe,pn mov lock push cmp ja popf outsb dec ret lds sub adc sahf dec xchg cmp cmpsl mov adc sahf ret push jbe test sub add ret fs test pop mov lock mov lods jp mov sub hlt imul mov push pop xchg add cs dec cld (bad) out cld std xor jbe aam pop test xorl jg sbb out adc mov xchg pop mov inc divb mov add aam test add rcl or fxch push pop call sbb jmp je ds jle mov (bad) dec fildl lahf inc xchg aaa dec enter lods sbb pop in inc add (bad) cli imul mov cmp sub jns scas sbb and (bad) (bad) call dec mov push in jb xchg mov jbe mov xor fdivrl idivb sbb std inc loop mov jmp jo outsl cli jge jo outsb inc outsb out sub mov fist and ss out aaa repnz jmp adc inc sbb lods sahf mov push repnz leave shll and loope pop pop mov icebp and and xchg sub mov mov push fldenv pop fucomp pop pop mov mov mov into scas insl add pop imull push push in mov pop xchg pop mov lock adc sbb or dec and outsb cwtl popaw imul pusha or xor sub jecxz test daa js das hlt inc scas clc jns mov aaa add dec jae jno pop ret loopne sub mov push rcr mov add mov popa cwtl dec sub dec cmp icebp lods or push push ss add js stos inc pop in push (bad) fdivrs cmp sbb int push iret jnp or fs push out out scas hlt and test inc rorb fldl xor aad cmpsl jae jns insb mov iret push pop add add aas repnz xor sub clc in je loopne xlat xsha256 cmpsb push or adc cmp shlb sar arpl loop xchg stc lahf fsubr or mov in pop push lret (bad) (bad) fmuls inc pop lahf jno int3 jl xchg adc jno jmp push (bad) out pop lahf sub mov mov jmp es bound push or movsl jmp popa adc fdivs pop jne or adc je addr16 outsb pushf pop dec mov adc xchg bound dec sub lahf jns addr16 movsb sbb dec je inc (bad) pop std lock rcrl cs pop loope scas and fist sbb xor add mov push or pushf sbb mov hlt lock mov outsb add ds test mov lret les rol mov rorl xchg mov jne les inc adc les aaa jge cmp cmp into xlat ja or mov pusha lods sbb push jp insb inc dec rcrb mov adc test pop sub sub lret cwtl loope mov pop pop int mov pop out stc (bad) or inc scas mov ret dec cmp (bad) insl gs (bad) mov cmp adc iret sub ror cli mov mov lret sbb icebp popa adc mov outsb cmp gs call jnp fsubrl mov adc jge push hlt outsb js loopne or ljmp push sbb inc fimul adc or rorb lret push and cmp enter sub incb and add das (bad) repz cmpsl mov pop xchg hlt iret call movsb (bad) fsubp xlat aaa adc das xlat daa dec std jmp popa pop (bad) push mov das jnp push ja out shll fldpi xchg rorb mov push cmp push pop sbb adc xchg mov shrl push push rcrl or hlt out iret xchg ret stos sbb sbb test push hlt (bad) (bad) jns stos cmc sbb or add mov sahf dec rorb (bad) mov lret test out lahf inc sbb jmp imulb inc notb xlat push pop push fidivrl stc add pop jo adc je leave (bad) xchg leave out jno cmp pop enter lret mov and mov aad std jb adc roll sahf stos pop push or (bad) clc mov aaa pop mov jnp cmovp sbb imul adc push pushf adc jge dec push movsl xchg movsl cmp sahf xor out pop repnz test mov lret mov fidiv jb inc fwait jmp pop add fsubr decl (bad) mov (bad) js repz sub adc in mov insb pop pop mov inc (bad) jno movsb test int3 mov dec insb enter sub fwait ret mov test xlat aas mov adc xchg flds je mov add adc pop inc movsl std add or les cmc adc sbb jmp les stc pop (bad) jo (bad) inc movsb lock insb xor cmp iret mov dec imul inc (bad) es and mov int3 das push jle test pop and jno inc dec dec inc or ffreep lret repz outsl insb pop dec lds inc in add in jge das lea jne dec rorl lcall std xchg in sbb jne aas mov dec mov movsb sub std add jns incb stos pop mov adc and pop xchg mov mov jne xchg sbb (bad) sub fsts ret scas outsb test movsb cld sarl out jns negb clc leave jo pop mov or push (bad) or sub and ds pop jno sub xor push pop data16 cmp pop adc scas pop enter (bad) cmp lret daa sbb push fxch xchg pop pop ja cs pop xor sub js,pt xor js fisttpl sbb insl mov mov mov aaa mov mov inc fisubrl aam das out push (bad) stos movsl out shrb inc movsl ss inc sbb push adc jns jne push (bad) jge jecxz push cmp add cltd daa fist scas out lcall stos js,pn sbb inc mov mov jmp pop insl cli xchg in inc fs and (bad) and aad xchg insb sbb scas lods pop cltd lock into loop test ret in xor push sbb mov push pushf add fstpl dec mov cmp add and (bad) call mov (bad) dec push ret ret mov in jmp out push add mov icebp pop lods rorb js lds mov imul mov or inc or cmpsl aas jno,pn movsl cmp cs scas mov sbb ja std dec sub sub pop psubq cld mov xor cwtl test outsb xor pop iret outsl mov mov mov testb or rcrl mov lret lahf fisttp sarl (bad) dec pusha and popf xchg sahf (bad) cmp cli mov ss xor jmp aaa test pushf cmp cltd inc scas sbb add arpl insl xor ja lds ss ret jg pop fsubrl lods jp ret mov xchg jno jl xchg xchg mov fwait gs dec scas int3 sbb push inc adc mov jno cmp lods mov stos jg xor xchg dec pop pusha (bad) es adc xchg and xor cmpsb and cmp (bad) inc push out sub and mov jg jns cmpsl cmp cld out adc lds int popf cmc mov mov cmc xchg pop out inc or test fisttpl jle push out sub cmc or test or maskmovq div cwtl rcrl dec lock cmp jmp pushf scas jg add push jmp push and adc mov fnstcw (bad) dec push sbb in repz sub dec int3 dec push xor enter je inc cs test push into push inc cwtl jbe popf shrl xchg gs jb loope lock imul in adc push push in and xor call into cli cmpsl nop xor bound lret xor mov push imull andl adc (bad) lahf pop int3 lods mov in cmp cmpsb call pop stos cli push or xchg mov push outsb sbb popf adc adc aaa mov es jl lea mov xchg pop imul pop cmpsb outsb push outsb and es inc push call sbb inc or or loope pop adc inc sub pop jb dec enter aam out adc into into fldenv hlt push mov cwtl mov loop jecxz mov adc (bad) loopne hlt mov mov stc mov mov push (bad) jns int adc or stos inc ret inc sub ds lahf (bad) mov xlat inc mov pop mov jg je xchg fdivr mov lahf pop mov (bad) mov jl mov xchg inc xchg ljmp out outsb add lret or je test jo dec int3 pusha xor ja mov jns stos jnp inc sbb stc (bad) (bad) nop or imul xor ljmp mov jb inc adc les in jge cmc add and stos aam xor mov push jg std lea jbe push xor adc sbb sbb adc pop int leave jle mov mov inc cs test popa xor dec (bad) pushf and sub inc mov test mov fs lret xchg int3 sahf bound push test (bad) ljmp jp mov jg pop jmp jae dec adc popf add rcl inc adc daa int3 push mov mov sbb inc lock std pop scas xchg adc aaa cwtl in add in std repnz jo dec ret mov mov jmp repnz adc dec lds (bad) sbb cwtl jno outsb (bad) add push xor push (bad) (bad) fildl xchg mov or data16 add bnd cs stos and icebp repz adc inc push adc lret xchg into push shll jb xor int push jae add fsubl pop in scas fistpll mov mov pop orb inc cmp and inc cmp nop xchg mov and push in mov mov xchg daa xchg out ds bound mov adc fbld xchg inc jp movsl mov jne das adc test sbbl (bad) fdivrl std cmp insb mov dec jns xor add es mov mov xchg sub push xchg scas xchg and lods clc bnd fs xchg (bad) call push inc out sub add mov dec pop pushf inc leave sbb mov mov push jno cmc cld mov xchg inc cmpsl inc nop fisttpl jp mov mov fidiv mov xor mov inc mov cmpsb (bad) fwait push pop or sbb test jb push pop hlt add (bad) pop fild test loopne call push pop inc push dec ret imul std imul pop sub sti test push scas pop jmp je mov push out sub xchg out push bnd push into jecxz rclb loop sahf mov adc imul or arpl mov mov test or or jae jmp inc push xchg jmp add jl or mov lret xchg stos popa or scas push adc addr16 fmul fnstcw cltd cltd (bad) ds lret imul pop int3 fwait daa outsb add mov imul bound dec fisttp sbb and pop scas faddl cmp ljmp repz fneni(8087 push push nop movsw shl mov inc pop mov adc pusha adc mov mov (bad) out (bad) paddq inc mull (bad) xchg jl fistpll ffreep pop fnstcw push cld cmp lahf mov cwtl gs push sbb lods pop lahf jmp (bad) sti mov mov test xlat lahf je stos (bad) loop pop (bad) sti jge push dec sub test mov ljmp add dec insb ret nop jb jns in jb mov orl leave adc sbb adc push hlt cmc dec and stos imul sub xor push cmp (bad) xchg insl or js scas cld cld out pop cmp int3 call mov sbb decb (bad) out cmp sbb sub cltd pop xchg or fistp push xchg in addl scas push push lods dec test out pushl (bad) mov jl mov test inc or xchg push push stc cs mov or xor sub test ret inc cwtl gs pop (bad) pop test dec xchg loope out push out mov ds stos jae push and dec or adc adc or pusha dec pop fwait loope mov mov dec mov (bad) mov shrl dec cmp add xchg (bad) dec mov and loopne push out ret mov xlat (bad) add push ret sahf fimul inc repz mov adc fs int loopne out jg dec xor ja push or add fldcw mov mov addr16 xchg stos inc imul sub add addr16 mov nop push push lret ret (bad) (bad) insb repz outsb mov mov mov outsl mov inc in push dec pop pushf and imul pop in push and ficoml cmp jmp mov mov (bad) dec inc inc loop clc movsb sbb or rclb ds push outsl jne inc jnp pop adc xchg mov sub (bad) pop ss arpl imul dec test dec movsb (bad) pusha fstl mov adc ret loopne sbb mov sub push or sbb jmp and lods adc gs icebp pushf xchg add sub jbe or sbb push pop cld push adc cmp cld ficomp dec push stos (bad) sub mov data16 jmp mov shl mulb add pop dec loope in dec sub data16 ljmp in mov cld inc mov and jmp std arpl or adc aaa xor adc mov xchg icebp or and es (bad) popa jl in imul inc insb push jle (bad) (bad) repz xlat shld dec (bad) ljmp jno mov adc test lods adc and mov adc outsl mov lea pop add push test loopne dec push rcll jns (bad) repnz loopne mov jge or pop pop inc pushf mov inc fidiv idivb mov pop sub fwait adc stos popl push loopne in sbb dec (bad) aas ds mov push fsubrp imul adc sti rol jae add cmp and inc cmpsb lahf xchg out aam leave xchg (bad) rcrb mov push adc xchg push jge adc jo xchg or inc and adc cmc mov jo sbb or add fstpt mov sbb adc mov dec lret cltd popa mov rcrl cmp es sbbl out inc xorl inc cmp je pop mov fnstcw xor jmp fist (bad) les nop (bad) ljmp je push mov inc xor lods aaa call in cmp mov mov dec pop mov jg lock (bad) (bad) cmp test or lea push daa mov dec mov out ret mov jne es test jg xor iret popa fldl popa cmp mov add pushf push inc jmp repz lcall mov cmp rol imul test xchg xchg xor enter popa lods xor adc addr16 inc dec rcrb bound ret (bad) mov pop pop push pop xchg and or pop or xchg addr16 test xor or loop mov ret out mov pop loopne pop mov mov xor in pop fucomp dec or pop ds test mov mov jns push cmp cmpsb jl mov and (bad) insb push fbstp dec rcr jae je test mov and out inc xor les push push push jl lock xchg add add (bad) leave imul sub movsb js add sub std movsb mov mov adc jmp mov dec loopne xor xchg nop adc pop (bad) call aad add bound cmp mov repz ljmp cmp mov adc stos (bad) adcl int3 rorl cmp stos pop outsl into lds out test inc adc fnsave adc xchg and pushf test jnp sti jp (bad) dec push cvttps2pi arpl insb cmc pop fsubrs pushf mov mov adc shld jg (bad) mov cmpsl rcr xor cmp mov test cli jno xlat inc leave inc cs sub cmp push stos fs jge lds adc jnp bound hlt mov mov adc popf lret dec add pop mov in dec fsubs sarl xchg test loop jne or icebp mov jge mov push cld or xchg sbb cmp mov jmp ds je (bad) lods jae add and mov jge jnp mov xchg inc out dec mov mov rorb adc push iret inc in and jae lods loopne iret push in shll xchg in push stos sub xchg jl cld ret subl nop fs and testb lahf pop xchg daa sbb xchg xchg sbb xor nop xlat jbe (bad) xchg pop xchg les ret inc lret sub and or ret push mov loopne jl or jl push cmp shl aas ror xchg xor lods cmp test xor outsl or push leave cmpsl jb xchg jns in cmp jbe in scas add popf mov push push inc mov in xchg lock mov inc (bad) ljmp insb aaa test mov add and adc inc and dec inc adc aam push mov jns popf mov mov cmp rol in das out das push adc xor sub jnp and dec xor fdivrs cmpsl add dec cli add seta pop lea lcall adc xor das xor jge imul jns int3 out les dec mov push nop aad ret cwtl test je lahf xchg (bad) ja lahf adcl and sbb sbb jg imul sti ret mov daa inc xchg ds imul cmp scas sahf and push out mov push into test push lock cmpsb bound cmp idivb jge lcall xchg test cmpsl adc mov push push jp sub xor ss loope mov outsl dec cmc mov out push cmpsl outsl dec (bad) adc xor rolb sbb aaa push inc arpl stc (bad) jae push adc ret (bad) push (bad) mov lds xor mov int jle mov jmp das (bad) in add (bad) (bad) cmp imull sub int in test cmpl inc pop inc iret into scas rep or mov fidiv ret pop lcall pusha in (bad) outsl inc ss aaa shrb popa jg fwait int sbb sti xchg dec sbb (bad) add divb add clc cmp loope lea cmpsb dec arpl dec and (bad) jle push mov push sub int lea adc mov inc loopne xor and jl into aad scas inc inc sub mov inc outsb push jae cmp aam scas aad push ffreep xor xor adc add cmpsb cmp cmp add ds mov mov sub adc mov mov xor push push fildl mov mov clc adcl xor std cwtl push pop add inc cmp lcall push dec (bad) adc sub adc inc mov push daa fidivl dec pop cmp xor and pop imul out rcrb ljmp cs and and in push mov adc std inc lahf out pop ret shrl lock imul (bad) cmp dec movb mov push pop mov mov jo icebp in test sbb sbb xor sbb push scas (bad) call cltd and int es ljmp mov inc lcall sbb push jp xchg repnz adc xchg (bad) jmp cli out aad or dec (bad) dec sub imul and data16 fstps cmpsb mov mov stc mov pop popa inc add dec aad int3 mov sbb adc or ljmp xchg lock push xchg xor push jno inc push pushf dec scas movsb pop mov lods dec mov enter adc mov cwtl dec pushf paddd iret jge lcall mov jecxz mov orl and test lods popf inc xchg outsb lret arpl xchg hlt stos aas xchg inc outsb jmp dec sarb outsl fbstp clc add (bad) cld xchg vmread push xor or cmp (bad) imul test popa clc add aas sub inc push xor or mov scas pop push imul xor mov repz adc stos xchg mov push cmp roll (bad) out or lcall or mov lds std fsubrs movsl xchg lea loope mov icebp inc pop rcrl pop add mov add dec popa jno ljmp pop lahf fbstp iret sub fcmovnu aas pop (bad) jae push int3 (bad) repz insl cs pop icebp push xlat mov cmc dec ljmp outsb xchg out into ret call dec ja data16 xchg xbegin cmp sub icebp adc sub push cmp (bad) mov shlb inc (bad) dec xchg or cmpsb jl subl inc mov add inc iret sub jo pushf repz and mov ret xchg sub and pop mov add pop and jbe or push ret scas aam insb jne jle out push xor or add mov jae lret stos push fnstcw ss lock inc pop inc cld and fldenv xchg lea mov or jle call jle inc (bad) and fimul push test dec rcrl in int jp test jno fsubl push fisub les pushl cmp imul cwtl pop and inc cmpsl xchg jp xchg ret shlb out (bad) insl popf (bad) adc fidiv xor fdiv cmp inc rorb mov pop adc shl mov xchg adc mov xchg test mov mov sbb and divl mov nop test jns sub xor aas in ja insl int3 pop jne or into hlt test test dec repnz push pop sub jne jp int mov call cs fwait ret xor mov jns jo mov in dec cmp mov sub clc cmp cmc stos pop mov icebp mov jne bound incl push bound xchg pop jo inc xchg lea xor ds enter adcl mov fwait lret add out stos jmp out addr16 nop sbb jb test jno inc rcll scas or dec mov add or mov in andl sub push sub mov add push loopne fs jbe fwait mov and test or das cmp lcall mov cmp adcb jmp mov inc imull cmp fdivr icebp imul (bad) lret fsubrs int3 adc xor aad xchg test cmp pop or cmpsl fs addr16 or orb enter mov mov mov cmp loope (bad) ljmp rclb ss xlat bound xchg pop dec lret xchg mov xor mov in adc and mov mov movsb jbe rdtsc loop aam add test fwait push movsl jge inc in and test mov sahf mov fnstenv popf pop mov cmpsl push adc jbe push in push into fcomi popa in xor jle or jle add in mov adc or ret loopne mov or repz in call sub jnp inc out jo je and fwait inc inc mov (bad) mov lock add mov fmulp (bad) jne sbb out test pop dec (bad) lret dec fnstsw fnop cmpsb jge icebp cmc push fadd out pop repz inc push not adc in inc sub mov scas adc fadds aaa cmp cmp or push dec or cmc pushw xchg and xchg sbb push or les imul call in xor sub mov (bad) inc arpl out inc fdivs push sub add xor add jl out negl fwait sub lahf je in repz fcmovnb lahf xchg xor cmc jge xlat addr16 mov push cli cmp jl mov xchg sub xchg adc add adc (bad) or sti sarl insl lds xorl push add pop pop movsb out sub int add push cmpsl fstl xchg (bad) imull push das jo aam adc mov iret cwtl bnd add push iret or mov (bad) pusha dec inc dec in jae sbb ret or les lock adc mov cmp pop imul movsl int3 push lea in mov (bad) cmc xor push mov cwtl jb inc jge insl mov in cwtl push incl lret sahf jae add push inc cmp (bad) xchg lds xor test xorb cmp mov shl out inc aam inc xchg inc and mov rol lahf push or jnp repz (bad) mov or (bad) lock js call jno dec sub push out in mov push incb lcall sahf clc cmp in sbb adc and push push sub flds xchg and mov out cmp (bad) aas mov xchg dec js,pt pop lret mov scas rorb inc test cmp loop push movb xchg pop cmp push dec fs sub jge inc insb arpl cli pop push xor mov (bad) in fidivl out ret sbb mov push nop jnp add cmp stc dec arpl xchg fldcw dec xor sti push push add popa sub stos jecxz inc lods jg lahf imul dec cmp pop mov jae clc movl lods loopne adc fldt xchg cli and stc xchg mov inc enter inc mov fsubrs push repnz je xor lret xor sarl fwait pop and pop fmull sbb aam push xor fnsetpm(287 pop mov (bad) jbe roll lods jle adc add push mov xor mov and loope lret pushf out sub aad adc or xor iret push insl xor out movsl lcall sarl xchg add in mov negl push imulb push out mov and ficomp int3 and (bad) xlat fucomp pop stos outsl dec mov cmpl adc sbb (bad) repz pop (bad) lcall dec cld call daa and sub lcall push lret (bad) aam mov xchg pushf arpl rcll jle jg inc fisttpll js sub fstpl stos hlt adc inc ljmp dec jl mov cmpsl push jbe mov sbb sbb ret fidiv xchg (bad) xchg std mov mov out loop loopne out mov enter sub mov push loop adc in push cwtl les stos lds sub mov (bad) repz pop mov pop pop lret push in (bad) icebp imul ja cmp mov lahf imul dec ss out adc inc mov rclb pop insb and cmp sub and js es and scas (bad) pop push mov mov pop clc (bad) push stos test pop cld sbb mov mov add cmpsb push imul rcr mov cmpsb push in sbb out in out inc repnz test inc adc push fcomp cmp push sub adc nop out push jle mov fistpl push push pop test or loopw mov lds adc xchg in inc push sbb icebp cli rclb cs insb fbld dec mov mov shll push fistpll clc and rcrl int bound jb rcrb adc sub popf sbb (bad) es pop out jl addr16 xor or push stos or push scas popf inc adc push push int mov dec pop push push popa daa push xchg lds dec mov mov test bound jl push push pop shrb mov push dec add leave loope xor inc imul (bad) fsubl cmpsb lock (bad) iret xchg xor push mov sub cmpsb lods cmp sbb and sbb fldt inc add sahf mov out dec sahf fbld xchg inc pop cld imulb push push fnstcw bound push jmp xchg cmp lret mov loopne das xor sbb jl fwait jp jle xchg cltd inc (bad) xchg lahf hlt push dec lcall adcb add adc push rorl jnp lods fs movsb bound fiadd jl mov cmpsb pop mov fstp scas pop sarb cmp loop sub in push (bad) pop adc adc int aaa ret outsl (bad) sahf xor push fild lods int icebp cmp cwtl inc pusha das fs cmpsl jo iret mov push lea leave cmp fildll fcompl mov sbb mov leave rolb int3 and push pusha or lahf cwtl cmp pop or push cli sub cli xchg jae cmc out das xchg adc test push push push je add outsb dec jo jg mov ret stc sti xchg cmpsl insl dec test pop fisubl cwtl xor sub hlt sahf sbb pop ficom cmpsl jecxz or sbb fisubl and jmp mov inc out outsl mov add mov leave mov jno ja adc and je outsb loope out negb pop push mov push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret (bad) adc mov jns fiaddl and or (bad) (bad) jmp lea jmp fdivrs inc mov fnop jo ficoml push mov lahf dec aas sahf push mov dec lock mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp (bad) mov mov jns fiaddl and or pushf lods lods bound mov and cld in in push popf mov add pop cmp ficompl leave cmp nop scas mov adc inc mov mov jno fisttpll stos loope and xchg test out dec sub mov test ja and sub dec outsl fwait roll sahf div cmp push pusha mov and cs in dec sbb xchg add loopne je cmp push cmp paddsb inc sub dec jns jb adc jg fcompl iret mov ret out add xlat dec pop popa movsb aas es in adc push push in sbb cltd pop (bad) outsl stos imulb jne int pushf nop cmp rorl jmp or jbe loop les cli les dec xchg mov (bad) or push test ret mov fild repnz cmpsb fsub lock js je pop add push aad pop in fisubr mov shlb push xchg dec mov mov in push push pop out fsubrl mov fidivrl (bad) mov or xchg push xchg sti lcall in (bad) (bad) (bad) loopne pop pop sbb inc daa (bad) aad (bad) lahf mov lds sub dec xor or loopne adc add (bad) push sarl cmp fsts imul insl cmp and sub adc sub mov jns cs xor mov mov jmp je sbb hlt sarl outsl lret cmp outsl imul bound and fucomi push sub cmc inc push sub add test or pop fisub jno fdecstp pop sahf pop push jb popa mov add adc pop and pushf mov and repnz push test lock mov out out inc enter add inc sbb mov xchg mov in pop dec inc xor lods clc adc dec mov ds cmp insl pushf mov or dec ror jnp std pop loop stc out arpl cld cmp sbb ja ss adc fisttpl cmp fcomps outsb jl jl rclb and and outsb add inc jbe adc or test and mov es lret loopne mov and in push imul ret setge xor adc dec sub jg sbb xchg pop dec sbb xor mov sbb jo pop inc jns imul cmp xor jecxz and imulb into inc lret sbb aas push scas ficoml inc fdiv mov and xchg dec mov sbb shrl inc sbb jg loope add dec pop xchg mov and aam cld mov push test xlat movsl test jo inc inc xor stos dec mov xor inc xlat mov aas mov lds mov jnp cmp in mov or fldt and ret loop push cmp or adc xchg aas sbb dec (bad) fsubrs hlt popa sbb or mov lret mov or jne push mov mov pop mov rcl sbb lcall xor lea lcall add mov divb dec adcl fadds mov sub (bad) nop mov pushl and and leave dec cmp mov mov mov adc lret xchg lret and jno jecxz jbe add pushf dec and in pop popa int (bad) sub mov lea xlat push mov pop je ret mov addl bswap sbb ljmp mov imul jp xchg mov jg repnz ds cmpsl (bad) xor fidivl pusha xchg push mov (bad) fwait aas mov jns scas xor mov loope cltd push lahf and repnz push movsl or aam (bad) decb dec mov add sub int3 adc fnsave adc jge jb and mov pop xchg aam insl ror pop mulb xchg test fisttp cmpsb pop or inc cmp lods push (bad) fs push or mov test aas sbb insl or mov jmp inc push and rclb xor inc pop sub out es pop jno push mov jmp ret push int3 lret jmp (bad) mov ret mov sbb out lods pop insb jg fsubp enter dec popf xchg dec lret test xor jae cmp (bad) or or sbb or lcall xchg push sbb xchg in (bad) inc int3 xchg mov mov jmp mov add jmp mov add jmp push mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 cmp push and std mov bound pop cmp (bad) rcl fninit fcmovnbe aaa jge cltd into mov push cmp outsl fstpt lock xor sub jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fidivl adc and (bad) inc cmp fcmovne push loopne jle lds stos orb push sub mov mov js mov fisubr mov je jne (bad) jle push sub dec js in jl loopne push sub test jl ja int3 and scas fist lcall ljmp sbb adc hlt jecxz stc loop mov daa push cmp mov dec push das ljmp mov add movsl test xor repz lods mov jecxz (bad) pop xor xor mov push xchg pop call fisttpll divb in pop movsb bound and xchg popf mov cmpsl jns mov nop iret mov jp (bad) loopne cmpsb in popl inc stos pushf and xor mov outsl cmpsl xchg in jmp xor (bad) inc ds loope jns pop fisubr xor aaa loope std mov xchg (bad) rep sbb enter pop inc xchg mov mov and jb (bad) movsl scas stc out aaa sbb fildll xlat add jnp cmpsb mov test hlt add push cmp xchg int cmpsb stc mov push lret xchg xor in add pop adc clc (bad) je rclb or add aad and and push sar cmpsb (bad) push rorl jge mov sti adc xchg popa fdivr sbb mov xor jns sub aam ljmp add (bad) mov xchg movsl in sbb jl mov sbb cmpsb mov out into add mov imul js and loope daa push jg ficompl testl je fbld jo dec xchg test ret xchg and out loopne stos add lds fildll or cld adc bound arpl or jno cltd scas and repnz (bad) clc mov push test movsb es push sub lret lods (bad) push pop ret inc fistpl pop xchg movsb or xchg sbb and cli xor popa popa inc sbb mov iret insl in in xchg xor sbb int jnp into pop loop cmp pop inc in dec dec daa fnsave cld cmp cmp jg sub mov xchg push pop jns insb icebp jnp rclb and jbe lea mov jl lahf jo jne xor mov pop imul jns xchg aam int3 mov addr16 aad mov push hlt pop sub test push sbb lahf inc push pusha sub add xchg mov adc pop mov cltd xchg ss and fbld cmc in pop in pop or mulb cmp xor jecxz xor (bad) pop and adc popa out push inc call jle fistl push push add stc fcoml mov sub xlat test cld mov push test xlat movsl jmp popf xchg repnz sbb mov fbld adc loope and or in int cmp in adc and push in cmpsb les popa data16 loop cli (bad) cmpl int3 (bad) rcr mov jg (bad) pop (bad) loope xor lahf outsb cwtl mov movsl pop cmp xchg push xchg adc add ljmp outsl push mov (bad) mov jmp aad dec lea aam dec out ljmp sbb xchg popf mov mov cmp add aad mov xor in dec jne inc imul dec sub loopne (bad) rclb daa rorb add rcrb aas mov (bad) into aaa push sbb mov fdivl mov add repnz mov mov insb jl jg loop add iret out pop cli push adc mov pop dec mov pop cmp fdivl stos mov in lock cmp lods adc ljmp push sti out dec pop pop loope jle mov mov hlt rclb iret fsubr xchg mov or lret xor push subl or mov push or pop fimul daa inc mov ljmp scas and and (bad) sbb (bad) mov adc dec scas (bad) push mov jecxz push inc addr16 add and lods test lcall fs push ret jne jmp lea loop inc imul jmp dec mov daa daa mov push rol lcall jmp movsl mov ret mov sbb out lods pop insb jg fsubp enter dec lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp fidivrl (bad) jae std mov add jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 fdivrs inc mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 cmp push and bound lea jmp lea jmp lea jmp lea jmp lea jmp fdivrs inc lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 (bad) jae mov jns aam sub icebp or inc aaa gs dec lea add dec cwtl jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fdivrs inc lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp fdivrs inc lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp fdivrs inc negb adc push and lods adc lods mov dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 fdivrs inc negb adc push and lods adc gs dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fidivl adc cmp inc stc adc mov inc cmc lods adc add std dec int3 int3 int3 int3 lea jmp lea jmp (bad) pop cmp leave inc sub icebp or xor mov dec in nop cmp decl fdivr decl fdivr (bad) fdivrs inc mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret fidivrl inc mov icebp (bad) jo cmp push mov lahf dec aas sahf push mov xor loopne call add ret push mov push call add ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 cmp push and std mov bound mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp (bad) fbld mov jns enter icebp or mov lahf mov jmp int3 int3 int3 int3 int3 int3 (bad) cmp enter icebp or cli lods adc cmc test dec int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp fdivrs inc negb adc lock mov jmp int3 int3 int3 push mov push call add ret (bad) das and inc sub mov jge leave pop call movsb std lods adc jno std (bad) fdivrs inc mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp fidivl adc aas add stc adc mov adc inc xchg push mov xor adcl loope ja push push popf xchg imul push jmp cmp mov pushl pusha push push pop push je lcall sub jnp pop xchg mov cltd mov dec sbb push jle mov loopne or jbe mov jmp pop fldl sub cmp ror sbb dec adc out jo push jge aaa adc test pop xchg js out cmp rcrb cli sbb ss sarb sahf loop adcl push push or inc and push daa out sub jbe imul and (bad) insl cmpsl jne subb daa cmpsl push add xchg dec cld inc ljmp add aad jge cld cli cmc scas iret imul mov mov jns pop lret sbb jo xor cmp or out jmp incl clc jo hlt cli mov (bad) lock in push (bad) xchg lods sub pop out movb fidiv cmp dec arpl adc xchg lahf lock lock add int dec fs roll lret faddl cmp or add aad mov and ss notb js jg sarl loopne jnp inc xchg scas and jne cmp dec cmp test sub imul sbb adc pop mov (bad) ss mov mov sub jp cmp xchg xor (bad) and or jnp xorb stos pop cmpsl or cmp dec scas mov or inc (bad) lahf sbb push (bad) mov mov inc mov sti jne inc xchg mov mov cltd repz (bad) aaa push inc lds lcall icebp iret push cltd mov xchg in in loope popf mov jo jo add sahf outsb dec sub out push xor (bad) inc jp (bad) dec adc repnz add test dec push int int out sarb jns (bad) shrl hlt adc test repnz mov or pop pop mov cmp xor mov fidivr dec xor inc negb ret into mov lret ds ret jp test mov sub aas fs xchg xor cli stos repz mov inc ficom loop sub xor mov xchg int3 add pop mov gs sub scas or xor pop pop sbb js xchg cmp inc into jecxz fs dec jecxz int3 jno lea cmp or ja push fcoml xchg sbb jmp (bad) sahf jae add pop dec adc pop loop inc mov lea xchg and inc out jnp pop repnz sbb je and push repz stc or xchg push jmp dec (bad) psllw imul sub and mov lds or cli jns xchg dec lcall xchg jae cmp sub nop inc pop aas mov or sbb jo (bad) jb mov jns (bad) in and inc int cmc push jmp or cmp jg push je (bad) insb xchg pushf inc push gs add cmpsb dec subl sbb and leave dec cmp cmp jmp scas js lcall jb and jno push or mov jle dec and or xchg fidiv cltd inc stos pop sbb xor aas xlat rorl add insl fdivs mov inc sbb push add jae cmp sbb cs fadds mov emms mov fimull mov dec sub pusha mov addr16 push inc cmpsl and fnstenv test jb lea inc pop fldcw icebp xor sbb (bad) or xchg add jo xchg sarb inc pop fstl mov mov jbe jle pop dec and (bad) icebp loope cmp sub mov insb sub into flds (bad) (bad) inc inc mov pushf or popa sti sbb lock ficomp hlt push and cltd push in push insb adc sbb sbb outsb mov adc int je mov mov mov sub mov cmp mov pop ret mov sbb out lods pop insb jg fsubp enter dec popf xchg (bad) stos fs gs dec dec fiaddl cltd add repz xlat ret cltd idivl insl xchg cmpsl notb leave jnp pop pop fsubrs xchg (bad) and or pop addr16 adc lret subb repz pop xor jp xor and lock add pop into sub add stos mov call cmp or das inc loope shrl pop sbb adc xchg add or and fistpll daa xchg and lret dec fadds jmp push outsl sub outsb test mov imul cwtl and cltd es mov cmp mov xor xor adc stos inc sti cmp in ljmp ss mov aaa push popf addr16 push hlt dec push in insl cmp nop daa addl or data16 xor adc cltd fadd mov js fsincos (bad) test call aad in insb insl dec sbb and ljmp xchg push push imul lea sub and xor and jno cmp stos fnstsw adc mov aas pushf outsb pop mov sbb (bad) push movsb sub inc push movsl pop cmp or inc inc fdivr movsb xor test sbb jb mov push pop icebp lds negl and cmpsl lds lcall xor arpl test loop hlt aam or xchg mov xor std dec adc cmpsl dec repz lods pop mov xchg cld xchg cltd sbb jbe aaa lret adc and push jne arpl in das xor or adcl fstps lret dec xor cmp aad mov lcall int3 and movsl inc mov push pop mov lahf lahf lahf mov (bad) repz push cld push mov dec cmp mov out (bad) fnstcw cs les mull rorb mov push push dec divl bswap pop mov push hlt jl pop adc inc xchg cmpsl xchg cmp outsb add jge or out scas mov rcrb data16 jnp adc mov test xor add mov mov scas inc jne add and not sbb mov cmp lcall cmp cmp push mov push das push stc adc push push pop push mov pop mov push inc fwait sti in repnz jp xchg xlat pop in addr16 scas int into push test rorl adc jge cmc in popa mov dec mov push jg js pop xchg pop lea test rcll cmc in ja cwtl inc fwait cwtl es (bad) or test outsb int3 cmp out jae push imul mov xchg mov cmp dec mov jmp (bad) cld inc je stc out mov ds sub mov mov (bad) cli (bad) adc pop sub sti daa xchg pop andl subl out leave adc mov sahf mov fs xor xchg fcomip (bad) mov (bad) stos mov pop (bad) cmp sti pop pushf into lea mov testb dec inc out cmpsl ds xor lock loopne sub sub jbe idivl mov ficom and adc popf rcrb out scas pushl jg stc dec and insb or insb sbb and loopne cmp lret and fsubl sub test outsl cld push pop fsubrs xchg mov jl in mov stc cmp bound mov push int mov add lret (bad) mov sbb (bad) ja sbb fsubrp ljmp and (bad) lods lods ror (bad) mov test ret cmp cmp ja test xchg xchg insl ret cmpsb xchg jecxz rorl imul loope fwait into jl inc rcl mov push imul mov fs int3 test mov and pop (bad) sub adc cmp mov fs hlt repnz sub sub push sub dec cvtps2pd aaa add push jg test in arpl mov pop xlat idiv sub sbb mov ss mull sti mov xchg (bad) lock jge adc lret cmpsb addr16 lods cmp inc sahf inc test mov jne inc imul inc lock js in arpl test pop add xrelease sub jnp jns inc sub adc pop inc jecxz sub jbe sbb sub int dec cld xchg push mov ss or das sbb pop cwtl cmp sbb into cmpb and adc xor xor cld fwait xor inc mov lea or in faddl in jbe popa push add cmc (bad) sub push mov inc pop (bad) xor xor scas jbe stc repz in out lahf hlt iret loope hlt fisubl push rcl enter lods ja xlat inc and cltd les movsl (bad) mov imul push fnstcw cmp mov lock sbb push rorl (bad) sbb sub enter mov mov dec xor and lea sub out fcomps or in outsl jns sahf ljmp clc sub dec inc stc test pop adc pop jnp (bad) sar shrb sbb adc test sbb adc mov mov mov jo cwtl pop fadds sbb dec pop out (bad) (bad) fdiv loop xchg out std push lds les sub lret and shr mov add xchg lcall insl addr16 not jno and roll add xorl or push xor xchg aam outsb ja pop xlat mov mov aam pop loop or jns call pop inc jb dec cmp cmp adc jecxz fnsave sub or or pop or xor inc dec cwtl mov frstor add arpl (bad) xor mov into cmp mov mov sbb lcall mov jmp adc and jge cs cltd push inc push jp jmp in xchg inc rorb cmp loope jno andl ret push inc add push negl xchg cmp jae inc arpl rcrl fidiv or add jmp in fstpl dec rorl aad lods pop add pop fadd je,pt fs fwait xor dec jno cmp popa dec sub imul cmpsb xor outsl lods lahf dec add dec outsb xchg gs cmpsb rorb popf les imul and mov outsl push xchg es push inc cltd cltd mov inc add lret cmp js xor adc outsb nop stos sub or inc add or es pop jge and ds jmp incb loopne (bad) sbb (bad) jge xchg xor mov idivl jmp outsb sbb mov shll dec jns mov or adc arpl push ljmp inc adc pop sahf inc xchg mov xlat pop add cmc adc pushf mov adc lcall cmp ljmp dec pop jp cmpsl js imul add mov add or xorl lret movsb push push or jecxz scas inc lods sarb mov adcl data16 jno notb inc test (bad) sub xor mov jno insb xor nop mov xor insb bound in in stos inc push loop es in pushf adc sbb (bad) lock test mov dec and ficom or jo iret (bad) popf aad rol jecxz aad subb lea xor and cmp ljmp shlb mov push lock mov lds pop scas mov push ret int and xchg xchg cmc sbb sub lret xor xlat sub pop mov (bad) fldenv mov mov or (bad) mov jge add int idivl scas call (bad) or mov (bad) pop or test pop bound sbb mov test mov es mov jnp mov andl jno adc ss jge ret adc push inc test psubb or (bad) and popf mov ljmp jae jnp xor enter xor scas aam fiaddl cwtl rorb arpl mov mov mov jle (bad) mov jge imul in or cmc mov cmpsb ret inc fmuls mov adc pusha aad and fmull ljmp or popf mov cmpsl sub xor mov (bad) stos jge push xor jg in lcall adc int3 jl imul jl mov ja or and inc ret adc cwtl (bad) inc sarb out bound (bad) xchg cmp (bad) insl xor (bad) jmp fdivrl adc mov inc dec dec push sub lret rorb or cs sbb cmp lret adc sbb mov je cmp mov in push aad and call fmuls shrb stos dec mov in movsb gs pop mov (bad) pop and cmpsb (bad) int3 pop jbe lock mov out (bad) push xchg cmp pop cmp push fstl pop and subb xor fcomps or nop pop sub or mov hlt enter mov jge xor add out xor sbb push (bad) xor inc mov push or jns adc sub sbb and pushf test shlb call int js jbe pop cmpsl negl fild pop cmpsb push mov xor outsb xchg (bad) push in pusha leave xor ret lods inc sbb bound push lret loop neg or bound push jg push loopne (bad) push inc jp inc xchg and xchg dec sbb aaa bndstx in test ds sbb icebp sbbb xchg mov ret bound notl push aaa icebp icebp push cwtl pop add call cwtl xchg jl jle jbe lds fwait lret scas xlat nop (bad) repz and test fist lock icebp sub mov test sbb les movsl dec sbb and sbbl push jb in fsubp dec push fmuls daa sbb jns jne into andl cs call cmpsb cmp and andb insl cmc sbbb test test cwtl mov pop loop lcall mov sti test pop popf lock pcmpgtd push mov xchg loopne inc dec (bad) repnz lret outsb outsb jno rcrb cli fist sub gs dec xor and lahf bound fldcw lods mov sub jle or push mov lahf push les in pop test push rcl or (bad) (bad) and cmc inc ss sub xor into push rclb pop aad cmp lret jbe xor inc xchg lea jmp mov lea mov xor call mov jmp fisubl pop aad sub lret jbe insb xor mov stos out insl mov lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss jno test inc aam add cli sbb (bad) repz test and sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss jno test dec cwtl cmpsl add pop push jnp cltd or mov fs add inc mov rcll mov ljmp xchg fdivs jle adc (bad) push ret mov js push push jl sti push test adc mov in jecxz adc pop jl popa add and iret xchg arpl mov jae pop xchg stos mov add sti lret scas mov mov cld pop jns sub or cmp sahf je int cmp sbb lcall dec pop cmpsb std jae push cltd cli cmp (bad) iret xchg jbe dec test jge xor jae push clc leave insb (bad) adc jno hlt das push mov sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 and ss jno test dec cwtl cmpsl add and (bad) rol sbb push sub jbe test shrb sub xchg movsb sarb adcb outsb cmp imul hlt xorb sbb xchg lret add sti (bad) mov xchg out sbb mov movsl (bad) scas dec fwait icebp and popa outsl lret push or jbe xchg jb mov push in pusha adc sbb cs sbb inc test adc jp mov rclb push ds and and pop fbstp jp push lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov xor pop jns es sub or mov mov test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and ss (bad) jb xchg pop pop lods inc jp enter repz mov dec xchg fbld inc sti mov mov and fs mov imul jo aam call imul or sarl lods or inc jne sti sub test cmp inc test dec das jg jecxz cmp fcmovnbe sbb mov out jp cmpsb push inc (bad) cmp dec (bad) or lods adc cmp sar aam mov popf mov (bad) insl mov xor jl fwait stos outsl pop ja fisubrl pushf repz imulb stos test xchg lahf jecxz out xlat dec mov fs and or push rolb sub subl arpl or xchg data16 mov jle mov push into loop and dec loop es mov dec mov fsts cmp push shl adc testb nop nop xor dec push (bad) loope scas and xchg test or push cmp and mov in inc cmpsl inc add cmp ret daa adc jmp call pop dec or imul cli decl xchg push loop inc add pushf ss clc sbb jl icebp roll pop xor add fcoml pop mov add inc out push and mov icebp leave lea mov mov adc add add les sar pop ss int3 dec clc mov cld movsb mov fisttpl arpl pop pop ficompl aaa out sub sub xor sub sahf mov cmp and pop cmp arpl jo scas arpl cli outsb cmpsb mov pop sub add xor sub je adc mov xor loopne iret (bad) leave mov rcll jb daa fadds mov fsubr sbb cmpsb push pminub ret inc outsb push repnz jae aaa jae mov int cltd sub jnp or cld lret lods (bad) push pop or add mov dec in cmc cwtl mov mov imul xlat inc (bad) jmp push out mov xor mov unpcklps pop fidiv adc sbb outsl pop jecxz fsubl jp jp mov das aad xor imul jl mov lds and bound dec xchg push ja loopne jns imul mov rcrb xchg pop fbstp out in xchg out imul jle std pop arpl push push cmp pop sbb dec mov std imul (bad) test mov cmp aaa dec add pushf mov xchg adc sub out inc addr16 mov pop dec (bad) cmovle sub data16 sub mov rcll inc sub lods (bad) arpl jg mov mov aaa push insl loop cmp fld xor jge (bad) (bad) (bad) clc test test sub sub mov js cmp xor jecxz lret sbb pusha sbb and lret les or pop daa sbb push jl sbb xchg adc pushf ret inc cmc in ja add into lret jg nop mov lahf cmpsl into mov fildll pushf nop mov mov mov sub imul mov ret fnstcw mov mov xchg addr16 mov call xchg daa xor push jl imul and adcl je and inc pop dec add test mov and jmp jl je cs jns jo dec and out pop sbb test stos lret hlt jle push and jp sbb inc pop and aam mov mov cmp and push pusha (bad) fsubrs push jge popa imul add sbb xor in sub xchg insb int3 repnz mov cmpsb imul xchg sbb mov pop (bad) pop aad popa (bad) fwait (bad) sbb push jg pop out or fwait lahf movsb mov stc pop add or (bad) pop pop scas and mov cs fs int3 jle jecxz inc lds mov jns mov push (bad) rcrl rorb mov sub stos out stos dec and popf push cs pop lds lea gs mov insl push xchg lds xchg or dec idivl (bad) call iret fildll test and jl (bad) cmp call test sti loop xchg stc jg in outsl jl adc aas outsl mov or lcall adc jp fwait cmp stos lea stos sub ja dec mov pusha jle sbb cmpsl jp mov imul lock xchg pop xor adc xchg insl and pushl or ljmp sahf pop mov out ds in jle ror loop (bad) aaa ja push push xor fsubrl and in pop sbb shrb orl and dec sub mov cmp lret push fwait inc dec call inc test push and xlat dec or orl clc cs enter ret or aad dec shrb in inc dec push jb lcall jbe pop xor mov shll pop jnp and out call cmpsl call push and xchg jmp push in mov ret fisub pop and pop xor inc adc data16 cmc jle xchg sbb mov shrl add jge pop ja jae dec or fistp push jno scas add dec jo and dec sbb sahf inc or outsl push push leave sbb cmpsb mov (bad) pop mov mov sar adc adc in cmp xor xlat push cli (bad) jbe int inc cwtl addb out fisubr mov push mov test out pop in mov addr16 jbe cmp jns outsl dec dec sub stos mov call xor ds dec aad xlat insb dec xor or cmp mov sbb (bad) dec andl xchg or int3 xor nop fisttpll sub mov inc addr16 nop (bad) xchg push mov mov lods inc out aad or lcall jg xor mov push pop mov mov inc cld xchg jl mov daa mov xlat pop fs ret dec mov movsb sarl aad adc sub cmp outsb add jge or sub or adc outsl sbb mul stc mov cli mov ret mov xchg cs (bad) (bad) xor cmp sbb repz xchg out add bound pop sub hlt add pop test pusha les lds stc icebp or inc mov mov mov shrl leave lods fisubrl out fs pop sub insl push fldcw fs dec mov je pop jle adc mov jl dec jne adcl leave inc jle aaa hlt jb pop mov shr sub clc and push sbb pusha out mov imul fcom mull jo pop inc leave jmp push sub (bad) sub inc mov dec dec int xchg jp inc fidivrl bound cmp mov xchg fst mov (bad) fwait and cmp icebp jae sub in mov adc push jg ljmp (bad) and sarl sbb les inc imul rorl xor sbb adc and shlb add xor into xlat add push pop sbb pop pop mov mov jmp mov in sbb ljmp sub je add sub and sbbl lahf orl js jmp mov inc cmp lret nop jecxz pop iret jmp mov and sbb iret push inc mov jecxz dec xlat rorl cs mov and jecxz pop inc xor fst mov mov or pop jg scas mov int3 arpl jne xor fmuls mov or aam imul dec xor addr16 mov cmc cmc adc jle inc and and pusha mov cltd mov jo xchg or cwtl das pop push mov mov repz aaa fwait cmp fscale push mov stc dec mov or add sub xor add test fsubr pop cmp adc inc hlt cmp cli cmovno xor jle jno mov push movsb lret std jo pop push in hlt (bad) notb in in sbb (bad) aaa mov pop dec fwait cltd pushf cmc jmp test arpl int3 or pushf inc and sbbb mov adc icebp fistpll test jl and pop cmpsl scas xchg scas adc repz xchg xlat aad push push add push (bad) cmc dec in or lods rorb dec or (bad) dec call mov jmp xchg mov not ja cmpsb sbb push cld out lods xchg or sbb icebp pop sbb cmp mov (bad) pop xor jl mov dec movsb or inc or fiaddl pusha fisttpl rol mov add jb inc fsubrl cmp push push sub sub dec es cmp leave rdtsc nop dec mov sub movsb aas int std (bad) mov xlat xchg xchg fidivr in xchg outsl stos mov sub mov or lds mov movsl sub scas push and stos test rolb dec mov push pop sahf icebp xor in (bad) dec popa cmp mov mov lock xor inc into sbb jge cs enter enter xchg out cmp push adc out popf adc test imul sarl cli inc js cmp out fsubr jb into adc gs into xorl mov sbb mov push push outsl out into dec jecxz mov push lret xchg popa xchg xor push mov stos dec xchg lcall pop leave add mov mov xchg lock pop pop movsl rolb test mov pop data16 push mov aam mov sbb add scas pop lock sub push imul and (bad) popa and out jae and sbb ljmp in and adc sti mov adc popa lds jge js clc cmp adc imul inc fwait or movsb into push dec and mov or pop and mov sub mov addr16 dec lds imul out lret pop dec mov fldt jmp sbb mov rolb leave movsl pop in popf frstor cs ljmp dec mov push pop imul push sahf in aad rcrb lret push mov add imul xchg cld sysret arpl mov adc mov xchg sub lods mov in cwtl xchg push cmp mov push pop stc ljmp insl (bad) and repz dec loope or push imul movsb push sbb mov lret inc adcl data16 cli or xchg cmpsb cmp add notb inc repnz jbe mov fucomp push push sahf ss pop rorb hlt pop push mov ficoml (bad) ja and fidivr inc sbb and or and xchg cmp adc outsl js dec aam (bad) fnsave lahf dec xchg xchg jb sbb sbb test mov or cs (bad) xor fstpl mov xchg jmp dec jg xor iret sahf pop push push pop sbb fdivl sbb pop sub aas cmpb xor out inc inc xchg iret pop arpl push enter jecxz sub mov jb or push mov mov lods pushl sbb mov inc lods cmp insb mov xor mov iret jnp pop mov popf arpl xlat and frstor out dec (bad) mov push jle push mov imul mov nop cwtl fcoml ret inc subl push cld jnp (bad) fisubl jmp mov mov cwtl daa mov (bad) pop sahf in es adc jecxz int3 pusha outsl mov push scas mov mov or xorl cmpsb jb fisubrl (bad) leave pop xor jle mov jo mov out or rorb add out pop xchg sbb adc lds push xchg scas mov dec test mov pop fidivl mov and int loope stos push push das mov dec scas imul add mov xchg add negb inc es dec fwait push imul dec test xchg mov mov out imul mov iret aad dec fcmovnbe push sub in jg dec pop pop mov imul lcall dec addr16 inc cs pop jb dec lds xchg lret xor fadd sahf mov push call insb rcrb or adc mov push add fisubr or mov cmpsl cmp mov jg lret mov outsb inc jge lret cltd pop sbb mov jmp sbbb push sbb bound aas ljmp fdivl xchg cmp mov (bad) xchg or xor push dec das or fist cmp bound pop mov mov lcall outsl repz dec xchg cmp lock pop outsl adc dec out or push enter dec loope xor adc iret cmp adc sahf sub aam inc jl loop fisttpll mov push jae nop inc cmp sub roll in lcall lds cmpsl cltd jo push out clc mov dec das scas daa and cmp movsl stc pusha lods add jp cmp not dec loope mov lods repz mov mov rcl xor fisttp fisttpl cwtl aam mov arpl cmp xor loope and (bad) gs pop (bad) push or pop bound test or lret xchg xor hlt xchg sbb xor push fbstp add mov push dec in out push aas lods and jbe sbb (bad) pushf mov mov inc cld stos out iret insb mov iret nopl mov jns jnp bnd mov mov sbb cld jmp lret gs std (bad) mov mov cmpsl sbb dec aad add adc cltd test iret lea pop movsl xor stos addr16 inc (bad) scas mov call (bad) cwtl daa gs (bad) ret gs dec stos fisttpl fs xchg out sbbl mov and sahf inc sbbl roll mov int stos push popa inc and ss sti push scas push sbb dec cmpsb sahf cmp arpl and push fs mov into mov jns shl stos (bad) lock fdivr test cmpsb int3 popf (bad) lods add fs sbb mov inc inc cwtl in mov inc fcmovbe cmpsb (bad) imul pop mov cmp sub inc mov std loop nop mov push add lds arpl test lods push lods jb or add xchg pushf iret or push flds and sub stos xor insb out push xchg mov xor outsl call and nop mov mov xor insl stos movsl fildll jns call jb add or adc dec jle adc insb xchg sbb push mov lret mov loopne iret in push push mov or sbb das sbb mov dec add xchg das movsl mov inc push push push add xchg rcll sub or int dec out es iret adcb call mov bound jns call lock mov addl pop incl hlt mov loope call adc adc mov iret cs push jns in push xchg dec into jge scas xor iret int adc les adc cs je loope rcr fistp push fidiv mov push cmp (bad) insb popa push mov add lods push xchg loop mov mov push jbe test fdivs (bad) es lods sub sbb adc pop addr16 push xchg push scas pop outsb mov xchg mov std aas arpl inc iret (bad) cs pop adc pop popa jne xlat (bad) out jns (bad) lea (bad) mov and gs mov mov in jae in adc and cmpsl repnz jne inc clc (bad) ja inc repz push mov and mov iret ljmp out mov ja test xor scas or cs mov fldenv int3 pop popa xchg gs movsb jne mov adc pop out popw and js data16 daa outsl addl adc rcr push mov and cmc aam push xchg clc shll fisttpl jp fimul mov lret jecxz add pop es adc xchg in and jnp dec stos mov adc sub pop pop (bad) (bad) fist lock pop jns clc movb mov mov pop mov mov xor adc lret push outsl xlat inc repz dec push dec cld lret cmc sub jns sarl xchg rcrl sbb (bad) dec sbb jg add mov add cmp sub fidiv rolb sbb stos outsl or pop sub lods mov cld xchg sub cmpsl mov out scas mov sarb pop lcall jne int and mov mov push daa add add mov mov cmpsl call pop push push test ja shr lcall push imul lock test sbb ljmp (bad) repnz addr16 loop test test js jmp xchg lods mov lods fcomp out sti push jae jbe popl mov test xchg movsl js pop mov add dec andb fildl mov mov mov stos xchg jg pop js sbb call push and ja (bad) push loop aam mov lret stc pushf fnstsw sub shrb push cmpsl bound dec xor jecxz subb jle mov insb cmp out cmp pop data16 cmp adc ret add pop repz jecxz fildl insl sbb mov pushf and fisttpl or sbb add jmp lods insl movsl (bad) cs cwtl inc out sbb xor lods sahf (bad) pop lea scas mov fs movb jo and dec add xor adc xchg xchg clc insb icebp and in outsb out cmpsb (bad) pushf int3 aaa sbb inc ret stc push jecxz inc int jg dec xchg out fldenv jmp out faddl pop mov xor mov add pop adc and xchg repnz cwtl int3 add mov xor adc pop jg (bad) dec sub outsl nop push inc inc xchg outsl cmp mov aas ljmp and jbe in js bound push lea add push mov xchg sbb mov loop imul std and jg ja push lret cmc or call fldl2t or fs mov and adc cmp pop nop push mov and inc jge mov out jle imul movsl or push inc push cmpsl cld incb in mov lret mov test in int push lahf in push aad ljmp movb dec dec jbe out mov les bound cmpsb aam stos xchg nop dec inc cmp ret cld mov jns and or xchg dec mov mov fwait insl xchg inc xchg subl push mov mov test stos pusha imul bound fisttp loop lds mov hlt stc and mov push idivl jae and adc sub (bad) stos repz ret out nop (bad) in or mov mov pop jp push push call lock inc sub and fsubl xor mov add adc dec sbb dec pop add adc sbb xlat int3 push mov bound push mov inc sahf mov or fsubp or cmpl push pushf outsl and mov mov sbb loope mov clc mov ds xor mov inc or jae je movsb mov push sub mov ret je imul inc adc xchg bound adc inc add stos fwait adc jp (bad) clc inc sub xor popf mov dec stos push mov jecxz add ds jge clc scas movsb hlt xor (bad) (bad) mov scas push daa fild pop in jno pop push inc jp xchg popa nop lahf sub add xchg pop inc mov mov sub movsl popf fwait es lret add or jmp jo (bad) repnz inc cli (bad) xor incl outsb ret popa stc dec leave cmpsb cwtl inc sbb push xchg xor jp inc inc in lret sub xor ljmp nop sub das pop inc xchg leave pop dec call in jns mov fnstcw (bad) in pop pop dec sub repnz adc aas mov cmp mov cltd arpl out sbb rcl inc inc les pop icebp lods add xor ljmp mov push or dec fs pushf cmpsl adc inc int inc ljmp aaa sbb adc push insl fidivl adc lahf leave push sbb sti gs push and stc mul push js idivb pop pop bound icebp jae pop cmp lods cmc or and pop xchg cmpsl xchg add in dec aas xchg pushl jecxz out lea cmpsl mov loope dec fsubr xchg mov add xchg pop and ds pop jns fdivl leave xorb mov pop in cmp jne push fdivr mov pop sub popa lcall es (bad) gs mov in jae ljmp pushf mov fs sbb push imul push aaa push fstpl dec mul ss mov lea xor pop test xlat stc jg lahf int3 sub cmp inc xor addr16 test inc pushf or outsl or inc inc fistpl stos jo outsb push inc adc mov ds adc (bad) subl fdivrl das mov xchg aas jo les imul adc insl cmp fcmovu jno or xor lret fldcw inc and fsubrl jmp sbb (bad) dec inc jns inc adc lahf lods inc cmp sbb loopne,pn jnp loop sbb icebp mov xchg je data16 or cmp push and sub adc xor icebp (bad) scas or je enter stos pop mov and cltd or lret clc enter adcl push mov mov ret daa mov push mov movsb xchg jecxz and xchg ss xor stos cld cmc dec xor jle sbb mov pop pop pop sbb push jo and fcomps stos lds out pop cs insb jecxz xor cmp sub xor in test sbb cwtl (bad) in push or sbb repnz popa lcall pop mov call jbe push (bad) pop pusha push pusha popa repz inc xchg lahf fstp incb inc jae rcrl nop jb leave fadds pop imul dec xorl push iret pusha adc popa in cltd adc and jmp jmp inc cmp xchg bound cltd data16 hlt stos pop xchg xchg leave test push and pop xor leave mov mov lret lret ds jo and lods frndint pop or nop ljmp add cmp or daa jnp cmp cmp nop dec jecxz (bad) mov inc lcall loope std pop ja movb loopne xor jns sarb sbb dec popf sbb xor xchg push jge mov ss lret daa xlat mov pop jnp xor inc push xchg pop jle sub push sub or push (bad) movsb test out inc mov imul pusha inc or adc dec jecxz jb adc mov adc dec (bad) hlt jle lcall jle pop sbb mov aas test adc add idiv dec addr16 je aas repnz push push adc loopne (bad) sbb inc mov (bad) xor jecxz xchg fcmovne xchg adc inc jnp in leave mov sub iret xor dec cmp add push push mov (bad) jecxz mov dec adc mov xchg sub mov and enter adc dec jae pop test or xor add add lds xchg ffreep and push arpl mov hlt enter mov xchg inc (bad) cli add outsb add lret push hlt cli out cmpsb cmpsb jmp pop ja notb mov aam pop inc cmp (bad) sbb jmp nop loope sbb inc jg hlt dec dec shrl dec ret xor das inc mov pop in sub imul lods arpl out mov scas inc insl mov or test pop not or jbe,pt xchg pop lret sbb (bad) mov jg and jge mov cmpsl push ds mov adc jle fwait cmpsl inc fdivs insl or and cmp and stc dec inc or jbe pusha and xor mov repz and and sbb mov jno jnp mov out xor inc (bad) mov in pop lahf xchg sbb call or pop pop mov gs cltd or or dec pop mov lds inc mov test mov cmp imul xchg pop out xchg adc sbb rcr dec jne push (bad) (bad) gs in push data16 fimul sub sub stc dec loop lahf cmp mov scas in mov inc add and mov mov xchg and or mov stos aad mov push cs pop push std cmp ja fdivrs hlt or cltd push lcall push sbb frstor repz xor add mov xchg xor out fsubr adcl gs and into cmc xchg jg sub mov xchg cs test out enter loope pop adc lock pop aaa mov les or cli lret add pusha test and dec push mov mov stos mov mov jne add (bad) jae loop mov jne,pt iret stc jecxz sbb cmc les outsl ret mov pop jp test pushf cli iret lock dec stc ljmp scas and dec sbb jnp mov jmp stos jge jo cmp stos sbb inc xchg cwtl and lret rol fnclex xchg sub mov cltd xchg cmp push fwait adc les ret sbb cltd dec xchg popa cs pop mov stc leave mov mov mov jmp pop iret shlb call lret fcoms pop xchg cs movsb or xchg xchg sbb pusha or lcall xchg ficoml es jl sub testb lcall dec cltd jno hlt sub sbb cli add xchg js push inc sbb sahf imul mov fs jo mov jl into ja adc lcall or sub push arpl mov mov mov jmp sbb pusha and std mov ret pop mov (bad) mov negl inc inc lock fsts push add out cmp test fcomp and and mov (bad) rcrb xchg or shlb xchg xor mov fs je arpl dec and xor xor pop ret mov test jg mov pop jg mov or xchg ja negl ret jbe sub dec clc fnstenv in shl scas outsb jo sub push and (bad) jge in imul push cltd sub (bad) lahf data16 jb adc movsb add jns das in pop test aam daa mov sbb enter imul js pop push inc cmp (bad) icebp sbb test mov or mov mov mov repz push xchg or adc xlat sub das jo and sbb insb add cmpsb xchg mov fidiv rorb cmpl jnp addr16 nop add lds xchg adc test jno test das or and mov jb lcall fistl push outsb jmp imul test xchg sbb imul xor adc cmp or pop push jnp pop outsl scas movsl push testl lods xchg add clc add xchg ss xor dec jne cmpl (bad) jmp adc aad in jle inc mov xor push mov clc xchg dec cmp arpl in xor in mov pushf imulb js fsubs push das pop call mov add pop mov sbb and add aam sbb jmp lods ja sub mov outsl cmpsl cli adc test inc rolb mov mov aas pushf movsb dec inc and jecxz int3 nop fucom loope int cwtl sub and xchg mov xchg popf scas adc xchg sub and mov jmp mov adc je pop loope add jg xchg mov jae pop jg lcall leave jl mov mov pop add rolb gs das and dec lods pusha popa mov push adc inc pop idivl out ljmp mov mov mov (bad) dec aaa xchg mov dec sbb jle mov leave or js cli sarl jbe pop pop mov insl jp jle cmp lods sbb std xor out test imul mov mov xor or mov lcall outsl scas cltd sbb cwtl out pop pop enter sbb cwtl (bad) lcall push rcrb inc add or jle pop imul ja ret dec in in mov mov mov adcb add insb scas cmp sub lea xchg fisubrl aaa arpl xchg dec mov mov pop lds out mov xchg xlat popf in cmp mov pushf fsubr cmp sbb or out mov clc and xchg adc push dec add aam clc in and pop jl mov inc mov stos xchg xchg sub xor dec stos mov pop xchg popf adc sbb mull rcrb mov jecxz mov inc adc add cmp mov (bad) sbb je sbb inc mov pop add add xor inc mov xchg movsl xor rcrl fwait hlt (bad) pop xlat mov scas mov pop and movsb or adc insb loop cmp add pop and pop scas add lea dec (bad) fcmovne push cmp in and movsb popa xor or ret fistpll hlt lea sbb mov mov fildll sub dec xchg into cld mov adc mov mov out pop mov pop or or (bad) int3 add lods mov or mov pop insb lahf or enter cmpsl mov daa mov movsl mov call insb mov xchg pop sbb shlb fisttp inc mov fcmovu (bad) xchg mov out out jg aam mov xor pop mov xor lret fdivl lea fdivr xchg cmp or jnp xchg push test jne mov (bad) xor outsb sbb ficompl pop and xor sbb mov jmp xchg arpl add lret arpl jne fidivrl mov out sarl push cmpsb pop clc fnclex xchg sbbl jb cmp arpl pop push (bad) arpl aad lret aam xor mov push sub or clc insl xchg inc jg aaa pop fiadd cmp jo xchg xor push das into and lcall xchg xor mov enter mov rcll out add inc pop shrl mov mov or addl pop cli pop fidivl pop or xchg mov push or adc sarl lahf out bound xchg cmpsl adc xor scas imul ficompl adc movsl cmpsl mov test and dec (bad) mov je jne,pn ret ss scas xchg cmpsb popa mov negb mov cmpsb sbb bound lret push clc iret or and lods fcom and into dec pop aaa dec xor jnp leave pusha hlt mov or pop lods clc aas sti sbb aad ficoml jae mov fnstsw adc rol push (bad) loopne pop addr16 movsb neg add out cmc inc push adc mov sbbl add xor lock fisttp adc movsb push mov js insb cld lods lods jne mov inc loopne inc (bad) or loop jb pop je add data16 ja aam push mov sbb cwtl sub xor mov mov jns arpl xchg mov push out pop pop das push pop ret iret pop or push repnz es jg sub (bad) inc adc inc movsl out int3 (bad) push iret mov and out cmp lret jne rcll push mov (bad) and fs mov scas cld and mov test or cmp cmp outsl and or dec mov dec ret arpl shrl imul pop mov mov xor jbe sub fs loopne mov push nop divb sbb dec std sahf jb mov (bad) fadds xchg es pop in mov mov xchg lods mov je lods and inc mov (bad) cmp (bad) and jmp inc (bad) loope (bad) sbb cmpsb mov cmpb aad xor (bad) xor js std pop push xorl sahf lods fsubl cld iret sub dec scas js sub mov dec sbb cmp push mov scas cs mov cmp mov pop push and (bad) (bad) gs je scas loop xor cli fwait bound orb cmp lcall jns xchg cs xchg fldl loop cmpsb fwait clc cmp lods adc mov test jl test push inc out frstor fistpl lods jne jo out jle lret hlt mov dec jns inc enter xchg add push add cmp aad mov xchg jns sub and mov (bad) pop xchg xchg sbb push out add repnz sti jecxz and (bad) ret mov arpl cmp adc insl sbb stc out adc enter jno mov imul lods fnop mov lret shr sub dec mov int mov sbb xchg fsts sti in sub mov movsl enter lock stc pop mov mov outsb pop das fcompl lods or jp xchg lds push movsb fsub jl xor xor fs push cs xchg shrb add leave add loope pushf addr16 sub dec das lods clc sahf outsl cmp in cmp adc js stc mov mov lret repz inc and testb in pushf jmp jge mov outsb imul orl add inc mov mov adc fsubl and jmp pop sbb lods ficompl sub (bad) or ja jnp fsubl je adc mov pop outsb and rsm sub add cmp sub dec sbb out sbb mov add inc fdivr push adcb inc pop mov in mov xor mov pop add (bad) add in aam les sub push mov in aam push sbb ret jecxz cmp dec jo leave xchg dec jle in sbb imul ret xor lret (bad) xchg dec lds leave inc jno mov and dec xor jp fstps push imul push dec in xor mov xor pop inc inc dec outsl xbegin es aad mov mov inc mov add dec gs xchg mov sbb inc out add mov int3 sbb push lds test das (bad) ja ss push mov push insl int3 mov cs push mov and cld icebp (bad) lcall arpl mov fbstp das xor xchg (bad) cld push mov cmpsb fsubl jecxz lret stos push lds and js (bad) or imul arpl jno loopne lods sub insl inc arpl ljmp inc ret and in xor jl or ret hlt cmp xor xchg pop and lods rorb mov mov int fcoml lret xor aad nop popa lds mov sub (bad) pop fstps mov in hlt lahf mov in les not pop jp add loope sub cmp shr in sub push jo lock or inc push xchg pushl pop xchg outsl imul push xchg jnp leave in inc nop ja mov jnp cmp mov lret mov lcall iret stos cmpsb fwait and test in cltd push xor jnp arpl stc dec ret testl jecxz ljmp mov repnz xor adc in push add gs jg sub adc (bad) cli jp inc push jns ds roll lock test mov or add pop mov dec add mov add lret fiaddl jb inc jmp scas adc cld adc sub and (bad) pop jmp test mov rcr int3 jmp lods test dec cmc in or xlat cmp loopne sbb lahf insb out call mov stos adc adc dec mov cld stos shufps dec mov mov cltd out nop or ja sbb fucomp add lods ljmp aas sub popf (bad) cmc xlat cmp lret cwtl ret arpl dec ja or cli xchg push into push popf and orb inc and aas cltd mov cmp outsl out mov mov imul sbb icebp mov and ret sub fistpll push lret add sahf loopne inc cmp adc mov sar adc mov mov jl addr16 mov jmp divb movsl cvttps2pi sub jmp dec inc cmpsl hlt xor xchg sbb clc or int mov mov iret stos pop xor movsb sahf and inc push lcall sub or push mov jle in ret iret add fwait stos mov mov jp xlat adc mov add stc dec sub adc push (bad) adc out add cmp cmp jbe jo iret push idivb push loopne cs inc cs nop cmp stc (bad) cmc sahf inc in mov sub mov imul and outsb rcll loop jmp out lock mov push push adc ret nop dec mov nop lea loopne aaa and out fistp mov inc es cmp (bad) out test mov mov fwait lret push nop add mov xor sti mov jecxz mov lret rorb fpatan mov mov push jl cmc fwait xchg js fwait jmp cs dec and jmp xchg mov add jnp lods inc jecxz rcrl movsb adc pop jns push add daa jg and sub push sub add sbb push adc push and cmp adc insl and adc jb or push and mov xchg push xchg daa sbb test xchg ret cmp (bad) sbb test cmpsl mov cmc sbb sbb test jg ja lds lock add stc fs bnd ficom add mov add nop add and aas jo xorl cmp pop sub repnz jne pop xchg decl cmpsb dec rol dec aas (bad) je (bad) loopew sbb insl pop sahf js jae pushf (bad) std std popf or enter xor sbb mov aad out push inc jbe cld outsl jo push aaa imul adc sub dec (bad) jo (bad) mov add xchg movsb sahf sahf jb dec push loope aam test imul gs xor push test xchg enter sti mov xchg loop sahf jns dec sbb mov jecxz mov insb (bad) inc icebp jno add dec popa fsubp arpl popf cs shlb mov pop iret inc xor sbbl mov dec outsb (bad) (bad) test std jmp outsb mov ja ret imul mov cmp inc mov into push seta sub xchg gs call icebp inc sbb push rolb fistpll or js jb mov fstp leave pop xor xlat push mov adc jle out stos xor pusha test cmpsb sub ret xor into in sbb out jp mov mov pop int3 leave pushf das xchg push or andl adc cmp push mov adc flds mov mov mov aam adc cwtl (bad) push sub xchg inc cmp out arpl out mov push push ss out out fsubs jmp push jmp add pop mov ret or sub fnstcw or cmp cmp xor mov loopne call pop movsb ret lret faddl scas push sar (bad) sub xchg xchg xlat in lcall adc mov pop mov dec dec pop in lds loop mov sub lahf in daa out das fnstcw or jb mov outsl lret adc pop pop stos sub insl popa (bad) das and roll push and loopne pop pop movsl lea sbb (bad) leave out in ret movsb xchg cmp ljmp (bad) jg and push sbb pop cmp pop jecxz,pt insl iret int3 gs xchg push andl cld jae in mov push cltd cs dec cmp cmp adc mov ss fadd and xor or xchg test sbb fwait pop into jae mov mov out popa jp or fndisi(8087 sub adc dec jmp xor jp mov jmp shl sbb loop arpl imul out push mov mov xchg enter inc lahf jno mov or cs std dec jb ret xchg sub cmpsl mov icebp loop fstpt push sarl inc arpl in sbb mov add cmp add jge pushf push mov bound fildll sub repnz adc cmpl and adc sub mov push fcmovne cmp ret (bad) out jno mov sub movsb inc xlat dec lock xchg dec orl mov add pop test dec scas mov pop in insl inc enter inc roll mov movsb mov cmp in loopne push jo repnz mov (bad) mov das sbb mov mov stos dec push add ret scas lods mov sub adc (bad) loope adc mov xor aam pushf movsl xbegin cmpsl nop sbb adcl or mov and jge push cld imul jle sbb in lods rclb scas cwtl shll or inc popl xorl dec jo,pn and nop or cwtl cltd pushf xlat aaa arpl mov jns orb mov lret inc lret mov std out aad gs imul xor cmp popf adc dec lret sbb ret add jbe jno inc xor cmc or cmp mov ficompl cld mov push cmpsb add pop mov xor pop test jo adc mov repz into test xor mov mov pop hlt xchg ds add fcos lret adc cs bnd lods out jo test cwtl push inc fcoml cltd pop mov loope insl lods fs pop mov aad lods jae gs xlat xchg daa pop inc or mov adc enter inc ret inc sti mov mov ds popf xor rcrl nop fsubs cmpsb xchg push jecxz fstps lahf push fnstcw mov aam movsl and push sahf inc mov mov cmp addr16 jae ss fcomp dec cmpsl lea and int and push mov (bad) dec push dec cmp jp inc adc int3 jecxz enter enter lret cmp push sbb mov jb jns jnp out sub mov inc gs sbb rcll nop leave add mov add adc sub fwait pop sbb rol int into cmp xchg xlat insb push repz sub popa in and popa pop jle mov mov mov mov jp adc out fcomi sub push jge add sbb inc pop and add ljmp mov adc push dec sbb popa out jmp jmp ja (bad) stos push xor sub loop inc push mov js push fildll add imul lcall mov push test (bad) cmp and dec mulb xor adc cmp jnp sub jmp add int cmp or xchg jge adc push int3 push add outsb jae loope dec loopne pop (bad) adc mov xchg adc cld imul xchg test test mov fstps mov add sub lds lret or es frstor sub xlat xlat lods sbb ds outsl mov imul test out stos dec sbb push ret aas xchg adc out jge xchg subl xlat test (bad) iret subl pop inc xor outsl cmpsb jo sbb movsl stos sub rcrb or xor cmpl mov stos jg jg sar int3 scas sbb pop fwait xchg cmpsb and pop int daa mov cmp or (bad) mov jp outsb inc movsb rcrb or xchg mov jle rclb xchg aas mov push ljmp cli cmp mov test sub rorb xor xchg cs jbe or sbbl push ss mov push call xor testl cmp add mov jbe aad arpl (bad) lahf (bad) and mov pop pop xor clc pop call arpl xchg jl jbe or dec outsl add mov xchg addr16 cmp aaa repz jne or in cmp je pop jmp pop pop sub enter and movsl push clc stos bound scas scas rcr or andl out push test push fistp jno xchg out inc lods xor scas mov stc inc cmpsb or je cmp pop lret aad cld mov out sub aas push pusha in or pop fiadd jno or insl and les pop loope push addr16 imul mov int3 mov in divb xor xlat fldt mov mov jb and push (bad) mov sbb mov push xchg (bad) sti lahf sti or mov je add cs mov mov imul cmp faddl dec xchg sbb push cmp fstpl and push add roll sbb iret mov into insb lods rclb mov mov data16 sub lock mov das movsl cld or mov loope test mov xchg (bad) mov cmp jns popf cmc lods dec and aam cmp cs pop inc test and push pop mov cmpsl sub or in pushw mov (bad) and mov xor stos pop mov add sbb pop cld pusha fistl pop shll out daa mov inc mov xchg lods fdivrl mov cmp gs lahf out mov inc aas addr16 repnz iret out mov sbb inc add stos adc jns fs lcall jbe cmp inc dec cmp sbbb dec jmp xor or xchg test fbld sbb and xor xchg push xchg push mov xor int stos pop test (bad) push push xchg mov jnp enter lods cmpb es dec lcall int3 jo push arpl cmp nop (bad) dec out mov dec push imul call xchg cwtl pop mov loope test fdivrl xor ds fwait daa andb js xor xor imul rorb dec stc push and les lcall and out sub mov dec jbe add lret adc nop pop test (bad) mov sbb clc pop push hlt addr16 scas int3 idivb lcall pop cld loope cwtl sub (bad) test sub mov sbb enter mov cs leave mov in ja and fistp enter in sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 and outsl aam aaa aad aam or enter test adc insl add cmpl test imul clc mov cmp mov adc (bad) jo ret push ljmp jo mov call lods sub loop in stc and jg mov (bad) pop add mov push inc das mov popa lock (bad) sub push xor enter jns sbb iret std pop cmp jg and imul pop add mov (bad) cmp rcrl mov dec sbb dec add mov call arpl je fldl and into lcall imul out mov ss cli popa pushf xchg inc mov jae iret xchg ja ret loopne add hlt insb cmpsb add test fmul nop or cwtl and xchg mov hlt jge or ret mov xor add push sbb add scas bound and sahf push lods sbb enter stos insl mov push fs lods mov dec sahf (bad) inc mov popa push (bad) or xchg jne jb rolb xlat fstp dec add rcrb loope jge ljmp adc insl test (bad) in and hlt shr inc in daa lods inc mov lret aaa mov pop pushf mov add pop test and push lcall cmc pusha mov xor adc int flds ret mov adc pushf fnstenv scas (bad) sub jns call lods mulb test stc push rorl xlat (bad) mov pop cld sbb mov (bad) lock sti pushf lock subl sbb mov vsubsd xchg inc mov cltd icebp mov stos and (bad) sbb and sub movsl add add mov dec jae xchg lcall pop pop outsl scas push in add lahf cmp dec lret repnz dec fisttpl xor fwait sub jge sarb (bad) scas mov push fiaddl mov data16 les out loop cltd mull aad add out mov sub jp fistl mov aaa in pop pop mov dec mov cwtl and lcall mov adc pop cwtl hlt ret int3 mov das outsl and fildl (bad) mov jbe aaa push sbb pop pop arpl sbb insb dec mov and dec sti mov jo mov or roll nop iret mov jg and dec pop aaa (bad) ljmp fild xchg mov out mov and cwtl lret pop and jg mov aas addr16 adc xchg test aad cmpl add in mov popf into outsb inc pop fmulp (bad) lea lret jge cltd xchg popa pushf je xchg je xor add int mov data16 test mov outsb or scas and mov and cmc ret mov andb iret push (bad) loopne mov lret pop lahf lds pop imul dec mov adc mov mov clc inc in jno into and pop mov fsubrl aaa stc sub popf ss add (bad) cmc add outsb es jl pop into ja sahf xchg dec scas xchg pop dec mov add push rorb das ficompl (bad) repz (bad) mov std jl lret adc pop xchg aas cltd cwtl sbb sbb jns aad jbe sbb inc addr16 int dec sub sub xor stos jmp insl mov (bad) sbb push insl insb test xchg ret lock fisubrl outsl push imul out push dec mov pop jbe popa jl hlt outsl ret pop adc mov sarb loope jecxz jl (bad) cld outsb mov push sahf call inc fcmovne sub in sbb add push gs cmp jne sbb into and enter mov popf dec jnp jno cs shr add sub adc cmpsl cmp fnstsw stc outsb push mov dec out sub xor xchg jbe mov in mov movsb lods push cmp mov push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 