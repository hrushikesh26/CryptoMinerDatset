push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor stos lods fisttpl in (bad) icebp mov mov or mov popa aas mov xchg mov mov (bad) pop cli shr mov jp mov dec mov mov iret adc xor loope jnp push pop jecxz jp inc gs ljmp inc mov aad push xor dec fsubrl movsl insl ss and push or sub mov call imul (bad) jae xchg iret or in ds mov repnz xor sub mov fdivrs std push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor and ja push paddw push cmp (bad) (bad) pop add and pop sbb cmp jbe add inc lret gs add jnp jno or loope arpl jbe xchg or dec scas add mov mov mov push mov sbb push pusha jp dec jb faddl mov cli les shll mov cmp sub out shlb and cmpsl jbe jo (bad) cmc pushw add loopne sbb jmp mov std mov int3 stc std mov rorl and mov adc test xchg js inc int dec outsl sub or push mov sub inc or inc mov mov out ljmp cmpsl push lock fwait mov jle dec mov lea stc mov xor mov mov popf scas test in push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 sbb xor aaa jg ja push paddw push cmp (bad) (bad) pop add and pop sbb sahf fnsave sbb push mov cmpsl icebp mov inc clc (bad) in rorl imul mov int pushw (bad) push push cmp mov adc push and xchg fisttp push fdivp fnstcw fwait push fcomi mov and pop mov jmp in push movsl dec push xchg repnz jg push jecxz cli sub lahf inc add lds (bad) out cmp pop or xchg (bad) in xchg ret (bad) shrl inc mov ret scas inc mov cmp inc es lcall lahf dec cmp cmp mov jle push xor or dec push fdivl cwtl lret push outsb or inc sbbl mov lret xor jo adc jmp sbb pop popa cmp dec pop mov insb iret xchg mov gs sahf daa movsl sbb pop jle jnp in fcmovnu loopne sbb insb rcrb jge jae sarb cmp fidiv cmp cltd pop push sti pop push (bad) dec loope,pn cmp push mov jge mov mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor xchg outsl inc jmp dec or mov inc adc jge aaa shrl inc push mov movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl enter ja jno aas dec sub cmc and out adc mov fistpll ret pop outsb pop (bad) sub and popf fldl mov repz sbb daa aaa inc mov push sbb mov sbb cmc es (bad) mov mov mov mov stos test jnp or push cmc test test push mov mov nop aaa mov pop xor out cmc xor and sub popf xor lock nop daa fbld rclb enter mov je fnstsw sbb push sub push sub int dec lahf xor imul or jae mov push fildl stc sub add popa push aam test test dec lods or mov jecxz sbb popf int3 aad ljmp int3 sbb les sbb sbb ljmp (bad) dec and stos mov xor xor dec fsubr pop mov xchg sti jb mov cmpsl mov push jne cmp fidivr mov ljmp push jo mov gs or in stc mov inc call sub push cli ret dec push popa sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor stos mov push test jmp adc ret push into mov mov push inc pushf cmp arpl pop scas roll xchg mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sbb xor push mov icebp mov jge sbb popa or int nop mov jle inc mov movsb mov test mov push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor stos mov push test jmp dec clc lock mov xchg push and das mov xlat (bad) mov icebp stc adc loop add ret ds aad push js sub popa jbe hlt int in sbb adc adc push rolb in and stos push ds xor in hlt pop mov test loopne jge cmpsl inc lret in cmp add loopne int3 xor mov adc inc mov xchg mov jo jl mov clc fidivr push cltd popf loop pusha jecxz push incl or (bad) hlt ja jae pusha mov outsb das xor sbb or cmpl sbb out lret mov cmp addr16 lea cmpsb scas lret xor jo mov dec adc pop int push adc dec cwtl pusha lret test mov xchg adc (bad) movsb je stc cld xor shr fcmove and mov adc cmc cmp ds fistl jo cld mov notb cltd push mov dec xchg movsl xor es iret pop xor test outsl sub data16 dec xchg mov movsb xchg push push sbb jge mov jae jns push jbe loope adc (bad) shrl out xorl jg mov fiaddl inc jo lock inc lahf (bad) xor rcll lret test pop pusha idiv sti xchg jno sub sti or push cmp mov aam insl sub push cld lret mov (bad) mov jbe (bad) sbb pushf jmp bound je sbb push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor jecxz xchg push mov push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret sbb xor negl subl jle sbb ret sub mov push jmp add push popf cmp cs shrl sub (bad) jl mov push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret sbb xor notl leave inc imul dec out (bad) imul add xor push lock mov cmp push mov mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc (bad) fidivrl ja push paddw push cmp (bad) (bad) pop add and (bad) xchg sti jge mov (bad) push sbb aad in push cmp movsl sarl fcompl aad push js xor (bad) test test (bad) sarb push hlt xor lret stos int3 in inc mov pop ja push imul push scas sti out in sub sub in push hlt inc xlat sbb daa les fdivs sub mov lods xchg imul inc xchg pusha sbb adc and dec es int daa out movsl ljmp stos rorl or jle das xor lcall sbb fidivrl xchg or in cmp mov cmp movsb loopne pop cmp push xchg cmpsb daa scas or loop int dec add push pusha xor jo sti aaa cmp out outsb sbb adc sbbl arpl in mov popf daa sbb pop dec cmp loop shrl (bad) (bad) xor mov dec test nop pop inc call inc push aam mul test pop dec or std xchg and push test call rcr test int3 loop testb pop or pop loope sbb dec pop aam push pop jmp xchg add icebp inc dec mov xchg mov pop dec and clc push cmpsb cmc iret pop mov or fdivs jg and mov repnz jbe insb fwait jp pop mov aas icebp adc xchg or jge mov pop jp imul sub adc xchg xchg nop mov icebp push and imul cmp leave aaa mov sarl dec pop and dec cmpsb scas adc add add arpl mov (bad) fiadd sbb stc pop (bad) cmp loop loopne ret rcr movsl sbb or adc lods mov imul data16 sti adc jp mov lods punpcklwd add insb xchg cmp jbe cmp fwait cmp jl cmp aaa mov mov dec (bad) mov sbb push mov or lahf dec inc ss (bad) loope xchg lcall lods rcrl insb shll adc clc pop cltd enter inc mov std cmp lret (bad) mov jmp adc cmp rcll cmc adc jge jno sub clc sub add push outsl (bad) or ja divl lock enter gs add sarb or mov imul xchg adc pusha test fsubl xlat loopne xchg pop sub add jecxz ds jns orl mov jmp icebp mov mov mov mov mov inc sbb int or push xchg and adc aaa mov push icebp out push jle xchg pop push fidivrl scas and loop xchg in scas dec adc loop push ret xor add nop je or arpl inc addl jl pop xchg aas movb decb sti out pop insb pop mov addr16 mov jg or adc push ret xchg or test or (bad) xchg pop inc jmp scas testw fwait repz lcall fidivrl lock jne and jb aas jg cs int3 pop add jb (bad) mov clc dec cmpsl sub sbb sbb add lods or insb roll xchg iret hlt loop popa cwtl repz (bad) push dec mov add sub (bad) jae xor ja ljmp jmp addb hlt fisttp leave clc pusha adc icebp mov lods lock dec shlb shl cmp sysexit sub cmpsb aam sub mov dec movnti dec js sbb test leave es cltd mov lds pusha mov inc push mov out add outsb or mov out cmp dec dec rclb jb into das movsb cld push dec mov ss pusha (bad) mov jg pop stos and cmpsl inc aaa sub adc mov pop xlat fwait sub sub les jo fsubl dec adc (bad) repnz int3 in inc push popa cmp push leave pop out sbb (bad) mov popf stc dec aad sbb sub lcall jp jns loopne or pusha mov inc mov push fcmovnbe mov push fmul and sbb xor and cmovp mov cli or xchg negl scas ret es inc add and repz int3 out inc mov mov mov xlat lret rolb fisttpll pop lock xchg rolb leave pusha ja lahf cmp fisttpl scas ret or ror sub (bad) xchg rcrl ss shrb int jnp push stc xor mov mov xor adc xchg inc out jbe or jae or push push in aam jnp into bound mov mov pop mov jns mov out out stos jp fistpl cmp sbb arpl mov xor in dec cmpsb in lret pop inc mov cmc mov mov xchg push jg mov or cmp add dec mov or xchg push out mov push loop jmp mov fsts push and xor lea insl push repz mov push sub insl push nop inc jg fbstp shr mov je mov insl aaa cmp mov mov xchg pushf inc fidivr cmpsl xor std mov (bad) in cli ds (bad) jge add icebp scas outsl outsl cmp aas scas push add rcrl adc iret orb daa xor push enter scas fs sbb jge pop fidivrl cwtl inc mov scas lods cld data16 repnz push into inc cmp add sbb test das add jle imul push sub enter lret pop fiaddl sub das jbe (bad) stos mov adc pop rcl and and shrl mov hlt jno cmc xor mov mov jo mov adc in mov push pop mov mov data16 cltd fiaddl push sbbb pop dec dec dec jge and lods (bad) pop cmp leave mov fstpt scas and mov xchg cmp sbb pop mov add idiv cwtl enter sub dec pop fdivrs (bad) cs imul lret sbb mov in pushf xchg add xchg inc sub adc pushl mov mov xor jns mov push ljmp cld cld sub or jge jge into dec ss clc sub pop mov stos aam sbb pop cmp les or repz inc jnp xor sahf jo push arpl or and pushf cld rcrb cmp push lds faddl loop push jnp popf add lcall mov push pop dec repnz and ror movb out cmp mov pop aas adc stos inc sbb frstor lock cli push pop into lcall adc cld bound test (bad) int mov fildll mov push pop ds neg popa or stc insb pusha aas xchg xor xchg jo xor xchg aam dec in mov sub jb or aad push and test int3 xchg (bad) jge cwtl jne fstpl (bad) inc push cli xor in push xchg mov jl test jae out lcall movsl add out mov adc add stc in stos negb push andl andl loopne xlat mov pop aaa inc inc add jl mov xor mov movsb (bad) idivb outsb sub cmp mov inc and adcl imul or lahf das adc jo paddusb inc mov je dec in dec ljmp mov hlt (bad) in stos mov mov pop add fdivr push jae xchg out stos div add addl jbe adc dec nop call add js mov and repz aaa gs push std jmp cltd notl mov insb bswap adc xchg or mov mov outsb jno pop stos adc bound pop lea sub ficoml stos and test dec adc stc fdiv repz or aaa into mov notl pop mov jge aas pop imul movsb fidiv (bad) out in sbb paddusw rolb call (bad) div ret pop test fnsave jae orl xor xor jae cmp inc push cs pop inc jns imul rcll xchg (bad) fnstsw dec push fwait xor insl cmp jnp pop sbb shrb (bad) xor cmp mov xor stos sub pop hlt (bad) mov push mov fsubs push loope cmpsb and aaa inc lods adc int3 mov sbb outsl test fildl mov dec inc push test (bad) in dec add lret push sub movsb push mov ret cltd sahf fistl insl nop (bad) test mov out je mov je dec mov sbb mov inc insb jbe divl sbb mov arpl lds xlat fwait adc sbb mov cwtl jo enter push (bad) mov pop mov mov lods popf mov jae add push loopne cwtl mov hlt mov shrb cmp es pop push in dec push inc and fwait mov xchg fbstp fstpt xchg das cmp cmp xchg out pop lahf incb fisttpll (bad) (bad) mov stc ljmp stc inc xor push mov jp xchg pop iret rorl dec mov pop or aam push jg out jbe aam insl idivl sub xor jl mov cmp dec les call cmp ret sub clc add fst push daa mov sti sbb aaa adc push pop divl mov ficom fidiv inc mov mov inc sahf pop jno test xchg push fnstenv xor mov arpl xor lock fcmovnbe pushf mov es aas mov jb or pusha or popa je mov and (bad) mov or jae sbbb (bad) dec stos jg pushf or and xchg pop mov dec bound fs mov mov mov mov xor mov popf addr16 or pop fs pop imull sbb sub or inc (bad) arpl ss pop rcrb dec test movsl and mov aad push test hlt xor mov inc test xchg adc int3 ja push adc cmp inc (bad) sbb stos cmc pop xchg loop mov (bad) js pusha addr16 addr16 lods das adc add gs mov inc mov insb mov xchg xchg pop (bad) sahf popa add test cltd pushf mov jg (bad) mov pusha push pop (bad) xchg pop jp push jns mov lds dec outsb movsb sbb pop xchg sbb sbb jnp sbb (bad) fdivs inc mov dec lods icebp push cmpsl push sarb xchg arpl push hlt (bad) or push jbe subb cmp mull push std xor bound lods int3 outsb ret xchg addl xor lret lahf xchg pusha mov xchg hlt sbbl pop enter (bad) cld sub subb decb aad sub sub sub test pop push pop inc cltd xchg sar subl jp arpl inc int3 cmpsb cwtl lock das jmp jle sub pushf and xchg lret lea (bad) pop mov aaa push or in popf (bad) pop dec push inc mov sbb insl sbb sbb push test dec mov mov or (bad) xchg loope loop (bad) lahf adc pop in aad adc xlat xor inc inc das sub add pop pusha push sbb xchg arpl das (bad) or scas inc fisttpll add imul lcall push inc dec and bound rcrl add stos (bad) (bad) pop clc inc xchg jnp dec mov stc mov mov sbb xor sbb lret cli mov pop lahf or xchg xchg dec or lahf mov hlt jecxz xor cmp int jae popf loop ds cli rorb inc mov stc out stos cmp std out mov int3 call xlat icebp cmpsl cmp stc lea sbb xor mov sbb add (bad) fistpll push lds push dec mov enter pop shll cltd fidivr jg out sti sti push mov scas ret and test xchg inc pushf test in ficomp int addl pop xchg loop test push xchg (bad) ja pop aad add (bad) mov fcmovnbe dec pop mov lock (bad) mov push or loope out fstps xlat repz lahf add scas pop adc aaa add sbb jnp cmp inc and das fmull inc push out out into or repz out rol (bad) cwtl cmp pusha sbb hlt fildll fldenv int sahf mov mov sub testl stc push js mov and lods lea push (bad) call jnp subb insb cmp or xchg jp enter xchg mov fidivr and mov jnp push imull push xor arpl mov and aas jge mov imul inc inc push pop popf sahf aaa or pop arpl jle shlb and pop and pushf out xor out pop adc loope ret pop push or lods into xor lcall rcrl jecxz and out loope jbe mov push loope call adc cmp dec mov adc dec std xor (bad) addr16 and xchg subb xchg and roll jno adc jecxz pop jo mov nop xchg in inc addl subl pushf dec lds es les ror out aad lea stos (bad) fstl shr mov add pushf mov jle pop xor mov push inc mov mov xchg xlat das imul jae jb popa jmp js in rcll xor fs pushf aaa adc inc push add (bad) and inc mov (bad) sahf pop or scas lret add adc sbb outsb xchg adc add cwtl mov jp sahf lock divb push push inc sbb pop aaa lret jne xor ds push xor sub cmp cli add pusha loopne out pushaw cmp jmp negl in popfw inc scas loop and push sbb adc adc int mov mov imul ret (bad) jno cmp push negb pop hlt push imul xor js cs insl adc mov in xchg inc xchg (bad) stos pop dec jne ds adc pop scas stos pop inc add popf or pop into mov pushf mov and out (bad) outsl imul pusha lret mov (bad) rorb icebp loop lea gs push xlat movsl xor outsl mov cli test jmp xor cli lds les or xlat out rorl xor test pop aas ret mov push fist add xor out jmp jge (bad) ficom int jecxz cli mov xchg and xor cmp inc add lret je xlat aad sti jnp addl jecxz or in mov (bad) dec int3 pop xchg shr sub xor iret fisub test les dec int cmpb int3 popa (bad) or daa loop in insl mov outsb inc aad in mov loop xchg lret mov popf cmp (bad) pushf push adc aaa pop icebp cmc pop push mov dec imul mov sub lahf jg rorl add (bad) mov sbb movsb jbe in int3 sbb js shrb ljmpw (bad) xor mov mov insl and pop sbb xor jmp gs pop adc stc or stos aas inc pusha fisttpl cmp test add jbe iret xchg stos sub inc jmp cmp ret je pop pop push jge out aas jp mov enter mov pop fs shll repnz jmp repz cmp fpatan jnp mov outsb add addl out add push repnz lret mov mov mov into xor add mov movsb (bad) jno pop lea dec push sti add xor in lret popf fbstp mov lea mov xor adcl mov inc in imul into add nop inc scas sbb xor dec mov gs repnz pop gs inc rcrl insl xchg and inc lahf mov inc jne xchg and jno jl (bad) rcr scas orps aad out int push jns imul or lock test mov clc cmp pop jns jbe mov mov fidivl test sbb aad adc psubq cmpb mov ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor push inc xchg lds stc mov lea mov jb adc mov push and mov insl arpl jbe sbb lcall cmp push pop (bad) xor mov adc push and xchg fisttp push std inc cmp je loope leave into xor mov fnsave ret mov dec outsl lea insl or shlb cmp or (bad) out push clc fstpl daa enter roll lcall mov cmp stos lods cli and push push push cli lahf pop clc repnz xchg inc mov lret and xchg cs jno add xchg stos shrl mov xchg adc xchg pop sub pop call cs out push lock push sahf sub sub lock jmp out js pop pop ret in (bad) mov mov add js shrl add mov shl sub mov adc ja push in lods lds mov daa sar scas pop cmp mov cwtl mov inc js ds or sub lods pop (bad) repnz mov pushf pmulhuw add test xchg insb sbb cmpsl (bad) push dec imul sbb bound mov xor lcall iret (bad) frstor pop popa rcrl fildl xor push xorl (bad) mov (bad) pop sub inc jb std insl es sub ret aaa mov data16 jge jmp sbb lea je aam pop mov stos adc mov iret push clc add or mov push xlat scas (bad) jecxz js jle xchg cmpsb adc fldcw pop imul jp loope rcpps (bad) jle mov push adc dec and out stos and nop push movsb jbe movsl cmp pop movmskps gs sahf clc stos sbb cmpsl or push nop hlt pop sub lret outsb (bad) cwtl dec leave xor test cmc jnp pushf sbb xor xor test sbb popa ds stos pushf sbb cmovs rcll add or jne fnop fs sbb sbb rclb sub push out push ret cmpl (bad) daa adc push aaa imul imul xchg scas faddp lahf dec or mov ret adc (bad) repz mov insb push ss mov jle cwtl jb dec add fimul sub pop dec out idivl jecxz push xchg mov mov pop imull mov sub jmp dec adc inc fadds jo sub push (bad) push movsl dec jg inc ret or call repnz jle xchg iret inc test dec lods mov aam (bad) out cs cmp adc sbb lahf (bad) loop mov wrmsr and insl mov dec inc cmp pop add cmpsl gs pushf dec xor aaa cmpl out jl movhps xchg ja dec cmp mov jo cld addr16 mov or xor add mov mov js push jb xor pushl in (bad) push mov and cld xchg push mov jge jg rclb pusha mov lret mov mov das xor test les orl lods sbb (bad) jns scas mov (bad) rolb jae xchg test cmp add shl dec push jg aam aaa xchg push xor xchg inc push mov leave (bad) imul sti jle std jae and sub jg dec sbb scas inc nop mov inc sub in pop mov mov fs mov jne shrb mov sub cs insl mov cld pop test int3 mov (bad) jnp aam add xor mov push ljmp pop lcall push cmc cmp push lret fbstp je clc icebp rcpps (bad) in rorb xor inc scas mov xchg jle push ja mov push ds xlat mov (bad) mov xor xchg xchg mov push in xorl mov and es ja mov lods jmp adcb pop xchg xor push cmp stos jne xchg sahf xchg xor xchg fidivr int repz push sbb dec inc imul add stos repnz add fwait pop stos shrb jne aas daa jp inc stos daa ret cltd add adc ds out or xchg mov fisubrl xchg pop or sahf push mov push jl rorl add jecxz fucomp adc insb and jae (bad) xor cmc push fnop fdiv or xchg es push ret jo pop mov jno xlat dec lcall movsl aaa jnp mov adc jnp lcall into and inc sbb fcoms ljmp das sbb mov cs lods lods outsb cmp adc sub cs sbb andl mov addb mov outsb ljmp cltd shlb mov int fsubrs and cli xchg fmulp aam xchg and mov lea les lods push xor adc stc jae mov dec out push in xchg test ss pop dec adc out and loop dec mov clc (bad) fs stos push pop in mov mov mov mulb mov nop (bad) dec add insb sub sahf pop inc inc mulb add jecxz cmc loopne test mov fistl in outsb and ret in mov push sub rolb fcoms inc imulb imul xor jne mov loop ss mov mov jg leave push fwait call dec popf mov sbb pop jecxz loop xlat xchg cli std divl xor sub cmp inc stos dec not mov inc mov push js rcll (bad) jmp pop pop xchg mov ss cltd outsb lods inc cmp jp mov mov pop dec shrb scas xchg or rdpmc dec inc fadds mov out movsb cmpsl imul adc lret loope les mov sbb test sub xor xor mov les pop (bad) cli jmp in sbb jle stos pop (bad) iret fsubrp ss leave mov (bad) test stc mov sub inc repnz adc pop inc js test and sbb sub and adc xor inc mov xor pop cmp (bad) push xchg iret mov jle push insb jno pop aaa stc push decl and sub sbb bnd outsb adcl test ret and dec lcall lock add inc push dec jnp pop cli addr16 push inc mov fstpt fwait sahf loop jo cmpsl adc jae ss mov lahf cmp and mov dec addl lahf jno mov sbb js mov mov stos adc jp jmp and and mov aaa loop sub fbld sahf stos dec push or xlat cmp cmpsb xchg inc dec ja sub dec push push mov (bad) sub outsb xlat fdivs jns adc mov jle cwtl push repnz mov cmp ljmp pop movl xchg cmp or or in lahf ja (bad) rolb and mov rorb jno dec icebp cld inc dec sbb jbe pop xor aad jmp sub in cltd push (bad) and cmp fistpl es cmp add xor xchg sarb gs push xorb jnp aad int3 sub int3 cmp (bad) lcall bound fs loope hlt stos push xchg dec icebp or dec cmpsl ficompl pop dec in fcmovnbe push add shrb repnz sub aas (bad) jle jl fidiv fxch pusha test in aam mov stc out (bad) adc ja dec adc inc pop jl inc push mov push or pop rolb mov push fsubr test (bad) dec lcall orl fadds stos sbb daa push adc loopne mov insb inc loope push les lods stos add jno dec sub out out repz aas cmp adc ficoml cmp add leave xor cmp in sbb in xor shrb jge mov add push inc (bad) mov pop mov mov imul mov dec cmpsb cmp test inc les sub mov dec addb jbe pusha jno mov or ljmp test lea mov dec rorl mov jb adc dec pusha or adc sarl adc es dec or jp cltd arpl or sbb rcr fnstsw sti (bad) outsl lea repnz (bad) push sub orl jo lret sub fild ss out xchg jae sahf xchg adc mov sbb mov xor imul fmull dec (bad) mov xor sub hlt mov fdivrl lret clc push stc roll (bad) jmp imul fildll dec jmp adcl sub and sahf mov jl jno insb add rcr jae outsl test adc lds lds movsl (bad) lahf das sub enter movl pop add pop pop std fcomps inc jns (bad) sti cmp ficomp jmp popf mov xor push pusha pushf push and cwtl repz xchg (bad) les xor xor cmp dec ja xor jae or movsl test sub mov jg sbb fwait stos jg cmp movsl leave add mov push int3 mov fcoml lahf push or mov mov mov jne inc int (bad) int lcall dec imul mov jle aam adc clc clc test sbbl inc outsl (bad) mov or sbb mov (bad) dec hlt lret nop in (bad) imul mov imul pop dec mov mov xchg dec (bad) and or fsubp (bad) dec sbb push fimull ret add pop jbe push js pop jp stos or ret sbb repz jno (bad) movsb out fs sti jns,pt roll mov fwait mov fdivl inc scas sub mov call cmp cmp jb incb (bad) jg mov add cs es mov jecxz mov aad xchg xchg pop cmp loop lcall popf aad fistl push dec sub fstpt and mov jno sbb lds mov pop inc sbb mov (bad) mov dec (bad) xor in and jb inc stos xchg push cwtl and pop jecxz cmp lea lds call push and cli test loop sbb pop jb jge iret (bad) xor adc ja rcl jo sahf (bad) xlat (bad) pop les push loopne js push lods push mov jb and push xchg aad scas and pushf sbb xchg das cltd dec (bad) xchg aam jns cmp pop (bad) mov lret cmp add fidiv fcomps add iret jns scas mov shrb sub xchg and add les jbe sub inc es jne push mov out sbb vmovntdq dec les push mov sub sub fistpll fcomps mov pop push (bad) in adc cmp ja cmpsb push push rcll lock jp in jge pusha icebp data16 jg lcall fcoml ret mov lahf lea inc jl or xor xor push test es mov dec push mov sub pop scas cmpsl (bad) push xor xchg mov add pusha xchg iret addr16 std xor shlb adc aad mov out icebp test dec insl lods lea dec xchg int3 ret mov lret cmp nop repz les stos pop xchg dec inc out data16 jo,pt lods es cmpl out pushw mov cmp das pop push push dec fsubrp cld jbe jno mov idivl pop inc fimul and popa decl or es jne adc psubusw ds aad test pop xor push push enter stc ja cwtl popf inc jns adc sub inc push pop xlat (bad) or and xchg shrb inc adc fild adc imul inc and jg sbb push add cmp cmp add shll mov sti sahf (bad) mov push adc fildll icebp push popl cmpl rorb test fist (bad) mov out sbb push les out push push int mov inc adc sub pop dec xor inc aaa aad stc bound cs in mov pusha mov fnstsw int3 lcall loopew js jl aam sbb cmp or repz popa outsb mov mov jo jmp pop mov (bad) jp push inc xchg daa dec lods test fmuls lds mov popa mov stos inc adc adc xor cmpsl dec sbb test dec ja mov sbb cs push call sub insl out imul fistp sub aaa and lret daa push xor lret or int fwait sbb fnstsw jne rolb dec fs sub ljmp xchg fnsave call scas stos lret cmp pop push mov je aas add push mov (bad) mov mov inc jnp mov arpl leave movsb repz xor push fistl popf clc mov mov and daa nop mov xchg insb ljmp xchg (bad) cs mov (bad) dec add pusha xlat movsb push test add mov xor push xchg rcrl dec jecxz lcall mov xchg imul xor cmp xchg jo out add xor jg aam jae pop es jo sub push ja in lods sbb clc push sbb push ret aaa adc lret and push push negl adc jne (bad) xchg pxor das and dec enter outsb ljmp loope enter repnz sub mov (bad) dec loop cmp jne cmp adc push out jge pop gs dec xor push daa clc mov xchg enter ljmp mov add ficom mov (bad) out sbb mov xor ja cmpsl push dec pop and xchg inc (bad) lahf cmpsb mov inc decl repnz (bad) loopne fldt xlat negb ljmp lods xor jle inc or cmp out flds cltd dec cmp xor ljmp ss lahf mov xor sahf fnstenv pop jl lahf mov pusha aam xlat xor cmp dec (bad) dec push les or sbb outsl out push cmp nop inc lret insl outsb xchg dec addl iret aam notb inc cmp fiaddl data16 cmp sub cmpsl lcall push popa dec push dec dec pop loope ficomp popf sbb popa push lcall mov aam (bad) xchg or add cmp mov sub push scas jne lods aad std pop test hlt push dec inc inc sub inc push popf and aad (bad) jle lret pop add mov test movsb xor (bad) sub lret push jno hlt mov mov ret inc cmp movsb popf fsubrl jbe jl push cwtl out jbe mov mov and popa inc xchg cmp jno rclb mov cmp (bad) pmuludq ret les dec rorb mov xchg gs fwait or stos xor adc sahf xor xchg sbb aas data16 scas imul cli loop jne mov mov mov mov (bad) call fbld pop in das out and sbb hlt ds lods mov imul mov xchg push push xor add (bad) (bad) daa push xchg xchg sbb out sub push fidivr bound stos test add or ljmp pop and (bad) loopne mov pop push aad mov and lcall aaa cmp mov aad adc inc sub sbb mov clc ficompl loopne in or xchg mov cmovns lods aaa into and adc sub cmp into jecxz add test sbbb fmuls mov (bad) sbb ret adc jnp sub aam mov repnz cmc push pop mulb push xchg ret orl idiv in out mov pusha popl insl in xchg mov mov or push xor push movb mov sub xchg out pop adc sti xchg outsl mov movsl cmp adc andl push jp stc popf sbb out cmp jl sub jnp or pop mov rcll outsb sahf jmp leave fiaddl mov adc mov push je add js data16 fwait aaa cmp pop adc mov mov cltd mov iret jae test pop sbb imul add in pop mov ljmp and stc ss lock xor scas xchg mov orl mov fdivs push jae xchg outsl pop cmp pop mov leave ljmp mov sahf mov flds pusha cmpsb cmpsw or insb mov mov dec js jp jbe push push cmp into pop cmpsl (bad) cmp sbb pop pushf ret jns mov cmc mov sbb cmp nop cmpsb jge adc es adc mov pop cmpsl je xchg pop pop arpl cmpl das pop ds cmpsb rorl out cmp leave scas nop add sub add xor pushf outsb fsubl or sub jmp inc repz outsb loopne jg mov and mov test dec add xchg sbb (bad) int (bad) ret fmuls add aam movsl (bad) notl mulb cmc stos pop xchg nop mov cmp push mov push and (bad) repz outsb xchg pop ljmp fnstcw fwait xor arpl (bad) cmpsl or leave mov dec inc insb addl subb daa hlt cld dec or fwait mov sbb out insb out xchg fistl sbb paddsb mov inc (bad) aaa mov jo and mov push add jne cmp lea add and xchg inc ret test (bad) sub jne pop or negb mov sbb or add mov pusha ja and sub xchg ret push ret lea dec jne sub stos into mull push adc adc push sti dec fs jg ja pop popf movsb pop lret outsl or clc and add ror mov sbb xchg fisttpll mov hlt inc das das add outsl jae rolb dec addb cs inc rcr rcr mov shrb xchg fistp push inc out scas fisubl inc adc lods je mov cld js outsl xchg push cmp xchg lea arpl or js cwtl lcall stos sbb dec add xchg jo gs or mov scas or push icebp and nop lcall subb xchg xchg das js jns jae bound pop rclb and adc push mov xor mov push inc js push cli jecxz cmpsb jno push lock rol andb adc sub pushf and pop stos push mov mov fidivl test fnsave sub cwtl jmp mov mov outsl aad cld add cmp cmp mov fcoms mov add movsb clc cmc outsb jle cmp outsb out sub sbb xchg insl mov mov mov pop cs in jge fldl cmp cmp push (bad) ljmp es or or lods and outsl sar fldcw jge loopne jnp cld push je gs (bad) std lods cmp (bad) mov inc jl (bad) arpl jne jne imul cmc icebp adc xchg jg in pop clc fst mov call mov cmp push mov sahf jno xchg inc pop int aam xor out inc sub popf add aaa ds lcall out arpl push xor pusha xchg lods lret dec adc jg adc out dec push popa mov mov outsl (bad) push push adcb mov xchg jmp ret (bad) jb mov dec inc inc fcmovnb test lds or xor jb lds icebp xchg cltd or fldenv xchg mov repnz cwtl mov adc mov pop (bad) call jl pop mov add fs sbb cli fnstenv (bad) cmc jmp popf and ljmp pop scas je dec testl jp pop ret xor rcr pop mov out hlt mov (bad) fnstsw jae cs mov xchg add push push (bad) dec cmp fwait xor xor adc sbb mov shrb loopne add xlat mov and (bad) and js xor mov add popf pop inc mov xchg cwtl outsl xchg sub sub xchg dec mov sbb pop and inc ds iret call pop xchg push jbe mov and or or scas push inc and mov in adc add in fsts (bad) or fidivrl add jae jnp cltd es in outsl addl in lods fimul jae das idiv mov test pop imul pop xchg push cmpsb inc je mov add jns (bad) mov push xchg ss push jmp push js div repnz inc or dec mov lea mov loopne push jae lea jg mov loopne xor dec aam lcall mov sub cmpsl rolb sahf scas out sbbb fiadd jg push imul or pop xor cmpsl scas scas mov push mov adc dec pusha mov (bad) rcr dec add fcoms add ljmp cmp and jne fistpl lcall push in xchg mov lods nop pop stc xchg mov decb test sti out mov aaa inc int int3 leave push rolb fucomip sub cld loopne sub ds cs dec mov mov cmp mov nop nop (bad) jmp and xor xor push imul mov enter cmpsb push cmp jno xlat je cmc ss dec mov mov out sbb jo daa lahf sarl mov ffree lds jl int flds mov pop push (bad) les push aam mov divb sbb xchg add and push arpl movsb ret sub fbld xlat push lret aad add enter dec movsb dec sti sbb dec sub iret or or scas ljmp addr16 mov mov fs notb and add jl sarl imul xchg add cwtl inc push cmp cmp push imul (bad) sbb in sub imul clc sarb lea sub sti bound cmp dec cmpsl or and inc inc mov sub jno jno (bad) into ja jns arpl push lods clc mov stos decb movsl cmp aam push frstor fstpt sbb pop lret pop mov decb sbb mov cmpsl push jl cmp mov xchg cmp outsb das fcmovne push stos scas call push bound mov and cmp dec or std jge test adc push lods push out xchg inc shlb or lret xor cmp (bad) aam lds out adc faddl mov (bad) (bad) cmp in mov iret dec ficomp mov xchg cmp ret xchg cwtl sub xchg rcr mov mov jne dec mov dec sbb andl in popf arpl bound imul push add xor data16 lock test mov cmp pop stos pop inc push fcom mov jnp das mov xchg inc jp sbb fcompl outsb sub cmp out shr push in mov adc ficoml push inc add jle sar and or mov xor jae in fs fdivrp fnstenv lahf jle dec add aaa xlat fnstenv and jg (bad) pop loopne out (bad) stc sbb nop into daa test jb dec jbe (bad) jge cli in arpl jns push scas inc sub jb bnd mov das pop into pop nop fisubrl cmp ffree adc push pushf pop cmp jle das pop inc mov shrb loopne cmp or sahf in pop adc push mov (bad) cmc ret xor mov ud1 mov jl sub call dec mov or adcb (bad) cmc cmp movb lret mov dec icebp test push inc sbb or add mov ss adc fnstcw push jecxz fwait mov jnp sub pop (bad) jae scas ja data16 jp jp imul mov xor ror inc or jge or (bad) hlt repz cmp cmpsb dec pop negb mov sti inc push inc in ljmp cmp inc stos fwait mov popa xchg in cmp fldl pushf addr16 sub (bad) in jge mov jge test pop sbb mov adc sub xchg push jmp cltd test xchg jmp rcll cs insl (bad) and push sub add cltd sub xorb andl mov sarb inc insb insl aaa mov sbb sbb push pushf xchg jl sub add fsubl adcl movsb jo pushf mov pop idivl inc out sbb jge pop xor push insb pop cwtl fadd push dec adc stc mov mov xchg inc les jo xor out dec xchg mov push mov repz mov mov push out mov sbb push callw mov push jno repz cmp mov arpl (bad) pop popf push pop es jge cmp lods mov push push mov xchg and leave sub push ljmp ds push jns xchg mov push aam jno mov mov sub xchg push cltd hlt push pushf pop cmpsl int3 in cmp outsl jl sbb call fdiv in mov mov mov xchg loop jne xor push sbb mov sbb aas das adc aaa stos sbb inc mov mov mov sbb aas cmp jge pop xchg and dec fidivrl mov sbb adc mov lods mov mov pusha add mov fnsave and sub add sti repnz pop jle retw movsb mov out adcl mov inc ret push adc dec jmp and mov aad jnp out imul aad push inc cmp pop scas cmc lret mov fstl cmc daa (bad) xchg stos mov jecxz repnz movsl lcall popf (bad) mov add dec es stos jns inc mov test imul ror cmp ja outsl pushf aaa inc cmp xchg div rcr xchg stc repz (bad) push jmp jne mov jp in or jmp (bad) pop pop (bad) mov aas adc movsl fwait sarb mov aas xor mov jp ret mov pusha enter pop cmp repnz fdiv mov fldl les jle fmull std ds and jae mov fmull mov xchg fisttp into cs cs imul and jmp dec lret cli jnp mov mov fcompl test cmpl cli fs mov loop ds and dec loopne fcoml dec push aas push sbb push (bad) sarl push das arpl in adc or cmp cld or notl loope and pop out and cwtl movsl gs outsb xchg (bad) sbb cmp mov movsl and sahf andl pop insl orl std or xchg pop inc pop xor pop xchg stos add xchg mov outsl rclb inc adc (bad) rcrb js jne pop dec dec call pop pop push push mov fsubs sub mov mov xor and adc sbb les mov leave jmp mov cmpsb pop push add in hlt dec dec cmp stos fdivrs xchg jae push fcmovnu repnz notb sub fwait jb inc cld xchg (bad) cmpsb stos sbb mov loop push mov fcmove ret dec fisttpll leave lea aad stos sbbb aam movsb sti fadds loope cwtl lods aad outsl add dec shrb and fimull lods fadd cld mov outsl aam lock loopne insl insl push test mov sbb repnz (bad) (bad) in and xor mov pop je nop sarb fcompl cmpsb int3 xchg jg fs cs pop (bad) pusha sbb push and (bad) mov dec lret lcall jb leave fldenv jb adc loope xor inc mov and xchg xchg xchg sub xor add mov dec sub in cli loope stc clc stc inc inc mov outsl ret adc xor cli cmpsb jle mov int3 ret mov xor sub test jne push push adc xchg dec sub pop xchg xlat stc rcll jle lods pushl loope (bad) hlt mov push mov push pop lret mov xchg inc jno mov stc jge insl pushf pop jg mov loope cmp xchg jge pop in or test out push xor nop ret loopne (bad) movsl cltd rorb movsl ds andl lods add gs fcompl and mov xor push sbb mov adc sub mov jno or test in dec daa (bad) push aad jno std jmp xor add mov jl xchg out imul dec xor inc int3 add sti pop pushf lock sbb mov gs xor cmp lret stos xor dec xlat mov xchg out pop out imul and mov inc cmp insl nop das sbb adc fwait mov sbb inc or cwtl (bad) cmp xchg jl rolb mov sbb stc sbb fisubl inc (bad) lds adc inc and cli push (bad) ja repz mov int3 mov mov arpl xchg sti lea into xchg es enter push cs arpl repz sub das out jnp popa in sbbl inc xchg mov ret xor out test cmp sub ljmp adc sbb add mov pushf pop mov lods daa xchg sbbb lahf sub mov ss inc xlat xchg movsb xor es pop cmp ja insb (bad) ds mov out mov mov and in out and add mov in cmp mov mov sbb ja mov (bad) jge rcr xor xchg in sub mov add sahf add mov cmc inc aad out cs cmp cmpsl data16 xchg dec or sbb pushf mov into push (bad) or inc jle xchg loope icebp jns sbb mov cld js pop xor sbb ret int3 cltd dec mov xchg xor movsl cmpsb divb sbb stc mov clc cmp push jg les sbb cltd sbb movsl pushf lcall imulb or dec mov mov popf xchg aas outsb mov mov xchg sti xor test pop xor lea mov call inc imul adc movsb mov jae loopne addr16 lea inc jbe pushf loop sahf jno scas cltd data16 inc xor dec xchg (bad) mov sti push push sub dec ss jo sbb xor ret and into push (bad) aas insl dec out rcrb cmp sub cmp fsubrs pop mov popf xchg test cmp (bad) mov inc sti xlat movsl sbb fistp adc into and or cmp mov sub inc fmull fnstenv ljmp nop int lcall pop jne pop and inc pop xor in xor popf jmp ljmp fnsave cltd fwait imul shrl int3 orl add test push loope lock add (bad) sbb (bad) loop cltd push jecxz test add cmp xor xchg mov jp dec sbb pop push jnp mov mov stos adc mov hlt xor fs sbb sahf sbb (bad) out scas cmpsb and fist pop rorl and call out js inc data16 ljmp sarl in loope xor cmp adc inc out (bad) dec sbb xor cwtl mov repz (bad) out jae lret dec outsl popf mov lods movsl push add cli movsl in out jp xchg cmpsb xchg cmpsb jmp outsb add stos or and call jl mov push pop iret xor cmp xchg jne or xchg insl pop int3 (bad) dec aad shrl mov enter bound sub mov and ss lahf and test (bad) jne cld sub daa pop xlat xor dec pop push sub movsl inc xchg ja rcl add mov lock xchg cmp xchg fs cli ficomp or mov jge mov add arpl and lea out and add ret xlat inc out cmc pop mov sbbb or shlb es scas jecxz int mov and mov xchg aas add test mov and imul imul dec subb mov inc mov xchg sbb scas sub jne and inc mov test sbb push dec cmp lret int3 add dec popa dec cwtl (bad) pop adc dec xchg int3 xchg sahf ret fisub push and inc hlt xchg aaa (bad) sub mov pop jno test cmpl arpl dec push mov push mov hlt fcomi ds aad dec loopne adc inc dec cmp dec inc aas dec faddl dec lds mov xchg dec loope pop and mov fnsave lcall out fcmovbe push push (bad) lock lret jp lahf test (bad) push test fstps test fwait cmp mov (bad) mov sub dec push (bad) cs (bad) ljmp inc jb (bad) sub gs xor or dec test cmpsb xor loop jp xor or add cld push sbb jb or push nop test mov dec or roll cmp in loop xadd stos popf jo pop test jo jno adc and jne pop arpl mov mov sbb push (bad) inc mov in aaa inc pop movsb cmp xchg add sbb dec mov repnz in and aam pusha je out adc xchg and cmp inc mov and out lds jns imul cwtl jb ja dec cmp fisubl push xor push ja (bad) adc inc popf push or aaa cmc jle (bad) push push les rorb sbb incb mov jp outsb fldcw jb and imul and push jne dec mov dec xchg mov jecxz pusha insb std mov xor xor (bad) test and sub pop pop or lock xbegin or pop jmp mov sbb dec cli mov (bad) fstpt push xchg cmp jbe lahf adcl ja stc jno dec mov icebp mov mov rcrl pop xor out add shll pop sarl fdivl cli fidivr push add adc sub mov jmp fidivr sub repz inc and sbb lods pop clc jbe inc mov ljmp ss outsb and push cmpsl push pop loope int dec repz add cmp mov mov mov xchg xchg dec sahf sbb mov scas xchg ja fdivp (bad) scas push jb addb in pusha outsl adcl lahf dec les mov cmpsb pusha repz imul std jp push rcrl mov cmp xchg inc adc or das movsl xor shll stos clc jl push pop jecxz out cwtl not fwait cmp (bad) pop test into push rcrl and movsb adc sbb lahf jecxz popa sbb js pusha aad jb mov aad stc lret jb nop fwait clc xlat pop lds sbb outsb insl jbe mov jl hlt push sub add insl xchg mov lock jo push add lods push push jl sub or and bnd std sub mov dec mov mov and popf fdiv (bad) xchg jbe push mov xchg jnp jecxz dec mov cmp jecxz cmp jg,pn add in jmp es (bad) rcrb sub inc in into ret movsb jnp lods mov (bad) jmp in test push inc push popa js repnz inc cmp rorl popf scas xor push xor xor leave cmp jge sub sbb jle lds dec mov shlb sbb push shlb leave push pop (bad) mov std sbb mov lods cld jae mov loop add arpl sarl pop pop cli mov inc xor xchg push mov outsl cmpsl push addr16 add rorb sti sub xlat in push (bad) xor (bad) in mov jnp jl pop add dec call cli xchg scas xchg mov aaa cmp dec cld cltd cmp dec scas inc jmp dec xchg cmp dec xor scas dec sbb and addr16 and leave in add mov stos cli push xchg hlt inc cltd (bad) int jbe adc adc xchg bound xor test jge lret dec fimull mov hlt push sub pushf (bad) dec roll ret mov jb add ret jno xchg mov mov das icebp (bad) sti push and dec jno ret sub aad fstpl adc dec push (bad) aam mov bnd insl fsubrp (bad) bound sub pusha inc push and fwait jge cmp sub out mov and dec aas sbb jbe mov or push lods cmpb (bad) cld push jecxz jae xor (bad) cmp jl jle out enter scas mov push jl hlt inc dec pop ret sbb or xorb insl push jge dec mov sarl faddl shll sbb inc (bad) jle jbe and movsb add add dec cmp outsb and stos xchg jmp jno cltd out aam clc xchg dec (bad) mov into mov xlat fnstenv mov xchg fidivrl lds outsb dec jae stos (bad) cmp mov mov push sub in cwtl jo cltd mov mov daa ss repz mov idivl (bad) std mov and sti push or mov sub mov dec pop call and ds cmp sub cmp stos out popa adc xchg jge test mov xor and idiv enter mov mov or enter or mov test stos xor ret mov out inc push push inc mov xchg jecxz adc mov (bad) xor push das lahf pop shlb xchg cld aad jmp insb ss mov pop movsb dec out ret stos inc and lretw mov fsubrl push jo mov or pop inc xchg mov popf repnz cmp add stc cs out clc movsl jl pushf xor dec test or ud2 pop lret aam mov stos sahf fistpl adc ficomp inc mov mov mov or xor mov mov push iret mov mov ret jg xchg js mov or and repnz adc mov data16 push xchg push int3 push pusha xchg pop inc cmp xchg test lds (bad) jbe into push scas icebp mov loop xor aam testb out jg add fnstenv pop push pusha enter call (bad) shr xchg sahf jl mov mov inc loope pusha mov dec inc jl sub add fistpll les xchg les mov out jle pop cmpsb pop jb sub xchg jle aas js or in out imul inc mov je fmull ljmp mov jne push xlat mov xchg arpl mov gs fldcw push sub fadds and push fwait xchg repz cmp push pop fisttpll enter dec dec daa push xchg mov mov outsl loope fstpl loop mov push out mov rcrl pop and aaa or stc mov pop lock push gs cmp nop movsl sbb sbb xchg out push jecxz or mov rcll cwtl xchg mov xchg pushf popa lock add xchg add and fcoml dec lods ret pop rcrb jne adc mov movsb mov inc nop movsb xor ss pop cmp in call xchg xor iret mov dec (bad) mov loope cmpsb (bad) adc movsb (bad) and push jo (bad) cmp scas (bad) push pop in cmp pop push cmc mov ss test mov cmpsb ss mov rorl mov push add outsb jns sub loopne,pn inc lcall popl sbb adc xor pusha mov fdivs out pop sbb inc test (bad) sbb xchg jge jle xchg cmp enter pop xor push mov pop jo push xchg lcall hlt movsl out push xor in xchg shrb icebp popa sbb outsb jmp push (bad) cmp push cmp fst dec shl imul jg mov addr16 xlat outsb ja incb in lds or cli pop into js jns test test stos int3 hlt out notb xchg stos push dec lock xchg or outsl jns mov inc cwtl fwait add pop xor fwait cmp cmp (bad) pop cmpl pop lods mov pop (bad) aam push (bad) sahf dec adc (bad) inc and or and sbb incb es (bad) xor pushf xor insl dec lret imul or mov sub inc fs xchg cmp test xor inc jae mov sbb repnz mov insb inc mov sub xor jp fmull (bad) push mov jnp les rclb (bad) push push (bad) cwtl mov lcall aas js mov pop loopne arpl aam inc inc js in fs ficom popf pop dec fmul xor dec gs scas xchg insb psubd mov xchg mov gs test roll mov and and clc pop lcall (bad) leave (bad) jne dec sti cmp (bad) repnz lret gs fucomip dec loop mov cs (bad) pop jmp mov and scas test lcall mov shll xor pop sti daa mov popf jb xor add xor xor pop cwtl add mov inc inc mov sub cwtl xor mov pop (bad) out inc cmp addr16 shrb test mov xor out cmp mulb mov xor fistl cmp add sbb cmc mov and jno lcall adc mov (bad) xchg out add mov testl inc cmp out lods stos imul (bad) gs push and test rcll sub mov stos mov fstpl jg jl in mov mov inc jmp jecxz inc push cmpsb (bad) fldcw dec inc mov ret rolb sti pop sbb xchg les mov test in insl psllq adc lcall jnp aad ret (bad) mov xchg idivl dec arpl mov rol push test mov ret pop popf cmp call pop insb (bad) sub out pop gs jns jbe xchg hlt call sbb push ficompl add mov fs or sub popw popf add dec add sub xor gs (bad) push mov push clc shl mov jg fsubrl mov in loop add xor fiadd stos or loop rorl gs push icebp xlat mov sti add lods int dec sbb shll stos aad sarb mov cmp push jge addr16 fldenv or les lret shll or cmp adc mov adc jo,pt jnp je ljmp xchg xor sbb cmp sub sti or inc push int3 into lea push test xchg and lret and lea inc and add data16 push inc ljmp dec lcall mov xchg mov std pushf pop adc stos mov xchg mov hlt jle rorb je loopne addb jp (bad) into imul cltd cmp repz mov imul loopne jae push clc inc ret jns sub mov or sub lock cmp shll xor sub push cmp mov mov int pop sub addr16 lahf into add or mov pop inc mov add movsb jo xchg xor lcall sub out and das cmp jne adc mov pop mov cmp rcl adc je sub outsb push ja pop mov sub outsb sti mov cmpsb lods push test jmp pop xchg (bad) cmp and pop pop sub jo clc frstor add stos mov cmp push jo or jo xor outsb lods movsl mov jmp pop sub mov and aaa mov inc out add adc sbb shl xchg in popf mov mov xor add dec sub mov bswap fstpl add mov leave nopl pop mov inc sub xchg out movsb or sub push out mov sub arpl mov cmp sub sub or mov jmp loope push jne xchg aas cltd out push mov out lods push mov enter jle and arpl push mov fist mov ljmp jmp (bad) cmp cmp and iret loopne scas sbb sbb loopne mov push sbb sbb sbb xor or sbb or in shll roll adc cltd or sub js push mov add lret fbstp test fiaddl pop inc mov popf pop (bad) inc inc std push hlt fs into stc mov xchg int3 mov sbb or ret jecxz dec jg mov ficompl inc adc push xor int stc ds jne (bad) in or sarb mov adc sub mov std (bad) outsl lods xor xor int jae xchg cmp (bad) stos cs (bad) mov add pop es sbb xchg jmp adc adc lods sbb add add testb and ret in mov outsl test lahf or daa pop xchg fisubrl jae and fwait movsb std sub sbb ror mov pusha cmpsl pop (bad) lcall ljmp fs lds mov mov ret push xchg mov in stc (bad) mov insb xchg add cmp push popf jno lock rcrb dec aas fldl notl adc outsb ret xchg dec xlat jg popf lods dec (bad) xchg ljmp cmp les inc repnz xchg aas xor add xor jno xchg leave (bad) push push popl cmp out lret xchg loop add js pop lahf push mov in out xchg jnp mov iret ljmp push rcll gs jmp lods xchg or inc pop rcrl adcl and and sbb enter cs out lds (bad) push cmp nop daa jns jo add out xchg out loope iret lret test gs fdivl dec repz sub aas movsb push fadds cmpsb jmp inc push or push test cltd pop fnstenv pop pop (bad) jne mov or in jbe or mov jbe popf pusha or push and jbe adc add fucomi loop xchg ficom loop (bad) jbe cli (bad) pop (bad) xchg xor in jno je imul sbb cmp pop adc jl fninit adc ja sub ret icebp shrl (bad) push sub push popf and fsubs imul incl repz pop or inc movsl xlat iret jno mov mov sahf pop bound fcoms in push mov and lods mov push mov xor icebp aas mov std lret mov jmp (bad) stc sbb add das mov mov hlt icebp imul es cmp dec shr jo stc cmp data16 xor sti pop repnz das or out jno add xchg arpl pop stc smsw dec sub jnp icebp cltd jge movsb dec hlt pushf cwtl ja mov jmp xchg mov push pop fmull pop pop stos mov push lret aam inc movsl sbb jmp rcrl pop dec fistp sbb stc bound hlt sub push mov clc push mov push jle push aad into or xchg nop lret mov jecxz cld mov fimull xchg out std push inc adc xor and ret cmp mov repz inc fwait insb push or mov sbb sbb pop sarb push mov int adc addr16 push mov clc (bad) lcall out cmp pop out adc imul add sbb stos daa add sarl inc js xlat add jb test add dec or mov dec daa xchg in les jnp insb in push lea adc lods inc imul (bad) ja inc test jmp cmp test jbe out (bad) bound add inc xorl mov cmc sub push dec (bad) jo jg dec xor (bad) jns movsl (bad) outsl rorb and (bad) in push mov dec pop mov jge mov fcom icebp mov add hlt popf std daa emms add adc int pusha sub das or fstpl dec fisttpll shrb mov repnz or std andl xorl mov pop sub push (bad) mov push push or (bad) inc pop nop lds movsl mov and pop mov xor add js push mov mov jb jecxz out inc in stc inc and jns enter pop xchg xor dec jg fsts repz (bad) int3 insl std or stc data16 iret and test je pop jns lahf jmp out mov xor dec imul inc and mov leave sbb mov pusha xchg xchg in sub pop sbb mov cmp and mov les out pusha mov rcrb mov cmc add call test xor fdivl cmpl adc mov xchg sub and ret outsb xchg dec push mov cwtl push sbb jge ret jmp out mov mov (bad) cmp out lcall add dec mov xchg mov inc jle adc das movsl subb test add mov push enter aam outsb daa dec dec inc inc xchg xchg xchg mov cmp jb imul push scas dec push lret adc mov sbb ficompl jo push sub push xorl jnp lcall jns pop dec or loope mov push and xor dec or push mov test movsl fildll sub les dec in rcr mov dec mulb mov je (bad) jbe cmp cmp xchg push jno sarl movsl add pop pop mov and lret stos pop xor sbb jae cs sbb pusha mov out adc xlat mov aam lahf rcrl push mov iret out jle pop out fiadd xchg fwait arpl fisubr test cmp sarl pop sbb adc mov stc int xchg fs inc out or pushl mov jnp aam imul fidivl xchg js inc bnd xor fdivs aas add pop subl cmpsb inc (bad) sub andl (bad) sahf testb mov in (bad) or cmpsb dec push adc clc popa das jbe add mov xchg pushl out dec imul xchg xchg (bad) js cmp mov push push xor or mov dec dec push data16 mov push (bad) cmp xchg jae xchg (bad) aas out jo,pt nop nop or sar push jg mov xor clc fs xchg fwait xchg or mov jge sbb lret hlt add faddl pop mov push prefetchnta cwtl stos fwait jne cwtl cmp mov pop add aas lea (bad) imul (bad) into hlt (bad) divb jl mov or iret iret stc add adc insb icebp mov push jp (bad) and pop pop inc dec stos xor bound rolb dec or sub mov out xor jl mov cmpsb mov pop jmp stos xchg insl cli pop and (bad) push inc sub mov sub popa imul (bad) mov push andl ret data16 loopne les bound add mov gs or aas icebp lret insb nop lock mov cwtl loopne bound aam mov popf and mov popf xchg mov fstpl leave dec sti pop (bad) or mov aam push dec stos stc dec pop cwtl jg stos iret push and or (bad) sbb dec jno pmulhw das inc mov xchg ret cli dec roll in push push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret sbb xor (bad) jmp xchg or xorb out jmp inc inc push sahf lcall mov jnp add pop ret push sub dec adc cmp jl mov fsts cmc (bad) je push adc mov xchg test push mov lock (bad) out adc xor push lods adc aaa ja add push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jecxz int fwait push lods imul cmp lret shrb sarb sahf mov inc mov stos push push repnz lcall jo js scas roll xchg (bad) loope jge cmp in xchg xchg xor jecxz mov xchg pop sub dec and test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 sbb xor lret hlt add enter dec std xor stc or jge pop flds out push xchg sbb cmc insb aas xchg mov (bad) dec sub fbld jbe push outsl jg cld into sti sbb fnsave cmpsb inc loope inc xor dec push leave jmp repz pop aam mov mov sbb pop std push cmp pop xor test jg mov ret leave sub (bad) stos js fisttpl sub (bad) pop push jl rcr scas fstps xchg mov in push test scas add pop pop adc mov mov lods ret mov add sbb jae dec inc outsb mov jp sbb aaa daa das jl fwait mov push mov ja add xor pop xor dec and sub jl push xor add push repz insl and (bad) mov (bad) push pop add xchg cmpsb test cmc xchg (bad) in pop push jns aad inc lahf xchg bound and sahf mov or hlt js jg ja test cwtl and movsw pop mov sti fcmovnbe dec inc (bad) mov adc pop fstpt fldenv mov (bad) imul shrl rorl and dec test lahf mov shlb fsubrl jae jp (bad) pop loop shl or dec cmp insl push test shrl push out inc pop mov add xchg xor leave icebp inc iret push xor std cmp or cmpsl sub sbb sahf jmp cltd movsbl push (bad) mov cltd jne enter cmp xlat and je pop adc mov ret sti xor xchg (bad) mov dec das mov loopne in rcl mov in xor decl sbb idiv aaa cmp fs add pop jl out mov mov cltd inc fcmovnb jae pop sub push (bad) dec mov jno call pop sub testb bound in repz in pop xor fnstenv dec sub gs mov xchg (bad) mov and add lahf jno xchg xchg cmpsl aas pop ljmp adc mov imul pop es outsl neg cmp leave mov in (bad) push push xchg mov xor cs lods cld mov test pop rcl adc xchg mov push test aam in cmp inc add dec xor cmp jns rorb xor je lret (bad) mov xchg gs sbb xor (bad) pop or mov xchg xor mov cmp add or test insb or out ja dec pop int3 lea arpl cli stos add push or add xchg out cltd mov daa lcall fildll subl ret addr16 sub arpl xchg mov mov cwtl mov cmc or (bad) mov pop mov jbe ja mov and pop pusha pop push aaa add stc enter pop jge (bad) stos dec pushf jle jl add pop fnstsw rcll cmp pop fist addr16 add addr16 sahf lret sbb or jae pop pop leave jbe inc fstpt aas mov xchg mov inc inc adc cmp fsubs outsb divl jb (bad) xor push out or jmp cltd (bad) stc push inc mov mov and xor jmp repnz jle push cli es xor dec cmp rorl mov cli inc rorb mov faddl mov jae pop sub outsb fldt andl test test jecxz repnz ljmp sbb mov mov adc fnsave paddusb dec cmp popa dec (bad) fucomi mov dec lret ss mov in mov jg iret adc into adc rorb adc sarb mov pop sub cmc das cmp in sbb jbe or out (bad) jb mov push inc push test lahf imul push jmp jae cmp adc sub pop sbb sbb push or fbstp arpl pusha movsl lcall ret dec or fnstsw cmp jnp mov dec les call popa sub addr16 xor in xor aas sub aad mov sbb aaa lea xor push fcompl and mov jnp jb xchg out dec mov mov sbbl pop xchg mov cli icebp and insl out mov in mov adc mov pusha cltd push jecxz ss rcrb or pop add mov aas lret shrb cwtl popf lods sbb or dec shr and (bad) pushf frstor leave movsl test aaa mov cmpsb xchg or adc out jne scas (bad) enter pop or cmp jbe scas xor inc aam aas lcall xchg addr16 sti jp dec pop or push leave push imul fild or or push mov std mov push mov inc and fwait lcall cmp insl add (bad) lcall push mov and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 sbb xor xor ja push paddw push cmp (bad) (bad) pop add movsb imul jo bound push mov xchg es adc sbb subl call mov hlt ret adc pop pop dec adc push xchg cmp add xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 sbb xor xor ja push paddw push cmp (bad) (bad) pop add mov mov push cs adc out pop das mov (bad) jns dec inc mov xor sbb dec into jmp xchg jns setb aad xchg jns mov inc iret aas sbb shrl push mov mov sub ja mov lds xchg faddl lods dec xor pop mov movsl out repnz pop xor sti xchg inc lds gs sbb (bad) jmp stos int3 xchg fidivrl (bad) std dec enter cmp xchg lock movsb jbe inc test cmp test andl mov mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 sbb xor movsb push jle or xor or dec repz add rorb push or mov mov inc adc add add inc adc add add add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb test push pop pop into adc jl xchg ret sub adc hlt lcall stc mov adc mov iret dec into mov mov loop add jecxz rsqrtps sub mov ss jbe jmp cwtl inc fs pop lods xor push (bad) sbb jge xchg pop (bad) fnstcw (bad) scas inc leave sarl data16 repz pop and pop pop mulb fnop (bad) mov faddl clc add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg mov divl (bad) mov and push adc rcr mov cltd push mov push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 sbb xor mov jb std arpl mov xchg int jo fistp loop shll data16 jl fwait insl cli pop into and fs fidiv ftst outsb into mov cld push fcoms jge cmp in xchg xchg add scas dec jns jmp push test xchg lahf xor dec pop xor cli mov jbe daa outsl fldl sub inc sbb lock or gs enter mov sbb orb xor imul push aad adc and in mov pop ret dec lods jbe and cmp fdivrl fs std mov xchg mov xchg addb mov push mov test ret push in jo stos and movsl push xor sbb push frstor or movsl jmp xchg jnp or fisubr pop test fiadd sbb pop aam jecxz cmp out mov adc jb cmc in jnp fsubp pop shll mov fldenv (bad) jae sarb mov adc jnp xchg cmp test jecxz test jge inc jge add loopne inc fisttpl das outsb shr jno xchg xchg sarl or xchg mov xor jns or cli push and mov mov pop jle add and xchg xchg rolb jbe lret add jecxz mov mov xor sub mov xchg inc imull subl sub ss cli mov sub jno and ljmp mov lock xchg stos iret xor or bound imul int3 loopne aas pop mov mov inc push int3 jg aas sbb popa das adc lahf out push je mov out adc dec fisub (bad) shrb les out push sub cmp add enter inc fcom sahf and daa jae fcmovu or shll nop lods test xor jnp lahf mov jle push mov fldcw mov lret mov sbb xchg pop sbb lods xchg inc pop out pop xor ljmp inc sbb enter jg push and sbb fsts mov add push mov xchg imul mov pop fsubs (bad) in push cmp mov sub or in cli xor test aaa rorl push sub jp ror loop cmpl mov xchg xchg jp das lret add or cmpsb jne sub movsb fisub stc into mov cs pop cmp dec ja mov (bad) xor or je aas dec jge adc ficoml test jmp xchg imul aas loopne mov mov pop (bad) adc mov and mov xchg stos or cmp fadds pop cmp popf daa mov in mov inc sahf adcl sub hlt ret jbe cs mov fildll cld outsl sbb aam xchg movsb xchg and and jge in sub movsb out inc aaa or mov push push in mov out hlt fwait jo xor cwtl jg fcomi aas xchg mov mov leave or cmp cwtl jle xchg mov inc xchg ljmp dec xchg movl add es mov test xchg xchg rol shll movl fwait (bad) (bad) pop or sub outsb cld xor popf mov jns cmp fldt jl jbe push adc xchg pop es daa rcrl sub sub mov jae scas dec fnop xchg call sbb popa jecxz lcall and out scas dec xor and in jmp lds inc jl int3 mov pop push push mov icebp gs daa test inc mov cmp out xor repz push dec testl cmpsl cmp cwtl movnti rclb outsl adc out js dec push jmp jns cmp mov rclb movsl je xchg fisubl fsubs inc mov das xchg inc int outsl fwait (bad) repnz outsb mov inc in mov int3 add xor daa jmp out sub dec fsubrl inc les pop pop sbb cltd rcll sti in xchg dec pop mov or adc or outsb fs dec repz stos cmp jns movsl and rorb dec pop or mov inc mov (bad) pop jle repnz ljmp pop scas hlt lods data16 pop add lret push loopne jl (bad) or xchg shr xlat adc inc push and in cmp cmc iret push fdiv pop xor outsb dec and dec xlat and in jb mov cmpsl push cmpsb inc scas mov dec push pusha push push in or in add cmpsl sub and pop xor pop xor in shrb mov fild pop (bad) xor test xchg ret push sbb inc dec fstp jl sub unpckhps test jbe cmc iret inc insl fcoms std push cmc leave in xor ret dec ja mov ss out out xchg push cmp xchg (bad) xor push add lods les (bad) dec pop insl leave (bad) fnstenv fnstsw dec sub push in pop push clc add (bad) notl push fild out and mov dec cmp je out lcallw jb repz or clc mov test and into push jle mov xchg jne jne pop add push dec rorb sub sub lock mov fs iret (bad) jl movsb and or mov adc cmp in pusha fsubl pop sbb pusha jg mov sub add std pushf pop mov mov mov lret jbe xor out fmulp jp jle xchg jmp aas lds (bad) repnz imul pop repnz icebp push or ja cltd jb test repnz xor lahf sbb (bad) outsl pop outsb inc icebp sub jp aas (bad) or outsl add cmpsb dec inc dec cmp cmp pop dec jne push repz sarb mov jg mov dec pop dec jnp out jecxz sub lods pop jnp mov fidiv push cmpsb xchg cmpsl add jo test test pop outsl mov scas iret notl pop lret test mov ret fildll cmp imul xchg (bad) and adc inc mov arpl jbe lret inc mov cli mov xor mov clc adc sub mov mov stos test sbb shrb pop jns shlb or inc rorb inc popa add sub jp aas push subl (bad) mov inc idivb mov hlt shlb jmp scas pop inc ja stos lahf int out jo cmpsl adc mov xchg fcomp add push clc cld sbb test or (bad) mov cmp adc imul mov inc nop in das (bad) push (bad) or xchg insl (bad) push int rol hlt adc cmp or pusha into push cvtdq2ps cmpsb pop les mov pop data16 push mov inc cwtl (bad) in cmpsb outsl xorl es repz jbe and (bad) nop aaa mov and fstpl lcall pop shlb adc rorl push pop push adc arpl aaa inc adc lret sbb xor sub out xchg aad outsb sbb shr fadd rolb sbb les ret mov xor and and rcrl pop add mov adc inc or mov push (bad) dec xor int loopne add or cli test jno sbb daa dec leave mov into sbb xchg js adc xor in sarl pop dec insb lret imulb out pop cmp adc cmpsb (bad) sti mov mov pop movsb (bad) mov inc pop pop mov cmp pop pop pusha xor xchg lret movsb iret hlt fisubrl cmpsl arpl push and and rcll popl out jo pop adc or mov stc and dec stos mov int stos or addr16 sub xor jns in or dec lahf sbb out adc cmpsb jle repnz arpl rcrb icebp daa popa sub imul std imul fs jo jne,pt sbb sub bnd nop mov int3 notl pop jle sbb pop sti (bad) lret pop jne lcall pop (bad) rcl push bound inc mov and adc stos movsb (bad) jl shll lds mov (bad) xchg cld push sub cmp adc fsts dec cmp inc aas push dec rcll movsb rolb addb (bad) adc cmp jbe add jbe dec repz repnz arpl sbb mov or mov in cmp aaa pop jmp xchg push icebp jb stos ret test xchg xchg or dec hlt fsub adc jnp cwtl adc ja lret outsl les sbb xchg repz (bad) lock sahf xchg repz bound ret aam pop cld cmpsb and fcmovbe (bad) out mov xor in xchg fwait push hlt movsl push adc loopne dec fcomp flds (bad) lods (bad) std int dec repz jge test dec cmp loope inc ljmp sub ja xchg insb daa adc cmp cmc and mov cmp fist out dec (bad) insb popa fs pushl push ss lea sbb lea dec jmp mov push fidivrl rclb dec cmpsb mov (bad) iret mov jmp push incb and shrl add xor ja mov cmp icebp mov in jle and insl imul rcr xor dec dec xor add (bad) ja mov dec insl pusha sbb jbe out mov mov mov or outsb inc faddl ds inc dec es in jbe add fistpl mov call fisttpl push aam divb stos mov and cmc adc cwtl stos jnp sahf pop jl sbb loop mov scas adc jo fs mov mov fwait mov jl mov dec lods repnz sti xchg dec decb add mov sbb mov enter dec dec add or aad sub mov adc pushf cmp push pop je idivl movsb enter outsl push std mov call and adc addr16 sbb lahf mov divl xchg js cmp pop dec clc aam ja sti lahf scas out xchg (bad) pop call ss mov push test ds jl mov xchg ds sub ljmp repnz cmpl gs outsl mov dec xchg push loopne das stos xlat push popf out fcmovne dec push shrd fidivr jno push jns xchg pop repz jbe or mov push push cmp popa inc push xchg inc hlt mov in daa les je sub cli ficom mov dec xlat add int3 das jb sub xchg aad cli jmp sbb or mov aam lahf loopne pop inc scas mov pusha jb cmpsl lea push jo (bad) xlat push jne,pt repnz jbe lods cmpsb jo jl movsb dec sbb jb mov push cmp push mov pop inc adc lret pop ja xor cmp sub rol hlt clc aad rcll add pop gs mov mov aaa pop test test and insb mov iret cmp adc mov call mov mov or std inc out les fstps fadds pop ret fwait add mov sub inc dec mov jecxz pop adc add popa push in (bad) or mov je ss xchg jl pop lret nop dec stc push jg mov mov xchg bound fs mov (bad) rcrb pop les push inc out les pop cmp sub repnz daa mov lods cmp scas cli lahf and pop dec xor lcall mov cmp cwtl out pop add pop fs je fsubrs fnstenv test xor adc iret push mov lea jae cli vpaddd (bad) daa (bad) lods jle jno cmp stos pushl ret inc (bad) lds fs pop ret push xchg aam movl sub aam sbb sbb std les fisubrl push add icebp push jne cmp sub test out js shld movsl cwtl in push mov bnd or testl fldenv ja (bad) xor pusha mov popf add jae test mulb mov mov or pusha dec test dec jle jnp or fistp (bad) aam cwtl jp lret add push adc and pop test les inc dec lods push mov pop xchg push push and (bad) push or mov jl jl and (bad) push xor pop add pop mov jp dec iret mov adc outsl xor sbbl jae adc test ja loope shll out fnstcw xor ficomp mov fsubrs add (bad) fmulp lea pop fwait pop jno leave mov push and addr16 rolb insl push and call mov and or push jp sahf mov divl (bad) mov sti js and cwtl cmp sub mov icebp cmp into adc and push or ret push sub jb sbb repz and and addr16 mov mov adc movsb push mov inc inc cmp xor lods jmp cmp fcmovnb out out dec mov xlat ds adc add imul or push pushf int inc jge xor das mov jns push cmp xor into push stc mov or popf scas mov (bad) jmp scas push mov inc sub add ror jno fwait stc mov into sbb cli inc aaa pop enter lret pop lock jae cmp dec jno andb mov in dec xchg and pop loop add push scas out movsb and xchg fisubrl pusha es aad and jo in daa cmp and push dec je sub mov mov pop jge and sti enter je gs mov stos out jbe call leave xchg mov push adc adc ds jae pop gs cld push push add popl push xchg cmp fnstsw push fs fiadd push repz js addr16 pop ja sbb jp aaa mov cmpsb dec push imul (bad) pop ja cwtl jae fcoms xchg inc mov nop add in jge fiaddl jno loop add std out test int lret push dec mov cld mov hlt shrb jg push mov push in xchg imul inc addr16 xor stc push shll sbbl stos push test xor addr16 push repnz gs xor mov push push mov adc xor inc imul leave outsl xchg pop (bad) les push cmc xchg dec outsl ret push data16 out pop or mov xchg push inc mov out pop in sbb les or jmp mov inc mov mov bound aam inc lret adc cs mov jl int3 aaa scas sbb adc xor pop es orb mov jl xor add decb and push mov push mov dec lret xor arpl ja cwtl ljmp or push enter ds (bad) jo mov add repz lea push lods mov fisttpll fisttpl inc mov movsl xchg mov movsb stc pushf std iret mov arpl sbb and les mov push dec jne jno in mov jl data16 pop fstpl xor js enter add mov call pop fcompl adc xchg sub mov mov jne adc cmp (bad) fs test jmp mov fs arpl int mov inc mov mov call pusha add cmpl jne (bad) jecxz xor adc nopl cli add jg shlb int lcall mov into test push sbbb push sbb es inc pop repnz imul or add or mov rcr mov decb xchg fisub divl dec inc add lret xor pop mov and rolb rcrb lock loope mov lahf scas test jmp push xchg outsl fidivr sbb add xor hlt lock push sbb jecxz adc pop inc push loopne jne cmp xchg pop sbb addl or pop ror es dec jg add lds sub aaa pop fs jb pop mov je int cli in xorl jle and and push clc xchg cmp hlt in sub or xlat and test jae ss xor xor (bad) mov ja into xchg dec jae inc lods push and (bad) pop push int3 mov gs inc cmc jbe mov mov cld pop add test push pop addr16 aad outsl push push shl std sub mov pop inc push sub jns mov in cmp stos fwait push negl (bad) mov adc xchg fidivl std enter mov xchg mov lods lahf nop es mov pushf cmpsb or mov loope jp mov cmp (bad) pop sub push mov into push cmpsb outsl orl bound cmp enter cltd fbld rcr pusha sub mov out out hlt and es aad fnstsw nop mov push lds inc jno (bad) mov push movsl mov mov push sbb outsb loopne and adc cmpsb xchg fdivr sub xorl addl stc jp xor data16 fistpl add (bad) leave jb sbb ds loope arpl xchg inc sbb pop and cltd cltd pop sub ret mov push sub mov test push ljmp lock sub pop inc ret jbe dec jg clc sbb jl sub loope test inc int3 test jp movsl xchg cmp enter adc gs dec push ljmp test cwtl pop inc push out lret pop ret clc dec pop ja jge stc dec dec or sbb jle pop outsb lcall cmp jle jo rorb and (bad) movsb adc aad add ds mov and pop adc jecxz inc js add mov scas mov (bad) mov fisubrl scas mov and sbb pop rclb mov mov jg pop (bad) cld push or fimull in mov icebp insl sbb insl or mov mov std add xchg repz dec xchg or fnclex jbe inc leave dec sahf xor cmc test dec test mov imul fdivl mov stc mov out arpl mov addl add dec jno dec or dec lods push pushf push dec movsb int3 iret adc mov rol aaa adc ror daa push sarb ficomp int3 negb jge aam test sub fistl push xorl adc sbbl (bad) mov xor cli lods lret jle or push push and jl gs fidiv xor jae jns cmpsl dec mov and add out push sub mov xor dec adc pop dec scas std es pop lret dec pusha lret xor test movsb std fs lods nop hlt cwtl sbbb inc mov or loope pusha lods cmc imul push leave (bad) sub mov mov sti lret std pop mov sti xor repnz mov adc insl in (bad) in loopne jl cs cmpsl sub mov in ljmp jb sub in xor notl push pop leave cs push andl scas stc movsl xor mov push sub mov int3 dec roll mov rcrb inc test and mov xchg ss scas ss adc je mov dec or mov movl lods ret in loopne inc mov incb dec js cmpl fs repz inc cmpsb enter mov mov sub sub fwait adc mov pusha cmp notb dec sub pusha fnsave lock stc cwtl and xchg push cld mov inc xchg lret decb bound call fistp aas test cmp mov (bad) jb aad xor scas push dec call and and lds cmpb push xchg sub push push xchg adc gs mov cmpsl in cmpl sbb scas cli pop add out outsb inc test mov pop (bad) pusha outsl fsubrl pop notl push out aaa or jp fdivrl pop and lahf and pop pop cmpsb adc pop mov movsb mov and clc sub bnd loope je jmp mov cmc and (bad) hlt mov ss sbb sbb cli inc jns dec int leave mov jmp inc cmp jl aam add pop lahf iret (bad) (bad) ja (bad) sbb cs adc inc ja jl (bad) inc inc dec or sbb stc stos mov jns rcrl push inc push pop enter sahf cltd pop negl mov (bad) je push mov daa (bad) cmp scas adc and dec les stc leave pop cmp ret fsubl pop rclb fs sub add fwait mov fmuls pusha mov jne ss daa lahf js xor clc sbb sbb adc repnz hlt int3 adc mov pop pop daa ficompl cs aaa adc mov mov int sub fidiv adc and sti xor and mov lods adc jle add int3 int3 int3 int3 int3 int3 sbb ds fcmovu mov jle int3 sbb sbb cmp mov bnd jae enter andl add stc mov mov push jecxz scas add mov mov sarb lret ret push cmp xchg fistpll jno sbb sbb xchg scas leave icebp xor xor movsl je pushf hlt cmc pop imull enter pop imul inc fildl mov fsubrs adc ja fnstsw xor inc cmp lds pop jns mov fidivrl xchg insl arpl fdivrp add fs mov mov sub mov and mov ljmp movsl cmp shl adc mov pop les out push movsl lahf push addr16 mov add aaa imul or lret rol mov cmc jo test mov add inc mov lret sti data16 sahf leave out add jnp cmc imul fstps repnz shlb clc push jne lock cmp ds sbb mov mov sarb sub sub ss test sbb fwait sub or inc ljmp pop inc xchg ja mov pop arpl dec jp pusha idivb int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 lods push sub fcmove push sub cli pop fcmovne aaa cmpsl jle dec xchg xchg mov fsubl jae jb pop (bad) std ja ja rolb xchg int addr16 pop mov inc cmc push lret fwait imul shrl inc jo fucom out int push xchg sbb xchg or push and xchg fbstp and push mov mov arpl push inc sbb fistl shl sbb fdiv rclb mov push rorb mov mov pop and fmuls andb add mov adc jmp push pusha ret sbb inc cli fldt mov push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp aad push mov xchg sbb mov loop divb stos or inc cmc nop adcl fnstenv push lret loopne lcall je stos outsb sbb mov jp stos xor add stos push int3 ja jp jge jae fnstenv shrb scas lcall sbb jo push imul (bad) enter ret mov sbb out outsb sahf imul ja inc lea adc push mov dec inc and push lahf pop lock cwtl lret sbb sbb cmc mov outsl mov (bad) shlb pop shr hlt jnp scas adc xor push insl push sub test mov xchg or xrelease adc iret (bad) mov push fsubrs and cmp xchg xchg and (bad) xor nop mov jle stos mov adc fs pop int3 into pop fldt add jne or rclb xchg cmp lds rcl (bad) movsb mov lock (bad) add jmp shr ja push and sub mov adc repz das dec add rcrb mov aaa cmp xchg (bad) mov popa push sub es and call dec lods mov and out daa addl add mov cmp arpl pop cld and jl popa adc out or cmp test mov test lea js arpl or mov dec jg (bad) mov into gs and sbb test (bad) repz (bad) mov mov jae xor push pop mov (bad) xor inc push xchg mov mov dec repz stos addr16 xor adc xchg cmp fstps or sub pop dec cmp cmp div add lret sti pop movsb xchg pop into mov imul add lds push mov ss pop adc mov dec dec ret xlat pop popf xchg enter cmp inc push sub out mov pop loop fwait xchg lcall sub sbb hlt xor cmc jmp jne jecxz push cli movsb or loop mov xlat cmp (bad) and mov lret gs clc les or xor addr16 insl adc jmp mov mov cmp pusha push imul dec xchg (bad) add lahf fisubrl push pushf mov mov xor adc push les sub andb pop mov adc loopne push jg xor adc inc fstpt jl xchg fildll (bad) pop mov ljmp das and pop inc fiaddl xchg push cmp faddp mov cli lret test xchg fs sub ss popa xchg mov and rcl jb test adc out enter dec mov and ljmp aad jbe inc jmp (bad) xor insl je mov pop mov mov mov push out mov sar cmp and jae mov jl adc rcl cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 sbb xor inc subb push (bad) lea std mov (bad) xchg xchg sti jl int3 cmp addr16 xchg jbe ja sub repz add js scas roll xchg insl pop mov adc fs outsl xlat rcrb sbb dec mov aam xchg in cmp sbb or ds lret xor inc jl mov shlb fisttpll jbe add push icebp (bad) mov and mov xchg test js mov mov (bad) cmpsl xor push cmp (bad) imul std movsl push or (bad) das call repz (bad) rorl sahf inc adc jbe movsb mov add adc jno insl repz adc aas flds and (bad) jecxz sbb xlat ja push jp xor out push (bad) repz jle and lods inc fildl dec out mov pushf adc repnz jnp add in int jb pop push dec adc push mov mov xor daa popf pop cmp push loopne mov push cmpb xchg shl cmp rorb mov jge mov fisubr mov adc inc iret xchg pop inc (bad) inc and in jno xchg loope movsb into clc (bad) cmc adc in add sbb nop jg dec push nopl push or push or jne xor ficomp xchg or popa scas mov jae sub and cld nop inc push and (bad) hlt cld call add cmp out mov xchg inc testl xor incl or into sub mov loopne lret sbb sub js aaa add or pop jo aam test mov les pop jo adc lock cmovae imul clc dec sbb inc test sub sub xchg fadd cmc lods lds mov push xchg mov fcomps sub mov pop (bad) movsl popa imul shrb or mov loope mov (bad) aad test pop jnp adc mov xor int3 lods and xchg mov fldt test pop mov arpl inc or mov imul mov push xor jo mov ficoml sub adc fidivr negl pop xlat daa mov scas int3 push or inc rcrb (bad) pushf aad and movsb push popa cs ret cli jne insb push mov dec pop or das (bad) jmp ret fisttp jo pop jae pop sbb adc insl loopne rcll mov lods jmp xor cld popf hlt jo (bad) roll adc lea sub mov push mov jb sbb outsl mov pop in stos and fnstcw out mov cli inc pop idivb mov inc repz pop out test adc mov insl mov sarl repnz ljmp ja lret xchg stc scas ljmp roll xchg or imul lret andl rol lret dec inc pop sbb mov cmp push call pop out dec (bad) lret inc dec mov (bad) pop jbe out fwait (bad) lods sbb stos js lock negb test xchg enter mov hlt int3 mov mov or lret mov xchg push jo xorl jl cltd push inc xorb add (bad) shrb mov cmp lock mov fmuls mov adc pushl insb frndint rcll and inc nop mov mov mov loop popa pop cld lea sub mov fild sub sub test shll cmpsl stc fstpl xor daa into mov or cmp out popf js divl pusha in adc outsb or ja rclb scas mov imulb mov push or jo jb or jle jmp mov repz add jo int3 (bad) loopne rol (bad) in pop and pop int3 out (bad) mov js (bad) cmc inc xlat test fidivl or cmp cmp mov in jg cmp pop es es sub popf dec adc mov push and jge inc daa mov jae pop xchg add or sbb mov dec mov add add xchg jb or jnp rcrl mov imul adc outsb fidivrl mov mov cs outsl leave stos jmp dec inc sub insl data16 and sbb (bad) or push xchg xchg dec xchg rcll loop pop xchg int call jo dec push repz test xchg mov and jmp fiadd rorb std aas inc cmp add xor (bad) adc push mov push sbb ret mov add jns xchg sbb jle cmp sub lods xor imul dec repz dec enter xchg icebp gs sbb mov push push mov sub inc xchg and mov test mov in ds mov fs cld or adc mov fildl push dec sbbb dec rcll push sub ljmp push arpl and inc hlt pop jle xor cwtl outsb adc pop unpckhps sub pushf movsl cld daa cld cmp aam (bad) mov in outsl mov adc scas lea mov mov (bad) out mov test jae lds negl push insl adc std mov jg les cmpsb clc add rcll mov add jnp dec popa push sub int3 pop and mov outsl push scas and test jge arpl jmp bound (bad) and dec divl aas sbb nop cwtl cmp adc int or cmc addr16 frstor in xchg popf inc into push push sbb icebp dec mov les les dec inc mov mov nop stos mov out in stc pop push adc adc mov jb test xchg xor (bad) pop mov movsl mov cltd cmpb and iret dec call das and mov mov mov pop leave sarl cmp mov jnp jp sarl mov sti int cmpsb fwait cmp dec mov xchg mov js scas jle (bad) ret fidiv lret xor (bad) pop push outsb lret sub pop adcl aad pop jmp pop jge (bad) mov push fwait push pop fldcw clc xchg mov push inc or imul mov std dec xchg push loope xchg pop and add (bad) (bad) or push jne sti push mov cmp fimull mov or je (bad) sub fs pop sahf dec loope outsl mov addl mov sarb test pop mov sbb icebp jp mov inc pop jb,pn in iret scas stos push rclb inc mov mov sub dec dec cmp dec and add test addr16 int repnz inc push mov (bad) les stc push fwait aas or test in xchg inc cmp cmp adc sbb push pop push cltd adc int3 inc je int3 cmpsb xchg fdivrl test dec or andl dec jp out pop popf je sub lds xchg insl jmp repz mov mov cmpl nop dec std push and (bad) call stc cmp or mov pushf test loope jb lock lock gs mov in inc mov push mov rcr data16 xchg mov repnz popf movsl push and inc xor gs insb xor adc sbbb ja insl aaa cmpsl push fwait mov test mov inc inc or sbbl cld sbb stos pop cmpsb jne mov jecxz loop (bad) xor push dec jns jecxz xchg add push into push int arpl (bad) lock movsb push cmp jle inc cmp inc mov pop sahf mov jmp rorb shlb mov jg lds imul scas movsl lds ja push mov xchg dec in inc xchg imul push inc lret sub icebp imul loopne or stos (bad) adc dec adc in mov gs add pop out xchg ds push (bad) adc mov adc or lock sub push fs mov outsl xchg addl data16 out pop xchg es jge sbb cwtl add mov pop pop sub (bad) (bad) push adc xor lret xchg push cmp push adc test mov mov mov ret negl pusha jmp imul lods adc sub pop push movsl (bad) cmp jg or aas bound fcoms (bad) test mov adc xchg add out add movhps cmpsb ljmp in mov hlt or orl addl inc (bad) hlt mov pop mov out jge cmp shrb ja adc cmp fcoms or xor mov cmpsl pop mov scas cltd push icebp int out jne sbb add das jno add mov popa mov mov jo sub xchg adc mov dec push add cmp out pop push lds (bad) repz (bad) or (bad) rcr int3 mov imul push inc out fs sbb dec mov call push xor cmp mov add add cmpsb out dec sbb cli pop add jle jle ror xchg (bad) xchg out mov jp xchg cmp mov sti pop int3 hlt movsl push jb and ljmp rcl add fbstp adc sbb xor int3 mov fist push popf popf sub loope repz mov xchg sbb in mov fmull sub xchg lret testl dec int3 mov sub mov dec insl sbb repz int jge loop inc dec icebp aaa mov lds or enter into push push pop jno cmp jecxz add pop shrb (bad) sub test xchg mov add cmp xchg sti decl jmp mov addr16 stos popf in xorl int3 decb shlb mov (bad) lea jbe inc in sub dec icebp xor out sub aam dec or push push mov in int pop in hlt bound pushf jnp pop into sub pop (bad) mov pop test stc mov xchg pop add push pop imul and fistpll add fwait dec jae nop push iret dec fxch sub ljmp dec fisubr push repnz imul adc shr scas xchg fwait and dec test rcrb inc out jb jbe aaa inc bound mov cltd out aaa push pop cmp sbb or adc push int mov sbb into sub call adc push fdivs xor rorl inc mov jns idivb insb adc mov mov psubd loope add push dec mov inc xchg and xlat les aaa lret addr16 inc push cld flds or mov repz xchg and rcrb jb cmp jno add inc fs pop and rcr and add push rolb (bad) fcoml adc pop push lods push and push xor cmp mov mov fimul mov xor imul pop pop add out push mov lods jbe pushl mov jno dec gs leave pushf cwtl sub pop mov or fstps fldcw nop in or pusha or jnp nop add movsl mov data16 pop (bad) scas dec adc dec sbb mov add out pop data16 jge pop sbb enter xor and daa mov dec and jo test xchg pop (bad) in in mov dec scas stc lahf or fs enter xor dec push scas jge addb in cltd lret fwait dec inc jecxz es test adc push push push mov std cmp notl daa pop js popl clc cmp pushl (bad) fcmovbe sti sahf mov (bad) in fnstsw es cmpl out data16 jecxz pop sbb inc mov scas push push and imul in ds xor xchg sbb dec and xchg add mov out mov sbb push mov (bad) cmp lcall gs adc push push cmp lock push repz aaa out push pop cmp adc comiss dec mov dec icebp ss mov cmp cmp es adc or pop push dec (bad) xlat inc xor dec (bad) outsb cmp lret mov inc or mov int3 sbb fisubr or dec cmpsl pop ficoml (bad) sub push jmp pushl in sub lods mov cmp test popf xchg or test in in pop mov push cmpsl push (bad) dec add pop clc pop pop pop mov and and js lods sbb and dec fcmovbe mov bound jl (bad) clc sahf scas pop sbb mov sub ret arpl ds cmpl test or out mov bnd subl js out mov push stc fnstenv pushf push push bound mov inc (bad) add std or into dec lahf jecxz stc (bad) lea cmc pop jo icebp ds testb outsl inc sub mov push push mov cmp xor cltd inc xchg cmp into jmp adc push jae (bad) and sbb cmpsl mov cmp ds lods push popf out mov xchg test inc test xchg inc pop icebp cmp lea loopne (bad) sti les cltd mull cmp lods inc adc enter pushf repz and jae cld or push mov repz fdivrl imul cmpsl test stos sbb lods xchg and or cwtl xchg mov inc lea inc cltd hlt sbb pop adc cmpsl and cmp and push dec je sub mov mov pop jge and sti enter je gs mov stos out hlt (bad) adc in mov aas ljmp mov xchg mov stc movntq push inc lcall mov scas jo xchg pop gs dec mov dec dec add sbb sbb jmp scas pop test or ret ret inc in xchg mov or das rorl inc push pusha movsl mov enter push das loopne fwait mov call popa (bad) testb leave dec icebp aaa data16 nop pop arpl xchg inc xor mov call bound jl and pop dec mov test dec cmpsl jb xchg jnp icebp jb out pop cmpsb cmpb inc dec je lret std ret pusha push jb push loop lea fld jne jmp xchg cmp (bad) in sbb das lret lahf cmp and lods or sbb (bad) outsl push xchg test jbe sbb (bad) xlat jle adc cmpsl pop stos fisubrl repz xor xor (bad) fsubl cmc je pop mov mov popa push mov idivl lret xor and loopne test xchg dec cli xchg in mov add adc gs (bad) scas clc adc adc roll xchg (bad) mov inc adc jbe lds addr16 push lret call mov inc sub cltd shrb incl xchg xchg int3 aam shll popf xchg jnp push cmpsb fs stc scas stos and les inc xor mov push addb stos fldcw ss cmpsb inc test mov out imul (bad) mov cmp das in rcrb mov sub pop push dec vmread pop xchg out mov jecxz (bad) mov jp and add outsb add mov or vorps xchg cmpsl or jl arpl inc (bad) mov cmp fildll insl out xor xchg enter je sbb pushf cltd (bad) xor add imul inc loope or cs (bad) xchg sbb out sub daa push fistl pop xchg cmp jecxz loope scas jge das stos adc std faddl xchg sahf lcall sbb or xchg jns lcall cmp pop roll add pop mov push and repz mov lahf mov push sbb (bad) inc dec fs cld out add xchg test ret sbb dec xchg mov pop xchg pushl imul push fmuls pop pop sub test or mov jg ds sbb dec fwait clc lods jns or leave ljmp cmp cmp mov mov mov lea or loopne cltd dec stc push pop lret into or movsb pop out bound push shl repz pop and aad inc fisub gs adc xchg ljmp push inc xor jl xor adc dec fisttpl sub cmp push outsb pop mov sbb add jle and daa ljmp out imul sbb ss pop push jbe mov sub mov xchg movsb sahf and (bad) sub sbb popa cmpsl push addr16 sbb xchg push mov adc xchg xor jecxz aad mov pop fs out cli xchg mov cmp sub (bad) mov dec add jp push xchg adc fmuls sbb scas insl mov cmp imul inc pop in rcl stos mov out add imul and sub cmp inc push xchg mov hlt ja outsl pusha push pop (bad) dec sti mov sub lcall jb sahf iret outsl mov mov dec push insb frstor mov sub xchg int inc jae and pop xor mov pop cli inc dec xchg lods loope lcall pop fildl dec (bad) lods jne jbe test fldt mov adcl and popf jbe iret push and xlat decl pop leave mov push out cmp ja scas lcall jnp pop push inc addr16 mov popa push adcl repnz push notl or es push icebp out mov fildl negb xchg sahf mov not repnz adc mov mov test mov call cmp mov xor call in xchg inc adc cmp pusha adc das mov out lcall inc mov push fcmovnbe cld movsl push (bad) mov scas dec push sar in push jb xor mov mov ds and (bad) leave jnp push adc xchg aas sub dec sti pop and cli mov sbb bound (bad) sbb loop addr16 and je cmpsb and mov jge std rorl stos cmc loope ja cs dec lock xor stos (bad) xchg cmc popf push cmp arpl mov jnp mov adc inc dec and or inc fs pushf xchg add push xor lret xor adc loop push adc fwait dec cmp scas lcall fisubl mov cli sbb clc lret rclb daa sbb fwait xor sbb push fadd mov jecxz andb hlt cmp call adc fimull jo (bad) adc jno adc xor or int mov xor mov inc ror mov mov test jp mov inc push push lods add mov and push je xchg aaa jbe imul addb jp xor insl int3 jbe cmpsb mov arpl cmpsl or mov sti ret or repnz sbb adc dec add pop int3 imul loop stc xor out jl mov add loopne sahf stos je imulb into inc adc scas bound insl ret cmp fsub fcmovb cmpl mov lcall test push jae jb lods mov mov (bad) mov adc loope lret es xor das outsb nop fldcw xchg les pop cli cmp adc int3 or cltd cmp mov imul (bad) ja push js dec lods ret cmpsl inc add sbb pop push es js aam adc int3 mov jb mov cmp test cmp mov sbb cwtl jge stc std and out sti in push xchg dec jg xlat mov ljmp insl dec imul fnstsw mov mov cmpsb xor xchg (bad) xor inc lock jmp push dec pop push dec clc movsl add lods ret pop into dec sub push adc jg fsubrl punpckhbw sbb sub cli jle cmp adc mov jmp and lcall int stc repz push lds add out pop jmp imull in mov xchg mov cltd repnz imul int sbb sub gs or cmp adc lret in cltd sbb cs sahf incl (bad) push xorl push aad arpl into push push imul cmpsb les sbb push mov sbb (bad) gs fildl push jle,pn ja ror sub scas orl cs scas addr16 inc jg add repnz sbb inc in je out adc inc mov fs add inc jae add outsl push sbb pop je cmc mov in push popf add call push loop adc insl push notl cltd add jo std sub subl adc loope mov jg xchg outsb mov and xchg jle cmp hlt popf jbe inc cmp adc mov mov flds mov cmp (bad) mov popf dec jp mov (bad) or andb aam mov cs jbe or sbb mov adcb mov jecxz xor mov or pop cmp insl sbb icebp lahf dec ja rcll lcall out xor fsubs push and ret adc stos jb push mov stc jg add mov std push ja rorl (bad) inc stc popa and push dec sahf cwtl cltd sub inc and lahf fcoml fildll repnz test dec rcll lahf jae jne stos xor pop xor movsb adc test inc and fldz (bad) mov inc mov mov pop push insl jp or mov notl jp push ja rcr sub pop scas nop inc sbb add mov cltd popf std cmpsl sbb push adc cli hlt and push jne pop imul and push and jno pop daa xor insb outsb sbb rorb test xor or xchg inc jne fstl in sahf test push add iret mov scas lahf jmp mov or inc (bad) jl into bound push out scas pop out inc mov mov mov and dec mov dec bound lds (bad) add mov mov mov movsb les add das mov inc (bad) pop mov add mov sbb dec nop movsl aad adc adc jmp xchg mov into mov cmpsb mov pop xor and pusha fwait dec adc dec mov mov hlt adc sbb fwait loopne cwtl cwtl loop out push in dec mov adcl xor mov jb hlt in xchg or (bad) sub clc (bad) mov bound lods mov mov out and push aaa and mov dec lret and push and pop dec clc xchg xor movsb fsub test sbb lods mov mov xchg sbb mov or fisttp cli (bad) dec xchg subl pop jne in fidivr dec push fs (bad) mov push xchg std cli cmp (bad) dec (bad) int3 cmpl ficom cmp les into jo push pop xor or push daa jecxz mov xor jae mov lahf mov push call dec cmp outsb pop sub sub dec in sbb in jnp and adc mov stc push cli inc les mov loope push leave cmpsl dec mov int out dec in rep loopne jae mov jbe loop sti mov les mov dec imul xchg stos inc or cmc aad xor push fistp loop dec cmc mov sub fstpt out pop jo fisttpl rclb lds (bad) xor call ds mov inc jb dec pop icebp sbb mov xchg xor adc inc (bad) loope inc lods sbb mov ljmp jl xchg mov test sbb outsb rorl mov push icebp into or loop call xchg cld cmp gs xor mov mov sub sbb mov dec push or nop cmp pop lcall mov pop nop xor adc lea dec out int ss mov fiadd jno add imul in dec outsl cmp popa pop and mov (bad) mov mov mov leave mov lods out pop mov push and mov jnp inc mov inc mov dec lret adc xor xor sub sbb lret xchg fsubl ljmp gs xorl add pop hlt pop int sbb sub pop scas lretw aas (bad) xor les dec jo xchg add sahf pop insl mov cmpsb and scas pop sbb clc loopne insl add loope repz jbe fmul test sub jp scas add pand fnstcw mov sbb push pusha mov test adc es push cmp jb sub daa sbb leave jnp nop ret xchg hlt stos mov je add lahf jmp push inc in or jnp adc push lcall stos mov mov pop inc cmp xchg mov out jnp dec inc das fistp std xchg mov daa ret or sbb xlat divb ret ja adc jne xchg pop xchg daa in jmp lea adc loope xor pop scas call mov xchg mov repz cmp ror adc mov push push clc xor movl sbb ljmp mov test sub outsl in dec imul or fidiv xor mov andl das add cmc mov lret xchg dec in inc std xor or push and or cmp test movsb xchg adc popf sbb test jns pop (bad) xor (bad) lds out pusha inc push cltd jl mov sahf (bad) stos jnp ja adc mov inc outsl movsl (bad) fcmove cli lds mov xchg xor ljmp out xlat cmpsb cld xor pop aaa adc outsb xlat imul pushf add clc int jae addr16 push daa xor movsb sarl les pop lods imul aaa addr16 dec jae mov pop into js insb pop inc loop mov xchg call insb mov out lock pop loop pop jo or fs push cmp add repz enter jp loope sar std sbb roll aas cld test lcall les lcall ljmp popf push bound mov test lcall pop js add or xchg or stc adc adc and mov dec hlt cmp pop dec rcl call ret movsl es xchg push das dec (bad) mov lahf pop bnd (bad) out (bad) cmc test cld or dec fldl jo out sti sbb xor ret or inc lahf sbb push xchg xor mov cmpsl pop es ss test out shll inc add int cmp andb iret adc mov in mov in xchg xor notl sub or lcall mov fwait insl nop daa leave and inc jne mov popf in in mov mov imul inc out cmc loopne inc pop lods outsl in stc xchg push mov jnp dec mov mov pop out popa mov inc shl pop mov (bad) mov ret test inc mov mov gs enter rcrl adc ffreep out jae (bad) xchg das jge mov adcb fisttpl pop popl sub jnp ss imul add mov (bad) in jo jecxz out dec and bound movsb enter shll mov int3 xor push (bad) dec jmp cmc pop out mov clc jnp in inc push pop lret inc ss fidivr outsb addl sbb ljmp into xchg sub in in inc pop cld pop data16 popf mov (bad) call imul shr adc sub push jo pushf daa mov les pop and out stos out std cwtl cmp mov fldcw pop pop inc pop rorb sbb seto xchg (bad) scas inc cmp mov pop pop cmp ja fistpl scas sub lods dec or xchg popf xor mov cli mov sub rolb mov imul fdivr xchg xchg sbb push stc dec sub jno mov faddl mov pop and mov ljmp bound add jb (bad) mov mov mov xchg mov icebp adc pop hlt or pop insl faddl mov (bad) or pop inc int3 dec jns dec jbe add mov xor out rorb jno sarl sbb stos xchg cmp and adc and lds aas fwait pop xchg pop clc leave rolb sti push sub add negb mov inc push ss pop lret cmp inc xchg roll mov arpl add imul mov and out loope cmpsl dec xor mov dec outsb adc fildll cmp cltd jb jecxz ss adc mov dec lret ret mov clc sbb push add adc jne movsb popa mov xor addr16 es cmp sarl xor mov clc sahf test fwait outsb out or or jo sbb ret xchg push daa fwait imul ret lds mov scas cmpsb roll fs pop inc push fcmove adc cltd sbb imul xor adc cli lcall add mov imul cmp cmp jnp fsts sbb fisttp stos stc fiaddl adc sub imul (bad) sbb les movsl and into stc out outsb cld adc sahf pop xchg cmp push sbb sub mov das das sbbl xor mov fisubl pop mov xchg push pop lea push lret xor add adc xor cmp pop pop in inc fnstsw popa leave or or inc add xlat push mov insl xchg add xchg add cltd xlat add jg test orb loopne addr16 ret pop aas cmp sub mov outsb and stc mov cs push fwait nop mov and push jo xchg xchg jle and ret mov popa pushf out lods in or sbb addr16 dec imul imul pop fidiv mov dec or xchg mov sub rolb inc push into or adc insb xor repnz cmp pop scas dec out xchg dec inc pop xor push xchg pcmpeqb repz (bad) fld push pop jb fdivrl cli fisttpll xlat sbb aas inc or add outsl test cltd cli xor sahf (bad) nop loope mov jne fcompl push nop in enter xor cmpsb mov mov pop fidivr loope in and addr16 call mov (bad) pop inc leave and pop add cwtl push outsb add ja push add cmc lds adc out insl ret and int3 leave lahf mov into rolb xchg test lds outsb out dec mov or push push mov lret jle jbe or sbb mov cmpsb (bad) xor xor adc in push addr16 push add add pop cmp in jne (bad) mov add mov and cmp or pop push arpl pop cmpsl aas inc jp mov pop jne loope mov dec aaa pusha les inc decl aam clc add and and test mov xchg lea xchg repz daa in push add stos aad dec out mov cwtl mov push pop sub mov jl adc and pop or push loopne ss pop loope fdivrl xor push dec in pop adc pop sub (bad) stos push push mov dec bound nop hlt stos (bad) das lret pop repz cwtl icebp stos outsl hlt and push dec xor movsl (bad) mov int xchg outsb dec jbe inc push push loope inc sub lahf cli lock xor sarb dec xor adc mov es mov aas xchg std jge sbb sbb dec dec add pop lods sub mov lret push push and (bad) icebp mov or pushf sbb pusha xchg sahf rcll add mov (bad) push jae pop and (bad) (bad) cmc packuswb add rclb lcall and xchg stos xor cs sub adc movsl mov mov xor sub and daa xlat add dec bound sub pop test add and push dec xchg lds pop mov or (bad) fldt aas pop test scas mov pop nop js mov mov (bad) and fidivr fdivrs mov and or jns repz cltd mov xor xchg scas inc movsb inc xchg jb aam sbb mov mov cwtl out int repz push and dec sub mov (bad) fmul popf bnd jl popf inc dec fsub nop addr16 test ljmp add jge push xchg sahf inc aaa dec and scas nop mov mov loopne mov (bad) dec test mov inc leave pop fistl sarl test (bad) add dec or mov and call int dec iret jge cli and test das cmpl mov fs lock sbb mov popa cwtl push mov mov mov push mov lods fdivrl and ljmp jp in cltd clc std mov divb in push pop cmp nop xchg add cmpsb test into in jge sbb dec xor lock xlat sub and clc xchg loopne (bad) out mov cmp (bad) (bad) xchg loopne add push add jmp test test sbb adc call mov push inc pop or and push (bad) lret rcll vmread pop cld addr16 clc lock (bad) (bad) aad cmp popa and inc insb ficoml xor mov fisub rclb lods gs pop fdivrs fcoms xchg push push clc lret jo mov mov aam mov pop xchg cwtl jbe arpl outsl inc sub dec inc adc cmp jbe jmp cmp cmp mov pop mov sub movsb aaa shlb mov mov in xor sub xchg dec mov mulb mov stos jns faddl insb dec xchg mov mov ja arpl jne ljmp in int enter paddusw or jl inc jae std hlt aaa adc lcall xchg jb int mov xchg sub sarb fwait repz (bad) adc loope mov (bad) (bad) and fwait in add pop sbb out adc add dec xchg fs sbb sarb test repz mov or pmullw push imulb pop fdiv out inc xor les das pop add insl ficoml mov negb mov fwait test pop mov and aaa mov lods cmpsl sbb loope aas ds lods xchg add testl add xor xchg sbb loope ss cmc jae xchg stos sahf lods loope call sub xchg ja scas or outsl mov xor adc jae (bad) jp and stos jno movl clc xor jmp jae cmp dec mov (bad) es mov mov stc fwait push xchg push and inc popf xor sbb call cmp aad pop lret adc jae scas sbb in sbb jp pop fistpll lds mov push lcall dec cmp push mov xlat push xchg add adc cmovo arpl jae or mov mov lahf mov (bad) add inc mov mov mov lahf push add and in in fadds out rcrl int in push outsl mov dec testb inc push std jecxz push shl dec sub ds sbb cltd (bad) jo (bad) xor cmp dec (bad) mov les in cmc mov je imul and xor loopne xchg out pop iret cmp pop call sbb add call or js lds and and in addl pushf iret ds jmp decl repnz clc mov inc sub (bad) mov fwait popa cwtl push mov int add (bad) mov int leave cmp mov sub inc mov xlat xchg mov lret test shr lret cld jl mov aam mov cmp cmp adcl add out in cmpsb in jbe pop cmp inc mov pop pop cmovns dec mov test push aaa cs test in loope out or call xor adc (bad) repnz push push mov inc sbb ds push in stos sbb cmpsl (bad) lret mov jno cmpsl int and ficompl dec sarb xchg push loop cmc push push or pusha push icebp xchg dec add sub aam xor mov leave pushf inc add dec mov pop mov test jnp add adc fldcw cwtl pop movsb add cld repz and mov mov push xchg add cli imul jg outsb mov push fcom sbb pop mov sub mov mov xor idiv mov insb push push icebp fisubr addr16 adc (bad) (bad) mov sub (bad) mov loope or adc cmp cwtl into pop sub cld push (bad) or xor sti inc aad in xorb cmp jl inc aas xchg test mov int rorl push lods push pop in and and xchg push faddl add inc or test sub sbb sarl es addr16 inc adc movsb sub enter push jl (bad) and jmp mov loopne and ljmp imul or push inc jmp mov fimull mov add xchg nop icebp rclb dec jg outsb fcmove repnz hlt jbe sub jecxz and and and mov cmpsb sub xchg cmpsl nop inc arpl out mov ret sub scas mov call cmp std adc push adc push rclb fucom lock mov fdivp and xor leave arpl lahf or push sbb inc or sub pop out jne and icebp and cmp push imul xor sahf dec jge push sbb and shll iret xlat int3 sarl push mov into stos jle add je mov sub mov bound movsb ja jp mov fiaddl ret lds fsubl test dec mov or push mov xor leave pop daa mov mov test adc gs in shll xchg sbb (bad) loope rorb cli lret mov pop jecxz ret bound (bad) xor cmp xchg dec sbb and aas pop popf mov dec test push pop (bad) xor js or mov and push push jmp stc arpl call lock hlt sub push (bad) mov loop fdivrl dec push out es cmpsl in pop movsb adc push mov push mov xor or inc addb mov adc push out mov mov mov sarl sbb lds or mov cmpsb (bad) repnz sbb mov mov ret pop lea or data16 sbb fisttpll or in fdivrs pop or or scas fild ret sar cmpsb xchg or imul sahf sub cmpsl ret std mov and sub push cli scas adc fcmovnu jb xchg and ja gs lcall xchg pushf icebp mov shr xor loopne (bad) mov mov sbb sbb inc mov test pop lahf cmpsb shl scas outsb andl test mov rorl push iret (bad) sahf pusha jl mov sbb enter and jge xor test out std push push mov add aaa inc jno fistp fdiv lahf add or inc out psllq mov mov lds popf xor push sbb jo inc or (bad) jmp pop mov (bad) mulb mov ljmp (bad) jecxz fnsave lds pop sub jl jl call mov test (bad) sti pop js push (bad) iret nop xor fs cld lcall xchg pop xor jecxz ljmp fstpl shrl lret cli push cmp or jg pop pop mov cwtl fcos xor mov stc je mov (bad) dec stos cmp or add inc inc mov (bad) (bad) cmp mov or stos adc (bad) jmp xor and ds mov loop bound arpl (bad) jnp inc inc add xchg and call push cltd js mov addr16 dec sarb xor push mov push mov inc fs aaa push and xchg jbe (bad) hlt ja sahf inc adc cmp mov jo or cmc and out add or sbb jae and adc into in or lods push and cmpsl adc xor fiaddl nop mov cmp outsb add leave dec push lret fildll in inc and loope sub mov jo pop mov pop push stos adc ret xor jmp test jle mov xor sbb cmpl add (bad) clc jo adc add add mov iret xlat mov test push das jp sbb push pop (bad) in ss xlat insl jae ljmp mov aas (bad) div or int test mov sub sbbl xor cld mov jnp pop leave aam or mov cmp inc aam jno mov jbe subl pushf enter aad push xchg cmp mov or ljmp mov mov imul cmpsl lret cmp push sarl in outsb adc sub push pop push adc subl lret pop ficompl mov dec push xor mov test (bad) adc mov (bad) gs xlat pop or lret jg xchg or push psubq dec inc xchg mov pop cmp sbb test sub (bad) test std dec push sahf clc incl out outsb push pop jge hlt xchg adc mov or stos inc or out bnd mov xchg test (bad) adc insl dec movsl mov leave repz push mov inc sbb lods mov pusha jecxz (bad) repnz jb out test pop fsubrl dec inc inc mov or movsl pop mov inc inc mov push cmp out out fcoms adc and cmc (bad) leave out jns adc xchg aaa dec orl or push fdivrp stos xlat dec pop (bad) repz nop or push xor or int orl js xchg (bad) cmp xor jge jge icebp scas scas jnp xchg fwait cltd mov cmp cmp cmp insl hlt mov xor mov loope addr16 sbb adc push addl fbld popf push mov push (bad) or rolb bound mov adc lahf sarb sub lods shrl cwtl pop ss (bad) xchg ficom loope lods ret pop lods loopne sahf (bad) mov jp fisttpl lea ds (bad) adc addr16 sti mov fdiv gs jae movsb push scas pop lret add jnp pop lcall xchg andl jl jae pop out jecxz xor je daa sbb sti out and sub repz cmpsl mov cwtl pop xlat mov movsb ljmp out icebp jmp dec js mov dec push adc in and bt push call jb adc call orl mov push sti lea insl test sub rcrb (bad) add int3 xchg sar int push lock mov xchg aaa xchg jle icebp mov xor cli jns das xchg adc cmpsl stos or push or sbb jge pop jge inc icebp sbb (bad) jne mov es outsb movsb cmp jecxz,pt je lahf mov rcll movsl enter ffreep mov jge lret call sub push push pop jno int lcall fsts sub iret mov dec addr16 xchg insb popa (bad) fnstcw jae cmpsl leave xchg sub xchg clc mov fnop mov jmp insb repnz mov adc notb xor sbb jg jg (bad) pusha pop bound pop loop dec xor lods repz mov clc adc movsb jmp add sbb aas das push (bad) push or ss cmp daa movsl xor addr16 mov mov out loop je sub pop cmp xchg lock cmp dec outsl add sbb je,pn cld fisub mov fwait icebp in inc sbb call add rcrl js push bound loope call in movsl jns mov jb mov test je jae mov mov add imulb aad adc pop and (bad) mov scas scas mov sub jle ret push push mov pushf pushf popf imul and sbb lret jecxz inc sub shrb adc in cli pop jp or cmp inc movsb mov pop and aam and xchg nop inc int dec test dec cmpsb enter xchg dec mov pop and fnsetpm(287 add xchg cwtl pop mov es cmp cmp imul imul hlt xor adc lcall ja jb movsl xchg cmp pop (bad) or cmp dec ss xchg rcl shrl mov jno xchg loopne xchg jb rorb nop fidivr rol sub mov add in xor cmpsb fwait shr test sbb (bad) pop lds rorl inc sbb sub add cmp lret subl or add jge iret jp mov dec xchg sbb scas lea push movsb xor arpl scas jge mov mov inc cmpsl daa shrl mov dec outsl out xchg jo repnz lock fldl in add lds inc adc bound std cld mov jb lods scas fisubl push scas ds inc rolb add in dec sbb jecxz (bad) mov inc xchg mov dec repz in pop or js lods ds mov xchg xchg add (bad) jge sub dec pushf in xchg push lods dec (bad) nop das add shrl pop jno (bad) sti and insl imul push test push pushf addr16 mov mov push adc push cli lods or mov lods xchg and dec loopne aam fs inc pop jmp jns scas xchg adc call js mov daa int3 inc dec xor jnp pop leave inc cmp mov rcll sub mov pop out mov fwait cs loope mov jnp mov pop adc pop sub (bad) into cmp popa pop inc mov lret icebp ffreep int3 xchg cs aam out lcall (bad) jne mov mov xchg fs mov (bad) pop push cli jne mov sbb xlat ss out es loopne jno loope,pt cmp dec xor cmp sbb push xchg cli in mov push popa fiaddl pop cs mov test (bad) pop jmp add imul jns rorb pop sbb in test in das imul addb sbb mov es adc pop inc scas (bad) outsb fsubr into negl das adc int call insl dec inc adc or ret jo cld sarl cs pop mov fldcw add push mov inc jp daa je cltd pop sub sbb mov stc and data16 in mov fisttp add or lods xor jmp dec or push out inc call inc sbb (bad) dec in popw sarb insl cmp cmp lods push or mov arpl pop test push inc sbb sub xchg daa out or and addl daa stos adc ret sti or les jbe or inc cmp fcmovbe repnz ror jecxz insl imul repnz inc fmulp and add xchg push fs es lds xchg mov and and stc jg lock adc in mov clc ljmp adc inc jnp pop dec je nop les iret mov xchg clc mov and mov sti mov add rorb mov push pop and jns pop (bad) pop cmp xchg (bad) fwait pop fnstsw addl sbb dec (bad) insl enter sbb pop jae or adc data16 pop std or jp das xchg mov xchg inc cmp xchg add aaa mov add inc sbb sub adc jp mov jnp sub xchg sub and push mov cmpsl (bad) fld and ficom jno loop cltd cld lock stc ret inc std sahf xchg inc lods add jo adc push clc clc in mov loop pop xchg ds sbbl div pop or mov dec lcall jge insl mov add xor inc sub adc jns movsb es adc push add or cld inc xchg and call push lcall imul lret dec shrl mov out xor js mov cltd inc inc inc add jecxz icebp jp incl xor mov mov arpl test hlt aaa fcomps test jle jno (bad) adc out pop jbe lods lds adc sbb mov cmc sub clc add aas (bad) fistl mov daa std jno subb dec mov js mov jmp push mov dec fsubrl repnz mov (bad) and repz push and movsl xchg push nop rorb push cmpsl adcl inc or les scas lahf (bad) mov mov jb repz repz out pop movsb xchg mov das inc pushf loopne sub in inc xor jmp fisubrl jne mov outsl xor push mov dec flds es adc and adc push (bad) jmp loope in lahf xchg (bad) decb add in lret in ds faddl (bad) or mov movsl sti int3 mov pop outsl das rolb insb adc jecxz inc es (bad) (bad) xor xchg in mov push or mov aam ret xchg sub mov stc test cmp shrl sub push xchg stc repz pop ss out cmpsw mov inc push cmp fistl push xchg inc mov ja jl loop imul mov bound jo sbb or sub sub add adc mov push fs out imul rcll movsl add fs insb adc scas lds mov data16 lea mov dec es push push dec sbb outsl push adc xchg adc mov or xorl sbb mov fdivs sbb pop ret cli push cmp or fcompl push jle and mov sbb mov cmp enter dec and mov mov sbb lcall cmp fsubs imul fisubr ror add mov repnz jle mov lret mov mov lahf lods dec jo cli in xchg pop add xchg repnz rcl ds xchg into fistp dec push leave out jg ja inc and inc adc xchg js cmpsl and (bad) (bad) repnz repz scas ffree inc push in outsb lea das enter aaa inc dec sti fisttpll adc in fwait lret (bad) jb mov out pop gs (bad) out aas ja out jg ja icebp arpl pushf mov jl push xchg into inc pop stos dec decl inc mov stos and sub cmp mov iret or ja test push adc (bad) or cmpsl pop lea xor das add mov add and pop sub mov fcompl push rcl sub sub pop ja sbb shll mov add push cmpl movsl xchg cld (bad) cmpsb nop in ja or mov and mov jmp repz cli lret neg pop mov icebp push call push push and or add push pop imul cmp shlb add inc pop xor cmc push adc mov inc cmp stc pop pop lock or sbb pop mov rcrl sub cmp ret ret lret add cmp idivb addl sub leave pop sub mov push jno xor in and insl cmpsb pop xchg and jno stc fcoml push imul sbb inc insb das xchg fs cmp mov sbb test inc insl insl push xchg popl inc gs rcrb pop cmp ss push addb es mov mov push stos pop inc jb push int3 mov insb cmpsl outsb fnstenv lds inc mov mov fnstenv stos xlat call and inc mov test in pushl mov sbb rcll cwtl test fisttpl push cltd inc mov cmp xor bound repz fldz lock dec jns cmp ss adc adc sahf int3 repz or movsb test inc shl jecxz sub call stos cmc into jecxz or pop movb sub xchg les push enter add scas je mov enter jo cmp xor push sti or aaa pop iret shl lret mov jo inc ljmp push je inc jge adc jno imul mov mov incl cmp push jle scas aam push jl lds xchg (bad) cli mov scas enter pop and imul mov sahf movsb mov lock notl pushf (bad) repz out leave pop test (bad) mov ret pop xchg dec push mov fcomps cmp add in je push mov xor int3 mov aas subl in mov and add add xchg stos sub and mov int3 jne cmpsb push mov or mov sub dec test xchg call adc pop mov add insl xchg xchg sub hlt in aam fldl pop outsb iret jmp push dec mov aam iret add int es mov shrb or or xor daa aaa inc xchg lea (bad) sti jge mov adc test andl sahf imulb aam push stc xor (bad) sub insb pusha push adc and jo ret sub mulb push add mov add cmpsb imul adc dec sub mov mov inc jae mov mov sub push daa ficoml and mov mov imull or ss repnz adc dec movsl outsb adc and adc sbb hlt xchg jp es ja orl jecxz and mov push push addr16 jnp push jo mov data16 adc pop fdivrp xchg or and dec cmpsl push imul pop addr16 xchg insb or iretw adc push insl insl imul push clc cmp aaa xorl loope or add jbe fadd add add push imul mov sbb gs add lock mov fs test (bad) mov (bad) mov or insb cmp out fiadd adc push fs gs loop out (bad) aas cmp outsl addr16 lahf dec pop push pop imul inc divb (bad) add pop jno out shr and mov ficomp add out xchg (bad) adc jmp clc sub inc sub mov push push jb fnstsw mov negl push and or rolb lock sbb lock sub dec mov jge rolb push mov shll movsl daa loope aad jle or inc xchg pop loopne sub push das fstpt data16 mov lea ret fcmovnbe xchg in or bound aaa fimull push outsl lock jle mov inc faddl mov mov ffree pop xchg push jno outsb and fs addb or mov sti sub sbb movsb cmp int les add jecxz pop xchg lds jp xchg ficom aad jo cmp mov mov mov std into cwtl hlt pop push js adc xor mov sub popa xchg adc jp ljmp loope lds stos mov hlt pop mov pusha loopne and inc mov dec notb (bad) shlb in xorl fnstenv sub dec mov js push bound cmp xchg pusha fwait push arpl test ror cld insl inc sahf hlt lahf icebp mov push mov jb in sub xchg insb das mov repnz mov outsb jno pusha cmp movsl mov or daa pushf cwtl pop lds in dec fs out push dec in cmp sbb pusha (bad) adc iret lret xor clc mov stos rcrb xchg push adc push in sub sbb (bad) xlat dec ret ret rcr xor dec xor push sbb hlt sbb test add xor push into (bad) cld ss or cld xor int3 xchg (bad) cmpsb jbe sbb jo nop insb sub inc lds loopne (bad) ret cmp mov cmpsb and je cmpsb sbb pop (bad) out pop inc push cs dec inc mov rorl push aas mov inc fbld pusha repz adc lods fistl pop add or repz mov (bad) jbe out es incb mov mov lcall (bad) in inc fisub orl ljmp mov or push push adc bnd es mov push adc lahf out mov adc xchg repz mov pop leave or (bad) aam sub dec dec pop addr16 shl inc adc jno jnp dec and sbb push jmp enter adc ja and sub lret mov jl,pt add pop adcl and std movsb sub mov mov rclb (bad) lock out xchg pop inc std or aaa xchg add mov cmpsl outsl push jb sbb inc aaa push inc xlat pop mov ret inc into sub mov fcompp xchg lret mov xchg jg test dec push xor lea rcll sti or icebp loope (bad) mov or (bad) ret jl dec rorb xor xchg cmpb sbb adc lds lds jo and push xchg jge add xchg add stc fdivr cmp jb test fwait jae fs lock rcll and adc fadds or xor stos pause jne mov adc add in pop into scas call lods add lahf dec inc jge shr stc insb loope jbe pushf rcll in adc leave (bad) mov push mov mov js add mov add push inc repz sub ja fnstenv sbb loope inc faddl cmp or jo popa lret in jmp sarl loopne and jae xor aad fstpt jns cld dec push mov ds (bad) aad addr16 jg or or in stos inc pusha pop or gs dec and out insb divl data16 cmpsb sar or sub sbb mov dec xor push mov mov mov ja lret (bad) xor inc xchg xchg xchg lcall out (bad) mov leave mov (bad) xor pop dec fiaddl cli sbb lret jmp movsb pop test adc iret fs cs inc rcrb sbbl push imull popf jge loopne sbb mov imul rcrb lds xlat sub push addr16 jae ss push scas cld inc pop adc mov jle fistpll lahf xorl mov lcall fidivrl dec popa fdivr jnp sub addr16 or (bad) and lahf jl sbb out inc daa mov icebp (bad) jo xchg sbb mov add inc push sub (bad) pop test (bad) mov insb ret into push ljmp jmp int3 adc faddp inc sahf lds sub (bad) jb or ds in fldt xor cmc pop subb test nop sub lret rcrb sub sarl (bad) fstpt inc mov loope pop shrl negb and or int3 int3 int3 mov jp jge roll out decl sbb int3 mov mov fsubrl and cmp xchg lods sub pop je iret cs out mov into xchg pop ljmp insb mov jge sub pop fucom scas mov sbb test jne test or pop sbb test push sub mov dec cmp mov loopne add pop sub fs aaa fisttpll mov sub xor popf mov sahf pop (bad) (bad) divl sbb inc sub fildll mov hlt (bad) sub decb hlt inc test sti sbb sbb sub push push push push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 js int pop pop pop into push push cmpsl fldl arpl pop cmc roll cld sbb pop test sub out mov movsb mov test in stos xchg mov into dec enter push push sbb frstor out ret push xlat cli xor lahf or or (bad) push and cltd insb pop mov add sbb stc push mov std cltd (bad) sarb or cmp (bad) or lods add push shlb add sbb gs sbb inc leave sub (bad) out mov mov pop enter add imul mov xchg dec or fdivs xchg inc data16 push push inc test cmp mov sub test xor int mov jp enter (bad) nop ret mov data16 ficomp xor cli dec pop sub out addr16 push mov mov xor push lret lds sbb out ss jns mov push add loop in sahf dec fsubs std into adc imul dec test (bad) sbb or sbb cmp cmc addr16 es sbb jo mov popa out adc in inc xor aas aas aad jnp dec or inc rorb pop mov cmp xor insl sbb add mov fs lahf mov nop popa outsb push int3 fimul xorl shrl push cmp test push (bad) and inc loopne mov xlat mov stos adc xor lods sbb cmp fisttpll push stos xchg xchg inc (bad) (bad) cmp decb and idivl (bad) jno loopne,pn lret rorb daa pop stos xlat imul cltd into inc clc iret fcmovu add sti jl push ret add stos inc push dec (bad) mov jmp ds add mov mov push pop xor xchg inc std mov subl jge mov divl push sbb cmp jbe les rolb in adc (bad) enter addr16 cwtl sbb mov sub push rclb mov push aad test mov mov fiadd addr16 lds pop lods push jnp pop cltd gs clc inc (bad) dec dec je dec pop (bad) push sub pop sbb push push xchg pop xor in inc xchg push xchg inc subl into pusha xlat popf push push inc cs shr fdivl cwtl (bad) pop xchg pop or out pop fwait rcl pop inc outsl out pop and stos ret std je insb push mov sub or mov sahf addr16 mov lret lods faddp xorl push dec (bad) lret imul fwait loope push push mov mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jecxz aad pop add negl cli pop fcmovne aaa test inc (bad) jge out sbb int3 ret pop mov jnp ja loopne,pt mov jp sub push out into jl push mov aam mov sarl mov push sti fisttp mov in and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 js int pop pop pop into push push sbb arpl pop cmc rcll sbb pop test sub out mov movsb mov test add lods adc int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 js int pop pop pop into push push imul arpl pop cmc shll hlt sbb pop test sub out mov movsb mov test xor cmp aaa mov push mov call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 jecxz aad pop adc push push adc (bad) bound repz shrb sarb sahf mov inc push mov mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor lret mov jns inc mov ds mov dec popa iret jp inc jns adc clc jg lds mov (bad) xor lahf jp push mov jae sub mov mov jge dec test adc (bad) push push xchg cli imul dec jne sub cmpsb jg mov fmull mov mov lea xor addr16 xchg xchg fdivrs inc cmp leave cmp dec xchg and adc dec or adc and xor pop add call and fnstsw adc sahf jl aad cld aaa fbld mov mov sub aaa lock jg clc sub mov out rclb adcb aad add sub fcompl push adc pop add xchg dec clc loop sahf insl mov shlb bnd cmp js sbb fisubrl out in sbb in mov mov (bad) adc or inc xor cli ljmp add add inc add (bad) mov add jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb ds push mov xor push adcl mov sti ror mov dec xor (bad) adc pop pushf aad cmp xchg das jno add mov jmp ljmp xchg xchg mov jmp int3 int3 int3 int3 int3 int3 int3 int3 jecxz aad push sub adc fcmovne aaa jge xor (bad) xchg sbb inc sti pop adc test pop xchg scas aas xchg adc inc pusha clc sub lea mov movl movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jecxz test out pop sbb cld xchg adc out xor arpl orb and mov lret dec pop jmp xchg dec mov in fidivrl loopne jp xor stos js push mov mov daa bound and or lock push jmp push mov ja insb addr16 nop dec inc cmp xor out repz jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor inc pushf cli (bad) jo aaa pop icebp icebp repnz repnz or test push xchg movsb mov test in add mov mov lods imulb add mov cmp mov mov mov jno push loope adc xor loop cmp add cli mov xchg fcompl not xchg in xor sti sbb and shrl add cwtl inc (bad) cmp gs sbb ficoml jmp scas fwait xchg fidivrl (bad) decb xor in mov sbb push dec sbb loop inc xchg (bad) and add pop imul mov sub sub test xor movsl lock popf mov loop in push mov shl sbb xor push pop sub (bad) (bad) jecxz bound lea out inc jmp repnz into mov (bad) rclb jo hlt sarb rolb mov (bad) mov fwait outsb sbb jnp xor push xchg in push pop jmp add pop adc js mov cmp push add das pusha arpl fadds pop movsb rorb push add pop add out push cli push jne xchg insb imul dec adc push (bad) popf lret xorb jae cmp adc adc push dec jb mov mov dec jle scas add (bad) ret arpl int3 push adc add std repnz and xlat cmp mov pop inc call mov into push jle ds pop scas inc pop outsb ljmp jbe loopne out sbb aas add or xchg add mov mov inc jle in out inc or (bad) nop xor and sahf test in std jo and xor subw inc lret pusha pushf mov push je das dec push inc mov dec lods iret test test aad jo jno gs hlt jnp dec aad (bad) nop jecxz psubsb (bad) std add roll (bad) aad mov aas mov int push cmp and clc mov ds mov aas and fwait inc dec dec or fidiv (bad) pop repnz movsb cmp pop ds je dec scas sub decl loop mov adc add xlat cmpl mov (bad) in and add mov or mov lds mov push dec add (bad) pusha iret jnp or scas mov push sub mov push pop stc imul sub movb roll hlt gs aad dec insl inc cmp push cld in mov and xor fs mov insb sbb push add xchg adc dec or les arpl lahf es pop jp outsl lret xlat lcall mov jle push sbb mov inc or sbb in into (bad) mov ds insl into jno iret push mov fucomip dec stc xlat mull jae bound mov sub (bad) fiaddl or test out mov adc mov pop movsl fs andl xor mov lretw inc scas test hlt fldl push scas test xor pmaddwd add pop adcb in out mov test je jmp mov cmp daa repz cmc cmp std add xor lock aaa std mov shll out xor or pop dec movsb sbb jo cmp (bad) mov jmp addb jge inc adc int3 xchg repz sub mov imul outsb mov in cltd fdivrs mov nop and rcll fwait jns mov (bad) adc mov xor inc enter scas sub test out sub (bad) dec mov loop repz cmp insl fimul cmpb add les xor add add fadd test ss sub mov cmpsl and hlt dec (bad) fmull or and xchg mov div cltd mov push push mov daa loope push aad fsubrs test (bad) sti cs movl jge pusha sbb fisubrl and inc divl nop mov jl dec inc inc aas rol jae mov cmp fwait adc xchg mov mov xchg pop fwait (bad) ja jmp sub cmp (bad) jg shrb out fnstsw jmp or and movsl in call mov xchg xor fcoml push mov lcall mov hlt fldt push fwait int or mov pop fs aad jle push or xlat rolb fwait hlt sub iret inc inc sahf jnp stmxcsr mov les lock xor ja ret xchg out jo add sbb push sub jbe jo push cmp add and stos test xchg int3 pop cld mov (bad) hlt out xchg pop sub xor dec dec sbbb test mov push repnz push push cmp scas je cmp jne mov inc push push xchg (bad) xor xor je loop sbb js rolb decl sbb movsb inc enter repz ss jmp jmp aas mov or mov pop inc adc jmp mov cmc ret xor inc sahf in jns adc addl jnp dec loopne inc movsb push mov jae (bad) stc (bad) push mov ret sub dec jns fprem (bad) sbb adc xchg jne mov aas and mov cli mov (bad) popf jp mov pop add push mov imul mov cwtl cmp xor nop mov lcall push and lahf hlt xchg mov add (bad) push xor mov mov cmpsl inc add fs outsl pop mov or pusha movsb les aam aad pop mov jae sub add cwtl adc pop (bad) jle push push push (bad) cmp xchg xor add sub adc ds pop jbe push in repz clc ja loopne add jl or or (bad) xchg inc dec roll fldenv addr16 iret lahf push xor mov add xor and adc and xchg sahf fucom mov test dec xchg pushf fincstp inc cmpl addb or stos jle push test mov movsl int cmp mov fstpt mov push test aam (bad) call mov daa ja lret push fcompl cmp xlat pop out imul in and cltd add cmc movsb mov lock xor (bad) xchg lods arpl xchg cmp xor push ja mov lret jo negb push ja or or mov pop mov lret lea and xchg xor and cmpsl sbb mov cltd in mov lret (bad) iret cmp mov jp dec mov fnstsw adc jg xchg xchg icebp insb sub aad shrb cmc aas pop cmp lods test clc test cmp sub cmp mov mov mov lahf mov cmpsb or les pushf scas push and (bad) testb or push adc mov movsb pop int3 xor xchg push insb add xor insb jne aam pop xor mov or pop mov push (bad) iret stos push pop (bad) sti fidivr pusha mov dec or in adc pop (bad) insl lds and push stc or sbbl lods xor jbe pop inc scas lcall (bad) ss jl pop dec addb and xchg stc fidiv jo pop je sbb popa add add mov shll pop loope call or xchg add xor jmp int3 int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 jmp popf nop push pop ret jbe xor push cld flds fstps mov adc xchg sbb (bad) adc jbe ds les adc (bad) adc out sbb ret or js inc jp mov outsb push adc int jmp sbb ret loopne push push insl push mov xor cmp test iret mov xchg fmull ret inc mov loope punpckldq inc push push loope push sub loop jmp cmp mov divl lock push push rcl int3 repnz cmp xor pop pop push or fstpt or sbb push mov lods dec cmp pop iret cmp inc xchg test cmp movsb mov push out (bad) cwtl jns out xor jl aad mov (bad) clc dec xchg pop stos test sub popa xchg xchg push out scas mov sbb mov xchg dec (bad) mov dec cld test add clc iret mov incl jae sbb adc adc push pop movsb add sbb cmp out ret fdivp mov (bad) lds lds cmp mov xchg cmc rcl sti mov xor (bad) jbe or repnz lock int3 and out jno testb movsb ljmp hlt add dec xor dec fsubrs or xchg cmp es idivl js loope push aam sub mov gs sti jmp xchg and loope ret nop jge addb rol icebp les (bad) cltd scas dec idivl (bad) imul xor xor sbb dec xor cmc pop add xchg push ds test (bad) jl push sbb fwait outsl xchg xor xlat mov add pop dec push xor repz repz or mov push mov movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 jecxz int push mov (bad) cld lahf xchg sbb xchg cmp lret inc xchg mov push mov lret dec mov ss outsb adc roll xchg stc sarl lret cmp mov in idivb push and lret add xor aam push mov mov in popa sbb xor pop imul loop mov leave orl stos sti xchg jns sbb mov lods mov arpl sbb enter pop test iret sbb xchg or mov push (bad) fdivrs outsb add or sysenter dec jmp sbb aaa xchg mov insb xchg hlt xchg push rol jg pop loope push int mov adc das test dec add add jecxz xchg data16 mov std xor divb sub pushf xorb cmp jns rcrl sbb xor idivb cmovo (bad) outsl fiaddl cmpsl inc ss movsb ss ljmp and jo enter cmp out adc sub outsb fiadd sub inc jge inc mov jl push inc cmp sub (bad) jno sbb pop mov das fs (bad) pusha or pop div dec loopne mov loop dec int movsl nop imul out mov dec push sbb daa jecxz int pop adc scas fucomi fsubl mov push push repz test lea ret cmp push loope sbbl imul or leave lret aad (bad) pop (bad) out mov and hlt pop inc adc mov rorb (bad) pop js inc jbe imul fstps push addr16 xor fldln2 add fs sub sub xchg fwait lret inc shlb xchg jecxz push mov push or dec lods stos shr std jne pop jmp scas mov sub test add mov imul dec pop inc xchg loopne scas stos cmpsl movsb dec or ljmp cmpps or or dec test enter xchg adc or pop insb loopne sub cld xchg sub out xchg insl aaa add jne mov mov dec in into pusha fdivs out mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 js int pop pop pop into push push scas fiadd arpl pop cmc gs mov sbb pop test sub out mov movsb mov test push and push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor lret pushf add ficomp sub les outsb insb outsl ja ret jb push lea add fstpt inc adc mov mov mov jnp int3 and sbb cld push push jp sub push adc push and xchg fild call push mov lock nop aad fcmovb dec orl test frstor add jp fs imul ljmp pop cli fimull not mov and addr16 aam stos push into dec add (bad) push lahf push xchg (bad) stc or nop jg xor adc gs xchg fwait imul aam nop sbb sbb dec or add jp (bad) out dec imul adc nop jns dec js enter jnp mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sbb jcxz popa (bad) xor mov fmuls jno fmull mov jb cmpsb clc push mov mov (bad) fistpll jge add mov ret xor sahf sbb mov pop lods dec test test les test or and mov jp adc adc fcmovb aas cs clc or push cmp mov movsb cmp adc popf sbb std or pop fbstp test mov stos lods (bad) push fs sbb iret lahf insb or xchg fbstp mov in add add shrl (bad) xchg imul mov lahf aam cld sbb lret push adc or pop clc mov rol stc in pop pop js pop lcall xor or inc push mov scas cmpsl pop flds les xor adc add xchg mov fldenv pop rcrl cmc imul dec dec cld adc icebp (bad) add cld pusha ret mov push mov dec cmp js adc fcompl int lods sub xchg sbb aad ret (bad) inc mov cwtl repz xchg pop inc test das jb jno xchg insl sbb xor sbb fisttp lea pop testb xlat scas xchg stos in pcmpeqd or mov test faddl xchg iret (bad) (bad) cmp test call fistpl mov test (bad) mov xor and cmp xchg inc test xchg jl mov and sbb (bad) mov mov mov loopne dec call ret popf sar test (bad) mov iret adcl adc jmp sbb addr16 cmp dec sbb and adc inc cmc imul lds ds js movsbl dec lret sub out popa lahf dec sub fincstp movsb push mov sub ret or push mov push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 pop (bad) push test lret adc stos div mov testb mov fsubl jae jb inc (bad) pop jp mov mov div pop adc movsl xchg enter jg jne push xchg int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 sbb stos inc hlt inc jmp push or testb (bad) in (bad) pop add xchg repz push mov push xchg movsb mov test mov and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp lds gs scas ds xor repnz dec cmpsb les mov inc sub lret pop jmp xor repz and jl xor nop hlt xor mov xor mov push jbe xor fldcw hlt jmp push stos sub sub aas add mov mov xor xor into mov mov mov jle push add loop mov mov cld cmp push pop fiadd sbb popa loop mov inc imul mov push push pop mov cs mov dec push adc loope inc and pop pop gs lods inc jl jo adc push call jg js push dec jne loopne adc gs adc enter daa ficoml push mov decl (bad) pop les xchg lahf and int3 mov sub mov repz sub jmp cmp setle inc xchg arpl and inc jne cmp mov popf push lock int popa xchg pop pop je lods or mov ljmp (bad) xor mov rcl insl sahf out lea and cltd jge push test aad lock mov sbb out jae,pt mov in xchg movsb ja pop les mov cli cs cmp ds mov mov xorl jno addr16 jmp add insb jmp test mov mov sbb (bad) cmc aam or pop mov add cli loop popf push bound mov jl sbb and ds clc (bad) pop sahf mov enter push sarl xor inc jp or stos pop xor lods cmpsl enter test lds inc enter aad pop fxch pop and inc and aas clc lock sbb in mov sar dec std ljmp sahf test xorl (bad) ljmp sub test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 outsl mov mov pop push roll out cli js popl cltd sahf mov inc sub push mov push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor lret pushf test and mov xchg jae jp sti test jbe outsb jl aad cli ja,pt hlt or in mov insl inc inc (bad) inc push sub and scas sub cmp out mov dec or fwait pop std rol jp xor loopne jns mov mov adc pop mov ret and jmp pop aaa punpckldq push push mov loop jmp sub mov adc mov pop addr16 mov jo lds mov and mov dec int3 data16 loopne jns pushf adc in arpl (bad) xor (bad) movsb mov rclb xchg in hlt repz add cmp xchg lret add lcall (bad) flds pop push jbe (bad) out xchg xchg mov pop xchg push jae arpl mov pop mov sub arpl icebp jae cmp lret test leave mov mov and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor lret adc push test mov push pop call mov inc pop mov xchg mov test lret icebp push sarb or leave nop jns ret out mov xchg ret cltd pushf mov iret push sub mov push mov push add sar mov lcall fldenv jne es (bad) (bad) pop and nop gs sar and lods out (bad) leave mov or xchg mov (bad) in and jae pop or lea jae mov shl jae,pn mov lods and push cmpsl das test inc loopne (bad) aad fdivs adc push int3 mov pop inc add pop iret sbb scas int jle rcll adc rorb mov sub movsb xor psllq mov mov jns mov dec lahf xlat push and inc inc rcr dec sbb pop dec mov mov mov (bad) jbe xor imul ds sbb cmp pop out mov cltd nop pop (bad) jmp clc fidiv sbb (bad) aaa fnsave pop ds dec jns mov pop xchg aaa mov xchg mov lahf mov pop pop insl jge cmp adc je in jl xchg test cmc xchg (bad) jp lret sub and lock mov mov dec (bad) fistl sub push loopne sbb cltd (bad) xchg enter cltd incb sbb ljmp aaa xchg inc ds es jo cli or mov dec mov pop (bad) je sub stos (bad) mov sbb xor xchg pop into adcl mov fldenv (bad) adc aaa (bad) sbb push sub xchg dec pop popa jns jmp popa pop xor push adc mov add dec dec adc xchg dec (bad) ljmp (bad) fdivrl repnz dec push ret (bad) pop std dec jecxz or pusha (bad) sub insb in (bad) mul insl fwait mov ret pusha cli and lock and xlat out cmp push fcmovnb or or repnz sub bound fcompl push mov lahf jno lcall xor jo mov scas nop push add push (bad) jbe sub rcrl push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 sbb xor lret and jp rcrb dec mov mov movsb jle lret inc xchg in jbe test push inc xor ljmp xor jne test daa mov jb,pt xchg jbe cmp aad aad dec mov xlat cmpsl cli int3 xchg xor in and xchg leave xchg push push jae inc sub in xchg add int bound jmp aaa ja mov jno cmp lret jbe inc sub and mov gs mov inc or and test xchg and pop xchg mov addl outsl cltd push fisub push mov xor adc daa icebp jbe and test pusha sub rclb lods xor xchg xor pop daa ss push pop push mov jb test mov or inc cmp pop fiadd xchg dec int3 test dec sbb dec adc shlb cmpsb inc ror fs jb js mov pop jne jg xor jp adc cld push aad jecxz (bad) xchg imul cmp roll cmc inc jbe jp vpminsw roll jae mov ret pop pushf inc push add ljmp ljmp xchg icebp cmp add or sub idivb shll cmp add inc into fiaddl shll gs out inc push add push fwait mov push std movl adc ljmp jecxz out daa ss mov jbe int3 imul lahf jp mov mov add pop cmp adc sarl les lahf lcall inc jmp ret outsb push and (bad) (bad) jecxz inc sub outsl mov outsb mov xor push lock or sarb dec (bad) sbb ja mov fmulp sub jl cmpsl cmp inc and mov add out sbb imul sahf pop (bad) and mov stos outsb (bad) xor cmpsl push adc mov mov cmpsl (bad) jg add dec repz imul sbb jl jbe rcrb out mov cmp bound ficoml enter push in out arpl jns scas jmp les out inc (bad) cmpsb dec in dec fwait iret loop mov cmc mov pushf daa in xchg (bad) cwtl xor cs cmpsl cmpsb icebp jecxz cltd and and nop repnz adc arpl pop or xor push mov inc imul lds les fdivs sub pop or xchg (bad) loope call fs in cld sbb lret cmpb cmp sub (bad) cld or add cmp fdivs test pop and add nop adc iret outsb jmp xchg xchg add cli outsl out push insb ret aam add fiadd test push ja mov hlt (bad) xor std pop sbb loopne aas mov inc cmp xor cwtl adc fisttp dec xor adc movsb adc xchg and lahf inc lds pop adc dec fildll xchg fidivrl mov lcall lock push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor lret jo roll loopne mov and xchg clc lret int lret sti lahf jmp aad push cltd cmp lret or loop daa mov loopne inc push inc scas push jmp (bad) or xchg cmp xchg mov test jge testb xchg in lret add jecxz lock loop push shll shll xor sti mov pop sbb sbb and jge jno sbb sti xchg jns lcall test lret fildll insl push sub xor pushf or and lcall mov pop addl cmp xor addr16 scas push aam mov inc test lret in xchg stc sbb xchg cmp sub add and leave lahf mov pop xor sub mov xchg xchg cs int3 inc dec lret xchg or addr16 call (bad) jbe xorl mov push rcrb int pop cmp adc pop lock and xchg stc cwtl cld sub mov dec inc jle into sbb and xchg aaa fsincos inc or xchg mov sub out scas dec addr16 imul dec aaa xlat lods js pushf jmp les jge cmp in stos dec cmpsb test iret add sbb dec nop xor or pop (bad) out jmp jnp imul xchg sbbb dec push mov fsubl xor add mov xchg fsubrp mov adc push movl mov stos (bad) (bad) addl (bad) in (bad) hlt xlat pop mov and arpl add add pop inc pop adc dec sbb adc fwait aas es sub jmp or in clc clc call cmovae fsubrl pop pop push sub stos aas (bad) mov mov sbb pop mov sar dec xorb mov xchg cs (bad) ljmp inc shrb je jno sub dec aas lock pop pop pop cmp or mov ss pop pop in push xor test (bad) lock aad jecxz iret push dec mov arpl mov das jp add pop outsl outsl push cwtl jno cld fistl jo jle lods es xchg jnp (bad) pop int3 (bad) lret cwtl into fsts pop nop mov and or push and cmc inc out dec pop rcrl fwait push and push aad cmp or xchg loop sub mov popf xor pop pop push aad enter add sahf mov aaa in sub xlat hlt loopne pop and xor xchg in mov in sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb push icebp test dec dec push bound mov xchg out jg jb arpl sub pop xor insb inc push lock ds cmp xlat jl cmp inc std ficompl sahf ret stc fs mov sbb pusha into pop fs sbb add sub ja mov mov push test sub xchg test sub cld pop (bad) mov pop (bad) in lret jmp mov dec inc fwait jo aad cmpsb xchg add pop push dec jl or ja sub call jge addl ljmp xchg arpl xor je push push (bad) repnz inc and ret aaa xchg mov sub cmp shll pop imul mov test pusha inc mov mov cmpl je mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 jecxz int popf inc mov xor cli pop fcmovne aaa push mov test jne call test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 cmpsl lods cmc ret push add js rolb repz mov jg setae dec addr16 cwtl in arpl mov rorl ljmp nop jbe cld fcmove cmp mov add mov lea mov (bad) mov aad or xor xorl sbb lea add fsts push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb sahf push add push xor push mov notb out (bad) jmp popf xchg divps jle push push pop repnz inc and sub jmp (bad) ds das stos popf xchg sbb out test jbe adc add inc mov xchg xchg test addr16 xchg sub jbe stc insb xor xor in divb push outsb flds ss leave sbb mov shrl mov push jp xchg fidivrl mov pop int3 adc xchg out mov adc fisubl sub dec ret repz imul and sbb divl in fsubs push jge (bad) pop push (bad) jp out stos cmc xchg hlt jne or setl adc or push fmuls adc jbe aas es mov and xchg out xor insb daa ss sarl inc add jne fildl and xor (bad) stc pop enter sub cmp loope out and inc ljmp bnd adc sub jbe mov sbb pusha in xchg pop inc xchg mov mov xlat movd jecxz fcoml (bad) dec inc dec je icebp (bad) mov push xchg cltd movsl out test mov sub ret adc fwait xchg inc mov sub dec test cmpsb mov call sub mov aaa and mov add add xchg and pushf iret ljmp (bad) cmp sub dec inc dec loop cmp sbb mov outsb sub aas into inc cmp push pop cmpl jne cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 sbb xor lret test nop or xchg arpl xorl mov aaa inc push jns push jmp (bad) sub jnp mov dec jecxz sbb cli jmp push cli es stos out sbb frstor pop arpl dec in iret cmc pusha cmp sahf xchg jb push hlt out xor adc imul (bad) flds in lock fnsave mov stos and and out jo les adc pop popa dec cmp hlt (bad) stos out mov sarl sub jns xchg xchg mov scas xchg test adc inc mov mov jge inc and scas mov or pop insl jb cli sub shll push xor and pushf movsb dec sar adc cs adc movsb mov out mov or mov push imul daa fisub and mov ret cli jb daa mov dec mov scas xchg push in or (bad) jle scas sar mov imul push pop add lahf aad cmp enter xor push push in popf iret push mov push es out dec (bad) pusha xor fidiv pop or jge xor stos call pop into out or xchg (bad) rorb mov mov dec push lods int fldenv lret mov jb and pushf xchg imul lods dec fisttp into mov mov adc mov fdiv xor movsl stos fistpll out clc push lods in push xchg jno sbb icebp mov stc das push adc xor adc push (bad) icebp inc sub hlt cmpsb or loope pop aaa inc nop jg dec mov lret dec pushf jb mov fiadd jp inc mov nop repz jo push sbb stc pusha mov sbb fsubl jb rcll hlt mov mov jbe push js dec in je test stos shll inc push cmp int3 mov xchg adc fbld cmpsl pop pop sub pop cmp adc pop mov cmp cmpsb sub sub loope inc inc lret fldcw ljmp stos inc or (bad) mov or es add dec je push mov (bad) bound je test das fs sbb scas push mov add push (bad) pop jae pop adc jns cli mov xor scas sbb fsubs jo push push jl cmpsl jo je insl sbb insb mov lock idivl adc mov adc mov adc mov adc mov adc lea adc mov adc lea adc mov or cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc inc rcl sbb sub jmp mov in sub jg sbb mov (bad) (bad) cmp imul ds icebp sbb (bad) inc stos push xchg xchg jmp ljmp in and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb pop xchg popf cs fwait aam pop push (bad) scas xchg loope mov or or adc mov (bad) (bad) popa cmpsl push inc fistpll xchg mov pop mov aas mov mov scas add mov mov sarb mov mov sbb bound jno mov adc lret cli mov scas add sbb dec jb data16 int3 insl ss cmpsl hlt pop aam fninit daa shrl cmp ljmp and (bad) fisttpll mov mov sub mov push or xlat test dec lods xor add inc jg insl inc test outsl test data16 adc xchg mov mov cmp in or loop xchg inc je js add inc adc test aas sahf push rcr push dec das divb fnstcw xchg dec or movsb mov xchg ret mov fist ja mov hlt shr ss jp jne mov dec sub fsubs movsb xchg sbb xchg ss dec cltd sbb je leave mov xor (bad) jb adc stc xor loopne jne pop popa (bad) jne adc jl aam je adc pop ss inc push or in sbb ret pop rcrl insl test ffree dec mov jne cmp (bad) cmp js into (bad) jl adc mov cmp mov das je leave and jne ret fistpl outsl mov fs fs pop mov or cmp out sub fs mov pop push adc leave enter jb push cmpsl stos adc dec xor xor arpl (bad) xor pusha mov add mov dec out stc and push imul add dec xor subb lahf loope in adc inc pop xchg aam test insb inc sarl inc movsl std pushf stc mov sub mov loop,pn (bad) imul and in fisub add xor sub inc add aad rcrl enter add outsb scas xor stc outsb add out pop leave add inc sub outsl mov clc mov xchg xchg cmp int mov scas cmc mov push dec or push movsl push dec not push sbb std jp xchg cli xor rcll je cmc cmpsb inc adc and push push mov push xor dec jmp int nop cmp cs arpl movsl movsl (bad) popa stos scas lret lods push fnsave pop push mov dec mov mov ja mov cmpsl int3 cmp ret mov inc test (bad) pop inc (bad) push mov sbb mov lahf frstor inc xadd repz xchg dec mov call andl dec rcl inc mov aas loopne and aas mov outsb sahf mov push mov aaa push xor in aaa pop icebp rorb pop out lea push pop test lock adc scas cwtl (bad) inc or enter fimull nop (bad) mov cli clc mov xchg js (bad) cltd fistpl fistl inc push inc in push mov adc xchg in nop pop mov mov mov mov push lcall dec dec push cwtl pop stos push xor cmp xor xchg subl (bad) cmp lcall jns push or inc icebp add rclb or inc divb pop pusha inc jmp aad aam mov jns (bad) jne mov jbe (bad) or add jg lret lds lcall iret dec out pop fmuls (bad) scas dec (bad) dec jg aam cmp std mov mulb or pop mov mov push rorb fnstsw push cwtl out jnp aas or iret ljmp dec test mov sbb xchg sub ss or sahf jl mov xchg or push loop hlt push jl (bad) cmc ljmp rorb imul subb bsr xchg cmpsl push scas xor jae mov lahf (bad) xchg inc push or push rclb xchg jnp repz inc sbb xchg push pop jns cltd jp hlt lock xchg push movsl adc mov add jg add mov jbe push out subb xchg push cmpsl aaa pop ss loopne mov jbe (bad) or sbb mov fsubl and lret int jp movsb lahf rcrb rcl (bad) mov mov push or mov shrl mov mov stos jno cmp lock stos mov sbb jmp in mov dec (bad) xchg sbb pop pop in (bad) popl ljmp into add fadd mov xchg (bad) cltd dec inc ret test pushf dec add mov add inc mov shrl rclb jl,pt adc sti lds add cmpsl adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 sbb sub packssdw lock lret mov jo inc mov xchg and cmc mov push pop dec adc inc adc jno fstps dec (bad) imul cwtl dec mov jno sbb les into aaa clc sbb mov ljmp cli loop jbe insb addr16 popa lods adc clc cmc mov je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl push xor mov mov xor bnd adc out add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 jecxz int push mov xchg pushf fldl hlt test cli xor jge mov and push xor mov pop (bad) mov stc int in (bad) jge sub mov jmp xchg jns push jecxz loop frstor iret jbe mov mov sbb and insl icebp dec ja cmp push fdivrp sbb lea add pop inc jae push lods sub add out stos sti sbb lret cmp mov push (bad) (bad) (bad) sbb mov test sahf hlt bound mov mov sbb aas loopne les xchg out outsl mov mov fdivrs insl jae xchg (bad) and jno pop mov daa xor in jl mov xor test sti bnd jle jno scas xchg fild cmp xor nop mov (bad) fbstp push mov xchg sahf sahf popa xor pop movsb and fsubs sbb mov je nop lds push les mov xor cmp sub push inc adc test nop (bad) pop popa fs (bad) mov push fcmovne lds mov xchg (bad) cmp mov add std mov scas sub insl push mov push dec test sub jno rclb inc push mov push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb lcall imul repnz divb xorb jne scas in jno fimul xor sahf aas pop out (bad) add lea ret hlt ljmp mov stos xchg adc pmulhuw cmpsb add pop lods inc push dec dec pop mov ljmp adc cli add xor add popa popa mov insb stos insl rcrl clc sbb cwtl jecxz lret ffree loop inc push jmp mov jno pop enter out xor pop sub mov cmpsl xchg fnop stos lods inc aaa out inc lods mov aam xor jge dec dec subb mov cltd push mov mov xor jg or enter enter popa or mov mov mov mov test jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sbb mov cwtl push or mov int3 push mov pop roll lcall and test add mov out data16 or xchg mov insl ffree stc fs sub int xor sbb or and cs or add dec xchg pop aam push mov xchg nop xor sub repz push cmp sahf (bad) std add sbb faddp fnsave adc cmp stos cmp pop xor outsl push jl mov adc iret dec lret or add cli cmpsb push and xchg out in repz inc mov in (bad) int3 jge aam in or xchg movsb jo xchg shlb ja pop adc cmp aam aam sti stos push popl inc pop inc rcrl dec lods or xor add cmpb and fimull jbe sbb and andl pop jae or fs fld push or adc xorl vmovntps xchg pop sub notb sarb xor ret mov jns cmp pusha fwait sub and imul xor fnsave xchg add loopne inc mov sub jno sahf insb mov sub mov xchg xor xchg loopne mov bound mov and gs dec ja scas in adc stos push push add jmp popf lea add scas fildl jbe,pn inc insl sbb jmp jle cmp loopne push repz push jo ljmp scas mov push jmp imul adc adc lcall (bad) loopne adc xchg sbb stos push pop js or lock cmc mov test pushf out push dec sbb scas scas dec je movl in dec ja sub pop and jne xchg inc cmpsb mov mov xchg xor lods xchg mul dec popa std mov and ret or sub push push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 sbb lcall inc movsb test mov cmp jne inc xor and push in mov jbe es cli jg lds jbe lea stc jbe fwait into cmp sbb lahf mov mov add dec mov or sbb add xor jbe nop jbe cwtl lock dec push fs fmull mov (bad) addr16 repnz mov clc xchg cmp add push or lods adc aas and rcl cmp mov enter cmp mov imul push and (bad) and sub aas sub mov in or scas enter xchg adc jl test movsb dec mov test js cmp lcall inc mov mov sub testl mov cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 sbb cli push movsb in sahf push test xchg repz lea js in int jg add adc scas ds mov negb out jl cmp lcall mov xchg imul iret jbe or mov sbb sub lcall mov xor pop mov or xchg fisttp dec ret pop out and xor adc jnp jns mov lret mov cltd fsts mov push cmp add xor ja ds xchg push pop jno inc stc jle dec xchg mov pusha aaa sbb rclb or jo adc scas ljmp dec dec cmp mov adc mov (bad) mov movsb pop xchg add sbb dec jmp movsb loopne gs int3 (bad) cwtl xor cmp iret (bad) daa scas jg icebp fiadd pop out sbb lods enter xchg outsl cmp out out or insl cmc push add call dec pop push dec push inc loopne les movsl scas ds loop shrb jle jp push adc mov in and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb dec idivb push rsqrtps push cmc fs add mov pop dec arpl jns gs out lods aad ds (bad) into mov mulb jmp movsb cmp jmp pushf (bad) lock icebp sbb or aam cmpsl pop or ljmp shlb imul fnsave ret fldcw sbb sbb sbb add insl sahf in push mov stc mov push fcmovne push sub jl cltd inc mov imul mov sbb pop insl jmp cmp add cmpsl (bad) ficomp cmp ljmp and cltd outsl iret loop mov add push jne mov or xor das jne ja cmp mov mov ror push mov and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 sbb fs inc xchg arpl sbb mov add pop lahf sub gs stc and and ds mov nop iret cmpsl negb cmp jns sub mov lods xchg sub pop lahf dec add (bad) shl or push xor dec (bad) xchg ss shrl (bad) int lds lock xor fdivrl jg test leave sbb xchg push xchg push push or cmpsl mov xchg xor add std mov inc bound mov inc data16 inc fldl sahf inc and loopne inc and gs movsl push mov scas xchg movsb cs sbb push (bad) pop push incb inc popa fs rcrb mov jno mov mov or fildl (bad) movsb dec fiadd addr16 push mov cs sahf (bad) sbb mov (bad) insb dec mov into sub scas lods icebp adc adc gs std inc mov dec clc add inc and pop or mov jne in pop dec test cmp arpl or inc xlat inc jle adc cwtl and sbb sub fild mov and andl dec inc adc xchg sbb push (bad) cmc es push mulb add lea add inc loopne fcomp icebp call insb fdiv mov push pop (bad) mov push pop repnz addr16 push cli loop aas ljmp adc loop es add sbb enter pop (bad) je (bad) fcmovne add repz inc addb jle clc sub pop js xchg push in imul add xor rolb stc dec mov push push jp dec pop and xchg nop lea add add push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 jecxz scas stc add stos aas sub aam andb mov add push xchg int repnz je adc cs inc push lock mov das xor xor jmp xchg dec lods aad push ja faddl jecxz or shrl jmp mov (bad) sbb xor jl mov call add adc xor aas cmc push push movsl cwtl adc shlb lea jns and in repz dec xor cmp inc sbb add stos or movsl pop push pop das mov idiv out in insb pop lea push pop divl inc and pushf jecxz jo test repnz sbb scas divb cmpsb cmp mov pusha je sahf cmp dec rol jmp dec adc cwtl sub jle push (bad) xor or jle in mov pushf sti repnz jecxz out ss mov jnp jnp js enter lcall push popa gs mov icebp adc in in mov jb jmp pop sbb inc mov ja xchg xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 sbb xor inc nop outsl mov xorb lret shrb sarb sahf mov inc xor mov fcmovnb sbb mov or stc movsb cmp or xchg dec jp dec xchg movsb inc cmp lea movb dec ja mov ja dec push jmp out lret jp arpl mov aas mov add loop and into xor and outsb xor sbb out push mov rorb ljmp mov imul sub add mov stc inc addr16 xor bound add pop imul movsb cltd lret mov ret dec roll enter mov sub mov jb jg inc ret adc push jno (bad) lods inc lods mov adc adc stos arpl dec lcall outsb in ljmp rolb out pop lcall adc fisttp jb sbb js insb add sub or adc fild std lods xor ficomp sub inc mov shll dec mov stc mov xchg pusha mov sub test jecxz out imul pop ss inc push shrl cmp jmp and mov mov adc hlt push scas stos (bad) adc orl bound imul test mov xor and cld pop (bad) mov fistpl sub push jg aas popf orl adc jbe into adc push inc dec sub adc mov loopne lret dec jae dec dec sub sbb andl dec aam jmp jns movsb rcrb inc packssdw fstps jmp jle test shrb pop into mov xchg sbb sub es aas lcall xorl (bad) notb sti js,pn jle (bad) lock cltd and jb sub mov lea sti insb push jns jle movsl adc js add xchg xchg (bad) lods pop push sarl aaa mov mov gs sub arpl cwtl mov out sub pop dec imul sub jg,pt movq inc pusha xor add mov dec pop jle aad shrb jne push and mov cli (bad) pop mov pop out or pop pop movsb insl pop int insb push mov ja add fs stc jmp xor jnp js fsts adc (bad) mov jb popa ret jmp sub mov dec (bad) in (bad) aas sbb pop and cmp es jb inc addl ffreep jno sub xchg lods mov jmp jne or xor jg or push lcall sti rcrb aad shl fldt xor and xor lods ret insl das dec xor dec or aad test mov je mov inc xchg arpl cmp inc pop (bad) or xchg nop pop dec cmp push adc jg pop fcoml js push pop add movsb sub in addr16 add repnz rcrl ljmp mov aas (bad) push je scas pop fstp push lcall jmp or lock cmpsb xchg push jae (bad) pop out xor (bad) jg mov sub xchg cmp mov ds (bad) or imul aam push sbb (bad) mov cmp mov rorb jge inc dec fsts xchg pop push or aaa push xchg ja mov scas xchg pop pop jle insl (bad) mov and js,pn mov lcall repz adc rorl mov pop push jae and xchg add movsb mov aad dec stos inc xlat enter mov lods rorl movsb rorb in adc push sbb xor stc adc jnp mov inc movsl sti or and adc pop out fisubl jl push outsb sub (bad) sarl ss jbe movsb dec ret cmp or adc icebp sbb fidivl mov out xchg dec out pop jp jg jl std call push and sbb popa push jg jo mov jge mov outsl jns pop sub fstps mov jo test loopne aad adc or xchg lods in mov std inc sub mov test cmp mov pop int3 add rorl push in les aad xchg into xlat (bad) repnz aas (bad) push push jle jecxz ret push adc cs lahf imul dec mov sbb movsl popa dec mov es shlb lcall jmp mov mov cmp xor jp push outsl dec and dec and mov mov push clts sbb repnz iret ljmp push popa nop xchg decl xchg xchg jo aad push mov add push aaa test adc stos ret jmp inc dec sub mov pushf mov cli lret jmp addb scas fadds es repz mov mov ret sub idivl or fnop (bad) iret aam in pop push jle or scas rcll dec jne ret push arpl (bad) dec mov cmpsb hlt mov push movsb out fnsave int inc push sbb push inc jo cmp adc sub push (bad) ds xchg sub jae xor out add xchg xlat pop or negl dec mull insl push cwtl jecxz in jecxz out in mov pop nop mov jb popa sbb fildl movsl push pop sti out adc xchg fdivrs cmp std shr insb xor pop push xchg mov call inc mov inc cmp movsb cmc mov nop sti mov icebp add ja pushf dec adc inc leavew scas push dec andl xchg jbe cmpsb xor pop cmp hlt sbb ds ds es pop pop bnd pop std inc mov jecxz fbld faddl and jmp subl push repz js push scas sub mov cmpsb push mov outsl adc xchg loope mov pop xchg xchg xchg mov enter sbb jecxz mov or xchg je and sti inc out std sub lods repnz xchg mov dec xor lods mov mov fmuls (bad) das cmp pop adc dec test out mov sub cwtl pop (bad) jno lahf in enter addr16 shl in pushf jae jb fdivs xor xlat imul mov rol push sbb test call cmp stos hlt pop cmpsb mov pop inc or test rcrb dec adcb xchg mov cmp xor lret adc mov adc push jp lea (bad) je xor jbe loop jb dec sub fstpt std pop add inc xchg sahf jge gs add jae or cmp pop or and jmp or mov sbb fcomi mov mov in jne mov lods vmovdqu in sbb push sbb ds mov and push xor orl gs test inc ja cmp xchg les jbe orl les mov mov mov stos cmp in pop push pop rorb (bad) aad cli xchg add (bad) aas sub mov ljmp dec shrb pop fxch aas or mov or scas mov stc (bad) stc std push int aaa mov int3 sub mov xchg or or mov xchg mov (bad) xor out xchg cmc fs out or cli orb adc fwait push ja lret xor jge pop xchg out lret mov cmp repnz inc pop cmp xchg int3 xchg mov mov jp (bad) sub cltd push imul orl push outsb push inc pushf insl and jl,pt fwait (bad) mov je push fmulp dec decl fmuls (bad) jnp inc add sub sbb mov jge mov add mov mov pop rclb arpl jp push cwtl jmp push (bad) les insb xlat add scas insl add mov or outsb inc dec out xor daa das (bad) iret or sbb (bad) iret je pop (bad) loope cmp ret mov (bad) inc in sub sbb adc std xchg sbb pop xchg ret out repnz in cmp jge inc in in sarl push dec cld mov add cmp into popa rorb cli xchg dec (bad) (bad) xor arpl lods mov jl int3 cmp pop sub je lea mov dec iret imul addr16 xor xchg sbb and jns jb,pn mov push inc push or ret dec mov fmuls add xchg andl sub inc dec pop arpl dec in fistpl xchg pop push hlt movsl cs mov data16 pop arpl ret xor imul sub es (bad) aas scas stos dec fdivrl es add jmp repnz adc inc pop push jb sbb (bad) cs cmp lods (bad) mov jnp fnsave insl jbe sub lahf lret out call repz mov mov cmpsl insb and inc movsl cmp lret add ja cmp or pusha or (bad) mov and lret xor sbb outsl and and insb les cmpsl xor and push int inc mov outsw scas mov jae div xlat sbb test jmp push leave ja orb add stc jmp fisttpl incl pop and sbb or mov addr16 pop lahf xor sbb in xor les fwait cmp xchg in push adc add daa popf inc call iret (bad) lock dec into daa sbb cmpsb jno lret ja (bad) jle ss and rclb test mov addl mov pop aaa or call cli cmp cmp and cmp push add push ss sub hlt jg push adc out or xor test cmp sub insb jle cmpsb mov mov xor jbe cmp cmp mov xchg cmpsb cmpsl arpl pop je cmp add scas notb lds mov cmpsl jmp add (bad) pop fdivl (bad) xor arpl (bad) int3 aad dec iret xchg dec mov mov xor rcrb movsl adc int sub dec mov dec imul ljmp and jecxz stc push call cs jmp add repnz loope push insl test dec int mov test and cmp aad dec js movsl adc push adc adc pop aad (bad) ja stos xor cmpsl stos inc lock cli sub mov clc mov ss rcrb jg inc cmp daa xor xchg cltd jg xor add hlt inc lock data16 jmp sub xlat inc fnstcw push mov mulb mov lods mov add jecxz popf mov push je mov mov std roll jle xchg sbb pop cmp and xchg fmull mov lahf hlt or stos out in xchg push mov lods push std xchg and xor inc jne (bad) fnsave in inc jmp push and mov sbb fcoms or mov lock mov cs addr16 jnp jae repnz arpl sbb (bad) cwtl sub rorb sub xchg or xchg ja (bad) jp adc mov xchg lahf xor add sarl push mov rcll dec dec lahf ret ss sbb (bad) jl (bad) dec dec insl pop call lret movsl ficom arpl out dec xchg cmpsb xchg jnp push lds cmp aad push pop dec repz mov in cmp or or mov rcrl add push dec or sti repnz mov push into cmpsb test sub sub mov mov push sbb inc xchg scas xchg inc pop jnp (bad) xor xchg add xor adc ljmp outsb movsb xchg lcall (bad) fnop mov sbb call xchg jne mov pop hlt jae push jbe sahf mov cli popf daa push mov loopne sbb in jmp cmp sub out idiv out jecxz jge mov push mov cld cld inc sbb sbb lahf or popf aaa xchg insl sar or jo clc and mov xor test stos pop adc subb adc stc test jne xchg or adc (bad) cmp ret int jmp inc push enter jl jmp mov sbb xchg inc call xor lret jl jle (bad) mov lock sub rcrb and and cmp push push xchg cltd lahf std push dec mov cs sbb adc jp push sub pop push leave push xor shll (bad) (bad) (bad) popf mov decl scas popf sub daa xchg inc xchg in jmp cltd lds dec sbb (bad) jl rcl lods adc or add dec mov (bad) sub outsb bound and xor out jmp add xchg jnp shlb adc jbe imulb pop xlat mov fidiv pop mov rcl add sbb mul push xlat cmp sub mov dec xor daa jge aam adc sbb imull inc cmpl sbb inc mov push mov call push mov and and xor xchg mov aas mov out add inc faddp out test dec xor cld sub fstpl rcr mov aam jb add push bound ljmp mov popf (bad) mov inc jl sahf inc xchg rorl fnop jae push inc popf add jg idiv cmc je sahf sbb jo and jmp (bad) fnstenv (bad) call inc sub pop gs xchg aad cmp mov sbb repnz push pop or das jno movsl test sub mov cli dec jns inc jb and cmp popf add sbb scas test dec gs rolb jns rcll cli out xor push ja in daa ficom mov push ret subl dec ret pop inc dec cmpsl int3 jmp data16 (bad) (bad) sbb das and (bad) jb inc mov insl data16 adc jne jns sbb scas hlt bswap fwait out push add (bad) icebp stos inc dec (bad) call lcall dec add adc mov sub xchg in lcall arpl xchg xor inc movsl inc jo push add out lret cltd out pop ror popf xlat cmpl in rorb add sub jnp ficompl jno xor call arpl ja (bad) insb dec icebp mov cmpsb mov pop push inc or xchg inc aaa lret jne enter cmpsb push dec call rcrb (bad) pushf jno shlb repnz outsl jae push cltd mov lahf inc inc cmp push push push xchg addr16 mov mov or fldl cltd aaa (bad) in inc addr16 int test (bad) scas xchg mov leave inc into pop bound fstpl fld ret loope sub in popa (bad) pop (bad) stos dec mov jl push insl mov mov outsl lock mov mov (bad) and fwait jne push mov scas xchg pop aam ror stc sbb xchg xlat push aad out dec stc addl adc add lret sub scas pop mov loop jno mov lods js rcll mov or jne into lds pop imul stos fwait imul push pop daa call push mov xor test (bad) (bad) mov je gs mov sub jne movsb jge xor mov addr16 and test inc mov dec adc mov inc std movsb push and gs or (bad) xchg sbb and jbe xor cmp and mov cs adc pop jbe mov andl (bad) icebp (bad) mov jg sbb lret orb fidivr bound jne ja mov or push nop js mov int int mov or outsb arpl xor ljmp xchg push jecxz adc cltd xor lret out jae cld (bad) mov scas out addl pop test mov sbb gs mov jp adc les pop sbb lock in (bad) ficompl mov pop loopw aam mov adc movsb xlat xchg sahf or sbb cmp mov mov loopne les lods pop add pushf pop or and lahf mov divb cmp or enter leave les and addr16 jo popf movb lahf mov sbb bound arpl inc push adc aas mov out (bad) xor pop inc icebp lock or pop xlat cmp out hlt dec xlat pop clc (bad) in inc out call call sarl adc mov movsb aam push sub hlt jle adc icebp push xchg xor ret and out lods lcall inc rolb mov push leave leave jge pop inc rcrl (bad) pop insl pop jb push mov sbb add enter jp data16 jmp jecxz push pop cmp dec outsb push xchg jnp cmp add popf in dec (bad) loope xor mov inc sar int3 mov imul sub movb xchg and lods test aam ss insl jmp fsubs push mov xchg adc dec add jbe adc mov sub mov cmpsb mov insl mov arpl dec mov cli dec inc pop adc adc sbb xchg fistl outsl lock sbb out push pop es adc fcmove or lcall and sbb ret xchg adc mov jns jns jl mov cwtl fimul sub movsb or mov xor or pop push outsl (bad) jae arpl in mov pop notl push inc pushf or mov cmpsb mov testb mov dec scas push add dec orb cmpsb pop addr16 fwait adc subb push sbb decl sbb (bad) inc xchg mov enter cwtl lods lock add ja push sahf das pop add mov add loopne outsb in cs pop fidivrl mov dec (bad) cmp or mov adc or aaa inc lahf imul or jmp test sarb test fwait xchg jnp add (bad) pop or mov jg cltd maxps setae cld movsl sub aam (bad) mov sbb jp (bad) enter jle scas std adc or lods and cmc sub xchg and dec or sahf nop btr sbb add mov cmpsl lahf out mov incl lahf into push xor stc or leave outsb mov xchg icebp jno and ja nop loop ret mov gs (bad) fnop push xchg mov dec adc xor push clc addr16 xlat or xor push enter xlat ret aaa in fimul cmp ficom push mov add pop sbb icebp push mov add out inc xchg xor pop ret mov test test mov add ret xlat shlb and clc sbb mull cmpl insb adc in and cmp jns retw sbb mov mov jno hlt mov mov test inc je mov lods mov push (bad) std in cwtl sub ret out mov mov fnstenv mov inc dec dec imul push sbb ljmp rdpmc add xor ret cmpps mov (bad) ss cli cmp mov cmpsl mov inc scas dec and mov push mov or mov sbb xchg rolb xchg aas jb in adc je jnp add test pushf and fs jnp inc fdivl jmp mov inc push add adc ret adc cs into jge lds daa mov jp and pop jl ficomp out leave movsl or popf push dec clc add or xchg stos test xchg nop push cmpl in sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sbb xor stos dec fisttpl idivb xor lock xchg popa (bad) cmpsb sti dec in stos cmp push clc pop xor cmp (bad) icebp icebp add das cmovno jl sbb in ds fdivp ss (bad) scas xlat hlt push nop mov dec sbbb sub pop aaa pop add ja cld pop andl into iret mov mov mov clc out cmc pop push test push sub sbb loopne stc cmpsl push dec add pop lcall outsb dec pop xchg sti mov clc cli std xchg ds cmp jne xor xchg dec movb mov or cmp pop stc shrl ss pushf adc roll stos cmp loopew adc sbb xor sbb enter adc rcrl lock mov mov lock or ljmp jb stos sti xlat sbb cmp sbb lods scas xchg lret xchg push test cmc cli outsb std mov sarl pop mov jb push xor cmp xchg popa jbe (bad) sbb sbb pop loope,pt xchg shrl mov icebp ljmp insb adc scas or inc call sub (bad) sub arpl dec jp mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret sbb xor aaa jg ja push paddw push cmp (bad) (bad) pop add and aas jle enter jb and mov xor push xchg das das inc mov es mov push dec sbb stc cli jne mov jbe or call or aad push roll mov inc js ss jne cld cmp add mov xchg mov clc imul in pop xor xchg push rorl add ret dec fidiv xor lahf push jae mov (bad) jmp addr16 xchg (bad) xor ss movsb in cld (bad) adc push and fwait lahf jl orl and in sti sbb mov push mov push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor push mov icebp mov cmp pop rcrl adc scas push xchg movsb mov test push rorb add inc add jl adc add jl adc int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 sbb xor in ret nop jp dec lcall or xor ss pop add mov jbe xor xchg mov mov cmp and inc xor scas leave int3 (bad) fwait cmpsl mov jge cmp in xchg xchg push mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 sbb xor aaa jg ja push paddw push cmp (bad) (bad) pop add test jae and and push fistl fist jb (bad) lods add flds sti jbe (bad) in inc mov fcoms jge cmp in xchg xchg push mov sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 jmp sub sbb in repz push roll push sbb xor repz shrb sarb sahf mov inc push mov sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jecxz push and xchg psubd fcmovne aaa push mov mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 sbb xor stos lods fisttpl mul jbe lret sbb pop add test jle jmp aad jp ds mov dec xchg ret mov lahf jmp pop dec xchg jmp ljmp xchg xchg push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 sbb xor addb xchg pop je mov cli mov loop xor pop jl sti inc daa lds xor mov xor push cmp dec (bad) pop fwait adc cld bound ljmp xchg xchg push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 sbb xor add pop fcmovne aaa mov mov test cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 sbb xor and ja push paddw push cmp (bad) (bad) pop add mov fstl add cmp or inc test or mov jnp jp mov mov lret jne bnd lret (bad) push call add push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp add push cmpsb cmp stos adc cmp imul fistpl pop mov stos jbe adc outsl push inc pop repz cwtl xor cli dec or into lahf jmp pop dec xchg jmp ljmp in sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 sbb xor stos lods fisttpl divb int3 lret shrb sarb sahf mov inc push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 sbb xor stos lods fisttpl sbb cmp add andl dec lods mov mov or repnz sub repnz jne push mov xlat cmp adc adc xor jecxz outsl push pusha push in jle hlt xor xor popf sub inc jp inc add and jae movsb outsb jle jmp xor jp aad pop lea insl add enter and icebp pop loop stos mov push (bad) mov cwtl lcall fstpt in sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret sbb xor stos lods fisttpl divb xor clc (bad) dec sub mov enter (bad) aad push mov mov scas icebp mov cmp ret dec mov mov enter xlat out or mov push mov sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor mov std jne mov and adc jnp push popa imul push pop dec xor cld fistpll or mov mov mov lods mov lahf mov cmpsl xchg dec fimull cmpsb inc pop mov push stos xchg jle mov in and cmp lcall (bad) daa imull jns scas or cltd popf enter add xor push cltd jl rolb inc mov pop push imul pop enter (bad) addb mov sbbl cld fistp sbb jl pmulhuw test or ljmp dec mov test mov test lods (bad) and xor lods mov sbb loop and and pop cmp jp xor aas xor fwait pop bound (bad) sbb push mov xor xor xorl lcall lcall add dec (bad) push xchg loope in lahf jb xchg jbe mov ljmp lea iret jne xlat cmp aaa inc jp in repnz xchg mov mov fsub shll pushf int3 das sbb inc push shrl and stc (bad) loopne mov mov and mov mov mov cmp dec jns stos out jo enter xor lds stos pop jmp mov inc loopne mov cltd jl fdivl push mov xor ljmp add nop sub in out or movsl xchg test xchg jne out sub sti dec hlt cmpsb stos fnop inc pop aaa sar add (bad) lods cwtl leave xchg add fidivl xchg ret cmp (bad) and push mov inc std push cmp hlt and jg dec xchg aad lea stos push nop xchg test sub in pop push aam pop dec repz movsl testl imul clc mov pop (bad) ljmp sar adc pushf adc lret add shl pop out jo test mov mov sbb in hlt cmp pop lods xor jo add or aaa fdivrl push rclb sahf mov mulb repz sbb and cmpsl outsl push enter rclb outsl xor sbb adc (bad) pop bound jge aad mov push call mov xor mov test sub movsl sbb jecxz cmp or popa sti xchg ja pop mov enter insb xlat out shlb sbb inc vmovlps mov pop aam pop lock test jl lds in cld mov pop popa jns test pop xchg push mov pop mov pushf mov das xchg pop push jne xchg nop bound fs add dec decb out cmc pop cli in test jmp psrad (bad) into jb jnp mov stc add pop mov out jecxz sub adc xchg pushf and mov addl or cmpsb or and mov jl stos test in xorps js pop jg sub gs test pop or out aas in or or test add inc xor xlat cmc fild loopne pop cs mov test (bad) jmp mov cmp daa repnz or stc push adc sti repnz notl jmp xchg movl int je adc add subl rcrb cltd and jno jl pop push dec js jno cltd (bad) mov movsl or jp and je cmp in mov jecxz push pop mov insb jle,pn sti (bad) mov mov (bad) fdivl sar icebp and sub scas xchg cmp data16 arpl imul jmp scas mov lret push push cmpsb xor push cmpsl mov out mov addr16 mov fistp jmp ret add mov movsl xchg xchg mov sbb add pop test cmp dec dec cmp adc in push test fldenv and sbb add jecxz sti imul js mov xor and cmp xor imul mov mov into out sub ja es lret add and mov adc xor mov pop xchg mov xchg icebp mov sbb (bad) sbb sahf imul mov mov dec icebp add lea mov cmp rorb daa lret jle jecxz cltd loop call outsl stos (bad) imul sub (bad) fld sub popa inc mov xchg push dec rcrb pop (bad) es lds roll push xchg (bad) hlt cs mov sarb addr16 leave ret push andl push or fsubrs jg cmc push stos movsl mov sbb call jl iret push pop xchg jne cmp or pop mov jmp push pop (bad) fsubl popa jns decl clc xlat xorl (bad) mov pop or mov out (bad) or xor insb lea add mov jno push mov dec sarl ljmp sbb push adc jl dec cmp mov rcll imul mov int xor stos cmp (bad) jo test cmpsl mov sub movsl fldenv sub sub mov xor lret lods xor into (bad) mov mov ss out aas inc sbb dec xchg test jne cwtl mov inc mov fucomp in mov pop aam leave inc add pop sbb imul pop and mov stos leave push dec xor pop cmp out sub loope mov mov leave pusha xchg sub scas sbb inc or cli sahf jne aas mov lcall fist adc mov or in mov test pop lods cli int3 cmc fstl mov (bad) ja push cli repz dec xor sub imul les loope dec sub jno pop cmp adc das dec dec mov std xchg jp xor pop ret fldl test movsb jmp inc and loope movsl icebp sti stos mov loop push js ret mov sbb sub adc loopne iret jle mov scas pop outsb cli in stos pop dec xor pushf jbe stos xlat or and xor ss mov int3 imul dec repnz mov icebp or sbb int mov mov cmp sub cmp push test mov sahf mov inc hlt xchg std test add enter test (bad) cmp shrl shlb mov fwait pop rolb ljmp or sbbb mov test cs or nop mov sahf inc pusha sub xor ret mov pop cmp mov xchg loop gs (bad) cs aam add pop pop fbld mov imul ficoml cmp lds mov (bad) mov fiaddl mov fsub dec mov cld sub push aaa dec mov cs pop fucom imul jge cwtl pop dec lcall xchg dec add cltd push lahf push add cs fstpl rclb into and js mov or test mov addl les fld arpl in (bad) hlt insb push insb fidivrl insb mov push popf add inc les mov sbb into fsts jmp in sbb lea mov inc xor clc sbb fisubr shlb mov and stos outsl (bad) push vandps hlt int3 roll and dec cmp sbb fist jbe jb nop mov outsb mov xchg mov xor adc call mov push btcl jb push bound gs movsl insl mov in jle sahf icebp aam or and pop fcmovbe fcomps movsb or pop sbb js adc mov stos mov xor inc fisttp fidivr xor sub xchg lahf ret lret movsb pop rcll mov mov imul (bad) sbb add mov inc jnp xchg jg enter pushf fsubrs push stos dec mov movsl sarb lret jmp mov mov pusha sub test or mov popf dec xchg sub and jg mov inc call dec mov pop rcl mov xchg out (bad) jecxz mov sub pop scas xchg mov push mov cwtl jns (bad) cwtl add fidivl push stos insl mov xchg push popa inc add mov (bad) mov enter push sub cmp mov movl inc ja push ljmp push adc in addr16 lea push loop cltd movsl imul mov or fidivr fstpl imul gs or pop cmp push nop/reserved mov cmp and aad cli int jmp dec fist mov sbb sarl or (bad) decl jp lret sbb and add insl and daa or movsb enter dec inc into xor inc or fs sub sub and hlt cmp xor pop outsb add mov (bad) nop dec cs dec pop js fidiv pop arpl cmpsl imul enter dec aas lds dec and push scas int3 jl add into out jbe pcmpgtb mov (bad) xchg sub lods stc push push outsl xchg xor push stc fldt pop cltd ds dec stos xor lds mov cltd jae add movsb adc inc cmpsb (bad) cmp adc outsl pop std fcomps jle and mov enter mov imul push mov pop (bad) sbb jmp mov mov aad jmp mov xlat sub push push icebp cld add notl xchg cli xor fs sbb jbe cmp cmp out or insl jl ds dec into sub or pop mov mov jl movsl lods iret push inc mov (bad) lock pop mov adc cmp cli cmpl lods or mov out iret int cmp out mov lods aaa or jp push aam enter stos mov mov (bad) rclb cmp mov and cld xchg push push cmp jbe nop mov jmp add (bad) dec (bad) adc fsubs je xchg dec loop ret pusha xchg lds mov sbb ftst dec lods xlat cld cmpsb sub or jp xor dec dec cmpsl (bad) dec jp (bad) aam mov dec mov mov jle imul cltd fwait or adc xchg jl ret ds insl pop pop loop jecxz test int3 les mov ret movsl enter and (bad) adc xchg inc aad jo sti pushf jl xor mov out mov or inc shl loopne (bad) xor cld xor stos mov rcr mov cmp jl xorb and mov dec pop and insb push (bad) idivb scas sbb sub sbb ja (bad) cwtl and sbb sti mov adc cmp adc xlat invd jnp out add and mov xchg std pop arpl movntq out mov jmp jne add out pop mov mov flds dec sub push jecxz mov dec push into xor pop push cltd add (bad) add hlt mov int3 mulb or cmp popa (bad) out arpl enter fsubrl mov cmc pop cmp imul sti es imul xchg lds das imul std int3 jmp fsubrl xchg xchg int dec sbb push lahf adc inc xchg fmull (bad) lcall fist cmpsb cltd addr16 sbb mov inc popf fs mov lahf jl add inc push das sbb lret aad mov jne jl jne mov dec xchg pop or test in call and and mov scas into and inc in or mov shlb fistp sbb aad (bad) xchg xor mov jnp aam xchg insb fs xor pop xchg adc movsl xor pop insl int cmpsb popa cmp lcall or imul pop mov addr16 jns pop jne sbb jle iret outsl push push or ficomp jecxz stos mov outsl stc popa cltd test int mov xchg testl popf xchg jae outsb jnp xchg pop and cmp xor lods stos pop mov movsl xor in imul push and cmp and out test lret and sbb aad inc nop fadds insb adc repz out mov mov pop data16 sbbb xlat pop mov mov imul lea outsb cmp and cmp dec lret pop jmp mov shrb add sub sub mov pop or addr16 aas mov jae dec (bad) sub fchs cmpsl sbb mov inc mov shrb cld imull loop pop outsb gs fmuls adc jmp fnstenv cmp inc pop int test jmp xlat roll (bad) jle shlb daa (bad) or mov out add ja ds jae outsb out out xchg push xor pop mov pop in mov push jg ds scas int inc dec insb push iret and pop cld xchg stos out jbe add cmp int3 std or das cmp cmp int3 fcom in mov adc sahf (bad) aam leave cmp pop cltd mov ds xor clc ret ljmp push pavgb sarb out jle jp mov or gs jle jo lcall movq mull enter xchg jno xchg sbb stc pop aas jae xchg mov (bad) mov dec cli cmovp nop mov jne cmp push int3 xor pop adc xor sub (bad) cltd xlat (bad) mov inc jne inc fistl in in out fwait insl sbb fsubr and add mov push popa (bad) pushl mov sub std in fnsave jns push adc pop popf pop push roll stos cmp lcall cmc mov pusha test jbe cmp mov sub pop orb push gs push push and les jae lods movl insb pop add ja jg test push xchg andb push push pop and xlat cmpsl sub pop in mov mov mov mov mov push cmp int push aaa lret out push call mov inc (bad) jns aaa rolb xchg fs push lcall mov xlat lods insl and pop int js inc roll push add je jae dec dec mov gs sub adc (bad) push fnstcw (bad) sub stc notl icebp mov out jl pop fstpl mov jbe fistl or jae bound jl push test inc dec and lea mov or out mov mov and push loopne std dec stos out push aam js loopne and and pop enter add sbb sti mov fnop cltd inc adc cltd sarb jno out mov cltd in js cld mov daa xchg push mov ds xor (bad) stos pop mov adc adc mov sti lds add out xchg xchg inc and movsb fsubs dec cmpsb movsl adc out andb mov push ss mov aam mov jecxz push insl sbb fsts test lret add dec cmp push js push pop (bad) rclb fisttpl popa into mov mov scas xchg aam aam mov add ja aaa push mov movsb ficompl lret mov pop adc and das xor add ljmp pusha cmc jl xor mov inc lret add sub imul in loope sahf scas xchg mov and les js bound jbe xchg ljmp ret pop cli push ret sbb repnz add imul in stos mov shll dec push cmp fistp sbb mov sub and cmp mov (bad) sahf xchg push dec pop (bad) push lds ljmp push push aas int sbbl jl push pop repnz imul cltd insl scas imul sub ret (bad) mov out sbb push outsb dec adc or xor add ljmp fbld test xor hlt add jae (bad) dec mov (bad) mov lcall xlat (bad) pushf cmp mov mov and push sub scas adc sahf mov xchg dec aam mov xor inc (bad) sub lret dec fistpl xchg fidivl adc scas or xchg sub adc fmuls pop nop cmp hlt push mov mov mov neg insl pop sti inc dec outsl (bad) mull pop divb mov adc js (bad) (bad) jae jmp mov out in clc imul into jo pop es movsl pop inc stos into repz push test mov jle push fndisi(8087 rcl in or mov or mov xor mov fdivrs xor jae xchg jle mov inc jnp or scas bound repnz and mov arpl clc lods sub lods inc add lret xchg pop fidivrl jmp cld and cmp pop cmp pop mov xchg push jg xlat xlat icebp orb sub dec inc divb add imul jg cmp leave add sub (bad) imul push xchg aad add cli pop jae jle repnz xchg or lcall pusha jne das sub push mov jmp dec lcall (bad) sub jo sar inc mov addr16 sbb sub inc (bad) and cmp adc fnstenv mov and in iret loope cmp fsubs cmp xchg insb cmp xchg and adc (bad) push mov es sbb (bad) icebp jne das pop inc mov dec cli jae out and push cmpsb in insb movsl into add lock or (bad) in fimull outsb ds push pusha aam xor stos add or mov (bad) int inc xchg icebp fdivs fstl jbe test test (bad) xchg pusha ficompl xchg jnp jg into adc sti xlat xchg ret jp mov sub pop mov lds fcmovne int3 push or cmp fwait sbb dec adc adc int3 lcall mov adc sbb cli push sub stc and add outsl inc jne (bad) (bad) jo insl xchg int lahf es xor and in inc sti mov sbb jge and cwtl and adc sbb (bad) jo pushf sbb idiv inc fsubp popa js (bad) lret cmp add dec mov ja cmp data16 sbb lds js lret mull fucomp test jecxz cli lahf mul adc pop mov into push fdivrs test push fisttp dec cmp (bad) loopne fwait mov hlt test ljmp add pop xor sbbl lock cmp cmp pusha (bad) gs fdivrl ljmp or jl dec cmp adc rclb shrl jne mov std pop xchg xor ss jne out jge add xor adc dec ljmp cmp push push jmp and clc pop cwtl mov mov mov mov sub fiaddl test addr16 out popl jno imul fisttp fisttp xor jle sahf add push inc pop (bad) push mov movsl lods (bad) xor mov xor scas mov dec cltd pop scas cmp gs mov cld xchg (bad) aad aad cmc push les pop (bad) push sub es repz dec movsb add xchg (bad) out jb sbb sbb ret sub dec fnsave or lods xor mov push neg dec dec pusha push stc add push add push test jb push xchg cli adc (bad) xor mov sbb (bad) mov imul mov loop mov (bad) flds loopne,pn xor movsl push roll pop cmpl fildll loopne icebp sbb das or cwtl cmovo mov icebp roll cmpsb sbb cld das (bad) int3 sub loope mov lahf sti xor pop int3 (bad) adc shrl fidivrl popa (bad) xor jbe (bad) bound iret and pop xor mov je in xchg psubusb add mov and add lret sti push loopne xlat xchg sbb mov daa fnstsw pusha outsb sub xor pop or movsb push mov ljmp push test out aaa imul scas jge mov je in dec mov cmp jno pop xor insb adc and and jle rorl stc int3 (bad) std imul jns pop (bad) and repnz sahf negl andb adc push arpl std dec imul pop stos dec push inc mov sub pop xchg (bad) xor cmp sub inc xchg scas push jle lock jmp jb or scas das push shl gs and repnz nop and and jg mov push jbe mov test fnstenv lahf ret mov jle cli fisubr je call mov or pop pop lea ss test sub xor fnop outsl cmp scas arpl or dec fisttpl cs jg jnp push mov xchg mov sbb mov dec dec sbb mov push lock lahf pusha sbb repnz enter push xchg andl xchg cmp sbb bound mov jno mov arpl pushf adc xchg pop fnstsw push sbb clc xorl out arpl jg stc gs jne push in outsb mov aas lock push mov xlat lahf lods inc mov sbb xor aaa add daa cs call and repnz leave mov mov ds push or jae aam mov xchg (bad) repnz mov inc daa aaa add xor pop outsb jge mov push push sub and cltd les and adc sbb (bad) test push bound push pop dec adc data16 adc stos cmpsb fmuls dec fucomip mov hlt sbbb scas es hlt pop lret sbb cld mov cwtl sbb loope xor mov out jo mov outsb fnstsw int3 cmp imul ficoml js cld rcll push push dec jmp (bad) xchg xlat mov cld cmp aaa or inc xchg pusha sbb pop call adc xor dec mov mov push sub std pop inc sahf and jne sbb iret push add daa ds in rcrl imul lds adc popa test and sbb jge lds ret fcomps sub insl inc push cmp push sbb bound inc add out stc cmp jo gs mov les cmp push loopne jno out (bad) adc test pop data16 pop lods add mov xlat psllw xchg and ret lock mov sahf mov sub jnp,pt mov cmp sub and test sbb xor rorl sbb sahf bound pusha xchg enter mov sbb sub and es out mov sbb pop outsb jb push jbe dec dec sbb mov jb dec cmp xchg loopne sete xlat rorb cmp sbb adc xchg and mov push sbb mov das nop enter add or stc lahf hlt (bad) cmc adc jno mov (bad) mov fstpl or int pushf stc xor dec leave aam fisttp dec leave les (bad) sahf cmpsb sbbl in xor and js pop out icebp loope cmp insb add xor jge jne push gs inc (bad) sti and fcomps push xchg inc aad movsl cmp mov sbb int dec ret mov and push in sbb outsb repz (bad) fstps shll in pop outsb stos movsl mov cwtl std xchg sub mov cmp shlb test dec cli inc adc icebp imul lock adc into cld cmc jge popa xor xor pop sbb and jns cmp sub mov cmp mov jl xchg mov movsb aam aas loope (bad) out add xchg pusha pop ss fcmovu jmp cli rorl ret sub ss fcomps out inc pop pop out pop fsts push mov adc and adc jge das test ljmp stc (bad) mul out fist push xchg dec in insb rorl add outsb cmc fildll xor sub dec sub sbb pushf mov in push mov adc fmuls inc pop inc mov mov fwait mov test popf cltd fldt mov (bad) rcr pop or or rorb sbb (bad) aam insb adc (bad) daa lea aas fiadd lea xchg iret jle orl jmp mov dec fs jae mull out xchg push adc adc ljmp dec (bad) and repnz int3 in (bad) jge daa inc mov push jne in mov bound adcl bound mov jg aas js movsb jmp cmp mov cwtl add mov frstor dec sbb mov (bad) mov fdivl lahf dec cltd mov daa xchg pop and mov aaa xor mov cmpsl cmp aaa mov jecxz add xor push xchg je movsl inc xor les sbb jne mov jp rorl dec test and pop xchg mov push cmp push mov in adc sub add lahf std js sub mov jnp pop push scas add fildl pop (bad) add popf in jb pop add out mov xchg and fcmovnbe inc inc into xchg lret xor push stos adc pop dec xor inc in dec scas mov repz sbb and loope mov dec cmc cmp (bad) mov sbb imul adc stos mov push aaa call mov cmp adc push mov or out bound test test cmpsb adcl adc mov adc (bad) fcompl addr16 int3 inc es lock cmpsb fimull fildl xchg (bad) mov fnsave inc (bad) mov cmp cmp aas fcmovb sbb (bad) jb fmuls pop imul sahf loop out fnstcw rcl sahf push xor movsb adc idivl mov test sbb fsubr shr or mov adc or adc inc sub aas mov nop xor cltd xchg mov mov xchg jge sbb into xor xchg fstpl mov das mov sbb mov test aaa cmp adc dec pop mov mov or push fildll dec or and gs js jno test xchg flds idivl jo arpl pop jecxz ret out sbb fdivr fdivrs out aam scas cmc xor inc xor push mov push mov loope xor mov daa ret ljmp adc dec xchg mov test push stos test cltd inc cltd bound loopne jb (bad) fiaddl stos sub (bad) dec lods aaa jno dec xchg (bad) lcall clc xor ret xor fnstenv inc xchg sbb loope mov (bad) stc test out push mov cmp out mov mov and adc sub or mov pop mov push test jge and lret xchg add mov (bad) jmp mov inc cmp and push jne mov mov xchg push inc xor push push cmp cmc out enter cmc int mov sub icebp and dec xor test xchg xor out iret test push divl icebp mov push lods mov lcall jne out mov inc dec dec mov cmp jmp mov push xlat mov xchg xchg lods aaa xor jmp mov jae cmpsb hlt fnstsw mov pop arpl and adc adc cmp inc push cmp (bad) aas sbb sbb rcll xor push sbb sub jl dec inc lret mov mov xchg or push inc pushf pop mov pop push push es push dec shrb aam pop mov in push jne inc repnz pushf sysret lret mov jb (bad) mov adc pop cmp add popf and xchg (bad) aas dec sbb aam pop sbb psubusw pop mov imul xchg xor call (bad) out lds into imul (bad) (bad) sbb outsl int3 cld fisubl fs sub xorb ficomp lcall movsl hlt push push (bad) jo pushf popa mov jb adc pop je mov es xor xor mov repz test and repnz push aas mov jp insl and repz pushf xchg mulb test add mov jecxz loope xor xchg jg and ret sub insb (bad) cmpsb add std pop andl lea or cmp sub outsl mov loop clc jle mov mov sub dec imul pushf jnp jb ljmp jbe cmp adc dec cmc stos inc xor outsb add cld dec ja add rcr mov mov xor rorl add dec or stos xchg loopne hlt cmpsl aaa mov cs dec mov movsb dec xchg pop clc imul cwtl stos mov test sahf xchg sub adc test pop sti stos pop in outsl and cmc sahf leave popf stc pusha rolb fldt mov out cmp cmp cmp mov xor test movsb insl jmp setp jg jno mov cld test (bad) cld mov xor pop xchg jnp lret jl movsl in mov ss arpl sub cmp mov nop ret aad and or jl lret je and push scas es repz popf les int push xchg sbb aaa movsb pop cwtl jae loop clc (bad) aaa xchg mov pop inc xchg lock push dec sub popf adc mov lret cltd dec popf repnz mov sub sti mov lds jecxz imul xchg cmp cwtl mov adc mov pusha jb in rcrb inc popa jb negb aad xor cwtl clc mov adc lds mov test insl sbb test mov cltd mov cmp into mov mov popf loopne fwait lahf cmp mov xor mov push mov pop xor jne scas stos pop mov xor jne cltd (bad) jb adc sbb jl xlat mov movsl lods mov inc ficom clc xchg pop or or in jns jp add push in jle xchg test mov adc or adc ret mov dec std insb pop neg or gs push sar movsl negl loopne test cs or stos sub jmp fnstsw dec mov mov out push loope sub test cmp fs lcall jg mov icebp mov imul aad int mov dec push jl pushf mov mov repnz pop movsl pop mov xor mov jg rcrl mov dec cltd sbb ret push or jbe dec in sahf int3 mov js fisubl sbb mov clc push fisttp dec lret leave aam mov xchg xchg xor fsubrl cmp ljmp mov mov (bad) imul add push ja mov stos in outsl jbe sub int3 and outsb pushf cmpsl lock jle or adc test test lock testl or jl (bad) enter ds jno inc into rcrl mov lret icebp mov mov pop aad pop or test cld jbe and sti push mov sbb out imul (bad) jo push add add pop cmp in pop out push sbb iret fwait popa cli add lcall fsts or xchg (bad) je add mov and mov adc jge fnstsw popa movsl nop repnz pop lret push pop cmp xor cmc dec lret jmp pop push subb pop jo inc fild sub inc pop xor sbbl dec push lock mov arpl sbb (bad) adc mov and (bad) and aad jmp (bad) stos or outsb test rclb fcoms jno stos sub inc mov pop dec pop sbb stos mov popf aaa cli std cmp stos adc imul inc imul ds nop andl inc pop xchg add xchg pop enter dec rcl mov xor clc mov push pop stos cmpsb mov std xchg nop jecxz mov lret shrl dec sub sbb in aas jecxz in sbb jle push xchg jecxz stos jns aas in and std mov xrelease sbb ret test movsl ljmp jo es xchg sbb aad arpl mov cmp or sti data16 lods lods fbld and pusha mov adc mov out pop xor sub sbb or push dec fidivrl mov mov xor loope jno pop out dec fadd fmulp lods xorl sub adc pop enter cli mov push (bad) (bad) loopne mov cs mov sbb ret dec or aas push cmp pop dec ja mov jp dec adc xchg ja inc lcall and jg test (bad) out mov mov mov fild xchg iret sub aad bound int3 add lret (bad) adc daa add mov popf xor sub popa add push jge mov (bad) clc pop movsl mov jmp cmp out jns inc cltd aad popa ret xchg fisubl mov aaa push adc sbb int mov pop pusha sub aam sahf cmp clc imul (bad) bound inc and mov mov fadds scas lock xchg xor sbb dec int3 or sub sahf jmp cmp sarl jle or movsb idiv xor or sarl insl dec sub sub adc sbb and enterw cltd sub (bad) in shlb mov pop cmp and lods cli mov incl mov mov pop leave stos leave pop xchg xchg and push lea add jl (bad) and jo lea jle test fistl mov or dec inc and ss jmp inc pop and cwtl leave out mov movsl in pop hlt call in test dec out fcom dec or and pushf cmc sbb cmc jp ret push and js repnz pop xchg jnp es pop sbb push rorb cs outsl mov jmp jge or push mov mov nop lds xor outsl jmp lret jb ret xor sbb leave repz xchg in push or xchg pop sub cmpsl movsb das in mov pop xor loopne mov cmpl mov mov push mov in dec call daa and js adc cmp mov add cld lret push fcompl jb push or mov jp cmp (bad) jg xor or cltd add daa arpl mov jp (bad) jo mov pop scas faddl push dec stos cmp das lods jmp aas sbb inc mov mov incl shrl in mov add out shr lods inc cmpsb push enter mov in icebp lods xlat xchg shl sub push mov xor ret lea insl lahf xchg mov sub and pop cli ds and mov leave adc sub jno xor push mov test lea mov push cmp sbb xchg adc out aas je push push xchg inc outsb adc pop lock (bad) (bad) in cli sbb jle mov in test hlt and pop jecxz loop ds or jge mov loopne mov inc icebp rcr jmp out xor in jle adc push xchg jge lock (bad) pop fwait pop outsl sti cmp dec pop es int (bad) mov (bad) push (bad) jecxz push es sub xor sbb jb aaa js in sub jno cld sbb popf adc add xchg jecxz ljmp cmp std push cmp xor mov clc movsb fs insb cs ljmp loop sbb push inc (bad) pop push aam push inc clc mov icebp stc mov fistpll push pop xor mov (bad) mov mov je adc inc ss jle ret sbb sbb call push mov mov iret popa or mov aaa jae dec xchg xchg ja push cmp jp mov dec movb mov fildl mov cmp mov (bad) gs jno and std arpl cmp jg xchg (bad) negl movsl lret push sub fldenv scas and mov and cmp xchg pushf mov fcmove sub dec pusha jae and enter pop mov jmp jle jmp lock fs adc jmp pop jmp xchg dec sbb xor sub jae inc (bad) sub popa loope inc das cs push movsl pop or and push mov std out mov sub adc cmpl out clc xlat jnp inc das jns dec gs mov fnstsw outsl add or add pusha cmp push inc in int3 mov jge (bad) and jne and add mov sbb adc or mov lods jae out or test out mov lock push imulb mov xor adc adc push inc xchg f2xm1 mov in push mov xchg hlt pop mov aaa mov lret adc lret repnz adc (bad) pop xlat add inc (bad) mov dec cmpsb fnstcw jmp jno xchg xor adc mov mov add pop les or xchg sbb test (bad) cmp inc jp mov inc call (bad) fist insl push mov ss add xor cltd lock enter adc pop (bad) ss in dec mov add pop inc pushf cmp xchg rorl les dec add pop movsl mov sub outsl orl push call mov and adc mov imul xchg mov inc mov mov test aam mov sbbl add cwtl dec sbb xor lret std gs or movsl push mov dec ret inc push testl cmpsl xchg lock ja cmp dec scas adc push ss aad pop pop pop testl mov sarb add out jmp jns imul into sub outsl jns and push xchg push push add or lret cmp add xchg xchg je pop aad xchg ja into rolb inc xchg movsb stos mov sub add in mov pushf rolb dec mov out aam stc fldl2e or adc cmpsb inc pop lds dec sub std or sub ds rorb pop int jl rclb add dec rcrb mov sbb unpcklps movsl jmp jo loop mov mov lea addl xlat leave imul lods pop fstpt push push fdivrs stos pop lods xchg push pop jae das repnz sub and xor (bad) push mov mulb jb das and (bad) push clc int3 push jae leave mov nop cmpsb push push lret inc mov movsl test pop fwait add mov add push mov repnz mov sbb sbb repz jmp push (bad) lahf cli rep inc scas and (bad) mov fiaddl pop sbb cmpsl xor and or outsl lods jecxz shlb inc movsl sub out cmp mov inc pushf sub daa arpl cs xchg jae loopne mov dec mov jo ret mov stos jmp cmpsb mov in sbb and lret cmp mov and mov sbb (bad) es mov or dec shlb aaa jp,pt dec out fnsave pusha lods repnz arpl shlb mov cli xor loop test ficompl (bad) lock xchg pusha (bad) and xchg and out popf shll xor (bad) test jno in sub icebp sub nop mov ss sbb xchg jne test mov inc dec lret pop imul adc or jge into aas add adc mov xchg cmp xor mov (bad) enter xchg shrl mov add sub outsl arpl jmp lds dec mov test mov jo leave mov push test xor fwait data16 (bad) je add movl and or sub in cmpsl mov mov pop ljmp insb leave das imul imulb mov cmp lcall fwait out out fisubr pop xlat sbb ret cwtl outsl mov xchg push inc jb cmpl mov inc addb sahf movsb sub jg sbb test vcomisd js mov fwait pop inc lods iret lds inc jae add cmp add fs and xor and or or push mov jg and jae popa mov imul or out push inc dec inc aaa add leave push arpl int rcrb stos lods pop in pop mov fbld and addr16 dec (bad) and cmc and outsl or or movsb fistp cmp lcall dec stos sub sahf or fidivrl and lret outsb mov push dec jecxz cs sti dec push loope push mov pushf mov xor icebp mov cmp int xor fprem insb rol mulb dec aad mov jmp out add call jecxz (bad) cmc dec xor lret cs sti add jle fsubs push std test and pop shr dec mov add dec add leave mov push cmp out add push cmp sbb scas sub cmp fnstsw add push or or mov sub cli jae jge cmp cmp push nop clc jb dec xchg ret sarl and and lock mov and mov shrb loopne insb aas add pushf aaa stc mov js jb imul fsub fbld sti bound jg xor (bad) ljmp fildl mov dec (bad) mov add lcall insl jge mov (bad) xlat out mov and rorl sti das leave and lods leave pop fdivrl xchg or addr16 cmp pushl adc outsl xor movsb scas dec push adc jp out mov or and pop popa out cli and inc pushf js cmpsl xchg les xor jl jnp xor inc mov pop shrb push or pop mov cmp pop and (bad) je ja push xlat mov rcrl pop push xchg gs das sbb adc push sbb add in cmp rclb push loope in loope in outsb mov call inc (bad) scas jb fsub out ret dec sub int3 pop xor pop das xchg (bad) repz out sbb test jge mov loopne rcrl xlat out adc pop or test add jle sbb or xchg jle (bad) mov arpl xlat imul cwtl mov add cwtl rcll mov jge je push and cli dec sbb push push jne jg jno in mov out mov xchg dec ffreep sub mov xor xchg mov dec push in loope sti lret pop push shrb gs sub and pop sub and xchg dec lcall and popf lcall mov pusha push (bad) dec mov shrl jge dec dec movb lret (bad) aas mov ficom fnsave movsb stc and cmp movsb xor arpl sbb out fimul enter mov fsts pop out dec and mov push popa ret jnp push rol adc add das popa pop out fldcw das jge pusha test mov sbb dec lea inc insl sub aad xchg out sub (bad) aad mov sbb aad mov subl fs outsb imul xlat push push data16 pushf rorl sbb lea cs es mov cmc lea (bad) or scas ret sbb jl fs repnz imul xor mov sub mov jp ret cltd mov leave fsubs popl pop xchg out inc push std addr16 dec push in xor insl push iret or mov mov notl push xchg (bad) insl mov das jo push lock leave gs jns fsub out in in repnz cld mov add sti mov cmp mov cmp shr sbb popl aam js mov xchg ljmp test mov mov pop and popa xlat fadds add sbb pop fs sarb int3 or push xchg movsl mov hlt jo dec pop push mov loop mov sub fistp add into cltd adc fucomi add fcmovbe pop mov pusha cmp push or ret mov icebp inc cli sahf adc push sbb mov ret les mov ret aas cmp loope out scas fstpl loop cli xor add mov stc mov or fiaddl jmp js (bad) mov (bad) xor sbb rcr xchg les pop (bad) lods (bad) jmp jns lods fisubl js movaps add add mov popf and push lods dec dec loope push imul mov pop pushf ret arpl (bad) lret insl ds outsl xorb jmp rcrl in leave cltd ds adc sbb test sbb or add movsl xlat aad xchg mov bound push movsb jp jge sub and lds add cltd and addr16 das test xchg mov and sub push or mov test outsl cld loopne adc outsl adc dec into add aaa xchg mov into dec sbb into nop dec pop jne test push (bad) pop add jl dec push sub xchg jbe adc and inc fst rcrl cmp sti adc push pushf jae les pop cs cmp inc rcrl push xchg aad lds lret sub pop sti scas testl shrl push cmp int push mov mov movaps lcall xchg cli jmp out loop test push dec dec jl cmp xor cmpsb xor push and negb and in dec sbb dec stos outsl sbb push pushf and and mov aas hlt jo je fdivp sbb mov mov pop xor into jnp adc mov (bad) xor adc shrb mov dec shrb sbb push fisubrl fimull ss mov shll stc mov pop jb sub js sarb jge jne jns push mov test xchg jg dec jns ret mov mov mov sub jo mov adc popf xchg mov push pop add sti xchg stos fstps xlat or outsb movsb jnp mov cmpsl inc and sbb in push inc or push xor and sbb ss pushf mov mov in jae push aaa test lods xchg jecxz stos imul dec ja adc aam cmp (bad) xor xchg movsb cs inc movsl in ja jecxz jecxz xlat jbe push and rolb push call mov mov (bad) push and pop aas xchg mov imul xchg inc mov es test push dec jo aam mov xor pop adc dec aam push adc push test add je lods das je push cmpsb inc xor mov xor sbb shrd call pop push xchg mov sahf add aad add lahf xchg dec mov rcrb in dec push mov push inc pop fprem sbb icebp mov sub cmpsb mov xchg push inc movsl ret in or mov loope dec outsb jb stc out fcmovu stos pusha xchg inc mov lahf cmp add jmp sti arpl notb insl jge xlat mov jmp in lock adc inc mov call push fnstsw cld dec mov sbb mov inc cmp mov lea int3 out xor inc shr xor jbe (bad) jle,pt add jmp sub call jp add lea lods nop insb jmp and mov pop mov ret mov and cmp mov add mov in insb ret cmp xchg lods sub inc push fldenv dec jge cltd scas sub movsl or call pushf cli jmp aas je repnz mov pop out and and mov fnop inc pop aas push mov shlb sahf lret jo (bad) mov fcmovbe cs pop xchg loopne sub (bad) outsl test je sub dec divl pop sbb push aad repz mov pop mov xchg dec cmp popa cmp (bad) cmp inc call (bad) ljmp or lea and int lods aad flds test (bad) mov mov xchg inc sub std jecxz cmpb add xor xchg jmp mov clc stos shl dec inc ds xchg adc fdivrl cmp ja loopne mov dec movsl scas push test add psllq lock out mov mov xchg sbb outsl (bad) lret aam mov in repnz outsb fsubl push jae or popa lods and jne iret xchg (bad) scas loopne mov inc data16 leave imul rclb stc and jno insl pop lods stos adc pop add sbb push xchg dec push sbb cmc arpl test ret ja loope mov add sub (bad) hlt mov mov xchg aam out jmp jecxz push ss leave loopne jge pop jns enter and jns lods push incl outsb movsl mulb sub sbb lock shr push dec lcall or clc xchg and out or sbb mov pop dec cmpsl nop xor inc jo push sbb xlat (bad) repz mov sahf sarb and stos push int xchg jmp mov pushf fisttp arpl punpcklbw js dec jle mov xor mov ror shrl adc push jns js cmpsb push das xchg ds rcll dec cmp pop sbb sub jnp (bad) cwtl es rcrl sub imul mov int stc lret fcmovbe roll xor xchg sub stos loope movsb out cs push jecxz or cmp aad imul pop cs cmp sahf sbb sub mov int3 push cmp add jp sbb dec pop in lds imul fidivr cmc mov daa stos xor mov in insb adc jg mov les inc xchg pop imul (bad) mov mov arpl sub jmp jge jns mov cwtl sub inc movsb movsl aas push mov lds push or push xchg xor sub pop jl outsl mov mov adc jno xchg pop and dec inc imul popa xchg push and inc sbb iret pxor fcom roll mov mov push aaa pop cmp stc xchg lgs mov (bad) flds xchg adc adc inc push xor fs xchg test (bad) mov ljmp std mov add push adc xchg icebp xchg sbb xchg daa pop mull jno or add lock ret outsl push mov mov push push push mov test (bad) int repnz call shlb pop mov add dec mov fwait lahf insl out das in push (bad) loop mov lret out mov mov sub push (bad) js addr16 outsl (bad) stc in sbb inc icebp dec daa push push cwtl push jbe or cli pop lcall sub nop scas push xlat fyl2xp1 xor out mov mov cmp cmp mov push inc outsb test push push and dec mov daa dec xchg add cmp into popa push and aaa leave inc shll lcall inc add stos mov mov cmpsl fcoms insb xchg fist pop stos cmp mov push (bad) fwait in jmp std mov xor punpcklwd (bad) lret jno (bad) sbb push shrl lret loop aas out cmpsb ret or mov add mov (bad) jmp lret sbb (bad) icebp or push idiv inc loope add je (bad) inc idivb sub and mov scas pop adc cmp adc rcr rclb (bad) aam jae lods jb lret (bad) fmul xchg fisubr add or iret mov cltd jb xchg in sbb and cs adc lcall mov jne or cmp cwtl dec (bad) shr push mov inc jle mov dec inc jnp jo cwtl nop mov cmpsb stos test dec or xor movsb add jle out pusha fisttpll cmc mov dec pop dec jae ss jg cmp rclb cltd and dec notl cmp and pop or in add jmp sbb ss fsubl fisubl fbstp and pop insb sbb rcr mov fwait mov xor add or clc mov adcl xchg jg mov pusha mov sub jp ror xchg testl sbb lahf lock or pop rcl stc inc cmpsl movsl into add loopne cltd sahf addw cmp mov jo in arpl push mov outsb sbb add push scas dec (bad) stos push mov fisubl or and push adc add or add les jge bound scas dec xchg push lahf adc andb xchg fild gs push je cmpsb ret lds fdivr (bad) xor mov xchg push sub add cltd adc aad push pop in loopne jbe imul mov inc dec jae rorb adc lock ljmp dec xor scas (bad) out pop rclb aam in inc (bad) enter nop cwtl add (bad) std fnstenv ds ss pop insb or dec fwait mov cld popa inc jge sub stos fistpll cmp adc lods and xchg sub push pop imul pusha int mov sbb push xor and xchg sar cs add mov scas out sti mov mov push inc dec push jge addl and pop mov mov in inc aam add out and movsb xor sub jmp mov repz clc pop adc push mov push push int std imul xor sbb mov cmp or mov inc jmp adc push mov or idivl sub mov sub icebp cmp lea movsl in outsl (bad) adc adc (bad) arpl stos or add adc push xchg in (bad) sti lret sub ja push or out pusha or test pop test cmc cmpsb shrl sahf repz icebp dec (bad) loopne inc jns enter xor pop mov push test sbb dec seto pop movsb push or das dec call push dec aam jle loop lods test stc insb hlt (bad) ss in outsb jmp jmp (bad) testb xor mov jmp popa jae cs daa pushf jb lods sbb push jge jmp pop popa rcl xor push (bad) inc movb push roll sbbb sub shrl mov test dec xor in push loopne movsb ljmp mov fbstp in push imull push outsl (bad) stos jb and pop (bad) mov push xchg or fiadd add mov aam pop pusha xor pop mov addr16 fstl dec xor aam xor jne movsb or dec test mov (bad) (bad) insb aas jbe sahf jnp das inc and movsl cmp push cmc aaa test or test push repz mov dec icebp xor movsl arpl mov stos daa sub rorl cmp mov xor push mov xor rcrl sub (bad) dec aad jns sti sub icebp subl rcll sbb div cmpsl add xor cmc mov (bad) stos jle mov in sbb rcl and leave into xchg push das in ret mov loop jns push dec aaa int sub pop adc cmp jae push imul cli aam push (bad) and sub (bad) and lea lahf leave les adc jecxz adc push pushw mov ficomp and cli aaa aaa mov mov lea repz xchg xchg test mov cmpb das mov test rcll add int3 cmp add mov lods inc fmul push cmp pop fs imul adc jo mov rorb lods pop mov loop sbb mov int std inc jmp or ds lods pop mov lcall or out jne and lods mov xchg mov mov in mov fadds jo and hlt loope lock cmc pop xchg jb fcmovbe cwtl in jno inc xchg hlt (bad) repnz in cmp lahf pop ficomp shrb and mov jecxz in add pop push (bad) lds push stos push ret cmp repnz xor or mov push adc dec push outsl mov xchg cmp mov push jo or sbb pop stc mov push lds cmpsb lcall inc (bad) jne,pn lcall mov stos imul pop scas test je insb push loop lret xor aaa mov (bad) fistl jnp fmul insb cmpsb es negl xchg fmull insb pusha or insl adc lret call mov dec mov and add lahf or xlat loopne lahf push push cltd loop in loope shrd jl add je in lock push mov pop rcrb cwtl or lods pop clc out loop es out iret pop aam dec repnz pop imul inc cld dec enter loope test xchg push out pop (bad) inc dec std jecxz mov pusha inc arpl es and (bad) stc push and out cmpsb cmp je add xchg les xchg fadd push mov dec sub mov push std add or js lahf add pop outsl jne and lea or and (bad) imul fmul mov pop test loope inc sbb pop add push pop icebp jge sbb or add inc sahf xor or adc or pop das push clc add stos xlat in aas cltd ret mov mov js,pt lahf addr16 stos jle mov nop pushf fs repz add inc call cmp pop inc fs adc dec outsl sub dec sbb mov outsl movb (bad) popa and js xor enter inc push mov cmp fbstp pop mov mov insb jns sbb cwtl add mov adc in call push addl pop stos pushf in jne fdivl mov gs xor scas (bad) js jp mov aam xor popa (bad) notl xor jg sub lahf adc lcall mov add dec add idivl clc cmp scas daa lret imul in rcrl sahf adc lret cmpsb fcoms (bad) mov inc cmc push pop and aam mov sbb inc sbb xchg rcl mov xlat xorl lret cli insl rcl shl lcall lret push push lods mulb (bad) std mov lods popf and sbb rol test jae sbb push cwtl insl mov sbb jl inc and js inc das scas add push outsl fnstcw sar test aad pop ss js test clc inc sub in add js xchg aaa cltd data16 push jecxz cwtl or xchg sub std cmp imul (bad) jl inc xchg jns data16 mov test jl xchg cmp lea in pusha push nop or xchg loope jmp bound ret outsl dec xor jno mov rcll xchg popa push sub lds add xor xchg in add aad repz mov (bad) dec pushf mov xchg gs jne mov rcl popa sti ror or (bad) jno or xchg jo jnp inc icebp inc rcrb mov or jne sar cmc mov and sbb xlat fprem1 jmp loop mov add gs in cmp fdivrs lods imulb int3 sbb pop (bad) (bad) push inc and rorb in xor inc mov mov and sbb sbb das push mov dec cli push or int3 adc adc dec jecxz mov jl data16 inc push xchg inc sub jle and lret clc (bad) lret test lds cwtl mov test adc xor inc cmp pop adc mov dec adc dec ja,pn pop loope int (bad) mov jnp inc out mov ret mov mov push cmc jne out test mov movl pop add lahf xchg pop movsb adc mov cmp lods out inc xor mov jmp jmp dec pop ds addl mov aad xlat dec ret adc jmp mov inc test test xor cmp mov arpl inc int3 jecxz cmpsl movsb ss out jmp sub pop xor sbb xchg icebp test add jle add mov sbb (bad) scas sbbb pop xor inc or ficoml and mov adc out cli out loopne mov inc ja or add outsl pop das loop cmpsl rep or out lods and loopne and jb rclb mov mov sub sub fild mov mov cmp add xchg mov cwtl or push lret mov dec dec cwtl (bad) dec call bound aas adc inc add lea pop xchg jg cmp lcall jg mov mov cmp add mov les lahf repnz pusha fnsave shlb and xor ret scas cltd stc pop sbb int3 mov dec jo or add dec jnp add push mov adc sahf and sub movsl jmp pop adcb data16 mov cmc jb add xor sbb lods xchg loope or xchg das lret push pop bound push pop sub adc es sub xchg in aad jns pop cmc in jge xchg (bad) xor outsb xor ret (bad) iret js gs (bad) jp jbe dec inc es popf jnp mov inc and mov xor xor iret pop xor jae call sti movsb sbb subl (bad) hlt or jecxz (bad) mov adc mov mov push (bad) mov aaa and push nop (bad) mov cmpsl mov and test sub and xchg xlat push inc fdivl mov lock outsb sub je out pop inc ja mov mov sbb les call imul xchg lcall xchg xchg push das adc outsl lds adc movsl test jg push insl xchg fmull jecxz and mov cli in mov mov fisubr cmc test setno sahf push into dec mov fs rorl dec mov sub xchg or jbe push lcall out fucomip data16 jae adc lcall xlat cmp lret xchg xchg cmpl adc popa jmp add iret mov inc je outsl (bad) mov arpl mov ficom insb shll jno clc jl cmp mov jbe push in sub pop adc test xor jge pop sti dec or pop dec pop adc dec aas repnz (bad) fistpll int dec imul sbb and inc cmp sbb push lret xlat adc mov ja insl popa jns xchg inc lea jge fwait jecxz add push mov movsl sbb lods sub test xchg (bad) sub stc lds push mov fs fisubr (bad) ljmp add int3 out lahf test cmc pushf xor pop adc imull orb cld bound scas repz movsb sbb push add fdivrs out push inc ja das rcll ljmp add (bad) dec sbb jg pop cmp pushf add fwait dec or in cld and xor xchg xchg addr16 xchg jnp icebp xor mov dec pop insl loop sti dec mov inc xchg or pop dec je push ja mov fidivr or mov data16 xor fiaddl in daa fildll and fnstsw cld cli pushf or les orl sub cmp repnz lock rcrl mov jo mov pusha add gs add fcomp pop pop inc dec ljmp (bad) out pop mov nop add inc pusha adc orl rcrb test inc insl shrb jne add push mov and sub inc ret imul mov xchg into pop lahf (bad) call pop push pop sub or sar jmp xchg adc mov dec dec mov sbb pop cwtl cmpsb add add xor dec lods cltd lea mov xlat outsl in ja jmp loop cmp mov jnp,pt sbb in loop jne fsubl bound popa push in loope pusha es dec jmp cmp iret outsl daa sahf test movsb pop inc sbb dec bound popa pop and mov xchg rcrb test inc test or mov out lahf xchg pop ficomp sub push and pop fs dec push mov cmp std loop pop mov mov and adc icebp gs pop mov adc clc pop pop mov add (bad) int3 inc cmovno push jp test mov push push ficoml shlb repz (bad) jo or xor or jns fwait adc dec add lods xchg loopne jnp (bad) fstpt mov mov mov sbb adc xchg push inc push mov sbbl roll adc cmp das push inc push fdivrs push inc adcl test cmp xlat outsb xchg inc cli loopne fcoml rorl mov fwait movsl mov rolb loopne jne jo pop xchg es aas adc sahf into jo fdivrp lods mov push adc nop rol or mov outsl push lds mov pop ret jbe mov inc int3 imul (bad) icebp enter (bad) mov ret outsb (bad) cld in jbe jmp add subl dec xor fistpl jo in push xor icebp xchg pop aad push mov and fsubrl xor vzeroupper adc arpl pop jno test and sbb loope lods cs out sti fisubrl mov inc popa mov out scas (bad) mov mov mov inc das jmp add push cmpsb divl loop ret into ja jae mov mov mov inc or xor cmp roll pop stos ljmp push lea mov mov enter gs sub adc fbld sub cmpsl aaa or fidivr sub lret push test mov mov in mov sbb clc push xchg and push mov outsl insl inc push xchg bound xchg push inc jne inc xchg aaa sbb out or out cli out das xlat sbb lods sbb jb pusha in mov and sarl int3 pop clc xchg insb adc inc add (bad) stos dec mov xchg cmp out imull out scas sti dec ds jmp cmc push xchg in daa icebp popa xchg movsb ret mov add xchg adc xor mov pop imulb pop andl (bad) popa dec lret mov test (bad) in inc sbb jne data16 mov jb dec ja jne xchg adc dec pop sbb inc mov pop dec mov push inc stc ja xor (bad) test xchg dec or jmp push xchg insb sub mov daa lahf (bad) xlat sub iret addr16 test subps push inc mov add mov cltd mov dec (bad) outsb call pop and and or push es sarl and (bad) cld lods pop inc push add jmp cmp xchg or pop pop mov cmp inc and roll cmc cmp das hlt jno cltd mov inc push aaa jbe loope into xlat movsl aam lcall mov cmp add pop cmp jnp xchg fbstp sub lret jo xchg int3 sbb jb out jecxz das adc inc mov inc rorb cwtl loope mov mov cld push test (bad) fisttpll ljmp add cmc xchg std xorl les xor aad shl mov pop cmp pop fstps mov (bad) data16 jbe imul push std leave xor jge cmp push xchg in pop and lods (bad) pop pop jmp dec pop stos pop bswap or add movsl les jno movb sub outsl test or xor mov shll shlb jns mov push xchg test push notl clc call xchg int sbb cli adc daa adc test push repz (bad) adc xor mov (bad) daa sahf push in mov mov test mov pop mov outsb mov aas fsub adc mov or imul xchg mov lahf mov fcmove pusha fmul test dec jmp gs xchg xor lret or mov cmp xor in cltd adc add xchg push xchg xor adc or pop data16 ds xchg in cmp or inc and sub mov jecxz mov push jb dec mov cmpsb or std mulb repnz jb xchg (bad) sbb add aam dec popf mov cmp rcr and lcall aas and mov mov xchg xor xchg cmp imul inc jl or cltd mov lock dec mov push scas ret rorb fs mulb ljmp lods stos mov das in mov mov mov xor mov push xchg cmp adc sub jge push movsl push stc xor cmp mov mov std push or mov shr cmc xchg sub pop test sbb pop lahf loop xchg jle arpl cmp jnp fisub sub jg repnz andl mov sub inc lds cltd mov pusha leave sub repz push cld (bad) shrd fstl inc cltd lods (bad) stc in enter sbb mov (bad) in scas fisttpll gs jmp mov sub cwtl add pop clc jb cwtl inc adc loope (bad) fisttpl ds test fildll negb mov cmp adc adc inc add mov mov mov cwtl pop dec clc subl fldl mov push clc loop loope lahf xchg aam test xor sub cmp pop imul sbb lds adc jle leave lret jl jb pusha mov notl int into jno les cltd inc lods mov xor bound pop imul inc test dec les xchg lret cltd loop mov pop mov stos xchg or push movsb mov (bad) ljmp sbbb push mov push dec sbb pop cs xor lret nopl add mov mov jmp sbb insl and sbb xchg pusha adc mov aam xchg jne mov dec cmp sbb insb cmc xchg push adc mov roll cmp scas cmc dec mov ds push daa push test or inc pushf mov inc jbe xor rorb push lret leave bound jns push mov sub xor imul arpl test sub mov repnz popa push jno xchg jl xor jl jecxz sbb test sarl fwait inc push adc dec aas jmp jnp ljmp dec mov inc in cs test cmpsl frstor nop cmp loop in ds test jge mov enter std jno mov xchg xor rclb cld and mov daa bswap aas js shrl (bad) cwtl pop insb ret mov jmp in fcoms xchg stos sub lds sbb movsl test mul test jle jp xchg daa xor add and outsb notb enter addr16 das add nop mov stos je push loope pop jnp cli mov xor test mov dec lret ds sub inc jmp in sbb or scas orl or addl xchg arpl or mov imul sahf data16 loope cmpsl int3 int3 jle mov xchg sahf sbb into sbb loope jmp adc and orl xchg mov sbb cmp pusha aam fidivr in adc mov shlb gs push xchg mov pop mov imul jl mov xchg and test xchg push test mov sahf imul jl xchg cli or cld add or repnz dec popf out mov inc pop sub mov cltd jmp adc or dec or out push in das inc (bad) icebp sub scas (bad) out daa fsqrt test xchg jle (bad) (bad) jle fdivrp add std clc lcall adc cli xor pop imul inc lea adc mov hlt movl xchg sbb ret andb addr16 cmc mov mov cmp fimull out push lret pop aam inc cmp add (bad) lret sbb sub mov (bad) in sbb fld mov loope push inc mov pop fcoml adc xchg mov dec (bad) inc xor xchg sbb pop xor cmp sbb (bad) enter lahf andl sbb cmpsb sbb insb push pop push shll mov imul xchg sub mov mov addr16 out mov arpl cs lahf mov xor mov std or into pop out out fnstenv mov leave mov adc hlt pop and xchg in mov pop inc fs repnz arpl faddp xor jge pop add (bad) ss lret xchg out cld mov xor pop jmp xchg into (bad) mov xor adcl test and inc and les jbe pop nop push mov sar pop loopne jnp cld pusha pop jno fcomp clc inc (bad) sahf mov pop scas or xchg mov sbb xchg dec mov mov mov pusha pop popa mov jne jno or or jae cvtps2pd or mov sti daa aaa (bad) or mov add pop xchg js xchg in or stos fisubr fnstsw mov shld inc dec dec (bad) jno std pop jmp inc cwtl fldl pop mov mov cmpsl das add daa inc jbe jne lahf js lret stos pusha stc sub insl ret outsb in mov pop add pop cmp push or das ja add pusha and test fild sub sahf daa rcr cwtl or dec mov sub xchg test (bad) push arpl push pop out pmaddwd stos adc dec xchg or test lods ja outsb insl and loope jae sub add cmp icebp jl mov popf and test lret lods loopne add inc popa inc mov repnz dec or or cmp ret mov push std pop mov rorl lcall dec push add and ljmp inc js pop outsl dec loope sbb fwait or push stos lock sbb xchg cmp dec push fst arpl sbb pop loope pop aaa cld and in pop nop pushf in in xor pop icebp daa mov mov sub je jne sbb jne lret add xchg ror xchg sub loope ljmp adc test dec adc cltd mov shll add pusha (bad) and repnz push mov in and hlt add jno movl (bad) mov push sub arpl add lahf (bad) fwait jmp shlb pusha xchg push mov xchg jbe mov adc shrl sbb lret mov mov push add mov test adc mov pop dec mov mov fbstp or jnp std shlb sbb dec sub xor jo je clc idivb enter and adc es out adc add lds jmp ljmp sbb mov cmpsb mov ret fwait xchg fs (bad) jmp cmc movsl sub push jecxz loopne movsl add jmp jge cmp add lock jb jns or sbb mov mov xlat push xchg imul sbb pusha or shr mov jb and adcb (bad) stc cmp in sub orl call sbb jp dec mov imull push jb idiv ret pop (bad) nop adc sub xchg loop adc cmp mov popf int in ja out sub cli push inc (bad) pop cmp cld cmp xor jp xchg push inc outsl in mov push (bad) lcall (bad) fstpl xor sti push imul stos (bad) cmpsl add outsb mov ds mov dec ret and sub nop jmp push nop popf clc jns icebp test jge fldl cmp loop and jns pop ds (bad) mov shr fnstenv mov orb xchg aam jge pushf int dec in adc lods dec repnz jbe stc cmp mov dec and enter or lock rol mov into cwtl mov addr16 and mov add (bad) jl pop mov jg jle mov fisubr rcrb xchg sub (bad) call in jae cmp xlat jl mov push nop xor mov xchg inc leave pushf xor lock scas or and jecxz psubusw add add jp dec rorb shlb push dec int lahf jle mov and loopne fcmovnb (bad) jne and out rclb lea jle cli pop ret notl imul push push dec push jno mov jp mov xor jnp push lahf sub dec fdivrs xchg push int3 (bad) test jae daa lret call aas stos sub cs and invlpg mov loopne inc sub adc in data16 call inc sbb (bad) xchg or iret daa insb add add testl clc adcl xor and fisttpll cmp dec cvttps2pi cld scas fsubrs addr16 stos mov push test mov xor inc imul mov cwtl sbb icebp bound nop xchg es push cmp clc mov xor jns xlat js adc xchg fmulp sub jp js sarb je iret clc or jle scas out call leave call cmp das subb cmp dec lahf popa push xor mov (bad) repnz adc stos inc (bad) xchg leave test adc popl dec jo jb rolb stos mov mov adc lret sub fistpl sub add leave data16 inc dec jge sub cmp cmp aas and (bad) mov jle mov dec out pop add jns mov xorl rclb adc (bad) lcall mov mov cmp popf cmp adc jno dec push jno test add jg out cmp dec int3 mov imul outsl popa inc sub orb test jns mov sub call repz mov mov sbb pop mov loope or scas cmp int3 ljmp movsb in lea push mov cmp aaa pop mov cmpsl xor mov pop gs popf in pop lods bound test adc and lea xchg lods inc mov xor cmc nop push inc lret ss xchg test mov fsubrs loop movsb mov (bad) je pop push cmpsl push adc orb inc loop push jmp les sub adc sbb xlat cmpb pushf cwtl mov mov jl sti pop push enter aad rcll inc cmpsb sbb add ret sub dec dec loope push scas aaa fsts int3 xor loope negb and mov inc add add out or xchg mov push clc push push mov cmp and push ja jae inc imul leave orb ss sbb (bad) outsb std mov jp lahf mov sub push enter stos leave xchg leave mov mov sar ss mov mov test sub das inc dec jmp lea inc or push test bound bnd push mov pop pop dec fcmovnbe ss in mov call outsl gs or xlat repz push leave notl lock repnz push fucomip and fwait jnp cmpsb nop inc pop pop stc stos mov push cli xchg xchg inc pop jle ja ljmp sub jle pop cld mov enter jecxz in mov or pop outsl pop jmp js mov js dec lods push pop adc push (bad) mov stc or pop mov (bad) iret dec pop or (bad) pushf outsb inc dec cmp jle fwait cltd call xchg lds inc jnp dec das in sti jle dec cs popa gs loopne fcmovbe mov xchg orb sbb repz hlt dec or into jge repz add xchg xchg cmp cmpsl push gs icebp mov imul in (bad) adc mov pop and rep jge lahf call cltd xchg jne fnsave dec cld sbb and mov mov daa ret clc mov dec loope mov adc jge iret shrb and mov fcomps sub push sub mov pop sti and cld sbb add clc push dec inc out (bad) cltd push (bad) (bad) in xchg jb mov or leave pop lods imul mov mov inc addr16 push (bad) lret push push popa or adc fisubrl stc movsl pushf es les pop outsb andl out push int3 je adc fimul shrb pop dec and fsubl ficom sbb (bad) jg sbb and add mov (bad) xor mov push inc sahf psubsb loopne jl push fcmovb xchg jl fildll out jl xor addb sub lds add or lret out bound shrl lods jne or fbld nop push loope cmpsl inc pop jno pushf (bad) xchg push fistp ljmp mov xchg adc and or adc iret (bad) jle jb (bad) ds mov add (bad) and push xor xchg xor call rorl mov pop pushf loopne xor xor das add and mov cli xchg sub int cmp jae nop mov test or int mov repz and cs adc lea push adc into xor scas repz dec and out daa cltd dec ret jl jle fsubrl cs pop sbb sahf adc repnz jmp jnp icebp lret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 in jp out add movsb pop lods mov pop paddw icebp loop and (bad) pop in popa add int (bad) std (bad) arpl xchg jbe ret addr16 xchg lock dec mov xor pop cli jo jecxz jl mov scas mov mov jne mov ret dec pop add xlat mov loopne imul ljmp push leave into test enter cs xor fnsave sti sbb shrl add xchg jns sbb jns sbb mov imul inc (bad) in cmp inc cmp push xor out mov out mov fsts fdivrs and mov and lret cltd outsl (bad) bound pop jl add dec sub sub xchg mov je xor cld stc scas cmpsb lret and jp pusha test push mov ja ljmp out add mov cwtl xor bswap mov ror fwait mov sbb insl scas (bad) out ss mov int3 outsb jnp ja add pop clc xor sbb cmp xchg add out ficom jmp jnp fbstp mov mov pop dec (bad) dec cmp inc pop jno sub ret adc mov (bad) (bad) fisttp iret cmp xchg fsubp test sahf outsl sbb pop sub pop insb notb push dec sub int aam mov (bad) mov stos push fsubp xchg xchg adc cmpl test loopne xchg inc dec scas ficompl aas jnp and xlat mov xor push cmp sub lret inc mov jo stc cld (bad) pop pop cmp roll mov push enter mov sar iret sarl add or lea xchg test pop js iret push jb cwtl shlb into faddp test xor and addl icebp push jbe inc hlt (bad) jne add sub mov xchg lea movsb shlb (bad) ljmp ret rcr xor mov dec aaa sub inc ljmp loope sub lea push pushl pushl call add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret in jp jecxz add push push jle push stc mov or pop sub or (bad) mov dec pusha aad fcoml jbe inc into cmpsl into jl arpl push imul scas add imul sub push sub sbb sbb and insb arpl dec lock push or pushf aam test repz cmp std add mov pushf push shl adc faddp jmp sbb lds dec fmuls call xor aam ret mov les sti mov and jp inc repnz stc (bad) mov adc cmp xchg test jno push xchg mov repz call mov xchg xchg inc (bad) jle out push lods or jecxz cwtl sub mul movsb push out inc cmpsb and (bad) rol ljmp inc hlt rclb cmp dec add js shl bound push sbbl scas sahf in (bad) in insl xchg fmuls jae sarb ja mov pop push jo jns xor cmp jl mov mov push xor sbb loopne xchg pop or and in jno lcall mov das cli out sub xor (bad) lea loopne pop push (bad) mov (bad) cmpsb faddl pop pusha imulb xlat imul add cmp inc mov fistpl imul jg or mov (bad) sti mov add lock divl pop xor outsb jae test idivl add or (bad) adc stos loopne xchg mov sub lods inc cmovb ret xor popl add lret inc js (bad) fdivs jns (bad) dec les imul mov rorb mov pop and lods in xchg or pop inc cmpsb out fcompl push dec stc push (bad) push mov movsl push pop xchg popf push popa jae mov (bad) insb aad add xor xor mov out stos and xchg mov (bad) add test ja push push ds adcb jnp sub xchg adc mov cmpsl in add rclb movsl mov xchg inc lods aaa fwait jle jnp push inc sub test xchg dec rcrb jo fstpt jno pop mov xchg pop (bad) fwait ret gs push xchg movsb sbb (bad) cld je out push fs cmpsb repz jb addr16 subl call popa mov and push cwtl packuswb fisubl inc setl (bad) sub fsubs mov mov iret jne movsl scas call pop adc xchg mov sti dec adc pop int3 ljmp mov inc or mov xchg pop pop in mov ja sub loope xor sub (bad) dec shll jo xchg mov add jecxz jbe aam outsl aaa adc and xor inc xchg in cmp dec pop xchg ss out or xor (bad) arpl xchg mov test rcl push or sub arpl pop pop xchg hlt frstor inc xor xchg ret ljmp jbe mov mov lret push hlt ljmp push and and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jmp aad popf pop mov pop cmpl lcall mov adc stc push sbb sti sbb add or loop shrl xchg mov inc cmp jns or cmpsb out cs popf cld repnz dec fisub adc pop and in out mov jbe xor mov pop xchg popa into and xchg movsb sub mov rcrl cmp outsb xchg repz insb shrl adc mov enter int push test aas mov dec jb pop enter add dec jp clc fldcw jne lcall xchg xor xor push inc outsl add outsl fist xor testl andl fstpl cmp push jb sub pop or xchg cmp loop sub pushf or out shl or leave add int inc cmpsb jmp aad mov pop and test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp sbb xor divl cmpsb add inc loop inc (bad) xchg xchg xchg jge mov xlat lds or bound cltd push and mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret sbb xor jp outsl shrb int3 leave aaa ds or enter or or loope adc push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp sbb insb push jo push (bad) (bad) outsb (bad) mov fadd lds mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret sbb xor ljmp jae idivb pop rcll inc addr16 cmp pop bound and orl jb mov xor inc std int sub push mov aad lods push cli xor hlt dec iret leave sub ret xor mov add push pushf aam xchg outsb adc fcmovb push arpl dec imul cmp ror pusha lea fistpll add aaa and mov and xchg push fxch and add scas shlb repz mov inc inc dec push push loop inc cmp lods xor pop sahf mov outsb inc and ret in push pushl mov call movl mov pop pop ret andl mov andl movl movl ret sbb xor push push or imul jns aas or andl mov andl movl movl ret int3 int3 loope sub or std test mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret push out cmp sub shr mov add or dec add mov (bad) decl add js mov mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret sbb xor negl popa dec xchg dec aaa inc (bad) repnz cmc mov (bad) lods pop in sub insb push pop and xlat and push ss jno enter outsl dec out mov push out sbb fbld loope mov sub and dec nop sub jp push pop mov xor push mov inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret sbb push (bad) je xor lahf (bad) (bad) sahf pop out jl mov mov pushf fwait ret (bad) fmull mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret sbb xor es sarb xor jo ja ret popa test pop sbb push xchg add mov popf sub mov mov call xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret add popa push cmp sahf xlat test aam mov fstps rorl push leave ret push popf dec push xor mov push loopne (bad) xor in mov pop ret ljmp jecxz adc dec movsb cmp push jne ja xchg xchg int3 mov cmpsb push or js insl adc xor xchg jge pop jmp push enter xor push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret sbb xor inc hlt push addr16 push mov jle push dec jb and clc sarl mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret sbb xor scas or out xor mov dec aam imul push mov push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret sbb mov stos outsl sarb inc out sbb dec in push sub int3 pop icebp mov add scas mov inc ret lret out fimul mov sub fmulp in aaa das fldl repz mov sub mov xor mov push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret add sub outsb mov mov push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret sbb xor movsb stos in mov cli mov pop xchg dec orl xchg sub std ret icebp into jp jns xchg icebp sbb in cli dec or sub push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret sbb xor loop icebp das xor sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret sbb xor shrb cmpsb push out cmp inc mov in stc and int3 ret addl aam and pop xchg push mov push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp sbb xor shrb cmpsb push out cmp in inc out leave pop ret ficoml xchg mov fs cmp pop data16 cld mov movsl pop inc xlat push in xchg sub scas add xor sti rclb aas push push cmp push stos adc mov movsl pop insl vpsrlw scas pop mov or adc push cld ret repz (bad) pop aaa add cltd mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret sbb xor shrb cmpsb push out cmp xchg xchg lods cmovbe ret and jno das xchg ret pop cmp push cwtl sbbl pop mov shr in jp inc mov mov enter and or (bad) mov imul lret mov cld push push ja lock push mov outsl fwait int xor xor push xchg mov and jmp inc js sub jmp push lds ret imul pop cmp pop jo loop push movsl fisttpl xchg fnstsw sub mov insb movsl out scas movsl in out jmp cld roll inc out mov call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 sbb xor stos mov sbb cwtl cli fnstcw push add cmp xchg movsb mov test push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop lret xlat cli js jecxz daa sub pop inc and jge xchg ljmp pusha ret push jae pop jae push sub out xor test cmp inc cmpsb ret popf jnp aad xchg cld jae sbb sbb fstpt jl cmp xchg jp sbb push rcl fnsave push pop pushf ljmp adc ja mov lds add push cmc fstps lock mov dec lahf sbb enter xor decb sbb xor push fwait ljmp mov cmp inc or mov push cmp adc cmp adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc push mov push sahf xlat sub test xor dec into insb xchg jno cltd pop inc dec dec jmp bound cmp push xchg push leave push int3 sti and push out rcrl adcl push cmp adc mov stos xchg and popa imul or cld andl xor xor xchg mov jb addr16 and out leave cmp aad stos lea cli push push push mov mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret sbb xor inc pushf pop dec mov dec ja and sub ss add push inc idivl cli std (bad) sbb ds mov pop push aad jmp and in xchg jne cs into (bad) dec cmp sbb sub gs dec vphsubbw lret fstpt add imul pop sub (bad) fmuls mov nop push mov push push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret sbb xor movsl ret insb dec inc dec jl mov mov nop sbb int3 jne in out jle sbb scas ds jo push call in dec pop add scas roll xchg or test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret jecxz xchg or adc (bad) mov test out mov call mov test je mov call call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret sbb xor jg push rcll or mov das or add inc (bad) int sbb inc mov mov movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret xchg jecxz sub repz jmp imul out xor mov out jae lret inc (bad) and pop iret sub mov (bad) dec inc cmp out cmp call pop mov ret push mov cmpb jne call call push call pop mov pop ret xchg shl push icebp lods xor cli pop fcmovne push mov push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp sbb xor movsb sbb les addr16 xor aaa (bad) out dec or nop imul ret (bad) lea mov lret xchg jp xor outsb xchg mov loop jo cs cltd (bad) xchg pop and mov or (bad) mov jl mov add inc repnz xlat into xor mulb push dec jne mov push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret push and sti stos outsl ss pop les inc cmc pop (bad) aad rorl mov xchg das push mov aas pop outsb adc (bad) dec mov mov cmp je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call js (bad) (bad) xchg arpl inc mov hlt (bad) pop add and mov mov push jp push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret sbb xor mov add fimul insb mov cld or ret js aad jle xor bound push call mov xlat shl push inc call fisub push aad add fcom stos dec xor sbb int3 sub xchg mov das pop testl push aad inc loopne fmull lds sub jno cmp mov pop xor (bad) sub push call sub outsb stc xchg sub adc sub xor (bad) xor rcrl mov xchg addb push fdivrp pop shlb sahf dec and bound out jb shrl mov push cmp aad sbb add jns cmpsb cwtl ss lret (bad) stos add pop gs cltd das (bad) loopne pop loopne loope cli cmp pushf inc xor push dec jmp jnp mov ds ffreep or mov in aad adc icebp xchg mov sub iret (bad) and jg dec movsl mov je dec movsb outsb dec jge jge je fwait jae fisubl jno std aaa sti bound jne clc pop pusha or push adc out inc push cmp jo sbb dec adc imul (bad) xchg insb inc mov dec imul adc and cmp dec xchg fimul repz mov lds xchg mov xor mov push push test cmc dec xchg outsl stos dec pop inc inc std out pop daa ret test js sarl test or push into addr16 (bad) xor das call jmp test xchg mov push rclb or xchg in je ficoml rorl xor lods lcall jmp loope jp pusha adc sbbb fbstp (bad) in stos add cltd shll adc jecxz cmp jo add xchg aaa jle data16 mov pushf push in into negb xchg mov lret ror pusha ret sub in inc xchg adc aad sarl or rorl xchg shll ljmp xor fisubr and subl aaa sub add pop int3 mov sarl insb sbb stc jnp adc xchg (bad) (bad) (bad) mov lods push sbb sub push cmp inc mov (bad) iret pop jecxz imul sub jne lds fwait in stos sbb cwtl je mov in dec lcall (bad) js jl inc adc jns cltd jmp loopne mov notb (bad) jl inc lahf push es jecxz pop sarb jb imul cmp fsub inc aad lahf int3 cld xchg notl pop out dec xchg call in push lds bound lea out (bad) fldcw xchg test cmc adcb in xchg sub xchg push dec clc ss lds out add ljmp sbb push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 sbb xor stos nop outsl js mov mov jle int3 add inc ffree add xlat les xchg push push call mov mov cmpl jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 jecxz (bad) push xchg push shll test mov or mov fcmovb and pop or xlat frstor repz stos push lret mov cli je ret jl push inc push imul das push mov xor add outsl dec (bad) lock test out sub pushl sub iret fchs mov pushf lods iret xchg fldl mov pop lret sbb and or test push pop cli mov clc xchg jecxz movsl or (bad) loopne ljmp stos fnstcw adc xchg arpl cmp mov mov push es fwait and imul insl in sbb dec mov test das je stc fstps add ret fwait retw loope ljmp mov add or movsb (bad) xchg addr16 inc push es add fsubrl adc inc pusha fldz mov imul mov add lret xchg and call in pushl mov call pop ret jecxz (bad) push xchg stos (bad) push sbb lahf mov rcrl outsb mov jb or mov insl repnz xor das pop iret icebp mov add insl into pop push aas cs aam inc fnstsw inc enter lahf shlb ljmp adc out jl das mov rorl sub adc mov sbb add rclb push push call add ret jecxz xorl push jmp push or out ss and jle lret int push call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret jecxz (bad) push stos in ja xchg shll mov (bad) jg adc or inc xchg jb mov dec pop fldt mov in push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp jecxz (bad) push xchg push shll test mov sbb xorl lcall pop mov jbe push jb,pn adc push imul (bad) ljmp push and push jecxz (bad) repz mov pop outsl xlat lret xlat xlat (bad) mov lcall jge int3 iret xor xchg push add popa xor inc mov mov in pop lods sbb cli ljmp in xchg sbb lock inc sbb iret xchg (bad) test js xor in xor daa xor sbb and cmp mov push inc and or jo clc fnop movsb sub cmp jle addb imul int lods cmpsb xchg mov adc add xor xor adc mov inc mov dec (bad) push aam nop jne pop push sbb out xor lock lds cld loope add out popa imulb out cmpb ja maxps inc mov cmp iret and cwtl pop ficom cmp cmp das lods mov sbb xor jnp rorl into xor sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp jecxz (bad) push test mov arpl icebp movsl lret (bad) (bad) out push bswap inc lcall data16 rol and adc mov inc mov into mov fisub mov paddsw (bad) push shrl mov push push and bound pop mov or je sub into push ja mov (bad) mov (bad) dec cltd mov push mov cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret jmp sub inc xchg test add ret icebp mov idiv out mov push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret jecxz (bad) push ret insl loopne mov lret (bad) or jns add and cmpl dec leave mov std loope jns (bad) icebp jnp scas push inc pusha jmp or (bad) or (bad) adc notb rcrl (bad) and cli lcall sbb cmp stos enter mov xchg jne fs jb (bad) roll adc call in push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret jecxz (bad) push sbb orb jbe divl (bad) mov mov bound xchg faddl mov js and xchg je mov push mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret jecxz (bad) push sbb pop pop lcall xchg out loope add push xor pop cs out movsb divb lea mov push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret jecxz (bad) push pop popa inc jnp mov dec (bad) jge (bad) das jge mov inc adc jb sti xchg xchg pop clc pop jae in and adc aam push push inc lods insl (bad) orl jecxz xor add xor (bad) ljmp lret sbb push mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc sub mov sub add insl add cli inc stos xor sbb push pop imul and mov mov xor pop xchg and and sbb movzwl sub je sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret loope shll cmpsl test into inc outsl repnz popa (bad) icebp mov or push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret out in leave mov sbb dec or jne,pn cmpsl idivl xor cmp cs sahf int3 push lods mov xor je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret pop daa out mov cmp inc mov aam xor add repnz sub (bad) pop iret mov mov xchg cmc mov sbb clc sub jnp data16 idiv sub xchg jecxz test frstor enter fistpll pop and cwtl adc mov jg int add mov and mov dec loopne mov mov (bad) jge fbld xor es sti xchg jns jno pop mov xchg xchg aad out push es fidivrl (bad) cld xor add xchg fcompl imul das mov (bad) dec push in and mov sahf nop mov inc push aad lods add pop test xor jae xchg adc sub scas cmpsb jae push cld out out dec cmp fnstcw sbb xor dec movsb arpl ret clc sbb xlat inc out (bad) (bad) mov popa jnp and dec cmpsl cmp sub cmc insl std xor cmp mov mov push adc mov sbb in aam lods sub and mov xchg es jae stos repz jecxz cmp jl rclb insl mov adc sub je cltd dec push or lahf lock daa mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret jecxz (bad) push pop popa jp cltd dec cld out mov mov add into dec push cmp shlb pop repz jae jmp sub xchg imul pushf jbe popa ja dec inc movsl and cmp test mov hlt (bad) in mov or lret stos jns,pt mov cmpsl jnp mov ret mov sarl jbe xchg and push lret test cmp xchg jns xchg mov add mov push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret add mov roll test sar xchg jnp arpl icebp (bad) mov push push mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret jmp sub sub test or imul (bad) int3 mov lret or pop out out outsl sahf sbb movsb ret xchg push lock jb popf jnp imul sbb mov push mov mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret jecxz (bad) push ret insl rorl ds lods subl adc mov mov cmpsb fisttpl add mov pusha or je (bad) cli jmp pop dec ret push mov outsb cmpl inc inc push lret test or clc sub xchg push out leave fldenv mov or mov ret cltd iret mov test pop xor fild pop fnsave movsb cmp dec adc xchg mov push mov push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret jecxz (bad) push ret fistl fmulp add lret dec rorl iret pop jb xlat loop mov divb sub sarb and out loop out pop add rcrb adc movsl and repz inc jle push mov rclb jmp dec push or pop sbbl or push loop gs push or add push es push repz daa jno lods cmpsb in mov aam popf gs bound sbb mov sub mov dec addr16 mov pop insl push daa add in movsl inc loopne mov dec sub sub add push mov or stos mov mov inc aaa in lods cmp testl or dec or jg pop mov jecxz bound das sti jb sbbb pop jo cmp sub mov mov jb (bad) jo inc push mov test jecxz call in sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret jecxz (bad) push stos in add out inc sti mov or ret (bad) xchg mov xor in pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret jecxz (bad) push aad jns enter xor stos jmp or xlat inc pushf in jno xchg mov xchg rcrl dec test push mov cli fldt pushf mov in xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret jecxz (bad) push nop leave jns enter xor xchg jo mov (bad) sub loope lcall std bound add pop dec pop incl jb sti popf sub xchg mov gs mov cmpsl and aam jecxz gs xor scas dec mov fildl shlb add jno pop (bad) xchg loop lods mov (bad) jbe xlat mov jbe clc sbb mov movsl cmpsl repz leave xchg add cmp add jmp in call in sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret jecxz (bad) push aad dec inc dec lcall mov sbb ret test push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret jecxz (bad) push pop push std arpl repnz jbe lock sbb int3 jne push adcl push pop insl (bad) push xchg jno insl xor sbb sahf jns inc adc push bound jp ds xlat push mov add push shll or add dec lahf add sub lret xor and pop enter mov push gs push mov adc push nop mov xor je mov xlat (bad) (bad) mov clc xchg xchg xchg inc inc or insl ljmp xchg fcoms (bad) sub call adc dec or gs mov mov xor mov call xor and xor adc iret test adc iret test adc iret test adc iret test adc iret test mov mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret jecxz (bad) push inc jle inc dec mov cmc mov int3 pop sahf test add hlt mov lcall dec mov out ljmp imul call pop pop scas rcll nop cmc lock push pop loopne roll cmpsl mov push mov sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret jecxz (bad) push pop icebp ret push (bad) scas xchg arpl ds ss or dec sti pop add aas jb aam and lods sahf inc adc push in (bad) xchg sbb jns xchg rcr in clc fsubrl test jle add push xchg out gs popa in inc or inc cmc push movsl sub fdiv inc mov sub inc xor mov mov movzbl push call mov movb mov mov pushl pushl call pop ret jecxz pushf xchg popf ss fsub push iret xchg pop jge adc lock jge pop (bad) fstpt insb inc data16 jo xor fdivl adc mov and loop fildl cli jmp arpl push push hlt lods fsubl xchg aas sbb shrl pusha dec xchg fcomps sub jb cltd add das ja mov jecxz push leave inc (bad) pop repz imul ljmp push sub ret pop xor lea inc inc xchg sbb popf icebp pop jnp fimull cmpsb mov leave add loop mov xor lahf jo sbb mov fdivs iret les jnp pop add dec fadd or mov cltd pop fmul mov (bad) xor stc pop add repz (bad) jmp mov dec lods adc (bad) out cwtl sub xchg and sbb inc inc xchg or in insl sbb je mov ret push push push push push call int3 out in jecxz add (bad) push cli rcrl pop icebp (bad) lahf loop (bad) jmp js or jmp pop pop mov call in mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret jecxz (bad) push movl fidivrl test xor sar and jae (bad) mov bnd mov sub outsb test into aas jno pop sbb fldenv cmc cs add js dec pop lock test imull (bad) mov cwtl sbb cmpsl push leave dec jae mov fisubr cmc or data16 movsb adc stos dec lds sti xchg xor dec push push mov push imul mov leave mov cmp enter jge (bad) (bad) sub sub test in sub cmp sub lahf das lods and push add or and sarb sub jl stc out rcll adc or pop push lea pop je fadds shl in mov jae adc xor xor js xchg out int mov mov idiv stos mov daa mov or movsb mov inc imul in in (bad) mov push idivl xchg pop fldcw mulb lods mov ss xlat lock xchg sbb lock jmp fstpt cld push stc mov sahf mov pop scas (bad) xchg rcll imul mov or pusha sub dec pop push xchg jg mov xchg or push inc push and test push inc loope js xchg (bad) mov lret hlt lods es and add and aaa adc mov xchg jl inc fdivl pusha xchg (bad) fisub dec add loopne lret add add pop push xlat jl jp or (bad) nop mov fwait mov addr16 mov or dec ds das inc fidiv les add or or es lods pop nop iret addr16 adc iret lret jg sub pop (bad) jo inc push call ss push in pusha or cwtl pop xor add arpl aad xor test pop rcrl push adc cmpsb stos repnz jp inc cmpsl and xor sub cmp jge (bad) mov test gs fldenv cwtl ja adc mov call pop cmp sarl stos test arpl dec push and (bad) test push je std fcmovb inc pop cmp enter sti pop arpl shlb push xchg jae shl lea lods in ja aad sbb cltd push popa sub mov adc cmp outsl mov add ds test jb (bad) in out mov aam sub movsb or sti dec in sti xor mov cwtl inc (bad) pop js in je leave pushf pop jge std xchg stos loope cmpsl arpl fsts xchg jle (bad) ja mov cmp dec jmp call insl add xchg and lock insl mov or (bad) cmp dec sbb sbb xor stc std pop mov sub inc lcall add xor dec imul jg hlt fistp mov dec sbb idivb out mov dec add frstor test sbb jne add xchg iret (bad) mov arpl push pop fsts push and pushf add sub (bad) pop cmp pusha repnz sbb (bad) notl (bad) cs lcall lret aam stc pop cli aas daa sub mov jns gs je sbb cmovl dec jg pop ja pop ss jmp mov pusha push out fbld (bad) int lea and push jno icebp jle lods adc insb mov mov rclb insb cmp xchg lods (bad) sbb test push (bad) mulb scas les xchg data16 iret mov imul fldcw sbb jns popa mov daa and adc enter mov mov push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret jecxz (bad) push aad cmpsb (bad) fisub out and orb pop mov int3 cmc mov or push aaa inc mov mov aaa fsub int3 into pop inc ret add outsb out aas movsb iret rep enter addr16 dec xchg add add push inc int3 jns or lret inc hlt mul cmc push adc das in inc (bad) adcb add fistl mov lea data16 cmp gs sbb (bad) lret loopne or sub ss cmpsl mov pop loopne clc sbb fisubrl sysret in ja mov sub test andl test mov xor or cmpsl clc movsb aas and sub adc xchg pop jb dec fbstp mov (bad) repz pusha and jmp gs loop cmpsw pop jnp xor sbb xor and insb dec movsb xorl xchg add out xor adc loop cs and imul cld cmpsl jge,pn dec jle cmp leave mov cld and jb cmp mov push fidivrl cmp mov cmp je jecxz test fstpl ljmp js,pn fwait jecxz sti pop es and jmp mov dec inc cs testb adc (bad) test out cmpsl mov mov hlt ficomp clc add cmpsb es xchg rolb mov sub push ficompl add jns aad cmp and push xchg add push repnz adc stos mov sahf xor aam add dec aas sub aaa sarb push imul mov xchg stos iret pop std push pop jns neg sbb aam addr16 or incb push jo loope std jle movsb xchg adcb cmp xlat xchg sbb adc (bad) add cmc xchg xchg or cmpl inc fucom cwtl adc push lock xor add aad pop je es sub sahf sub mov sub (bad) (bad) cmp pop push jne outsb inc sbb adc jbe aas das push negb rcl gs mov sub cs iret notl mov ds adc push cmpsl outsl cmpsl out push jo inc pop pop add push push adc test ret jl (bad) pusha sbb xchg call iret pushf outsb popa jmp sahf out jae pop xchg pop das adc fwait xor fistl add movsb sbb lret jnp mov (bad) bnd ficompl fcmovb mov lods into mov bound insb aad push imul mov jmp lcall les call inc imul addr16 sbb leave push rcrb loope or imul inc fadds or fstl into pop push or bnd scas scas pop cmp loop movsb test jmp mov call dec xor push test dec sahf js leave jbe mov push adc stc mov adc call and int xchg xor dec cmp inc fwait test xchg fdivs jne push add cs roll and sbb jns pop aad inc pop pop sti push xchg dec mov mov xchg xchg pop fwait mov leave and pusha movsb mov addr16 push fiaddl cld pop fiadd mov fwait dec enter roll jnp jnp add adc dec sbb dec loope hlt ds outsb pop mov ror jno repz sbb lcall add gs inc bound inc add pop push fwait ds sub jno inc push and xchg repnz push iret mov pop xchg dec addr16 outsb push or hlt loopne mov xchg xor int3 pushf (bad) popa push gs add xlat pusha sub scas cmp mov push (bad) push call dec push mov mov dec es mov push out adc pushf fistpl mov xchg orb (bad) fdivrs mov (bad) sbb pushf fildl maskmovq negl add pop stc push in (bad) push jl inc mov xor xchg xchg (bad) out and ljmp mov out lods mov push movl jns push pop inc dec sarb aaa vcvtps2pd xchg cltd dec ja mov shll mov sub aaa shrb add imul and sub jge xor imul int3 pop scas test push addl mov mov adcl push mov or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret loope leave push call idivb cmpb mov repnz jno cmpsb mov movsb push std adc inc pop call adc nop xor stc pop inc push popa jge (bad) fcoml inc sbb imul dec test into mov mov mov cmp inc sub clc add cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret out ja xchg add sub jg cmc sbb pop mov rorl pop outsl (bad) ljmp mov call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret jecxz (bad) push out adc xchg pop xchg inc ja mov inc repnz jne mov test push jle mov push push mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret jecxz (bad) push pop push mov out mov xor or popf comiss dec fnclex xor cmp fldt dec in cmp inc iret dec mov aaa aaa mov adc fst push imul mov push mov addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret jmp sub sub push imul inc int3 mov lret lock jecxz jbe pop jae cmpsb aam and pop mov jbe push jb,pn adc nop imul mov in lods or mov push mov push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret jecxz (bad) push ds rclb icebp repnz cwtl mull cmp mov push mov pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret jecxz (bad) push ret xchg fs dec ja cmp jge jns sarb fcoml add xor xchg mov xor jb lds add push xor hlt (bad) mov sub jo mov call in mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret jecxz (bad) push movl jo loope ror (bad) (bad) mov sub dec jbe ds mov addl cmp insb push sbb scas out outsl cmc rcrb ss or mov test mov dec test sbb lret enter xor call mov push aam out cmp lods jle test or push mov pop es lea mov sbb sbb mov xchg adc ret mov jae std std xchg into jbe sbbb cmpsl das scas movsl ds das mov xchg (bad) cmpsl mov mov push or mov jp,pt cmp xor in enter pop stc scas sbb xlat xchg xchg pop dec (bad) out into sbb arpl mov mov mov push push call xor mov test setne test jne call movl call xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp jecxz (bad) push stos outsl rorb mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp jecxz (bad) push and aaa andb ss (bad) mov push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret jecxz (bad) push stc push sar pop fcmovne mov push test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret xchg push jns cli adc dec sbb pop test mov sbb mov push mov scas cmp adc das jno xchg into cmc daa mov push cmp jmp xchg inc rcr add push mov push call mov push mov call pop mov call mov pop pop ret xchg ljmp test cmp arpl out xor imul jle add test jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret jecxz (bad) push stos in add cli fldenv mov or push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret jecxz (bad) push pop cwtl push out into hlt imul div cmp int3 aad (bad) cmpsb jb push mov push mov mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret jecxz (bad) push and mov repz repnz fcomip movsl mov iret inc xchg lods mov sbb mov test lret int3 xchg repz adc shrb cmp push mov cmpsl repnz push loope jo sbb pop xlat ss add sbb cld imul mov mov call in mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret jecxz (bad) push test jmp xor dec data16 push out lret jns mov push sahf mov cmp sbb stos pop jb rcrl xchg psrld mov inc mov mov pop sbb xor scas rcrl into lcall mov cs cltd jle jbe call in add mov pop cmpsl pop mov xor sub mov gs push repz inc xchg pop mov sbb jp cwtl out in pop sbb ret xor inc push push dec andl dec pop add cmpsl inc cmp push imul mov inc push pop push ret (bad) xor das imul ja push or gs push out cli xchg std mov pop scas add jbe notl cli sub sahf push fdivl sbb sbbl xchg insb adc scas jle fistpll loopne xchg add cmpsl add les push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret jecxz (bad) push or int3 leave addr16 hlt mov ds dec cld mov lret call jge imul jnp push scas sbb jg (bad) addr16 jp push nop push add punpckhdq stc in pop shrl sub push pop in mov push popa mov cmovns scas xor cmp xlat aad pop flds dec bound dec insb mov shll and mov mov inc aas mov mov or int fidivl sbb xchg jge dec clc pop xchg or setae sub imul mov es and sbb stos xchg dec mov push jmp rcrl movsb mov xchg ja inc (bad) jns out or cmp mov pop repz add aad push ds mov cmpsl pop das repz popa inc inc scas mov pop xor sar mov aaa cmp xlat xor mov cwtl cmp fnstenv (bad) sub cli es dec mov mov sbb stos rolb lret push pushf fstpl add xor push movsb mov mov xchg insl mov fxch incl push and or data16 xchg lock inc lsl cmp mov fbld rcll dec loopne fsubr fistp nop/reserved inc xchg out (bad) call and xchg cmp push outsb sbb jo pop andl gs call cli int and test inc (bad) xor add pop loop (bad) jno mov lahf pop push mov notb mov sub (bad) push fucomi mov add nop scas add in mov mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 jecxz (bad) push nop aad xchg js jg repnz mov sbb cmp jb sbb mov stos and lcall lahf jp insb insl push or or push inc inc mov loop jno cs pop (bad) mov sbb mov pop jecxz into inc dec jge adc das lret dec and (bad) daa mov sti stc lret out aad shlb mov stos xor push mov push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret jecxz (bad) push xchg stos (bad) push sbb popf lret (bad) (bad) push inc aam and test mov mov xor cmp (bad) aad jl (bad) jp inc xchg stos adc int push push call andl push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret jecxz (bad) push sub das mov xor pop scas adc stos out add jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret jecxz (bad) push nop rcl add testb xlat jl mov mov out test adc loop jmp pop js insb ja xchg (bad) cwtl pop nop mov lods push in fnstsw (bad) test push push ja sbb push mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret jmp movsl or adc adc test icebp mov xchg adc mov call pop xchg xchg jbe mov aas pop ret out lahf and cmp pop lods jbe sbb and jns push inc push sbb mov ret (bad) sarb sbb dec imul push cmp insl std jmp insb xor test jmp mov mov mov sub imul lds add xchg mov dec iret cwtl cmp mov fmull add sub cmp and gs fdivs or aam js inc dec gs scas inc jg xor xchg test sub int jecxz adc out cmp and mov dec cmp add mov movsb loopne loope inc rcrl inc pop movb inc adc fildll add out cli xchg ss mov out and sbb scas push int lock repnz rcrb mov nop enter hlt inc mov mov jg sbb (bad) popa ljmp inc outsl loope cwtl dec cltd pop xchg cli mov push inc sbb adc push js mov jbe jmp ret mov imul daa insl aad pop adc mov push inc pop mov icebp jmp scas ret scas addr16 test lds lods push aas cs addr16 lods cmc dec js je fcmovu adc gs pushf test mov insb mov adc nop icebp lret inc and xchg mov loop ret sub sahf inc mov mov inc xor inc scas jo data16 repz push adc and ret push adc push mov push mov push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret jecxz (bad) push pop adc add lret (bad) jnp pop push jl lcall mov xchg dec fcoms in fildl inc sahf mov outsb mov sub gs jb mov xlat gs mov enter stc mov mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret jecxz (bad) push nop (bad) mov neg enter pop cmpsb adc xchg push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret push (bad) aaa cmp sub cld stos outsl or ja jmp out dec int3 mov call mov ret mov ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret jecxz (bad) push (bad) (bad) test xchg lds mov lret adc xchg jbe mov mov (bad) mov outsl js cmp out fsts xchg nop stc scas mov daa add mov jae sarb lret rcrl mov jp cmpsl pop mov xor loop inc mov adc leave lret inc pop fwait mov pop xor sub mov (bad) xor and push pop scas imul lcall push fucomi cmpsb xchg inc adc mov fisubr xchg sbb mov dec xchg and pop push push dec lods vminsd repnz pusha push and lcall and fildll insb sub (bad) loope adc fistp adc fnstsw popf xor pop lock scas repnz in insb out xchg cmp inc out xchg insb addl jno (bad) mov add lret push mov or out outsb xor lret sub dec xchg inc out mov ret iret mov imul add test popa or pushf popa push dec mov sub cmc shrb das fimul jl add in scas fisubr in enter adc pop aas sub (bad) scas aas sub jo data16 (bad) cmp or jle and mov stos and push mov adc dec lret push lds ljmp leave or sbb and push fisttp mov fdivr pop sbb (bad) dec xchg sub loope mov enter sub lret mov jnp xchg rorb inc or leave push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret jecxz (bad) push pop jl push sbb cmp out imul mov ret out dec lods add daa dec sub bound mov xor add out xor sarb daa scas mov push sub mov and test andl inc sub (bad) lock mov push leave dec dec fnstenv je hlt dec call (bad) mov scas shrb in js jns xor inc or sub dec popf mov push mov push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret jecxz (bad) push nop aad xchg pop mov pop and lret dec or jg fidiv adc jno scas bound int insb loop mov cmpl loopne pop pusha repz adc scas imul pop and pop mov adc push xchg imul loop cwtl and in push pop xorl cltd cs cmpsb jb,pt jae sbb (bad) jb fldenv xchg mov fs sbb mov stos add std push inc and push mov push call mov mov lea push push call mov pop pop add mov pop ret jecxz (bad) push or int3 leave addr16 hlt mov and pop cmp jb xchg pop std movsl insl jbe add mov imul mov out imul sub jbe pop test sub push fildll jg xor add sub push pop sub xchg fdivrl and jge into sub movsb mov inc xlat addr16 jb cs jg push push and das xchg repnz push fdivrs mov rorl cs inc rolb cmpsl das mov movhps faddl rolb inc and adc cwtl xor or cmc sti push cli sub mov fiaddl movsb dec sar xchg (bad) sbb rcrl imul paddb sub addr16 lcall jp (bad) enter out sub test nop mov jo inc shll adc inc lods and shl sub mov xlat sbb sbbl jmp in (bad) mov xchg pop pop mov jae push pop xor adc cld mov fs inc out or push scas push inc jge (bad) or iret xchg icebp sub outsl xor fs add sar out int lahf stos jne negl push pop ljmp aas sub push mov pop adc push je pusha jne (bad) cmp jns fadd mov xlat cmpsb fcompl hlt inc sub mov mov imul jp ficom incb jecxz add sub repz ret pop xchg mov add (bad) jmp add nop pop ret cwtl lcall mov (bad) (bad) loopne dec ret je jg loop subl pop (bad) jne xchg imul outsl sbb sbb lds stos add enter movsb (bad) mov dec dec daa mov ja out test and lods add dec test mov movq das lock (bad) hlt jbe sbb jmp test lret movsl adc jno hlt test xor cmpsl jecxz (bad) fbld xchg insb and xchg adc xchg mov movsl mov rclb mov (bad) data16 les rcl xor xchg jnp out adc push xchg jmp or pusha jmp fiaddl test (bad) fwait ret outsb pop shlb jne cs jle mov cmpsb jle lods lds dec add stos mov xchg out (bad) lahf movsl enter into cmpsl dec rcll mov aad mov (bad) mov pop mov jl jg arpl fstps pop scas xor test lcall push ret out outsl mov mov jge sub clc decb dec jbe ret lcall mov scas push jle (bad) dec ss sub outsl push fnop xor int3 mov fildl mov push mov push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 add mov imul roll inc stc sarl mov mov mov lods adc dec push lock popf out out dec (bad) cmpsl aam nop add pop test push cld rol clc inc js scas fnstenv lcall out outsl mov scas or and push jg push and add adc dec divl and mov pop fmuls add xor das ljmp push xlat sbb add lahf cmpsl xor insl xchg jl fdivl scas fdivs xchg les push jb inc inc inc loope sub mov sti bound scas push iret add adc dec fistl out mov jno sub mov sub arpl movsb loopne lds cmpsl add fadds imul lahf push (bad) mov bound jecxz popa mov pop fsub out or cmp mov jbe decb cmp xor fcmove cmp mov daa clc (bad) jb dec test out icebp dec movups push mov mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret jecxz (bad) push test mov arpl test fmull push sbb lods pop roll fwait or sti loopne lods cmp repnz or inc lods (bad) jge movsl adc movsb mov in push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret loope int imul dec pop jo pop or pop int cmp jb add sti adc mov dec inc push loopne ds fisubr jb adc pushf insb ficoml jle imul test mov aaa mov inc mov or outsl push jge push add jne dec repz and pop aas pop das std xor ret inc mov and push adc in cs sti xchg mov addb mov fwait sbb rol sbb and adc push sbb add mov cmpsl cld out loop mov xchg (bad) cltd lret xlat popa jnp jno or or cli mov mov push popa mov or push xor mov xchg movsb inc pop adc jmp xor pop or idivb cs movsl xor inc mov loopne dec sbb aas mov adc mov enter aaa sbbb pop imul jo xor orb aas in out fs cmp cmp lcall fdecstp push clc and and lcall (bad) jb icebp add mov fcompl sbb fs sahf rcl cmp pop ljmp (bad) shll insl xor arpl mov mov jae xchg insb xor pop sub out fsubr fnsave xchg (bad) iret aas sbb call js mov div sbb icebp add adc dec lret fildll clc mov add mov scas (bad) repnz cld aam mov jg pop and fwait into add (bad) xchg mov mov dec (bad) lods insl enter mov push mov sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret jecxz (bad) push pop adc add lret (bad) jnp pop push jl lcall mov xchg dec fcoms in mov push mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret jecxz (bad) push nop rcll push andl push (bad) pop xchg mov mov mov (bad) stc or sub int3 push xchg push decb lds (bad) jo out call popf push mov out in mov cmp je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 jecxz pushf xchg push add mov jb push out xchg js mov out test (bad) ljmp clc test addl rcrl movl xchg (bad) sarb sbb sbb bound adc inc insl jg icebp cs cmpsb cmp enter pushf arpl xorb out fwait mov push cs or lahf pop stos adc loop add mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret jecxz (bad) push or int3 leave addr16 hlt mov data16 add mov jno movsb (bad) ja mov lds jp mov xchg movsl xchg add ret push (bad) fistpl xor inc iret int ret lcall lds pop mov fidivl cli push jge jno inc fidiv leave in mov mov call sbb repz in adc push xchg dec cmp or out xor pop mov sbb sub ds enter fsubrp xchg mov mov cmp push loop pop push push es xchg js js xchg lea pop pop icebp loopne inc mov push mov push mov mov cmp je mov mov test jne call mov pop pop ret jecxz (bad) push pushf fcmovne dec pop inc xchg es stos jo mov inc outsl shl inc inc psubsw mov mov inc xor ret push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret jecxz (bad) push ret into push paddw mov push pop call mov cltd dec lods mov push fnstsw jg inc mov xor ret (bad) into cmp mov jno,pt xor pop pusha cs jmp out iret cmp cmp in add and sub fstpt lock or lds sar stc dec daa and sbb pop cld fs push stos xchg cli sbb repnz and push dec sbb pushf fwait gs push jns arpl dec in push sub mov lods and lods insl mov push ret enter mov fs insl cmp lds inc add das xor nop sub cmp (bad) (bad) out stos and lret (bad) cmp mov cmp pop push (bad) xor jmp iret push insl pop fldl pop and lds lods push faddp push mov cmc pop insl out pop sti (bad) mov mov jns mov adc repz loope or pop xor xchg out inc ja push inc mov int3 adc xchg push mov push mov cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 jecxz (bad) push test push cmp xor mov adc push popa idivl push push lods cmp xor nop (bad) sbb gs (bad) (bad) notb insb xchg inc push cmpsl cld int mov xchg dec jmp or int3 pop inc pusha imul decl cs call mov sbb in mov jo cmc imul insl lods dec sub dec loope pop or xchg loope push int aaa in jmp ss push mov xor dec pop xor fbld push movsl sub in lds sub clc and add push pop lock push lock mov movsb sub adc lahf aam mov cwtl push mov cmc iret adc (bad) cmp (bad) in or (bad) jne fcoms (bad) sbb jl adc lahf dec ljmp inc and mov outsb aad dec cmp hlt cmc or jp and sarl out cmpl popa ficomp xor inc pop and mov lcall xchg rolb aas sahf xchg cltd pop push and dec jns mov jno lahf jbe jecxz movsl mov sub hlt add loopne dec (bad) rorb loope rclb sbb pop out sub push inc and ss in hlt adc int lret mov jbe stos push pop jle inc andl ret sbb xor pop test push sub stc mov mov cmc push jp add sbb sub xor incl scas inc inc je inc lock inc punpcklbw movsl lahf mov push sahf pop sub add lret mov push imul repz hlt lahf add int jmp pop outsb add inc adc jp sbb dec in and cmpsb call inc pop rolb test lea cmp jp mov inc cmpsl and das outsl cmp inc jmp xor (bad) or roll push add xor pusha sub adc mov sub mov repz ja (bad) mov push lods repz mov add movsl lods daa push iret fstpt test mov adc lock lcall repz daa inc movsl push out and popa dec xchg sbb adc loope movswl mov jne lds mov push mov sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret jecxz (bad) push pop adc add lret (bad) jnp pop push jl lcall mov xchg dec fcoms in cmp or data16 adc add out imul shrl mov es jmp pop jecxz ret xlat (bad) dec in aas pop add mov rorl push repz xor enter sarl and cmc add sbb pop add rorl in inc adc into (bad) push repnz lea push pop pusha sub sbb inc fwait or mov cmpsl xchg jae cmp sub xchg sub sbb dec push push subl lods out add or (bad) mov cmpl movsl insb lds call in mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret jecxz (bad) push xchg stos (bad) push sbb adc pop mov out rcl inc push sbb lods test pushf push fwait loopne (bad) int xchg push data16 xchg test int pop inc push jne (bad) pusha scas xor cmp lret mov cmp jp sub push mov push mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret jecxz (bad) push xchg stos (bad) push sbb pop iret pop mov out not inc push sbb lods push cmp fwait loopne (bad) push lret icebp mov add insl outsb jl xchg (bad) xor aam test (bad) xor or or push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret jecxz (bad) push xchg stos (bad) push sbb fwait into pop mov out cmp lods sahf mov xchg aad ret rol add pop lret icebp mov loope push int pop inc push jne (bad) arpl inc mov sti gs repz add jecxz clc push adc mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret int (bad) cmp pop xor pop jo lds sahf sti sbb clc repnz adc gs jno mov xor loop xor mov sbb mov movsb and mov mov notb mov rolb and pusha es repz jne cltd aam push aam pop leave inc int3 int xchg mov cld pop sub call cmpsl sub cwtl inc cld (bad) (bad) icebp ds dec inc popa test fwait je inc xor std pop mov loope pop pop cmpsb or adc loop sub mov push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret jecxz (bad) push (bad) (bad) stos xchg js ja inc stc jae xchg push call and std adc mov mov (bad) insb xchg (bad) jge sub push sbb push aad jp jg jecxz imul mov out enter jmp rcrl cmpsb mov push pop mov add ja call mov mov push push ljmp and lds sub or cli sbb dec inc lcall lods jno xor mov cwtl fwait dec das int3 insl inc xchg outsl in pop mov inc push out scas fcomps or sub daa in movsb and push and mov fcoms icebp add aas in in cltd scas aas sub hlt jns out jo out add jne add xchg jns movsl (bad) (bad) insb cltd mov (bad) pop out pushf cmp insl jmp sub or in jg jno mov push mov push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret jecxz (bad) push ret mov (bad) loope jle (bad) hlt pop fisttp fisub cmc pop cmp hlt sub outsb adc and outsl (bad) mov popa clc dec mov ds scas add or cmp (bad) jecxz pop inc mov cli lcall ret ret iret adc pop ja dec mov and outsb inc mov cs xchg and adc imul adc cmpl scas pusha xlat fnop mov fildl xor cltd jl or sti inc int and aad mov out es lods and add sub and hlt mov mov popf pop lret addl inc jnp lods mov mov cmp sbb es lods pop pop scas and jnp xor jmp and lods hlt test in je in sub daa and out mov and jmp mov cltd dec fsubs in push push inc mov in pop push xor in sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret jecxz xorl stos movl mov fmull out imul xchg je sbb call and ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret jecxz (bad) push stos add cmp (bad) test jo (bad) mov push mov pushl mov call pushl mov call pushl mov call pushl mov call pop ret xchg cld or sahf adc jg mov lret negb fidivrl ljmp decb ret cmpsl enter jg enter mov sub aam das stc pop push fcmovnb bound cmpsb mov inc scas ds xchg mov repnz loopne cmp pusha imul (bad) push addb mov sub mov aaa pop das pop xor mov and add cmpsb pop (bad) jbe popa cmpsl lods push push sbb sbb shll adc pop daa mov mov mov mov loope pop in and mov dec (bad) inc jl ds inc test jno or push add push sub fwait cmc test add neg mov inc cld ja or mov adc in ret sub (bad) mov cwtl sub xor lock fdivr int push aam adc (bad) (bad) fyl2x pop in xor icebp insb sub loop adc ja stos adc (bad) xchg ljmp pop pop mov jl jmp mov cmp jo dec jl lds ret daa bound rolb mov leave lods cmpsl push or mov dec xchg scas jp cmp add data16 dec fs jno cmc xchg lea mov mov outsb insl mov popa mov ror push push test sub fsubr mov arpl sbb test sub fstl jle (bad) inc fwait shrl xchg lods aas pusha scas test pop and add fnop daa sub jge jne cmp mov jno dec inc (bad) add or pop pop jmp insb (bad) inc xchg stos mov sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret push out mov int inc jmp dec or xchg repz fisttpll out inc bswap and iret bt push inc (bad) mov push outsl lcall or jne mov insb jp mov mov or jne jp push push push jbe mov mov xchg push (bad) fnsave or xor mov imul xor in cmp add cwtl jecxz insl imul das add rorb rcrl lock stc lret jo mov inc popf hlt mov sahf xor pop stos push cmpsl (bad) dec loop pop pop stos jmp sub or inc stos lods popa loope pop or (bad) mov test das je inc pop stc adc mov inc ljmp adc (bad) fwait mov push mov push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret jecxz (bad) push (bad) (bad) fsubs push xor cli (bad) (bad) pop mov add sub dec jbe ds mov addl imul hlt xchg hlt push lods out scas add xlat jmp scas pop mov jbe push popa imul cs sbb push mov (bad) xor xor jp jmp or cmpsl adc mov xchg add xlat repnz (bad) int3 xchg icebp jno pop and pop dec jae (bad) movsb imull pop jmp sub sbb jnp imul mov sbb insb mov xchg mov inc outsb lcall and add pop or pop rolb bound xlat int push mov jns or data16 mov mov jp jg push out inc cmpsb pop stos or lock sbb sub dec hlt shr mov testl mov mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret jecxz (bad) push nop aad xchg pop mov mov popf push jno sti bswap int3 imul dec dec mov cmp push hlt mov outsl mov fs call dec jecxz jg clc push call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret int cmp adc pop cld (bad) mov lock mov pop xor repnz mov sbb mov push adc jo add adc insl or popf push push inc lahf jle testb jb roll mov daa and mov call in push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret jecxz (bad) push pop jl insb fmul jo fcmovu aaa int3 mov shrl mov cmp aas pop xor movntps mov aas sub xchg enter sub mov enter pop or xor mov out in loopne cwtl lahf or inc add push sub inc (bad) mov pusha xchg loop lcall mov movsl and call mov imul gs cmpsl mov lcall call jmp or sub test les mov xchg or pop inc insb lahf aas fbld jle js fisubrl les lret xor out or (bad) je xchg xor in (bad) xor test adc clc jns loop mov sub mov leave sub lea mov das lock mov or inc gs lock pushf inc mov or je dec popf pop loope inc roll lds xor fs inc (bad) shlb fldcw test jns xor xor fsubl (bad) neg lahf ja movsb ret test addb add jae add cs shlb subl jp call in push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret jecxz subl pop jge sub (bad) adc or jno mull sbb or xchg adc cmp ja jo pop fldenv (bad) outsb test (bad) es rcrl enter jg adc out mov loopne pop les mov jae cmp jns lods sbb fwait pop jle push inc sub pop dec fisttp sub sarl sbb push sub xor push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret jecxz subl xchg push xchg push or dec mov jo sbb scas jp shll aad lret push cmp frstor jb scas push add inc jmp roll cmp jne (bad) sti mov stos rcl mov mov sbb loopne (bad) jbe pop pop xor in inc into and dec jns lret adc xchg dec dec push sub dec idivl mov xor cs add sub xlat sbb mov jg mov mov gs or xchg lret jae clc xor jg clc add xor repz sbb xor mov push mov mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret jecxz (bad) push nop push jp push push std arpl js in xchg int pop cmp sub and sub mov loope inc mov (bad) sar scas scas scas jno mov fidiv sub shll ret fs add in xor in sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret jecxz (bad) push or int3 leave addr16 hlt mov and pop xchg ret jno mov or push pop repz jns pop jae jl fildll (bad) inc xor in xor lcall mov inc mov nop push mov mov and dec pop cld add xor aad push leave into add mov mov ja and movsl loopne sub sub pop xor mov rcrb push jmp out xor dec (bad) mov push int3 xchg stos sbb sti cli mov hlt mov xchg bound inc clc xor cmpsb movsl mov outsl fildll xchg pop mov imull int3 mov cmp in test loop xchg (bad) divl movsl scas mov xor xchg adc adc add ret push in shr jbe fwait mov shrl mov rol xor shl inc cli into sub rcrl mov out xchg aad lcall fcompl sub inc pop sbb pop jae jo imul cltd je pushf push jmp xor xchg and dec lcall stos ja movsb lock mov jmp cmc sti loopne jl stos sbb das sbb pushf aas mov mov sub push inc ficompl mov dec push imul push (bad) xchg push cmp mov aam fidivl divb dec jbe sub inc pop pop cmpsb jp and mov and xchg scas or pop ss jmp xor sub je push add mov push mov mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret jecxz (bad) push xchg stos (bad) push sbb test les xchg sub test cmpsl xor and add shr jno xor pop add fstl jbe xchg mov aaa ret add ficompl mov push mov fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret jecxz (bad) push lods mov xor xlat lods (bad) mov push mov push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret jecxz (bad) push or int3 leave addr16 hlt mov and nop or inc shll std pop mov mov cli dec xor mov bound xchg xchg insb mov push aaa and jg int3 jo ss xchg or lret test sub adc push pop push push pop mov sub cmpl pop cmp cli nop xor arpl xchg lret push push mov push sub cmp popf sbb inc dec cmp pop test ret incb cmp sub lret xchg cmpsl je and inc pop pop rclb popf cmpsl push lahf imul into arpl mov or jl dec mov sub xor out mov add mov mov dec push mov xor decl sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret add xor movsb add xor cmp lret shrb sarb sahf mov in sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop test mov jmp sbb in push inc test (bad) (bad) (bad) xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp xchg push fstp fldt movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp xchg push push or fcomp out test je fchs ret fstp fstp fld1 ret xchg sub or outsl rolb icebp bnd dec xorb int icebp imul adc mov leave fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg test mov jmp fstp fldt or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret or in mov ds cmp push and cmp and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret jecxz (bad) push pop in insl ficom xor add pop sub shl xor movsb testb sbb and xchg aas sub nop jl dec mov stc in loope push loop lock jp lahf and add (bad) mov mov cmpsb sti pop cmp test xchg jp test xor xor inc (bad) and sbb mov cli mov aam cmc dec fisttp add int3 push test push dec inc dec jns jo jecxz sbb sbb jmp mov xor pop lds cmpl mov in test jecxz or sbb aad push stc (bad) xor adc pop movsb sub inc cltd pushf aad jne pop bswap xlat sti inc out dec mov mov outsb sbb pop fs into (bad) sbb pop mov jg mov cld pop mov stos (bad) jne pop and pop flds leave cmc popf hlt insl testb sti inc lods jl add push bound lock and xor dec jg cli lahf mov push mov mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret jecxz (bad) push (bad) (bad) xchg push mov sub jo ret out jno push xchg lret or inc cmp insb fidivl fdiv push mov cmp mov rol sahf aad fs enter cld fisttpll mov lcall into f2xm1 pop mov imul push jmp pop jb clc mov ljmp adc sti xchg out or mov (bad) ss cmp jno dec add jns mov xor scas fisttp push dec insl inc dec (bad) sub add into xor jecxz adcl in movsb dec mov cmp call test mov or add push pop mov and xchg (bad) cmpsl (bad) das repz negb fisubrl (bad) shl xchg jmp loop mov xchg adc dec lret inc ja ret mov inc stc dec lods push xor xor inc movsl xor adc cmp data16 or dec xchg jnp and movb cmpsb out fidivr insl in sahf fidiv jno in pop sbb test pop xor sub jl repnz sub lods test in mov cmp popa fisubl loop cli jnp jae adc or lock adc shll stos pop jbe mov add sbb mov rcrb stc push into std xchg xlat fsubrs mov pop jns pushf (bad) xor and mov es popl sub cmp lcall jbe call and dec or or popa pop fisubrl imull cmp fist cmp lds cmp mov or insb mov push xchg in mov incb imul adc add adc mov xchg xor outsb imull xor push (bad) cmpsl mov cmp add cmpsb shrl imul lahf dec cmp and inc mov std idivb mul mov push hlt rcl xchg sbb xchg sub jns mov and lcall in inc or or cmp mov in xchg fistl in addl into pop fldenv pop test pop lcall sahf push push lock sbb mov je push inc cltd jl cmp les out push popa and sbb outsb (bad) repz or pop imul lcall lock les lds mov mov inc cwtl ja jmp inc dec rcr xor arpl cwtl cmp mov adc fsubl add sbb pusha insl inc cwtl jb adc mov push fucom dec fdivrs cmp in push imul cmpsb loope aam cmc cmp xor arpl mov cmp jge (bad) mov (bad) mov popa or push mov xchg insl push roll out mov fs pop mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret jecxz (bad) push (bad) (bad) xchg push mov xor lret int inc xlat std ficoml xchg jbe sub push mov cmp sbb aam mov or fbstp scas mov scas outsb pop add inc jg (bad) jne test mov dec subb push add es add jae sub sub xor cmp xor mov dec (bad) (bad) (bad) xor cmpsb imul xchg cmp push xor mov push xlat xchg jmp mov cmp push lret hlt fucomp sub sbb and loopne out fldcw xchg pop adc mov xor pop icebp pop daa or xor popf mov xlat xchg mov jb lahf aam pushf ja sahf sarl lcall sbb subl rcrl stos and ret mov insl or jg and fiadd iret push pop (bad) jo cltd inc js lea and pop inc shrb xchg or das test imul push jnp fisubrl cmp out adc fisub repz xor lret fisub insl mov ror out lock dec and mov fstl outsb jne or cmp in hlt cld out outsb xchg out mov mov nop test mov mov and daa scas push mov push ljmp cmp dec stc test mov (bad) cmc pop pop sub std dec addr16 xlat push call jbe inc in (bad) pushf sbb inc stc or ret sti jg pop lea lea pop cld pop int fsubrs imul enter push pop xchg test aam adc adc add mov and fs mov pop push pop loope inc or test mov (bad) dec popa aaa sarb rorl pop imul inc or lock mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret jecxz (bad) push test shll test mov xchg cli add popf inc mov or lods cmp fwait add inc nop pop jns mov lods sub enter xchg mov add dec lods cmpsb sti cmpsl mov cmp shrl outsl xlat xchg orl shlb test sub pusha mov xor pushf sbb loopne hlt dec inc and mov push iret cltd sbb bound daa shrb xchg dec jbe imul pop inc mov cmp lret stos dec push adc sbb mov xchg pop notb fcoms inc bound (bad) cmpsl mov rcll push hlt mov dec outsb fadds sbb movsb sub xchg push cmp adc jno scas jmp out jnp out jmp cmpsb mov ljmp adc cmpsl out pop ret aaa lret push push mov adc (bad) dec jnp outsb fidivrl idivb insb enter out loopne push lret lcall cltd inc xor movb (bad) cmpsb xchg loop rclb mov mov sarl cmp mov cmp adc mov dec mov insl loop ror stos fmull pop cmovno aas mov inc xchg cld xchg jecxz push dec movsb (bad) fcoms sub sub cmc xchg clc mov popf or jp test pop insl push in repnz push xor push aam push lret xchg mull int nop inc les xor inc push jp out mov jmp adc js aad xor hlt xchg inc cld (bad) pop lea cmp xchg adc adc addr16 or add xchg iret adcl (bad) (bad) out call sbb in in shrb and fcoml in mov decl push mov test sti xchg jb xchg lret and lods enter and add addr16 out cltd testb xor mov jmp mov aad lods inc insb jnp xchg jnp popf sti sbb xchg and test aaa pusha xchg cmp cmpl lds fsub imul cmp sti hlt je out ds in add add loope mov inc gs nop stc or fwait btr adc pop push xchg jmp or pop mov test imul call in sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 jecxz (bad) push nop push jp sbb add repnz mov mov push add ret xor stc std sahf aam fs in aad jnp addr16 and repnz push pop jle loopne xor fsubrl shrl jns repnz lds inc rcrb in lock sahf daa (bad) ja mov push or mov rolb in fwait jle (bad) hlt in adc arpl and adc mov and jle sbb add push jmp and xchg pop stc add rorl push inc pop je and stc push adcl (bad) push ljmp and shll test in push jmp fiadd in sti in ja cmp mov dec add sub adc call in sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret jecxz (bad) push nop push jp sbb add repnz mov mov push add ret xor stc std sahf aam fs in aad jnp addr16 and repnz push pop jle loopne xor fsubrl shrl jns repnz lds inc rcrb in lock sahf daa (bad) ja mov push or mov rolb in fwait jle (bad) hlt in adc arpl and or jmp mov and jle sbb push mov call mov cmp movsl push loope and (bad) aad mov mov enter cli das xchg repnz fsubp leave out adc pop push xchg sbb stos sbb fnstcw push popf push cld mov push mov mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp jecxz (bad) push or int3 leave addr16 hlt mov ds jl popa insl mov fiaddl addr16 sahf sti enter or and mov jns lods mov int rcll mov into pop ret int insl scas add inc je (bad) iret or pop dec rcrl out out jb es out call push popf push pop mov mov lock in imull mov jge mov and xor push movsl push push int dec adc aam cmp mov fadds jmp imul adc jge cmpsb and sbb xchg fist test int hlt aad mov mov lods jge cs fwait stos mov lds xchg daa adc inc add sbb and cmp add lret and shll push out mov sbb mov or inc mov jnp dec cmp jp dec iret jbe dec xor pushf cmc in jnp aam shl xor mov push out jns aas cld pusha data16 or ss ficom and mov xor pop jnp xchg and (bad) push mov shl or lcall pushf xchg movsl das xchg adc pop fdiv sbb dec (bad) and or xlat or hlt push out test dec cli cli (bad) cmp inc (bad) imul ret or repz pop scas scas gs mov xor and cmp mov sbb or jae pop pop mov fcmovbe xchg loopne mov adc addr16 jg fwait or mov sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret jecxz (bad) push movl add repnz mov (bad) popl add cwtl inc inc leave mov es sub xchg aad push cmp movsl js lcall jmp lahf mov inc jb sahf test (bad) dec push rcll sbb imul inc gs xor ret xor mov addb xchg es xor mov stc pushf xor pop adc shll enter cwtl and and dec insb ljmp imul mov in cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret jecxz (bad) push xchg push shll test mov cmpl xor push mov push inc mov jge cmpsl loope jp jbe adc jp mov nop dec mov dec clc sub fist jecxz push push gs push cmp sbb gs jbe mov pop mov and sub add pop pop and sarl xor clc xchg fimul (bad) cmp inc push xor int3 adc cli add ljmp mov or push sub mov movsl in xor inc pop inc inc and mov xchg mov cmp dec enter sub ljmp push mov and jne lret sti add xchg lahf jecxz and loope inc pop jno dec jbe sbb inc jne xor cli fiadd lods in jmp jb xor cmp idivl jecxz (bad) ss sub adc pop xchg ss xchg adc pop jmp inc sbb mov outsb rcrb aas lret adc mov jns mov testl xor scas cmc cld jle std xchg into xchg sub jae jg xchg jecxz out roll orb insl arpl xchg sbb or xlat pop inc or mov dec pop fistpl xchg xchg sub stc test dec pop adc es lea fcoms call mov xchg cmp lods call pop and daa lods jne jb fs mov nop push loope ljmp fistpll mov rcrl adc xlat pushl testl scas movsb adc jno inc push test cmp pop inc rorl push xor out andl insl inc mov pop js or movsl iret aad hlt mov pop inc stos jmp mov call lret push fcmovnbe inc push jb or popa and divb mov test cmpsb push fdivr jae rorb ret inc (bad) mov imul xor mov pop push add push ja add subb ret in mov std orb imul or jge jo icebp lcall leave mov pop push movsb popa in fnstcw sbb jae jmp inc cmp sub inc add xor adc repz bound loopne mov (bad) enter dec rclb in call mov cmp loop sub aaa dec or mov outsl sbb int and add insb sbb (bad) pushf nop adc sub xor lahf into cmc cmpb mov or es sbb insb imul sahf scas cli cltd fsubrl adc push or cmp xor jge jmp es pop dec xlat insb cmp dec sbb cli lods pop bnd xchg movsl roll gs push pextrw sbb pushf push sti pop jle pop arpl lcall out outsb sub lret lods ss (bad) fcompl or daa cmpsl pop jbe mov inc xchg iret outsb pop popa into pop ja push orl mov sbb xchg int3 jp out sub push stos mov add sub lock lods lcall add scas pop dec (bad) fs imull imul cli push sar (bad) aam (bad) pop arpl ret xchg xchg mov call fmull hlt push cli cmp sub xchg rcl fmuls jl test and xor addr16 mov stc cltd int3 stos mov testb xor adc fwait lret arpl imul sarl cmp sbb fcoml jbe add sbb mov cld stos ret es inc jns xchg stos sahf cmp scas jmp stc dec lahf sub mov jno dec inc push scas mov icebp sub pushf vunpckhpd jg jecxz and out pop mov add imul jne out sub loop (bad) sub push pop lea dec mov cmp xchg add mov add lret out add push and les sub sub add and sub xor lcall lahf dec fsubrs sbb inc hlt fldcw cmp mov xor jecxz xchg cld push (bad) mov jns stos push mov or test into outsl aam ret hlt add mov ds jl lock repnz jmp ret fimull (bad) mov inc in dec sbb push les mov repz inc or dec pop fiadd cmc idivl pop stos push sub je stos test outsl in dec and push in sahf jns cmp xchg out mov pop cmc or (bad) repnz add push dec ljmp cmp add lods jle test mov inc clc mov imulb int aas mov sub adc cmpsb ja nop jbe int3 or sub fwait (bad) cmp pop fs mov (bad) jbe ja or or (bad) repnz inc pop dec sbb mov mov std int es dec pop mov sbbl jb mov mov add push jne out (bad) and in and mov jne jae dec inc pop scas iret clc cmp pushf and mov dec cs cld loope add xchg test jb xor shr add insb jnp mov mov fmull aad hlt mov xor lods xchg push inc add push and mov mov jecxz rorl (bad) sbb xchg pop mov inc jnp and or jne outsl cltd xor pop loope mov mov push ret xchg cli les leave and rorl adc lahf iret enter xlat xchg cwtl (bad) nop imul (bad) (bad) lods hlt scas and cmc cs (bad) sahf push cld shl clc xor stos pop pop or addr16 (bad) jnp cli lret ds cmp xchg push mov fs add mov dec mov jge mov ficompl (bad) pop and push (bad) ja std lea mov mov subb xor inc in jns xchg testb pop jecxz test repnz or push aas (bad) repnz sbb pop (bad) repnz jns fldenv dec add mov xlat ljmp xchg btc inc inc jg dec fs sbb scas fmul push lods sbb int3 out inc mov mov inc (bad) test fbld xchg push dec loopne mov les mov dec pushf in jecxz loope fistpl cwtl ret sbb pop and xchg clc movsl jo cwtl data16 mov inc std pop popa imul xchg aam xchg lahf cmp mov dec or cmp sti pop sub jmp ss push out std out loope mov sbb add fcmove je jmp ljmp outsl pop movsl cltd or jbe fnstsw adc shlb imul in sarl lcall mov sbb or (bad) sbb (bad) sbb ret jge mov lret (bad) lahf sbb mov cmpl (bad) repnz (bad) push ds sbb jne cmp subl add cli xchg jo loope popf mov cld xor movb or cmpsl dec jp sbb dec jle mov push (bad) mov pop ds hlt fcomps xchg pavgw mov movsb sbb in fbstp lock add and add (bad) sbb push aam std and jg test fisubl mov imul bound jb push mov mov inc pusha mov push leave cld (bad) das inc sbb xor outsb jo out push (bad) mov add fistl in xchg push mov pop dec mov fs outsl adc popf sub mov bound jo into jbe dec jo clc test (bad) mov test (bad) or out push (bad) lahf xor pop adc aam test (bad) lahf mov je mov insb pop roll xchg fild sbb test loope clc movsb push inc movsl jno outsl test ss repnz pop xor pop cltd jns lret push mov jl mov push push sub adc fbstp imul push xlat xor inc mov test sbb mov mov lcall iret jo sbb fsubrl adc mov int3 notl and out lods pop adc xchg push mov pop or jl cmpsl cwtl and jge mov popa iret int3 push stos push sar or test shrb push xor push add mov mov addr16 adc iret cmpsl mov incl std xor or jno orl cmp pusha div xlat mov xchg fdivl push push out sbb sub ljmp jle push mov in imul rcrb push je adc lcall loop inc push sub shrl fcmovbe and or mov aas call mov lcall cmp and cmpsl add nop aad or negl mov loop movsl neg jmp jb adc xor inc popf mov lods iret and (bad) jle push mov xchg pop push cmp dec inc (bad) sub insb pushf addr16 fisub jae int3 xchg outsb clc inc mov or icebp sbb cmp movb or sub outsl sub mov or or adcl mov pop std lods fcomp stos mov pop mov mov fcomps lcall and inc cmp ficomp lods sbb fsubp es cmp insl dec out aam cmpsb stos xchg test sub divb push fisttpl add mov fxtract cmp jle cmp mov pcmpeqd mov sahf mov mov outsl dec dec push and mov add xor mov adc sbb mov pop or (bad) psubsb dec push mov jp dec out mov pop mov jl in call movsb hlt stos (bad) idivb sbb jno push mov and out nop add jl sub mov mov pop mov jae xor push lods push popa inc aaa outsb cmp pop jno aad imul aad or scas sbb mov test pusha xchg dec cmc xchg int3 dec add dec in daa sbb and stos xor or ret mov sub test cld arpl add fldenv clc push sbb stos es ret test jo imull nop or push test adc inc or xchg mov mov inc xchg (bad) dec sub xchg mov mov insb push and adc mov ja daa adc pop pop bound fcomi dec mov (bad) test mov mov scas sub xchg (bad) inc pop jg stos test xor roll js add test push adcl pop sbb sahf sbb mov mov inc enter test aad xchg imul jne xlat adc mov mov divb add mov popa lea adc mov inc and (bad) bound push or mov mov push add jne adc fcomps xor push idivb fbld sbb cs jge,pt pop call cmpsl es je cmp xor sub add mov push stc xor or aaa je adc mov stos sub and mov mov sub add hlt ds pop out xor xchg jno mov xor dec nop cmp fwait lock dec mov into movd dec push mov adc (bad) call dec ror mov (bad) stos lret adc dec imul outsl mov push pop jb adc and out push sub lahf popa call clc push inc and and sub xchg cmpsl sbb lcall xchg out loope enter ret dec pop lods adc cmp add jnp mov jns xchg sub dec ja rcrb push adc jg test out loop and pop lods sbb out arpl and knotb dec xor push jle or lahf fnstenv and mov stc mov cs aas mov adc mov das addr16 stc sub aam cmp pop fdivrs mov push (bad) ficompl push xchg inc repnz add adc sub pusha loope push adc fadds push lcall dec or fwait mov mov sbb mov stc es int nop pop xor inc jmp mov dec es jb sbb notb pop mov loope fwait dec jecxz cs mov (bad) lret push xor mov pop push fistp mov cmp sub jecxz xchg arpl out adc jg lea clc (bad) mov jg out push pop nop mov in xor rcrb mov loopne cld pop pop loopne jle decl ret loopne (bad) mov push pop jae jne mov test icebp add adc jb jbe push pop out scas (bad) aad jg or mov mov adc pushf rcrb in (bad) jbe lods sahf cltd stc add dec out push addb iret loopne push xor push pop addl adc jbe fsubrs stc push ds jmp jns pop ret cmpsb mulb fstpt pop mov divb add (bad) (bad) mov lea popa sbb mov pop cmpl jmp push pop jl xor in cmpsl mov or insb dec icebp outsl rclb arpl xchg cmc int das xchg rorb inc mov mov ret cli adc mov out lods pop or cmpsl lret call leave dec fisttpll pusha daa cmc dec adc repz sub or pop test push pop stos icebp insl outsl lods out or xchg sbb test jg (bad) (bad) bound sbb (bad) repnz sbb popf jnp xchg mov roll outsb js adc add jecxz ja and leave fwait in ljmp sub dec ret push inc dec cltd xchg xchg adc je insl pop adc cmpsb and and and mov sub xchg (bad) mov aad or int mov jbe or or aad xchg in (bad) mov mov cltd mov call push hlt xchg mov xchg in bound ret shll aad in cltd jg aaa xchg xchg dec and jl push pop cmp jb,pt or (bad) lcall (bad) jae mov pop stos fisttp mov push jns rcrb mov popa out cmc xchg lock pop cli push mov sbb push add jge inc sti push sub xchg mov inc push (bad) jmp push mov imul sbb stos or idiv mov sub jp inc es push clc mov shll je xor das inc or xchg push aam jmp cmp fs test cs out mov stos lahf fs mov aad pop ds dec sub xor sub mov or aam sub jo pop pop xor adc pop inc push xor inc aam ljmp js test sbb adc call in push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret jecxz (bad) push test flds fnstenv mov jo xor lock xchg ret push push fcoms inc insl or mov inc jmp (bad) pop or in xchg jne stos imul ja push aaa icebp and sub in sahf jecxz pop add into xlat xchg inc dec lock leave cmpsl mov push mov push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret jecxz (bad) push and aaa andb ss (bad) mov push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret jecxz (bad) push pop sbb (bad) ret cs sbb jb mov daa pop dec arpl test mov jge jg int3 jg dec movsb div fnsave das cltd and sbb jae add and and add inc insl xchg push mov add dec and hlt dec mov mov icebp mov mov sub mov idivb push nop xor pop add shrb fimull mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop jmp lods cmc int stos inc out out ds stc pop dec idivb pop repnz lahf xchg mov mov rcll add ret divb mov sti mov and or jmp in or adc call call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp sbb xor loop icebp das xor cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 sbb xor and push jp fwait dec (bad) sub or stc fdivs int3 jecxz xorl adc into (bad) gs lock sub jnp jb scas lods add pop xchg into cmp dec xchg jmp ljmp xchg xchg push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret sbb xor push pop adc addr16 ret push xchg nop rorl xlat mov mov sahf sbb dec inc cltd adc sub das dec daa movhps mov or pop dec xchg jmp cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp jnp stos cmpsl bound jecxz add jb cmp fiadd xchg sarl fdivrs mov (bad) mov sbb bound jl into sub or jmp call mov pop frstor and aad jbe ftst fs (bad) mov and jns dec mov sbb int or xor mov imull sbb imul fisubrl lods int cmp and sbb xor push mov jns fistpl jecxz clc flds dec out push stos sbb add mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor sub ja push paddw push cmp (bad) (bad) pop add and adc movsb notl mov and mov repnz int imul mov sti xor sarl push mov mov lret jbe mov mov aam push cltd mov pop mov clc xor jbe jb and imul fbstp lds lods xchg sub xchg mov sti sbb and shrl into add jns mov mov pop push out mov icebp mov enter add iret imul das ja ljmp mov mov and and imul dec mov sub mov sub mov std mov loop xlat dec not (bad) out and inc mov mov jecxz sub jnp xor sbb push sub lods jg rcr rorl xchg mov cltd cmc shr ss cmp cwtl cmp js shl popa sbb movsb dec popf dec in jnp ss lds pop and inc mov dec mov sarb mov adc add xchg cmp test jecxz test xor add loopne or test sbb fcomps sub pop insb cmc xchg lea pop aas mov in test mov test data16 jb xchg dec add inc loope int sbb scas fistpl hlt inc mov out out mov xor adc cmp add decl xor mov out leave lret pop hlt cmpsb stos fnstcw push outsl push xorl (bad) mov xchg mov addl data16 pop (bad) les outsb add sarl ffreep lret scas pop ja and sbb sub ror aaa xchg add clc dec ds xchg mov data16 cmpsl sbb es cmc jo js or push aas subl (bad) dec lods sbb test mov mov lods repnz rclb mov std adc pop adc fdivl sbb ds adc or in fptan outsl outsl push inc ds adc es cmp cli cld adc das xchg push pop xor mov inc les mov ficomp cwtl ret adc mov xchg xor aad mov stos jle cmp cmpsb mov in aas xor je sub shrb sub jns pop cwtl mov aam fdivs cmp (bad) xchg imul imul int3 push and fs adc sub cmp pop inc mov mov pop mov or dec sbb xchg xor int3 div add das mov push ffree xchg adc mov dec mov adc adc test adc cs sbb dec sub jbe mov cmp mov xchg add jp (bad) pop jmp cmp jno paddb scas test arpl xlat fdivs xchg xor je push (bad) or loop dec arpl push lret adc sbb sbb dec aaa sub add daa jle xchg push insb das xchg icebp xchg sbb dec into xlat xor (bad) jg push orb dec je ret add shll xchg mov ljmp hlt or sbb push shrl int lods imul mov fst jl int xchg mov int3 sub pop repz leave mov mov pop jecxz aaa insl pop out xchg cli insl cmp and and inc rcrl dec ja cmp test mov mov pop ret arpl into imul (bad) push cwtl sub stos mov (bad) test lock inc (bad) mov mov adc dec mov add lock jg insl fiadd stc aaa fildl jne mov roll mov mov (bad) cld push test xor lds out iret fucom sbb xchg xchg shll insl ljmp lahf adc inc jge push dec inc mov js outsl or push adc out jns dec dec fmuls xor in pop shrb sbb push xchg ror xchg ljmp push sub aas mov aam insl mov insb dec jbe mov sub shrl mov sbb jge pop mov idivl sbb fildll mov (bad) xor adc aam mov push ss outsb xchg or (bad) jb inc test out and or out cmpsb mov mov mov dec push inc imul movl out mov mov jns dec (bad) in push mov dec lea push xlat cmpsb or cmpsb cmpsl les inc popa push popa cwtl sbb xchg stc cmp jno xlat hlt mov scas pop (bad) jle les in jp pop sub fistp jg call cmc jl repnz fimull sbb cmpb jnp jg pop dec stc out gs mov lcall loop aaa jbe jp int js,pt jno bt fadds fdivs mov push not fadds fwait clc ret stos dec pop (bad) jecxz popf adc xchg mov (bad) aas inc repz adc and test rclb fsubs xor adc mov mov ss or dec mov add adc jge jmp mov pop xchg pop lods (bad) popf stos pushw or ss or mov orb sbb and cmp fsubs (bad) rcrb and adc pusha cmp das add test xchg (bad) pusha jge pop outsl xor arpl push ret xchg ljmp mov sub jmp xor xor (bad) xchg js add je movsb mov push (bad) dec repnz jmp sub cld and out mull cli xchg in and inc test push icebp dec shlb (bad) or outsl pop outsb push std and push mov repz inc pop lcall sbb outsb dec pop inc push mov adc les mov jmp in outsb cwtl sbb push mov in clc pop xlat shlb inc dec adc aad add imul jne les lret pop xor push notb jae out mov enter andl (bad) out sub or mov loope or jbe xchg push and aad adc mulb pop dec xchg dec inc xlat pop inc mov adc dec scas jno adc or bound adc lahf jg cltd push outsb push pop mov fildll negb pop out (bad) in aas sbbl pop mov jmp xlat jp push clc pushf lahf cmp push std jg imul pushl ds (bad) punpckldq repnz (bad) mov push imul insl jp cmpsb inc mov lds mov out sbb push jo jecxz sub adc loope pushw (bad) sbb cmp mov sub jno mov adc mov mov or sbb push adc ficomp test lahf xchg negb movsl addr16 gs test dec push stos in bound sahf cmp jp (bad) push mov dec xor mov cmp shrb jno aas aaa push data16 pop into xchg add out loop pop dec and (bad) es add aam clc mov lds pusha xchg lret movsl sbb clc push push ljmp das or jg add mov ja mov hlt or rcrl and mov jae out adc jno jp or dec mov fldl fs push into aam inc jbe lret dec xorb es les loopne sub push gs clc xchg lcall (bad) cli inc and pop imul data16 popa mov pop (bad) ja mov mov sub repz inc xchg pop or and popa and mov (bad) jnp mov xlat cmc gs pop fmul daa push test dec imul add xchg and adc pop dec push add push insb pop pop test add sub enter jno leave xor lahf cmpsl add ret inc jge xchg pminsw addr16 or mov sub and jnp les or and in push jbe popf in jg cmc add cwtl fimul fdivrp mov fnsetpm(287 call outsb sbb (bad) mov and cltd in mov aad iret adc jp adcb insl gs push pop inc roll stos xor std mov pusha adc aam aam int daa orl push xor mov or xchg jb scas out xchg mov js or and lcall sti dec aam in jnp inc dec mov mov jecxz (bad) (bad) jbe mov lret in xor shrl mov sub fs mov outsl btc sub jecxz sbb push popa mov int3 out imul add aas inc and add lret test push stos stos sub push sub inc sub cs stos xor fidivr shrb lock or and inc pop nop loope dec mov sbb scas add inc and ljmp adc (bad) cmp add mov dec jg lock cs add xor pop pusha cli sub outsl nop jl fwait lock pop aaa jno inc push outsl pop js dec imul lods push xchg scas inc xchg into pop mov jge adc add xor loop subb rorl mov push cmc sbbb cmp fwait pop out jmp call push fwait or (bad) sbb repz mov inc push es mov xchg aam push es rorl sub push and scas lds and xor xor xchg hlt xorl pop dec ja mov or jecxz icebp jnp negb testl xor test test shll or das lea test imul cmp cmp aad and push clc add lret push sub int3 pushfw mov (bad) and (bad) ror bound xor int mov xchg jmp sbb stos push cmpsb fs inc lods push in into in jnp bound aam adc push aad add sahf dec fdivrl test mov pusha sbb mov dec in dec in or and (bad) cmpsl cmp jno or mov aas insl lds nop mov and dec xchg subb int3 pop push mov push mov cs clc insb lret fsubrl mov cld rol ja cmpsl and bnd sub cmpsl cld add loop cmp sbb xchg adc inc (bad) fnstcw cld push push hlt xor out add mov je fcoms push out xchg sbb mov mov outsl leave and jecxz icebp andl push dec imul jge push lret aas lea jnp jmp adc leave cmp stos mov sbb mov aas sub ror jbe inc (bad) add cmpsl pusha mov mov push pop sbb add aad mov sub mov rcll inc cmp fmul or xor int push shrb add enter js iret add lea xchg iret std mov push inc int3 addr16 lds or xchg and add sub (bad) push inc and pop arpl and jo (bad) and mov aad xchg pop fmuls clc pop add inc adc cmpsb sahf jno hlt sbbl lret loop pop (bad) fisubr jae aaa or jmp pop or fstpl sahf inc adc pop fwait test je xchg mov ja (bad) mov sub testb mov ss imul dec shrb fs (bad) (bad) les xor in scas fwait rol sti mov lcall mov popa push movsb (bad) sub icebp std xchg add lods popa sub or out cs daa cli popf fnstsw mov xchg aaa mov pusha fstp or gs push hlt out lock (bad) (bad) out jbe cmpsb test mov test andl xchg pushf inc stos mov jecxz cmp cmpsl (bad) xchg add aas out clc js loopne pop adc pop pop cld push sti fidivr adc mov cs (bad) dec jnp pop ja xchg divb xchg sub (bad) lret test stos fidivl sbb (bad) push push cmp int nop inc pop out xchg xchg jmp mov daa imul movsb mov push enter fisubl mov les ja sti xor jge cmc cs dec hlt repz mov popa lods stos dec pop shl push (bad) and jg call bound clc jl ja sub push xchg sbb lcall add cs mov popa mov push dec call inc popf cltd pop in (bad) in aad lea xor sahf dec iret loope out xlat sub mov cmp fidivrl je mov lds sahf pusha adc mov popf fisubl jns lock mov mov sbb push in dec pop mov ja lock shr (bad) jne xchg (bad) mov test pop adc dec outsb nop fdivs ja dec xor cmpsb (bad) (bad) jl pop xchg mov stos js push push mov (bad) jp lret inc add out jnp adc out and mov push push (bad) scas jmp enter gs pop scas adc adc mov stos lods fisttpll jle mov fldcw xor insl sub xor int3 mov dec pop xchg xchg test cmpsb mov in stc sub test fwait jno cmp add shrl push ffree xchg add scas pop xchg inc lret inc negb (bad) fisubl add insl push clc cltd leave sub pop into outsl icebp sbb int nop nop adc pop xchg sbb add push pop inc jns cld cmp fistpl xchg aam (bad) test lret test movsb loop,pn dec out cmp in stos ficompl enter (bad) fprem1 jp add imull inc dec mov xchg xchg int push (bad) loop push daa push sub or pop add cmp ret imul push rorl imul popa xor (bad) inc jg imul test adc xchg test sbb mov jp int push cmp dec (bad) lahf (bad) cmp scas sub mov adc xor sub sub into xor dec ret imul clc lds rcr (bad) jmp jmp ds and arpl fsts xor push (bad) leave jbe jge xchg cmp je je dec and imul test cmp inc ss jecxz into pop in sbb int3 xchg xchg push sub jp dec push fisub pusha inc vandps xchg sbb (bad) gs stc jmp cmc push xchg mov sbb adc and sub jo mov popa test push ljmp add jmp ret mov or pop in clc push push data16 cmp mov sbb lret pop clc idivb fsubr into xchg mov lcall cmp lods negl (bad) fcoml movsl sub push sbb scas mov push in lcall cwtl sbb aad add cmp orl ret test ss mov daa fnstcw jg dec mov jge adc fs xchg fadd dec or cld xchg sbb mov std outsl mov fadds fcomps sub xor fucom xchg or les addr16 mov (bad) dec inc push dec loopne ljmp sbb push (bad) aam push pushl pop jb stos add jb lcall (bad) jge lds mov mov xchg bound leave loope sahf fcmovbe lahf or and stos mov call int3 or add xorps (bad) stc sbb test xchg loop or jmp gs inc dec seto subb aam sbb jns lahf push sub push rcrl sbb fs decl out ret fdecstp pop mov cmp scas clc and test popa loope push enter loop sahf inc mov bswap popa fnstenv fmull in or sbb jge jno push cmpsl adc sub aam outsb cmp out mov (bad) cmp sub sub mov lea insw lods push sbb fstpl sbb jae mov add cmp or bound jp jecxz popa jne int3 dec xor aam testl andl in and loopne xchg push into loope insl jmp sti cmc insb sub mov pop xor sbb adc pop sti mov jnp mov push and mov rorb sbb and mov xor and or sahf bound lds mov test jnp stos sbb nop add cmpsl mov idivl das aam add jo stos cmp std sub es push mov sbb lock or in scas xchg cmp fwait push xlat xchg (bad) sbb push ret mov push cmp sub stc xchg or rol ljmp xchg das mov dec test mov movsb fs xchg sahf and andl xchg lea popa cmpsl pop or mov mov mov push mov ss fistp jg and xor mov and xor out add pop aaa or clc push jmp and pop (bad) fisubr lcall inc mov add aam fbstp xlat sbb or pusha push lea push push pop pop fcomp add (bad) (bad) mov jmp (bad) int push imul xchg lea bound or cmpsb dec sahf insb pop xor insl into add xlat es (bad) xchg popa push adc test flds shrb in cltd jg mov and push dec jl push (bad) iret lods inc inc jae scas pop add and maxps scas xor xor mov mov into jae aas mov jp mov testb mov (bad) pop lcall mov mov (bad) in mov jge out jne mov adc cmpsb pop scas mov jg out jnp jb cmp sbb inc sbb in imul std std add sbb aad push jnp mov jmp adc jg mov aam insl fwait pop sbb fmull adc jp push cmp dec push daa loope ficoml cld movsl mov or mov lods repnz jp fadds cli add or mov (bad) insb cmpsl mov inc mov scas inc mov imul jp lret (bad) dec dec or imul fwait cmp outsb push ret loopne adc lahf stos adc das in add inc push mov (bad) insb imul (bad) dec fs inc mov mov inc lods inc insl (bad) jmp pop ja,pn arpl or in jno push fmull sti int sub xchg pop repz xchg bound sbbb add xor insl imul sarl inc fcmove sbb push mov mov popa loop out cmc sti data16 (bad) mov cmc jg enter and cmp pop insb cmc mov jl pop push xorl pop sbb xchg or repnz adc in test dec inc aad ljmp enter xchg lods inc (bad) push push loop cmp in cli cmp cli jg dec adc outsl stos and loop stc cmc mov sub lods pushf out push sbb rorl sbb xchg adc push mov push pop inc (bad) std xor and adc mov push and jae jp mov repnz sub or (bad) sbb dec std ret mov test andl in aaa adc xor pushf push in cs add push xchg inc (bad) shrl jge lock jmp addr16 mov mov or adc stos jle mov cmpsl lahf push push jae test (bad) mov mov add gs nop push cltd xchg or jp iret pop jae imul std and in xor xchg jg gs inc xor fs mov sbb jle or push outsb cld sbb push mov push mov sbb dec in inc fisubrl std mov (bad) and decb add icebp mov ja and dec lea in lods mov mov (bad) cld xor iret adc or mov addr16 sub mov pop pusha cmp jb fisubrl jmp dec mov lahf fcmovb mov cmp lcall add sub jg mulb pop dec movsl insl fs add test mov and mov adcb loope (bad) xor inc sub in cltd mov mov das int3 enter add mov scas lods adc mov sub push mov dec mov sub enter xor frstor test jle xchg lock outsl inc dec fimull push sub in addb push pop scas mov xor jo loop lahf aam and (bad) imul pop inc aam ljmp mov xchg dec sub sarl mov push push pop insb cmp push mov push es push mov ret dec or data16 jbe push mov push pop int3 xor lods cltd movsl sub push mov out es arpl nop sub ja xchg add pop pop sbb pop fcomip lahf popf sub pop mulb mov cwtl pop sahf and or cmp push xchg fbstp mov sbb and push push cmp push aam push (bad) imul clc jg xchg push arpl mov sahf data16 adc mov push hlt push xchg mov xor mull into pushf sub adc test pop rol movsl sbb and mov jmp dec testl pop out cs jl xchg test xlat pop fsubrl or fs xchg mov stc leave mov xor xor aas pop (bad) jg cmp mov ss ja dec popa loop and or pushf dec dec or lcall imul xor mov pop hlt (bad) jne mov negb nop fcoml (bad) call fucom les cmpsb and mov insb push out (bad) xor movsb inc lds lods sbb stos test pop cmpsb pop or stos (bad) sbb push jmp pop les pop adc push pusha push lock shrl in movsl jne out out lea data16 popf mov test imul stos mov int3 aas add enter das mov jo xlat cld add xchg (bad) gs add pop js xchg mov (bad) jl movsl jb data16 pshufw in mov pop mov jmp mov jmp into sbb leave cmc inc mov (bad) cmp push aaa lea stos outsl ret mov aaa push adc xchg loope (bad) ds pop sbb stos mov cmp out and inc testl inc (bad) ljmp jne das jb mov mov movsb adc adc sahf lea mov repz cmc lea loopne dec arpl roll pop push sbb ss add rep rolb dec lock jne test notb addr16 and lret sub (bad) adc or or fcmovb sahf and mov in sbb in mov jmp push cmpsb mov enter loop add mov ret imul mov loop enter pop data16 cltd push cmpsl (bad) or pop cmpsb daa inc bound rcll and cmpsb push sub pop imul pop js jb into cwtl push adc adc push aam and mov pusha outsl pop sub insl jle test jno mov mov pop pusha mov fcompl cs ret dec fsubrl mov iret adc push test pop mov push push pop dec add int3 sbb xor pop aas pop or or dec stc jmp (bad) xchg insl cmp out ss push jnp mov cmp (bad) cmp jbe in out and cwtl test in or pop cmp mov scas dec mov test jbe movsb jo mov xor pop mov sub mov adc jge push data16 xor out inc xor push xchg dec mov cli iret loope jp cwtl pop jb or jno in and jns iret xorl fsts and (bad) stc jg (bad) fcomp push sbb push dec arpl or fisttpl scas xchg sbb loope cmp enter popf or push xchg mov enter or xor adc jns jle or insl mov xorl mov lret std lcall inc jmp add lahf cmp pop hlt movsb divb fiadd push sub jns insb mov pushf iret movl leave xor xor xor pop into xchg fnstenv sbb lods xlat xor and or lret adc insb inc push fdivr aaa cmp push cli cmp int3 and and adc gs repnz aad rclb pop lret inc inc bound enter dec push jmp cmc cmp loop sbb mov addl mov outsl xchg inc xor mov mov adc out adc xchg repnz mov add jb stos das push adc bound sarb cmp pop xor xor adc cmp lret movsl jp mov jmp xor iret test lret rclb jns in jb jb sub sub ficom movsb imul rclb inc das rorb xchg vandpd jge leave ss call pop andl in mov xlat loopne jmp mov sbb inc insb mov sbb pop xchg sti clc sti cs inc fsub mov or mov insl (bad) icebp cltd pop mov dec xlat andl jle pop xor aam sbb (bad) jle pop cs test push cmpsb addr16 pop mov sarl js sbb std out clc dec faddp sbb mov pop lock sahf xor lds (bad) and cmp and lea jge add lea push mov jmp test xchg jo (bad) dec inc ret inc aad fmuls lea dec sahf ret inc mov pop inc cmpsl stc cmc dec sbb mov jg xor movsb mov adc mov xchg sbb mov push pop push imul add push outsl pop int3 sbb sub in imul mov sahf int3 lcall pop sti scas hlt js sbb push or mov cmp cmc mov ja pushl in mov mov call xor test cmpsl fisubrl push mov mov (bad) adc out and adc dec mov mov add mov mov and (bad) loopne outsb inc xchg jae jecxz,pt testl (bad) dec inc mov nop xor das inc es stos cltd insb lret pop repz daa cwtl mov inc mov pop out jmp int out test push in (bad) mov cmp fwait ja outsl test loopne cmp push (bad) int mov pusha mov addl mov iret fidivl andw and inc mov scas out insb int3 sub mov jae cmp xor sbb imul adc mov fisttpl insl enter and in pop and popa jnp (bad) notl sub push call dec xor mov insl nop daa aad sub mov inc sub pushf xchg xchg xchg cmpsb inc push rorl and shr jp stos xchg add mov roll push test sbb mov ret lock arpl sub push pusha inc inc scas adc lcall dec lods jb call lret cmc push mov fisttpll sbbl sbb insl (bad) shrl push dec or arpl (bad) jmp inc mov (bad) lret mov pop sub push lods inc mov pop or (bad) jns,pt jg (bad) lds xchg rcrb xor mov cwtl cmp xchg (bad) fnstsw aam or fisub sub and mov xchg sbb dec xchg sar adc sbb ds fidivrl mov imul ret dec add cmp icebp cmpb pop cmpsl cmp inc adc jnp push xlat sbb arpl out push fistpl outsl daa xchg pop aam push or or xchg pop inc push sbb repnz pop bound xchg ret sub fcmovnu jbe mov cmc ljmp xchg pop test dec xchg loop jns daa adc sbb pop pop (bad) lcall and stos (bad) imulb sbb pop subl dec sbb cmp cmp repz call insb mov nop imul mov mov hlt icebp repz push loop clc jb push mov mov cmpsl les pop and roll inc xchg imul mov lea aad cmc gs ds cmp adc hlt adc lahf mov mov mov fdivrp xchg push out mov (bad) push inc clc xor adc jecxz jmp add outsb pop ss aam xchg inc bound cmp push out add and jmp cmp popa ret mov pop or dec or xchg int or push mov movsl dec (bad) (bad) xchg mov jns or into ffreep out and nop jl and xor (bad) out insl mov push std bound and pushf cmp scas mov sub mov rol inc sbb add or xor clc cmpsb inc jnp adc adc ret insb jb ja test (bad) rcr sbb jle daa (bad) into xor int popf add aam inc add pop popa (bad) sbb xlat push fs cmp mov xor sbb cmc xor outsb fist in inc pop (bad) call xlat fisubr xchg mov sub push mov jp mov fucomip es lds (bad) pop jns xchg je fisubr xchg mov push icebp sub ljmp loop xor and (bad) adc cmp xor add sbb outsb push fld xor mov and add scas dec pop outsl jne inc mulb inc fisttp cltd push jmp outsb push insl aas shrl stc cmc cmc dec lea jne and in movsl or (bad) push loopne jmp mov dec xor jle fcoms cli jae mov push lods add (bad) icebp jmp insl sbb in js jecxz (bad) dec mulb mov mov mov repnz std cli mov ds dec arpl xchg push into rorl push inc jl stos ss scas push enter loop or data16 in daa aaa test pop jge dec ret mov in cmp gs arpl cmp pop aam push push js aam es insb jle dec sub inc sahf adc mov mov xor push push frstor sbb fsin lret sub pop xor pop test mov imul inc (bad) cmc push push (bad) loop xor arpl push fcoms lret icebp std cwtl pop dec fucom sub inc cmpb xchg cltd movsb cmp and push add sbb sbb inc mov movsl dec xor rcrl mov je jg or push (bad) repz cmpsb arpl push dec xor sahf or pop or (bad) mov leave inc loope xchg andb mov and out sbb sub fcmovnbe std xchg mov xchg dec (bad) rcrb loope shll push push xchg jb lock sbb mov mov insl pushf and mov mov adc test (bad) push xchg fwait mov mov adcl mov xor lret imul pop cmpsl loop mov add pop ja mov push push popf imul xchg ret pop pop xchg mov out outsb dec bound adc stc lds jecxz insl ja mov jl jecxz dec loopne aas jbe mov (bad) dec inc pop repnz aas or pop add jnp data16 add mov push fsubp sbb outsb pop js xchg je out mov sahf push rorl ljmp shrl cmp jbe int movsl adc iret xor cmp ja stos mov mov mov sbb cli inc xchg or sbb dec mov shrb push cmp mov dec add lock sub dec rolb out adc shr rcrl leave insb ljmp (bad) cs dec mov push aas mov ss jns movsb sahf shll jno add repz xor (bad) xor push adc lods imul jecxz inc adc lea push iret sub mov push rep sub inc jnp testb sarl fisttp in push jae outsb mov push das (bad) jnp push cmp fwait ljmp (bad) stc out sub push inc jl std call outsb inc and orb xchg xor pop sbb testl scas pop fs mov adc cvtps2pi add fmulp add add idivb out pop mov jle in (bad) in mov pop mov into movsl or lods mov rorl pop dec js sti adc xor jmp (bad) xchg xor sub lods push cmpsb jp dec sti adc aaa and out and das pop inc mov lock cmove adc jmp xor (bad) es jb mov push scas bound inc lcall fnstcw jne cwtl (bad) adc adc push addr16 pop js mov sbb movsl mov xlat (bad) cltd sti dec ficompl cmc xor ret sahf int3 call in lds inc fwait sub push aas clc stos xchg cld jbe out mov in movsl enter into cmp roll (bad) jbe sbb or ficomp pop les sti push push int leave and mov jne pop xor mov (bad) js insl bound xchg mov insb ljmp dec out and inc (bad) dec pop ljmp (bad) repnz fisub das pop enter pushf or xorb jnp ss test pop loope push push out pusha xchg clc int3 divl inc dec jg cltd je and cld ss mov xchg stc clc fsts shll lods push mov inc lds xlat and std outsb aam int3 out aaa scas or mov iret sub or and icebp xchg lds sbb push xchg (bad) xlat or xchg jecxz xor call call cmp jle dec pop lds pop push sarb mov cmp adc push addr16 push lods out mov lods int (bad) inc leave xor fistpll cmp gs outsl and jle mov mov cmp push inc popf xchg sbb xlat push xor stos loope in cmp icebp call inc adc adc daa xor daa jmp aas mov stos mov call inc or mov mov rorb mov xchg shll inc pop mov movsb repz push mov jge test out int dec jge mov pop sub jge imul mov lcall inc push (bad) loopne fiadd ds inc cmp push enter jne and mov sbb das pop or gs insl test push xchg (bad) cmpsb mull icebp scas shrl pop lret fs mov std jmp nop pusha out mov adc push lahf sub or add and mov outsl pop out lods fidivl sbb loopne dec cld pop mov out jo pop pop mov loope pop loopne jnp push xchg xor mov (bad) add mov cli cwtl popf ds push pop sbb loopne sbb mov test jae xor or cwtl out xor and jns aaa out cli test cmp cwtl jmp sub cmc jle cld lock push jbe test inc test loop mov fadd ds maskmovq divl or call push sbb sub mov or imul adc in js (bad) sahf aaa cmpsb cmc fadds sahf into pop mov sub in or mov xchg mov cmp stc sub out dec xchg fimul jbe mov jae mov jg xor loop fnop cltd rolb roll nop sub lea loopne aam mov cmp xor fwait daa mov push scas sub jae jns pop push xchg pop xor or mov mov lea pop sbb mov into gs clc dec xor call lcall popf imul pop mov sub push cli fiadd mov pop add sti (bad) call jae aaa adc js aaa pop mov enter movsl mov jne (bad) pop and scas hlt jnp mov and loop aaa xor imul shll and (bad) push stc lods aas xchg mov inc xor pop cmp mov inc shrl sub aad or cmc cmp cs inc arpl and mov mov adc dec stos int3 ds das mov or mov hlt or sub out out clc push lods aam jnp and je mov (bad) dec or lcall loop pop fsubl outsl ror aas aad xchg jp jns mov cmp xchg xor jl cwtl inc cmp jno mov mov cmpsb aad mov mov pop test addl scas aad add je or cmpsl iret int out pop inc or lret lahf or jl ljmp dec repz sbb pop jno push add ds lahf jmp pop and cmp shrl mov popa lret lcall aam cmc fwait push icebp in leave adc adc lcall out fisubl xor xchg sbb mov xchg (bad) adc cmp seto mov fldt ja adc push push pop lret mov inc (bad) ficompl jbe pop sti ds xor pop enter test mov inc sbb out sbb pop mov xchg rclb pop pop or push mov push dec sub stos cwtl lret rolb add rorb add call insb cmp fwait sbb or xor jbe icebp push (bad) mov faddl push dec mov xchg mov nop push dec int3 xor fwait mov ss outsb xchg ljmp add xchg (bad) pop cmc cli mov inc fnsave xor mov sbb in inc fwait iret jnp mov repz jno push and ficom jo xchg sbb add insl int mov leave dec test jo dec xor jb (bad) test arpl insb or push jecxz and pop push jecxz pusha jo int3 xchg into lahf dec mov lea xor (bad) cmc cmpb (bad) (bad) inc imul push popf xchg jmp cmpl shrb fildll cld mov push xor mov iret stos scas pop push mov orl (bad) adc loop inc xchg jp,pn test mov pop lods fidivl cmpsl sti aaa push iret leave in outsb jo push push jmp cmpsb mov cmc mov ret mov orl or test sti jnp dec js outsl (bad) icebp stc push jge jmp mov sbb out pop into mov aaa cmpsl sub cmpsl rolb arpl (bad) adc xchg idivb daa stos (bad) fs mov mov test cs rolb pop fistpl pop sbb xor fimull push xor gs mov cmp dec xor pusha cmp repnz mov pop sub sarb lret mov inc add xor adc jns and loopne push sub mov xchg out sbb inc mov pop jge int pop ja test rol cmpsb (bad) clc pop (bad) lahf inc xchg push das sub mov sbb sbb pop xchg ja hlt movsb lds sub ret cmp mov repz dec scas xor mov fdivs in aam sbb pop sarb pop ret pop arpl pop iret mov fidivl mov aam (bad) (bad) mov pop mov sub mov movsl in ds and cmp shrl inc addr16 and sbb fidivrl ljmp fnop or pop jnp mov cmp sub cmp ljmp add mov les jle xchg mov xor add in shufps mov in push outsb mov movsb data16 das in xchg icebp mov mov add xor sti or xor lcall mov stc mov push mov outsl mov ja cmp cmp pushf mov jbe repz push (bad) cmp lret dec cmp movhps imulb push jmp mov or popa outsl add scas outsl aas cmp fadd out inc imul mov xchg in push jo out movsl lcall ficompl pop rcrb adc pop imul test scas aas xlat mov push out pop fnstcw lods jge addr16 lret sbb call push adcl sbb cwtl xchg fwait aam (bad) rcr fidiv clc add ljmp push lods dec insb adc aam (bad) shr cmp in mov lret shrb inc jbe stc daa leave popf jns sub outsl xor mov in shrb adc push (bad) sub roll jl enter repz scas adc adc cmc mov add xchg test pop lods push aas xchg popa arpl enter and dec ret ret jnp test mov jl arpl pusha scas mov pushf push movsl cmpsl aam jg and push cmp mov int3 lret and dec sbb push sub dec sbb xchg cmp imul inc sub in pushf data16 (bad) jo fimul lods fs adc cmc inc dec cmp pop mov inc cs add rorb mov pop mov les push iret dec cmp rclb cmp pop rcll push sarl push adc mov enter mov sbb std push les mov int3 jl xchg ficomp cmpsb push ret shlb pushl pop iret push add test and xor cmpsl xchg hlt stos add adc cmc movsl and mov clc sbb stos and jb xchg es push add leave xchg lock mov mov (bad) mov (bad) jae sub arpl inc fsub dec sahf push loop jecxz mov stos add loop adc loope in in mov and js jnp scas test dec xchg and es ret cmp and (bad) out in adc clc es push ficom ss clc hlt sbb aad ss sub sub cwtl daa (bad) and xchg fstpl in mov or mov hlt push insb sahf xchg jl or shrl dec enter adc pop cmp jmp in xchg popa orl sub jecxz gs cmp imul sbb push inc mov jo fwait push rolb push jg sbb stc push sub scas jae xor lods and clc test lods addr16 enter subb sbb pop popf cmp or jo jns mov fwait lret mov call into hlt and add jp cmpsb or mov cmp aam jmp adc aaa ret mov stos (bad) adc push mov mov imul lret mov fmulp and ret sub jl inc lret cmp jg xchg mov dec rolb out adc les and xor xchg stos movsl (bad) out cmp (bad) shrb mov iret pop jno lcall xchg int adc or add insb popf cmovb out dec push cmpsb adc call adc adc fstps xor fldl dec push sub imul and pop repnz mov sub xlat test lret in fnstsw adc xchg roll pushf es call aam sbbl fs mov hlt jb jo pop cs xchg fs rorb daa and stos imul mov lds fs stc inc cmc in cmp pop imul scas movsb (bad) sarb and and jmp xchg in je and jo in pusha lea sub xor call orb sbb stos cmpsb pushf jmp das pop xlat aad or sahf cmc hlt (bad) cltd dec repz lods inc (bad) or popf sarl stos add sub add jmp testb daa lods mov mov push xorl mov push je iret out dec sarb in out xchg test pop bound (bad) insb subl and jecxz or stc or dec dec arpl and iret pop lcall mov outsl popf add in pushf push mov mov icebp hlt loop mov cmp call fsubl mov pop add sub (bad) das fs int3 inc mov jae es pushf out negb or add loopne outsl mov jmp adc push xor mov dec scas push bound stc loop js mov pushl arpl dec inc arpl rclb pop je add mov sub in cwtl xchg cs daa push pop imul pop ljmp call imul je mov ficom and popa dec in jns insb fbstp xor gs imul or lods gs xchg mov imul mov lahf inc call sarb cmp bound sub ja gs (bad) stos ficompl popf (bad) push dec xchg iret sub or mov add xchg lods sub mov mov (bad) (bad) outsb (bad) add das sub xor pop and aas add movsb sbb xchg sub stos (bad) out jnp mov mov ja jbe out cmpl add fwait mov dec iret loopne jmp ja mov in and inc xor cmp mov push sub in (bad) sbb das cwtl pop (bad) scas ret cmp sub mov jmp cmpsl or daa sbb dec (bad) sub and inc imul out pop jle or (bad) stos cwtl movsb (bad) and mov xor mov hlt sbb cmpsb decb adc mov imul add mov aad nop repnz stc inc (bad) push add (bad) mov rcll orb (bad) mov pop in dec fisub or mov xor push lods pushf fmul ljmp ljmp arpl xchg jno jns and das mov nop pop mov push fnsave scas inc cmpl or aaa pop imul cmovle loope mov push inc jno mov lods dec popf push sbb cmp out cltd popf sbb lea imul fsubrl inc cmp add aaa outsb push or or inc shrb jb in inc mov jmp test xchg mov push repz in arpl fwait ret mov mov aad mov inc mov push das mov arpl cltd mov cltd shrl fisubl dec pxor shl sbb gs mov insl imul and cld sbb mov lods mov add push add outsb inc rcrl add out insb into sub cli xchg ror dec add call lock js xor aas push dec je sub int3 push ss fadds mov xlat jl inc int sahf fimul inc inc in arpl inc test outsb jae movsb fiadd jo sti pop sub jecxz outsl mov push fucomip popa mov mov out jp mov test mov call loope inc sbbb in dec stos mov cmc movsl inc repz out dec lret icebp (bad) fidivl sub loope iret and sub mov in or pop mov cmp or adc in xchg int or and std inc ret (bad) adc ffreep or daa sbb xor or jecxz cmpsl sbb cs rorl cs inc aam fs mov dec sbb inc les mov popf loopne mov adc aaa inc cld shlb fisttp loopne add fcoml hlt mov add lcall data16 mov mov cmpsb mov mov push aaa or xchg frstor fldl sub icebp lock push mov mov mov sbb pop fimul nop jl hlt lret stc xchg popa sbb jecxz pop mov in or xchg ljmp mov mov push fwait pusha and imul inc xchg adc pop mov and and out inc outsb pop xchg adc add in rorl fadd sub aas fadds and movsb stos scas stos cmp bound or test imul push in frstor outsl pop jnp add pop loope sarb and mov fcomi mov and insb es stos pop sbb in and push scas xor je or mov cmp inc cltd pop out cmpsb xchg xchg loop jo loop mov ja popf jo pusha (bad) jecxz fadd or test outsb pop or fistpl in push and fadds mov lods insl or pusha lret jne dec xchg cmp stos jmp hlt mov shlb lahf add jno cld popa hlt push pop jnp pusha push cvtdq2ps andl or cmp rolb std cltd popf xor mov dec sbb in nop inc sub roll push xor arpl cwtl jae or clc xchg push cmpsl and cmpsl fisubr js pop pop repz sti xchg mov je inc sbb jge mov dec push ja pop test jne add sbb cmp nop or push js sahf mov xchg stos das jmp insl std lds push repnz or lea push aam popa jne stc lock cmc inc mov imul sub or bound jns lods clc imull cmp push xchg sbb and mov (bad) jo (bad) sahf jne mov imul (bad) xor sti push mov ss int3 idivl test fldenv add (bad) fidiv pop pop iret inc and adc stos xor clc cmpsb shll sbb out or lret sub arpl inc lods fimul jno rcl stos pop adc push xchg out rorb fcomps inc shrl jl push cmp stos fnstenv xchg mov push fs and xor rcrl fldl adc leave inc ret sbb xchg and enter xchg (bad) xor rcl (bad) (bad) jecxz xor jnp cld jmp (bad) sub lods loop mov and sti lahf fldenv mov incl pop sub push jp shlb cmc mov mov pop adc stos pop test lcall ljmp addps test cli push test jo fsub inc add test pop out add mov adc pusha xchg mov mov (bad) mov xchg iret repnz cwtl sub adc add or inc jl sbb aad cltd adc xchg into jnp jmp push sbb int3 fst fsubl xchg jl loop add xchg xchg pop aaa es ficompl fildll mov insl scas mov pop aas dec cltd fs (bad) repz repz (bad) enter jb push and into mov mov xor cwtl (bad) pushl pop mov or lods mov imul dec ljmp adc scas mulb push cmp cmp gs mov aaa push xchg mov cbtw mov jge js pop jae out loope xlat shrl xchg mov in or call jae test lea out inc subl mov out add repz in fildll mov cmc mov xchg ret movsb mov js int3 mov cli fist popa jb js dec nop and mov ds lock in jge pop dec test fwait ret ficom jno int3 mov xor (bad) ja icebp or cmpsl cmp lahf mov push dec lret mov test mov dec sub ja sbb test clc jg es arpl and ret push sbb out out call loop jns cs add (bad) jae ret and add mov orl cmp push cmp dec shll (bad) jle xlat mov in adc hlt test and push mov mov (bad) rcrb lret test ror or or and push cmpsb mov (bad) mov or pop mov jmp jbe mov das pop fcomp scas and call popa pop jp divb js push pop push andl movsb xlat movsl (bad) (bad) sub das xchg adc pop fcmovbe fdivl in loop mov sbb or mov jg cld sbb lods mov pop cld mov lds cltd out imul inc xchg ds jb sahf xchg ret or in push adc cmp mov pop rclb sbb lods out dec das mov loop mov cltd xchg sbb lret sti mov mov sahf insl fldcw cmp or fs sqrtps lock out scas mov xchg iret xchg jbe mov jne mov mov leave imul popf test js and scas xorb push add cmp cmpsl jns sbb sahf push jmp dec fcoms fldenv cmpsb jecxz and pop out sti mov mov ljmp lcall mov fpatan adc scas jmp xchg adc stos fwait insl mov sbb add (bad) outsb xchg mov dec sub xlat mov cli mov mov pop jecxz and lahf dec daa xchg jae mov xor aaa les mov mov xchg add icebp fmuls sbb inc pop pop push xor pop in popa mov stc fucomp add into fcmovne in xchg cmp pop and enter cli mov push lret rcrb xor outsl arpl jle pop out dec fbld push inc sbb inc inc mov inc (bad) std es repnz ret push lock insb cs aas js mov js xor sub aaa enter mov (bad) xor push inc insb jne cmp add lcall imul pop mov or and addb loope cmp movl popa in popf (bad) imul push xchg inc (bad) sub call inc mov sub popf mov aad cmp cmp mov in divl push push pushf fidiv in mov push in pushf cmc jecxz xor xlat push inc fadds sbb nop rorb lea (bad) mov mov insl mov mov lahf jb pop cmp xchg fsubr (bad) lret jno lods dec test push fadds or sub cmpsl sub jmp jp jp adc inc xchg xchg rolb mov insl test insl pop dec add cmp jne push push or in fstl movsl or js leave cltd bound idivl movsl sbb les in movsl push call cmpsb mov adc adc sbb inc repz inc das int3 sub cmp fidiv xor jge pop sub test xor shl arpl xchg mov and and aad and daa sub es aad push mov in mov cltd stos pop fstpt jecxz pusha sbb in mov orl mov adc mov sbb jmp enter jnp (bad) push jmp sbb jp iret (bad) (bad) dec adc (bad) js jmp data16 insl and push mov rcrb push insl outsb sarb sbb cmp push loopne ja movsl mov push pop mov mov dec push (bad) dec sub sub jl mov and subl xchg daa mov cmp int3 dec or loope addr16 cmp push push shr and mov xor mov test ds std fcmovu imul out insb xlat dec add mov incb xor jp lock gs cmpsb int3 push sti xchg mov es cmp inc lret or scas inc mov inc out aaa rcrl jnp cld (bad) stos jecxz lock pop xor dec pop jl push or fisub int scas push bound ja inc iret (bad) add inc bound maskmovq idivl jae ljmp call fwait xor dec or sub dec pand push int3 clc dec dec pusha inc mov addr16 addr16 adc adc xchg adc mov mov push mov add stos leave fiaddl mov jne andb cmp (bad) jl xor inc mov outsl or test mov insl jl jecxz jnp out jl mov sarl pop and push adc sub mov insl pop rcrb dec or xchg dec fst stc push sbb xlat out data16 mov cmpsb pop idivl xor or mov xor pop pop popf addb test lahf icebp cmp pop lcall mov cmp (bad) stc mov xor or and adcl mov dec pop sbbb and pop jno sub stos lret dec lret mov push cmp push add and xchg cmp insl pusha xor cmp mov lds andl pusha aas jns cltd mov aad ds mov test sub pop dec insb hlt xchg cmpsb push cmpsb jl ror iret (bad) cmc inc subl notb fdiv mov add dec push push dec shlb xlat mov in arpl sbb mov in push rorl mov or test mov jl dec xor sbb jo subl push add cltd push test lret es or sub xlat mov push pop js lods sbb pop xchg push or or lret movsb scas mov push xlat push lods xchg xor mov movsl pop lahf repnz mov sub icebp or xor adc ss sbb jmp or dec insb es lock jl mov adc mov enter add popf ret in fsts loop sub in pop sub add cmp fs and adc xchg xor test test mov or push leave dec test pop pop je lret push scas das jp add inc cmp and inc lods outsl sbb stos mov mov addr16 subb inc popa jge outsb jle (bad) into out sub xchg (bad) aaa cmp pop imul std pop in into test sub int3 sti sub cmc xor (bad) mov cmp pop ret divl add daa xchg xchg movsl push mov mov fwait pop shrl imul xor add xchg or adc fisub ret adc mov test xor in fnop mov outsl xchg cli icebp cmpsl bound xlat cmpsb test push outsl loop or mov jp or pop inc jnp ret cwtl xchg sub loope and xchg or jbe push leave mov adc ss jo orl jle mov push movsb cli add int3 add inc insl mov sbb push stc test dec insl movsl call pop testb mov in cli sbb leave popf std xor or xchg shrl movsb xchg inc outsb mov pop gs cmp lret ss lods test fmull into mov xor icebp jg add inc mov inc rcll outsl mov push inc movsb push and cmp je adc rep push lret jb aam inc lcall pop push or (bad) mov nop jno aad imul jnp mov xor (bad) xchg nop push xchg rorb xor hlt call inc repz aam fmuls cwtl arpl add ret leave ja inc cmpl xor daa sar ret sbb daa lret movsb movsb (bad) repz xchg xchg call push jl cwtl mov xor xor jge push or cmp cmc cmpsb adc push icebp dec in pop bound adc scas test es fucomip shlb fidiv fildl pop cli mov mov lods pop pop mov cmp (bad) rolb in mov in mov sbb test js xor adc mov aad xchg xchg sbb add rcll jge adc out add sbb pop nop or dec dec adc int3 cmc xchg or dec in lret loope inc repz mov loope cmp pop inc fimul pop outsl add lock xor pop in add mov cmp pop stc pop dec dec dec dec js pop push into insb sbb je mov inc cmp mov insb test add push xchg push dec test xor iret daa lahf sbb mov lock mov cmp cltd es les jno xchg popa xchg fldl imul push clc cmc clc data16 jb pop mov imul or rcrb repnz std out lods and xchg jns mov popf rcl roll mov pop xchg pop xchg mov mov pop dec lods mov iret ficoml inc sbb fisubrl leave out popa jo cltd cmpsl iret sub xchg nop jmp fistp fwait nop mov cmp popa iret or lods pop movsl (bad) lret inc cmpl dec push inc cmp loop add cmp pop mov dec fldl2t or xchg popf adc flds xchg out dec mov mov lods jecxz fs cld sbb add push adc sub xchg outsb mov pop in imul sub sub mov ja aam xchg xchg xor push (bad) stos push inc mov or xchg insl inc jne aad fidivl pushf and or fsubr pop add hlt or cmpl and arpl mov ds jno adc jg sbb inc mov mov add movsl pop ret mov or call push jnp loopne sub or push (bad) fstps in subl push cmp xor add xor sub push lahf lods jmp ss out in mov pusha mov push dec mov mov cmp pop mov cld fistl push jae call jl sbb sub insb and (bad) out jae aaa cmp pop clc jg mov in mov xchg or lahf verw addr16 or lahf push stos or adc mov sbb rorb xchg pop insl (bad) rol mov nop dec dec addr16 dec inc adc stos lahf jo fildl mov pop sub (bad) loope inc push popa ljmp or push cwtl lret test xor dec (bad) push rolb push fcmovnu inc sbb sbb inc and stos jg outsl adc scas sub xchg inc inc mulb lock test lcall jb mov inc add push std mov fwait dec cmp scas (bad) sub and outsb sbb les or pop scas add mov mov jl mov dec pop add decl adc add (bad) push clc jecxz out pop sub cmp push ljmp pop (bad) clc leave pushf lods push push or scas add pop mov mov loopne stos fnstsw push clc cmpsb push out sbb push mov fiaddl push je sub fildll cmpsb lds and xor jnp addr16 mov fbstp dec mov cli fs push das (bad) adc push mov push inc xorl js fcmovnbe arpl or aaa jg popa cmp mov lcall stos data16 mov ret mov movsl les jmp sbb lds mov daa ss ret sahf cmp dec mov adc or test nop jle mov jp lods lcall xchg mov test add lret jp inc mov out (bad) xchg into mov mov cmp mov jns or mov sar adc jae dec mov jnp ljmp and loopne cmp ret in xchg (bad) popa dec and sbb lahf sub out int test out or or pop aam test pop pop pop sbb mov iret pushf xor in cli enter mov das jg test adc lds out jle repz scas nop inc xor or fstps add insb in push lcall fwait dec test and (bad) in in int3 out in and or dec push das jo lods push lcall pop scas fabs lock jle test pop mov pop out std jl (bad) dec fisubrl jae sub icebp lret dec loopne and out dec into lret dec pop jmp dec into jo movb push push (bad) and scas and cwtl and call cmc cmp pop inc ljmp push test push dec jo (bad) aas iret jl ljmp data16 aam int lods aad out aaa movsl jo mov daa inc in push mov mov imul les push ror out or dec push (bad) cmp pop mov push pop mov int3 jg test (bad) sbb inc stos mov lcall mov or push mov pop sub lock jnp pop lret into int3 fstp dec js dec or imul lcall or outsl cmp add and sub enter sub push stc mov adc mov fbstp popf (bad) sub or cmp mov push call subl lods mov push in test pushf lea jle call mov std andl into push psraw mov mov jp or in xchg outsl jp push in mov mov ret push push fisttpl (bad) push repnz cld push pop inc popa es push ss push repz inc dec sub mov sbb fcomi jle stc fsqrt test mov or pop xchg mov jle sarb ljmp sahf out mov daa dec cmpsl cmp adc fisttpl (bad) dec outsb xchg cmp lret mov (bad) jnp jp xor lahf push push repnz test pusha sub ja inc ds test jecxz xor lods test pop testb stos not pop cmc imul ja decb lret mov push es lahf (bad) std dec sub mov loop add in jl dec push jg add test dec xchg pop out inc cmp and mov std movl dec stc sub (bad) sub jle stos sbb shll pop fwait inc xchg jle sbb sbb (bad) add mov fs scas and or dec out sub scas xor fisubr add or push lret test adc leave insb loope xlat pop ss das std push test aad cli push xchg adc sub dec js pop (bad) jmp mov and and sbbl jnp cli clc pop int3 out fwait clc dec cmpsl lahf jge xor fwait push in mov sbb cwtl mov sbb push sub push cmc daa repnz cmp mov sbb xor rol push xchg inc mov jl add add shll rorb pop lcall sub sub dec shrb insl movsb push jp jle mov mov out mov fcmove in int fdivl lods dec jno cmp rorb (bad) mov repnz lret fsts pop pop testb (bad) pop loopne or jge inc pop call add pop push insb loop push mov cmp test je inc fisttp mov enter xchg xor dec xor cmpsb ficoml in std or ret jo push jne add fcmovbe loopne cli inc sbb and mov mov iret (bad) mov or mov xchg sbb cmpl adcl jl (bad) cwtl div adc int inc fistpl mov and mov roll hlt xor jge roll test pop pop sub adc stos sub pop leave (bad) jl lea flds insb call sub fs or mov sahf btr (bad) jno ljmp jnp mov sub cmp sbb jp pop mov mov sarl outsl add mov call popf rorl dec mov test or std stos jecxz cmpsl mov sbb out push ss inc je cmp jg cmpsl pop xchg fdivl fsubl mov cmp cli ja cmp inc xchg arpl (bad) jno xchg pop insb push das in cltd jg,pn adc loop outsb popf mov popf lcall in jb inc enter jno enter lcall test inc loop pop mov sub popa fstps push xchg fimul pop enter inc ds lcall int3 mov (bad) xlat nop fiadd test jp push sbb sub mov sti inc fstpt stc mov xchg je icebp and cwtl iret or fscale stos out inc mov cmp aad xchg inc dec and test pop movsb dec mov outsb sub cmp xlat adc (bad) push jmp sbb lds mov fisttpl inc imul stos xchg cltd dec bound mov mov cmp test mov aas sub popl movsw das sub jae in push pop push test lret mov and inc and nop (bad) pop nop jmp iret mov and scas std and inc and jnp xchg scas adc push ficoml xchg mov adc (bad) inc xchg sahf frstor arpl ss push icebp cwtl pop push mov call test xchg bound (bad) out data16 dec sub push mov lcall or lods in pop mov mov push sub dec imulb fbstp adc jne or lods inc stc loope fs sti and aas inc add sbb jmp shll je mov dec add pop repz sub adc movsl sahf or daa jle shr (bad) sub repnz test mov or sbb add mov sti add neg mov pop (bad) xor mov jg jns andl and and andl mov mov loopne mov jae,pn jp xchg dec lea loopne rolb mov ficomp das aaa mov cmpb mov dec loop aam mov cmp scas imul jp ljmp jo cmp jp jg lret jne jecxz out and movsb inc movsb inc jne movsb add add adc jns pop iret imul xchg repz jl cld add or cmpsl push daa push nop aam out xor insb out dec and pop jl mov adc out inc mov jb xchg lret test jge (bad) jne (bad) gs sub mov xchg cmp lcall inc lock dec sbb fs fisub fimull cli pop mull xchg out jns insb mov add pop lret pop and inc pop loope scas call sahf sarb out and jno outsl idivl adc mov leave ja jb ja in mov arpl addl add jae mov rorb bound dec hlt popf xor cli cwtl xor clc lods mov and aaa xor push insb lock xor dec adc or clc sub outsb out lods dec cmp xchg sahf mov cmp mov cmp data16 rep fildll popl mov sbb lock scas xchg mov ds mov push cltd mov or dec lds pop pop add jg cmp and inc dec das roll test mov sahf in mov lret and test mov sub adc and sub lods insb xchg dec lret clc push adc and stos test out leave fbstp cs insb out fnstsw fstpt dec or add mov or sub stos nop sub (bad) fisttpl pop push or fldt lea mov mov fwait cli divl aad jle in stos and push pushf mov pop push in mov test xchg lods lcall sub or mov das sub scas cmpsb das pop bound lcall mov inc out sti add jb enter push cld jecxz or (bad) or insb push data16 jecxz sbb ret es cwtl inc (bad) push call mov pushf (bad) insb repnz iret and fisubrl es pop sbb insl scas orl inc push jnp out and pop insb push repz stc xchg xor into (bad) inc sub scas mov loopne into lods in cmp iret mov leave push cmpsb lock mov pop fs push in sti add xchg pop push mull jle out inc adc mov mov jae mov in sbb mov inc inc or pop jl adc jmp cmp mov pop ja and ss mov add push or scas jmp jo mov gs mov pop fcmovbe outsl sti mov outsb jg lods jno fld and jl mov dec inc mov jp add inc xchg mov xchg inc xchg push xor test pusha in xchg lods push xchg imul cmc bound out out call xor adc in cmpb (bad) test ja pushf lret je jns dec gs or lods sub sahf jb sub mov popf xor jge or mov mov jge loope dec (bad) mov out mov out mov jmp mov mov mov jmp xchg ss add mov dec cmp push sbb sub dec outsb mov cwtl ret mov jl push into jo mov sub imul imul inc jno sbb xor xor cltd or push xchg idivl dec add xor loop or mov int pushf mov and lahf xchg (bad) pop and cmc xor jl lds and nop loope shrl mov call xor cs jo mov sbb je shlb aaa ret mov and pop push loope loope aaa mov cwtl dec pushf mov cmp adc push push out fcmovu (bad) sbb jmp imul test mov fwait daa and dec mov adc (bad) icebp mov push fcmovnb or mov cmc and xchg (bad) popa addr16 out jno jp icebp cli addr16 (bad) movsl sahf add roll inc lcall cmp or jecxz jg loopne mov andl mov pop mov pop cmc in sbb es int xor mov pop leave jbe,pn lret pop jmp cld rcrb push test out jp jbe xchg ret adc xor jne fiaddl xchg sub pop int rolb call mov sbb das sahf outsl mov testl (bad) jo pop mov adcl dec or push sti repnz mov pop push (bad) ds mov mov imul loopne fidivl mov (bad) jp mov lds sub jmp in movsb jge iret inc mov sbb int3 std pop mov push pop jmp arpl mov ficom lcall xchg dec dec sub push pop test (bad) fimul shlb ss popa add cmpsl jp icebp add cmpb jne mov push lahf int xchg adc push and (bad) fs fcompl out mov sub push inc mov icebp lds in inc add and out pushf addr16 shl pop in stos rol inc sub test (bad) mov jmp sahf fldcw mov int jno push ss inc jno cmp push inc xchg lods loopne add scas popa mov aas shrl or dec mov lret xor adc jae in push sbb mov xchg arpl ss iret aas sarb jl jne lcall sub mov iret pop mov lds (bad) push cmpsl mov jp ds aaa mov gs scas or cs or into mov (bad) push or push mov xor xor shr rorl iret (bad) xchg orl repz jne mov xor fldl push cmp cmp jmp dec and aas dec sub repnz jge in repz adcl pop repnz notl (bad) loop dec test mov addr16 adc mov push mov or mov inc lods sub jns stos imul pop dec xor add sbb or bound push fcompl out lods pop dec inc lods sub jge,pn push mov jp mov mov cmc mov cltd adc lods lcall stc push (bad) in sahf shrb movsl adc mov xlat push sbb sbb xchg sbb negl sbb inc orb test cmc push scas outsb or and (bad) (bad) in sub sbb mov (bad) push inc daa push clc xlat in mov mov xor mov negb js es ds xor sub leave scas fidivrl sbb jno out clc push pop jecxz adc jne xlat ret push dec jecxz in in pop mov cmpsb out dec and (bad) cld (bad) in or sub mov xor test push mov jne lret sbb (bad) mov dec test shlb repz aaa movsl iret outsb leave cmpsb jae movsb aam imul (bad) loopne sub loopne in cmp out jg (bad) pop adc adc cmp mov or jbe aam add pop pop aam mov nop cld xor clc sbb and adc dec cltd mov ss cmp and rcrl (bad) lret xchg jae sbb lods xor popf mov lods (bad) insl xchg repz (bad) jo adc dec mov jecxz add xchg fcoml leave ss orb popf aam loope sub adc lock gs jb stc adc sub or clc pop sti ja cmpsb pop cwtl rorb pushf popa lret ljmp or pop rorb xchg mov ljmp mov (bad) mov aaa jg xchg add data16 push into loopne pop sub in les in pop jmp icebp xor xchg clc cwtl cmpsl mov jns sbb mov lret mov mov push add gs stos dec nop or mov sub leave jg mov and mov inc sarb mov add dec into sahf push (bad) or fucomp cld mov mov test bound std cmp clc cmp push ret pop sbb sub add add out sub pop (bad) cmp push les aas mov fiadd adc jns xchg ficompl mov adc dec push jnp or mov in fwait (bad) test mov ss pop mov inc jl sub nop test lock cmc roll les inc cmp test jno mov jb outsb pop xchg push jge stos dec test jne add leave ds mov mov xlat aad mov mov imull jae jle adc xor dec sbb scas addr16 mov stos xchg dec test add sub dec outsl ljmp adc hlt mov sbb inc lahf popa data16 popa test mov loop jb push dec in sbb dec hlt push fldl inc subl inc (bad) movsb stos sub jg pop hlt mov pusha ret pop gs pop fcompl std push mov cli roll dec repnz test inc lret mov xor movsl pop or cmpsl mov sbb lret pop ja (bad) outsb adc push aam xor mov in or jb and clc cltd das mov xchg cld sti xor daa dec test mov adc ss and cmc dec ljmp xchg adc push jnp mov add pop sbbb push call push xchg outsb jmp insl pop xchg pop js (bad) hlt out dec cmp dec adc ss dec push imull je mov outsl pop inc or std inc in jg cltd pushf mov sub decb scas je add insb (bad) mov cmc lock mov das xchg and fmuls lret scas push xchg sbb cmc in out repnz je sbb sub ljmp lret adc inc xchg shrb pop pop out sbb (bad) xchg mov (bad) xor das out push inc popa mov fs popa mov fidivrl movsl clc push cs jno mov divps clc jecxz inc mov push xor lret dec in pop out divl mov scas rclb xlat dec or outsb lcall adc jns cmpsl mov jmp push cmp iret jp cmp inc pop jb and cmp cs in or (bad) xor cmp jle or inc js or rcrb or push jle pop sub add sbb push sahf lret cwtl mov fisub movb arpl xorl inc test mov mov shl out sti aaa loopne push jle inc push loopne fcompl sub add jb fmuls gs dec mov out fidiv fsubs cmc hlt adc repz and mov and add ret cmp lahf ss loop ret add std sub int jl gs iret lods repz das xor scas lahf add xor pop jl jp ret aas pop add push or (bad) dec or dec movsb aaa das stc mov mov aaa aaa (bad) jge dec dec mov and and fs xor xlat (bad) je ljmp inc dec clc push push lods ljmp jle sub shlb incb clc mov jmp jo,pt test hlt adc mov subb and rclb sbb test cmp jbe push jg (bad) jno cs mov fwait cmp fdivl fisttpll xor test lock jno and adc dec xor js sbb lahf fimul je cmpsl add dec orb xor add negb das insl jg inc inc push and aaa popf repnz and adc mov pop push xlat aaa (bad) (bad) (bad) and sbb adc cmp and les push sahf push pop mov dec mov andl or popf cmp sbb cwtl ds insb (bad) bnd shlb push or std mov cmp adc inc hlt or mov cmpl mov push cmp dec or mov in cmp out repnz clc push (bad) out jne mov inc sub test jle or repz adc mov ljmp scas jl stos movsl jmp add out repnz push inc xor xor adc shrb lock cmp pushf mov hlt cmp cmc (bad) xchg sarl (bad) sti push mov loopne cwtl add cmp push das lds (bad) xor jb mov sbb pop pusha xchg call loop adc call gs rcl mov stc aaa push and push inc call jge dec pop mov in cmp mull or fwait pop dec jae loope into inc cmp pop lret (bad) inc and jmp loope or pop outsl loope pop xor repz jg out test and mov outsl repnz jecxz and jp lret icebp scas sbbl jl,pn sbb scas cwtl hlt sbb insl scas cmp scas les rol jle mov and push xor cmc lret in gs dec sub jne jnp bound push mov push arpl dec hlt cmp dec pop xchg or mov jnp pop and xor lods pusha rcl cmp out sbb xor sbb jg stos lods das push jns jb adc stos repz sub xchg lods fwait adc pop mov jnp jne xor ret add insl stos fbstp cmp and jecxz inc (bad) fiadd shr (bad) cmpsl flds popa and cltd nop imul sub mov daa push xchg xor sbb daa xor loopne jecxz sarl fwait cmp push aaa ljmp (bad) jle adc test and xchg xchg sarl push arpl inc negl mov adc xchg popa iret aaa fisttpl test into in xchg mov dec shrb fidivr insb mov sbb dec or fs int3 pusha jg and les jmp fbld xchg movsl hlt movsb gs push and mov or mov cmpsl sbb (bad) sbb pop test or imul int3 jb sbb cmpsl movsb frndint push repnz pop (bad) cmp mov adc fwait push in jmp loope sbb inc stc inc cmc movsl std (bad) cmp push movsb (bad) mov jnp and inc and mov mov lds mov int jge std lock mov aas negl mov jno xchg lods test aam into pop sub sarl lods mov loope std push orb add cmpsl add sub cmp incl les lods hlt mov xchg mov dec outsb pop dec inc cmp add mov add push mov sub ret jge sahf pop sarl push test jecxz pop add mov test xchg jnp pop add and adc mov adc mov ret pop sbb pop pop dec add jmp mov lds pushf jmp lods (bad) test out mov mov rolb inc xchg mov push out scas inc dec outsb iret sbb js js cli stos fmulp cmp (bad) pop or dec outsb mov aam or jbe jl cmp or sbb ficompl in xchg inc add add jecxz xchg pushf mov sbb repnz ret ret clc mov repz stc str mov sbb addr16 mov sbb (bad) mov scas adc xlat and mulb add je sahf xchg jb fsts cmpsb loopne (bad) decl pop mov ss sarb insb shrb add (bad) scas xchg inc xchg je jg idiv cmp rcl sti test cmp and insl addr16 adc into dec cwtl mov xlat andl mov push lea jo popa aad rcll jge leave push mov adc xor and nop jecxz (bad) lds mov pop stc shl sbb aas push daa push mov (bad) fisttpl (bad) mov mov xchg rorb aam imul jns or psrad dec or stos or adc lret dec mov lds pop sbb mov pop push cmc nop xor aam loopne jle std sub pushf add mov mov sub jmp lret dec bound hlt addb movsb xor cmp push pop mov stos out out xor iret loopne pop mov pusha push dec cwtl movsl sub test dec jnp mov enter sbbb in mov mov rorb pop push xchg push mov push test gs sub add (bad) cltd ret push mov push mov js inc sub mov andps mov loop sti xlat xchg xor pop cmp cmp testl lock push sub leave pushf ja adc cmc jmp cmp out mov es mov adc mov cmp inc out arpl test in mov cmp inc mov push mov xlat (bad) jmp jge imul cmpsl sub addr16 inc adc sbb fwait add int3 add into mov call mov push adc jmp push scas movsb fwait in cld push sub jl test cmpsb jecxz ret fcoml and lret jae pop jg jne push fucom test push jp,pt loopne (bad) pop push test pusha scas sub pop adc cwtl lods mov mov cmpl sbb dec fisttp cmp mov (bad) (bad) jp push sahf (bad) sarl mov pop std or cmp mov mov jmp jmp lock (bad) sub iret test jae mov nop arpl scas mov jecxz sub das mov xchg push pushf aad mull adc outsb push xchg lahf out test fs faddp adc ret lahf xor or pop xchg sbb int3 rolb rcll and adc or sbbb orb lock lcall add inc xchg lods enter ret dec ja xchg lret mov inc mov cwtl movsb xor jp stos xchg xor rcrl lods cltd insl cmp jmp jle push jnp jne fwait or mov leave or rclb xor jle jo pop fwait dec rcrb sub cmp pop inc stos mov mov bound lds adc sub pop popf lods repnz out dec xchg lret jge pop call jecxz fiadd outsb xchg xchg mov and call in or cmc or (bad) icebp pop fadds sbb xor dec and dec or cli inc xor add dec and pop adc push xchg loop aam cld sbb cmc movsl sub enter and cmp fsub mov out mov cmp and add loope (bad) nop jecxz cmp adc and push cld sub xor push xchg mov push shl jne dec mov sbb test fwait lds sbb xor stos jl cmp repnz bound loope push jp jecxz xchg push adc pop add push test test add inc hlt dec xchg outsl (bad) cmp cld cmp in cmpl lds aam lods repnz inc lahf mov inc xor jo pop jne or outsl cld xchg dec adc xchg out mov (bad) hlt call (bad) out mov xor ret jle imull (bad) (bad) shrb inc push gs pushf push bound sub xchg (bad) mov push hlt cmp jns xor in jge sub xchg push mov or stc or das or jae js (bad) repz mov mov outsl ja sbbl js lea push cmc mov sbb out push cltd mov popa xchg mov xchg cwtl mov je (bad) mov sbb imul test xchg pop (bad) dec out jecxz insb mov imul test insl mov adc fsubs mov iret mov fdivr out pop push jg dec xor dec dec cmc jne ja mov movsl (bad) push and test pop in jge outsl xchg call ret stc test or repnz fisubrl in jae fs mov cmp nop add or sti cmp dec jle (bad) loope je divb cmp scas loop mov xchg push js push fdivrp mov cwtl pop adc xorl clc fsub and xchg mov jl add dec sbb xchg data16 test adc dec iret lret ljmp inc jge sbb pushf gs sti dec mov (bad) dec ljmp xor pcmpgtd sbb inc cmp cmp hlt push push push shlb jne,pt fcmovu jl and dec fsubs fist lret and lcall jae fcomps sub std cmp rcrb xlat sub es outsb inc push loopne rep shl cli xchg jecxz rcrb xor sub ds sbb dec push fwait mov in mov or jmp mov xor mov lods sbb neg ret shr xchg mov shlb xor and jl adc mov ss mov jmp push add (bad) movsb add shl nop sub int3 push dec add jmp push insl loop (bad) aad inc int3 cmp push or jbe mov fisttp gs dec inc repz ss add mov imul cmp test (bad) lock adcl and jb xchg lods mov and sbb repz mov pusha and add nop add les loop add mov arpl dec mov dec pop fisttp scas insb (bad) dec sub xchg in pop popa jp cmc jae ds call cs mov mov out push out pop and jns dec ret xchg roll pop (bad) inc xchg xor std jno bswap xor sub xor (bad) insb inc stos mov jo loop lods jl shlb fwait (bad) sub insb lods aam lcall and aam fwait adc jnp pusha cmp jmp and imul leave pop fs push in pop inc ret or sbb dec shrl aas cmp dec cli in xchg stos fs jns flds and outsb dec int3 jl leave inc sbb out repnz xchg jle imul insb fdivl imul movsl xchg stc dec pop mov jp imul sub jmp loopne insl cli std (bad) ret popf sub cmp (bad) ret sub mov mov and and xchg mov add mov int mov bound cmp cmp add (bad) test aaa xchg scas xchg rclb test es jno dec lock inc cli mov leave movsl test fadds dec addr16 popa mov inc ljmp sbb enter xchg sub fidivrl rcrl mov cltd (bad) mov inc sbb jmp adc aaa ja (bad) xchg daa and push (bad) (bad) sbb mov loop xlat daa mov testb mov xor inc xor in pop mov add xorl mov mov cwtl in or mov popa mov dec push in test mov ret stc xorl stos clc or ret mov inc add jns push decl cmp mov cmc sahf addb dec ret pop (bad) xchg outsb adc jae adc scas push inc mov cmp clc nop sub jo cmp cmpsb mov fdivrs (bad) push insl xchg jmp (bad) xlat or cmp sbb fistl push icebp cld stos sbb jns fdivl rcll test push cmp nop and xchg mov aaa mov stos inc pop leave out rcrb subl xor and or sub mov dec int3 xchg (bad) lret inc ret push dec pop inc mov sub outsb jo sbbl push jmp popf sub sbb icebp repnz cli ja scas fnstenv sbb hlt aaa test inc fdivrs insl test icebp add xor (bad) mov and rolb push jb xor inc mov rcrl pop pushf pop push inc inc adc pop dec lcall dec mov mov ljmp test cli jns hlt and or mov loopne popf mov loopne add test cmp rcrl adc jo push sti insl test iret hlt sub imul and sbb push mov mov xchg dec iret mov cmp dec cmp movsb and out (bad) xor in test icebp leave cmp cmp ds stos decl in xchg adc fsubl fs push xor dec mov scas mov mov loopne jecxz add mov arpl mov sti sub push into orb sahf or imul push fdecstp inc or lods xchg dec call mov mov xchg dec jecxz das or mov jp xchg cld jbe jmp divb xor shrb xchg pop insb test sti stc jno push sahf xor sub mov xchg adc lods dec inc xchg push cmp ss push lea fisubl or adc mull mov cwtl addb mov shrb mov enter pop and daa inc inc inc xor push in jno sub lock mov cmp push sbb es mulb ss sbb jo adc push lahf dec pop stos jno sar inc xchg mov mov pop jae insl js add xchg dec pusha (bad) hlt out insl rclb xchg inc xchg xchg mov cmp inc jg and cmpsb jae mov in push das jne repnz jmp inc add xor movsb les push xchg pop or jae data16 adc hlt sub add push push fmuls stos mov popa xchg jl mov cmp ljmp inc mov scas lret sub addr16 fsubrs adc fs pop inc repnz (bad) call jge je and in dec dec outsl (bad) aas adc xchg or (bad) dec hlt lcall aam push inc scas pop inc xorl and ds adc jmp sarb icebp or mov xor pop aaa xorl sbb inc insl mov pop test int xchg cmpsl cmp xchg fldcw jge arpl mov sub ret inc sub lcall hlt inc stc imul jno loope int lcall in dec test stos mov push add (bad) inc arpl cmpsb sahf mov xchg mov dec pop fmull imull mov out hlt mov jge sub jns lds pop dec in dec cmp aas inc js add loop dec jecxz pop cltd xor call (bad) stos inc inc outsl xlat sbb cld and insl sahf imul ficom pop addl inc daa pop push ljmp mov xlat or mov dec (bad) sbb pop mov iret iret icebp lret jo mov mov in or dec and movsb pusha mov dec out fwait stos sbb mov lret aas test shrb cmp (bad) call jnp (bad) sahf xchg cltd sbbl aam add add idivb out (bad) out jle sarb pop fcom mov jne bound stos or movsb xor sbb or push int xchg (bad) stc and lea cmp push out push push jmp (bad) in ret or inc xlat or sbb fsubr push pop cltd and aad jle scas lcall jbe xchg dec mov pop xchg lock ret std push cld inc call xor adc inc jecxz fisubr call dec and fwait inc std into adc xchg and hlt aas adc sub in xchg clc or lds out dec and iret out (bad) push mov ja (bad) adc inc push fdivrs popf xchg in outsl (bad) mov std mov popa dec frstor pop mov sbb pop enter jne push movsb movsl or fcompl jmp cmp cmp lret jmp or sahf xchg sbb popa adc cmp or adc adc mov jae add push xchg pop in xor into or sbb jae (bad) imull outsl inc jae add call adc cmp add push cmp int3 sahf cli scas jge lret or cs pop cmp outsb sbb push mov adc push pop outsl mov inc aas and mov jg xchg inc in test jl mov dec pop rorb pop std ljmp and sbb sarb sub ficompl pop dec stc into pop gs in nop jbe lcall push lea jecxz insl mov inc xchg or mov mov out xchg cmp push jp adc sbb arpl inc push loope aas jnp inc pusha ret insb sahf jne jbe cld das test mov scas int3 mov inc xchg mov int3 or call outsl or mov cmpsb dec hlt leave jge inc push xlat mov jmp loop imul cmp mov jecxz cs mov lret pop loopne in popf jb (bad) push pushf ror jle push mov imul popf jp mulb inc lea ret xchg pop bound inc xchg movsb jo pop fisttpl sbb sub cmp xor loop dec test inc push lods fwait mov shrl xchg mov es xchg ljmp fwait pusha jbe jae jne jnp mov and sbb dec adc xor add jae or out adc sahf mov fisubr loop fsubr xor (bad) xchg xchg xor outsb xor movsb pop enter fs lods cmpsl nop test push pop cmp repnz das jmp lahf mov movsb jns stos stos sbb pop stos int3 sti fcoms aam sub cmp icebp (bad) in inc lods std mov xchg fbstp inc popf bound das cwtl cltd push xor mov jae addb scas lret sub push aas test sbb enter cmpl gs or enter test sti xorl pop adc int3 inc mov ss in mov inc push mov jno cmpb add testl dec (bad) push adc dec push mov push push in cld dec inc fucomp inc jnp add lods ret fcompl out jg dec xlat inc adc jbe rorl movsb in lds je pusha sub jle jae,pn insl mov testb push jno pop pop push push ljmp sbb add pop push xchg movsl dec aad mov or cmpsl movsl pop inc fcomi call pop lahf xchg sbb xchg loope lock ja (bad) dec imul xchg inc stc jp in andl push xor mov sub and adc mov jge incb ss adc loop pushf jbe mov enter push movsb out pop rorb fiaddl aad adc xchg js adc pop push nop andb adc jo mov mov testb repnz cmp popf ja xchg (bad) mov xchg pushf xchg sub sbb pop inc mov (bad) dec sub push mov shrl int3 mov jge pop out pop xchg pop mov outsb iret js loope cli jmp cli jns (bad) pop nop mov outsl or test aad adc add sbb out popf cmp xchg addr16 dec mov roll pop jno and xor inc add jno mov pop loopne cmpsb (bad) lcall jle idivl cwtl sub in push repnz push outsl sub (bad) or cmpl stos incb pushf inc lea into scas pop jo xor fidivr pop mov xchg dec ret and loopne mov sahf sahf mov inc pop pusha xchg lret adc aaa mov fs movsb xchg adc stc jg loop mov push mov mov xchg stos test sbb cmp lock sub in cwtl and mov cmc push push sub repnz js jg mov jmp lods push ret or in or test rcrl les sbb out pop test add mov jo (bad) int fs xor mov in push popf sahf fstpl push push mov lret dec cmp sbb cmp xchg mov scas and jp mov fdivs dec in cld fnop mov adc cmp loope mov xchg sub inc insb adc mov add adc or mov add pusha dec jge out dec outsb loope or repnz cld negb imul repnz xlat pop gs stos mov (bad) cmp adc scas scas orl mov lret loopne test dec xor (bad) jne and xchg fadds and mov daa jb mov pop repz push cli mov xchg cmpsl lds push add repz rolb (bad) adc leave loop push jne mov pusha inc cs fsubrl pop and jmp int add mov inc js fdivl mov sahf es xchg lds jl aas mov inc (bad) pop int test mov add loopne and movsb hlt xchg stos test mov sarb lods dec orl test jle xchg int3 stc xor xchg dec xor mov inc pop and jb aaa ss les (bad) incl and pop push aad loope lds in es jp js shll and sbb cmp push cmc leave ljmp and push repz lock call pop ja sub mov mulb aaa add mov stc and (bad) mov das inc and out dec repz mov xchg dec mov inc pop testb pop lret sub lea out mov stos divl cli (bad) xchg sub sub inc jns xor fist movsb test mov add xchg test push and mov lock fnstsw mov adc nop sub cmpsl inc mov mov push push sbb sub addr16 mov adc cltd jp sbb xor mov push cs lods xchg dec jbe jecxz push pushf std (bad) out mov xchg out or out mov cltd jo,pn mov sub add lcall mov mov sub das and inc in std (bad) adc subb jae mov sub mov jle jnp out add clc jmp add xor sahf jp lahf push sbb lret incb jb ljmp out xchg dec andl cmp (bad) (bad) mov and fabs cmp sub xchg cmp loop xchg sub inc mov xor mov push and sbb cmp stc decb repnz mov aam sbb aam sub dec cmp imul add fwait int3 outsb sysret push lea (bad) loop aas (bad) stos jne lock xor movsl movsl push push rcr shrb fdivr daa or fcmovb dec dec lahf movsl fsubs mov mov std jns mov js dec inc leave popa add and adc push inc in xchg pushl or rcrb je mov arpl add movsl inc sub inc adc ret jne add dec pop cld imul test arpl lcall jb cmp cmp (bad) sahf xchg (bad) xchg mov cmp xchg push int3 mov faddl inc mov lret (bad) jno inc push mov mov in aam jmpw divl push cli push pop daa jo arpl loope adc lret insb pusha jge stc mov adc sub data16 cmpsl xchg pop mov push int3 inc fcmovu mov (bad) ret push jge cli mov shrb int cld add adc mov pop xchg out pop dec inc inc jmp movsb dec mov mov xchg in xchg xchg mov lea stos jmp inc mov (bad) out cmp imull lea sub iret ljmp mov xchg arpl jecxz adcl outsl and pop insl das leave std (bad) push repnz pop mov sbb ss mov jnp push jb xchg inc cltd repz add (bad) mov inc lock mov pop loop test pushf mov jo ja cltd mov dec outsl (bad) push lods cmp jno in addr16 push ret inc jle lahf inc pop jns aam dec dec fmuls inc repz jl daa cmp sub pop scas rcrl mov or out push js jl jl mov pop jbe orl fsts js sub (bad) push mov shrb xchg cmpsl mul mov sbb fidivr xor xchg mov mov inc outsb sub lret lret std jo shl stos addr16 lahf scas shlb adc jae int3 xor cwtl or insl jns mov xchg xchg cli mov nop notl sub pop ret pop jne push xchg mov in or aad cmc loopne fstps cmpl and and fcmovnbe (bad) cmp (bad) divb hlt or lods inc lahf mov ss or jle and sub jl cltd xor fsubrl lds fs add stos lahf data16 inc call mov sti (bad) xor pop mov push cli lods bound xchg ljmp (bad) push pop push inc loop jns decl mov rclb sub and mov in sbb adc lds or xchg fstpl or test test mov lds push frstor mov pusha lods es scas lahf sbb push lea outsb mov mov fbld dec pop adc mov add fimull outsb lret mov cli popl mov dec (bad) cs mov stc dec out aas and jg movsl jnp enter ljmp mov mov mov jg mov or push rclb lods aas loope ljmp push push jne and mov add aas cmp xor add mov fnstcw cmp mov mov fcmovne (bad) mov or aas cmp inc dec push out add mov adc outsb and insl rcll jl push jo xchg mov imul jle and mov scas ds cmpsl jmp xchg jp call add mov push cld pop cmp inc pop and xor test pop dec pop scas jg jno sbb sbb jne sbb insl out inc push mov aam jl mov ds icebp sti pop lods mov enter dec push xchg lods int3 push stos (bad) loope dec ret and dec xor add dec add add cltd fs ss jne push or sbb jmp inc (bad) les insb sub loope push lods in fwait push mov pop inc mov jmp mov stos lahf mov mov aas adc scas stos lret xchg ljmp add ffreep hlt push dec sbbb fsubp cmp pop fldl2t nop sbb cwtl pop scas and nop adc inc dec and (bad) repnz nop pop mov inc jb mov jnp add jg and rorb popf add js enter jge jne xchg mov mov dec loopne cmpsl shl mov ret lea sub xor mov orl adc icebp inc loop aam mov aam mov mov or inc mov into fisubl es cmp sbb inc adc (bad) enter add imul call repnz jmp aaa push ja test scas mov inc inc repz adc loope adc loope pop dec mov scas popf sti xor lea (bad) (bad) fwait out xchg loop (bad) imul push or imul xlat enter xchg loopne jo sbb pop mov (bad) divb push rcll push push ljmp arpl aas aam cmpb popl outsb adc mov mov or fimul cmp cmpsb lcall iret mov mov fs mov dec lea inc cltd pusha sti and pop mov rorl dec mov push jb pop xchg out (bad) lea xor sub sub xchg inc push push mov sub out dec rcrb shlb addl jge sub cli imul dec mov or sahf xor push add fild out test fcmovnu adc adc cmp mov loope and (bad) aaa adc (bad) mov push adc cmp into fnstenv aaa jae (bad) push iret lods lods test lods int3 mov add sub sti in sbb aam cmp inc movsb mov repz adc fs push (bad) fcoms push pushf push mov mov (bad) sbb test (bad) add jae dec arpl mov jp or or pushf sbb mov in cmp lcall dec cmpsl jb dec fwait adc scas cmp cmpsb sbb sub push mov in push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret mov or jg,pn lods outsl psubd fisttpl (bad) jmp lea jmp loope jns adc movsl cld pusha test (bad) or iret repnz mov sub aas cltd sahf mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp mov or shll outsl psubd fcmovne aaa jge fisttp pop in js int3 jne sahf inc push lahf cmp lods push xchg movsb mov test out sub sub cs ljmp jae mov fidiv jns enter jne xchg addr16 shlb outsb daa or int3 das mov fldt dec icebp jge fdivrp sbb lea add xlat pop movsb inc push fidivr add mov cmp mov adc xor add push out (bad) icebp inc iret sbb stc pushf aad roll movsl and mov xor inc fmul aaa jne arpl sbb inc leave dec push inc push fnstenv jmp lods cmp sub (bad) cmc int test or nop pop xchg out mov mov add es cwtl cltd lcall jp stc lcall int3 adc addr16 sarl out repz fdivr jno dec inc adc ror cmp sub mov jmp sbb sub jne inc cmp jmp sbb movsl mov sahf push cli (bad) daa xchg sbbl aas mov mov and cmp or ret test arpl outsb leave pop lods out aas das sbb inc push or notb lcall jns push pop xor mov sbb mov mov mov push dec adc jnp push out dec jns dec adc cwtl pop loopne add jns jle fcmovb lcall fs and ss xchg (bad) je add mov push test (bad) leave movsl leave aaa mov in mov cmp loop mov adc inc (bad) lret int push jns xor inc outsl push sbb inc dec lods fldenv mov jnp rolb jno mov add stc push sbb cwtl add bound jl popa and ret aad xchg mov xchg enter fild xor push mov lock stos mov dec popa das pop jle sti insl push in aaa (bad) push dec push int3 push sbb jb mov movsl sbb lods bound push jns xor mov or jg movd jl test inc outsb inc cmp or scas outsb add pop bound sbb addr16 subb inc das pop rcll icebp sub xlat enter lock test imul daa out lret scas repz pop and mov shrl insl or fimull jle dec xor insl xchg decb stc fnstcw loopne jp addr16 jno decb xchg in insb pop and daa lret mov mov and push cld in mov int3 add dec imul xchg jno mov in (bad) push and mov mov push sbb ja pop test scas push jmp in lret out or cmpsb test in incl insl and pop test es xchg push jl ds push and in (bad) lret add popf es in dec or xor insl (bad) xor add test aas and xlat test lcall mov stc mov and inc (bad) xor popf test fs mov lods loope sti and push ds call pop jmp jp lret clc psubw int jno repz mov adc call push jp jge xor call leave jp hlt sub xor sbb (bad) imul mov and push enter in dec mov (bad) int cmp jge notb sbb cmc sub jns out lods jecxz leave hlt mov jo icebp xchg imul sbb lock and sub scas lret adc mov jmp repnz dec xchg lods cmp pop fmull mov jbe inc sbb mov xchg test mov mov lock aas or xchg scas adc adc fimul jg cmp cmp adc push pushf add stc int dec add jge mov ret xor hlt mov sbb int3 or out jl or (bad) lcall inc or jl ja push lea scas push jnp cld mov imul adc fwait movsl es cwtl sbb js sbb adc inc adc mov mov pop xor cs imul cwtl mov setbe fisttpll adc test pop test loopne aad adc inc mov push xchg (bad) mov sub sub and sbb loopne and (bad) sbb hlt add lahf mov inc sub mov push iret test inc addr16 cmp mov adc mov pop popa dec cli pop cmp cmpsl (bad) jae mov pop and push cmpsb and add xchg les hlt mov lds and not or fsubr fsubrs decl add or dec faddl cmc stc ljmp mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 add push cmpsb ss mov jmp pop ret (bad) ss xchg push dec inc pshufw xchg int3 cld mov pop xchg or mov cli dec mov cld je inc cmc ljmp call xchg std dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jecxz add mov or push mov imul inc aam and lcall pop idivb rorl repz pop test enter add aaa mov daa cmpsl mov add dec enter fild push or or int3 lcall negb jo std xchg add in dec jo fcmovne aas mov shl in mov sti sbb pop inc or sarb sti xchg outsb jo sbb dec dec cwtl add jmp pop lds mov xor in xacquire outsb lods adc push sub mov ds sbb out (bad) and dec jns jecxz add int3 out dec mov and jl stos stc mov in mov ja (bad) (bad) mov xchg pop mov dec sbb cltd mov fistl (bad) mov adc stc cmp push test pop sub inc cmp fstpt mov or add aaa cmp pop inc xor out adc arpl dec cmp xchg cmp fidivl pop insl jbe jbe mov (bad) daa xchg inc push loope push rol int3 cmp mov in adc imul push lret push fsub mov test dec mov push add test push push lods push add pusha push fs adc pushf or mov out ss insb mov out add out sub test stc test pusha mov inc dec xchg inc dec xchg cmpsl and (bad) fcmovu pop arpl jbe daa cmp mov or pop mov scas inc negb jae sti dec mull push inc test cmp xor (bad) jne cld orl lods jp xchg cmc adc and pop (bad) jp fwait leave push sarl cmpsl shlb sub xchg mov negb mov mov fbld xor push int negb jg or leave pop iret mov or sti insl cmp push in std push setns push int3 (bad) dec fldt imul aam jno jbe fwait test outsl divps lcall test inc outsb (bad) loope push push mov rclb xor push or nop xor xor inc aas and push aaa xchg inc sub sahf mov jmp push orb xchg fisubrl cwtl xor pushf aam dec xchg pop les int3 mov cmp imul cmpsb lds flds jno cmp sbb or fisubl fxtract hlt scas sub ret push push out xchg push addr16 jnp arpl xchg dec mov bound dec imul daa pusha jb fcmovnb lods into subl (bad) daa or mov jno clc lret push repz or xor ret inc sub shlb dec jbe sub adc xchg push jl ds dec jp dec sub cmp jmp push test adc jns lahf fdivl hlt add xchg dec cs bound test inc (bad) out jl lcall ja jmp or fucompp test iret xchg adc shll (bad) (bad) inc add das sbb xchg aad dec mov cmp addr16 xchg movsb mov or inc add ljmp push cmpsb push cmp pop xor sub inc add fsubs leave shl push imul mov loopne data16 mov mov pop push ret or lcall jg (bad) lret xor aam iret loop imul iret fistl loop ficom mov fist inc cld (bad) mov pop sub add jp testb (bad) rorb jmp pusha adc inc sbb rorl add sbb call test nop add sbb lea rcrl stos pop xchg lods jl push adc sahf cld mov inc (bad) aad inc stc mov ret lds inc lret imul sbb and mov in pusha cltd sub sbb xchg lcall sub pop mov orl jb cmp xor xchg out or xor arpl int jo sarl mov push (bad) pop movsb sbb test loopne mov cmpsl dec push xchg (bad) mov in adc add ss cmc enter das (bad) push call xor mov lods cmp into xchg add ss add sbb (bad) sbb testb fs inc jl inc sub mov push iret test inc lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp jecxz cmp adc rorb sub repnz decl push jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 loope add (bad) fsubl lods adc mov int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 add push cmpsb cmp and insl rolb dec test inc dec std decl ss decl ss decl ss decl ss jmp cltd adc cld lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and subl fcmovne aaa jg add jle adc ljmp jno dec cwtl jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 loope imul lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp loope insl or (bad) movsl cld lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp loope push or fisub pop jmp hlt bound jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 loope sbb scas fisub pop mov clc rep adc gs dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 jecxz jge popf dec jbe mov adc push mov imul jmp int3 int3 int3 int3 int3 lea jmp lea jmp mov ds adc mov lods outsl psubd fcmovne aaa lea jmp lea jmp lea jmp lea jmp loope inc or fldenv lods adc lods xchg dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret jecxz cmp xor cld pusha xchg (bad) addr16 mov sub aas cltd sahf mov push mov push call add ret push mov push call add ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 add push cmpsb and icebp loop rolb pushf imull std dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov and cs jne outsl psubd fcmovne aaa ds lret sarb jmp int3 int3 int3 int3 int3 int3 mov es adc xchg jne outsl psubd fcmovne aaa mov jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp loope test cld sbb test bound jmp int3 int3 int3 push mov push call add ret mov and adc outsl inc mov fisttpl iret mov jmp loope push or (bad) lods adc pop test decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp jecxz fsts mov adc push mov imul in icebp adc cltd sahf mov inc std pop dec es dec adc mov bound adc or shll mov mov adc ja mov dec pop clc inc add daa or cmpsl push (bad) fs add bound int3 std imul sbb mov jno pop movsb xchg fisttpll adc push in sub dec nop cmp xchg mov pop push jecxz (bad) cmp jp leave out mov mov aad or pushf insl in xor inc add mov inc into and cmpl or pop (bad) xor sub pusha test inc cmp jns push mov dec sbb popa xchg pop push xor shrl push mov xor inc xchg cli lret sti fimul xchg jecxz push push push push outsl stos loopne xchg pusha ficom (bad) cltd xor in adc lret push sarb fstpt outsl fbld cmp mov arpl pop and push std repnz lods inc xor jnp push push ret insl jo lds clc fcmovbe mov mov sub int3 stos jle sbb int jb mov outsl pusha ret sub negl incl adc xlat push mov out mov xchg (bad) jno ret fnop int (bad) stos imul daa dec cld pusha outsl mov call lret sbb cmp iret test cmpsl jne dec pop scas xor push rcr loope mov sbb les or movsl mov push jg pop ret push ror cmc push das jnp negb adc (bad) pop je ljmp jbe movsl neg imul xchg cmc rorb xchg stos push movsl adc jle pop movsl (bad) rorb (bad) loope jo dec jecxz xor scas mov repnz sbb jg jmp ret mov mov rcrb sub inc orl inc mov sub mov (bad) mov rolb std jp dec movsw dec fidivrl dec jp fcomip sub adc ss movsb sbb pop sbb stc sub xlat (bad) lcall test push ds sbb push das jo clc add cmpsl mov xor mov xchg lds call sbb andb int mov xor cmpsl data16 or pusha lcall fdivl ss addb sub mov xor adc mov subw js cmpb popa aas scas iret xchg sti dec or mov push push inc dec mov dec and (bad) mov pop jge cmp pop jmp es push pop sub loopne jg xorl icebp cmp jl aas ljmp (bad) mov hlt cmp adc and leave jp mov rcr stos hlt mov inc add inc sbb push inc adc cmp gs xchg lods test mov notb (bad) enter stos xchg push ret or pop loope adc scas pusha mov and mov cmp call cli push js xchg jno push (bad) xor iret dec imul pop (bad) pushf jl (bad) mov cmp daa enter outsb nop pop out nop mov fmull jo sti xlat jp ss push xor int3 in aad jmp jns (bad) cmpsb mov add pushf adc and cli popf jl icebp pushf sbb iret out jl or hlt jp,pt jo jno imul test in sub pushf cmpsb pop xchg and (bad) hlt xlat mov lret rorb adc out mov inc shrb gs notb push push fdivrs into frstor dec jg popf add test jbe push or xor cwtl scas shll in add stos pop jb je cwtl pop push and fcomp mov decb mov sbb adc fwait jo push inc jbe adcl loop push xchg pop push in andl mov insb push sbb aaa (bad) xchg lahf jp push loop (bad) xchg push push std std ja or push dec inc push imul bt sub data16 push fwait in lea jo lcall cmp (bad) pop loop sarl jle inc adc nop inc jle lret in adc insl add mov mov orl aam add sbb (bad) sbb testb and inc jl inc sub mov push iret test inc addr16 cmp rcll js loop sbb shrl add call cmp in out cmpsl mov mov fwait dec dec pop jecxz mov adc leave mov xor or cmpsb xor mov inc lods sub xor dec rorb stc mov xor xchg int lahf pusha dec mov mov xchg cmp fwait in add push stc jnp loopne cmp adc mov pop inc es imul imul adc addr16 sbb jbe sbb or pop adc lods xlat fisub cmpsb arpl jae inc mov jle fldl call pop mov push daa movsl sub in sbb push cmpsb xor pop xchg push sub fdivrl into pop lods ljmp inc (bad) ss mov pop insl out and xor cmp fs addr16 lea mov dec (bad) mov (bad) stos js dec dec add push sub addb or mov sub insb mov ret jne pusha test jnp xchg add jle and mov lret addl sbb adc cltd js cmc insl push push aam mov xor cmp jbe mov cmp fidivrl or push mov fstl pop cli adc or dec test mov lret lock sub xor dec xchg pop lock in pop repz add popa stc cli repz aad aaa out jp adc pushw cmpsb lods mov push xchg jge xor inc pop jg into neg loopne dec ja in arpl pop stc xchg jmp mov jb adc (bad) ss sbb cltd mov lret xchg ja in addr16 ss imul in push mov andl dec inc xor mov pop scas push (bad) mov cmp push lret pop add (bad) push add fs int3 lret lods add (bad) adc push ret xor sub mov xchg sbb repnz roll and (bad) xor push push data16 pop pop mov sti push aaa (bad) (bad) fisubl cmpsb loop pop inc in pushf and mov jne test cmp push cmp cmpsb sbb xchg hlt jns jp mov push jae stc gs out mov fdivr aam pusha and loope fcoms cmpsb xor jecxz insb dec mov push pop adc lret jb fnsave push dec loop sbb sahf loopne notw bound push xchg loope,pt aad mov (bad) (bad) lock (bad) dec xor daa push cltd adc sbb push and adc sbb or stos mov cmc test call sti add dec lea ds adc and imul or cmp jbe jb (bad) pop sub sbb jl or popf dec cli xchg add (bad) aas sub mov test ret fisubrl mov xchg add jmp stos lahf insl (bad) xor or xchg repnz mov ja hlt sahf jmp xor mov test jl test dec and rcrl lret fwait cmp xor into into dec negb dec addb ja inc in mov xchg mov push stc lea push pushl clc pop dec (bad) sbb pop push mov fldt insb pop xchg cli test mov (bad) and xchg push (bad) fidivrl fstpt mov xor jge xchg (bad) adc clc addr16 xchg mov icebp jae out daa lret sub xchg rorb imul addr16 cltd and pop nop mov stos xchg daa nop inc or add iretw lock xor arpl sub out lock es mov add push fs hlt mov or sub and jae fwait push icebp aas pop pushf cmp out dec bound repz xchg shrb mov out xor mov cmc enter pop pop push mov test add push mov lds pop inc xorl dec push stos aam cmpxchg mov xlat (bad) xor bound ret jnp xor dec imul add mov jne sub (bad) cmp lock popa mov and or push iret jecxz insl movl pop or out rclb (bad) (bad) push adc andl add cld inc dec pop arpl dec in xchg and or add or xchg jp imul sbb (bad) lret lea dec xchg addl lret jl pop movsb lahf pop mov mov out out mov jp adc and push outsb scas push sbb sub mov (bad) test jno fmuls mov cmp aam icebp push or adc mov cmp (bad) and aad sub dec mov pop pop fs mov scas fwait or cmp jno sarb aam add mov lret or lock lea enter stc xchg aas cmp ror xchg (bad) pop test pushf psubd inc sbb push jae fstps out dec fist js pop movsb or fidivl jecxz pop fstl decb ret mov cmp rorb sub in shrb cmp es ss out inc push stos (bad) leave or fistpl movsl mov dec repz cmp movsb add mov cmp cwtl adc test xchg hlt xorl lods dec ja stc test test fs or mov enter xchg and leave jl and mov and (bad) mov adc push loopne je cli dec daa fsts mov xchg sbb loop or movsl or daa insb mov adc push out add ret roll or into xchg adc out lea mulb shrl pop stc lods push out (bad) ja lock lea jno imul iret mov in xchg pop cli mov inc mov les push and cmp loop pop xchg pushf mov popf les imul aas mov fcoms arpl jae push xchg mov clc (bad) int dec stos add imulb popl test pop pop lret insl xchg push sub inc xchg repz sahf jb jns nop ds in inc clc add test ss adc push jns xchg push mulb push xchg sub pop mov fwait or xor dec ljmp fcoms test in add cmc arpl adc mov jnp test test adc int3 das add ljmp pop daa loopne int push dec pushf (bad) jne lcall mov jl cmp dec mov push mov cmp inc mov rorl shrb fwait or scas les xchg or popa inc push test (bad) pop or stc in xor and push mov hlt ss adc inc inc adc add jne pusha call push xchg push in pushf loope sub sub test sub cmp inc out jp imul in or and sbb mov (bad) push push mov pop ss xor and mov add xchg loope jecxz push inc jno pop cmpsb pop clc test push scas movsb inc cmp xchg xchg and push cmp sbb xchg sub std pop cmpsl repz dec ret sbb push push push xchg inc push and fwait out inc into sti cwtl and push (bad) and popf mov push out or test mov fimull xor mov mov mov sub xor cld push sbb int3 or test in sbb mov outsl (bad) in xchg std movzwl (bad) arpl fiadd movsl bound ret sbb imul lahf (bad) jno mov pop mov rorb or inc adc inc fmul sarb inc incl pop sahf xor pop and mov jne jge jo pushf cwtl mov mov cmpb inc insb jle or fnsave pop dec movsl ljmp mov pusha stc arpl rol nop aam jle daa or call (bad) in and pop (bad) fst popa mov mov mov jmp and adc lods sbb or mov shll rcl stos ss in xchg dec mov bound subb cmpsl mov aaa pop or push icebp push inc fldl fcoml aam (bad) xchg bound in inc push sub les sarl test mov inc xchg sti leave mov bound dec mov adcl nop popf mov add add (bad) movsl outsl test outsb cmc xor lods mov cmp push test icebp push pop (bad) pop jmp mov rcr inc fmuls sub int inc adc (bad) mov sub call (bad) push push sti mov fstpl pop int mov pop out jnp jb pop mov dec mov push inc inc jg scas clc mov lret inc repnz jb fwait jns cmp or push mov jmp add iret mov sbb dec arpl aaa jno scas cmp or xor gs jnp aad imul ds adc cmpsl in jne (bad) xor pop (bad) push add sub (bad) stmxcsr pop mov scas lea push in dec jle in mov orl cmp sahf mov iret clc jns mov lcall fstp pop stos xor ret sahf dec (bad) cmp cmp add xchg mov (bad) xor pop push dec fcmovbe lea inc mov add adc cs lock dec or lahf xchg push cmp outsl pop idiv rcr iret das cmc adc adc or sub mov or adc xchg in mov xor daa ljmp out pop sbb sahf sub pop hlt dec mov inc mov and sbb sub testl std pusha mov pop mov push xor sbb out push ret push aam mov lds jno addr16 loope jns in mov lret add gs or shl fldt sub mov outsb dec mov fs xchg jmp cmp aad xor fcomi lret rcrl sti fs and sbb cmpsl add xlat nop insl movsb (bad) cli stos (bad) lods jae adc push sbb adc insb xchg and xchg mov mov loopne mov push push fsub inc sarl jnp bound rcrl pop mov les mov adc mov outsb pop test ja sbb roll scas pop add and ret mov xchg repz sub or push lods in mov sub fcoml inc repnz sub hlt mov pop clc leave push stos fs dec and mov out mov (bad) (bad) data16 push (bad) xchg lcall js cmp fwait (bad) lea jmp jecxz int fwait inc xchg push cmp cltd pusha icebp or pop mov int3 lea jmp mov lea mov xor call mov jmp jecxz int fwait inc xchg push cmp (bad) pop mov int3 mov lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor stos lods xchg mov push paddw mov sbb call repnz lea sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor stos mov push inc out fcomi cmp (bad) xor cld push fwait ror aaa stos jo pop xchg jbe jl mov std mov (bad) jge movsb rcr xor cli stos fdivrl pop mov fwait mov frstor mov (bad) sbb pop xor mov xchg push xchg (bad) adc dec cmpsb mov repnz and das in dec mov push jae out js out and scas icebp pop add xor loope mov repnz imul xchg cmp pop push scas imul xor (bad) loop adc push push push cli mov (bad) mov sarl or or gs push test aad jns into adc dec push in sti add in sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 sbb xor stos mov pop cmc mulb mov mov lret pop add and and cmpsb es push call insb arpl in fisubr bnd fcmovne dec int jbe inc push scas cmp xchg or mov dec aad shlb push out jne cwtl inc sub sbb int ret mov xchg fmull jp stos sti sbb imul sbb out push cld dec pop roll daa ret (bad) ds rorb xchg cmc sti imul lods push lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov xor adc add inc les int3 mov test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb xor fistpll ja push paddw push cmp (bad) (bad) pop add and push xor dec outsl mov mov scas dec mov mov jp test and rolb jbe mov andl sbb cmp mov xor imul push leave into ret mov mov add mov repnz roll shl or lret or mov mov sbb popa mov ljmp sbb jmp or sbb aas mov sub dec not sub fnstenv fildl adc pusha fisubrl or ljmp mov shrl mov (bad) fnstenv adcl and push lock pop dec (bad) stos pop sub xor xchg dec fwait test mov xchg add mov xchg dec mov mov aaa cmp push inc lods aad lcall sbb imul enter popf jmp es jae or jecxz sbb (bad) dec pop jge cmpsl repnz mov int cmp push mov faddl jl add pop cmp mov ss pop jns addb cmc dec dec bound testb pop dec mov pop push or jno mov push push subl pop push dec lret sti fs inc loope xchg sub hlt inc mov xchg icebp xlat mov iret cmp cmp pop std repz pop mov insl stos mov pop adc sub (bad) ss mov and sub or mov clc test mov fnstcw inc cmp push pop cmc mov sbb addr16 inc xor test idivl jecxz std pop push adc cltd lea je out (bad) std sub test lahf cli jnp xor ds loop mov mov sub ret or xor jns dec dec xchg out mov xchg mov mov jl call test inc fldt push aas hlt or arpl or not inc nop test and cmpsl outsl into mov (bad) mov jmp ficoml addr16 xchg push inc cs out lea imul out jecxz add cltd insb pushf fmull rclb cwtl xor pop xor mov push mov dec fimull jg and push dec xchg xchg xchg ds sub arpl loop rcrl subb loop outsb dec push nop sbb push gs (bad) inc jb add mov icebp push pusha and push inc (bad) xchg or ficom xlat or dec or js pop (bad) mov mov and jle mov mov stos sub insb dec in fcomip rcll mov pop mov lcall in pop xchg mov sbb sub lahf mov repz lret insl or cmp sub cmp jge loopne add inc xor adcl dec sbb fdivl lods cwtl test push xor sbb push adc xlat and cmp dec scas pop stos addr16 lds cmp sub imul hlt fidivrl mov popf jmp pop adc dec mov int3 mov mov pop shlb dec (bad) aaa rorb inc and jns testl (bad) lret popf cmc in pop push jns shll imul jbe push in inc sarb inc cmp pcmpgtb popl inc or data16 (bad) adc sarb dec push sbb pop fisubl push mov dec (bad) cmc pop sub lret mov imul arpl ficomp push cmpsb mov ret mov jecxz fstpl mov push cs mov aas sbb shrb adc dec clc pop aas out (bad) pop in insb inc leave ds lock cmc mov enter rcrl scas sbb dec sbb inc movsl sbb xchg jb sub inc push stos fsubrl popl add sub sbb push jp mov xor stos mov aaa xor subl dec out xor leave nop int3 cld cmp and sahf cmp jne mov rcll xor addr16 sbb in xchg test (bad) inc fwait add ret in adc xchg sbb cli adc dec push xor cmp into cmp outsb (bad) mov pop sbb mov (bad) dec mov and cltd push std arpl int3 pop pop sub jg inc decl xchg cwtl mov mov iret mov sbb pop add (bad) lods iret cli cli repnz test mov call test or (bad) jecxz mov fldt sarl ja sub shl sub mov inc inc xchg mov xchg inc and push xchg jge (bad) sahf or inc in scas ret or cld mov lcall sbb (bad) add cwtl stc adc pushl fdivrs call jno adc mov iret jge xchg and xor cmpsl or ret dec frstor mov mov adc pushf ficoml and push in inc inc dec ljmp cs repnz pop push test inc push mov sbb cmp dec js subb out jno pop fcomps andl lock stos mov mov aam xlat repz out in mov jmp xorl fdivs pop ret fistp mov popa mov cmp pop xlat repz or cmp inc in push repz aas (bad) leave test lods pop ljmp and xchg mov xor data16 jg std and popa dec ret pusha scas jnp mov (bad) rolb (bad) jo and fwait mov push mov fwait roll adc outsl mov ljmp inc and xor jnp cwtl mov das mov ss ja dec iret inc das jp insb add in ret inc xchg gs cmp pop mov je cmp inc xor inc in push lret cmpsb lock flds jne les nop pop sub push mov adc push arpl mov mov adc pop (bad) repnz (bad) lcall (bad) ljmp sbb ja mov adc xchg dec stos pop inc js sub sub call imul add sbb scas inc (bad) (bad) pop rolb or in imul jae in add test cld mov dec dec scas sub negb push dec pop mov or cwtl add stos pop ret push clc xor dec mov lret sahf daa sbb cli mov mov aas xor movsl pusha adc sbb xor adc int3 mov cmp dec cmpsl mov cmp pop shrl scas hlt sub jmp mov push lahf iret inc sub and pop adc mov mov pop cmp loop or xchg push and leave inc cmp push mov fwait stos xchg ficoml fildll pop shr and push dec fmull ja ja (bad) (bad) int3 dec lahf inc (bad) mov xchg jne mov jbe jns inc inc push into seta imul or inc dec add mov pop sbb jmp xchg xlat stos jb lea or or or pop lcall les loop je lahf cmp jns lock int3 hlt mov jns add mov subps mov int3 add negl jmp pushf xor dec sbb sbb in cmp inc mov or cld inc push mov push and (bad) ss icebp cmp out push pop mov xchg ja lcall in jo imul inc mov repnz lea xorb in sar inc cwtl jle bnd das lret push repnz push jnp jge sarb fnstcw test cmpsb lret test addr16 or jnp cmp dec push aaa push sbb scas movsl inc loop jnp cmc mov mov mov jnp xchg pop pop aad jge ret pop dec push call cmc dec mov dec fmuls scas pop jecxz xor popa cli cmp xor das xor mov sub fistpl nop mov (bad) loope cli dec movsl out and xor fist (bad) or mov popf iret or imul and jb ret mov lret enter xor sbb mov push bound cmp pop test cmp fscale cwtl jnp fs les mov mov inc out inc sbb lea cmp (bad) push jmp push jnp jmp push movsl (bad) mov add adc lahf add loope test sbb mov mov lock popa nop movsb aaa icebp sti fdivrs test xchg cmp or andb xlat out sti push cmc ret call insl sbb xchg dec daa mov std test xchg lret pop outsb cmp ret mov stos insb push jl fsub ja test mov in mov mov ror mov sahf sub push mov adc sbb adc scas aam inc jg stc in das fsubrs int sbb (bad) push mov (bad) mov sbb stos sub inc in adc int3 sbb insl adc ds aaa imul sub cmpsl add cli mov cltd dec adc movb insb jbe mov in adc dec or lds aad and lahf xor pop ljmp cmp or dec int3 push shr scas pop jne xchg inc and (bad) adc pushf fisubr or mov sbb xlat sbb out mov push sub test int xor std xchg mov inc jle fcmovnbe decl push cmp mov insb mov imul and push leave in enter je mov mov clc dec sbb mov les add push inc (bad) dec pop aaa clc sub mov insl jmp jle,pt xchg leave sti xchg aam cmp and and pop stc mov jae mov fldt inc jne pop outsl cmpsl (bad) xlat jmp xchg mov push cli rolb or xchg sub repnz pop jno fucom inc jo mov sbb lods popa sbb loop cmp adc add add flds mov push mov ja push mov dec call mov push int ss fsub pushf insl repnz and xchg movsb fs jecxz fmull inc adc dec sub jb std xor inc pusha jmp out jae cwtl sub inc mov dec push bound jge cmp mov pop cli stc sbb je or lods hlt jbe fwait aas sub jbe loopne mov add adc out lcall pushf add stos mov dec das rdpmc sahf jle pusha ret sbb addr16 sub adc aam and fldcw addr16 jo addr16 dec pushl cmp repz pop xchg test or pop loope in xchg scas or mov mov pop inc (bad) je jecxz or or into jge push je dec cld cmp xor xchg cmp fcomps call sbb fstps cmc xor mov mov inc pop (bad) pop cltd jmp push adc (bad) lods shr les mov (bad) jp pop leave js fcoml cwtl lcall sub mov nop movsl scas xor clc inc xchg mov cmpsb jg jg add mov mov pushf addr16 repnz jb cltd pop pop xor or mov out mov mov aad imul arpl out movsl jle lcall imul jl out repnz movsb jmp mov sub cld (bad) scas sbb mov xchg les jno ja push dec mov sub dec imul lock inc cltd (bad) inc ficomp daa mov insl loopne xchg repz jne and divb scas xlat mov xor hlt xchg (bad) mov fsubrp sti test inc jecxz mov arpl (bad) sub pop jae and call sub push jb cmp inc xchg pop and jae push sub je xchg cmp push adc outsl jg sub shlb xchg lods push xor mov (bad) into add bound loop cmpsl in lret inc sbb mov and es or jne popf pop push sbb in clc inc insl (bad) push jle jbe rcrl in out jbe (bad) icebp mov mov mov mov loop lahf sub mov or and cmp mov fnstenv sub push lcall mov into jae out imul add lcall jg cmp pop sbb adc (bad) mov pop inc dec cwtl mov mov mov shll fdivl call jg das popa mull sub jae jl cli or inc pop ret or push pop mov (bad) mov in mov nop cltd fild or xor jg jnp dec shll mov pop and (bad) push lods and pop or or xchg (bad) jne mov pop xchg push mov addr16 jbe test pop sub xor lea (bad) mov xchg popa dec cmp lret xchg push fwait repnz out mov shll pop push ret or fwait (bad) pop (bad) dec push xorl (bad) imul jle sub lods inc mov or sti sahf repz loop and mov xchg inc inc inc jns lret xchg dec mov sub sbb out sub stc cwtl dec pop dec sbb pop (bad) shr xor lock into mov dec and cmpb js cmp adc lea pop sbb mov mov inc or lds std shll adc movhps and rcll (bad) cs lahf sbb lods or and loope in cs je mov jge imul sahf mov inc pop push rorl xchg or insb xor lods sbb inc jnp add jmp pop nop nop push pop jns dec call sbb das pushf js mov dec je aaa aaa (bad) mov clc xchg enter or lret add in scas cmpsl add scas out inc out out je jecxz sub and clc ss ret jne pop xor pop inc pop xchg jl dec lcall lds std cmpsb push into ds lods inc mov mov test dec stc (bad) (bad) (bad) jecxz into push subl fs movsl ds xlat mov mov pop repnz sbb addl xchg out (bad) movsl sbb inc sahf cmp jns mov aad adc cwtl inc cmp insl cmp fmull scas pop decb jl fdivs je pop push inc ret lea inc repz mov out sti adc mov cmp push inc addr16 lcall stc cli flds xchg jo testb pushf mov dec inc push mov mov and dec dec pop (bad) es (bad) mov add je inc stc lcall or dec jae xchg add ret add dec movl sub xor jp (bad) mov push popa mov mov pop dec imul inc scas sub cs xor je add in mov lret stc loop mov inc cmovs rcrl jmp aas xor dec xor add enter gs lcall lcall lea fdivr xchg iret les js mov daa bswap jmp jecxz ret mov sbb cli push es fwait and adc jae mov pushf push pop push repnz cmp out ljmp jno pop mov xchg mov pushf addl dec (bad) jae push (bad) stos inc gs cli sbb rcl inc in sar cmpsl push scas fdivs mov jb mov sbb pop sbb fildl std add int (bad) divl mov int3 push add je (bad) and cwtl jmp in dec xchg inc mov mov mov enter jne ljmp jmp jecxz stos bnd int3 sahf cmc push mov inc jg xchg (bad) fadds loop dec push out mov (bad) jge pushl aas imul mov fstpt inc and push push inc rcl aad push push pop inc mov call pusha ja sbb loope in nop pop mov and adc sbb sbb in inc sbb or pop or inc mull cli jg (bad) xor xchg push insl push mov push cltd push aad mov fimul rcrl sub sub adc mov mov dec testb je xchg insb stos xor fisttp out sub adc mov div movsb push mov mov pushf out pop in xchg ret (bad) mov pop push mov ds pushf push repz movsbl (bad) ja and xchg insb dec out xor dec fs mov adc int in mov add jno inc sub xchg ljmp push inc lods outsl out adc (bad) dec aad std imul dec stos ds fimull pop lods add in mov hlt xchg cld out pop cmp adcl cmpsl insb pop adc pop jo pop sbb cmpsl adc (bad) sub std fisub aam xchg mov jae inc aas roll into inc or and jnp aas add gs rcll cmp push cmpsl ljmp (bad) je inc xor jmp add inc fimul js arpl pop jno pop xor mov xchg js aaa adc xchg adc pop std insl aaa jno inc sub jl rcl jns out stc mov popa push outsl xchg fldt xchg (bad) sbb cmp inc jl sub sbb scas mov shrb mov stos mov sahf rcrl ret mov hlt inc pop inc adc sbb sti in mov sub mov cmp sub push (bad) aad push nop popa test dec add adc in add lea sbb cmp (bad) add (bad) mov test push arpl dec out les inc mulps add es fldt repnz mov jno int mov and int3 aaa mov add mov adc push jne sub add cltd movl outsl sub push inc or nop mov mov jge add ja sbb sub or iret sbb popa ror arpl xchg sub outsl int add imul arpl fucomp add out inc in aas dec mov dec jge divl push loopne fcompl lcall or cmpsb arpl lods js loope mov mull imul lds mov leave add xor enter or xor mov (bad) jo lahf je into insl mov mov jns pop dec notb lds pop (bad) lods jno dec stos mov mov (bad) pusha or call out mov adc es hlt into mov iret dec daa (bad) sub aam cs sbb and std in fdiv jne aas add xchg jno hlt ret sub adc sti fisttpl push sbb int3 leave outsl jge xlat clc fwait aaa cmp out bsr jle push (bad) (bad) sbb rcr sar xchg mov sbb sbb and lret mov icebp insl movsb std push xchg jp sbb add lods movsb inc mov cmpsb add rol ds or push push push or sti repnz mov in xlat aaa jb cmpb xor and gs fs add pop int3 (bad) cwtl pusha jge insl fbstp or insb rcll mov lret xor cli je or ja lahf jp loopne cmp fildl loop lret orl jb mov pop mov dec out bound insb mov adc cmpsb add bswap popf cli cmp je or sarl pop bound lcall nop rorl jns imul push fldenv js push loop inc or stc aam adc push dec jns pop jecxz in jae iret inc fmuls cmpsl stos cmp (bad) in sbb lret js call mov adc in hlt dec mov lods imul sarl mov xor jmp aaa fyl2xp1 daa sahf push add mov cmpsb std (bad) push dec dec outsb cmp sbb cmp cmpsb test (bad) or cwtl sbb mov dec xchg lahf in mov mov or sti jge sti sbb frstor pushf (bad) out ret push jno push push (bad) jae push fs lret (bad) out (bad) mov mov cmp push ret dec pop aas fiadd inc inc pop stc jns rorb test jbe data16 jns shl jbe aam je pop ljmp jp pop mov dec imul movsl imul int test loopne push lds and lods out pop jmp imull in mov outsb mov out push push mov movsl rcrl pop xor aas fist test out pop add fisubl nop and (bad) jb add ja pop movsl pop mov aas ljmp fcmovu out pop pop test sbb hlt repz orl pop test arpl jno mov out fistpl xor lods pop add push ffreep push xor in xor aam aas push (bad) xchg xchg sahf jae mov fs repnz mov mov or adc and jp pop push (bad) in xchg loopne xchg inc sahf sub mov (bad) fildl mov add inc pop bound and push loopne cmp in jle inc sahf inc jp test and in nop shrl fild fimul daa out fmull das imul ss fldenv sub icebp ss jno (bad) aaa cmp hlt cwtl fcmovu test and push xor mov push iret pop gs xor out sub mov and lods shrl ret add sbb popa dec out xchg enter daa jnp fisubrl adc mov out repz add inc imul jnp addr16 popa imul lret ret sbb test pop fcoms mov xchg test add pop xchg lods push inc cmp adc pcmpeqd or and aas and pusha dec enter sub mov (bad) shl xor test pop (bad) pop cmp inc pop clc adc pop es repz ljmp daa mov push or jo or and pop jo lret sub nop add mov adc mov cmpl imulb jge jbe push mov sub std lret adc aad enter add fsubs xchg rcrl xchg inc inc or (bad) and lahf (bad) ljmp mov pushf add push push (bad) cmp adc std dec add iret ret cmp scas cltd imul push pop adc inc add pop mov and jnp aas out jns scas pop mov lahf ja int dec cmc sub and ljmp add pop out mov pop int3 fistl lret xchg cmp aas es pop (bad) dec lea lret dec adc (bad) fcmovnbe fimull mov mov cmp mov xchg push xchg xchg mov add push int sub jae sbb aad jb incl mov cmp xchg xbegin sbb je (bad) mov mov mov xchg lahf xor and in sbb mov inc adc xchg ret (bad) sub clc dec mov dec sub in jg fcmovu leave pop sub pop cmp (bad) cmp scas jg push jo (bad) xor cmp xchg clc out aam popa ljmp or dec mov popa sbb inc pop insl add cmp aad test inc insb repnz or adc xor adc (bad) repz xor pop clc aaa xor jns loopne xor push loopne jb (bad) push mov or popf push mov (bad) or out test js add and xchg sbb jo cmp xchg daa ljmp xchg sarb mov es imul add mov outsb mov mov inc push loopne fnstsw ja or sbb es shrb mov sub and test lret mov mov jge lods bound xchg ret stos and jo orl movsl add jle fstl mov xchg frstor fs rclb insb sbb xor aaa dec push add dec jmp xorb (bad) xor and sbb sbb xor push cwtl cmp pusha jl dec clc es add push negl add data16 movsb and mov (bad) call lcall mov loope andl adc dec icebp mov push mov mov popf push aas push sub in leave (bad) addr16 pop sbb loopne leave cs push aam mov jb jmp rol sub dec pop (bad) (bad) es int leave xor lea loop xchg in add insl sarb dec (bad) mov pop add bound xchg bound jno adc mov push jg jge xor mov cwtl jge dec lahf sub fistp ds (bad) fist les inc testl adc out sub rcll inc inc cld je cmpsl test scas inc out jae lock mov sub and clc insl cld ret roll push ret push roll mov (bad) into aas mov sbb dec inc jno pop sbb inc imul push add add inc sar sbb jecxz mov in pushw mov fimul jae pop mov cs cmpsl aam call push push into xchg jo in mov sub (bad) mov jnp sub rcrb fist cld xchg cmpsb mov or mov cwtl xorb shlb in mov out lahf loopne daa pop jmp lea mov mov cltd dec mov fs push sbb lock and mov jp sahf pop mov lahf sbb aas or lcall daa add dec repz push adc fwait sub addr16 xor push ret data16 clc roll out mov dec cmp push out (bad) inc xchg push sbb add and lock add rcr scas pop js sahf das or lea sub adc add arpl sub xlat xor xor das pop sub aaa adc nop sti shlb test cmc (bad) sbb mov fbstp push imul ret push pop cmp fmuls fcoml dec xchg add dec (bad) sub aaa push cmp aam mov xchg jnp popa fstpl (bad) je in xchg es jo stos mov xchg scas mov ja in or jb jns cmpsl mov dec push test cmp inc add bndstx push rol leave xchg lret aam outsb in cs bound push test or or inc pop icebp xchg adc mov addr16 aas jo pop out daa xor jno add repz (bad) lret cmpb jge fcos push inc rcrl aas inc dec mov push xchg xor leave inc gs jle sbb fidiv push dec sti push shll mov aas mov popa inc jg xor cs andb and test cwtl cmp jae (bad) cmp mov sub into repz sub xchg and or mov je xchg lods in push mov shr lock sbb mov ja mov cmp test insl push cmpsb dec jmp stos cltd das ja push jb or adc and fwait into cmp jl mov cmpsb in jg mov mov shlb fdivl mov int3 xchg ds mov xor cmp lcall test add sbb jb xchg push xchg sub out inc ret add xchg inc in popf (bad) js fmul je pop xor sub rcrb pop das subb iret jge repz or (bad) loopne ljmp ds cs rcrb push rcr outsb insb push imul test lcall cmpsl or lahf mov jb push lret dec testl cmp loope lcall fnsetpm(287 sbb in sbbl cld inc jecxz add jecxz add adc cmc add test repnz das mov pop sbb jne xchg inc push decl adc leave adc addl jo arpl (bad) cmc mov or jp inc das mov or punpckhbw add or or shrb and lcall xchg xor lock mov mov cwtl test cwtl jecxz aaa fdiv out mov mov inc adc push ss cli std dec daa scas dec sbb bound jo popa aad test sbb mov repnz iret dec cmp icebp in sub mov ds les inc mov (bad) fsts lcall and fmul inc cmc push xor lock inc sub dec roll (bad) ss ja add dec inc fwait mov addr16 jo sub or stos xchg loopne (bad) rcl pop divl pop mov ds mov fldt (bad) neg sbb and movsb fs mov mov inc jne push mov xor loope add inc sub roll cld sti mov push jl mov lret sub clc stos push popf or movsl adc mov jmp ret insb adc sbb jnp cmp pop stos jmpw mov xor cld into iret xor cli test or dec jne cmp scas repz loop aam into cltd and int out lods xchg jo mov jno add insb add fimul push sub (bad) push iret add adc out mov xchg cbtw outsb jge sti xchg lea inc push pop idiv push stos mov sub pop mov xchg out cmp sbb cmpsl lahf jns cmp xchg aam add popf mov xchg adc aam mov jecxz mov in xchg sub into aas jp push sub dec or jg or push push rcrl xchg cmpsl cltd dec popa lock outsb xor cltd (bad) das xor jae (bad) icebp outsl ficoml pushf (bad) pushf push jae in aam bswap adc pop xor arpl inc pop xor push mov aas or dec popf je xor add sahf mov pusha loope ds mov fnstsw dec mov sbb jmp push jb rcl adcl loope lcall pop ss dec (bad) cmpsl xor xor rorl das gs sahf jmp jecxz pop gs cwtl pop sarl aas fnstsw stc dec loopne pop or (bad) xor xchg pop ljmp std mov ret andl add jne stos or mov rcl xchg stos pop clc or out fstpl cmp pop aam push int3 stos inc ss mov dec addl stc aad movhps push xlat jb lock xor pop lret push jle test in icebp cmp dec mov and out xchg iret mov cmp outsl ret fistl sub aaa fnsave push cmpsb repnz pop aaa pop and dec pop inc mov add fsubl xchg (bad) scas mov adc (bad) sbb sbb fcmovu cmpsl inc fisttpll push arpl pop cmp push mov mov mov dec idivl ss dec lea fbld sub out lret cli jp sarb out pop xor jbe or gs inc push loop (bad) dec xchg sbb cmpsb add jge imul imul or or jecxz mov add and stos outsl mov std dec sahf std ljmp cmp add sahf dec les dec xchg jnp clc daa into pop stos lds mov ret pusha lret addr16 adc movsl sub mov and and cs mov stc mov adc clc aam push loopne sti stos pop subl add (bad) mov mov loop and xchg xor mov mov mov lret sub loope xchg jbe js pop sbb xchg movsl adc adc jo sub sbb (bad) ljmp adc into movsb gs scas jb (bad) outsl popa xor sar pop mov lret cmc jns into dec push xor into pop out jne cmpsl inc pop sbb test lahf sub cwtl and jne pop or push push lahf bound sbb jae mov (bad) in jbe xchg popf xchg or (bad) mov lds push lods (bad) pop imul rorl testb popf mov movsl adc add mov scas cltd dec cmpsl outsb push mov out sbb pop mov movsl (bad) push popa addl jo xchg pop js sahf inc scas push mov repnz mov jl push bound test pop aad cmpsl int3 (bad) dec lret jmp pop imul dec inc cmp ljmp push sbb cmp push cmp cs cmp test (bad) lahf outsl imul rol call test (bad) out pushf sub mov inc mov sbbl mov daa dec mov jg xor int rolb or mov scas jne (bad) jbe inc test daa iret les cmp push sbb pop pusha mov lret mov pop pop jb push adc dec (bad) and xchg mov and (bad) or test sub push xchg ret push sbb adc pop fdivrl lock fnsave sbb xor cmp adc push xchg pusha rorb jb ss cmp int or jno jo shlb or pop jmp int3 mov mov xor adc jmp in movsl shrb and xor xor (bad) jb xor in push mov inc xchg pushf imul icebp jle negb frstor sub pop ficompl pop and cmp dec push lahf mov mov jl imul mov adc call lods js subl sub enter lahf or in shrb inc add sbb (bad) in xchg nop fisttp dec cmpsb inc xchg sar jbe jo adc mov push cltd jo inc das jbe cld mov dec movsl enter lcall pmaxsw stos sub cmpsl lods rorl ljmp das sahf pop orl and js dec xlat push fisubr dec fmulp dec rcl dec fsts xchg mov pop les and or in mov outsl push outsb adc stc cmpsb add cmp call xor movsb cmp jl mov in out not mov xchg push aad or movsb or mov adcl jae lock xchg adcl jle jo cwtl insl adc (bad) mov dec movsl jns xor mov or insl or mov xor sub or sub jbe pushf cmp mov fs das lock lds inc jmp jb mov testb pop or fwait push rcl sbb jo add pop dec loope sbb cmc adc cmp (bad) loope inc mov cmp cmpsb push mov lea mov cmpps das pop or std sub mov mov push imul mov je jb lea scas cld (bad) mov clc push mov mov ja movsl mov mov mov ss inc mov sbb jle dec sbb jg mov insl push push xchg sbb pop ss into lods lds xchg aad fsts add cld adc xchg pop cmpsl xchg cli mov sbb into or sub jae cmp popf rclb and pop mov xchg push inc lods jge sub add xchg xor dec or pop ficompl adc sti jl stc inc test dec test mov outsl sarl pop js mov clc mov test lods and inc into push (bad) fiaddl pop xchg sub cmp aaa js mov jg (bad) xor push iret mov or out pop add mov das paddw or loopne dec jge push (bad) in pop fistpll inc imul lea inc xchg add xchg stc xor pop inc add icebp jp cmp push mov dec inc dec stos pop xor and call aaa xchg mov mov sub out jbe loopne fidivrl jns cmp mov jecxz pop sbb and pop inc xchg cmp mov rcll (bad) in cmpsb pusha and shll jo out icebp or test jae aaa adc mov addr16 pop sbb in popf pop cmp push (bad) jle fsubs lret addr16 push mov and xchg (bad) adc cltd xor movsl ret sbb cld mov jne xchg jp inc xor and mov xchg pop or sbb pusha mov cmc add int3 testb fwait aas jns inc add or xor xor mov sbb inc mov enter cmc and insb movsb xor stc (bad) push mov pop mov xor jno in cltd adc cmp xor pop push lds inc inc xchg cmp fwait and pop imul xchg inc cld sub add pusha push sbb in xchg dec std mov add and mov (bad) cmc inc sub test ror sbb stc aas ret cmp sub roll inc popa testb or (bad) cmc repz mov hlt mov xchg add dec pop outsl int mov push int or dec hlt mov ja cld les jbe pusha xor inc mov mov jle or push jl lea cmpsl jge ret aaa xchg sbbb pop aad inc and std adcb sbb daa sbb jns jmp sbb ja push jle sbb jnp fs call jp cwtl aas lahf mov mov stos jp cmp mov pop push cmc sbb lcall jo lock lods cwtl inc icebp pop sub cmp into mov fadd xor push inc adcl iret arpl adc int jae and dec (bad) fisttpll lret ljmp sbb dec xor das shll push add insb ss and xchg lret push push mov adc test rol dec sub add adc std pop rorl dec outsl fisubrl int push ds add jno ds mov jle mov sbb std int add cs test outsl and sahf inc sbb sub cli jne divb sti jmp in cmpsl push inc outsl add (bad) push pop rclb add insl fistl repnz jb insl cmc (bad) mov mov aad std (bad) lahf xchg xor mov push mul scas pushf or stos loope dec popa jnp ds daa and jp push mull jns lock das lret mov pop popa call or xor add loope (bad) int3 stos cmpsb repz mov pop jo push xor or popa mov ljmp loopne jbe xor out or repnz push aam mov pop ret insb inc inc nop insl loop enter jo int3 mov adcl cmp lcall pop cmp push ds fsubs sub stos cmp sbb add push fistpll jl aas (bad) pop add jbe cmp push dec jmp or ss test enter dec cs imul sub fs dec pop in inc jno dec add repz xchg test mov xchg sub icebp jo fucomp mov jbe cmp cltd jae inc xchg ljmp sub inc and sbb xlat enter cs call call sbb imul sti ja sti cltd popf xor stos lods mov xchg fs push into les in pop out xchg popf mov test push sub jbe or adcl (bad) inc cltd jle or lea add cmp mov sarl pop add imul xchg hlt xor and fistp or add in sarb int lcall mov and lahf (bad) imul stos and mov out fwait mov sbb addb inc xor mov gs daa cmp xor sarl mov out pop movsb sar mov add xchg push repz add lret and mov imulb int jecxz mov psubsw sbb add out push jne xor xchg sub pusha in inc jb mov push loope xor call xchg imulb div fdivrl lea aad push sbb adc cmpsb mov xorb dec push insb mov aas loopne mov cmp test cmp out sub arpl ja pushf stc (bad) scas lea pop nop popa cli pop adc lcall pop push sbb (bad) mov test aam xchg sarl mov lock nop call cmp arpl push cmp in inc int3 push hlt fs jnp mov cmp cmp scas cmp push in jle add daa lret cmp cmpsb outsb cmpsl push fsts mov pop sub push pop fdivrs cmp push adc inc out inc mov sbb inc push jnp jno push fisub adc (bad) jno stos (bad) xor fstl cmpsl mov fsubl mov mov add lods sbb fisttp stos outsb xchg iret push pop (bad) or mov pusha arpl decb jg sbb cmp mov or test das (bad) mov sub lcall outsl fisubr (bad) scas (bad) or inc xor inc xor push push xchg adc into mov movsl int3 jle shrb leave add jno cltd stos cmp adc mul push xor cmp adc mov dec sbb xchg (bad) inc leave sub aas in test adc xor or pop or sub enter dec lret les cwtl cmpsl test pop or loop add mov dec fdivrs adc push sub aas arpl push push cmp ja pop ret inc cmp dec jge mov test clc icebp lret xlat test arpl iret push and test in cli xor lock (bad) aad sbb xor adc pop or dec sub (bad) rol dec dec cwtl movsl jb inc dec andb jnp aad adc ret nop lret push or test lods xlat jp fadds xchg cmpsb pop out into test cltd loope leave pop leave and cli mov push lret je jle (bad) arpl fs sti imul enter test popa add xor jns sbb push inc cmp xor push sti and pop je (bad) das or mov dec cmpsw fs in jp pop setb int adc into rcrb dec pop sub or test and jae sbb (bad) fcom icebp into ret xchg out les adc add mov pop aaa out shr aas fist push addr16 xchg mov je movsb xchg outsl aaa into insb fs nop inc jne insl test or cli mov dec xchg arpl sbb test imul xor push testl lods fmul cmp dec adc test cmp test xchg subl arpl imul inc or pop mov pop (bad) adc ljmp daa or imul fidivrl or scas lock xchg mov pop (bad) xor adcl push in inc movsl adc ja scas sti inc adc movb jns movsl pop jg push shll fimul mov (bad) mov sbb fdivl mov sub sbb inc adc rcll jecxz xchg cmpsb rcrl shrb insb and out push test rcrb xchg shrl xor jmp push (bad) jb jb scas mov (bad) cwtl gs pop mov (bad) mov jl push lret adc jg (bad) jl pushf andl addr16 inc (bad) cli (bad) scas in jmp into in dec inc push enter addr16 les adc ftst add cmp std test and cmp loope stc mov decb push sub xchg xor in sub jmp lods sub inc clc and es push gs cmp imul xor mov or inc movsb data16 aas adc xchg xor shl mov idivl dec cmp jnp movsl adc and sub or xchg pop adc lea or cmpl push mov jb lahf add mov inc addl movsb push jle rcll (bad) fincstp push cmpsb cmp lods sbb fstpt mov lcall add dec mov imul push inc in and fildll mov xor dec push addl aas repnz mov cmpsb xchg pop sub fwait jae sub xchg ss mov jecxz (bad) (bad) (bad) pop test mov and (bad) push push cmc lahf mov (bad) imul inc pushf (bad) movsb arpl fisub jmp lods mov add shrb daa mov stos mov mov xor and faddl or popf mov push or cmp incb dec sbb jnp cld xor inc cmp pop pop std xor outsb sbb inc cwtl push and xchg push adc rep sbb lds cmp cmpsl or jle xchg roll out mov pop (bad) cmp mov or pop and xchg sub cltd jb inc scas es and xchg mov dec call xchg mov mov mov aaa xor pop (bad) repnz movsb leave and sbb std nop and cmp push insb jge cmp xor out mov in insb mov inc lea sbb xor nop push insb xchg lods ja push mov scas scas bsf cmp enter mov and adc fldl into adc in sti negb lcall rcl adc cmp jno imul or jns roll iret (bad) jp cmp jo aad add add sbb mov pop test popl mov adc push dec (bad) sub sbb xchg adc mov aas test cmp mov lds js loopne push adc (bad) (bad) jg xchg xchg fstps add sub xor xchg cmp cmp inc jne xchg mov loop shll push push xor aam or subl into dec and dec inc rorb call pop lds jne jbe dec iret out loop dec inc or adc cwtl lds sub and push stos hlt (bad) lea movsb inc mov mov loop mov ja mov mov xor scas loop adc add (bad) inc fisubrl lods out xor out into in mov or incl and js and or mov adc jns push adc popa dec cld xlat (bad) xor adc inc lcall inc or xor fwait and shrb scas loop out pop scas hlt sar mov (bad) lock mov xor jnp cmp lds inc sub mov mov xchg mov in pop mov (bad) sti in push adc push push fcmovb stos mov xchg ds out in lods xchg xchg (bad) jmp pusha sbb fsubs sbb arpl movsb mov sub es jl sbb mov scas push sbb mov ret lods and xor (bad) pop clc cmp sti push and jecxz ja pop int3 mov push loope arpl xchg (bad) fwait inc mov shl mov (bad) mov orl (bad) sub mov mov pusha or fidivl aas add ljmp mov push (bad) mov jl jecxz push inc sar mov pop outsl in push xor decb or mov jle xor jle leave sub jns or cltd (bad) xchg push mov pop cmp inc inc iret loop cmp add pop lds loopne fistp shl sbb lahf inc std pop fs loope push loopne pop sbb lock add cmpsb xlat dec jae inc repz push leave mov clc and mov loopne (bad) psubusw push xor inc or (bad) sti movb mov call mov inc push ret iret pop mov and sub (bad) cmp stos inc lods dec and in std loope lock mov sahf mov push mov mov xchg cmp push in inc cs movsl test lret rorl cmp xor and into pushf pop pop push inc out or add cmpsb es xchg xchg or adc mov nop lods mov subl inc push jle lcall jno test in push dec push jnp (bad) subb add sbb mov leave jb dec push jge inc push aam lea fidivrl jnp pushl es xchg cmpsl iret jne cmp push std push mov sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 sbb xor push push paddw lock dec pop mov int3 int3 ret imulb jbe incl lock dec mov jl sub (bad) movsb mov xchg mov xlat enter mov stc cli dec out sbb push cld mov nop push push jle aad inc jbe inc dec cld imul test xchg mov dec dec imull ficom in inc outsb lea xor popa inc inc test rcrb mov mov cmp loop sub mov xchg lods mov push mov enter frstor inc cmp lds adc es jbe cli fwait adc sub cmp xchg xchg mov jne dec test mov cmp movsb out dec dec add mov mov jl stos iret mov ljmp adc push sbb and jae (bad) fisttpl lcall (bad) xor mov popa mov cmp test dec cmp out in xor pop stc cmpsb test (bad) push cmp outsl in test jbe xchg mov clc mov fcomps dec std cmpsl paddsb xlat addr16 pop sbb arpl dec jp lcall add arpl popa cmc push inc es jne ror (bad) jl adc and add cmp cmp andl stos js out and xor adc mov imul adc add je adc jb (bad) mov and (bad) les pop arpl (bad) sti sbb push repz adc fidivr dec xor adc loope cltd adc mov jne mov in xor sbbl fistpll sti jmp fwait jo mov push clc add push jle mov or scas ja stos adc imul mov mov push jmp add sarl mov cmp mov scas (bad) push xchg (bad) imul sub mov push scas push mov iret dec jl cmp (bad) mov sarb addr16 ljmp adc (bad) (bad) xlat and inc cmp lods or imul adc into pusha fdivs out shrb addr16 int3 mov js movsl aad push arpl leave jnp mov test push insb xchg adc or data16 mov jmpw stos rclb cmp aad mov push jo fbstp sbb sbb push fistpl dec sti jg fstpl mov dec inc inc pop inc mov cmp add (bad) jge cwtl (bad) push xchg mov mov std jl push jno dec mov cltd xor (bad) lcall jmp cltd out push push ja aas pop outsb cmpsb xchg cmpsb mov mov dec mov cmp jb or das push sar jbe dec sub in out test jmp adc push test ret mov stc mov std cmpsb cmp test dec push push lods call ds cmp pop fdivs inc f2xm1 mov rclb and fcomp inc sti fcmovnu xor aad push cwtl sbb dec push push add jmp jle or push rol lret inc jne cmp jno pusha jns or call lock xor in pop push (bad) mov dec cmp loop stos imul sbb (bad) inc dec in fsubrl out jmp lcall addr16 lea add pop imul or lcall ss rcrl jp jb xor insl fs jo push in in in shrl in sbb les ja jbe and pop and push popa sbb jbe mov scas pop jp jbe xchg aas rcrl je daa jmp add insb cmp and push sbbl adc mov ds and inc lock pop push xor test test push jns fsubrp std adcl jle xor sbb jo jmp jl scas je (bad) cmp hlt daa insl jo jp (bad) mov loop push divl jmp mov out sbb pop mov aaa (bad) lock sti inc push fwait push mov push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 