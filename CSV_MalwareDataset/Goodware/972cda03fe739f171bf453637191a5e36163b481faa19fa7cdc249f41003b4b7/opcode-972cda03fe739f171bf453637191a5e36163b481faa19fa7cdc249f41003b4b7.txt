idiv (bad) pushl rol push mov call mov pop ret mov mov test jne pushl je cmpb je dec ret adc or cmpb inc ret test mov add mov cmp jne or je cmp and in sbb call lcall lsl ret jne sti (bad) jmp shl jge je mov inc jle inc push jmp add aam outsl dec in lret les (bad) mov lret test inc test sbb mov (bad) (bad) (bad) jle rolb lock call out mov dec test jo push je into in dec lea sub ret or std cld aaa clc lcall es inc shl sub lea push movl pushl add push pop add pop add dec jne pushl (bad) or add clc pop lea push lea or mov movsb dec cmp pop add fisubr in adc push or mov (bad) stc or inc add rcrl mov add mov (bad) je push int dec leave sti out pop mov dec add sub sub test add ficomp fist inc subl jbe aaa daa mov clc mov xchg sarb pop cld xchg cmpl test jl and cli movsl xor pop mov clc push jg dec pop repz adc (bad) hlt push clc nop or inc jno xchg fbld mov test add cmp lock mov test jne mov shll add sbbl push stos lret xor in arpl cld add pop sahf sbb test fwait sbb or push hlt add and add lock lock push mov add and out mov cmp andl inc add loopne and and cmp inc jg lds hlt fnstcw imul (bad) data16 incb fldcw fistpll insl (bad) cmpsb mov push clc adc mov and clc xchg or imul jno mov xor loopne push lds (bad) enter fildl xchg mov mov call xor cld nop lea inc xor push loopne cs sub xchg cmpsb xchg cmpsb add and dec sub pop and push iret inc pop jno pop fildll out sbb and xor (bad) clc pusha je cmp pop test and psllq fdiv mov out jmp or push mov jbe push dec adc adcl aad imul loopne xchg push jge sahf enter adc cmpsl (bad) dec jbe push adc mov push dec fsubl clc call push andb or stos rcll push daa nop (bad) ss scas mul dec xor xor add imul div hlt inc adc push lock bnd inc jp sbb pop imul pop add add adc push dec in mov cmpsb daa add push push push push push pop testb jne cmpsb (bad) sub cmp add adc adc mov jo dec jns adcb mov stos in cs (bad) xor clc scas push add xor ss std mov clc hlt pushl clc mov test jecxz jb dec sub in in stos adc call cltd xchg call nop mov clc stos sbb inc mov and lds xor pop inc addb jmp adc xchg cmp push add or and jno inc stos push test mov rcrl inc sub xor push repnz rorl add pop (bad) dec pushl scas add cmc ret push leave aas cmp xor icebp sbb mov fdivr mov int stos add adc push adc push outsb or ss lret adc test pop rcr outsb push inc sbb or pop lods or adc pop dec jne fcmovnu int (bad) mov btrl push (bad) fcomps mov cld push cmp jg push push mov or cmpsl aaa xchg pop pop cmp jl add pop movsl and rorb pop jmp bound push dec dec jae bound popf mov pop add loopne add jns jge js mov adc outsl add push xchg xchg outsl lock test (bad) sbb mov imul rcl mov mov dec cmp xchg rcl xchg loopne test xlat sub sbb sahf add pop pop push adc add inc mov or add push xor (bad) fld (bad) je add mov icebp lock jmp push add push movsl movl out (bad) inc jp or xor je dec and movsl mov movsb dec jne mov sub cltd adc add pop push push jl inc xchg and in mov adc push xchg xorb pop mov pop xchg (bad) fmuls ftst fnstsw test je fnstenv outsb hlt loopne sbb pop jecxz add xor fidivrl fdivl loopne rolb push sarl cld cmovg movsl jbe pusha cld xor es data16 cs add push add aam cmp inc add dec sub mov jae es mov int3 cwtl shlb add int3 add cs test jne mov add jge lea stos adc and and adc in out scas loopne mov cld xchg push stos cld pop mov or mov and fstpl popa dec xor lods xchg push aas pop (bad) xor in hlt loopne iret test loopne xchg add xor pop adc adc sbb push mov jge sbb aad add or sbb jecxz mov adc rorl sub inc adc sbb loopne push push cmp sbbl (bad) mov pop sbb jae fabs lds pop xchg xor rorl adc imul aad frstor or cmp add inc mov add push push inc xchg mov inc fwait pushf cld sub jecxz call and shlb fiadd nop shrb clc in dec mov and sbb mov (bad) cmp sbb xor sti pusha or adc sub leave cld mov sbb jo outsl inc push out sarl test incl push pop pop test jns push outsl xchg outsl sub lds inc stos sbb push inc adc sbb or and xchg pop jge add or es push mov mov inc mov or or rcl icebp xor mov sbb or insb cmp loop and xorl inc adc inc and in fs sub dec dec dec push enter add push jbe and out pop dec pop ret dec cmp ss leave sti and mov sbb sbb cli movsl add adc push mov pop in push (bad) rclb scas fucom lea or pusha pop imul mov mov in aad lods mov and leave hlt hlt jge mov fstl xor push lock and loopne and sarb jl sbb inc and mov rcrb leave mov adc test je push fsub pusha sti in gs push push pop pop dec rep jl aaa jne movsl and cltd test (bad) (bad) mov xor subl xor loopne popf cmp ret mov dec adc add test mov push ss fucom mov leave push mov cwtl xchg jecxz cmc insb dec jo andl sub add js out fstpt sti je repz add cmpsl mov or (bad) lahf add inc pushf inc dec cmp mov mov pop mov and sbb xor clc adc clc sti aas fisttpl (bad) mov int3 xor jle mov scas rcrl mov sub ficomp xor fist clc sbb xor jne pop in xor xchg mov add out pop ficom inc (bad) je push popf dec jmp xor or jl pop adc add inc mov stos addl xlat add pop and andb (bad) arpl movsb cmp in lock fs sub lock sbb dec dec hlt clc lahf loop test sub cltd jge ja adc add nop cmpsb mov add int stos adc dec or mov test dec jge and arpl and ret sub push xchg adc jl jle sub sbb stos adcb lea xchg push notb hlt fistl inc adc cmp gs ljmp test fcoms leave mov fcomp aam jmp add repz aaa sub jmp scas repnz xchg or or adc inc pop sub out clc mov sbb popf or daa jb sti cld xchg jmp cmp adc cmp mov (bad) jne mov in and insl and or (bad) stos adc sarl ret push mov lods lcall stos adc vsqrtsd pop xor sub sbb dec inc pop test sbb xchg call pop xchg sub test in jbe imul pusha icebp push mov pushf or mov cs shrl jmp or and adc pop adc shr cli adc xchg push lock insb test enter clc mov inc jno pop inc and mov jl jo adc ret pop push shr test or lock (bad) and loopne sbb cmp and test push inc lods (bad) sub fisubr rclb or jmp mov out add add or and sbb cmp or dec int fsubl sbb or rorb pop add xorb sub cmc add xor sub in push push mov popf leave push daa in xchg pusha mov in pop (bad) inc add movb repnz xor fcomp push add (bad) cs add subl jmp sub xlat add fcomi rcl dec loope pop add jecxz xorl xchg arpl in add mov in orl cmp jbe pop add add je aaa pop or push loopne xor adc mov repz and or sbb inc xchg sub fwait or leave adc add lods jo jo xchg push add xchg dec clc cld sub sub and or xchg cmp jge andl adc ja and add and xor inc or sub (bad) cmp cs addb sbbl dec dec and inc roll mov sahf minps push add fcmovnb test xor push inc sbb xchg mov or and dec dec (bad) xor mov push (bad) lock cld fninit push cmp push je xchg xchg mov jmp jb or cs fs jl pop sbb jae int3 add inc or lcall push je add cmp ja pop jbe test ja push aas orb push mov or (bad) repnz adc and pop not mov add add or cmpsl sub jle dec cld mov ret arpl mov in aaa je adc je cmp or cmpsb sbb popl (bad) push popa add dec jnp or rorb xor sub (bad) out cmp shrl aad push loop pop mov idivb xchg add das mov je lret je or or xchg add add sarb je out adc clc sub push mov adc insb sub xor mov or add mov inc lea fldl fcompl (bad) or out rclb inc outsb fcoms cmpsl out mov frstor cld lods mov pop cmp mov adc jne and pop sbb sub inc or fstpl lahf lret aas xchg out fimull je push mov mov add call je dec jne xor jmp or add or fsubrs jecxz adc bound aas or pusha cmp push push and pop dec mov push (bad) fs mov jl sbb stos xchg (bad) mov (bad) jo inc out imul pop sub xor jl or sbb jmp sbb iret les cs in mov or dec pusha cmp js mov lcall push add add sbb jle jae adc rolb add sub sbb cmpsb mov push outsb js push jbe inc sarl or insl lock cs jmp in call int3 push and xor xor push push (bad) inc pusha mov outsb scas inc jmp sbb adc lds pop jbe sbb mov cmp or dec pop (bad) ljmp pushf push add mov inc and add in and pop fldl das popa in dec test pushf sbb enter gs fldt mov scas into (bad) je mov xor aas push add jg stos sub rep add ret movsb xor pusha cmp jle rcll mov cmp pop mov mov mov xor or pop orl fist icebp sub add lret or pop push sahf fistl je mov push sbb jg jg dec js cmp jge sarb lea cmp jle sub adc adc sub sub pop adc sbb push ja push push push insb je and call (bad) push xlat (bad) dec mov mov js adc xor dec sbb mov dec inc setl dec and push and sbb jg (bad) sub sub (bad) jl push sub sbb lock mov dec out mov jg,pn or lock mov push out xlat push stc stc mov dec sbb out ret jne xchg jle pop jecxz out push lock pop stos pop out idivl ret dec addb rcll push testb cld or (bad) cmp pop mov xlat jg (bad) fiaddl push jmp mov mov into repz loopne sbb jne inc das psubsb inc mov movsb pop xchg mov insb sub add sub jge pop cld sbb sbb inc sbb xor dec leave aam aas jl aas add push fwait scas push push mov and mov xchg xor stos mull dec push xor and mov or lahf frstor cmp pop push push pop jl test notb cwtl sbb fistpll or jp pop sub mov jmp test or dec add jnp push inc adc jmp cmpsl and movsl popf je sahf inc pop (bad) hlt rorl sub lea mov imul pop push and fcomps loopne xor imul lods cmp ss inc pop sbb or jno and fs pop loope dec repz or movl and pop inc sbb daa cld test mov insl xchg movsl or lea cmp dec ret ja enter mov (bad) test cmpsl inc push dec repz ja inc sahf and push mov hlt sub gs sbb add mov (bad) imull imul mov daa ret add push add pop popa sub fisttpll xchg out addb fldz adc hlt outsl imul rcrl dec fstpl pushf scas in sbb (bad) push lds adc inc popf xor push pushf sbb add (bad) fcmovu and (bad) mov lea sbbb cmp xor pop repz cmc jne cmp adc xchg adc pop cwtl arpl xchg xor test mov sbb stos cmp adc ret cmp pop push jl cmpb push test mov daa pop aam roll push sbb mov jbe xor ds and cmp pop leave aas cmp xor jle pop mov mov leavew test jmp xor cmpsb mov (bad) mov pusha push inc cmp inc and aas push dec fnsave insb add enter mov addl faddl adc xchg xchg mov xor sbb std dec pop loope lock jne add pop mov mov (bad) sahf fiadd sub sub add (bad) aaa rcrl push inc rolb (bad) and mov or loopne sub jle ds push sbb sbbb or adc imul xor mov imul adc rorb jmp pop pusha pushf ret (bad) je inc cmp cmp xor cmp (bad) mov xchg ret sbb mov xor movsl mov mov sbb jecxz scas mov sbb test test (bad) je mov push fist cmp int jo jge (bad) push cmpl popf iret add sub cmp or sbb repnz mov jo adc aad fild mov mov dec repz mov sub ja push call add sub cmp stos je dec mov je jmp mov lahf mov jl sbb adc mov jecxz inc dec jmp push or sbb sbb outsl aas add push jo test jmp push lea mov dec add test and test sub push cmp push in pop fbstp xor call fild clc fnstcw pop xor xchg sbb sbb sbb sub mov jge imul ficompl jmp cmp pop add xor cmp sti or movsl shll or push out add lods loope sbb sbb xor outsb pop sub pop xor cmp cmp fs mov (bad) mov into mov mov mov scas movb jmp loope rep adc add add adc fistpll loopne mov repnz add pop cld mov aas cmp xor cmp mov insl pop jno sbb mov xchg jno stc int3 addr16 sbb mov add jmp sub adc or pop pop lcall inc pushf ror ret and and cpuid imul mov mov push mov lea sub add sbb sbbb in jecxz and push push push stos pop lock xlat icebp inc mov fs sub add insb jl and adc fstps jg or lcall push sbb dec jno push mov daa adc cmp jge call mov push adc rcll inc inc icebp (bad) push loope pop or sub jle lea push jno push jecxz dec (bad) je hlt push inc cmp sub or data16 mov add into pop jge or lret in cli in or je xor sbb xchg inc rorb mov or movswl mov push push and mov push push xchg (bad) (bad) mov in pushw cmp in enter or loopne push mov mov and or stos mov pop fs test sahf inc fs addr16 xor push jne mov and or dec mov sbb mov sub mov inc je imul push push outsb ret inc call push aam jne out jl push fs je aaa adc pop or pop (bad) dec lods loop cs mov int3 add push add roll mov dec fsubr push pop sbb add inc add test adc mov push sub sbb fild add sbbl or or lret mov adc sbb pushf ror push dec mov jg bound adc out scas pop or push dec pop or xchg aaa adc out enter cwtl test loope cwtl mov and call push add jmp add enter or sub iret lahf in and xchg add sar jnp repnz leave cltd adc add push xor pop xor dec add pop fsubrp push adc imul push cs out mov or insb aas in jbe xor std add add fstpl inc xor or lods test sbb xor or adc adc pop or out push cmp (bad) or adc sbb mov fimul (bad) icebp add pop xchg ret dec inc adc and mov fcoms sbb sub daa ss scas xor or mov cmp loopne sub push test xchg ret and inc test cmp je je add adc pop jl sbb scas les sti adc mov enter and add xlat mov mov movsb les (bad) aad xchg jge lock out cmpb testl call fs fstps (bad) movsb and les adc push add incl aaa jp cmp jge lea add lock add mov test jle push push jo imul push dec into sub icebp sbb imul fsub push mov mov pop sbb cli xchg sarb ret pusha inc sub jae pusha stos les stos rcll adc in push cmp push test int jo sbb pop mov jne sbb sbb fnstsw mov push jg sti sahf clc arpl add sub decl add scas sub bound jmp mov adc adc xor or mov mov xor mov or jmp and add mov push lret push ret jp (bad) mov lds sbb lock repz lret push xor and xchg dec insb push xchg xor out (bad) punpcklbw push push fwait add mov or add sub sbb push push pushf into call sub pop lods faddl mov and (bad) loop cmc je lods movsb pop mov push imul sub mov idivb xor sub iret xor out je push push sbb sahf out inc inc dec dec out shr pop and and cmp push push push jne insb push into mov outsl jl (bad) adc push sbb pushw xor mov push adc xchg mov mov sub nop addl dec fucomi jno hlt shr es add sbb push sub incb popa xlat push (bad) mov ljmp xor ja hlt cmp in shrl movsb sbb push push popf in push divl push pop mov adc movsl adc xchg jne push cmpsl sbb outsl jnp mov rcrl std sub dec or sahf js jp and xor inc xor mov sub das fdivr pusha push push push int3 xor push mov daa js pop push add push xor pop mov inc push pusha hlt sbb dec xor test ja subl or or adc xor jne inc (bad) push or aad sahf fdivs je or push cmp push sub stos aam push dec and iretw jmp lods cmp dec pop mov pusha jmp cmp pop and push imul cmp pop xor sub cmp push lcall push add je rcr fcompl daa and adc pop pop ret adc scas popw push sbb xchg mov icebp dec inc stos hlt jge movl js xchg pop cmp mov sub add xchg xor mov inc adc pusha or pop aas xor mov int3 mov call movb adc jmp (bad) mov sti test inc dec dec pop sbb push mov out sbb and mov aaa mov push rcrl add push int3 jmp push add push (bad) (bad) pop xor mov adc arpl pusha lock mov add push pop ret test xchg or jle jg sbb add adc fsubs cmpsb add test (bad) cmp adc pop cmp adc pop mov sbb sbb push ljmp (bad) lahf jle ret jne cmp mov aas je pusha mov push push push dec fs imull add mov inc mov sub or dec or jno out outsl lods adc lock mov sub inc fidivrl sbb in mov push enter pop jne or dec lock inc lcall outsb push popa sub mov jne mov pop jnp inc or push (bad) lcall push insb sub lea cmp jb add aas inc mov pop mov sti or jl cmp or int stc add jg cld sub jbe push jne lea jae mov test cmp lahf adc cmp jge xor idiv and movsl mov movsb cmp push cmp pop daa adc loope js sbb or mov push push ret mov hlt jle or push shl push cmpsl xor js imul or je mov inc clc jb lea cli jae mov pop sub sub cltd and sar sbb xor or das mov fcomps jo push or rolb (bad) std inc mov add xor xor add jmpw push test sarb fisubrl lock mov mov sahf xchg in fild sbb dec push fs fildl sbb sar xor pop inc or push or or mov loop rorl adc pop mov or stc or shrb xchg and sub adc enter or mov dec aaa mov mov mov jle push pop jo lods dec push inc sub iret das inc ja (bad) outsl inc dec sub jbe sub cwtl push dec call cmp sbb test mov jle push popa inc into ficom push fwait ss (bad) add clc lahf cld rcll fsts dec loopne push jecxz pushf mov jnp (bad) not or stos and add lock jl jg test out cmpsl xorb xor dec lock je adc lret dec jns push aaa add cmp je lret daa xor (bad) (bad) nop loope inc or nop ret push mov dec lret addr16 test cmovo mov int3 dec sub in mov mov jg enter xchg or and lahf xor imul in roll ret xor mov scas push mov je sub cmp pusha lock aam dec adc neg mov sbb (bad) js xchg mov cmp aam cmc icebp push orl sub sbb call adcl lret (bad) dec cmpsb ret or push pushl pop push mov mov scas jb adc push fisubl pop pop inc pop push or add cmp jne icebp push pop lock adc clc movb fldt xor push pop lea mov lcall jge sub lea stos sub fcompl jmp outsl xor push nop push add iret pop insl sbb sub adc imul lea jmp push cwtl loope sarb leave push je sarb cmp mov sbb flds cwtl popl cli jns mov cmp push jecxz jge inc or mov ja das push dec shrb ret dec fsubrs ret sbbl cmp movsb mov std push inc test cmpsl xchg push push fdiv cmc popf in inc add mov push scas loopne insb dec cs inc jmp mov fsubl xchg jge inc (bad) adc push add push push inc in xor mov and push push inc push mov sub push or pop fdivrl mov repnz jne and lds mov sarb jae int push (bad) icebp icebp jno iret adc rol stos inc or (bad) mov jge fidivrl mov sub cmp jge sub mov popa cmp or sbb xor scas pushf fsts adc pop push sub bound fcoms into or mov push (bad) clc int3 arpl daa fnstsw out or adcl push mov jmp addl pop (bad) cmp sti push mov add stos movw inc daa add ret mov dec adc adc cmp test dec or xor inc or mov jle fmuls add enter pop push push jbe or aam rolb or xchg adc dec or lds inc lahf mov cmp lahf mov cwtl push js sbb pop into push aaa jne sub movsb xchg sub or dec movl xor push cmp sub xor and sahf mov mov push jp cmp minps fwait mov clc es fwait push push call cs push adc int fadds mov jns iret xor push cmp stos pop fidiv insb mov inc je inc sahf add add jnp and xor cmp mov jo xor insb push iret push dec add enter popf mov std decl mov lahf xchg cmp push push push sbb sub inc xchg xor xchg sbb cmp xor or cmp shrl mov testb js gs xor mov cmovbe xlat mov test add pop mov adc or xor loope jp push mov out mov pop daa add sub sub add cli add mov jne pop adc mov js ret ret add cmp aam decl test int3 add mov cmp sub test inc and add mov mov jle dec push push vsqrtss cwtl in repz sarl sbb sti sub leave mov lret repnz or mov adc and jne add lds ljmp adc cmpsl scas in jo add pop aaa sbb xor lods sub adc fstpt fistp push push push testl pop je sbb lock lea and cmp je inc jmp lea loopne nopl ret pop andl bound (bad) add rcrb cmpsl push jb pop repnz adc jnp push cs int3 push jnp inc push and mov fs mov (bad) mov jno int scas push orl push jne cld ss sbbb add add insb mov or or xchg adc adcl xchg xor mov jb xchg sub inc inc xor push dec mov call or mov push sub cs cmp dec jg addl mov into ds shr sbb aam sub in movsl xchg jle mov jo imul or sbb push bnd jge addb fwait in test imul (bad) pop test jge add mov mov scas mov adc mov insl cmp inc sub cmp loop push mov mov push pop cmc mov xor xchg das or mov sbb cld xchg fsubp dec sbb mov call mov xchg mov or insb or repnz pushf adc imull dec dec and mov lea mov jo je pop cwtl test adc inc inc mov cmp jg mov dec lea (bad) push inc push out xor ljmp out mov add pushf stos pop mov shl pop dec call (bad) sti mov fmull push jno and mov add in or add lods (bad) das adc in jg mov cwtl adc xor aaa mov push push mov cmp jne fild push mov pop push sbb insb add fcompl mov add (bad) fdivr or pop jne cmc insl fcompl leave push (bad) adc push aam cmp sbb pop das in fsubrs jl push movb subl cmpsb mov sbb push shrb mov sbb nop sbb iret popf test sahf or das dec popf push lods adc rdmsr dec mov sbb or dec dec fsub adc sub sub or sbb (bad) xchg or jge into push push es stos push inc lds pusha sbb adc sar add shr cmp into test mov pop insb xor mov andl xor (bad) inc xlat add insl ret cmp lods cs lahf add sbb or or fiaddl fucomip arpl or lock (bad) or push mov shrl dec xor mov cli inc out cmpsl inc jbe adc jnp adc bound add insb sbb xor add imul sub (bad) (bad) fstpl jle clc add mov mov sahf fstl add mov adc mov popa sub inc loopne push (bad) out sbb (bad) add jnp xchg push fmuls pop inc mov mov add dec lahf sub or andl xchg sbb push ret rcrl arpl add or outsl (bad) and add cli add xchg roll xchg cwtl xor pushf fdivrl mov push jmp cld mov popa pop sub fwait test sbb lock or sub ret iret push xchg bound xor adc int3 fcompl sub into movl inc sbb cmp pop push call mov pushf sub add loop jne xchg pusha mov in sub (bad) jne sbb roll out lds int3 push pusha lock pop pop repnz pop push xor xor faddl xchg (bad) lea add sub mov inc lds es movsb cmp push add push mov (bad) cld and dec inc and jmp inc inc pop cmc ret ret fs call jp cmp add push xchg push mov js add data16 jl sbb jle add outsb outsl ds or je jne sub je jne std insb xor jbe fisubr shll or shrl sbb or pop inc fwait rclb das add pusha xor faddl aaa je cmp mov adc jno dec push or cmp aaa push jg mov jnp sbb add jae or xor jmp xor inc pushf jl mov insl adc jg jl js ja das psraw xor setae or enter jg sbb dec xor rorl pop (bad) out push adc insb inc sbb lcall lods jmp mov fstps (bad) pop movsb int3 dec dec lea scas jl jl jnp jnp dec push fstpl jecxz popf ja xor fimull mov adc sub fcompl cmp das mov sbb pop jmp movb fistpll cmpl je aaa push pop jns push jne mov and loope mov je lds dec cmp jmp inc adc cmpsl xorb repz out and inc jb test pusha add and fneni(8087 ret xchg inc inc scas mov mov and cmpl shr xlat repnz push ret cmc mov push out pop lret sub mov adc cmp xchg push loop sbb jnp sub imulb inc dec outsl pop in push sub pop pusha add nop pop inc cs add pop pop roll mov sub stc adc aas popf jo cmpb jmp sbb add adc dec rclb sar test and mov cmp or (bad) cmpsl mov adc jmp adc lret pop push push (bad) dec test rorb cvttps2pi add sbb (bad) cmp rcll mov inc mov jbe sub faddp cmp fcoms mov psllw adc les test ljmp cmp sub fldenv add rcll push rcll lea mov dec or xor xor arpl aaa inc dec repz push faddl icebp rcrl ja negl xchg pop xchg xchg pop cwtl stos je test js and push popf inc lahf dec jecxz sbb das loop insb shr sub push call mov out inc bound popa mov pop out lea xchg js or lea mov inc js push push cmp ret cmp cmp sbb pop js fldl cmpl xchg jo fcomps pusha inc or adc push or pop pop jg nop fildll push popa xor movsb add inc dec mov push sbb cmp cmpsl cmp mov pop xchg cmp pusha lahf cwtl repnz or lcall xor pop push dec xor pop clc add sub ret mov shrd into shrl fiaddl adc orl pop pop ret cmp mov or inc dec jg nop xchg ret lahf enter xor inc rcll dec jo mov ret (bad) dec cmp fdivrl flds push addr16 mov mov jle insl adc sbb cmp in and cmp jo scas and je push loop xchg push mov cmp push sbb pop lods sbb stc xchg xchg mov (bad) movb xchg add adc loopne sub push sbb inc das in js lahf dec and add xchg sub xor nop inc mov jb xchg or pop jp sarb mov nop mov cld pushf outsl mov gs daa cltd mov lock push sbb jne or jns mov daa (bad) bound xor push pop and clc mov (bad) mov add sbb dec pop dec mov (bad) dec test sarb dec jle (bad) jge xchg sbb inc push cmovs sbb sbb cmp popf jmp pop mov dec sti pushf add push mov fist push push mov jl push insl inc push push js push jo fdiv mov add add icebp subl fincstp fdivr pop loopne or dec lods test add mov jb add mov xchg xor add into inc nop or addr16 sahf bound dec cmp out push pop fs push out das mov pop pusha push mov mov add cwtl jb jmp push repnz push daa sub inc cli xchg cmpb cmp ja js and cmpsb (bad) xor fild adc or dec pop dec push je dec lea mov push ljmp cmp shrl cmpl and jle fcoms (bad) aad bound mov pop xchg nop add cs popf sub mov je pop mov pop jle jl xchg int3 je or adc jo out add add lods jo mov je,pn roll mov popa cltd inc lret leave dec icebp les bndldx repnz test and push jl outsb out mov addr16 mov adc fisubr into push cmp adc clc jne jbe pop mov stos movsl cwtl adc pop andl mov fs cmp or rclb call sub jg inc fs scas dec popf lcall jo ret in or sbb andb xchg into add sbb (bad) cmpsl add sub inc test or jmp mov pop inc jnp push and or and or push lods sub inc xor dec test sub or sub dec clc push sbb push push fdivs or jo int cltd xorl mov cmp mov js mov xor mov cmc jb popa and jmp push cmp jae push push push dec inc push pop jae repz dec add push ret add stos (bad) cs push (bad) push add leave repz cmp mov or or call jecxz cmp jl and mov cmp pop mov add dec enter push xor pop hlt mov nop mov push push aam or push cmp pop xorb inc push adc sbb js shrl inc in adcb pushf div add pusha lahf je xchg loopne or fdivs outsb cmc sub sub jl mov mov addr16 mov sahf sub dec or add push cli or mov add jnp js je adc sub adc (bad) clc adc pop call ss lods js scas cmp jl push cmp jle lock fisubrl jl push jl icebp or rclb gs inc fisttpl mov or fcomp jl cli push iret dec jp sbb inc fxch fmul int sbb daa dec gs out add subl dec add in sub jmp ja (bad) adc fmull pushf and pop ret add std jns adc fbld and mov push push insb adc inc cmp jnp jecxz nop fs jg push push push dec cwtl (bad) dec sbb enter test lea cmp jge daa outsl pusha clc and cmp xchg aas xor push add add mov cmp popf fiadd dec jmp je pusha push mov push push jp lods icebp sbb movsl mov mov lret jmp sub adc (bad) or adc mov or inc or lock lea push mov add xlat mov xor imul dec mov jecxz jb je xor or xor dec mov add xor ficompl or rcrl add inc enter enter sbbb dec cmpb add add sub jle inc out repz in into sahf push pop jecxz jg add sbb jae cmp je mov sbb cmp and outsb fdiv sbb aad adc and gs lret adc lahf adc mov sub rcrb push rorb cs add or or pop imul adc je push loope insl stos mov scas xor add fcomps outsl stos (bad) fistpl push push mov pushf fldenv sbb loopne and and aas and mov cmp pop ret fld add xor sub rolb pusha push adc std and dec pop mov ud2 sbb call lea xlat push loopne cmp inc dec push pop mov add xor push push and add sbb add incb xchg roll inc test imul sub mov mov push xor sub enter das or add cld dec and iret dec push divl movsl cli fstps leave and pusha pop and ret imul lds sbb inc xlat aas push jmp aaa push mov pusha mov push xor out aad lea je or jne call jmp or adc push inc imul ret and xchg sahf jl mov cmc into fbstp sub sub push inc (bad) movsl je push push jo adc ret pusha lock icebp sub pushf loopne lahf inc pushf add jge (bad) sub dec loop jge lock push sbb movsl (bad) jmp and sub inc add cs pop leave icebp pop push cmp inc add das sub jle and jmp xchg add push in inc or ret and je arpl jl mov mov push push jmp push (bad) scas or inc mov xchg test inc sub cs adc ss imul add aad mov in addr16 out sar arpl mov xor lret and xchg sbb and sbb push sbb sub jne jmp in cmp mov cmc push mov in sbb fs jmp ret jnp insl push mov inc vucomiss sbb adc jg sub arpl loope rorl sbb push scas pop and sbb adc cmp (bad) xor add cmp inc inc push sub or repnz and pop repnz ret enter cld xchg nop add dec repz mov nop (bad) pop lahf jle jl xchg addr16 mov push push dec pop adc sbb xor orb aaa or (bad) xchg loope jno jle add sbb test mov mov push cmp and adc xor into sbb sbb or cwtl add loope inc je icebp rorb aas sub je adc pop mov mov repnz xor notb rorb push sub add jle and das ds js dec jl push loope sar xor cmovo xchg xor movsl rorb sahf repnz xor sbb dec cmp sub push les cmp pusha mov or mov inc rcll ja mov dec xchg push mov jnp jo in push pop ja clc popf test add jmp mov jmp sub jmp add adc ja jmp add cmp je lcall mov mov sbb adc push push jle (bad) aam shrb add mov (bad) inc rcl mov pop push pop lea mov and insb add dec xor add paddw pop cmc cmp adc cs sahf or adc add cmp xchg mov or sbb and lock or dec xor lahf sbb push imul ret lods mov sbb xor push push out xlat stos mov mov out pop popa insb push push leave int3 mov jns (bad) push and cmp xor rcll cmc add popa pop jns punpckhbw out flds sub in gs aas addb cmp add inc pusha sbbb orb xchg insb or and daa xor loope xor xorb (bad) sbb xchg xchg push mov in jb (bad) pushf sub test and insb xchg (bad) sub or lret loope fnsave pop adc sbb dec rclb or imul mov jbe xchg dec scas mov and mov pop sbbb call sub inc int3 clc fs mov test in mov daa sbb test push xor (bad) dec and cmp push pop inc (bad) mov int3 push popa mov stos add rolb cltd sbbb movsl test cmp mov pushf push dec mov rolb add fucom mov push mov les les aad leave mov clc jg adcl test fistl push ret jne,pt imul sub inc jmp mov push add mov pop enter mov push int pop pop sub es pop pop cld sbb adc jg je leave add push pushf mov dec call nop push pop jnp orb ljmp js lock ljmp fmuls mov mov xor sub push aas dec pop mov xor (bad) (bad) dec cld add cmp xchg dec mov xchg (bad) lcall mov pushf and mov rclb je imul push sub cmp loope orb shrl adc insb and add dec psrad xor fwait adc lock jns out test and pusha add xor jo jno add leave adc and or adc mov in lods xchg (bad) mov xlat cmp imul jge pusha pop xchg push add jno push pop scas xorl outsl mov or ffreep or cmp call inc test mov push push cmp popa jo pop push imul push (bad) es iret and mov mov pusha add sbb push bound popf xchg das push daa lcall push lea jg add cmp jae incl add add sbb mov push push push imul dec out hlt mov lahf fwait test mov jecxz (bad) cwtl pop data16 add xlat dec dec push data16 sti dec xor aas push xorl and cmp aas push jne dec xchg mov inc mov je imul push jns stos dec push push aas pop dec mov push stos arpl add test lods mov into cmc or or dec lock fwait rorl out test je push mov dec push rcll fistp mov iret jle and pushf adc pop add jne sbb sbb loope sbb mov push pop cmp stos add jnp sbb add or fcmovnb aas jbe jb pushf sbb lcall (bad) les (bad) (bad) ljmp mov xchg pushf popa enter jg lods clc and add stc pop xor addr16 pop jg xchg fcoml adc and xor adc daa sub ljmp cmp fdivr test pusha jle inc jo cmp or inc jecxz jle loope add fdivrp stos pop ret pusha or mov dec aaa cmc inc dec or mov mov push pop mov push sbb jl lea shll comiss mov in sub xchg xchg jb lock xor push jl xor and gs roll bound push std or adc mov movsb test (bad) mov fldt xchg dec and and bound or mov data16 pop leave jg adc dec js mov fiadd out mov jne mov push or (bad) or cmp jne or push jnp add repz and or sarl add cmp (bad) aaa mov adc xchg or cli sub fistp jo enter pop inc cwtl dec push adc cld adc push shll shrl movsl pop xchg add inc or lcall adc repnz sbb pop add inc xor clc add mov inc mov or dec dec lea mov jne jg addr16 cld rorl sbb cmpsl (bad) adc mov mov inc push iret xor push dec insb call xchg add (bad) and xchg sbb xchg adc cmp xchg push add addb sbb pushf lret int3 inc jnp aaa test xor pop je clc into xor push (bad) out mov int3 into repnz push mov push dec inc xchg shl fistpll add jmp lea fist or sub push lock push jb out or jae push add popf mov movsb fdivs rcr lahf ret jns cmc mov test add lds lahf dec mov mov in cmp push repnz add inc mov and dec add lahf xchg push pop or aad push push xor sbb push rcl xor je mov clc or (bad) sbb sub sub xor loop inc and mov pop cmpsb mov add mov push loop lea je or mov cltd adc addr16 cmp adc cmpl sbb mov mov rolb dec outsb inc xorb out iret inc inc pushf pushf add jae adc clc xchg test and les xchg inc inc lock add or pop sbb add pop cli cltd test sbb (bad) pushf xchg sub clc pop pop fstpt push mov dec dec fisttpl and sti mov xchg dec clc push popf ret and push dec (bad) adc push add xor lahf add stc inc mov mov (bad) test jg sub jle push or inc xor and mov mov es add movl dec add inc push sahf jmp jae insl cmp xchg adc add hlt sub movsb cltd add add mov popl test enter orb movsb enter cmp aas rolb pop mov cmp adc add rcrb mov adc xor or icebp add stos jae pop arpl movsb test and imul arpl sub mov inc pop insb xchg dec fnstsw jo pushf in stos mov (bad) add xchg xchg rorl dec ja add sub cmp xor xchg mov stc lahf xchg add sbbl or dec xor mov in pop push jb int pushf lahf in mov pop in add pusha dec sub and outsb xchg xor jecxz test jmp sbb add jae cmp loope add push push mov cltd dec jp lods lock mov scas pop or adc orl adc push lock imul sbb push push or or rcll cmpsl ret push sub mov scas add mov pop cmc aam mov mov add jae cmp in aas pushf mov imul pushf mov mov mov roll pop sbb sub pusha and xchg push mov and or and mov and enter jb adc push push mov xor in mov mov pusha mov pop stc flds loopne fmulp mov cltd adc pop xlat push adc movl and es mov mov cmp and inc std xor test jle add lods lcall inc cmp jl pop mov adc and push sub int lods out mov cmp fnsave sahf inc adc movsl xor inc cmp jmp or mov fwait mov mov shr out call sbb and cmp jl dec add int3 sbb jne pop stos or xlat jo popa je mov dec and add test mov stos or adc sahf leave pop jl loope mov lods pop push cmp pop dec add inc cmp jl push mov jl jecxz mov xor js jle adc xchg dec fcoml mov fdivs mov dec adc jmp neg sbb xor and or mov loop add pop inc cmp jl add outsb inc out inc xchg mov or cwtl push sub jbe cwtl pop popf jbe adc jne lock push out push mov mov sub cmp mov dec movsl add jne (bad) fldcw dec jmp nop adc jb mov inc add add (bad) jg mov mov push mov call mov int3 jle lahf jl sbb cmp adc mov sti mov mov mov sti mov andb add movl cltd mov or fs je insb jo je pop test mov sbb test enter mov mov cmp rol mov cmc add into add movsl shlb movsl sarb or jns dec call dec lock idiv stc dec aam cmpsb fist dec and frstor pop mov push mov arpl dec push dec dec bound sub adc push dec sub mov nop dec cmc cmp pop mov test xor xchg mov dec adc inc mov repnz test mov and rolb xchg stos jb clc or mov push (bad) fsubr push jl and adc movsl (bad) rolb or and leave int3 mov popa push jecxz pop cmc pop adc push notb jo into push aad mov subl mov sbb jb and movsb dec cli or dec dec inc and cmp cmpsl mov jb xchg or in addl mov add dec fcoml fdivrp or push das jbe sub sub aas push or or add cmp jmp add lock sarb cs xchg cmp fistpll xchg mov add dec out daa adc fistl xchg hlt sbb lea push pop and (bad) decl add dec and flds or movsb (bad) dec or jb call repz mov inc push pop add push outsl in push jmp cld inc dec clc dec popf roll jl jo insb into arpl in sub add dec and scas cmp jge xor movsl and js sbb nop cmp xchg je mov mov mov das or mov mov sub sub xor sub loopne push mov mov cmp adc in cmp es insl imul push hlt and sbb popa js add and and insb mov pop outsl aas dec mov int3 sbb cmp xor xorl dec xchg or popa push fcomps pop push popa push test xchg jle or sbb lea test sahf mov arpl cmpsl sub dec fs xchg or jecxz dec inc push sahf mov enter lock fs add push mov pop (bad) ret sub jl rclb xchg sbb xchg decl dec xor add mov jb cmp in pop push lahf jo aam sbb lock mov fs je je add mov ret jg push je sub outsb (bad) gs rol call cltd jnp loop call adc mov xchg and xor add pop and inc sbb pop pop aas stc and adc je dec bnd xlat add gs sbb dec jmp jo lock adc sbb dec cmp and sub sbbl int lock mov mov std aaa xchg mov sub cmp jge mov xor popf mov (bad) xor push scas pop (bad) sbb push pop push push push je fs enter and dec into push sahf out xchg lahf mov and cmp and dec jns cmp fcoms pop inc or mov sub jle test repz mov xchg xchg lods stc dec and push (bad) (bad) xor cwtl xchg or ljmp push jo xchg dec or dec lcall stos dec lret nop push mov mov inc stos dec mov repz and leave je shll sbb lods push fbld push stos sub inc cmp and test mov insl pop aad add sbb pop inc push mov ret or (bad) cli push jo inc xor cmp fisttpl inc sub xlat cmp and movl sbb add call dec pop fidivrl test jmp in (bad) mov cmpb faddl gs pusha or pop lock cli rclb out cmp sbb sbb or je gs push push lahf sub jo pusha and mov jg out loope mov cli sub fsubrs sbbl jno mov enter push lret icebp sbb add add push loope fcompl xchg fiadd imul push int3 cmc sub or repz lock xor movsl push dec xchg cmp sub js mov inc outsl sahf (bad) int3 gs push and cwtl aam fisttp call adc shrb mov jle and cmp aaa push adc mov sub je (bad) (bad) jge sub sbb or loopne pop mov sti mov ljmp fnsave jge clc cmp add mov xlat std sub adc sbb dec movsl sarb and sub sub cmp inc mov jle dec jle dec enter push push pop pop stos pop ds pusha cmc sbb push sahf pop movsl insb jo je jbe xchg scas repnz js or sub in jle inc mov test mov movsb test mov inc inc inc or out push jg inc inc sub push xchg dec in loopne mov mov and jmp sub fsub in mov lock fmull clc cld add je jg jmp mov sub sbb and test xor cmp inc dec test push push pop lret outsl movsb push pop pusha fs adc xchg push movsl push mov test mov push sub movsl push mov add mov aas adc test insb test dec add jmp pop and std push adc mov dec adc jo test divl into dec and jns mov fiadd cltd dec push add jl test fisub or (bad) in or dec lea or add xchg inc add aad jnp popf popf xor cs fs push add rorl dec jl rorb pop shrb je mov mov (bad) dec xor sahf ror push jae jl mov dec cmp pushf mov ret mov sbb jge fisttp js cmp aaa sbbl jg fldl inc mov or adc data16 mov mov movl or add int sahf mov mov mov (bad) pop mov add xchg mov mov test dec ja pushl add (bad) push lcall gs mov je push ja lahf cmp xchg sbb and push das js sub imul xchg xchg fs add push jo sub pop pop push xchg push and jae mov je das adc std mov jle cmpb xchg push adcb mov test ljmp inc or adc dec push push xchg or orb rcrb dec in cmp je stc nop notb inc inc addl and push sbb arpl add (bad) and (bad) sub jo mov cmp (bad) je push xchg scas (bad) inc ja inc clc clc rcrl adc push xchg cmp imul scas dec rolb push jecxz je adc mov push dec cmp mov out push push into and add pop fist mov cmc jne push jne aad iret xor aad ror jno and dec xlat adc adc cvtps2pd mov adc pop ja in gs cmpsb sbb incb into lea sahf pop cltd cmp mov aas cmp dec dec stos push cmpb cld daa pusha and dec movsl adc adc sbb inc ud1 or pop ret mov dec add dec icebp adc data16 je int3 add je adc mov cmc inc mov sbb dec inc dec es shrb pop add call dec jo dec rcrb cmp lock pusha jbe mov loope and add inc sub sti jle mov pop or cmp imul popa cmpsb mov or bound push loopne and jmp and or (bad) in out push sbb dec xchg push jmp push push (bad) mov push imul (bad) sbb or xor mov xor fdivrs movsl orl imul or or loop mov pop pop sbb inc test xlat jnp jmp aad jmp push sti pusha pop (bad) mov adc enter dec mov loop sbbb je test and les mov loop lods cmp stc mov jb cltd popa ret push add daa xchg cmc sbb dec popa outsl xorl pushl test pop or rorb add sub fmull test push jno jns les leave push pop add push pop push adc cmp adc sarb mov mov pusha and lahf push add aas push add add jnp dec nop arpl cmp js inc ja out cmpl cmp adc enter xor rclb test push jl push add arpl scas (bad) clc scas or xchg jno lods ljmp enter dec shrb subl lahf pop push mov or pop call pop jmp cmp dec sahf lret nop roll push mov call insl inc xchg or pop cmp jl rol xchg arpl xlat das add mov incl adc adc sbb mov mov adc sbb xor nop fwait (bad) leave jne mov aad movsl push dec inc (bad) pop add xchg ret add enter pop mov jl gs lcall or enter clc outsl ret jg pop and aas adc pop cs loop ret fstpt pop insl add bound ffree pop push dec cmpsl ss loop push xor mov push push push ret in sbb pop imul adc fdivrl push mov sarl mov cwtl nop dec cmp sub adc adc dec push push push out sbb xchg mov or pop xor push mov dec lret stos imul jb cmpsl push dec lods dec lea jecxz xor fsubl add imul rolb lock pop cmp and jbe pop or mov jl jo push dec pop pop or std sub jne pop inc push lret stos pusha push lahf push (bad) or or aam mov inc das push mov bound add aaa insb adc push movsl push inc aas nop jl sti cltd inc jo mov adc push or call cmc pop mov jmp push sub cmp jge mov dec aam adc loopne or jnp popf or add add mov outsb mov mov sbb (bad) cmp mov push pop or leave jle lods loope fistl adc push xchg push insl pushf dec shr les or pop inc dec jo dec and stc cmp push or lea call add push pop push adc mov lret hlt int3 arpl inc adc leave add adc fmuls mov lea lock cmc add push push lea mov shrb das or add dec sub add xchg lea jecxz add or call iret push sub add mov sbb add jl push push roll ja add inc push (bad) adc xor cld jbe dec fimull adc fbstp pop push nop cmp sbb sub ret sbb fistpl jle push sbb add push sub jo fimul cmp mov mov mov push push and inc mov pop dec mov leave enter sahf pop inc mov and leave das inc or sbb mov test push adc push stc test notl or pop pop out pop jmp aad loope,pn lcall and rol sbb outsl test pushf dec (bad) lret fstpl inc push mov inc add movsl dec push mov lock adc std shl in add es fstl scas and add std jns pop xchg and lret mov sub lds sub lahf iret lods mov insb sub int dec mov cmp mov dec pop fisttp add adc pop add notb repnz fistpl in or fimul insl add lret mov fmull popf adc arpl push or pushw add sub cwtl push adc and inc cmp mov push sbb pop insb push xor imul sbb call mov xchg cmp xchg lahf jbe sub jge push movsb mov negb loopne in pop add stos mov out pop add (bad) call jmp add xor ja addl inc xchg jnp test sti pop jecxz add or xchg and clc jns leave add adc add faddl clc push imul push int3 push mov arpl je add jecxz popf or xchg sbb sarl jge lea cmp (bad) (bad) shlb insb sbb inc clc test aaa in push jle inc cmp in add mov jns (bad) lea add pusha push sub inc xor and stos arpl sbbl das add add dec mov rcll add push adc ds fstpl cld xchg js call aas add mov inc ljmp lds jae ret and (bad) fbld lods or or mov outsb or push aas mov jecxz add xor test inc clc rorl rcl into sbb stos mov push cmc fnstsw (bad) jb xor or sbb inc cmp pop in and sub (bad) xchg stos sub enter xor daa fimul mov cmpsb cltd cmp les push xchg sbb pop sbb sahf sub mov aaa adcl stos xor sbb add and andl xchg or mov test rolb xchg and ret adc mov xchg imul and inc cmpl and mov adc sbb lret ljmp ret push rclb xchg outsb cwtl js (bad) pop dec pusha (bad) dec sbb or xor lds pusha bound jg xchg sbb or lea inc es adc dec push je or jl in hlt movsb pop mov fadds (bad) test movsb cmp out out push inc call sub insb push int inc ret pop mov push int xchg add sub sti mov push daa mov dec (bad) into sahf xchg mov push jne push vxorps pop pop mov inc cmp sub rolb int3 and xchg inc jp pop push adc sbb dec mov in mov cmp inc xor xchg pop push out and pop pop outsl lcall or and pop jmp ja xor or dec test mov fisub and push or (bad) push (bad) decl lret and pop out cmp xor orl cld out fucomp fistl add rcll add (bad) mov stos movsb push sbb cmc shrl cmpsb inc mov arpl jl pop inc lods push add push xor push mov inc pusha sub ds sbb mov je stc push cmp mov and xchg rorl xor (bad) rclb std je mov repnz mov mov xchg adc xor and or ds xor push push or mov mov pop cld loope dec xlat aam mov inc addr16 fcomps shlb inc mov mov and cmp jg outsb mov push mov sbb jmp fistl sub iret lret inc add leave mov enter or fsts (bad) jb rorl and enter mov int3 push ja push fisubr cli movsb or in adc push sbb arpl cld std pop inc dec jnp or mov out mov sub push (bad) mov shlb jp mov mov xchg push lea cmpsl xor sbb xchg aam shlb adc inc sub adc dec je (bad) push adc loopne inc jmp or sarl scas mov dec xchg adc inc or dec or jg sub ret pop jecxz sbb lahf pop push mov adc push dec int test or dec dec and bound dec xor iret add or rorl mov jecxz or lods popf or sti lea push push adc sub or fist repz jns js inc push jmp insb dec cmp int3 adc dec or inc mov push mov ljmp jge and push es inc pop icebp push ret pop (bad) add jne lock push nop fnstenv push les test rolb or jge adcb mov sbbl cld jmp lea gs fist lea lea arpl adc adc add adc stos ss sbb pop test stos fist daa sbb inc jle cld inc inc cmp adc lea mov or cmp nop insb hlt dec jp cmpsl out dec push xor mov jp mov rclb push fdivrp or outsl lahf xchg adc mov add inc addr16 cwtl pop pop imul mov push mov push or fucomp prefetch jmp add inc mov jne xchg inc (bad) (bad) sbb or jne aaa (bad) xor (bad) add mov mov loop fld lahf cmp loopne xor pop push add mov (bad) lret hlt mov inc and cltd mov imul mov add call push push data16 outsb sub pop mov rcrb cmp cmp aaa and mov mov pop lea or notb jl or mov inc (bad) (bad) (bad) pusha xchg js push xchg and test or jo ret jle or lea es (bad) mov test scas or add or ds in add insb pusha (bad) sub add push inc repnz ds aas fimull sub enter lock (bad) fs (bad) jo push adc aam adc pusha pop add dec sti je sbb adc or mov call pop pop sar sti ret push lret cmp add push and push dec pop jo push xor mov pop mov or shl add push cwtl in xchg sbb xchg add and leave sub inc and cmp and push neg es lods add sbb sbb adc lods nop mov in in in or or xchg jbe fisttp xchg in ret in mov enter mov outsb mov mov mov movl add or pop add idivl or mov fsub fsubr mov clc jae push addb sub xchg lret test mov or add in enter sub enter gs cwtl rcl push pop push mov jg (bad) sbb inc xchg or ds or and add adc mov and (bad) sbb pop sub add icebp loop adc scas lods sbb lea stos or loope int in dec lahf inc push inc rclb dec cmp inc out in fcomip sub push dec and pop pop subb and sbb dec pop or push and icebp cmpsl cmp mov ror mov rorl call mov push or leave inc pop jne xor icebp mov mov lahf int3 mov daa sbb test inc je jo jl jne sub or cmp push jb push adc inc adc adc jb and add jns daa adc add out xchg add setns adc or mov pop jb and pop jb and or jb daa pop xor and add ret mov and hlt aas and repnz (bad) or and iret mov movl inc pushf test in ret leave fadds cmp pop add stos in rolb sti sbb sub xor inc pusha adc ffreep fidivr dec fwait addr16 pop or cmp dec cmp adc push push sub add loop sbb inc inc pop loopne aad pop mov xchg jo fadd enter mov daa sbb pop lea push ret les test cmp jne pop and jo js pop jg xchg inc cld orl sub std rcl adc xor jnp test cld dec push ja cld pusha stos adc cmc imul loope mov and xor scas pusha insb sub lea xchg lock and jl pop cwtl or daa mov mov dec add add push mov mov or mov inc push scas stos sarl add sub push adc leave add stos adc push and pop push xor mov bound adc or aad (bad) aas sahf xor (bad) push sub les xor lcall dec rorl add jge xchg sub mov mov xchg out pop inc shlb fst cmp xchg push mov inc test xchg ja inc sbb insb dec sub sti sbb mov push dec aaa dec dec mov icebp add cltd sbb push and xchg mov sbb pop and push dec dec lea sarb cmc je rorl out xchg lods cmp je mov jl sbb push (bad) lea mov test je pop push push dec movl fwait and add pop imul push (bad) sub mov cmp xchg dec arpl pop outsl pop das clc daa lock js dec int3 jg das or adc push jns cmpsl (bad) int3 enter in imul pop sbb xor push add or fwait aas push add es test add cld cmp aas push adc roll pop push inc add xlat and stc ret call fmull imul aam dec xlat push cld or insl and scas push push cmp and rcll or inc rorb dec or scas pop mov xor inc push jl xchg xchg test add or insb cwtl stos pop adc add (bad) pop sbb (bad) jp and loop outsb dec mov mov inc mov inc ficoml push inc sub adc mov shr xchg shr add pusha mov inc push jne sbb cltd add test shlb mov outsl mov (bad) pop add in push jo push adc cs push testl ret in push dec pushf adc fwait ja add clc mov test aad aas lea add (bad) jmp sbb pop pop loope cmpsb in addr16 or or fildl push outsl push dec jl mov ret add in mov add sti push (bad) lods jmp test enter mov push jmp fwait scas pop add dec lods jo loop sbb stos cmp jb adc dec push test ja sub jecxz or loopne jbe mov mov es add push mov cmp adc mov cmp call or mov add xchg das stc cmpsl loope or inc adc ret pop adc add sti leave mov inc mov notb jo sbb inc jo or pop subl fild cmp cmp into (bad) lret jp lea dec jae fwait cmc lahf or jle imul xchg dec jne loope cmp mov or xchg push jne push pop popf xchg ja mov sub or test rcll test jne bound jnp dec push and test and insb push nop pop add sub mov insb cmp xchg adc sbb enter push inc sub in sbb hlt add rcll (bad) leave cli cmp (bad) fcoml push sbb fsts dec jp mov mov adc pop xor dec mov fldenv ffreep jmp pop jle cmpsb adc ljmp push add add ds cmp fcomps das mov das adcl dec mov outsl lods cli mov push inc xor push push push call add outsl add out adcl pop mov test add cmp or or inc xchg mov cmp dec add or sbb xor xlat stc adc jmp dec or sub mov dec scas roll push fidiv (bad) add inc add loop push scas cmp sub inc sbb or push mov mov or push mov adcb cmp pop rolb push imul xchg push adc ss pop sbb pop sahf mov push shlb push inc outsb int sbb sbb pusha or or xor fildll loope mov jae cwtl es lods push inc push mov gs adc int3 cmp test daa push imul jns xorb (bad) in mov pop fildl inc add push sti push push or shrl and add inc out iret repz jae enter cmp (bad) or or (bad) repz sahf fimul mov jns iret fistpll repz sub ss in repz cwtl gs in dec adc ja out sahf neg push mov or out lahf testb cmp add dec cmpsl stc xor mov std add test inc mov lods mov and adc sbb mov cmp inc sub pop push bound mov inc xor aad movsl cmp test inc jecxz add std xchg ds push sub push mov out dec push xchg or jbe xlat test (bad) arpl dec mov jne sub push xchg mov in call int3 pop push movb sub sub daa sbb mov push arpl or and mov aaa mov jne mov mov imul nop clc adc mov test pop push adc mov ljmp nop mov (bad) ficom sub fwait stos mov mov xor fldl adc movsl sub test mov in nop pushf outsl add rorb out cmp invd in add or or mov rcrb and mov stos mov shr dec es mov (bad) icebp call cmp xchg and dec fmull jne jno or adc insb jecxz xor (bad) mov int push mov mov mov adc enter jo je jo sbb shr test int3 mov add jg sbb pop xchg add push rorl mov and and mov fcompl inc and push das lods dec jl sub mov ds sbb aas mov pop pop das mov into push and add sarl hlt mov rorb mov cltd dec inc jp jno mov jle cmp enter jne adc inc insb cmpsb push in ss aas gs add xor pop lret adc repnz or add out gs xchg test and and jo (bad) inc dec push or pop sub xor ljmp jne aam jns and not in insl cmp je push ss pop test mov fucom nop dec add xchg adc and ja rorl popa fildll inc imul sub jno xor push push xchg lea fs or pushf and pop sub pop lea or cwtl jo outsl cmp push mov sub loope inc mov push inc xchg (bad) fisttp xchg adc push pushl push subl push js clc and and int3 dec inc pop sbb sar xchg sbb jl in rcrb xchg sarb (bad) push mov dec and xchg jne fyl2xp1 dec xor icebp xor in push and int3 mov fcomps sbb add dec mov pop subl inc mov arpl or fiadd push sbb add jl sahf inc sahf xchg and push mov sbb inc xor dec jle gs mov and push scas call or jle dec jae sub xchg fmull popf cmp mov fnop mov inc sub (bad) sbb test shlb mov fdivl xor je loopne dec nop and sbb clc mov fucomi pop push adc push mov shr and xor dec xor jns enter ljmp xorl mov orl mov fs insb daa dec mov dec mov push adc ret mov test fs ds scas shlb mov mov inc add sbb mulb jns je decb sbb add or sbb stos test and loopne in lods push push or mov test arpl cmp sub je lods enter sub lcall or and add inc inc out stc mov mov mov test or xor sbbl push dec xchg add pusha xor mov push mov sbb push push cmp inc (bad) or lods in cmpsb lcall xor stc mov sbb movsl xor ret je sbb mov inc clc popl popf js clc sbb pop and movsb inc adc xlat jg xor je,pt and cmp dec mov jge add shrb ret and jo sub addr16 stc and bound pop mov and (bad) out inc insl jmp mov and cmp adc pusha adc fldl lds and or test sbb add xorb scas scas cmp sahf outsl aad push push push adc or outsl lret mov das (bad) xor pop or aad xor lods sub jg fdivs mov js add push pop jae addl aad xchg icebp dec push add dec sub (bad) or mov cmp jb xor jg test cmp jg jmp mov and inc daa jmp movd mov xchg je mov push adc dec dec mov into and cltd sti and or sbb (bad) mov cs divl addr16 sub pop (bad) jl movsl push adc adc stos xchg and xchg inc ret pop cmp dec jo xchg sbb jecxz testl out adc adc pop jl iret cld inc and loopne lea xchg jbe jl sub mov push jl addr16 push push jmp xor xchg mov inc or inc dec test and and or je lea sti rcrl lea fnstcw stos and push inc inc and adc xchg test push xchg mov js jmp movl cwtl incl js lea xor push dec push dec sbb xor cmp mov pop (bad) dec or adc inc cmp add sahf mov add jl add inc arpl call cwtl mov idivl adc add adc mov inc sar or lret sbb and (bad) fisub push cs jl lcall add adc and int3 fidivrl adc enter push scas popa push test clc (bad) mov pop sub mov sbb or loopne adc call rcrb jno aad pop rclb lods push push movsl scas or add mov add lahf xor mov inc imul (bad) or or cltd nop test sahf fistp lcall hlt movsb pop (bad) push inc nop test inc xchg mov imul imul sub mov xor xor into xlat xor clc add jo test xlat movsb sbb push jne mov dec lea mov push sbb adc jl test ljmp pop or dec dec sbb push jecxz jns jbe mov movb adc push dec and sub sbb cmpb std mov mov xchg call jne ret std sti and or mov pop loop (bad) daa inc daa push sub sbb clc cmp pusha add movl mov insb decl xor push pop mov and in fidivrl cmp jge pop and mov aad adc shr sub lcall insb sbb sbb stc sub jnp sti adc adc inc adc loop fldl dec add cmp loopne push sub jecxz movl call adc ret arpl jne inc sub lahf sub test or adc dec aam inc sub adc int3 mov and cmp adc inc or add imul fadd pop bound jne adc nop jge inc cs stos dec adc jne push outsb mov cld mov in add mov xor or cmc rcl mov lea adc adc or aad pop adc push xchg lcall mov inc add je aaa das push lea add movsl mov mov sbb pop out adc scas inc and adc xor test sbb fcomp inc add adc adc sahf push sub jg lea push add mov test jb push lock js push lea sub stc or inc add mov and (bad) pop fcmovne imul push jle add xor inc lock out add jne inc popf pop mov inc add push pusha pushf jle jecxz hlt push or lahf test loopne push je jnp inc or movsl mov jg adc cmp sub mov lea push movsl sbb stc push jne xchg subb xor inc cmp adcl mov or pop jp mov or test dec jne pop daa insb cmpsb push adc fiadd or add fs les mov add cmp and cmp adc scas and es dec cld inc dec push xchg rcrb inc adc lock add xchg fwait or pop and subl sub in mov cs adc xchg add sbb push test add fildl test push out enter (bad) mov stos pushf loop inc add xchg or cwtl je lds imul into (bad) sub mov mov push sarb ja mov ret rcl jmp je sti fidivrl sub lock jb adc mov xchg push inc mov (bad) (bad) xlat clc shlb aaa movsl lods or and xor orb movsl aam (bad) ss dec inc cmp xchg jae inc or push pop outsl push sbb pop ljmp pop pop fistl jo js nop push cmp or lds ljmp and mov je enter sti mov push lods cmpsb xchg mov add pop jbe movsb sub pop mov adc pop inc daa xor add jg out lock (bad) aam or inc mov or rclb and push inc dec cmp faddp mov ret jecxz sub cmp outsl loope sub jl fs jl test movl (bad) bnd sub adc push push sub imul mov or sbb pop rcrb pop lea dec jae push into jge cltd insb sub out mov rclb test pop nop pminub mov adc sbb xor cmp or aaa movsb cmp mov or lea imul scas pop sbb sbb rolb pop push jb push loopne adc pop lock popa aas (bad) pop dec mov enter and arpl and push mov insl pop xchg test push lods jne xor sbb call cmpb jne ret and mov sbb loope fdivp xchg sarl aam hlt dec jo mov cmp jo ds sub xchg pop sbb xchg in pop mov pop pop test aaa xchg push nop insb mov and seta add inc cmpb pop roll mov into test xor push sbb popl std sarb push fs shrb xor sub pop js lret xchg dec insl nop sbb popa cli data16 or and cwtl push jnp aaa push cmp mov lea adc adc xchg mov cmp sbb (bad) lods xchg push clc les xor and add mov adc jl dec mov inc rorl ret cmp (bad) mov jge enter cltd jmp mov aad mov daa arpl adc jns fnstcw vpmulhw mov xor and cmpl adc int3 jl jge jmp std cmpsb jl lret pop inc inc add int inc sbb pop push int push repnz jae pop sub push push test jae rcll popa fwait pop xchg lea lea cltd jb in xchg xor stc popa xchg pop adc xchg call pusha scas mov insl loopne (bad) in fs add push pop cld insl jo enter dec addb sub rclb or mov xor mov jo cmpsb mov add mov (bad) fldcw push push movl shlb xor mov inc or xchg xchg cmp popa inc xchg inc shr rcrb ds sub jae rclb push and sbb and xor adc or inc jno jns mov adc in pop loope pop or jae cmpsl rcrl sub jno je inc or xchg mov outsb pusha push mov test addb mov hlt popf fildll jge mov pop ljmp (bad) dec mov mov push jge mov lea add add push cwtl inc pop pop xchg jge js fimul sub push int push and add lods sub mov aaa (bad) push repz cmpb pop adcb (bad) and test cmpsl (bad) adc jbe leave lods mov out mov iret rcrb pop and rorl (bad) push sub dec push out movsl xchg lahf ret loopne cli mov and packssdw jmp cmp out mov sub imull mov jnp or cmp adc xor xor mov (bad) sub add adc adc mov repz test sahf sar dec sbb xchg or (bad) dec jne hlt ljmpw (bad) loopne je push outsb or aam (bad) jmp dec mov fs mov mov mov or aas sbb cwtl mov push sbb inc jp dec ret aas movsl notb push push mov into int mov je rorb (bad) add hlt ljmp jp mov test xchg mov mov leave pusha pusha push (bad) push and out pop or inc sub cmpb push stos jne mov add movsb mov insb dec mov push dec aas adc push push mov daa insb lea ficom rcrb push inc xor push mov bound mov jnp test (bad) call cmp pushf inc inc sbbl push inc test jno sbb mov cli lock imul lock int3 and mov std sub mov pop (bad) insl out push push ret scas sub pand arpl in adc in fbld pushf ja mov and pop div pop add repz aam outsb sub cli and mov jbe insl cmp mov inc and mov test push or push push sti enter add dec in scas cmp sbb sbb pop jnp outsb sub add mov xor vmovlpd push scas mov imul jg jp pusha jge arpl add mov (bad) imul and inc fs inc popa (bad) loopne pusha adc mov xor cli (bad) nop mov aas popa xor mov pushf pop pop push dec jnp or lock hlt xor push out adc sbb and adc and dec (bad) je (bad) dec repz in test add add ja mov xor mov pop jb loopne rcll aam add jmp or aam mov mov lea lods push push push hlt je cmpsl push xchg sar pmuludq mov pop cmp pop test mov mov (bad) add sahf mov cmp adc js adc mov das sbb push pop cwtl out and cmp cmp mov iret push aas dec sbb clc (bad) pop ds sarb adcl ficomp call dec or xchg sbb add cwtl adc mov call sbb call popa mov enter test mov push and fmuls call mov or (bad) ds sub cmp push mov xchg es cwtl xor mov xchg sbb je dec shl and and cmpsb dec test cld jb mov adc pop xor sub nop out push stos adc lcall (bad) xor pop or push ljmp or xchg pop mov out sahf cmp shrb sub pop push adc lods mov enter loope pusha pop pop cmp lods add inc pusha sbb aaa or cmp push adc dec rclb or daa push jo in push lahf cmp xor sahf mov ror jp push jp add arpl out ret jle dec jmp cmp xchg (bad) cmp into stos lock cld lods dec fwait jne and ret out lahf add and sbb inc dec xor jne loopne or cltd mov push daa lods dec xor faddl sbb or je ret push arpl aad js push cmpl jp mov xchg or push add add sub daa je adc fwait pop lods cwtl inc sbb jne (bad) xor add jmp push jne push lds aad lods orb shrb mov xor push loope (bad) jge lea add cmp inc insb lds jle loopne adc (bad) (bad) xor pushl mov (bad) add jl pop fwait add mov or adc jecxz ret mov inc push cmp or (bad) out in cmp bound jp sub int3 sbb xor roll cmp add rcl outsl mov sub push xchg test sahf enter xchg xchg dec mov mov push adc pushl dec or stos jo cmp repz push xchg rcl clc lods arpl and add fistp cmp test js fimull mov jno pusha push adc push xchg add mov xchg xor ds pop pop add popa pop fadd and jl cmp test push mov mov push sbb xchg lock stos dec or jb pusha push xor pmulhuw add lret insb jo inc sbb pop test jb dec or and call adc rolb push lock cmp add push pop lock push sub lea adc cmpsl ljmp and mov push lea pop cs xchg add rolb movsl sbb cmp mov scas imul sbb xor add std mov mov mov jo jne dec loop add cmp add idivb xor and sub sub int or push adc mov rorb add shlb or shrb pop ljmp xchg test mov loop mov add aaa test inc xchg jns popa lods mov jg jb push ds push sbb dec test push jl xor push push faddl pop rorb testl xchg and or imul lock sub push xor cwtl out ret clc mov mov sub cli jbe mov das cmp jmp xchg sahf pop sub sub inc in xlat pop lret pop rcll ljmp inc mov push dec pop iret xor in pop inc ret notl add jne adc rorl add xchg and lock mov pop add xchg in push add inc dec sub dec ret aad jp and cmp xchg or or out adc pusha and and test push idivl add cld xor and pop adc rcrl or pop xor pop push cmp add inc dec and xchg insl loop loopne adc fidiv dec cmp pop xor dec adc mov int3 insl (bad) out xor or jne sub enter das pusha inc mov push sbb imul jle repz xchg push xor in and add push in mov push jo je bound std ja cs push lods fdiv adc mov cmp adc ret cmc sub movsl jmp iret push push shrb or jns xor cwtl push ja dec gs pusha test idiv sti xor lret add push push loop ret cmp testl xor cld rorb mov mov sub mov and in nop ret inc js pop sub jl or dec lds add adc (bad) nop fldt xor roll ret mul dec xchg scas (bad) sti mov je dec push mov sbb xchg pop rolb or xor add and mov nop ljmp in addb call xor into sbb push sbb pop mov inc out ret inc mov fwait ss add (bad) push ljmp daa sbb mov jmp movswl loopne lea ss ret cmp das mov sub cmp jb bnd mov in fs inc inc iret repz in push das rcll (bad) cld fstpt pop add add add add pop out in popf add lea push pop add jns outsl test jo push sbb aaa jno mov fiadd lea inc std add push (bad) movsb pop xor pusha cmp out mov sbb sbb cmp and pusha jecxz insb mov dec inc leave and jns dec out xchg lcall scas mov cmp pop dec popf push mov mov sbb adcl add mov (bad) mov jns sbb stc (bad) mov push mov stc outsb sbb es cs or cli or shlb mov pop sub jecxz movsl je push jbe add xor out dec mov xlat pop lcall cmp pusha scas shrb add js lock mov push sbb call ljmp jp push adc jp pop lods pusha cwtl push mov lret test jae jae pop mov sbb push or fidivrl (bad) sbb push pop and mov or fiaddl adcl and cmpsb or mov ret mov adc adc cmp and test and scas inc pop pop jmp push jnp inc pop push xchg pop mov pop (bad) adc mov inc je pop pop pop dec dec fcmove cmpb fisubl dec outsb daa fbld push pop sarb aam insl lods fstpt pop xor rcrb xchg mov out into sarl adc sbb adc or push add adc ja push mov pop push push xchg lret popa in and in push mov (bad) mov or aaa dec pop and xchg ds mov movsb push adc cli or cmp fmull ja and cld mov fsubrl orb incl pushf mov mov and mov jmp inc adc and or xchg rcrb insl je mov je and inc cmp jl xchg jo and inc test dec mov or add push sub insb (bad) xor adc cmp clc mov add and dec mov jnp or add mov and push aas adc sbb je repnz mov ret mov inc pusha jge push add ret and or inc (bad) popf push mov sbb nop pop inc (bad) push push mov mov xchg xor jns dec in mov xor push sub cmp sahf mov cmpsb jmp fstl adc je shlb sub push int test or aad ljmp das loope movsl push rorl fsubs dec insl dec sbb mov xor fst (bad) imul js inc pop mov (bad) mov call cmpsl stos push xchg les push test xchg or and repz sbb cmp rcr int lock rolb pushf mov in mov or sub ds fidivrl lret mov or mov sbb mov and sub shr fwait add orb push lahf call divl mov add sahf cwtl add sbb mov or mov mov sbb cmpsl ja enter adc add sub mov xchg adc dec lods cmpl dec and xchg cmp dec mov mov add cmp add insl jl lods rclb std mov ds push lea mov or icebp mov loopne jp sub ret sbb xor fcoml jp aas aam (bad) sub popa push sbb pop sarb lock iret gs push dec xchg or test cs hlt pusha inc add xlat mov and test pop lock dec jmp mov sub mov jns jb (bad) and mov push (bad) stc adc roll loop add ret jge scas aad or sub add mov dec lea dec sub xor je add int inc cmp xchg cmpl notb repnz cmp xor lods pop inc aaa stc xor and or xchg push add adc mov sbb sub adc inc pusha shr push mov lods or (bad) int dec mov and add xor pop or incb xchg inc pop mov xor mov lods ja adc insl movsb lcall inc cmp imul or adc mov push popf push mov mov xchg sub jne or jns divl adc and cmp jle jbe sub data16 sbb pop fdivrs ret sbb popf es cs push lret das test jge ss sbb push loop push into jle mov add fadds push cmp cmp dec sub dec push icebp xchg dec inc xlat fs and xchg int3 mov adc add pop adc loope xlat push addl out aaa adc je dec dec call or mov mov fildl sbb cmp add std test insl mov mov arpl (bad) fistpl jns add adc cmp jb cmpsb inc scas cs inc push clc cmp mov sbb and ficoml ljmp push outsb aad pop mov push test or add xchg adc rcr push mov or push sbb call sub add sarb gs push popf out adc (bad) cwtl int3 testl repnz shrb jecxz adc test sub and je mov mov test (bad) movswl add dec stc xor mov or popf movsb pop cmp pop stos lods dec rorb pop mov push and mov inc pop cmpl adc test bound je je add cmp add xchg jne outsb ss dec xchg dec inc bound rcrb dec inc add scas or leave mov pop or pop and sub xor aam push cmp pop cmp sub mov adc xchg push pop scas mov pop test imul gs mov cmp pop mov sub adc sub dec adc imul push dec pop xchg test cmc out pop cmp inc cld mov push nop out cmp push nop inc dec pusha bound xor cmp ret out sbb jb ljmp push xchg movl pop adc jo insl push scas pop adc or dec icebp fsubr mov addl pop adc cwtl in shlb sbb inc pop dec push dec cmp dec adc data16 daa cmp xchg mov mov push push lahf out push mov add xor ss xchg and push (bad) xor push sahf cmpsl fldcw pop pop cltd (bad) les dec pop mov stc mov inc fldl (bad) or add and pop mov ds sub and sbb and or mov mov or mov jmp leave adc (bad) sar sub int cmp add in jmp (bad) or repnz bound test data16 xchg fdivl mov out and inc enter jecxz jo bound or mov adc cmp jb cmpl cmp jb adc or nop adc inc cmp jle adc rolb ds push rol sub inc or lea rcl add jne inc or mov add subl add sub imul (bad) dec jmp fadds cmp jg and sahf insl pop mov and cltd and mov add jge and dec lahf jmp fimul or sbb jl cmp popa pusha sub jo loopne ret and push push arpl rolb cs pop xchg aas dec rorl fldl sbb add mov or lods mov (bad) arpl ja sub cmpsb mov xor xor cmpsl int3 inc xrelease insb sub es jl ja xchg out or add cs or roll mov outsb adc pop jno sbb inc inc adc add adc sarl cmp popf inc mov dec push pop jp mov ja lds xlat pusha loopne lea enter cmpsl pop add xor shrb bound and lret mov inc sub sub xor sub fs xor and insb jo test mov jb push cmp push in jmp push xor adc add lea lret fidivr jne pop in jb lea sbb repz push cmp mov inc inc jl clc or push and xor (bad) inc or xor push cs adc inc xor xlat loop push cltd nop ljmp js lea xor jge subl movsb clc push in sub test push adc in nop sarb push xor or inc add add add xor add insb xor add js add add (bad) mul push test mov stos jae pushf pop je nop cmp jmp add xor (bad) adc add xor cmp inc insl sbb pop lcall mov sbb or xchg gs pusha mov dec lds aad sahf fbld test or hlt lea pop adc push inc mov lcall movl push mov push push dec or mov or sahf fdivrl add mov (bad) cld mov add cmp jmp adc xchg setle pop test outsb add dec into xchg jp out mov pop (bad) mov nop push sbb fstpl test push fiaddl sbb dec sbb scas lock rolb xchg hlt jle test push xor jge arpl cmpsb pop push hlt or lock dec sub cmc into xor addr16 sbb sbb xor out test xchg sbb inc dec sub cmp push or add imul xchg inc inc or sub nop xor (bad) xor imulb jecxz cmp and adc xchg and test adc inc jmp mov jne mov xchg test dec jae adc pop add movsb test aas pop lret sbb ss mov jne fadds ja add or insb int3 ss ret cmc test inc adc in nop mov pushf arpl inc lret push rcrl inc dec inc cmp test lods loopne scas popf inc andl mov cmp aaa sbb cmp mov icebp add jle leave sbb ret into dec adc cmp out adcl sub xchg out or inc in into cmp das mov aad das sub xchg dec add sbb subb in adc or cmp fs punpcklbw add sub lock std mov mov add dec xchg cmp fildl ficoml jmp jae inc xor add jmp cmp xor lock popa pop sbb sar sbb data16 addr16 and add (bad) xor adc add xchg and push xchg lods loopne adc (bad) aas lea and jo sti incl pop cmpl add je cmpl add test cmp in sbb fs inc bound rolb or add push sub (bad) mov or ret sub push xor add dec lods push mov push in pushf xchg adc sarl pop dec jmp push (bad) lock adc sti shl pop mov mov adc push rcrb sub mov add jg pop sub cmp je adc loopne jno sub or cli mov iret mov lods jb and lahf push jl xor pop fwait clc xor push sbb dec add or stos jne pushl xor ds aam sbb stos dec add or mov lock mov pop rolb push sub and cmp icebp nop out imul rep jne sub and les inc xchg or mov mov push clc sub mov dec adc fdivrs jecxz mov or or or icebp sbb adc xor or jl mov jnp push pop ret xor dec pushf xchg add imul daa pop (bad) daa pop jne push cmp xor addr16 pusha dec addb iret cmp and push cmp adc push jo pushf mov pop push jo push pushf daa push (bad) mov test xor or mov pop xchg (bad) push sub push rclb push push or pop push lret dec jae xorl add cmpl pop xchg loopne pop repnz add (bad) xor test add fiadd out xchg sbbl xor mov insl pusha jbe or sahf push push mov ljmp mov dec dec cmp nop cmpsb dec adc test lret push das push xchg push outsl add or mov outsl mov adcl add cwtl cmp add xor pushf inc loop and inc jo movsbl lea cmpsb gs inc insb sahf fistpl add sbb pop outsb xor dec inc sub mov insb cmc repz andl push xchg cmpsl add repz insl data16 jns add pop pop add lods sbb daa jo mov push dec and inc nop lret pop mov jl adc pop mov pop lods cmc pop xchg sub cmp push (bad) aad ret stos insb add inc repnz test add les (bad) push add ret add push push into sub cmp je xor rclb imul rolb adc andl imul mov push sbb pop mov and pop xchg cmp adc sbbb scas xor dec incb das popl mov xchg lods and mov sub call pop mov test push popl inc test adc nop adc cmp push jo xor clc push mov sarl scas sub cmp jbe fadd adc in scas rorl aad and (bad) mov add nop push add xor jne or push scas add notl xchg mov cltd orl (bad) mov cmpsb popa pop push inc bound pusha dec adc insb ret push xor cmp repz fiadd lock cmpsl stc cmp dec outsl imul mov pop jne sahf out lea lahf repz jb jae lahf insl mov cmpsl lods mov call sahf std xchg cmpsl push ljmp dec and enter cli orl jbe stos and inc pop arpl and adc jg pushf pop shrl jns inc loop int3 add aas nop das mov cmp mov sbb mov (bad) sbb mov inc xor out add std je xchg or xchg push stos inc inc daa mov cmp sbb je jb or pop sub cmpb popa sub xlat add push repnz enter enter rol or add int3 in shrl mov add cmp repz pop outsl mov imul cld cmp sahf out cmpsb mov xor cli pcmpeqd dec arpl cmp jmp xchg test fildll test aam les inc pop lock test lea and fild dec cwtl sub pop lods add (bad) lret jge inc (bad) xor inc rol dec push in push enter sarb pop and adc out push sub cmp and inc mov test jne or addr16 or out adcl scas adc mov dec inc push jmp lcall xchg jno,pn movhps push mov push mov sbb jle xchg jbe sbb pop and mov adc xchg jno push adc mov inc push js cltd nop sub pop sub adc adc and xor push adc inc xchg pop shll mov mov inc js in movl pop jo fild adc cmpsb cmp xchg dec jle add notl insb jo scas fcompl add push add add and add nop lret add dec pop jo nop fsubs out jmp or mov leave fstps ss iret es movb pop inc jmp sub adc sub adc cmp dec push test fcoms push mov or adc adc add xor cli push subl dec xlat mov or push sbb mov xadd sub leave arpl shrb mov leave pop jo movsb mov add push lock pop mov add dec push sbb sbb cmp test or cmp xor mov lahf and mov repnz insl add loopne push dec (bad) jae ja scas add and cmpb fisttp push xor cmpsl pop cmp dec xor sbb (bad) cmpsl dec pop sub mov pusha ret inc je xchg lea rcrl test xor jno add jne inc dec push imul sbb test add dec je xchg nop xchg sub out inc cmp add add jne adc xchg add mov hlt dec fcmove in mov fsubr pop cs xchg fsubs jl out repnz lods pop out mov cmp inc clc cmp popa incl outsb add sub clc xchg and mov pop sbb mov add lock cmp sbb mov inc call push xor insl mov pop add or inc enter push movsl inc cs fidivrl pop sbb add test sar sbb mov imul xchg xor and (bad) shll add ja int3 adc push subl sbb inc jb or pop and xchg movsl (bad) orl push add sbb popf test inc popa adc sbb pop and mov xchg in icebp lcall mov lea sbb xchg movsb (bad) shlb test mov aas or (bad) pop aas inc jp loopne or rorb in add popa inc sbb repz stos orb jnp mov push dec test jb pop arpl mov testb pop cmp popl idivb inc jecxz cmp cmpsl xchg outsl mov jecxz or cmp jp test mov inc mov scas dec aas pop repz pop outsl or bound pop push clc add mov (bad) iret adc jno,pt cmc adc cmp mov add push dec ret jnp test or jns ret sbb cltd (bad) push add xchg sbbb in inc outsb jne ret push dec popf in cmp and pop nop je cmp or jg (bad) and jns mov jg nop jg (bad) xor cli ret inc pop test rolb cmc popf inc mov jb inc dec adc arpl ret jbe lods push rorb pop dec rorb fadds inc sub sub pop sbb mov sbb enter jle repnz in lods sar mov dec scas jle adc loop mov call rclb je sbb cli (bad) es or repz (bad) negb jnp pop add or push jmp push add scas cmp (bad) rorl push sbb push push push sub xor jmp xor lcall inc loopne ja mov into std repnz adc ret mov outsb cmp push dec and jne insl push pop cmp push push push dec push vpunpckhqdq enter mov lahf adc stc add clc add jmp push push and icebp bound adc add (bad) lret lret xchg dec sbb jno add dec inc pop sbb inc jmp syscall test in mov fistpl and gs or pop mov pop out fwait xor xchg xchg mov sub js (bad) into stc jecxz daa pop lret adc cmpsb or jo add pop pop decl push cltd add and or daa in inc add enter pop inc adc orb int3 inc xchg fcmovnu add cmp mov loop add scas sbb push dec sbb xor pop xor data16 sarb adc out inc insl pop pushf xchg adc inc loope cwtl les test jnp ljmp adc push mov cmp push into mov mov mov mull ljmp pop sub adc push sti dec dec popa call test ds enter les iret jecxz push mov mov pushf loopne or fs jns pop jo je insb mov movsb dec arpl sbb jo popf pusha push arpl cmp sahf out mov push sbb lret aam dec (bad) sbb fdivrl jbe sub inc pusha sub adc add mov mov test jne hlt inc add xor inc hlt push jo (bad) cmp sub lods insb push push inc (bad) lods add repz xor iret sub cmp daa push enter xor gs dec add push lahf dec std aam dec out mov sbb pop mov (bad) push inc jae insb pop shll pusha add loop pop jmp jae movsb push sub and outsl rclb and mov sub fsub jmp fcmovnbe inc mov sbb push out outsl jbe xlat mov pop sbb jno mov imul out or enter daa and movsb pop push add jp cmp lods sti lea les ret xor jecxz cmpsl fucomip sar outsb jg cmp jle fcmovnb fldt lret sub dec movsl pop and sub add add sub mov nop movl push or sub xchg cmovo add inc pop add sbb sub cmovnp and mov pusha ljmp push je adc mov xlat sub popf or (bad) js add cmc push repnz imul stc add roll js movl dec xchg loopne xchg pop dec sbb ret cwtl outsb push daa mov dec fsubrs inc mov add add add pop cld dec sbb adc rcl inc cmp mov sarb and jo and push les adc cmp jb add adc mov sub dec jb sbb push push (bad) enter add out pop sbb inc loop lock dec loope inc push loopne mov add out inc xor into or xlat push push fs aad push xor dec pop mov cmc or mov push sub jge lret stos dec movsb ficompl pop inc inc add test repz jle je cmp mov cmp or test or jl lcall xor mov je cmp and mov xor testl adc fucomip cmpl adc rclb push stos sti mov lea mov fnstcw repz divb sbb (bad) sbb adc dec xchg mov loope repz mov xor sbb jne icebp cmp mov mov and stos adc jmp push or add sbb je cmp adc in stos add insb cmpsb out je iret iret jae or cmp rorl push and xchg add xor or lret pusha fs punpckhdq outsb into icebp cmp loopne or adc xor dec xchg push les push push lcall imul into idivl lds les loope dec or int3 inc jmp fistl loopne mov sahf jp imul and dec pop and dec aas dec cmpl xlat clc adc adc add sub fadds cmp loopne js test pushf int3 mov (bad) fsubrl push shrb js pop addl scas cmpsl push cmp mov faddl push adc jno pop add sub ret arpl inc fldenv mov cli pusha mov and push and mov xchg test popa fiadd adc add mov pop add lods mov mov les cmp xchg xchg mov cmp or fs add out jp adc loop and cmp sbb jno arpl adcl add shrl mov lcall sub add out xor cwtl jle cmpsb adc loop mov add inc mov or lret adc jne dec jmp les xchg es jo mov add shl and movsb and loope lcall dec mov cmpsl mov add outsl inc aas addb and mov (bad) mov std cmp jne sbb mov cmp je inc pushf mov (bad) mov or ret sbb mov data16 push adc push adc cmpb adc adc jecxz lahf push and jg xchg jmpw push sub pop sbb xchg insl mov outsl (bad) in sbb outsb pop sbb or or and sbb xchg mov add dec cmpl lcall pusha sbbb xor popf cmpsl sub lds mov jmp xchg add mov sbb test and insb add push rcrl sbb leave fmuls sbb hlt push mov jecxz pusha outsb sbb push (bad) leave mov xor push push push popa jge mov inc je and ficom push out cmpsb mov adc inc xor mov push lock mov sar mov lea ljmp add jno inc sub xchg push imul lock xor xor ret jnp or test xchg add cs loopne fdivrs push and adc mov or push add loopne and push and jns cmp (bad) mov xlat clc add pop call add pop sbb push adc js push sahf or mov xor (bad) es out cmp cmpsb dec mov pop xchg adc mov jmp jae pop cmp mov pop sahf dec js aam inc or or cmp jle dec sub pavgb xor inc lret and lea bound dec stc xchg enter mov int3 daa dec gs sub js add xor inc mov and clc add or mov mov arpl and xchg jne jns and inc dec dec mull lea xchg or ljmp pop insb mov push add mov pusha pop dec sub pop jmp dec rclb in sub rorl pusha lods pop xchg shrb pop xchg add test mov sbb cmp jne inc loop xor dec cmovle out lods in pusha fsin adc mov mov cmp jle add hlt jb js mov scas int inc sbb popa adc mov sbb scas mov inc cmp rcl lea sbb push push data16 and mov or inc mov mov or mov dec repz in pop sub cmpsl call mov adc push inc sbb call pop cld xchg inc cmp pop addl adc and adc dec dec dec data16 add adc or push (bad) nop and mov stc cmp push push ret imul sbb rorb andl movsl fcoml sub xchg jb pop imul inc adc pop sbb sub dec add dec xorb jae sbb clc cmpsl repz js dec cmp js shrb sub adc push add sub sbb add xor xchg sbb cmp mov push push push sbb cmc dec mov and mov xorb add sbb cmp add inc js adc aas push xor pop sbb testl or inc imulb dec je iret pop push arpl insb lds add push dec clc je clc push mov push pop ss xor pusha xchg push inc inc sub xchg push loopne mov movsb mov push ret inc inc mov fiadd fidivr pop mov adc fmuls or cmc push aam mov repz test jno push scas xchg ret add outsb lcall test aad rcll and xchg push shrb add movsb sbb popf cmpl inc insl sbbl cmpsl pop jno pop std sbb or pop sub or push xor outsb nop mov ret xchg insb lods je jle mov mov dec or jecxz xchg repz push lock xor dec push jbe (bad) imulb repnz jbe movsl push push add popf add push pop pop notb aas out (bad) pusha push js movl sub in jne aam fnop jno sub cltd and rol cmp or mov stc inc pushl sub call movsb lea push dec (bad) xor lock bound cmp push push xchg add xchg push scas fucom pop jno pop repz push push add xor add pop or test dec xorb or aad aaa fadds xor dec inc push nop mov sti mov lcall mov xor push mov inc mov sbb shl xor cld xchg pop or sbb shlb aaa test sbb add push push fwait rcrb and test daa push sbb inc nop aam outsl les aam leave mov fmuls cmovb sbb or sbb cmpsl pusha insb cmp mov sahf scas mov pop lods xchg leave cmpsb pop test ret into inc adc jmp pusha mov push fadd (bad) stos inc aaa or adc pop lods push icebp cmp and icebp add adc or mov cmpsl push or les and test mov add push jnp dec icebp jo test jp push mov pop cmp mov mov je test and push cmp ljmp jnp inc daa loope inc sbb mov roll sbb xchg xchg pop sub mov mov popa leave test dec test push mov xorb xchg cmp lods lea mov add dec or mov data16 and cld mov test enter sbb pop stc out (bad) add and or test xor jne call cmp ja jecxz clc add fildl insl shrl xchg popa xor pop jb dec cmp jmp xchg lods adc sub pop push sbb add cli mov sub and fs xlat pop adc pop dec shlb xchg iret jne in sub inc cmp fidivr mov lods xchg add test adc and add sub daa cmp sbb or jecxz pop jbe cmp mov decl test stos mov mov rcrb decb xchg adc movsl (bad) push out cmp mov or cmp xor push cmp aaa sbbb jl push jo test and push inc mov and and cli hlt pop or push add (bad) popa loop xor cmp inc jl and adc (bad) loopne lret or popa or lds (bad) xor repz cmpsl cmp mov jecxz or mov es mov sbb push push lea out mov leave lea mov pop lock jb fs jo leave dec inc ret fldl je mov aam cwtl xchg jecxz add dec sti mov ficomp mov stc add mov push adc pop push scas pop bound jbe pushf pop mov shlb lret push xor xchg ret cmp movsl push jg jp movl mov mov cmp adc daa push push aad icebp mov cltd jge inc jb imul (bad) mov jo pop gs cltd lds push popa adcl pop das stos mov dec out ret jnp push push aaa fs ja xchg xchg insb push aaa loop daa fmull andl push lds dec pop aam loope imul or xchg (bad) mov add xchg sub xchg lcall sti push add fsubrs mov mov lea mov ret dec mov insb add inc xchg and add fistl (bad) adc mov inc pop stos sub and scas add stos inc (bad) dec mov xchg and mov repz lods adc shlb jmp cmc imul inc roll mov pop arpl and xchg pop ret rcrb mov pop and sahf mov lods cli cmp imul dec xchg or aad setl std jne sbbb lods flds out mov pusha imul mov inc jle add push lret inc loopne inc es out scas (bad) cli sub add cmp inc adcb sub and aaa mov (bad) je push ds or imul add inc sub push arpl inc add out mov xor xchg adc xchg sbb sub mov and jo gs sarl mov cmpxchg nop lret cmpsb or clc inc add xor cli nop popa pop and xor sbb mov sbb rolb mov or inc push and adc jne adc fbstp setp add out push mov fimull cld add loop push sar mov adc add and inc inc cs sbb inc inc inc cs jo inc insb sbb inc adcl je inc jne cmp inc cmp dec xchg cmc insl testl orb out push sbb in cmp addb loop pop fisttp test push sbb popa cmp popa sbb je sbb mov pop cltd rcrb pop lret mov pop bound jns push push push push dec xchg adc jns fmuls push jge or sbb inc cmp pop adc les xor pop dec dec mov jbe scas rcl xor sbb mov (bad) nop xor sbb pop cmpsl xchg mov int3 leave data16 loopne,pt pop xlat xor push mov insb popf (bad) cld adc or inc mov cmp dec xor cmp pop pop loop aaa and add xchg adc ret adc push dec roll cmp jo sbb dec mov nop sub sub subb and push outsb scas sub sahf push sub jne out add xor sbb dec js (bad) inc int3 outsl sub cwtl sub addr16 jp jo insl adc orb xchg sub cmp sub add push sub mov xor shlb push lret cli (bad) push push jno (bad) dec jns adc in aaa xor div cmp xchg sub negb adc or add sub je pop mov mov sub dec rclb rclb faddl pop add (bad) mov loopne sub sub jo cmpl (bad) mov inc popf cmpl or scas xor xchg xor add lods add test xor mov std cmp sti dec lds lods rol inc push inc adc mov mov popf mov mov pusha push shrb inc pop xor dec int add jecxz xor pop in (bad) in lret fs pop inc js pop call push dec adc mov fdivs int3 lcall out mov mov out sub xchg lea int3 lods dec or adc (bad) cmp mov push lcall mov inc or pop fwait lret ljmp jb pusha mov and inc dec push rolb pop aad js or sahf ja or and test add add add fistpll jno rorl xor dec push inc or sbb and nop push call push xchg cmp in enter push push cmp jne out push adc test cmp aad mov or push aam test xlat rclb loopne jge lock sbb ret int3 push or pop insb cmpsl out lods pop push aaa add add adc repnz push mov xor push mov rolb movl mov dec jnp pop fisttp sbb or fnsave pusha aaa dec movl mov xor add movsl mov sbb push fmull and xchg mov lods lea in bound andl xor loopne xor hlt dec insl rolb and or jl jo adc fs insb and or insl xchg adc mov in xor call je into in shr xor sub cmp fmull adc inc push adc push or rcrb inc mov or rcll xor adc adc (bad) mov nop sbbb cmp movl push (bad) hlt jb movl lea clc mov cld cmc nop pop mov pop inc int3 jle push jb dec cmpsl lods out cmp gs in mov mov inc in loop jb dec adc jge fadd inc xchg movsl cmc outsb fsub jmp in or or push loopne inc push scas enter dec loope push or sub or sub xor xchg aad (bad) (bad) hlt fs sbb rcrb in xchg add or inc add enter add adc sahf iret je add dec or xor add cmp add sub xor cmp mov xor mov outsb inc add push push aam shl jmp in jbe or int cmpl test xchg cmpsb fldpi cmp js dec dec out rcll ss repz dec imul inc mov push shlb les cmpsb imul ret add and lock or addb xor cmp int3 dec push xor or into js push out add rcll add push fcmovnb ss jns jnp sub pop adc adc push push xchg adcb fdivrl test (bad) out adc out sbb pop aas sbb adc (bad) mov adc pop xchg inc pushf or (bad) rcr movl jne xchg jg scas sub push ljmp aas movsl pop orl cmpl adc or lock cwtl and adc cmc xor and cmp enter outsl and xor mov push jae les nop push mov cmp mov mov mov popa das or js orb lods fildl or sarl or pop push push jae xchg push stos sbb (bad) dec pushf bound ret stos xor mov or inc mov push adcl mov pop or hlt push mov push orl adc dec (bad) mov jo in and or add gs aaa adcb xchg popf lret xor cmp add and sub aas or mov insl pop adc ret call test bound mov sbb sbb and cmp sbb xor inc ss lret outsl mov inc cmp jl pop mov dec jb (bad) xor clc inc pop pop push mov jo add pop cs mov xor xor je adc dec and push mov xchg mov inc or cmp dec push add pop sbb add xor mov xorb leave sbb mov pop add incb jle or add jecxz pop int push jl mov (bad) cmp icebp sti mov cmp jb or dec mov cmpsl ss push adc testl and adc dec sahf lret and adc cmc or pushf sub insl cmp jmp sbb gs (bad) test mov cmp adc (bad) push or push fs sbb jl or or (bad) adc repnz dec pop inc pop pop inc cmp or push pop pop mov push add cmp or or and bound dec or inc jne push push cltd mov scas loop sti pop (bad) mov (bad) (bad) idiv push mov (bad) ret (bad) enter xchg push sub add cmp lock xor dec jne mov mov cmp pusha call jne cmp jne es jne or inc jne mov fdivrs inc (bad) shlb fiaddl add scas dec pop fldlg2 fldl xchg xchg fyl2x fstpl and mov shl sub movsbl mov add mov std rorl testl stos dec xchg inc cmp stos insb fstpl flds aaa sub mov jne jmp fmull fcoml push mov or inc push adc sub je xchg lret and cmp push xor test fisubl lock jae pop (bad) lock lods mov sbb scas gs rol pop add lcall pop xor mov movsl add jmp jbe fmulp jp xor sbb or xlat and mov inc mov daa scas insb push out loopne inc or xor add cmpsb or mov addb or scas enter daa or or adcl add push push fwait lea pop (bad) aaa dec inc cs add pusha lahf push adc pop dec sti xor and dec sbb cmc mov fild aaa jmp push lcall inc inc xchg inc inc sbbb mov (bad) xor cmp adc mov insl sbb adc add repnz add add cmp xorl jmp mov adc lret adc pop cmp lock jb push mov dec push jge push inc loop adc sbb fimul (bad) mov push loopne mov sub xor sbb push adc sbb xor (bad) pusha leave push sub add mov dec andl mov lods inc ret fbld fwait or test or je test mov mov jne ds out xchg rorl xor repnz (bad) mov mov orb add dec sub cmp push iret push jmp cmp sub cmp cmp nop or or jns (bad) jp pop ret jg xchg add sub xor xor sub int add cmp cmp gs push xor scas repnz add sub cmp addl (bad) sbbl add sahf je xchg inc mov or loop mov mov inc jbe sbb aam rcr outsb jle pop je mov das je or sbb je xchg fwait mov cmp jne jmp sahf cmp mov mov pop dec movsl jb js daa mov xchg dec pop sbb lods mov (bad) jmp ret iret xchg daa iret adc dec push test int3 iret xor xlat mov sbb enter shl je lahf mov in (bad) or icebp adc push pop adc mov xor (bad) lret arpl lret sbb in lods add insb pop jle int rcll mov pop pop push push aas in adc mov mov lock (bad) and sub and push xchg int3 std clc inc lods insb pusha cmp jne cmp jne mov test (bad) push fs mov xchg pop cld mov pop mov and icebp jne xchg mov add add add fnstsw dec xor les cs push inc cmpl out add gs dec mov and sbb rcrb stos add pop mov shrb loope push push mov insl jl popf push cwtl xor add je js (bad) pop mov aas push mov ds push mov sub pop adc pop call add jmp pop pop xor int das repz jg nop mov cmp jne mov ret cmp or (bad) fstpt inc out jp jne mov ret mov jbe cmp jae loop or ret xor call and mov in jg or or leave push or fimull adcb (bad) mov lret cmp jle xchg repnz mov pop clc movsb rcl inc lahf mov mov sbb lea xor imul jno xchg jl push adc push subb mov ficoml xchg aas (bad) mov xchg and xor xchg ss xchg out call jno add ret dec insl cmp test ds xchg jecxz push dec cmp fimull jg (bad) add mov push push ljmp pop jge test arpl ret and cld adc dec add jo xor nop ficoml or sub in push aad dec xchg push add xor (bad) sbb test cli sub push cmp cmp sbb xchg add jle add push push push dec cmp loopne cltd mov sahf test daa pushf pop insl ret insb (bad) pop or jle pop sub push into ds jle add aad dec or jle mov jle add push and sbb xchg and xor jno mov mov jae lods pop pushf mov lcall sub les adc int or sbb sbb add jmp sbb lock imul pusha push dec popf push adc dec pop dec iret cmp (bad) xor js sbb mov xchg loop clc test mov lods inc shrb sbb pop mov sub and btc out js cmpsl mov and scas push xchg mov push push xor sbb push push push (bad) into sbb add xchg repnz adc loope call dec jnp into or sub ja lock movsl shrb add out not clc sets dec rcl cltd mov dec sub push cmp xchg mov (bad) sub push cld into cs fs push loop add or pop sbb push xor daa popa aaa adc adc sbb dec shrb fidivrl rol aad inc inc push pop ja cmp cwtl dec pop sub lods insb add adc mov adc or lods jns adc aas add sarb mov sub push xchg inc push ret inc adc add fnop les adc incl or or lock pop test (bad) lods andb or idivb mov pop fcmovnbe sub mov das hlt jl cmp (bad) xor jp clc add cmp orl mov lods sub sub jae dec cmp sub movsl cmp inc test sbb mov fild add clc add lock (bad) lret mov xor or and mov into es and comiss push xor push popa jns or xor je aad push repnz daa jbe,pn popa in cmpsl jb dec push jo xchg mov adc sbb and pop or lods lods pop je movsb xor add clc push decb iret jne cmp sbb cli push push and jle push lea xchg sahf push push dec testl pop cmp xchg lock or fsubr or push xor dec adc or lcall push sbbl mov or mov popa pop imul xor adc test rorl dec neg adc push mov and mov lods xor and fild or xchg or push (bad) out or test gs dec add and push add sub add pop lods (bad) iret aad aam push xorb dec adc cld enter push add fldl addr16 mov xchg pop cmp add ret sbb adc loope imul inc xor inc aas push jmp xchg cmc push or push sub ja lds push push jmp push loope adc mov adcb fwait lret ss mov aas lcall add daa xor je adc push jne cmpsl jns inc xor daa ret cmp or sub dec mov sub pop adc add pop sahf lret adc adc xchg out xor daa pop int3 jle in mov adc add sub and fisubr in add jo cmp push test dec jnp add sub push push mov rorl push aad and xchg push cmp mov fcos std rep stos lea mov lea sbb or sbb jno ret clc push cli cmp push dec xor fldt add je mov or sub lds bswap fdivl jne movsl movsb popa push call mov stos and call jg rcll adc adc add repz sarl into cmpsl mov test pop dec mov push sbb add repnz fisubl mov mov ja jp jne ja push fldcw push and and aam pop mov adc push mov or xor shr sub sub movsb call rcll ficom call roll add rcrb jge fsubrs cmpsb hlt cli push mov or ficom push cmp sbb jl movl adc jo add inc mov mov xchg inc or jle xor push mov inc outsb sub ret xchg into mov sub insb cmp and int add scas add or jo cmp push (bad) (bad) (bad) adc mov lea cltd (bad) or imul sahf inc cmp pop adc add rcrl mov jge mov push inc js bound pop psubb mov outsl jg push mov adc ret sub rolb dec jne fdiv fwait mov inc mov inc jp int xorl fistp xchg (bad) in mov nop mov push test (bad) (bad) jge repnz push call cltd mulb sbb xor inc cli out movsb mov insb call faddl call adc mov pop and lea jmp lea jmp fcmovb sub data16 adc sub ss mov push push or adc popf scas mov or lea lds lcall push sbb xchg cltd push inc addps out sbb or lea and xor pop cmpsb mov je fisubl mov add and mov in (bad) inc add sub lods sbb add and mov fbstp dec or je or decb push lea xor push push inc inc fiadd das test std rcrb sub xor mov jle and push nop pop lea lahf dec xchg jmp mov dec inc sub imul mov lods in dec push push lea pop jb rcll push fwait push jmp fiadd in ja push and dec or and sbbl (bad) push and dec and xor dec jnp clc sub loope jl mov test mov mov push or dec je dec adc push adc call sbb faddl inc dec int3 jl fildll push xor or mov (bad) jne sbb icebp (bad) xor jbe sub add add ucomiss clc clc sub sub mov push rcrb xchg aaa mov cmp pushf es das jo mov jge sbb mov sub mov clc push dec mov jo mov cmpl mov pop add inc dec test push add xor mov xchg dec add test jne jmp rcll movsb ds mov stc mov (bad) or push add jbe mov sbb and or mov std and cmp dec inc sbb lret fsubl dec inc mov insl xlat lea sahf mov (bad) aad pop add cmp jle cmp sub xchg scas pop sarb loop or fadds cmp cmpsl xor adc push jmp out push sarb add (bad) inc mov pop ror push loope cs mov dec add fsts mov pop pop sbb daa in and jns cmp jne inc dec push popa xor add add mov xor data16 sub pop mov aas sbb jecxz push nop cmp and push leave call mov addr16 cmc out ret add je stc lds add cmp in in adc loope pop lcall and mov fiaddl xchg inc shll xchg push les dec xchg mov xorb xchg (bad) dec ds mov or in add xchg sub imul and mov jle pusha repnz add std ret ret popf negb out sti cmp sarb jecxz ret mov repnz and sbb push pop cmp add inc pop inc mov mov or pop or sbb (bad) dec dec mov mov adc call adc enter jle imul in pusha lods aas rclb (bad) mov add shrb (bad) sub mov loopne add mov addl popa outsl sbb jns add in arpl cmp push adc arpl je pop in mov movsb dec je sbb adc push and pop xor mov not jecxz mov mov jne add in push push sbb hlt dec cli jne pusha xchg and dec ret push and add daa adc push push cmpsb xor and jne out inc push pop ljmp lea mov xchg mov fisubrl or inc add lret mov icebp xchg test adc or inc inc push lods sbb mov test ret add pop lcall xchg outsb add xor pop pushf push fmuls and popa push push jge sbb jo cmp popa pop shr jb xor push and mov test xchg (bad) das xor into or in mov pop jl js mov mov add xchg xchg je adc sub and mov rcll jle,pn ret rcll mov mov xchg sbb push add es scas adc or inc adc adc or cmpsw ss inc in add je add push ss cs mov rcr or into orl mov (bad) xchg and into and or jge mov pusha sbb in movsl daa cmpsl mov ss add sbb add mov fdivrl xchg in adc jns jecxz insb out in and push das push add jnp insl pop xchg add sbb imul fisub push ret into aam cmp dec int3 inc cmpsl mov sbb enter cs cmpsb enter or sti dec lods mov pusha xor (bad) and xchg rorl ja add mov jae or idivb sub mov adc xchg xor jle mov mov out mov add aaa icebp fadds jo pop (bad) cmp and inc daa or inc adc mov dec aam jl sahf dec push cmpl jp jne inc and dec dec roll daa dec push mov jl incl mov cld aaa mov ds cmp lods add and das imul push mov jge mov scas or add lods scas test testb add or (bad) jnp rolb mov push mov outsl jl scas jo mov push mov adc test scas rclb or test and mov inc clc lods int3 (bad) pop mov ja jp add push call inc xchg rolb stos outsl rorb lea rclb stc or add loopne xor add push mov jo jmp pop and jne imul je fadd xor cwtl rcrb cmp pop push pop fsts divb jb mov or outsb sub mov mov xor push pop sub popf cld in mov mov les sub push or jo inc pop push mov dec fmull stos and mov mov pop xor (bad) rolb add stos or and push lcall pusha cmc cltd mov sub cmc aas sarb int3 adc shl sub std mov xchg nop cld and add push repz sbb pop test sbb rcl add jne (bad) jne add lea jp insb mov mov inc ret cmp outsb dec aam push push cmpsl rcll ja aam push adc mov push push mov adc aas or mov loopne xor aad mov push je jo inc mov sbbb out les and dec in ret jle or push sub scas insb enter push cld dec addb mov jle inc int3 push add insb inc fcmovb out or and insb ljmp fdiv loopne cmc lret (bad) mov insb ret pop sub sub mov stos jne outsb mov sub dec xchg sbbl push test cli and add mov cltd fidiv dec mov addb pop cmc loopne ret shrb inc (bad) lds add ja mov mov clc lea lret out push clc pop int3 xchg je faddl out fiaddl or leave push loop je idivb test das xchg add push pop mov push push add adc outsb pop ds push push dec add pop mov pop and sbb pop push mov mov scas dec cld mov jl jg push stc jbe dec mov jmp or mov sarl loopne dec jo cmp imul xor and (bad) mov inc or lock pop cmp lock data16 xor xchg test xor movsl add pushf clc inc and dec clc add mov mov es aas inc or sub je dec ret cs push or mov (bad) mov divb adc jno enter and orb test push or push sbb (bad) xchg and imul xchg or add add adc int3 jb cmc dec loopne jmp pop les inc pusha outsb pop cltd in xchg add and fimul xor cmpsb pop pop mov lock push pusha push lret pop repnz dec cltd add or adc mov loopne dec push addb nop rol dec lcall adcb xor jg jle jne pop ror mov bound inc rclb xchg push push ret ja push pop jp push sbb sbb xchg sahf (bad) mov xchg repnz add cmp fdiv arpl push jnp cmp pop jnp lahf push mov adc push or (bad) mov cmp jp imul add in jg sub dec adc xchg pop mov or add dec cmp cmpsb adc add lods in xorb sbb xor insb xlat push add cmp push popa (bad) mov dec out push bound andb pop cmp rcrb add (bad) dec add add paddd cmpl pop push out push repnz fidivrl js add push xor dec xor aad push and inc loopne mov mov cmp movsl (bad) xchg ret add lret push imul pop dec movsl add push or dec mov push aad inc iret sarl in push jle in cs dec lds inc mov cs in mov cmp inc shlb and dec cmp sub or add cmp cmp or testb pop and imul shrb cmp aad adc jmp mov pushf in fisubr sbb cmp hlt lret rcrb xchg shlb fistpl sub inc dec js and pop and stos adc es les jmp arpl push jnp mov inc sub xor mov or pusha ret pop pop push cmp mov xchg add mov mov adc or sarl pop add cmp scas inc pop cwtl pop pop cs or iret iret push fldcw movl inc and pop pop add movsl cs test (bad) rolb sbbl inc cmpsb add adc and sbb cmp inc mov or pop xor mov jbe,pn (bad) mov test jle mov mov stos xor jecxz ret (bad) push insb sub and xchg mov add sub mov pop jne push lret fwait xchg mov pop pop push ljmp xor std pop add or adc outsl insb test push cmp cmc loop mov cmp xchg inc and dec test ja push (bad) push mov rolb xor fstpl (bad) repnz ja outsb mov mov cwtl or inc adc and push dec jp cmp jl mov ficomp daa push sbb fistpl push insb imul cs sub mov sarl pop sub add sbb js dec pusha in aaa lock adc sub dec insb mov push cmpsb push test add jg and fs push pop xor jne jp fisub loopne repz sub imul mov mov incl daa mov pop xchg ret dec and stos lcall fsts mov pushl dec sbb hlt cmp jle or int3 sub rcr and dec test cmp push add pop (bad) push (bad) cmp jne push ss mov lret and imul fcoms xor pop bound lret insl jne in ret pop pop mov push js or sub es in das cmp pusha int clc add add inc dec test jnp sub mov push movl xchg push and hlt (bad) mov or decl ljmp or outsb add scas adc mov fstpt pusha movsb clc movl pop insb cmp clc rcl je sub rclb push inc bts into push xlat add rcll add and push push inc sub jo sub inc mov or int3 add lock orl mov scas cltd js xchg mov push sbb (bad) add popa inc and or sbb sti fwait inc test in and push sub sub push sbb aad sub sarb mov jp hlt or xorl clc ds or jp repnz in and jecxz addl or cmp inc mov push cmp xor dec add sub xchg call insl ret sahf push imul sub xchg mov pop call push testl nop push fcmovbe inc sbb add xchg loopne jno push mov movsl shlb iret jmp arpl sbb inc arpl insb lock push in lods sbb sub mov insl lret xchg (bad) (bad) das pusha mov rcl push std pop push imul mov scas sub adc sub xor out push push cwtl lret jp insb sbb adc fs imul dec push add pop stos push loop jo aam jmp nop or add xchg sub sub xor test adc call int out mov test add add push bts pop ret pop cmpsl push ret jle out int3 ret pop sbb mov jl dec je shrb cmpb sub pop adc dec pop orl adc sub or imul pusha jne in fdivrl fnop test mov or jb or push call dec pop int3 inc adc xchg or cmp fmull inc shlb ret inc xlat mov add pop add icebp or test mov das pop inc enter or push dec mov cmpl dec dec add inc out call add dec sar mov pop js pusha or adc or mov pop je jo sub (bad) ljmp and mov fcmovb lret loope lea mov or leave jmp xchg mov fsubs pop jnp arpl and mov (bad) dec jmp insb loop pop add or sbb rolb das add dec adc sbbb pop pop out cmp fild add es je loopne mov mov xchg ret mov bound mov pop cmp aaa inc mov sub or push jo mov iret mov pop orb lods adc sar pause (bad) jp movsb mov cs aaa pop xchg inc xchg stc add or sbbl cmpsl sti fnstenv xor dec fwait sbb bound pop psraw jo pushf xor (bad) mov or xchg push arpl mov out adc out les pop (bad) sub add add inc outsb dec and adc and stos mov cmpsb (bad) add test sub push cli push je and fcomps dec inc push movsl dec push divl push jbe push push repz gs insl push jg dec dec lcall out add lea data16 cmp push rclb inc clc dec lea imul adc push add adc jl mov add or mov inc push dec mov cmpw adc fisubrl cmp jne dec fisttpll push outsb ds add dec mov push push insb rorb and sub pop and mov cmp sbb or cmpsb inc repnz inc (bad) push enter pop or loop ret pop push loope or push ret mov sbb add jp aad fmull insb push inc add mov cmp cmp int3 jle aaa pop pop scas pop pop cmp inc sbb cmpsl pop push test mov in ret xchg mov aam sti lea ret adc imul or mov mov add mov cmc xchg rclb ljmp adcl mov sbb aam rolb and add xor cmp add cmp or pop sahf ret incl push bound dec aad inc jno xor inc adc shr outsb mov mov je and jo (bad) pop dec enter push add xor pop jle mov inc adc pop dec push push mov or data16 pusha mov jecxz jp mov dec push cmp mov adc push ret (bad) insb clc jne mov jp sub dec add int add jle xchg (bad) mov rorb fnstsw push pop call add test pushf (bad) ret js cmp cmp sub or punpcklwd mov xor aam je cli dec sub dec sbb loope ret sbb fisttpl xchg and cwtl push lcall movsb or sbb or push jge xchg outsb push add or add pop add lahf movsb in aaa test outsl fildll cmp into mov ficom cmp je xor aad dec push xchg adc aaa mov (bad) ja mov or inc lock jo lret (bad) sbb cmpsl pop outsl dec fadds test pop negl or push cmp push push jmp and mov and orb sbb add mov fldpi dec addr16 sub cs push (bad) inc ds push push push ds cltd or xor push add out push push and stc cmp or sbb jp pop insb mov fidivr jl jae adc decb jl std add ljmp sub add cmpl clc dec adc popa xor push push nop mov xor inc (bad) xor or mov hlt inc sub data16 or jns testl jecxz dec outsb add inc test cmpsb dec sub adcl sbb add mov adc add adc xchg pop push push push push pusha hlt in jp icebp add mov xor adc pop cld loop push lahf rep xchg xor insb lods js jo (bad) enter and mov dec add dec inc cmp sub add loopne (bad) adc sar xor adc mov push pop pop rcl insb hlt cli or lea lock sbb push loopne or xor roll shll es xchg dec inc enter add push mov ds mov ds sahf std pop inc pushw pop out inc mov fwait jnp xorl mov and lods sub decb cmpsl mov add clc pop sbb dec xor movd add push fadds sub sub test cs push loopne pop rorl push push mov dec pusha call loop pushf imul hlt or dec add in sub mov jmp rcrb xor mov sbb call inc pop lds push push jmp (bad) repz in xor dec test push ss adc adc push fildl mov fs lahf into jbe jbe inc sahf pop push and jge neg aam rclb pusha xor mov pushf push cmp sahf sahf mov cwtl inc or test sub add es fwait and inc push aam push or (bad) aad add pusha rol cmpsl push in xor adc push push ljmp mov popf jb push pop jo push lock jl pop jns data16 cmp jne fldenv and cmp repnz and add fbld sbb inc xor xchg mov sbb jl xchg and inc mov hlt fwait push je and mov (bad) lret xor dec push (bad) mov lcall jge add jno add out and ds or xor call xor sbb (bad) fnstenv push mov addr16 mov ljmp mov test pop mov jp adc out into push fiadd push js jg (bad) rol lock sbb cmc mov sbb cmpsl sar mov adc lods cmp adc sbb jl push inc je push xor loope lcall addb and (bad) push push inc xor adc stc pushf lods xchg adc pushf and inc leave adc addr16 inc jmp sub sbb jns dec mov adc mov shll cmp icebp ja sbb and sbb inc test pop push cmpsb push in flds ljmp inc out je jmp dec push and sub jge ljmp cmp popf push sbb push and loope or or sbb sbb ret xchg hlt (bad) subl mov xchg movsb jbe dec jnp dec xchg dec mov js or pop ja jle push push popl mov jmp cmp adc or push or cmp test pop iret ror adc aaa cld dec push in push push cmp lock sub les mov insb push pop lock inc in and push mov push nop jns sub inc pop jae add mov jo inc dec mov and jge adc adc adc pop es cwtl push adc mov push or push mov sub dec mov inc aad pop bound cs repnz jnp cmp lds addr16 movsb or (bad) cmc xor pop push add (bad) mov dec lds lods cwtl (bad) (bad) xor push jp pop fsubrl mov or xchg int3 xchg pop push inc add pop and add mov inc ss push loop mov push pop jmp enter add add data16 or mov inc inc sub pop inc je jmp adcl addr16 sub scas add sub inc add push cs mov lea pop or xchg xor jp fildl sub imull sub push nop and gs and sbb and loop push leave or or xor xor mov and insb jg adcl ss popf mov fmuls andl cmp inc je pop cmp pop pop jl adc je sub inc adc sub (bad) jmp outsl cli xchg mov or or cmp adc adc add jg sub add insb cwtl push fisubl jle mov cmpl jge inc (bad) jp or cmp jle fisubrl ljmp adc (bad) jg push push push add jmp lret lock jg psllw adc dec xor lea pop add scas push adc je add daa add inc push adc addr16 mov jge adc stc push jbe cmp shll jl jo mov inc pop inc pop lea push popa add aam incb pop out or push mov adcb pop (bad) lret subl and pusha mov ljmp xlat sub adc mov sub pop cmp stc push inc push nop pop ja inc mov cmp add sub sbb dec repnz flds push sub inc add out jmp xchg (bad) test or adc pop mov mov adc movl jl imul cmp mov add pop mov aaa jg xchg les xchg int fs xorl (bad) roll jp mov add jo inc add nop rolb sarl jl jnp or fsubs lcall xor in jns pop inc cld mov ja add mov jl cld in mov jbe jmp jb scas pushf mov scas jbe push shr out xchg push xor jl clc push inc cmp fistl fadd jae aas sub xchg ja mov xorb pusha mov push lock cmpsl insb ret mov cmp rcrl dec or inc mov mov movq jle add pop add xor lea (bad) push add mov inc mov or jl leave clc jo add inc add inc dec repnz push xchg cmp push test adc int3 mov stos test lret pusha sub jmp adc push negl loopne xor push dec mov xor sahf cmp popa xor mov jp dec or mov dec add data16 mov jne lcall enter fmuls fist mov mov (bad) clc in cli fldl add div fnstcw inc xchg cmp out out xor andb (bad) leave push lock inc nop jl test adc xor es or sub ret jle xchg inc lret jle adc popl hlt imul pop rorb (bad) (bad) addr16 inc jb pusha loop popf dec cmpsl sub add adc jns test adc inc push push xor (bad) out pushf (bad) fbld lea push idiv or mov pop add and xor xchg ja dec cmp add mov and rcrb add es mov and lods xchg out mov mov je add lock enter fsubr ret pop ds xor (bad) fmuls aad mov xchg daa jb or jne inc fcoml lret loope leave clc outsl sub sbb sbb dec fs xor xchg push add idivb mov data16 and loopne (bad) jb and aas nop dec mov and ret mov loopne test push andl fsubrs xor sarl pop add movsb jne xchg fimull ljmp fndisi(8087 xor sbb outsb movsl mov mov test and imul cmp add adcl mov push push divb add add xor aam or adc cmpl pushf je je adc or sub fisttpl mov aam pop add stc imul sbb fsubl or popa add xchg mov sbb push fadd stos xor jmp call add lret je movsl ficom scas (bad) push cmp and mov (bad) adc dec push cs sbb and iret adc adc jae mov push pop mov loopne sub jo lods pusha cmp or adc fidivl repz mov adc pop out pushl pop or jl repz xlat dec jle xchg sbb and sbbl adc mov dec or dec les mov mov push sahf push push xchg js call ret aam pop ret dec sub xor shl fsubrl add jecxz cmp cmpsl and test and stos push push push cmp sbb or in test data16 push or rolb mov mov rolb pushf add test dec jle lea loope aad pushf dec out sbb pop pusha jl,pn es pop lret add pop movsl xor cs push adc jmp lret enter dec fwait dec nop pop aaa outsl push sub inc mov sub xor cmp cs add mov push cmp lds add adc cwtl push sbb adc inc cmp xor dec fs mov pop adc dec xchg mov clc mov xchg std add mov mov pop lods inc add inc cmc pop hlt mov sbb sub mov rclb adc mov mov or or jp mov xchg and sbb loopne lea inc (bad) out sbb adc and wrmsr adc mov mov cwtl mov inc outsb pop add mov insl or lods sar loope adc push sbb sbbl clc mov pop rcrb dec adcl sbb cmp movsl xchg jo (bad) fnop (bad) nop and rcrb jnp loop les outsb xor dec (bad) shr xchg cmp inc cmp ret rorb gs jmp dec lods fwait rcll jmp xchg and cmp push push sbb push dec or pmaxub add rolb cmc push std cmp inc scas mov inc nop pop clc lcall ret xor test xor lea mov xor add inc mov call fistl dec jne jmp aaa xchg add sbb push push mov insl scas (bad) (bad) and negb sub and ret adc ja pop les mov cmp jl inc dec sub cmp (bad) rcr jmp push sbb pusha or cmp xchg sahf push pusha fisttpl push inc pop repz jne push adcb add out outsl dec sub add (bad) add fadd pop lods je lock sbb or push and es test fisub nop adc push inc jo inc js testb add push pop xorl push inc or pop ret mov js mov jns ds sub mov outsl rcpps outsl add rcrb (bad) cmp jne and push and sub mov insb sbb and or sub sti sbb rclb add cmpsl push lock add lods das loop fisub jne cmp aaa jle negl jns mov adc push xchg mov mov inc out jb and in and jae cmpsb inc dec push add push jbe daa sbb pop scas add mov rorl (bad) or mov or and test aas push jle push addr16 loope rolb push push and lock addr16 or in sti push ds jl loope pop in pop ret xchg jbe dec (bad) pop add sbb lcall lret (bad) mov mov mov mov bound jne mov inc loopne clc or incb mov roll dec js xlat or ss xor push fwait mov xor clc xchg jne sbb dec movsl xor push add inc shr cmp jg push or fsubr or andb out dec jmp imul rep or mulb je or sub xor pop cmc fnstenv cs gs cmp jmp add inc push or aas push fbld adc mov inc mov pop call and fsub add fs push inc add sbb sbb lock fidiv daa pusha lock jle dec roll jmp xchg rorl lods lods lret loope xchg mov sbb add pop push je imul out sbb dec cmp jmp push cmp and jne and sub push and in cmp in (bad) (bad) mov pop pop (bad) cmp out push fs push (bad) (bad) sub ja rclb rorb addps add je movsl clc adc notb repz dec js pop mov fsubr cmp lahf std jns push and jmp jbe cmp ds xchg add pushf jmp pop sub out dec xlat lock rcll or out mov rcrb push xor ss xchg dec sub aad sbb push ljmp (bad) add jge mov mov test sub add jge add adc mov push lcall pop pop scas add nop push es xor or push push test clc shlb adc push cmp pop pop push push and push data16 lock push push faddl dec sarl inc pop (bad) push cltd push js fdivrs or jne (bad) pop pop push and jle push push push dec gs lret mov push orl outsb pop xchg jo or loope inc inc iret cmc or and sub pop or xchg movsl sub fmuls cli add test add sub or xchg mov mov inc sbb movsl cmp xor loope les rcr das test mov aam mov adc adc in outsl xor add sahf cmp dec and ret (bad) dec dec and push push cmp stos cltd adc xchg sti sbb jle mov or push and mov fsubrl and jns adc push fcoml jg inc add orl gs (bad) out inc clc ret pop je (bad) fistl fadds clc outsb ret sbb add aam sbb je lret fmuls faddp xchg inc jb jecxz add lock int3 sahf adc adc out fimul inc dec jne std inc fstp add or icebp adc pop cs cmp jb push jo jno add jae jo and sbb xchg and inc daa test lds push push adc shrb mov shrb and xchg adc adc mov sbb loopne dec loop and push push pusha (bad) les fs cmp mov inc aad aad cmp pop sub mov jne nop lods mov adc xlat jg push mov dec loopne (bad) jnp int3 mov push idiv add aas in and cltd js ret rcrb neg push inc loope pop cmpsb jl into and sub add jo lods mov shrl xchg mov (bad) sbb adc pushf sbb push add add das cmp test stos mov xchg dec sub mov and hlt pop loop add sbb sbb add in cmp push push cs add pop pop mov inc cmp dec sub insb push mov and lds push in pop mov pop jp mov push or jbe mov push out lods xchg xchg xor pop jb clc mov add jle outsl loope loop movb movsl iret out and adc lret jmp pop cmp jbe sub jae aad stc notb insb jae mov into push xchg xor inc sub inc lcall ret dec xor sbb pop and and js adc adc mov push xchg sub xor push in je jle aas fs dec or pop dec clc ss cs or add or add orl cmp mov jae out mov push dec dec inc jl inc sbb int3 aad push leave add xchg ret mov je repnz sbb outsb pop adc add add sarl mov sahf adc (bad) adc xor add dec inc sbb push ret (bad) cmp std pop dec mov jo test jbe push adc fadds addb jg adc inc dec sub inc jg popf inc jle jle imul (bad) int aam jne (bad) lock mov adc mov inc push mov inc xchg (bad) repz push dec cmp add insb lea dec mov insb mulb jecxz call dec std add jb cwtl mov aad adcb fldenv pop add loop jmp popa movsl das or shld and shrb hlt sbb aad xlat and xchg cmp std bound adc insb sbb mov xchg call ficomp icebp cmp mov adc add andb out and xchg popa sbb mov cmp push fistpl and mov lcall sub les jae or or cmp adc imul sub adc sbb mov and xor push adc lods push fwait decl sarb ret fcomip loope or push push es inc fsubr mov dec imul add or mov add adc fs rorl call inc add cld out adc mov adc and sub push mov subl sub scas add dec enter push (bad) pop std adc sbb scas pop movl inc lea pop mov out and mov test and orl push cmpl leave mov mov cmp xor ds sarl std shll sbb scas mov or or mov push push mov dec xor add rcrl aas cmp andl push jle out adc pop cmpsl stos push add jl or pop test jmp and adc xor or push (bad) cmpl and and dec es xchg jbe das xor pop add add inc add in add xor test xchg cs jo out jne add jne mov stc aaa pop jnp mov popa add and ja cmp bound cmp in lret add push or cmp jle push rcl pop mov mov sahf in sbb mov ss and push adc sti or mov push repnz jg jne test inc dec push (bad) inc mov out cli adc out cs mov inc xchg mov mull pop xor or (bad) xchg int3 aas fdivs mov (bad) aam sbb stc inc dec fsubrl and inc bound (bad) mov xlat xchg in mov into fisub dec testl ss add pop xchg xchg mov inc cmp and sbb (bad) dec fmull or ret shlb xor add push loopne inc inc xchg or les pushl cmpsb and push out adc pop cmpl mov inc insl fisttpl adc shrb rolb sbb push in sub int3 jge repz stos sub int3 push push ret jbe (bad) in cmp je push js je (bad) xor mov pop pop pop mov and pop dec add jge mov sar addr16 mov dec cmp lcall jg adc iret insl pusha cwtl sub push sarb cld sub mov adc jne (bad) cs sub cmc jmp hlt inc (bad) jbe lock sub add js add inc fdivrs lret cmp adc mov in or sub or jl sub adc or lret movl dec int3 mov dec push push inc add adc daa and movsl jge sub popa add pop stos add stc add pop cwtl sub inc lods dec out and xchg cmp pop or jle rorb add push mov dec and jo fs push outsw stos call sbb (bad) in gs in (bad) and sbb add or add jb,pn mov jge cmp jg jne std push std or jne je inc (bad) je mov push add or adc sbb daa orl in (bad) ss xor adc fcoml movl pop test imul (bad) cmp gs data16 les add push sub add push inc sbb stos and mov sbb inc sub mov mov ret and or or add stc cmp (bad) bound test and dec out lret push push jmp fdivrp aam cltd test sub adc adc xchg inc std ficom xor cmp les inc lret les int3 (bad) lock or addr16 add pop cli cld lock les fiadd sub pop out sub cmpsb sub outsl jae sarl xor mov sub cltd xor adc jg inc test movsb dec loopne add sub push sbb xchg dec sub or fadd xchg out in push sbb lock lock out std mov cmc xchg push movsl lods scas jmp lret pop pop adc movsb es mov fdivrl jne mov jecxz pop inc addl or lcall hlt sub nop mov jne mov jl jmp add sbb int3 popa adc and push jo imul dec insl pop jo xchg sub cmc pop sub adc mov push mov dec xchg pop andl aas sub insl mov inc dec dec and pop ret fbld addr16 and xchg hlt xor idivb sbb das inc clc rcll sub cmp sbb (bad) popf lods rcrb inc pop adc js fs fs fwait push mov inc adc cli mov xchg cs push sub push push nop and sub ss das call ds mov xchg loopne in inc ret add push inc jg sahf ljmp out clc inc sbb jo rorl push inc pushf mov test (bad) adc and xor adc ret xor xchg cmp (bad) jo push fidivr pusha test adc xor mov cmpsl ret leave mov or cmp (bad) mov push lret jae pusha push cmpl inc clc sub cld mov je mov lods imul aam or (bad) mov lret pop xor or jmp sbb adc add repz adc add nop adc imul test adc or mov or cmp jo inc orb push xor (bad) push push cmp sub push add outsb dec mov jns lock fmuls pop or jbe das pop push ret pop scas in sbb push xor popa pusha test out or push push cwtl push fadds lret or les andl sbb xorb dec fimul xchg mov and or imul add cmp mov xor sti and inc sub xor and inc dec cmovns add inc cmp mov bound and push jns sbb shrb aaa or cmpl adc mov in jns push push out rolb mov les aad mov and mov clc mov push pop repz das adc push mov sub add jmp mov std mov push iret and pop push lahf insb fs adc cmp mov mov inc dec test pop and fsubrl sub mov add sbb aad rcrl jo xor or out add dec mov loop lock jl call imul std cmpsb xor add test call pop addr16 mov sub or and jg aas mov dec lret idiv mov mov mov mov shl data16 test push inc stos sbb ljmp jne fnstsw clc add jmp cmp sub inc sub mov and scas jno push jge sub into sbb add call add push rcll mov dec push aad es add mov and inc mov inc adc or movb mov in cmp push fidivrl dec sbb shrl mov inc or fisttpl push or dec ljmp fidivrl sbb add in (bad) mov movsl push pop clc adc incl and lods test clc jbe sub inc je inc sbb mov dec or inc lea imul push (bad) push lcall add jae inc cmp rorb inc clc (bad) (bad) daa push lea (bad) and and les adc rol mov daa (bad) idivb mov cmp jbe cmc sub test push in (bad) jle push les std dec and bt and lock (bad) (bad) push push mov adc and cmp fdivs (bad) fistpl inc lds out xchg dec cs mov (bad) arpl movsb addr16 push pop adc cmpsb add aas sbb pop fmuls test mov mov shr push sub adc jmp adc nop ds fcomps inc dec push lods push int3 or push pop cmp movsb and or dec adc icebp sbb lret xchg ja cmp jno call and rcrl out xlat shl lds or hlt or xor cmp and das loope ss aas aam ret push push pop add jb or dec pop inc js push push sbb std mov mov aad loope bound dec in push loopne and addr16 add or loope sub es add lahf push cmpsl std and add adc test sbb mov movl sbb pop add push adc (bad) push (bad) jmp adc or and push add je andb je pop xchg lea jle mov jne int3 adc lea xchg push ret out push lods inc xchg pop imul add ss ror or ret jns xchg ficomp pop or xchg sub loope dec lea lcall and outsl push push data16 mov cmp xor insb dec sti pusha ret pop push cwtl xchg mov cmp sahf cmp xchg lret and (bad) je or adc cli sub je aam push sub ljmp push add push lock adc sub add dec pop cmc inc cmp mov nop cmp add test push jle sub fild (bad) or jo sarb ret or xor jmp adc dec movsb mov insl insb push add mov push out mov insb pop mov lahf out loopne sbb add sar fdivs cmp (bad) mov fwait mov add inc cmp das sarb or dec adc inc mov xchg xchg adc sbb sub inc add xor inc pop cmp xor xchg add shrl add xor (bad) xor and sub lcall mov cmp cmpsb imul dec add push push cli dec loope mov pusha push cmp push int3 je daa jno sbb push mov jo int3 (bad) mov push fidivl bound into cmp push enter sub sbb mov pop dec adc nop test jnp push mov adc adcl or in xchg cwtl aaa xor loopw add inc mov stc movsl test aas add adc pop adc cmpl and inc sub mov je mov mov movsl jmp xchg jl cmp or xchg add add (bad) jbe test and xchg adc lret mov call decl adc or or outsl mov inc cli je insb lea test outsb pop mov push push mov inc add js (bad) mov sub int mov lret mov mov sub sahf pop pop jns push mov cmpsl test ret push push and cmp pop in xor mov js and cwtl or int3 and push pop adc push jno incl sub mov imul pop (bad) loop sti cmp jae xor test out ret push fsubrl nop pop sbb push or and cmp jae pop mov xchg mov or push xor into cmp mov jb rorb dec stc sbb mov and sbb loope cmpsb sbb sub sub movsb loope out test test int pop push or or mov add pusha and stos and orl jmp sub mov sub add mov sbb inc (bad) fmuls (bad) jns (bad) sbb insb xchg cmp inc and jg shrl sbb jns ret mov dec jae sbb ret jns push add nop adc or ja xor adc sub adc and pusha jae fisttp inc pop inc out pop sub push ret es push dec jmp jbe inc lret push inc rcll dec cmp push push fisubl xchg sbb pop or jo mov ds in mov or or cli inc loopne dec ficomp pop mov pop adc add jo inc loopne add push mov and dec stc jbe jp cmp push push mov push sbb jne mov pop dec loopne mov jecxz repnz push fs adc test and enter dec movsb mov add pusha imul jne push faddl loope pusha jle pop sbb aas push movsb insl add pop and push mov or inc sub int3 stos lret sahf ret addr16 and push pop popf jmp xor sbb sub js adc dec mov jo mov movsl clc adc scas fstpt pop or leave inc int3 dec ret cmp divb pop add add inc pusha push idivl andb push pusha mov and add push sbb add add sbb push adc das sub iret fbstp inc or hlt pop sub call sub and push sub add ja pop add mov or push aas or mov mov add or add mov mov je xchg je lea jmp dec push insl jl pop lcall xor xchg mov insb mov cmpb adc je dec sbb sahf es mov cwtl jne negl jae movsb clc or mov xchg je cmp pop sarl inc mov fstps and or (bad) mov insl cld inc mov mov xchg jno lods loopne dec fs loopne add cli jae or push push aas notb inc mov push adc hlt stos imul mov and fdivl jnp mov rol xchg inc fs sbb push repnz add arpl adc ds sbb or dec adc xor pminsw (bad) adc lret xor jno jno (bad) jb pop push sbb sub xchg int3 ljmp enter inc or push xchg lcall fs ret xchg pop push or and and and mov es jne mov insb pop sahf pop (bad) decl and mov cmp movl test cmp movsl and sahf jp jne push push xor push lods std inc push cmp mov and cmp je scas add rorb adc or mov mov add dec or ror add lods (bad) sbb lods movsb or test jmp enter in cmp or mov mov adc (bad) je or out sbb lea xchg add or mov icebp loope xchg add fsubs pop inc or xchg dec sti jg movsl rolb mov test jbe mov push int inc xlat (bad) lret mov adc add or cmp inc or add jg out cmpb jne or push jmp and sbb dec add push movups pop push sbb lcall jne pushf push jp jmp leave inc cmp movsb adc pop lahf das cltd mov faddl popa adc cmp adc fidivl jo push jle iret shll pop in bound out inc or imul lret xchg js xchg mov jle jecxz outsl cli mov mov pop add enter push jne jl movb dec or ret cmp int3 inc jbe cmp je pop mov movl pop add push aaa jmp push mov scas inc sub in orb je cmp xor adc add xchg cmpsb add divl mov cli rclb jle or (bad) fst mov inc mov jae test jne sub mov sahf in mov mov mov add sub push incb insb push loop cli mov jnp pop jne orl inc out pop add pop mov mov (bad) std cmc pop push je inc or lret sbb sbb sti or in dec or dec call sbb adc shlb mov mov sbb add sbb dec out roll ljmp popa xor aaa push test ret inc add and sub adc inc cmp push pusha adc push push loopne aad imull movsl push push add out or lods inc adc mov pop sub pushf out pusha sub mov outsl pop pop mov lcall inc call inc xor enter movsb out add or xor (bad) push add and fmuls push push insl in pop pop fcompl push push pop mov jecxz or xor andb add (bad) jno pushf mov sahf mov pop jnp subb nop (bad) mov mov int3 test xchg rorb inc mov xchg mov je add (bad) add mov lock test or inc lret cmpsb (bad) lcall and mov cs cmp sub call cltd rolb or jge sti mov inc je pop orl nop push xchg inc mov mov cwtl subb cltd jne mov cmp sahf cmpl orl sub or shl adc cli enter push xor mov (bad) pop mov jne add pop xchg lcall adc mov push cmp mov sub sbb fcoms stc add (bad) jecxz xchg fidivrl popl xchg dec loop jnp int3 pop jbe fadd outsb mov stc loop aad inc inc fadd add imul dec outsl shl or adc cli pop insb sbb mov mov jne in sbb popa sbb inc dec cmp jne pop jnp jl (bad) movsb nop sub jle fwait or fistpll or stc inc sbb or or lds jl inc sbb fwait jbe addl enter jl dec sbb sub bound jb adc loopne cmpsb and dec shrl cmpsb aam dec nop pop nop dec lods and sbb pop les dec mov and mov dec dec or adc ret ret (bad) and inc inc movsl sahf (bad) push incl add jg rorl and mov (bad) jmp lock addb mul add mov ss fcoml lock mov inc mov addb xor test xor and xor sahf or rcrb dec pop push push fiaddl adc sbb xor mov mov jns add dec int3 lods adc jb cmp adc test lahf pop add push or std rcrl pusha jo mov out adc push adc adc popf out test jle icebp jg mov inc mov xor out test dec or lret imul jae cmpsl ja sbb inc mov incb cmp adc int and loopne pop adc fiadd push push or add movsb addr16 ljmp sbb cmpsb rdrand mov add pusha push or fdivrs jp shl test movsb jbe mov je mov sbb push clc dec dec jne lods mov dec insl fs and lea jl ljmp add and or adc sti xchg dec out rol (bad) jne sbb lea or jmp jo push adc (bad) sahf test sarb dec mov fstps ss lea mov or dec or and or push mov or mov jnp jbe xor (bad) jo pop sbb xchg bnd pop ret shrl movsl mov sub xor ss loop or insb lret cmc test cmpl je bnd int sbb dec cmp jne add mov or mov test add aam adc and aad cmp aaa (bad) ret pop add (bad) mov sub sbb movsl pop adc icebp adc xor cmp adc add sbbl roll enter mov sbb jl push xchg jnp pop aad jmp into pop imul pop dec leave in jmp pop sub bnd enter mov pop sahf mov jbe sub inc dec hlt push push in add jb push and or mov nop data16 adc lahf daa adc jbe xor or mov xchg add mov jg lea cmp mov push inc cmpsb (bad) push push outsb add nop or inc push cmp sub pusha jns idiv cmp sbb imul es lds sub insl push cs cmpsl lds aad and add inc push add and in xchg imul stos je mov add (bad) enter mov sbb mov sub je outsb pop adc or dec dec cmp xchg xchg mov cmc or das movsb ret jbe hlt std cmp push lock lods mov sbb mov out xchg rcr sbb and or in fmuls xor or lds shr (bad) sbb movsl push lods sbb sbb mov hlt fs dec hlt push outsl xor pop out outsb push mov test gs dec call fild jno lret (bad) leave inc push xorl xor adc push inc sbb dec into (bad) movsl mov in lds fisubr out add adc loope,pn push dec fild lods adc xor sbb jnp push xchg mov jae add push xor addl add shlb cmp and into roll pop bnd fwait jns or push fdivl insb xchg add repnz push push or mov pusha inc inc cmpsl and jne sarl inc push roll add xor in mov sub repnz inc aaa sub (bad) stc adc inc or xor mov outsb pop adc push push loop inc mov and inc jns sub pushf pushf xor mov dec int pop std repz lods fidivrl jle jo add add ret push sbb popa and fdivl mov xchg ja push or cltd xchg out or lahf nop adc in out inc test push mov and sub dec bound jo fs xchg icebp jg sbb sub (bad) into inc dec mov movsl inc fildll (bad) dec jne sti lea pop pop push push stos pop cld push push andl sbb or and xor push add cltd sbb bound push ret ja push pop mov (bad) pop rclb aad mov mov lahf add mov cmp (bad) mov pushf pusha mov mov dec out add pcmpeqd jle push gs jl push dec dec mov add cltd push inc cwtl rol pop lock out adc jb imul lahf push popl add movsl mov xlat or jbe cmp mov pop add test mov in mov ret add in push mov (bad) mov lret inc lock test je cmp clc ret stc ret and (bad) int3 add dec fildl add mov pop pop mov push xchg and or and out fs add pop push shl mov mov or xchg insb push sbb and insb or adc adc rolb (bad) out pop push xor fdivl lock outsb push push push cld or add shrb dec add fs sbb pop (bad) xchg hlt mov fsubrs cmp push push adc adc hlt xchg mov add add sub aad lea push push rcl mov sbb insl loopne inc add mov outsb imulb rcrb adc add loope pop or push out sbb int cmp (bad) pop jbe sub stos push aas mov loopne mov test sbb add pop and int data16 lea push lock add jmp (bad) jb mov incl jno shrb add ret in loopne or mov add ret sbb out cltd (bad) (bad) mov mov clc sub ss clc cmp pop mov cmc sub dec repz push xor push push push push int3 push mov inc push adc rolb popa xchg push test sahf js addb sbb out gs cmp jbe dec in neg sbb mov and dec add push sbb xchg in mov ret test lcall dec pop push jb lahf adc gs lds jo outsl add lret jmp mov jg push or add mov inc pop xlat enter push add ds lock arpl pop test pop and lret into adc into mov rolb rcl and inc cmp cmp cld int3 and pop lahf mov sahf xchg mov and call test or push jge fstpt adc add or sub pop xchg add insb add push push lcall fnstsw jle push mov pop into jnp sub xor sbb lcall jecxz adc cmpb mov xor jl out jge pushl pop bts inc and stos test inc jo adc sbb adc repnz xor push mov push or (bad) or fsub test outsb sbb loopne or pop cmp pop sbb lock out (bad) xchg sub sub sub or push dec call sub push or xor sbb pop mov xchg sarb cmc (bad) or xchg dec adc and and xor pop (bad) adc stos rorl dec addr16 or adc daa out fs xchg mov lea mov int3 add jnp cmpsl dec and adcl and sbb push pop sbb imul add pop addr16 orl (bad) lea mov xor adc and mov loop dec mov pop push fs sar push add dec and cld loope (bad) pop cmp bound nop sbbl dec lods fs pop inc pop and inc and (bad) xor xor adc or mov or cmp aas test jl adc adc addr16 sbb out push lea imul or loopne add das pushf and es sahf and (bad) jno pop ss ja iret enter sbb inc rcll sbb lret (bad) push mov mov and xchg push rcrl adc inc lds inc push xchg sbb mov pop jb xor sbb or lock xor (bad) jo inc daa mov je inc add jbe sbb pusha stos or xlat je sahf inc test or mov add and jo mov call lret adc repnz jl idivl mov and pop ret jb mov movl adc inc pop rorb and add pop mov mov xorl and pop add inc sub mov movsl pusha (bad) xor (bad) in pop dec sbb movsb rclb repz mov cmc call ret dec xchg fmul pop js add mov cld (bad) push (bad) push pop imul or test adcb hlt (bad) and inc aam lea push dec les loopne cmc mov mov mov cli mov adc xchg mov mov loop sti or pop imul add add add jmp test or inc mov push mov das in push sub dec sti ss sbb mov push xor lock mov insb mov ret cmp imul cmp imul sbb cs pop jg repz repz add mov add push and test imul adc or test push sub in lock add out jne add std xchg cld add push add add adc xchg int3 xor and insl scas mov dec enter imul dec sbb push insl imul cmp mov lret adc jne loop or inc jae aad insb inc addr16 imul orl inc sbb stos inc xor xor mov cmp enter in inc push stos addb rcr or (bad) ds sbb sub jecxz adc or fcmovnb stos push (bad) mov aam insl setne out add sbb sub cli imul push mov cld lods jl out inc xchg dec scas mov pop adc add dec pop imul gs pop mov or mov jl lcall out add enter sub jge jg shll lahf or cltd adc xchg decl (bad) push cmp and insl cmp orl jp lds mov dec push dec add add add sbb push add and insb test adc and jb adc pop sbb inc adc imul pop jbe pushl pop sbb rcl cmp lret mov das (bad) inc pop xor and cmp mov pop and fsubrp lahf dec test lea mov or rorb sbb add xor lods adc (bad) popa in jg add adc xor andl push inc and jo dec aas or add dec fadds ja bound lea out sub inc jne andl jns enter mov cmp ret push loop xlat pop or pushl inc inc (bad) or dec dec sbb (bad) xor push xor insl push push and or sbb cmpsl (bad) cmp lahf insl cmp jb nop sub add xor aas add or inc add pop jl popf std and xchg sub inc cmpsb adc or sub sbb gs push push push inc mov mov rorl dec mov inc out pusha sub dec push or (bad) nop sub rorl inc push sarb icebp dec jne jne mov or pop fisubr push fwait adc dec iret shlb jle aad inc mov (bad) sbb mov sbb rorb dec push lods mov push inc cmpsl inc mov sub jecxz push xchg pusha in pop pop enter xchg xor sub sbb movsl push ficompl sbb xor iret jae or mov pop sti lcall add push pusha lret jge decl mov xor jg jle ss loope repz jb dec cmp leave inc or fdiv inc dec clc and xor inc mov je aam add adc sarl out lea or cmp mov pushf sub add int3 xor clc push or xchg in sbb in popa or movb mov mov cld cmp pop ficoml push sbb mov mov adc mov and fdivs push push adc aam orl mov pusha enter loope xor and inc jl jmp xor mov add mov or out call popl mov push pop or xchg hlt in lock dec adc test mov and push movsb sub (bad) and sub pop mov or jbe jg mov enter adc sbb jl mov pushf pop (bad) inc push add xchg cld cltd loope mov push sub xchg adc adc xor adc fldl2e mov movsb mov mov xchg xor mov adc inc orl adc pop inc pop jle fild ret add incl cmp imul into mov popf popa lea out lcall push push mov inc cmpsb sti shr pop decl mov outsb lods mov mov mov xchg mov push lods mov jl adc pop push mov add fiadd dec pop xchg test sbb mov push jo insb ja pop xor or iret cmp pop inc sbb jnp test sub insb mov mov cmpsl dec daa push adc stc dec adc adc fsubs cwtl adc xor repz adc and fisubl (bad) push in out adc fs push xchg xchg xor xor and add or inc dec or xchg dec push add sbb cmp xor ss add daa ss or add in cltd add fadds add mov push pushf add mov and and add adcb xchg loop push mov test mov or mov cmp mov xor add xor dec scas in cs sub sub in sub in scas in es and pop sub (bad) mov ja and fdivl daa and push jb push push sbb and pop sbb mov and inc ret pop in inc out mov push test imul jno and sbb mov pop shlb test in and or xchg sub add mov pop adc int3 sahf pushf mov sbb loopne mov popf movsb pop push push cmp lock popf pushf pushf pushf mov js imul aas or pop sub mov (bad) aas les jg mov add dec add adc mov jl add jbe dec cwtl popa imul and ljmp pop cmpsl pop xor pop mov push adc leave lods sbb fildl sgdtl sbb lds sub (bad) xor and or test mov add hlt jmp push or fsubrl adc dec pop sub mov xor xchg mulb insb ret push push mov push push fcmovnu lea popf aam pop rorb enter imul sbb add rcrl and das push roll or das or lret int nop das xor mov (bad) sti in je push sar jecxz pusha loope and lock jmp jmp sbb push in ja cmp xor adc mov or mov fisubl aas loop mov add test xchg jg mov pop mov rcrl cld inc adc dec cmp jle push pushf mov pushf (bad) adc adc pop fstpt mov mov (bad) xchg or add push mov hlt and or add push push notl xlat int xchg xor mov call scas jnp inc in fs and push and js sub xchg iret lcall lock mov int pop fild pop xor add cbtw int3 sbb movsb jo cs int mov push dec xchg inc mov js cltd mov cltd push push and ret test pusha sbb xor pusha fs fs inc mov cmp adc xchg lock ret pop loopne jns,pn mov jnp add mov mov (bad) rcr add mov mov loopne xor push mov addl add add pop cmp nop mov or (bad) jne add push push cmpl lods xor lods pop mov xor pop jp ror ret pop xchg dec add sarl call jns add ret enter jo cmp and push xchg jg mov mov adc add add (bad) and shr or notl jl jl inc ret push in in adc push lods add lret test ret mov in roll roll lds push mov sub (bad) xchg js rcrb xor or in rorb adc fmuls outsb jge ja pop lea mov sub dec js cmp mov or jl mov jmp pop cmp or jbe or mov data16 lods sbb into xorl push push inc jg nop sbb inc sbb movsb push add dec adc sub xor dec jge mov outsb jle pop sarl ret jo loop jmp dec call sahf sbb clc dec add enter cmpsl ret popa mov add sub cli pop mov fldt mov dec adc jmp test xchg jb mov lea test dec ljmp addl rcrb sbb sub mov add movsb push inc cli rcll popa in sub sbb mov je sarb movsb dec pop aam inc pop movsb mov dec or aam mov pusha add mov hlt lea xchg push fsubrs dec sub lea dec pushf adcb fsts push clc es xor insb pop mov push adc pop mov or loopne push sub mov mov xorl test daa rcrb (bad) (bad) xor dec sbb cmp add nop inc rcrb fmuls pop xor add lret push xchg ret cmp dec leave mov push or and out lock cmp in and aas fidivrl cmp push fildl and outsl jmp add sub cmpl push add mov push mov fs cmc aaa or mov xor iret (bad) je lock or test mov push cmc inc jne mov (bad) and sub dec push push je cmp (bad) mov jnp add or push sbb lods and sbb repnz pop pop icebp jae pop pop (bad) icebp ret jne push mov out and or rclb cmp inc and movsl inc mov or loope cmp pop ja add adc dec and call nop jmp mov sbb push jns sbb dec ret (bad) push xor xchg je lret add add xor mov es adc addr16 cltd lds call or dec adc inc pop sahf hlt fstl cmc int3 or fisttpl outsl mov xor mov push add add mov cmc sbb sub lcall and jle xor inc adc push add mov shrb push movl push add in (bad) jl cmp cmp mov (bad) xchg adc call jl mov or jge mov ljmp inc xchg test loope jo add or inc jo add push adcb sub sub sbb mov mov and sbb imul cmpsb imul in cmp movl mov jl xor ret sbb lods sbb and data16 (bad) mov push jbe pushfw push pop pop pop push (bad) xor adc add jl dec add add add add add inc lods (bad) xor lret ss dec jnp adc inc or xor cmp add mov cmc add rclb or in jae or and pop cmp mov add je mov movsl test outsb adc push mov adc nop mov pop or push or das stos dec pop sbb push xchg roll inc sub pop loop,pn pop xchg jg jl lea test or decl add jne cmp jne test test fadd adcb jmp lods daa inc and pop mov stc outsb or mov push pop maskmovq sahf cmp cmp jne xchg push push pop test sub jns add jae pop add dec or or push push (bad) mov into inc and xor pop lahf xchg pusha paddusw push mov add push je pop mov xchg testl and xor bound ja add or stos sub (bad) cmp mov (bad) xor sub pop fsts (bad) adc testb lahf lahf sub xchg or or mov add stc in nop dec push sub or mov subl mov loope icebp imul int cs inc xchg sbb xchg test mov fcompp les adc stos or inc or jle cmp mov xchg mov imul and int3 mov add inc mov pop dec cmp ss fwait (bad) cmc inc sub shll and fimul ficom and iret test lods int mov shlb jns (bad) dec sbb cmpsb rorb es or xor sub jnp cwtl add nop cmp push fdivs jno test push mov aaa push push test or inc and sub les jg movsl inc mov lea sub dec (bad) and adc push and lods cwtl mov js adc jge fisttpl push pop rcll add sub or call cli jb dec (bad) push je xor sbb add mov cmc jg fdivrs divl sub jl cmc push push xchg bnd mov push cmp push push push sub movsb jl sbb lods jp (bad) aaa or je cmpsb or push (bad) and jle dec jge jl push fwait xchg pop aaa mov sub fs xor xor push xor cmp or das scas fcoml fmulp (bad) pop mov or inc aad pop pop push insl mov xor dec add aaa fadds adc jl sub pop inc inc enter icebp xor imul or and inc mov xorl movsb fldenv add xchg mov inc sbb ljmp adc sahf mov add cwtl inc cmp mov fsubr popa add test jle cmp xchg (bad) lea push or and lods push lret and enter inc mov adc sarb mov lds pop jmp push or cmp and lea out inc incl push or dec mov leave xchg cmp mov and jo sahf mov nop sbb or (bad) xor adc lods insl (bad) mov lahf (bad) das sbb in fwait dec adc push daa mov dec sub outsb or in and or and cmp test adc jmp adc dec loop pop push cli sbb xchg cmc add lods loopne sti or push push mov pop mov adc mov and push xor addr16 dec jg mov mov add (bad) or testb xchg pop push xor imul and inc outsl addr16 xor inc pusha je repz inc sub in cmpsb push push and mov or mov or pop sub rcr repz mov and inc and js or lea or repnz lea rclb pop adc adc test dec add or sbb ret push roll sbb pop sahf movb adc or push lock adc adc loop push adc inc cmp jo or cmp iret adc push repnz jl sbb push leave and or push xor adc jl enter and sbb sub add push mov fs es fs xchg mov daa cs cld jp inc push gs cmp addb push aam inc push cmpsl jecxz outsl loopne shll sahf and lretw stc jmp popf mov icebp push and push mov xor lret mov out dec (bad) rep mov ljmp lods out fiaddl inc adc add fs lret sahf jns mov add ret cltd dec push loope adc xchg inc movsb adcl push add lahf adc or insb mov push push test push cli data16 dec mov testl adc notl sub or sarl sub (bad) loope inc jle jmp sub lret rcl cmp xchg aam push cmpsb dec jecxz push enter jmp xchg fs and lcall shrb icebp adc js sbb dec adc or in or jg outsb cmp mov sub jg adc cld movsb adc pop bnd jne push ss push popf sbb mov push pop add lahf fwait shrb pop lcall je orb lds nop insb push cmp xchg addr16 sbb imul inc cmp fisubl sarl rcll mov dec jns (bad) mulb aam and in add mov inc insb sahf adc lods jecxz call jmp cmp mov jl insl pop ja mov add jge push je jb (bad) popa paddw mov insl cld pop xor dec sub insb sbb add add adcl stos adc and lahf and add pop insl cwtl fbld test add push xchg adc or in mov sub test or clc mov in adc notb cli push push outsb cmp cmp cwtl mov lcall xchg sbb adc fsubrs jge int add push xchg push dec inc in sbb mov cmp or (bad) rcrb xor les je inc shrb nop or mov int stc or cwtl xchg jns jns mov dec test scas pushf or jo lds fmull ja mov pop or out (bad) into sub loopne dec mov sbb lods mov sbb out jecxz iret and adc out nop or push mov fisttpl adc ss adc mov sub int3 dec cmp pop xchg fcmovu js dec or daa mov pusha and sub adc ret jl movsb sub mov xchg je fwait rcrb nop mov sbb mov sub and xchg and fwait cmp push pop adc and xor cltd (bad) cmp add dec and push aas push insb mov sub (bad) xor (bad) (bad) jnp push jo fisub or or inc sarl scas js sbb and lock pusha mov idivl xor and repz ja push mov pop cmpsb cld add push sub dec rcr push sbb lds sbb mov inc iret ret xor shlb push js push sbb rcrb loope lret push js inc mov lock sbb mov mov subl mov rorl jne mov or sub repz dec out sub dec cwtl test je cmp xchg das inc add add ljmp mov daa sbb loopne into sti or push and mov fs or sbbb xor ja sub push and or add and aaa test clc jl push fldcw test fbstp mov adc mov dec movsb xor xchg stos sub lret jno or push adc fcmovnb enter jmp or add pop fiadd lea rcrb cltd pop js jg add loopne loopne pop out lds pop js pop fwait xchg insb push and jae cmp popa inc dec dec push jge mov fnop add popa in add gs push and sbb dec adc push sub pop jl repnz (bad) dec xchg cmpsb imul xchg nop (bad) adc xchg mov mov jae mov adc adc mov cmp pop fldenv sbb mov cmp push xor inc push cwtl gs adcl jge arpl xchg sub (bad) push push cmpb cs pusha cltd mov cli jge adc (bad) test clc mov mov fs push (bad) mov jo mov rolb pop shlb cmpsl inc cmp inc clc cmpb dec mov fcomps lea sarb in imull mov sub cmc fiaddl jecxz lahf dec mov xchg adc mov je and jns and push decl call xor or and mov or inc add repnz xor inc lcall outsl adc loope cmc test aas popa movsb mov adc lods jo sbb inc mov ss repz cmpsl repnz pop fimul pop push push loop mov push mov cmp mov arpl jns dec fwait nop outsl and xchg push loop push hlt xor cmp pop xlat push inc call mov aad adc in push sbb push je lds (bad) rol rcrb xchg xchg (bad) loope ret inc cmp cmpsb sbb fdivs dec or push ja repz add and sahf push push inc xchg jbe mov push sbb jno das sbb (bad) push push inc fisttp mov inc xor aaa mov add mov fldcw adc sarb inc loop fstps push mov push add jmp inc mov mov push mov popf inc js cmp dec lcall in mov popa (bad) jle js call cmpsl dec sbb push xchg add lret add pusha inc in aad xchg xchg or and idivl aaa xchg mov push pusha scas push xchg mov mov push shrb gs jo (bad) stc icebp imul jns js xor jbe lds cmp push xchg xor dec jae je cwtl rcll mov sbb or dec movsb push (bad) jecxz (bad) leave sub rcr sbbb cltd xchg loopne sarb sub test pop add mov (bad) ja inc sbb xchg and mov and mov pop pop or push scas (bad) mov sub add stos into addr16 xchg arpl mov xchg and push stc inc les mov fcomps sub loopne cli dec jns mov mov inc inc (bad) and push pop mov jae test lret push dec insl push clc dec scas add aam fst dec ret ja ja in cs sub xchg push dec push cltd cmp imul (bad) imul je push mov dec clc add adc mov es xor rcll test push imul aad les int3 adc cld jne in fdivrl xor push rclb cmp scas and and lret xchg cmp call mov cmp gs jbe or aam cmp sbb pop inc sub sub sbbl jmp mov test xchg xor mov push pusha cmp jge cs inc push pop pop nop loopne std cmp jmp adc sub aas dec pop lcall cwtl lcall or and outsb adc mov insl xor cmc pusha push dec mov xchg sbb mov add adc or add dec mov imul dec push test xchg mov mov out idivb xchg repz (bad) loopne cs xor ds dec xchg push push push (bad) mov push fsubrl jnp jmp push sub out cmp (bad) and cli cltd inc loopne mov sub (bad) movsb mov cltd imul mov and sbb je cmp jmp rclb test lea mov push jae jbe mov xchg std es hlt adc notb push test lds lock xor or pushf rcrb lcall hlt int dec xchg (bad) push push ret pusha lock lea sub push adc jo nop loope pushf mov dec test fs adc popa push aam mov mov dec sbb and add test dec push push loopne inc xchg cld pop lds xchg mov xchg ss dec arpl add push adc mov cs pop loopne sahf mov cltd push push mov arpl jns jne jb js (bad) jnp bound mov (bad) or cmp and add mov andl cmp into mov jle push mov push popa mov mov mov stos daa push add mov add add add orb pushf inc xchg dec call xor sbb push es imul mov jns xchg cmp rclb xor xchg inc sbb xor sbb adc inc es mov or jb je sahf lea sub fs inc push stc mov leave enter dec dec sbb mov inc sbb xor add jl xor stos cmp mov push or mov jmp aam mov jb es add es xchg js dec fdivl pop ret pop mov addr16 test and add xchg jns es hlt cwtl or aas or dec test mov xor push sbb hlt sub mov test adc cmp push push jge inc pop add push call int3 sbb push mov call sarb add mov push inc or jg test aad and popf adc xor inc sub mov fsubrl sub or stos add pop xor push sub inc xchg adc cmp xlat add in test dec push cmp push fldl (bad) (bad) into push push lds cmp (bad) push stc push and push xchg into mov dec xchg pop inc mov mov push fsubs ja mov lods cmp pusha adc adc push inc adc jl push fs xor dec fsubrs add add pop jp scas pop add cmp iret dec call mov cmp jmp nop xchg les lea lods pop mov mov mov rcrl (bad) add fsubrs inc pop sub and lcall popf dec dec push mov rorb nop lea dec and add jmp push aas sub pop loopne push ret imul cwtl add mov test (bad) and aad and in xor jg push cmp cmp sub cmp lret or cli cmp or mov push pop sub inc clc dec xor rclb sbb xchg add call push or cwtl test dec xor add sahf adc movsl lcall sahf (bad) popf push mov rclb insb xchg int3 lret and mov pop fucomip ljmp repnz inc add test sbb pop or add rorb and nop inc popa repnz dec dec mov call cmp adc xchg push dec dec add cmpl sbb sti xor cs movaps dec stc pop mov mov ret cmp add and imul cs test sbb add add dec push outsb js add jmp int3 inc xor pop or adc push fisub inc push das sbb insb das fwait in orl jg cmp mov fistp mov mov addl cmpsb enter sub pop aad and popa popf insb mov push inc imul mov sbb aam mov sbb inc xor cmp mov push jge dec js jmp mov sbb shrb int3 add pop call ss add in icebp inc push cs dec adc (bad) repz dec pop clc xor sbb and jne cmp scas xorb or pop push fs fs cld ret rcr adc add and xchg inc iret ficomp mov adc out out insl ret pushf pop lods (bad) xchg shrb inc lods std xorl push dec mov mov je lods sbb mov or mov xchg and lods mov ret sub sbb lock and and dec rorl and mov push testb sbb fistl mov sbb shrl test sbb rorl repnz ss cmp sub dec aad lahf mov pusha cltd lret mov xchg (bad) addl dec cmpsb fwait or sub sbb sub push ss or push sbb inc adc pop jno add mov or push xor cld inc arpl xor and inc dec sbb leave push loopne and mov dec dec push (bad) rolb and or push and sbb lcall sbb adc sub mov ret add sbb dec iret xchg add into mov inc imul test and andb movsb dec dec jo ret clc jl adc movsb adc (bad) push add pusha nop loopne sub loop jge fwait mov jg sahf mull jmp push add pop shlb pop add (bad) ret mov or jo stos sub les jecxz push adc lds aam ljmp jg sbb jo fdivrs std test ja push or bswap dec int3 out enter int3 xor xor std add add cmpsb jl mov ret ja mov pop jbe add iret pop sub stos insl iret xor in mov mov lock or adc in mov je fsubrl test lea jecxz jo lahf (bad) xlat cld adc je mov mov push xchg rorb jmp dec scas dec adc test rolb sbb stos stos push mov sti mov dec out mov dec mov jle inc cld sbb mov jns ret mov imul xchg or or jl (bad) sbb lcall je jge push inc hlt movsl jae lahf mov mov mov xchg mov pop mov add fimul cld mov into neg push push inc fist mov arpl add mov pop inc je sub dec hlt enter or aaa sub dec dec imull clc jg and roll bndstx jge cmp mov add adc jo dec insb test jmp add jb ret push inc push and fs and loopne insb xchg push add cmp aas jl mov sub in cwtl test arpl and (bad) (bad) push or adc xor or ret mov sub hlt jns fldpi jge xchg and sub fs in je loope pop push mov xchg lret (bad) mov pushf movsl lret sbb aas (bad) cmp cmpsl sbb shr mov mov popa jbe dec jge push inc pushf es jo pop sub add sub push add push (bad) jge int push (bad) push ja add inc jl jmp jle mov sbb ja nop jnp in mov add or fs mov sub add sbb call scas mov icebp (bad) jmp nop cmp es or rolb xchg sub mov (bad) data16 test hlt fnstsw ret ljmp pop jg xchg push add fmull sahf mov or adc fistp or orl faddl lea lea or adc mov add jmp cmp mov jg mov inc mov outsb sbb je cmp and lret jae inc inc add jne jns or pop orb mov dec push and test add jae jo or and ss sub jo andb fwait pop (bad) fwait rcl mov dec rclb pop vmovntps ret or fs mov push add mov insl add loop jne mov mov fdivs mov mov mov subb push mov or push lock add push aad mov and cmp add xor add fsubl cmp enter sbb loope fnstsw ss sub aad insl mov lea xchg loop add ud2 sbb fcompl xchg xchg daa lret dec add mov repnz xor push repz mov loope or scas popa inc jl js or data16 sbb add hlt add cmp lea or push push ror jb orl xor or add dec cmp mov int3 mov mov sub fwait dec sub aam and test dec pushl je pop call cld cmpsl inc pop xor je sbb adc mov push bound sbb movsl and pop add cmp aaa (bad) or pop xor sbb insb push adc push sub (bad) pop push jg push (bad) or dec cmp sbb or adc pop adc test lret (bad) and mov scas xorb popf lods inc jb lock or inc mov mov je add xor icebp sbb lret add jecxz mov push add xchg push (bad) lods pop clc pop jl push jmp jns in std icebp mov ret push sbb push outsl sti imul pop dec mov mov jle imul cmpsl sbb dec sub xor push fadd es add mov cmpsl and and ss cmpsl inc lods dec popf xchg stc fcoml call push adc mov add aaa mov lock pushf aad in pop aam loopne incl outsl push dec int push add incl decl jne fmuls and push pop xlat xor aas adc pop or shr (bad) or jmp or or or push loop push sub cmp loopne xchg jecxz inc add (bad) and pop testb or jne mov sub iret mov test cmp ljmp push arpl (bad) inc das adc in es push push and pusha dec fisubr adc movsb lods inc loope rcr mov test push sahf mov add mov shl out adc pusha push and dec inc xor or push mov cmpsb fxch cwtl dec inc jmp pop aas dec mov in inc lock pop pop testb jae push or out fs gs jae ret mov push fwait push push fs insb xchg mov sbb xor ja push mov fstpl or inc adc xor addb mov push dec sbb rcrl gs push lods mov movsb or push inc sub sbb outsl xorl push jmp dec sbb ret push sbb and (bad) sub jo xor ljmp ja ret (bad) rcll dec cmp push jge jg push incb imul (bad) inc sbb adc push fidiv test jl out loop lret fldl xor add jnp ds push xchg sub and cs (bad) mov fidiv je pop xlat xor inc hlt mov and xor dec dec movsb jle pop push nop jl adc hlt mov add mov fdivs call jmp test push scas inc popf cmp mov push in xchg (bad) nop out lds ret push test shlb lock xchg xor fimul movsl test push sub das and pop and or movl call mov pop in cmp or int3 test rolb push add aas mov add mov test stc or les jle xor and jo and add rcrb lahf or mov mov test jne xor mov ficoml add jb sbb inc cmp lock jl aad adc rolb into mov jb push bound sub js pop lock js xor add pop or dec push xchg mov pop jecxz iret mov push mov iret push or sbb pop in rorb lea imul cld and push les lret sahf rolb pop pop loopne cmp pop clc gs loope sbb and mov adc dec pop loopne dec dec js mov push int ret subl and mov pop divl push sti (bad) xor pop or and dec and inc inc cs je cmp je hlt push ret adc jns inc push cmp push push mov mov add inc rcll xor or pusha mov inc sbb push add jmp test clc inc movsb mov add imul mov or aad test in and and xor je add adc jg lahf and or movsb addr16 mov push dec test sbb push or dec cmp data16 mov add aaa xchg (bad) xor sbb add or iret pop mov fstpl pop sub add enter mov jo in insb dec jne mov rcr (bad) mov push andb or (bad) loope mov sahf out and dec push roll cmp cmp popa or imul mov jmp adc sbb outsl and sub fcmovbe pop and dec push bound sub add and add sbb jp jb mov sub push jmp jge daa dec fbstp aam push or cli sub pop pop add fwait sbb adc ds aam out add or in ret xchg pop xor jle push test nop sbb mov sbb mov leave jno dec aam push push pop push jb xchg pop aas add gs jmp mov cld out inc adc in lock repz or clc std lahf mov popf or xor mov xor inc sbbl mov mov adc (bad) in sbbb add mov add mov call cmp sahf push push inc pusha or xchg sub jp cwtl fsubs add decb cmp adc adc push cli arpl repz sub out popa jecxz dec push sbb push add cld xor ret jl cmp or jl or out pop jne cmpsl push push aaa (bad) sub das add test push loope mov fisttpll mov call jecxz push jbe loope lahf sbb cmc aaa fcmovu jmp lods pop dec add sbb roll sahf xor cmp dec mov es adc sub loopne mov pusha pushl mov jle xor and and and fdivl daa je or je sub out out je and je and loopne jecxz jne insb sbbb and sbb mov cmp dec pop inc xchg scas adc loope clc add xor outsl dec loope orb xchg mov fldcw test push test xor and and add and aad jle in out inc mov or mov push in movb (bad) int3 mov dec adc (bad) mov lods movsl mov imul mov fiadd movsl fsubrs xor inc (bad) adc mov mov add xor xor pop xor and (bad) mov (bad) int3 pop xlat andl arpl inc sub loopne clc vmwrite mov dec push push jmp inc cmp notb xor bound je outsl shrl outsb test push inc xchg inc sbb (bad) (bad) enter xchg or cli dec or dec fcoms cmp xchg cwtl mov cmp dec scas jne xchg inc inc sarb push cmp dec push push cmp fidiv pop inc fimull xchg mov dec jge mov out mov and push stos in jecxz jnp divl adc push test jl lds add cmp testb or or or or daa sbb call stos add inc scas aas dec xchg mov adc sbb je ret inc out (bad) jae aad aad daa adc inc inc pop push mov cmpsl insl test adc sbb iret xor mov sbb and addl push fucomip fsubs xor cmpsl adc lods movsb das cmp push xlat mov mov lea aam test mov mov inc jge js (bad) or fnstsw cmp fisttpll sub add mov push dec pop cmp (bad) xchg sbb cmp mov jge les test mov cltd jno push je (bad) dec (bad) dec fistl or ss icebp rcr mov or sub add dec scas dec (bad) aad mov inc mov cmpsl inc adc dec push push sub push pop and jmp out adc (bad) (bad) xorl aam cmp pop add (bad) pmaxub mov shl jmp mov in pop jno negl pusha pop daa dec xchg ljmp clc push stos dec test lret or xor test bound jl jmp out std xchg je sbb or xor ret add out leave (bad) loop out xor dec or cmc pop pop xchg out mov add sbb and cs scas test xchg mov inc rolb movsb rorl cs dec xchg dec rorl dec sahf push nop pop imul jne xchg xchg and xor fcoms add and aas xor inc push and or je or and xlat dec jl insb inc push mov dec sub or sub dec shll (bad) jl sub mov ret or push pop rcrl add cmp je jo call jnp je rorb mov ds push test jbe push adc imul push jl pop jmp or adc dec inc ljmp dec enter cmp jmp xchg jae sbb pop mov sbb add enter xor add inc wbinvd pusha lock jb jne inc or aaa aam stc or bswap sbb lea jae mov fsubrs push int3 add sbb dec sbb sahf call cli add push sbb imul aam inc clc push add imul adc push lock addr16 xor roll pop and imulb (bad) sbb jge fsts mov mov jge inc iret es nop addr16 add (bad) jmp int inc push push xchg push xor in nop xchg lods push daa aad jns nopl imul cli add lret pusha cwtl and stos ljmp push rorb adc push push aaa sub mov cmp adc pop fist cmpsl sub test xor std pusha push movl rolb in or fs sbb pop jb call fsubr adc push fnsave jo jae push inc pop push and lcall popa or jns cmpsb aad mov cmp imul gs lret or cmp jle sub adc and xor ret adc adc aad cltd or xor fist cmp adc add notb ret into or adc push cld pusha sti ss jbe jle add jne cmp xorw sbb xor leave loopne mov mov adc mov or cmpl push aaa in dec xchg daa dec lahf mov sbb ret inc lea mov lahf adc adc adc out mov or repnz movsl icebp cmpsb lock lea xor sub mov add cltd js test adc sbb jg push iret inc and xlat mov lds cmc jmp lods inc push pop test add mov nop fmuls xor adc aam or lcall push jp mov lods loopne call and call cmpb jmp aaa das sbb imul rcrb daa es rorl inc xchg inc cmpl cwtl pop movsb or loope mov test sub mov dec and mov jp test jecxz dec mov loopne nop mov int3 jno ret xor xchg out pop sub mov int3 ret xchg add popa or adc push (bad) dec mov neg push push add push cltd mov es jmp jp jmp mov cmp ret in mov faddl push in jno sub fmuls push dec movsl xor jbe shll or and fisubl sbb mov and push sbb push enter mov adc addl in xor add adc push cmp push je inc loop fcoms les dec imul pop or push fisubrl mov and popa stos adc data16 call leave sbb push add jno out xchg ret (bad) hlt push pop mov and inc lahf lea mov lret cmp add adc pop xchg pop test mov fnstsw je sub pop add cmp lcall push cs cwtl and push lretw sbb add (bad) nopl ffreep daa push mov pusha push push and ret push loop mov jge push (bad) stc push cmp inc dec fucomip bswap push or and cmp ret jl sbb push mov subl and out (bad) (bad) pop or xchg addl adc ds movsb or or out add mov fnstenv push inc push ret pop add pop daa or je aad add test pop xor addr16 dec ja pop test sub jl add imul dec mov fnop flds popa scas dec mov pop push faddl or pop insb sbb popa mov loopne insb or cmp ret mov pop gs sbb add rorb adc stos add inc mov jb pop stos ret xorb cmp mov mov pop addr16 fisttp lahf and or movl popa add xor rolb (bad) xor add push jae push fisubrl movsl ds adc es sbb sahf xchg and mov sub adc out push add push adc add fadd or aaa fstl ret sbb mov or sbb push sbb sahf sbb push or pop jne push add mov push je dec imul cltd mov sbb repnz data16 xor andl cmp inc jle dec mov push add and nop adc int3 inc mov (bad) adc orb mov fsubrp test jb insl xor in xor ss cmpsl sbb inc mov mov sub sbb and jnp inc pop nop mov or out xor ficom aam mov int ret aaa arpl movsb add jg pop jne es jmp mov mov xor or pop les and and jp nop das fistp push push cmp jo push (bad) repnz adcl lret sahf add pop cmovae sub jne adc ret mov and cmp mov test cmp adc scas cld push popa es orl inc test jo sbb mov lret dec sub push lock (bad) fsubs add mov mov ret or cmp or nop lods test sub push jo iret mov mov xor pop scas mov jmp sub adc jle cld adc push xchg jmp mov cmp mov das repz pushf bound pop popf sbb or xchg or inc adcb ror dec int rclb add push sbb addr16 outsb mov mov dec add stc lret mov cmp mov jo or sarb dec fisubl rorl sub mov xor hlt je out mov jge cli mov test imul pop add sbb mov outsb (bad) loope gs sbbb mov inc outsl sub arpl xchg jmp inc add add pop and dec add mov icebp leave mov push (bad) shlb xorb and add push push xor inc insb push fisubl stos xor push inc fsubs xor push push test pmulhw rcl jns push inc xor enter sub ret test xchg lahf and and add sbb mov inc pop mov call in inc and dec dec sbb sarb sti (bad) jbe movsb jecxz rolb push add and sub ret sbb pop or push cs fist pop in rep and cmp sub adcl mov jne jb popf imulb aaa mov pop or es sbb xor dec push push mov pop xchg ror int je or cmp je add movsl sbb or xor and test shl add jmp or fwait adc jg or sub imul sbb sub (bad) xor addl fldcw inc pop mov push gs (bad) enter adc inc daa jmp je adc loope stc pop push test pop mov or xor cs insb push add cmp inc lcall dec push lods adc adc dec mov ss dec add and ljmp outsl sub push int sbb lock xchg jb pop fucom pop sub call push jbe int3 data16 adc stos or (bad) rclb sbb xchg (bad) xor neg and mov imul push aaa push add add jbe call inc push add mov enter inc cmp pop out jl cmc je adc cmp loope test movsl pop outsb adc push xchg or test dec outsl inc pop fild or sbb gs push test adc push push add push mov cltd cmp repnz jge push inc or imul add jo cs je mov xor push add dec and mov push or and push (bad) xor add in clc outsl or mov jbe dec arpl dec sbb out in cld inc outsb sub outsb dec sahf push inc add push inc dec push into push mov push rorl das push push jb lock and aas test or cmc lcall xor lods push add sahf add cld pop pusha dec xorb hlt or pusha fmull jmp in stc xchg jl pop dec pop jl (bad) jmp xchg inc sbb loope dec (bad) loopne cmp mov aam dec mov data16 enter jno mov imul add sbb psraw test or push leave and add dec mov popa leave add rorb inc mov repnz add pop push and ficompl dec inc pop sbb adc and or adc inc or les lods outsb mov fnsave or cmp sbb and or mov and popa pop in add inc pop (bad) inc (bad) sbb adc addr16 pushf adc add inc sahf xchg sti add addr16 pop clc or sbb sahf or or or or or pop call push or inc dec jle sbb stc leave sbb movsb and and pop push sbb xchg fidivr pushf mov or incl add jg push push fcmovnbe decl cmp inc aad ret cmp rclb lahf mov fdivl cmp adc enter mov repz lea inc push mov and jl jb jmp clc imul jmp mov mov dec or movsb push inc ja incl and pushl test (bad) cltd add test fidiv mov cmc jb or cmovs shl adc mov lea scas rolb xchg aas push xor aas cmp jmp fidivl mov jno and xor dec inc lea nop addb sbb jne mov sbb test mov (bad) not cmp adc pushf jle cmpl xchg xchg bnd jl jmp mov dec outsl dec and cmp fist lret enter incb pop fldcw add or or or sti or sub jbe dec sbb das jecxz push aas add and loope pop fstp sub std or incl loope cld andb popf xchg sub mov dec nop inc test stc shrl sbb in dec push sub push sbb inc jecxz,pn dec jne lds pop xor and jmp iret and imul dec push shlb and or adc ret jmp (bad) or cmp jae push add mov jnp and sbb mov and adc xor bound adc movsb and out cli xor lret pop lods dec and das and or rolb mov lods lcall subl push add call jg cmp mov mov mov jne call add hlt das inc dec arpl inc lods jne push push fiadd inc or in push push push add scas out xor imul sub push sbb or push fwait or dec in mov push xlat cmpsb divps and faddl test fbld sub outsb dec sti rcll cmp or push pusha lods add pop dec lock rcll mov push inc mov xor fcoms jl adc and add int ret pop movsl push mov adc aaa push scas lret or add mov and inc adc sbb inc inc cmpsb sbb pushf jmp fildl xor call repz push sbb cmp lds call adc dec je nop sbb lds mov mov add or mov or lods and dec push push sarl push jbe mov lcall test mov outsb pop push pop pop mov cmp (bad) mov (bad) sub fild mov adc and arpl add inc push or (bad) mov adc and mov lods in add icebp sub dec jl pop pushf cmpsl cmp shlb sbb call jp adc mov cmp stos lea mov mov xor pop mov inc inc push or mov paddq mov dec or xor mov add testb inc inc in dec fisub fldlg2 pop xor sub add dec add push mov sub lods aas and fwait sbb lock in lds lcall or push jo loope lock lea xchg push ja push (bad) mov sbb repnz (bad) xchg mov and addb adc sarb add cs and add dec or mov ret shl dec dec repnz add ss imul jns out inc add dec dec sbb fisubl mov (bad) repz nop shl mov int3 push test xor sbb adc shr dec or or or cli lahf cmp les mov mov and cwtl jl add jb xchg mov mov cwtl icebp cmp fwait push leave xchg or jmp mov xchg loope xor call mov inc xchg loop insb push jo clc lea movl cli mov test sub adc out push inc decb xchg test mov inc mov or das mov push mov add mov mov push push or adc lcall insl loope stos fcmove fiaddl push les push lahf or jae lock and mov pop dec out add sbb push xor mov jbe mov push adc roll ret cwtl rclb xor lods dec mov jp dec add test or mull add (bad) jmp pushf mov mov arpl (bad) mov adc sbbl xor aam or mov or enter dec insb jle clc push jne mov fstl loop cmp mov pusha pop jne or les (bad) pushl mov loope add cmp add add loopne enter shrb mov jne test add outsb fmulp rolb jmp loopne sbb push push xchg jne inc dec lcall fdivs mov mov push xchg or aaa jge jge pusha mov or and adc xchg rclb xchg or push seto cmp stos (bad) jae and cmpsb scas flds mov in add lcall jns inc fstpt nop push into cwtl ret in fldt jl push cs cmp pop pushf dec dec mov cmpl dec popf inc mov dec (bad) mov adc mov arpl imul mov inc movsl jmp das pop js daa fistpll out push adc dec or orl test cmp sub xor int3 (bad) or jbe push inc add dec test adc dec les (bad) sahf lods push leave or movsl or or (bad) movsl mov stos scas mov xor inc mov pop and dec inc leave xor push enter xor enter inc sbb rcll mov gs mov xchg inc (bad) mov outsb test mov pop in push jge mov adc mov mov xlat dec les xor scas pop or sub ret inc push xor ffreep (bad) push rorb flds jmp jo add lea nop mov xchg or mov orb cmp lods lods jns xor std jmp xor xchg fmull lods lods pushf call fwait mov push arpl or and in adc sbb or or test dec or inc cs cmp xchg sarb in sbb and or les test cmp movsb cmp fwait xchg aam inc stos cmpsl test add ss xlat roll mov or fimull adc xchg or cld adc sub mov or pop dec adc sahf pop pop or or and in or dec call mov ret pop and mov orl xchg pop push inc movb add les jb idiv clc add sbb and cmp adc fimul push mov or jo sbb sbb dec sub pusha inc mov aam int push cmp ret (bad) adc mov jno ljmp dec cmp leave ds mov inc in jg mov jne mov dec sub fmul dec push adc je nop fistp xchg enter lods ss and or or pop pop rorb or jle lea ljmp rclb xlat or sbb insl test add mov push jge push popf and inc or into pop popa pop popa sub addb testb mov xlat push aam add inc in pop cmp or xor pop (bad) jmp fldlg2 sub clc fbstp or lods loope and (bad) fs push outsb sub xor add dec push (bad) sbb dec cmpb out jg dec mov push or addb inc ja jl mov fcoml adc mov push (bad) js movsl icebp xchg aaa and sub jo leave dec mov pop push pusha rcll (bad) push (bad) mov or pop xor cmpsb jge cmp inc mov push cmp inc xor xchg stos mov andl jb or push fucomi and aad push les lods push mov adc or jg mov hlt cld movsl jmp call inc icebp pop push sub mov xchg lea arpl sbb xor add mov or pop aas sub lock sbb xor xor adc pop mov add cmpsl shrb and stos aam or daa fistpll push outsb push mov push xor mov and sub mov jmp nop loopne imul aaa cmpsl je inc fadds jnp or push push jno dec repz in sub insb imul inc loopne cmp mov push scas adc loope jle shrb cmp outsl adcl lret jmp dec test mov push stos mov jge mov cmpsl repnz mov notl dec imulb or leave add inc inc xchg jmp lods loopne in cmp lcall adc and add enter adc pusha or popa xchg jmp inc lahf je cmp or push xchg push inc and or cmp enter notb fildll in jge add push (bad) adc scas outsl lds mov leave lods push push dec pop out sbb icebp sub not mov adc inc push push xor xor fidivl dec adc push cmp or or dec mov push add lahf and fwait loopne ss add sbb push sub pop shll jne add push (bad) mov mov push adc rorb mov cmp and jb and ds in mov add cmp (bad) insl mov (bad) addr16 push or cmp cmp push add dec ja inc rcrb mov inc sub in or ror and mov jg xor mov flds fcomps push cwtl stc orl sbb mov pop fcoml pop sti (bad) mov add mov rclb dec xorb aad cmp imul add pop rcr daa adc ret xor orb fpatan mov vmovntps dec rorb ja,pt jb cmp sbb loopne stos inc fcomps push mov adc imul add xchg call inc xor and dec clc inc pop pop lcall xchg pop mov lods fsts cmpsb jns mov cli sub sub xor ret jl out (bad) cmp push repnz inc cmpsl xchg mov ds sub aaa in fs jne testb add jmp gs (bad) dec test jle mov pop dec jmp mov (bad) jl inc and jl dec or mov xchg mov xor xchg lret dec daa dec insl xchg das inc mov push push mov add pop mov xchg or mov in mov jnp adc adc inc loop imul cmp add inc dec mov psllq sbb test je cmp mov mov add cmp pop mov sbb decl cmp jb cmp ja add jnp int aad lcall call add add addr16 fcmovb add mov mov test add mov and (bad) (bad) pop inc push fs shl sub dec pop cmc in and pop sbb (bad) push dec mov fcomi lcall pusha or jae (bad) lcall dec adc push cmp sub sub add pop cs ret and mov pop fisttpll pop mov add clc mov fdivrs ret mov ss mov jecxz (bad) or sbb int3 and inc cmp push daa push mov inc mov jae fsubrp pop sub mov mov mov aad insb imul fist mov fsubrp fs mov (bad) gs and jno movsb clts fistp adc orb dec loop inc movsl cwtl inc adc fild (bad) fisubrl add lahf sub ror sbb dec leave ret add mov mov movsl and xchg es cmp inc push stos add add ret jg lods push xor lds or mov and cs sub jecxz cmpsb imul pop xor popl and sti mov sbb lahf mov movsl add mov cmp es mov mov (bad) and imulb jo pushf andl ds add adc xchg add add fisub sbb and push xchg push negb nop popaw push ss cmp insb xor dec mov cmp testl and pop les pop js xor mov mov xchg mov clc loope adc mov rcrb cli sub into add fsubl or or insb addb push inc cs adc std sahf ja adc cmc clc rcll inc mov xchg (bad) pusha push in loop jns adcb popl ret mov das mov imul rclb test sub ret pop insb pop jae push xchg jb (bad) loop dec sub mov pop pmulhuw mov add add push xlat or and (bad) jmp cmp sbb inc aas push lret sub fdivl inc sbb scas push movb mov pop das aaa jecxz mov out arpl sbb andl adc pop mov idivl mov repnz and lea repnz push pop (bad) orps push pop pop sbb (bad) mov aad inc jl mov out xor xchg dec pop aas andb add push (bad) loope sub add (bad) mov mov inc inc dec xor les jnp xor jl or ret les (bad) add loope push pop push das sub rclb and xchg adc push mov fadd jo adc dec dec pop loopne cmc stc adc cmp inc xor xor dec sbb aas mov inc push sbb pop rcl xchg inc add push and decb (bad) lea ret push cmp sahf or and push pop pop test push ret (bad) lods insb sbb mov mov inc pop mov push jo add push push push jns jg mov sbb push inc cld mov xchg jne or out cs xchg pop or add mov addl xor lea push es sub push mov sbb inc add mov dec push push xchg cmp iret xor or xchg adc sub out dec jne cmp stc mov les xchg das popa xorl mov or insb and sbb push add push outsb repnz pop inc and (bad) imull add sub xor push aad dec xchg lock js or push push shll adc jmp jo sahf dec push (bad) jbe inc popa mov add sbb iret out dec push mov or mov pop xchg sub inc ss sub cmpsb bound add js adc sub insb fmuls dec add mov mov fdiv mov stos jmp inc mov stos lds xor mov mov cmp inc cmp sbb (bad) push cmp ret stc add nop jecxz ljmp arpl cmp add mov test lea xor mov in pop icebp inc adc mov cmpb mov jno je rcrl stos (bad) jg (bad) loopne pop arpl inc inc lcall cld lea jl mov pusha mov pop pop aaa lods addr16 sbb enter adc pop mov iret vmwrite jge mov or pop add js test jmp jne xor subb and jbe arpl clc push scas sarl and call xorl push mov aad testl imul test xchg (bad) xchg and popf lea sub jae sub popa jae lahf sbb aad ds data16 jl or mov push jae add pop std mov xor lods (bad) je ds (bad) je mov push push rclb cs movsl (bad) test ffree scas dec push adc pop iret adc lds sbb push popa mov mov push mov push icebp mov iret jge xchg dec mov inc int3 adc movsb test and xor cmc (bad) ljmp add xor xchg rcl push mov ljmp push jbe or add pushf sbb ret mov imul adc loop aaa sbb loope add loopne test push cs lcall pop int3 (bad) push clc lea imul (bad) mov push in jl fcoms add jle syscall ret and sbb sub xchg and daa lods inc push ret daa pop fmull mov xor cmp roll xor mov add xor stos jmp (bad) testl sbb movl orb movsb ljmp lods push mov push or dec push and sbb aas pop (bad) (bad) ss (bad) push outsl inc cmp push inc (bad) loopne xchg inc bound jbe inc and mov (bad) lret (bad) sub mov nop shrl pop sbb sbb mov dec sub shr in loope jne daa (bad) rorb sahf inc mov xor test xchg xor data16 loopne popa int or cmpsl lock push jge adc divl dec cmpsl push stc push out mov mov dec (bad) repz push inc daa push mov jno les (bad) je rcrb stos xlat lds push inc lods adc stos lahf inc scas sub clc daa and movsb xchg xor or xchg add je adc int lea int adc add xchg ret jp inc xchg cs xchg stos sbb decw and or lret imul or push push popa mov mov inc es cmp sub fsubrs add pop insb adc mov xor mov jnp or pushf xor push add sub sbb add cwtl aas xchg mov inc imul jl lods js xchg sub movsb rorl or fadd (bad) call pop inc scas cmp insb rclb xchg jbe dec mov inc inc std imul push cmc jb sbb inc les dec lcall add adc lds inc scas adc sbb pop lret push cmp push cmp sbb jmp rorb mov jp sti sbb add jne inc js insl mov loopne push leave in mov lahf mov sub pop push mov (bad) testb or adcl add and outsl add das nop int xchg mov (bad) rclb jecxz cmp mov sbb jne add xlat add sbb stc sbb lods dec inc insb imul xor aam gs xor shlb lods shrl mov xor sub cmp mov cmpsl popa cmp inc jbe push add fimull jns int in xor adc push push lret lahf cmc rolb fldt push mov xchg add orl push sbb lret or add inc inc enter iret xor push inc adc bound dec mov fisub jbe push cmp pop pop fmull (bad) pusha insl (bad) das and or adc inc push xor ds add push jecxz push (bad) call pop add dec lods cmpsb push lret adc ficom jb push cmp adc pusha ds sub sub sub jmp cs inc ret pop push loop in aad es pop push or fstl or outsl cmp lea sbb jo stos cmp sbb mov jl,pt mov xchg push mov pusha fndisi(8087 add adc jg shrb push and pusha (bad) sbb jb lea add nop ficompl inc and or outsb xor push sbb add xchg push dec ret push dec je xchg add xchg pop clc jle cmp lret and xchg inc push adc cmp addr16 aas jae add add push js jp jno sub push scas fimull out pop mov psrlw pop pop (bad) ss jmp mov in gs call dec mov add pusha push pusha inc add dec push (bad) inc lock mov sub sub cmp mov je add stos push push dec or pop stos xchg add fsubl sub bound lds inc adc add inc or dec sub sbb lret pop movsb in imul cmc nop loop push pop xchg dec test sub push add pop jmp jp icebp icebp adc add sub lea sub push inc push gs adc and jle mov or jne dec inc adc aad rorb rcrb jae push cwtl in pop movaps pop push repnz xchg aaa push mov push sahf scas lahf (bad) mov lahf mov fcmovb in push lods test cmp cltd xor (bad) adc adc int3 and inc pop jg or jne jb cmp cmp xor lea sbb or add bound and push in jg xor inc dec imul test lea cmp inc jne mov xor xor mov jmp lret (bad) aad push adc das or jmp push jge mov mov jo adc popa add insb pop pop and pushf or das divb inc test inc (bad) adc lods (bad) jne mov mov mov je adc jo repz int3 adc sbb (bad) popa nop ret or sbb pop push insb add push arpl add cmp fistpll test or or aas adc add mov or xchg rdmsr ds cmpsb dec sbb adc add mov into and jne scas ja xor mov and lods cld mov xor inc clc repz dec lret das out xor sub mov push ds dec push imul mov cwtl js cmp loopne mov lock in cltd xchg div (bad) mov test push (bad) fmul inc push jg dec sbb sub lds sub popf mov mov les mov pop ljmp mov orb inc cmp push xorb jo adc fistpll xor loope mov (bad) (bad) test dec cmp icebp mov imul jbe andb test and out or dec mov or (bad) and and and push push cmp rorl cmp es push push (bad) mov sbb add pop ja jle loop nop data16 push outsl je insb and sbb in test or inc mov xor or push jbe add shlb loope xor pop and sar mov pop repnz sub adc xor daa sbb mov fstl pop enter sbb inc rclb jo sbb cli imul les push add (bad) jg mov in xchg dec icebp call lret testl sbb fs jb push add leave cmp cmp pop mov push (bad) mov and xchg xor adc add xor dec adc fdivr dec movsb pushf sub test sub mov inc push sbb jge jmp adc dec jnp (bad) mov jne xor iret push sbb adc dec scas mov inc cmp sbb aaa adc or pop mov fnstsw pop mov int les add fisttpll push add cltd inc ds scas inc jb in es mov push mov add push push lods mov add jle mov sti cmp or fiaddl add (bad) invd or daa fadds inc ret (bad) rorl push pop dec lock xchg cli push mov inc out push jmp add xor pop inc adc rolb nop push enter scas add add sub add add stc orb ret mov and inc mov es mov pop cmp xchg xchg adc loopne and imull std dec inc push push jnp lea push in jmp lock push xchg lods jle insb mov mov adc inc sub int push rol sbb pusha cmp aas pop insl int3 inc cs pop fcmovu adc xor jb stc push lcall jecxz mov push adc call cmp sbb mov add lods jg push int pushf popa aas sbb add add cmc into test call lret and test push jbe or mov dec lahf add sub stos popa mov or mov (bad) fstps and outsb push xor sub jo push inc pop scas cmp cmp scas dec cmpsb inc lret sbb lea adc pop icebp fs and add sbb ss lcall sub and enter add inc aad pusha xchg push movb push inc sbb in jo pop xchg xor add in sub mov (bad) fdivrl outsl pop adc (bad) cmpsb xchg or mov mov ljmp or add or mov jbe cmp cmp add aaa push or push mov push imul xchg or pop adc sti add stos inc (bad) inc addps pop mov cmp lret xchg sub lock xchg add sbb inc inc add cmpb sub push mov loopne add pop jns add inc movsb inc (bad) push dec loopne lock inc mov sub sub or add pop push add rcll xor cld dec rolb nop fldenv add push clc add push test push xor test cmp mov and enter mov ds sub or push xor (bad) aaa subb scas pusha (bad) jl movsb jge jno push je popf sbb fnop js adc sbb dec lcall push sbb sbb or or jp (bad) xor lods jecxz popa lods fldt add ret push inc pop test scas test imul push int lock adc imul pop adc xchg or les rcl pop fnsave xor dec xor (bad) inc call or mov adc or adc mov adc xor outsb scas xor pop jmp pop lret cmp enter jns es pop sbb nop dec shlb adc and (bad) (bad) xor iret or cmpsb sub push out xchg ljmp lds repnz push dec das adc in mov fsubrs add inc mov cmp dec js add jle jmp add sub lea das aam cs inc adc add lds (bad) das add mov push add dec in and shrb or mov or nop xchg mov lock or add nop xchg or or cmp aas or xor pop das adc pop jb xchg pop adc das adc xor inc or adc mov pop test push in sbb sub sbb pop sub and sbb add add lock mov icebp pop dec or fidivrl test dec add add inc pop fadds out mov push lods push push icebp push push roll xor dec in sub mov push test push add dec lret das cmp push js jb in push mov lock pusha mov dec cltd in bound (bad) mov push loopne dec in inc xlat sbb inc xchg lret in push xchg add push jns in dec or push dec push xor insb pop movsl in nop add add into push mov movsl add (bad) mov or mull nop mov sahf jno mov (bad) sbb xor dec add add movsl inc lods or and push jo inc ljmp pop add push push pop pop lods lods inc add std loope and mov add inc xchg loope outsl sbb sbbb cmp or insb cwtl sbb push les cmpb add sbb add pop mov jp lock inc mov mov inc xchg adc push mov sbb mov inc sub inc sbb loopne pushf jb imul dec dec cmpsb dec lea fisttpl push pop lea outsl xchg jge das jl sub fmulp add add lcall imul sbbb adc jb,pn dec and mov js and add or xor insb adc adc dec or pop add or popf add out adc lea add loopne fs sbb adc mov je or pop or add dec or inc pop pop sub lds test pop inc adc pop sarl rcrl pop or push dec inc pop cmp in push and out das push (bad) inc dec dec sbb inc leave add inc dec push cmp lret popa jecxz inc out jge xchg cwtl jnp push pop push dec roll pusha mov inc push and pop sub dec repnz ret or popf imul or jo push cs dec inc adc xchg lahf push xorl add mov dec sub xor pop push add mov add cmp adc adc add fs sbbl dec add mov ljmp bound call cmp fsubr push (bad) cld rorb push das pop fsubs or (bad) mov mov xor out mov mov xchg lds ds lock rcrb push push pop mov xchg les lods mov sbb pusha mulb sbb or adc inc cmp sbb sub lods shrb mov adc mov add push push mov push push ror or xchg add insl cmp push xlat and out rorl nop mov add loop xor cmpb bound decb add lcall fucomip repnz or inc push cmpsl sarb test or sarb (bad) leave add enter enter sub sarb xchg push fistl add push mov jb push call shrb or mov leave mov push push dec dec add fadds test mov adc push cmp jno push arpl mov dec xacquire shrl (bad) cmp in xchg das fsin or sub adc jne repnz push jo adc mov leave and xchg rorl and in sbb push mov and cs push pop cmpsl mov mov mov jbe addr16 rclb ja pop sbb pop push loop mov std xchg fcoms push lahf test jb lea push mov ret movsb orb push or mov sbb dec sub mov addb lret push inc popa bound or xchg mov and fldt adc repnz jb ds or pop dec sub jae jns rcl cmpsl add or push inc sub jo lock lock push outsl xchg and outsl pop inc xor add popa flds jge dec xchg test or and add add jecxz enter add inc jge sub lds adc fs call lock dec lods or fbstp inc mov mov mov stos push fwait jge call or test xchg sbb fcomp mov dec sarb pop dec mov sbb add les inc sub in in subl inc fstps pusha inc push inc xor sub bound sbb addr16 dec xor dec add icebp outsl into inc enter cmp fadds inc xlat xor int3 pop loopne outsl (bad) decl pop fdivrs mov in ficoml mov and mov push push in sbb in pop sub adc xlat shr xchg fucomip cli jmp sub sarb inc or add loopne les push hlt xchg outsb adc (bad) je pop cli pop mov or pop clc pop jmp xchg addl and sbb enter or fstps mov inc addr16 push jb pop push sbb mov pusha push cmp inc (bad) xor test inc mov adc movsl pusha and lahf or add lcall imul movsb mov dec loope je es add dec xorb jle and loopne push jmp insb or add or imul insb sarb imul loopne aam out pop lahf add xor add ss aam cli add ds cmpb sbb ret mov mov arpl xor fsubrl ljmp dec mull pop mov (bad) pop or lea pop sub loope push mov or or inc nop fs pop ss sub popf repz mov test cld dec add or mov mov push xor (bad) xor fs pusha xor mov sti clc les or mov out push jecxz test cmp test jne inc jb sbb rorl ret push (bad) mov cs mov cmp je insl sarl insl inc inc test push adc fwait movsl js ret pop ja jle mov cmp jbe roll xchg push push mov sub out lcall int mov imul inc cmp push je (bad) sbb notb jb mov and xor int mov add or repnz sbb inc sbb jbe and mov add push dec leave mov inc (bad) das dec outsl imul fcompl call or lock sbb lahf mov test adc shrb dec sub pop int test dec pop mov mov or imul inc test repnz nopl movl add pusha pop mov out or outsb mov sbb mov mov mov xor sub or enter and xchg pop and test sahf cmp push add fs aam mov mov ljmp mov sahf cs or adc and or cltd stos sbb cld dec sub push and fimull dec icebp fadds test adc aaa add xchg pop aad cmp lods mov test imul mov int3 fiaddl into ret dec inc int3 sub xor mov aad or mov in sbb lret jle fidivl popa sbb or dec sbb add xchg in fstl dec add inc inc pop sbb lods lods (bad) pop xchg xor repnz sub (bad) icebp push cld (bad) pop xor push cmp jae adc push sbb xchg mov sbb popa xor adc push pusha pop pusha jns mov inc mov mov lea (bad) dec sbb add aam in xchg hlt pop mov enter cmp push jne push mov mov popa pop sbb stc mov pop dec add xor mov and lds add mov or stc loopne aaa mov adc sub cwtl fisttp xchg mov mov cmp inc stos pop inc cmpsb les adc sub in mov xchg xchg mov lret insl sub pushf sarb popa clc bound or xchg push stos sbb sahf push ljmp mov sbb inc adc pop mov push fist test xchg mov sub push jb sub push (bad) hlt mov cmp in shrb sbb push cmpl mov (bad) sub inc push mov out pop je loopne movsl add xchg mov ja inc cltd xor sarl in loopne mov and pop fucomip addl mov adc add xchg rcll mov mov mov arpl sbb add aas dec ljmp leave dec subl fwait and js push (bad) insb test popa mov (bad) fild bts lahf dec movsb xchg and ficomp imul push push xchg inc test fdivr push enter jnp (bad) mov movsb inc dec mov pop das ror jb sbb ret push rclb sbb bound mov push pop adc push bound sahf xchg dec dec pop pop and xor cmpsb sub and add out loope push cmp and cltd fildl loopne cltd mov push dec popa push ss fs cmp jp xchg cmp fbstp das rorb in popa jo test into push les out lahf lds out insb or pop icebp stc sub pop push xor push punpcklbw addl push pop push jo mov daa jl fcoms and clc mov sub imul xchg adc clc mov loop ret andb xor sbb jmp sub sub mov sub sbb mov jno push psubw loopne pop gs pop or xor (bad) ss push push dec pop sub fcmovbe call inc mov fs push fstps int3 cmp loopne add sbb mov mov fdivrs xchg inc push push and fs sub mov push jmp ljmp movsb jecxz xchg out repz sub push test jle dec or jne nopl cmp dec inc sub push ret (bad) xor popa cmp or sbb dec or inc push inc sub add xchg sbb xor test add xchg cmpsb push or dec pusha xchg push shl in jmp pushf pushf inc cmp ja aaa je xor lock jp subl or cmpsl ljmp shrl daa sbb pop jmp in rorl sldt sbb push int cmp push movsl ret (bad) jecxz scas mov jge subl loope mov sbb adc pop pop mov cmp push in pushf adc cmp dec inc lods pushf movsl and inc inc insl sarb xchg add notb sub push adc in cmp sub call call sbb hlt mov push push (bad) jo inc pop lcall loope pop xchg std push inc shl push sti shlb notl (bad) pop mov loopne or lea cmp jg mov aam stos mov lea cmp in mov lea loop lcall xor repnz push mov push mov addr16 dec je xchg or jbe dec add mov call lock popw lret fimul outsl push xchg movsb xchg shrl pop in inc sbb out (bad) xor movsb xchg jns pop or pop jae mov mov adc xchg mov ret ret xchg jmp (bad) outsl mov xor pop mov mov out outsl popl and mov xchg xor je mov fidivrl inc push push inc dec enter pop cmp in (bad) jnp rolb pop and mov jge mov xchg mov cmp stc fistpl daa dec inc add jg lea ja mov cmp cmp cld andb mov add add inc add mov mov mov out cmp add fisub mov xor cwtl imul jmp rorb xor and mov mov pusha cmp lret jnp mov push xchg xor sub mov mov std pop add mov or stc (bad) aas mov and dec add sbb imulb pop lcall add add mov add add arpl xchg mov lahf add test outsb (bad) add inc mov cmc xchg loop sbb xchg mov and or mov xchg push mov and sahf rorl mov or insl sti hlt lret sub lea mov insb ds (bad) pop pop sbb popf and adc jle add aaa ljmp cmp dec or xchg xor and inc sub sbb xor sbb bound dec inc ljmp or (bad) mov ret mov fidivl push gs add inc (bad) or cmpsb imul dec and add js mov mov stc movsl add mov cmp adc out sub pop mov push or pop ret add adc inc xchg jg sti mov (bad) std sbb xchg mov in aas xor (bad) push mov mov enter jmp inc mov or mov add shufps mov sbb xchg ficompl and adc sub adc add sub inc cmp cmp push insl pop inc fadds adc std or adc inc inc xchg jl aam (bad) pop mov jns (bad) sbb xchg ret push fwait aam inc (bad) xabort mov (bad) pop jl push push mulb js dec inc outsb dec ljmp lcall xchg and xchg jb mov mov shl adc dec enter cmp (bad) mov xchg mov stc (bad) or jle je xor cmp mov jb pop jg xchg xchg add pop sub push push lea (bad) jnp add mov lret cmp jle rcrb adc iret dec or inc and mov add pop dec dec pop xor sbb nop push xlat movb or sub xor jo mov push imul movsl adc fmull add jecxz ss sbb ret pusha nop jo mov pop mov loop add jb (bad) das adc lret jns push dec out inc ret fsubr pop adc or adc lret dec gs test xchg jmp push dec dec imul loop cmpsb loopne movsb dec roll pop cmovns push cmpsb sub dec or mov mov jns push ficomp stos popa outsb adc inc pop xor sub xchg and cltd bnd cli and icebp loope sbb push cmp jb inc xor pusha cs scas (bad) movsb jecxz orb adc loope mov leave decl xchg (bad) dec pop dec sub sbb clc js incb inc pop mov gs cmpsb jmp cmp lret daa daa int mov sbb and shl add jo and mov sub insb fxch dec sahf int3 and es push push inc sub shl xor js les and loopne ljmp shr sub add mov pop add sarl push xor cmp push inc fxch dec int3 dec inc fs sbb ficompl add inc push or xchg out add push cmp mov xchg (bad) jbe in test js clc or mov xchg out mov jmp sub (bad) (bad) jne jl out into sbb adc bound cmp adc js dec mov and xchg jnp cmp mov sbb rolb (bad) fnop test xor jmp test push lea inc and or ret push xchg fnstsw stos add dec bound add and push push (bad) jne mov and stc es aaa int jle jl inc decl xchg out jle xchg iret or sub lret cmp sbb add fistl int3 fcoms sub xchg jmp xlat pop jmp push jl adc movhps mov mov mov clc inc and cmp call pop xchg jg inc cltd or add test cmpsl adc and out pop outsl cwtl xor sbb add xor cmpsl jnp push add inc and or scas add and add insb movsb mov aaa mov sbb pop imul fimull ret outsb xor lret jno repnz xorl in jbe mov cld int3 add jle and xor lcall sub dec (bad) push fsubl loopne sub xchg cmp ret or inc pusha adc add adc xchg xor in das sbb jno out sbb push cli sbb inc add es (bad) or pop fisubrl dec push je clc fwait push adc and (bad) add jno call xchg movsb push and adc add xor xchg xor cmpl ljmp fsub adc pop pop int cmpl pop popf push lock (bad) movsb add xor sbb push add roll pop and stc mov lahf and add mov adc xchg les xchg jb fldcw sub add adc xchg aas je sbb or and inc xorl enter subl sub add pop cmp mov pop mov mov pop push sub xchg xor add (bad) mov icebp add rorl adc rcl loope in fsubrs pop lock and add lds adc and push fbld ret and insb popa and pop add mov inc lods fs inc add inc fsubl jns cmp adc jle (bad) dec mov inc cld mov inc cmp dec dec imul sahf int and xchg add inc (bad) sbb jg inc add push mov lods inc adc dec pop xchg cli ret mov or fs loopne fldlg2 mov enter sbb cs xchg lret adc push dec (bad) xchg test or xchg mov mov enter nop inc je lea shlb loop add xchg mov jmp xor jns movsl (bad) inc cld mov push and rorl mov popa roll pusha enter mov movsl push push push cmp add mov push movsb lock adcb ja dec in scas test sub jns add pop popf mov xor jo cwtl add mov and dec pushf and out dec sbb jge lea jl lea pop stc sbb pop les push add add and add aas fcom adc (bad) jl cld insl sti mov test jge adc mov inc leave mov dec sub xor jl and pusha imul clc std lret shrb xor or mov mulb mov pusha inc js int3 inc and adc xor sub adc inc cmp jl sahf adc xchg test and jnp notb xor cmp push enter test enter push inc sub fdivs or jle in add mov or cmpsl cld js push mov push ss imul pop adc pop pop inc xchg jb adc fwait jae (bad) ljmp (bad) sub in jmp cmp unpckhps xlat cmp insb in rorb rol sbb ret mov dec mov push jno add mov ss lcall push call cs or lret iret push dec or xchg cmp mov (bad) pushw add or inc loope cmpsb push jmp cmp pop outsb xchg adcl jp in sbb cli test (bad) mov jmp cmp add pushf inc call dec cwtl (bad) pop push mov mov test sub mov es mov cltd loope sbbl push test sub cmp push or xchg call cmpsl fmull movsl jnp xor js dec fist and out push inc ror enter mov and enter das imul das (bad) and leave das fisttp xchg mov and das int3 das pushf pusha test pop lea fisubr test int3 jmp insl gs adc sbb cmp mov ret fldl stc fs add sub mov outsl pop jecxz pop push ljmp int3 push xchg roll jp add ror add push and lret dec std es mov repz rclb mov xchg mov stos and or rcl jno (bad) cs xchg and xlat rcll sub mov add mov ss fbld nop pop test adc lock (bad) in push cmp ret int3 push add xor push sbb adc rol push inc lahf inc subb fsubrl xor decl lret mov mov pop inc ficoml ret push mov pop pop mov jmp test add out icebp mov nop jo jns jge or fbld and mov xlat xchg mov push push mov dec dec add or or sub scas inc sub mov mov sub or and push or mov push rclb (bad) push mov lods push pop lret (bad) xchg add repz pop mov cltd dec or les adc cli in lea or or or adc or cs mov jmp inc mov dec loopne cmp inc lea or test inc inc rcrb sub iret or sar adc loopne sbbb lea mov and push dec push push and push rorl add clc imul push aam test (bad) jo push rcrl int3 and cmp call xor dec and movl ja sub and jnp pop add xchg sub xchg out adc adc sub dec inc fbld lret aaa xchg adc adc pushl daa (bad) xor cwtl addb inc lock mov push push xlat pushf adc add mov mov push or cmp test push pop add mov pop push mov sbb and or adc popf sub sub push jbe jbe pop jmp xchg pop aad fstpl mov fucomi cmp mov je lock mov jne outsl imul pushf mov pop push (bad) testl inc jo push cmpsb daa cvtps2pd mov fisttp lea aas mov xchg xchg lods adc adc fadds and sbb xchg fmul into jae lea gs movsl sub cmp fildl scas push popa push sub dec mov (bad) push cmp je jb repnz and loop mov jmp push inc cld push push fwait mov pop mov sub or dec imul push pushw lea notl and mov xchg sbb insb cmp int3 (bad) dec mov sub out pusha pusha and scas andb or mov and inc sub pusha inc loop xor mov add adc jmp lea (bad) mov scas push (bad) jne push add fsubl mov incl add testb push inc or and (bad) pop and cmp adc push mov (bad) mov cmp sahf outsb test push lcall enter dec sbb dec jg lahf (bad) stos push sbb lea push pop jge push dec mov fisub and xchg sub test inc jbe test dec pop cwtl xchg repz cmp mov (bad) mov cltd cli mov and or xchg push adcb cmpsl rcrl add paddsb sub enter add ds push adc (bad) icebp push push push loope inc pop inc and jmp stos aas add add idivb dec push andl xor sub inc cmpsl mov ret cmp je mov jmp or inc sbb ljmp xor sbb jge cld mov mov push es mov mov inc and xchg add repz out sub push sub gs or test cmp mov jecxz adc mov cmp cmp pop cld or (bad) inc (bad) enter push loope dec add jnp xor pop bound or mov stc mov xor push test fild and xchg jae sub xchg xor add jne inc inc mov xor sbb bound lods nop push lea jne and mov adc scas lret mov and jb jecxz jl add cwtl aas insb or cmp cld mov adc jae rorb jg ret and mov pusha push or (bad) es stos mov punpckhbw mov push jle and add cli xor mov or cmp jb push push add adc jmp inc sub adc add push sbb adc inc pop sub nop sub and and jno add mov or push or add push sbb sbb pop xor enter mov and or scas mov (bad) call xchg loopne loop inc dec rorl xlat push or jge mov dec mov adc jo fistp push outsb rol ljmp dec fisubl ljmp and or sub fldl into mov push shr or jmp insb push (bad) lcall or std mov test scas (bad) cmc cmpsb loopne or cmp lock and not or push xor lds rclb sub xchg or pop pushw fcoms cmp mov sub dec in xor jle push test add or cmp mov pop rol ja push sarb inc mov cmp cmpsb stc jg pop fcomps shr xlat add xor or nop or lods cmpsl test testl lcall rclb push or adc mov or cmp cld sarb lret mov mov cmp and push cs lahf dec push stc rcr and nop imul int sbb cmp xchg mov push add lds jg jno std adc fs push and ljmp pop mov cmpsb movups jecxz pushf ljmp and xchg pop lock lea mov push push in or ljmp or sbb push mulb test mov or movups and jmp add aas js mov rclb (bad) push shll lret je and out cld mov push pop pop adc or push jo cli pop pop iret cmp std and jo out mov out int3 pop mov mov add das (bad) mov and ret pusha in lock and (bad) cld push mov fs insl push adc add add loope,pt ret mov into jmp inc ror movups roll not mov aad fisubrl iret pop sub mov out nop loop shr clc (bad) xor faddl sahf outsl mov int and dec dec lock flds cld (bad) cli imul ret inc (bad) pop dec loopne bnd mov or dec ljmp dec lcall push int inc mov into pushf sbb adc inc mov push xchg inc jo loope pop nop das cld lret test fldenv jecxz rcl mov pop jl xor sub adc lcall add sti and jle jo cmp mov sbb pop adc and sbb mov mov dec sub inc add xor ljmp pushf xor xor lahf aas cmp cwtl inc cmp (bad) jmp pop push sbbl mov addl xchg inc adc mov mov xor repnz pop and pusha aaa jmp insl mov shr adc cli cmp cmp fs and adc in sarb cmpsb sarb call cs xlat xor fbstp jl ljmp sbb ret cmp pusha lcall mov pop jo add call lcall dec mov fild or punpckldq xor mov iret lahf sbb outsb jo mov xor lret xor jle sub mov ffreep out loop jb add rol mov push cli (bad) cmpsb or daa mov in cmp sbb aad adc loop add fnop fbstp (bad) ljmp pop bound add out in or addr16 add push cmp aam outsl daa (bad) cld ljmp (bad) xor pop cmp in fcmovne and out adc popf jecxz push jl pop xchg loopne into cli mov sahf sub cmp push inc push mov push sarb and push lods (bad) loopne or aas jl subl inc ds and sub stos hlt adc or and cmp ljmp inc push or pop push movsb push stc cmpsb (bad) xor stos add or adc mov push push (bad) icebp pusha or pop sbb mov xor mov jg and ret pop pop gs sbb cli test and mov push add jb js jne jecxz,pn fld dec jns jge out ljmp in adcl lods movsb test push add or jmp or jle outsl les and dec lock lret pop push inc jmp sbb cmp ss add or sub in jb int3 (bad) mov and pop sbb add divl (bad) jle push in cltd imul and out lahf xor mov jmp dec shrl jmp mov dec addr16 xchg roll ret sub inc pop out adc xor sbb add es mov or or adc mov sbb add adc rcl ljmp (bad) push xor clc insb and repnz jo or add push les pop adc iret rorl shl mov ficomp and and add jp aas xchg es mov add movl add inc addr16 mov fdivrl sbb test mov arpl ds aas inc sbb inc add repnz neg hlt stos test cld sbb mov movups push sbb xor xlat jb pop pop imul push pop pusha addr16 inc and hlt inc pop (bad) adc fbld clc add sar loopne cmp jb mov or adcl mov sub sbb push jno push pop outsl mov repnz icebp outsb adc stos sub pop mov sub dec push hlt cmp ja adc and jl jno sbb and sti or inc lret mov cmp movsb jl sub pop dec roll push inc jg or mov ret int leave mov lret (bad) push mov jae incl mov add mov sub cmp mov call xor adc add cmp or imul add lea clc push (bad) and cmp jae call cld xchg rcll (bad) dec inc xor out xchg jp pop add lods add add mov icebp add test lock jo gs mov lret sar and cltd and insb add mov rolb ljmp cmp add cwtl add mov mov arpl inc pop jb mov adc mov imul mov xchg add xchg mov mov cmp fnstsw add add movb or sub lds push incb jmp test mov imul mov add mov loope cld jns pop adc pusha pop movsb icebp dec fs add and mov ret add lahf adc clc cmp cmp pop insl sub dec les xchg pop adc xchg xor xor loope das ret jmp push dec inc daa jb mov addl jne push loope adc fwait pop xlat mov lods lea je or int subb lods pop fsubr and or rorb mov outsl movsl pop and sub xor push push push mov pop inc xor inc xchg add mov inc inc adc enter fidivrl (bad) pop sbb cwtl dec sub ret rcrl mov jb hlt cmp ja jo mov aas addb dec inc push jl jmp xor pop nop mov mov stc push push dec std mov mov pop (bad) cmpsl imulb dec daa xor and rol xchg rclb ljmp jecxz leave sbb mov dec xchg (bad) pop xchg jbe pop push push push pop push ss shrb push xchg outsl pusha test pop mov dec popa and repnz ljmp adc push shr (bad) cmc xchg mov aaa inc ljmp lock mov stos mov adc cwtl stc xchg pop sub dec loopne popa cld sbb int xor jmp sub add inc adc scas inc and mov fisttpll push mov loopne rcrb or mov add fisttpll js (bad) inc fwait jle iret inc push lea push lret or les inc add sub add or int lret add push dec arpl xchg jecxz notb mov or lods das arpl xchg push std rolb or dec push lcall sub mov jo add jg pusha jecxz ret inc aas insb call xchg cmp orl aad ret mov mov push int push mov cmp mov jo stos adc sbb daa fadds cli jne sbbl popa dec loopne cld xchg or or enter inc es inc cmp test adcl dec addl pop loope push in lcall lock dec xor clc and mov cmp xlat js push (bad) mov daa test jge cmp sbb xchg push sbb faddp loop sbb jnp inc sbb pushf xlat in scas cmp add mov mov ret mov adc rorb jg or sahf inc add out test mov int (bad) mov jns push dec aad mov adcl fwait xor and adc push int lock and add js scas dec shll adc sahf ret dec cmp fwait lcall sbb dec xchg mov push push inc mov jg push sub xchg inc gs ret popa or sahf xchg jl cs inc lea push add pop nop mov xor mov dec mov fwait lret xchg sti pop xchg sbb mov scas push and cmp lods fdivl pop push pop pop or add mov xor test sub arpl test push adc dec movsl cmp mov lea sti lea orl xlat sarl ret shr nop jne cwtl push mov mov int3 incb (bad) jae xor push sbb ss jge xchg test clc push mov fcoml cmp (bad) sbb xor lcall jg sub jo sbb xchg sbb xor daa and sub mov mov dec pusha and clc lock xor adc sub push push dec adc mov xor mov add mov cmp mov and lcall jnp shlb mov fs or xor or pop andl mov adc mov or addb roll add add int3 add xchg mov mov xor ficoml xor outsb dec mov lret mov or sub ss arpl inc pop cmp jne fldl or dec mov mov xor push (bad) sub cwtl sub pop dec lcall lock mov stos xor loopne repnz mov fwait mov mov rcrl xor out (bad) faddl out inc lcall ja adc pop dec mov or in mov loope stos call daa lods inc shrb jle inc je rolb add outsl pop jo xchg add push xor mov dec fnstcw loopne cmp loopne mov add clc pop fdivrs inc xchg in inc adc in fdivrs pop loopne movsb inc test int3 ficompl sbb rclb mov mov push mov sbb je rcll xor mov xchg cmp ss sbb mov xor (bad) adc push imul add inc adc dec dec loope fldenv pop aam fmull inc punpckhbw add icebp cmp rolb push mov mov fsts js,pn mov shl mov mov jecxz dec adc dec (bad) hlt test ret sub xor int3 jp sub xchg pop stos fs out push push pusha xor test fdivs test outsl loope mov xchg inc mov sbb jno test and or lret sar fidiv ret cli orl std sbb push inc addl rolb or and les dec and imul dec push cmp jmp inc xchg icebp dec rcrl push rcl xor inc (bad) test je push ljmp mov push push roll sbb sub mov loopne fcomps adc ret jne jl loop test dec mov mov clc sbb loop test add push push pop cwtl or ss test ret push in pop jnp in or movsb (bad) xor sub push adc add into sub mov xlat cs inc inc mov lock sti mov mov or adc mov sub inc add dec jne in inc outsb bound xchg mov xrelease push mov and into mov ret je sbb cmc and aam inc push jmp cmp rcr pusha add cmp mov popa pusha test fisub popa pop adc xor pop out jecxz addr16 mov test ret mov add add nopl inc mov sbb mov add int out dec add or sbb jbe add sbb ds pushf loopne jmp mov lods jbe push jmp (bad) faddp pop test add xor repz cmp and cmp mov test or mul adc add push (bad) pop dec test cld into push and movsb adc jns xlat sbb dec arpl inc (bad) fmul jne mov movl and stc or bnd (bad) add cmp mov fdivr imulb and test mov sbb (bad) sti mov mov jne pop mov pushf or pop jp sub sub rdtsc cmp (bad) cmc add mov lods jb sti aas push xchg push cmp je or sub daa inc mov gs insl jno inc test ret rorb arpl mov cs in int sti xor mov add and (bad) push push add inc add jg aas xor cmpb jge push xor add addr16 push sbb mov imull (bad) repnz lock adc xchg dec into inc add adc mov add adc mov push divb mov hlt (bad) cld mov sbb test or sub sbb adc scas outsb xchg and push xor mov gs data16 mov (bad) inc (bad) int3 clc jg pop jl push rclb sub roll mov mov pop rcr xchg loopne cmp cld or test mov inc xchg mov rcr pop jmp sub inc bound jae mov in roll lea std sarb adc enter dec lahf add rep (bad) js dec xchg lock out add push shlb nop sar rolb and and sbb jno push add hlt call icebp mov lret adc aas mov ret jge push jle mov inc jg adc push enter mov inc imul xchg lds lds sub pusha xor subb sbb divl out sub dec cmp out pop push push jecxz jo add pop sub inc out lock push adc inc adc xor in jnp adc test pushf jns ja inc sbb xor and mov pop and bound xchg push aad movb xor mov fisubrl insb into adc jl add mov fisubl cmc test out xchg add pop sarb je mov in fisubr sahf mov add sbbl out or test ljmp fwait dec outsb or jns dec sti aaa mov icebp das int rcll cmp js test rcrb mov lcall hlt (bad) (bad) (bad) jle sub sub push adc add xchg hlt push or pop xor in (bad) bound iret sbb and clc push inc daa cwtl call push or loopne into clc fild add sub imul xor icebp or in jecxz imul lock icebp inc push in add in cmp lock out int3 or and int3 pusha pop adc push mov loop sbb data16 and inc je cmp xchg nop dec rcrl and add int3 push pop push pop dec push pushf push outsl xor xchg insb shlb and clts inc mov aad pop mov daa mov (bad) and push cld add mov loope repz mov jl sti mov mov insl xchg push adc js xor sub pusha mov jmp xor add mov xorb flds ljmp adc or inc xor mov aam sarb decl nop mov pop inc or push pop add or xchg dec adc mov dec es pushf mov cltd fs dec sub fucom jns jnp shr push mov jns fwait call adc (bad) cmp cmp jl cmp jg test lret ja testb sbb push dec mov ss xor insl pop mov das sub jl xchg mov mov dec dec or jmp movsl (bad) mov xchg ret push push push out inc cmp or sti xor push and cmp dec mov cmp call and cmp fsubrp rclb lcall jge sub push cmp push in add rorb insb aaa inc dec je push cwtd dec pop fs out pop bound push lret pusha sar pop pusha pop add add out imul push or and add insl test mov and add add aam xor mov and cmpb add sub adc movsl fadd sub rcll jg xor hlt inc sbb push inc jno xchg dec dec subb pop sbb add outsl mov pushf cmp pop xor clc and ret out jne leave in adc jmp pop mov mov xor pop lds jp sbbb and pushf and xchg or out leave pop xchg frstor xor adc clc jecxz ljmp push xor jmp inc and or inc stos sub sahf lea inc jl push adc mov inc loop add adc ret lods inc inc out imul sbb out push dec pusha mov and rclb sbb sbb inc call loope sbb inc adc push sub inc push dec es sbb push ljmp lock sbb sub pop leave ret sbb popf adc nop push outsl inc imul inc loop lahf and mov xchg jns (bad) mov roll xchg cmp js movsb es lret mov cltd movsb mov xchg add mov test or je out dec movsl jle xor popa xchg cmpsl jns dec pop adc fildl iret movsb stos pop fidivrl fsts xchg cmpsl jns sbb adc fidivrl aad add and jp add or pusha mov fadd adc lret mov in enter sbb adc mov rorb lret imul shrl or sub sub ja int3 fnsave xlat data16 data16 lods xor loopne adc (bad) js fcmovb and add sub xchg adc cmpsb lret ror adc or cmpsl dec pop and adc xor or xchg push and and sbb aaa fnstcw push bound mov adc loopne jbe dec mov push sub sbb fdivs pop inc xchg push push pusha xchg call sbb lcall sarb add mov add sbb rolb rcrl pushf or in mov or sbb or out jno cs arpl xor and lea movl das jmp jl out adc roll bound pop add and add lds fmull dec rolb dec int pusha (bad) je add andl fidiv test in cmp xchg cmp jl and add jae xor or movsb imul or xor in xor adc (bad) (bad) xor adc mov (bad) jl inc sbb cld sub or movsb les arpl inc (bad) mov inc dec movsl sub (bad) mov je lods ret mov js (bad) cmp inc add push lea push adc test rclb ret add or test add cmc rep mov and icebp (bad) ret test xor mov adc xor or mov andl pusha push mov add gs mov jo mov mov inc and repnz aad lock dec mov push dec loope enter pop mov mov and mov iret pop dec mov daa lea push icebp sbb add push add push mov (bad) mov js add mov insl adc (bad) add push cmpsl sbb fsubl or pop movl mov in cmp cmpsl test sbb push push lea pushf add or call sbb jo xchg push and mov mov dec pushf jb hlt push cmp or dec sbb (bad) mov sbb jne and push mov std xchg int3 lods add push movb inc or inc jmp orl add (bad) push fisttp shl sti lods push xlat push popa sub aaa pop jmp or push or xchg ret pop mov inc sbb cmp inc mov ds shr sub mov (bad) or push sbb shr push push sbb adc xchg adc add inc add jo,pn mov enter jbe mov jmp mov iret int mov mov sub mov push and push lods mov pop icebp inc ficoml je (bad) xor jbe adc lods xor pop jbe popa jp push iret sbb add cld lret push mov mov loope int inc or xchg orb lret mov testl add sahf adc ret sbb xchg and test jnp add rcll cltd cmpb dec sub jg in loop (bad) test cmp jnp push adc adc jle and inc inc gs inc inc pop add sbb dec inc aaa inc jns mov xchg push sub frstor fwait inc loop mov push push or enter inc sbb incl add (bad) jnp daa cmp je clc cmc push icebp repz add inc cmp cmp or dec inc cwtl adc push enter cmp adc pop push cmp adc push inc je cmp insb out sub push mov mov jne mov inc test pop push push inc or push fidivr push inc sub or clc dec insb arpl ja push cmp lret ljmp insb je cmp je jmp pop cmp fbld jo pop stc adc pop int3 jns push jmp pushf jb aaa (bad) in jo and arpl sbb push (bad) push dec insl pop adc fisubl and dec add outsb (bad) xchg and pop push inc arpl pop fistp cwtl dec push test adc push (bad) in and lret mov xchg lret xor adcl mov inc fdivs cmpsl xchg pop mov pop push out addl loopne mov push stc cs inc fcomip mov adc jecxz add jg imul dec push es and dec xor rcr jle push or shl or setl jmp cmp mov aam clc xor addr16 loop cmp ja das jmp ja out sbb clc adc xor test popf inc popa popf push adc and or or shrb xor ret lret mov sub enter push lret jmp pushf or push (bad) mov and sbb mov mov lock inc push mov push push daa jmp ds push mov fdivl jl pop mov pop shl rclb sub rcrl ret clc daa mov nop data16 (bad) jns pop or dec in pop inc add je add xor adc sbb or push iret popa dec xor inc inc pushf repnz push mov add add clc aad inc mov or rcrl lret cli fadd out cmp cmp jne adc je push test pop shl aad ret xor inc and aaa xchg je push test push inc lock cmp dec pop sub nop lcall mov js clc ljmp cmp ficoml (bad) dec popa add inc ret dec cmp cmpsb dec mov dec xchg invd test out js outsl shll in ficompl lea push cs nop jo inc push cs xchg sub imulb pop jno pop mov aas sbb punpcklbw mov enter xchg add sti stc dec stos test adc or xchg daa xor (bad) adc punpckhbw lock aam out fsubrs rcrb into push call xor or adc testb clts cmp dec in fmul add add push out and jge push js jno or nop pop shr (bad) jg cmp xor mov mov push inc jle xchg (bad) mov sub popa hlt adc into jl or push jl fwait rorb cmp ret push mov or mov mov fsubrs fsubrs mov push fimul fs push or and jne xchg stc rcll pop or add mov sahf nop mov jb xchg scas xchg clc clc and insb xor es jb std mov ret or je movsb insl outsb outsb add sbb je mov (bad) jl insl jae adc or push test es and mov xchg jg jmp pop add in or push sbb pop add test or mov add stc pop bound push outsb jp ficom aas mov pop je inc repnz cvtpi2ps je mov (bad) mov sar je push sbb sti xchg pushf dec push das bound sbb or ss cmp cli test jg mov aad stc cmp xchg mov mov je mov and adc mov push or add lds jecxz lea (bad) sbb ja xchg sahf in int3 test jne or jmp test jne std cmp xor rolb jg jmp sub pop sbb inc cmp dec sbb rolb jp or jmp or inc jp inc xchg pop rolb sbb shll ficompl mov xlat fadd push int fnclex sbb hlt sbbl push add in add jnp and add jle push in repz sub dec adc jmp stc pop add add add movb xchg sub jo add in sub push decl (bad) xlat mov iret sub mov loopne movsb mov fstps aas sub jl sub fcmovnu aam mov pusha faddl jle dec jns scas and adc fiaddl out je push enter xor and pop jb ret adc fstp fisttp and into add fdivrl fadds stos inc push aam sbb or push cmp adc fnstsw mov out inc pusha push fbld pop jp dec cmp sbb pop fcmovnu bound out test clc aam inc or (bad) jno call push lock mov decl cmp cmp and addl mov fldt or faddl inc jl lahf nop push lods jno enter sarb enter scas or jo mov pop or test push mov clc arpl out std jle mov xor jnp adc push jge sti fnop in adc lea xchg dec mov leave push xchg or jnp stc mov mov dec pop mov sub fs imul cmp or movsb and adc lea daa inc push adc test push pop adc xchg faddl dec sub xchg pop mov push addr16 adc faddl lahf pop pusha or cmpsb mov mov jl test and push loope loopne mov cmc es push push cmpsl sarl fs xchg inc rolb inc jbe imul push ljmp inc outsb dec test add imul stos sbb cmp jae mov sub jmp xor mov orl lock cmpsb lock jp jae (bad) adc jbe mov cs es adc inc and loopnew fwait mov lahf loope jmp adc loope addl jb jns pop adc movsb mov je push das dec xchg jae test xorb and lock sbb xor push int3 mov inc adcl mov mov and push and jbe sbb inc jecxz pusha loopne fdivp add dec add cmp xor fsubs mov icebp add add xchg fwait jle dec loope or pushf ret xor pop push mov hlt sbb dec cmp call or mov xor inc adc sbb out push jno xor shl xor roll jnp ret fdivl add sbb xrelease inc fwait adc jbe mov stos jmp ljmp xchg pop das nop es mov add mull jno pop lret sbbl movsl outsl or fdivrs jb push stos pop jl push jle mov mov push inc insl js sub stos xchg adc dec mov xchg lea pop cmovb jnp add lods push (bad) or dec inc and rorb jg sti xor sti push mov xchg add add add xor jg xor add mov cmp jae mov (bad) call xor jb fsubp push outsb xchg (bad) jmp inc dec mov jae xor pop jb jmp push or sbb jbe jnp xor daa mov in cli mov inc mov fimull (bad) pop pop jb jmp ds push (bad) add mov lret test or sbb cmc adc ds push ljmp mov and push pop fwait addl xchg stos dec or clc inc pop xchg mov mov jnp lret aas sbb add xchg (bad) pop aam or mov adc inc push inc jg push pusha and adc je in push adc jae push lret sub or push push in lea js push jno xchg or push into mov mov pusha mov test mov cwtl rorl push (bad) sti loope dec pop fldt sarl pop in dec cmp addl pop movl inc or push gs or lret or jecxz shrb mov in cli jmp push (bad) and sbb cmp les push mov sti mov mov sbb sub lock sub or lcall (bad) jecxz dec out push lahf xor and pushf dec loope scas imul or cs imul fadd insb adc les mov cld sbb cmp jne cwtl jne push aam pop insb jmp cmpb dec repnz xor outsb mov repnz mov int3 and dec call int mov inc cwtl adc inc push dec push jne push add in pop jae mov or dec adc mov inc cs dec inc test xor jb imul fwait and mov cwtl inc dec bound pushf dec fsubs cmp push dec arpl jne inc dec inc cmpsl xchg popa pop jb fcoml push xchg jae inc outsl das mov inc inc jo jbe pop mov mov sbb dec pop xchg dec inc cmp imul add enter inc imul push jg je inc je sarl dec das or xchg sbb push dec push (bad) je push jp enter cmp xchg jl jmp add loop sub cmp cmc mov sbb pop sub (bad) fdivr testb jne jge mov inc sub inc pop cmp xorb adc jns (bad) fwait lahf xchg out add testb push xor test outsl jecxz stc mov in scas nop mov int aaa adc adc adc cmc or mov rolb pop jbe adc jge jmp adc ret push add leave xlat add add or aas stc ja add mov inc add xchg sbb cmp flds cs jne jl sbb sti daa pop jne test jmp mov mov and andb mov leave mov inc test pop cmp popf jmp push shll roll leave std mov popf (bad) cwtl jmp testb ss jae inc ss fisttpl out jmp stos js (bad) mov stos adc cli sbb lds mov push pop test bound imulb mov (bad) push adc xor adc push inc push mov add pop movsl cmp imul cmpsl sahf push sub inc idivb jns pusha test push pop ljmp mov pop push mov or jl sbb xchg ret out mov pop pushl mov cmc fildll dec pop rorl cli dec or adc cmp xor or jo rorb js cmpsl jne inc and push jae mov outsb adc push mov int and iret adc pushl (bad) les pop mov ret xor xchg adc shlb jne clc fisubl stc push xor sarb dec pop jl or nop ret or outsl cmp or pop sbb jne cmp add push mov push test fcomps sahf cmc xor ja add xor fscale fwait clc out sub or add dec jne push icebp sti push stc lea mov ficoml popf cmp or push js xchg add flds inc call mov sbb addl and ficoml mov decl dec jne fcmovnb sub (bad) out aaa inc cmpsb ret das mov jo imul mov ret xchg ljmp xchg jmp mov add mov xor or xchg adcb adc add mov roll add jge dec and test shl mov fcoms pop or inc mov faddl test mov ljmp sbb les or or fstl cld (bad) ljmp sbb mov push cmp xor stos pop test pop push add sbb hlt pop sub insb je sbb cmp ss sub aaa (bad) push es call aaa test jo xor adc push mov or inc adc xorb mov cmp xlat push in (bad) sarb and pop push push mov cld sbb inc add or adc dec mov or push in inc or adc mov cmovbe push fadds cli jo jae fcoms adc or mov or mov adc cld (bad) or jecxz and or sahf test jg mov loope mov js adc fisubrl fucom push mov pop jne add jno sbb or push jg sbb ds cmpl pop inc push add cmpsl inc jle cmp rcll push mov stos push incb mov clc push mov pusha add pop inc pusha adc inc pop sar out and inc sti and adc dec mov pop sbb inc roll dec out in push lock jo mov daa mov aam or repz pop xor shrb rcrl pop mov add iret pusha loopne loope js jecxz aam cli lahf jo movsb cmp cmp and or (bad) nopl cmp cmp or mov add add mov loop ss jge ret cwtl sti test arpl adc addr16 inc jecxz jle push cmp push (bad) lret and fadd add jbe dec popa or cld inc lods add fidiv and and (bad) je push push xor push xor je mov jo ret sub adc sbb sub xor dec (bad) icebp dec lcall insl or outsb or pop jecxz adc add aas mov mov inc add scas xor mov rorb cmp shr mov (bad) neg inc mov xor sbb imul lret add pop cmp iret xchg or rclb ds cmpb push fs loopne and test inc and fwait ret xchg cmpsl cmp cmpsl stos sub push (bad) jp sarl jnp adc add cmc jge mov adc (bad) push je xchg mov xor jne or jns or xchg fldenv pop or or loopne lret cmp mov xchg das icebp add scas xchg enter andl adc ljmp pop dec xor adc add pop push cmp stc jbe mov or and xchg rcll adc lret sub jp orl arpl xchg xchg sarb nop ss (bad) imul stos pop cwtl xor add cmp hlt mov adc cmpsl outsb pop inc jbe and push es fadds mov push roll or xor mov popa cltd push loop (bad) and jno add dec inc call les push lret push add test test insb mov fisttpll sub mov dec out xchg ljmp sbb icebp push cmp vmwrite daa jae push pop iret or or pushf pop jg iret jo clc inc fadds ret add out mov loop dec (bad) cmp jge dec sbb jl dec dec or add and and xchg mov (bad) fmuls pop (bad) mov xor add mov jge ret jmp test or push or je clc mov add pop add add nop jo test out push xchg mov and cmp sbb aaa je das cmpl adc sub xchg sub mov and clc xchg pusha ljmp sbb cmp sbb popa leave inc fisubl hlt outsb insl mov test movsb mov mov jb xor xchg rcrl imul call inc lret push push je add jb fcomps aam adcl cmp sbb dec push fsubrs push push lock ss out mov ss xor or inc das sbb (bad) out jge mov mov mov pop lret (bad) (bad) sub enter ss cmp sbb subb xchg mov adc sbb inc sub call out or push or add es mov in pop mov out ltr push sbb cmpsb xchg mov push fiaddl inc cwtl shrl inc sub iret test sbbl jo pop stos push fxch push in push aam mov enter shr xor xor cmp in push cmp xchg inc xor sbb mov cwtl dec mov mov jb in cmp mov (bad) std and loopne out push jb jb out cli mov scas mov aad test bound add popa mov mov dec mov push popf rcrl aam inc test sbb cmpsb adc nop inc fisubrl mov testl mov or add push adc or pusha gs leave xor lahf push push mov add (bad) les shlb add push jo push sub das mov daa loopne repz pop add andl adc ds adc push add pop sub lds dec inc pop bound pusha jns mov mov test mov jo loopne punpckhdq sbb cmp adc dec ficoml sub (bad) jno push cwtl stc mov push sbb cmp add pop int3 push and nop xchg fxtract jne loopne jbe or orb test cmc and fisttpl aam int3 and insb cmc sub inc push add cmp jg pop fimull fadds fildl icebp aad outsl mov xchg ja mov xor jmp fadds test (bad) xor jne push mov testb push xor xor js jmp pop and or xchg rclb add mov mov mov pop sub mov sbbl push xchg mov cs push dec dec repnz jo shr mov mov and mov mov pushf outsw sbb jle (bad) cli jb je out or pop cmp add sbb loopne dec pop loopne or test ss imul lea ret mov sub mov inc mov mov cwtl jbe popa and pushf shrb sbb cmp adc add sbb cmpsb push rolb push pop push leave out sub cmpsl divb adc lods jmp repz push (bad) movsl jl inc xchg push push pushf push loop push mov and imul das xchg cmp sbb int add xorl popa sbb popw lods push mov dec inc or stos sub mov cmpsb mov lret inc pop xor or jbe cmp jb lea or mov shll sub jl inc das xchg je mov xor add test shl inc xor push mov (bad) icebp mov dec gs or (bad) mov xor inc in mov push xchg jl xor inc inc jne loopne cmp or jge in ljmp (bad) sbb mov mov push dec enter popf mov jg mov pop mov mov add dec sbb add cmp movsb or and push (bad) mov adc dec push dec dec or cmp dec call sbb fisttpll push jmp xchg adc xchg mov data16 cmp sub xor xor xor mov test jb fistpl pusha (bad) sub push cmp arpl imul (bad) into int3 pop mov rolb cmpsb or push enter adc mov arpl cld inc in je (bad) sub pop sahf jbe sahf test xchg xchg pop rolb pop out call cmp pop jbe mov scas pusha sbb data16 shr jns andb js sub add jb and fucomp insl out jne xor es and xlat inc ret add in cmp add fucomp pop sub (bad) jae cmp xor nop inc add jns dec xor (bad) push les xlat add clts dec or insl ss sbb jl adc lcall push sub es cmpsb mov pop dec lea push dec cmp jmp push test mov mov xlat outsl push pop in dec sbb push push sub push imul add xor push cwtl or mov int3 cmp jne dec ret or lea or lret push fmul mov adc lret popa add shll or xor sbb add xchg adc fsubrs and pop mov out into sbb leave dec les fimull push or bound inc inc adc jns ret pop mov push ds inc add adc mov cmp push pusha add push mov push (bad) bound add xchg fnstcw add add add mov push inc ret add xchg xor push pop neg sbb pusha or shrb sub pusha out sub pop mov mov adc inc add (bad) call je (bad) pusha xchg and pop rol ret or mov aas jne cmp rcll mov pop push rol ret push sub mov sbb push ret mov in dec (bad) xor push (bad) adc ss cld pop pop and sub and repnz jp sub push (bad) adc test pop js enter movsl sbb lcall fistp add mov rol pop mov mov mov mov xor sub xor push pop stos sbb out test (bad) cmp test pop inc sti (bad) (bad) das push mov pop add or pop hlt pop dec jecxz xlat mov add daa test dec loope mov sub arpl push push jmp cmp lods xchg test pusha dec inc shr xor jns stos adc or rcr push inc popa or stc iret sbb pushf lods or in setb cmpsl lea add ret cli ss mov leave push shl push sub out pop sub add jns cmp shl lods por sub dec jg jne add jg cs cli lret fadds lea ret jo lea stc adc push shr mov movsl jne xchg pop insb jo test and roll ds dec jae enter shll into mov and fistl aad cltd rcr mov (bad) arpl inc iret fdivrs or xor (bad) (bad) call in das or and add inc mov clc pop enter or xor in add inc adc sbb rorb inc (bad) in std test (bad) out xor adc cmp jno cmp jbe xorb cmpsb adc add add cmpsl push or popa shl push ret loop add fldt jecxz sarb mov push dec lcall jp fbld out xor add add and jle or sub fstpl cmp sub or push fiaddl or lret jle xchg and sbb pop adc lock inc sub jo adc xchg or jmp orl inc xor xor mov mov in mulb clc add mov das iret xor dec xor in jnp add outsl pusha pushf sbb jne (bad) mov (bad) (bad) push add adc jecxz dec in mov pop add inc ret dec jg inc in push mov js xchg jnp xor movsb lret push push inc sub leave imul inc xchg (bad) push dec mov mov rolb xor (bad) stc cmp add add cmp jge mov push lock sub in pop ss cmp xor fiaddl adc insb mov jg mov push je dec test (bad) jp lock add insb stos or mov mov repnz (bad) hlt mov out cmp cmp sub (bad) fnop sbb je adc cmpb je jmp push sbb mov jne cmpl cmpl inc add jle xchg pop cmp add jmp cmp pop jle jne adc das loope decl pop fimull mov add sahf jge or test dec mov mov or loop jne or dec or sub push or pusha bound movl sub jg js adc test mov das insb jecxz imul call lret dec sub test xor aas jle mov pop mov or adc cli dec sti incl jmp push push add (bad) push push xchg fistpll cmp cmpsb cmp (bad) jle adc (bad) xchg insb sbb pop pop push add mov jns push pop jo test jb aaa or xchg popa sbbb notl jb and inc sub fimul outsb fadds mov push cli push mov cli (bad) movsb sub fildl pop add cli sbb in sbb sarb sbb mov jo shl std sbb sub lea dec insl mov test jnp ja popa sub mov imulb iret sbb xlat and out pop aam iret enter jge lea int cli pop add adc jp addr16 push cltd es xchg movsl stc cmp sti adc cmp sbbl vcvtps2pd mov xor push pop stos and clc add pop rorb xchg pop mov jmp sub sub mov adc push cs cwtl rcr or cmpsb addl dec push inc (bad) stc in adc test test in test stc jmp cmp jae mov mov push lea jo fadds test ss mov pop add cmp jb or inc mov sbb mov cmc outsl adc movb jmp cmp jbe jmp sbb das ficompl pop fildll add shl into mov mov sbb decb or jmp dec stc (bad) jbe enter adc cmp lret cmpsl mov xchg add in jmp fnsave mov mov scas repnz ljmp mov add pop inc rorb ds jae fcomp (bad) jbe jmp push fstps mov add in or sbb pusha jo fimul aaa push pop loop dec std jb shr adc sbb sub mov jbe mov pushf jle dec das inc dec cmp adc decl mov cs cmp mov push cmpsl push mov mov decl cmp iret xlat and sub call jne in add clc ljmp int3 push dec pop leave push fist (bad) div ret xor test sub push call push jp push cmpsl and jmp je,pt adc push pusha out je outsl dec sub push mov push add scas test mov push les jp jmp jmp pop push lea stc dec lods jl pop lods test push test arpl or and and imul sbb mov mov push add push je arpl and sbb jno add cmp mov adc aas ret adc orb jg fnstsw mov mov dec movb movzbl lret mov pop mov jp (bad) dec out add dec add inc sub nop jnp and sub sub adc and cmp pop lds mov dec mov je push sbb lds outsl or push pop pushf inc and mov push call adc mov icebp in adc sbb or push inc sub inc and imul fiadd push adc divl xor fbld or inc nop cmpsb in loop test xor fwait dec adc or fisttpll das out push cmp pop mov or sbbb and dec xor or adc rcrb pop cmpb jne cmp jne adc sbb jae and inc bound inc sbb add dec in cwtl cwtl nop testl adc mov ret je add jge push dec jmp dec imul xchg inc bound jbe lcall push sub push fs mov loop jle push mov movl xor mov insl fiadd fstps dec sub js push or push mov inc jns cld or xor or adc push pusha out fdivr dec jne insl imul and jno pop decl repnz pop mov jl and inc push sbb rol jo inc sbb mov lods inc jle push or ret pop sbb lret add (bad) xor adc mov out clc es mov jl and mov mov std pop cmc roll mov dec jmp dec pop out dec xchg xor out and push mov mov aam ret mov popf imul bnd not and cmp mov sbb test and hlt sub orb and adc iret ljmp das mov dec cmp call loopne mov or add mov push pop pop pusha xchg or nop mov sbb mov add js cmp pusha push cmp clc and sub loop xchg xchg sub xor or sbb jae,pt adc add push mov cmc rol les sub mov mov or adc add mov sub outsb sarb mov cmp (bad) sahf jmp push fs lea add (bad) repz inc mov add cmp idiv lock mov inc out sbb and gs imul and fs inc inc mov sub inc decb js loopne or mov js insb das adc out pusha int3 mov push sbb xchg add xorb shlb pusha push adc insb cmp jecxz add ss jo fiaddl or xorb lcall daa adc cmp cmpsl insb pop sbb popa xor test dec ss cli adc dec icebp or xor mov and dec cli mov popl and sub je stos lret rcr imul adc pop add mov mov dec stos das pop aad mov dec ret mov add aas sbb movups dec xlat lods out fsubr cmpsb ja aaa ror enter push pop (bad) and (bad) into test lea test dec inc dec (bad) mov movb or rolb ljmp sub shrl or shl es cmp add shl (bad) out sub insl (bad) je and repnz inc push and push push insl adc pop or fisubl mov inc loopne or jbe cmpw pop jbe ret ds and xor add rclb and push cmpsb repnz xor ret rclb lods sbb enter pushf mov rolb pop outsb fstps sbb push sub adc push cmp (bad) sub inc inc push pushf mov xor and jae and mov pushf jmp stos and clc cwtl enter mov stos mov mov (bad) (bad) sti mov mov inc loopne dec mov dec push in inc fistpl jmp and pop mov mov sahf mov mov adc add sar sub sbb call sbb dec (bad) mov shlb cld mov scas imull sarb push pop dec pop out cmp cmp add and cmp or cmp inc push push aad adc mull call nop add adc cmp call dec dec aam lret or and or sub adc sub sub shrl sub xor sbb fiadd mov popl repnz out cmp jo inc jecxz pop pop fiaddl stc pop sub sub jmp xor inc inc add add adc push push fnstenv fdecstp sub adc repz pop cs repnz add inc and mov push push push out loop cmp dec add ret scas dec jbe (bad) xchg outsb js dec pop jae jb cmp mov pop leave ret push lcall sbb mov pop test xchg pop (bad) mov add movl addl push (bad) rclb arpl jns adc push outsb icebp xor dec sbb in in or sbb cld mov adc and cs ficoml js add cli cs insb add cmp sub add dec add cmp lods add xchg mov xchg test and fwait push adc test mov fstp pop fmull ja inc push test add lea jb in add pusha sbb nop add jns,pn sbb popa data16 inc push fs pusha pop sbb push dec sbb mov add lea push movl xchg pop push pop push data16 mov lods push mov fwait jge out repnz or das es leave dec fidiv inc cs pop leave es cmp pop fsts aaa xchg mov pop push xchg adc jnp xchg push sbb sub add and sahf das mov aam sub cmp sbb jo (bad) in sbb xor dec in inc outsb push or or sub aam mov add ds push xor fsubl mov push sbb ds sbb xchg into add lods xchg dec mov adc or in sub dec dec nop adc pop test inc imul cs jnp inc xchg inc adc sbb add push and and cmp mov dec and add pushf lret ret jno mov or mov cmc cltd ret sub mov mov pop dec mov dec sbb (bad) cmp adc aas adc push cmp or or or cmp xor inc add or das dec jmp mov mov test mov push int adc and (bad) aad scas and or jge std jnp imul mov rcr fistl insb test popf xor xor cmp jl cmpsb lea insb pusha add mov call and xor push or xor ret jmp ret lcall subl movsl add push add add push push mov add add adc jb xchg pop inc or popa xchg sub ja outsl fbld cmp flds sub mov aaa cmp sub pop or out jle jge lea xchg ja or sub push xchg push jo xchg cltd rorl pop int3 push sbb sub mov xor fadds (bad) xor loopne adc jns aas fs (bad) popl xchg js push or cli in cwtl je repnz push fdivr sbb loopne dec push bound pop cli xchg jo lahf mov mov pusha inc pusha cmpsl insl and dec and popa repnz or push mov dec mov jg pusha cmp xchg dec push orl add stos iret out lea loopne push paddusb das xor dec pop rorb popf sub add outsl or push mov sub (bad) lahf add movl sbb pop add dec aas add sub loopne add and bound dec jle adcl lea je repz jmp (bad) sbbb ret fwait sbb mov dec xor or lcall sbb pop inc mov pusha pop pop pop rcrl dec lea inc push pop pop jo dec xor jle push sbb push cs cwtl lock pop jecxz lret lahf popa flds push jo test jle push je pshufw sub insb mov xchg adc mov lods inc add and rolb fwait divl push es (bad) inc mov mov sbb fstpt push dec sub lcall sub gs inc nop push pop inc test jl mov movsl sbb add mov sti hlt add jge test lock lret push and (bad) aas push and cwtl movsb cli jns inc pop mov adc xor pmulhuw xor ret (bad) testl into jns or ficompl das sbb cmp mov cmp mov add in adc les or jge or pop push mov jmp push pop repnz decl loope rcll pop push xchg ljmp or add jns add or sbb les add or sub lcall or add loopne add fbld push lds xor mov mov lock loop cmp sub lcall daa fs bnd push xchg pop nop jmp dec jmp inc sbb push insb mov movb aaa push jl into or mov je push mov inc push dec pop jnp popa sbb es repz cmp sub sbb push xor scas mov inc push and iret jnp xchg add jmp repz cmp fcmovu lds mov nop xor mov mov in add sub xor sub dec add dec add int sbb inc clc cld xor and rolb sti jl out xchg lock xor js popa add sbb js dec imul scas xor (bad) xor push es js jno adc add clc es shl xor mov adc inc cmp fsts (bad) roll jmp je add adc adc pop add arpl test andl adc (bad) xor fistpl lods pop rclb jns and or push push std add popf sub push push sbb push mov xchg add insl adc sub gs inc xchg ljmp sub push add add mov into aad mov xor and clc movsb jnp adc fadd out fsubrl sub adc popf mov dec enter mov loope movsb out add sbb dec sub sbb dec inc js daa mov or fdivrs movsb or mov lcall jae xor cltd ret lods stos sub test std jb jo dec inc jmp outsb pusha cmp sub mov jno jbe push inc inc add xor or mov fdivrs push jae or jbe fisttpll aam add xorb iret lcall bound mov inc xchg mov xor mov inc add (bad) cmp inc dec cwtl pop mov movsb (bad) sub add cmp or mov push loope sbb into jnp dec cwtl out push sti mov lcall jo mov jo nop clc sbb rol xor push or ret aaa add icebp push daa jmp ret shlb add add add lock lods mov (bad) xor or in and cmp jb repnz xor xor xchg inc inc fcmovne outsb loopne sbb les aam je (bad) aam call dec sarb repnz loopne mov mov ret pop cld or leave inc pop xor pop popa roll jne pop daa mov cmp je cmp daa inc xor xchg or pop sub dec xor (bad) xor mov jle or push add pop inc dec sbb inc subl enter fcoms or push movl ss push xor push dec push dec add or mull inc pushw ljmp and dec lods lods or or add fs xchg jecxz scas adc xor push call cmp add aam pop add and (bad) cmp lods test incl mov push (bad) call push fs out sbb or mov cmp jg inc mov sahf add cmp ret xchg jo add ss xor jbe inc mov movsb ret push in or adc dec stc push and mov adc rcl mov inc mov ss jne dec mov sarb push aam push fs pop cmp cmovae sub jge fistl mov push aas adc cmp lcall aas pop or jae or ret push sbb jle xor cmp add sbb js shrl dec push movsb dec or mov push push dec pop leave pop movsl lock outsb shrb mov (bad) movsl lods mov dec pop or sbb push or and add js or and jo lds dec test mov or push jl sbb popf int cmp and mov ret notb sbb sbb inc inc inc pushf mov add gs adc sub shr nop (bad) jbe loope inc inc sbb dec cmp sub pop aas (bad) xor adc jl jmp mov dec hlt inc pusha mov je fs sbb push mov cmp divl mov cmp cmp mov inc aad or or ss sbb imul dec xchg ret inc and (bad) and fisubrl movsl testb enter dec sub into imul ss sahf adc fsts loope cmpsb hlt je lret and add or push mov aad sub mov bound icebp rorb jge dec sbb mov clc sahf mov shrl and int3 push mov clc mov fstpl mov xor or dec rorl decl hlt hlt jmp adc je and push lahf inc sti xor dec lahf sbb cmp mov mov xchg js aaa or fsts scas xchg ret in or or (bad) add inc sbb cmpl leave out fwait test jg fiadd push cmpsl jl dec inc mov xor nop roll xchg cmp or sbb jmp or rcrb and pop (bad) jno dec imulb or popf dec daa inc insl adc add pusha sbb push mov adc fs movsb addl rolb push imul cmp or inc xor and add sbb (bad) or out arpl iret in mov pushf cwtl and jns mov test mov and das cmp add hlt sarb cmp add cwtl gs jns inc inc je mov jp or adc cmpsb jle nop inc data16 cmp arpl mov push sbb inc cmpl in cli xor push or and nop pop inc cltd pop push push pushf adc cs js les test add push (bad) incb mov in sahf mov jns test pop mov dec cmp xchg cmpsb push add pop or mov jne mov mov lea xchg mov push test cmp xor sti data16 pop adc psubd jle mov out inc adc pop push inc pop (bad) stc dec clc mov rorb fild scas mov cwtl pop xchg push enter js sub add xchg aam mov sub jmp ret sbb psubusw imul push pusha cltd cwtl sub pop in add bswap sbb sbb add add dec lret sbb mov daa jmp int and add sbb adc add mov push inc add sbb sub inc or add inc ficompl sub shll hlt lret push lods push shll inc pusha push in mov push popa loop dec fisttp adc inc ss push adc and or test dec mov aam jle inc mov inc fnstcw test and (bad) mov mov mov sub cmp popa mov pushw push popa sub dec mov inc js movsb inc nop cmp or pop xchg and xchg test imul pop lea popa ret push pop out adc mov faddl mov sub add sub pop sub cmp popf and test adc ja movsb and add sarb add push jge jns jl lea pop adc or decb (bad) jae enter add es pop push dec mov ss or cmp dec push insl lock insb xor cmp test dec leave in mov hlt shrl mov daa jne push pop dec fisubl mov jmp inc ja push inc insb jge inc out mov jecxz imul or pop mov xchg sbb stc and roll adc mov outsb jmp into movsb outsb xchg dec push jmp mov push fwait (bad) jmp lock pop inc dec adc cmp enter das mov push sbb jl cltd lcall stos push push hlt daa mov cld cmp pop sbb and stos cmp lods sbb dec cmc ljmp in push fdivs jae or pop test mov jg test add cld das push sub call or sub cmp add in dec xor xchg dec ret push sub sub (bad) and mov xchg push sar andl repnz and pusha push adc dec and jo lock test inc jo push std xor xchg test jecxz sub add call ret lock or (bad) pop cmp in jge or pop es mov cwtl into add ffreep mov pushf fimull or cmpl out push add orb sub (bad) xchg inc mov andb adc into mov rcr jge push out decb ljmp lock or xchg cld cmp cmp pop std (bad) shlb es sbb nop add cmp jge inc inc fidivl push sub mov and adc (bad) push fildl rcrl dec fnop dec mov das (bad) mov sub dec aad mov aas movsb or inc pop int3 jns push xchg and daa pop lahf xor xchg dec sbb or lds enter (bad) jns imul sbb xchg lea push mov push xchg mov sub pop xchg adc (bad) push inc xchg (bad) dec mov lcall mov lahf out incb sbb divl test xor xchg sbb je xchg mov push pop adc shrl mov jl cmp jne fwait cmp inc or add mov sub mov xor push xchg dec leave dec mov test int3 jl pop xchg fmuls lret lret dec mov and add or cmp add (bad) fsub test sti lcall insb mov adc add add add fs lea or hlt dec imull sub mov sbb or repnz inc inc gs xor push mov sbb inc push dec inc cmp add fs mov rcl sub lea rol stc add daa nop inc add adc (bad) xor imul test clc inc movl xchg cmp mov xchg mov out add push movsl and inc push add (bad) test xor popw fiaddl shl test jecxz jne test out roll inc inc icebp mov xchg push sub int3 fidivrl ficomp mov cld movd lea sub rolb sbb or push push mov inc and cli add loop shrb sbb mov pop (bad) cmp push or addr16 mov mov pusha mov inc or add js inc js inc stc scas add inc inc (bad) cmpsb imul shl sub dec jp shl sbb add add xlat sub xchg int3 hlt enter fwait adcl test call ds fcoms add cmp inc in sub fldenv dec addl mov scas dec dec pop call pusha cmc inc clc xor mov lods add xchg lock push repnz push jnp or xchg pop notb (bad) clc adc sub inc (bad) movsl or cmpsb sub stc sbb mov sub push pushf mov add add inc clc enter pop sarb sbb sarl or rclb push jle repz clc push pop add push rorb andb cs (bad) xor popa push and add out call add or xlat xor test sbb pop movsl cs sbb cli inc mov jg sbb fdivrs clc rol add movl inc push fsts or xor adc pop adc add lods sub arpl sub addr16 gs ror (bad) fucomi insb xchg lea pop pop dec popf dec je xor js push push or adc and arpl int3 adc add lds popf aas pusha mov lock mov pushf push push fcoms test stos test add or cmc xor ljmp dec lods add push xor es mov ret push cs loop in std pop push sub outsb jo hlt daa add xor jbe sub mov add mov inc insb mov outsl pop mov outsl mov jno loope jp imul inc push and (bad) adc and push xchg dec jmp and lock jne mov fldenv cmp push adc or pop cwtl (bad) xor (bad) xorl neg xchg out mov jbe ss imul mov test push es (bad) cmp and dec mov (bad) mov add ss popf push call inc add cmp call push push push movsb popf mov sbb movsb adc inc pop add aad jmp fisttpl push mov mov push add add shl jnp inc inc push add sbb pop add shlb cmp push movsb push pop push shll dec into sbbl movsl mov pop dec or or movsl push mov push dec outsl jge fs push pop adc jno jb or mov loopne push jno xor or push push iret pop mov or or jno clc xor out jns repnz push ss and es add xor int adc push lahf add jg jl pop pop push popa add adc adc or pop or xchg dec mov in jmp inc sbb pop in or push fnstenv in dec push or push pusha sbb cmp fnsave xor jp mov mov shll or mov add xchg insb rcll adc sub add dec or inc xchg push rol add rclb mov sbb lds fcomps mov xor rorb sub dec and rolb add xor mov jo adc orl loop loope in mov inc dec imul add add push pop in sub dec mov and sarb sbb nop mov loope movsb inc push push jns cmp sbb mov push lea xchg cmp js push sbb cmp inc cwtl jg jb jb fmul bswap cmp cwtl push inc outsb pop add outsb or cmp pusha xor dec incl outsl push rcll outsl sub and adc and push push mov cli or dec clc mov lock xorb (bad) lods cmc or daa pop loope rcl mov or or pop mov pop lock inc cmc roll adc sbb or mov fistpl cmp xor pop ret pop cmpl (bad) leave arpl inc cld ret loopne inc mov and movsl add lods rol jo inc cmp push pop js add xchg test mov and mov int rorl mov outsl dec or or or xor adc push (bad) mov xor add lods fstpt dec dec lret icebp xchg ljmp (bad) push sahf out dec shlb push outsl jle push adc add test mov call xchg push leave or icebp push dec je and nop push sar add rcrl add sub xchg xchg insb insl sub int xlat push pop pop or mov jle push and fstpt push cmp add add jb xor dec lods les lret imul psrlw adc pop (bad) adc mov fsubrl push daa cmc push sub stc push jne sub adc out inc jne xchg add push (bad) push mov mov pusha sub lcall jbe sub jbe aam xor lock adc pop mov imul sub adc cmpsb jge insl mov add mov icebp and dec add mov jnp rolb inc lods jb sub pop cmp stc jae pop aaa jmp add lods jnp sbb iret jno pop xchg xchg das enter repnz pop and shrb inc inc hlt clc push sbb adc outsl (bad) pusha je aaa mov push cld iret xor outsl cmp lret mov mov jl adc inc or xor iret xchg mov test or adc rcl pop hlt int addr16 xor push jb ss add ds sbb mov jmp push andl xchg push sub fmull aad jno mov daa pop cmp push or dec (bad) cmp mov xor mov mov xor pusha cmp push push mov sbb es outsl rclb push jmp fs jb fbld mov jecxz jo sbb xchg test mov sub sbb add inc xchg sub int test sbb jo js push setns mov add jbe cmp xchg jnp push adc adcl (bad) mov andl or and or mov or lea arpl xchg mov jge loopne adc sbb clc pop add dec add adcb sub or nop adc imul and int3 mov xchg mov jns fidivrl movl mov ret lods push test xchg inc xchg into dec pop push sub imul addl gs push push (bad) jbe xor sbb add imul jnp cmpsb sarb daa xchg lock push sub jbe or pop mov and (bad) mov addr16 into bound add adc js and lret enter or mov pop push jo inc dec and cmpsb cmp mov (bad) (bad) mov enter push cmp cmpsb loop add or cmpsb pop sarb sub adc or and ljmp pop mov test dec and mov mov inc inc punpckhbw push lock test push jo sub or dec leave enter jne (bad) or xchg sti sub mov push inc test rorb (bad) mov stos mov nop mov rclb mov or (bad) loope (bad) pop bound add out push sbb push inc mov (bad) cmc cmp dec sbb or dec movsb out add nop sub enter add pop mov (bad) jne test ds jbe rorb cs jo mov jb xor jl mov or push cmp or jnp mov mov sub pop sti (bad) adc cmpb cmpsb inc (bad) (bad) hlt cld mov stos lahf push or ret mov adc pop dec push mov inc js adc je sub out inc mov adc jnp test sub ljmp movsl sbb pop dec pop pop jnp in pop mov mov popa pop inc pop and or adcl aaa int les jbe mov in dec cmp cmp pop mov add inc mov jecxz subl add aas xchg je xor sub cmp jl add outsb or cvtps2pd popa jl inc test fdivs push push dec call addps push fidivl jecxz mov dec xor mov dec inc das or clc inc pop inc inc jge jmp stos and cmp and cmp out cmp ret sahf in inc add ret lcall enter pop dec sub cmp lcall push arpl push mov and mov pop int3 bound pop or jne ret mov inc imulb dec je leave pusha inc sub je mov jle jbe insb inc movsb into scas fcmovne push jbe lret dec fcoml jno cld pusha add or in mov scas inc test cmc mov xchg sub add inc push mov pop pop push and push loop int3 addb mov sti xor ss ret push popa cmp sbb les icebp test inc loopne into loop loopne lret repnz sbb fldl cld mov inc (bad) mov int3 mov loope cmp mov push leave push dec cmp push pop data16 mov dec lods jle push rcrb in lock cwtl inc ret mov inc xor or popf popf dec lods push cmp clc sub cmpsl pop push push adc push int3 outsl pop jnp test fiaddl sbb cmp frstor push loope inc jo add push push mov mov mov inc sub dec mov cmpsl imul je mov or ds mov call sbb pop and jnp sbb insl and test inc shll rolb adc xor loop movsl sbb in inc add pusha lods int3 xor popf into pop pop push pop test push frstor or mov add xchg (bad) adc jns inc pop (bad) pop pop jbe push sub mov ja push dec xorl xor mov and xchg aad xchg mov ret negb adc cmpsl sbb popa mov fdivrs ret dec adc div pop cmp ja pushf or inc or test lea cwtl jmp dec mov or (bad) or in or push mulb mov (bad) clc jg (bad) int3 push add mov jecxz or pusha pop lret mov int and add dec sbbl mov push or gs in xor les jns push lods enter push dec in push xchg mov cmp dec add je add lret adc jno sub inc test scas je add xchg js test push je enter xchg arpl mov mov mov push mov lds dec push mov inc or xchg cmp rorb (bad) out xchg into sub out add jl sub pop sbb mov xchg mov notl ret inc aas push pop add fwait out call ret add or pop ljmp jbe imul sbb push xchg xchg (bad) hlt rorb jne sbb or xchg aas mov mov jmp jbe or adc out enter add cltd sub incb mov sub jo adc push xchg push inc adc jle sbb inc ficom mov sub mov (bad) jb add mov js arpl pop enter cmp fnstenv add jl or jg inc and rolb cmpb pop movsb push not shlb in add cmp cli inc lahf fdivrp and adc jle mov xor in or cmp sub and dec dec mov push push push add fiaddl out ffreep add adc (bad) mov jo lods adc ret cmp add sti adc ret dec mov inc (bad) aaa sbb ja fwait pop clc jns or jp dec dec test inc fcomps add adc rorb bound int3 inc pop dec cli stos dec mov je movl cwtl aaa cld sbb dec and and nop push push push mov inc roll dec inc rol bound add and jmp or mov (bad) es sbb mov push pop movl (bad) out out cmp or movl mov sub push jp cmpsl fldl dec cmp push and cmpb subb movsb pop and out pop mov sbb add add cmp adc andb cmp push adc cmp or or movb sbb fcmovnb xchg mov shl mov or pop setae ja dec inc mov mov lock pusha insb sub xchg pusha js dec jae and pop or test je imul out mov je cmp ret ret pop xor adc add enter divl loopne dec cmpsl inc loopne cmp push stos sbb mov fadd add outsl push dec popl or xchg and jns add cwtl sbb push shrb mov pop xor fwait outsb in pop imul adc add aas cmp jne inc add insl fwait divl or add out cmp nop push jbe into sahf out jl sarb jns mov iret sarl mov and test mov mov lods and stc sub add insb xor cmc movsb mov add add dec dec or add dec ficom jne dec xchg and js adc in adc add and imul mov and cwtl push sub xchg adc or adc sub mov out inc das xchg je mov push pop sbb sbb dec cmp xor pop ficom and mov daa mov push adc or and or pop jo push sub lods push into (bad) mov (bad) pop lcall (bad) inc aas mov test inc lret xchg cmpsb aas add testl jl push ret sbb insb aaa mov pop push mov or jo notl test and add icebp sbb inc dec jg adc loopne push test aas mov aas insb or addl movsl cli clc sub pushf arpl mov jg (bad) lea (bad) in inc fucomip mov (bad) jge dec mov xchg dec mov cld adc cld cmp add sub push aaa sbb cmpsl add or or and stos mov or dec cltd fcomps or add add xor cmp aam insb dec pop add and movsb andl out and and xor xchg nop insb cmp fldl clc sbb mov and inc sub or mov pop xchg (bad) push cmpsb xchg sbb sbb sbb lret out mov add push push mov jbe mov inc push rorl in mov ja sbb pop or (bad) aas inc testl sbb or aas insb inc push push (bad) xchg mov cmp insl popa jle (bad) pop sbb jmp push scas sbb adc cmp dec cwtl data16 cmpl inc push push mov xchg mov xchg dec (bad) inc inc add loopne or les mov aad sub add je popf fsubrs jmp cmpb jnp add fisttpl (bad) fild lods push outsb or sub mov push popf jl inc xor ss push inc (bad) test out js push push mov push mov mov insb adc push push or inc stc dec loope cld push nop mov sub mov mov cmp pop or movb cs adc adc jmp test ljmp pop sub pop adc adc mov or add cmp push loope mov loopne jl push sbb adc push popa adc xor sub sub (bad) lock push mov xchg lret mov add ret ficom test popf add arpl adc repnz cs mov (bad) test jno imul stc or (bad) sahf pop push rolb std (bad) int3 (bad) jno push xor push imul inc xchg dec ljmp xchg mov pop cmp cli sub pop push loop fstpt mov mov mov mov (bad) jg movl inc cmp shrl bound sahf and ja cmp out sti jne push inc or je adc hlt mov js push push je dec inc inc incb and pusha xor fild cli xor lds and popa insl and xchg sbb jge add xchg sbb mov mov pop test xchg lahf pop mov imul ss ret fdivrs test je inc push loope stos sarl xor sub add or faddl sub sbb pop rolb sub ret popa add inc mov jb movsb cmp add dec popl mov loopne rcl iret mov add adc ljmp repnz push adc jne dec sub cmp je testb inc or pushf lock xchg mov mov mov push mov outsb pop pusha push cmpsl add clc jecxz add dec push fwait mov (bad) xor adcl xchg je add adc pop hlt adc push test push adc or sahf xor xor or (bad) dec je mov push lret arpl adc jno adc push pop push xor and lds (bad) mov and es cmp movsb fldcw insb stos rorl out push push inc and dec aaa jo mov xor mov push push push xchg cmp repnz sbb pop sub cmp cmp insb inc dec sahf adc (bad) (bad) ror dec cmp sbb mov mov stc cmp jle or js je sub adc insb mov out sub xorb xor cld mov loop mov pop sbb jp andb inc sahf lahf rclw ret mov pop push inc push dec cmpsb add roll dec cmpsb and enter push mov cltd pop fbstp mov rclb adc adc xor hlt cmp dec sbb add mov inc adc cmp jmp sub addr16 mov lods ljmp mov push inc int jo or xchg push xchg jnp pop mov push mov add adc in fcoms mov xor lret jmp push or clc lahf test (bad) jae mov test inc stos push jb stos (bad) loopne cmpsb xlat fiaddl (bad) dec roll inc add (bad) js push pop sub (bad) jp lods push stos mov and cmp sbb shrl fldt mov notl and and sub adc dec hlt push pop mov cli mov mov outsb aad pop mov jle mov jg inc cmp mov xor xor mov ss push mov clc int xchg push jl xchg push pop push imul lea mov imul fcmovnu fsubl fmull adc push or push push add jo test inc jl xrelease lods clc adc std mov cwtl dec in or sbb fcmovb xor inc gs adc sbb add sbb sti xchg dec mov fimull lea fcmovbe rcrl out (bad) mov fldl into incl mov ss or push adc fild scas ss jbe testl cltd pusha int3 xor inc and mov jle or mov inc mov imul (bad) push push pop lock fmuls dec jecxz pushf and sbb nop mov test inc mov add sbb lods incl adc mov xchg jge push ret or js dec jl test add sub aaa rorb leave adc movsb icebp jo push pusha or push xchg in inc stc dec pop mov cmpsl cmp popa inc inc pushf add mov stc or inc or sub fs popf cmpsl jne inc pop pushf or push scas lea add and push fstl sub or scas jmp movsl push jmp lcall movsl pop sbb popa xchg cmp xor imul test xor push pushf mov push mov mov add push dec repnz movl pop aas and dec shlb orb xchg call xchg push mov push js add dec push push xchg sbb ret inc cmc ret jne jno bound (bad) fisubrl xor nop add push call lods std js or les roll or push jmp push or mov sarb in addb and jg mov xor cmp gs adc stos fwait push mov push into xchg and add push sub mov pop jbe imul jmp negl movsb pop (bad) mov push xor dec sbb sub imul add adc add xchg lock mov jge push mov or sbb add jle push jnp adc sbb dec loopne shlb pop test add add pop xchg pop xchg rcrb imul and pop xchg in or nop and pop adc mov add imul push mov fcoms xchg add (bad) scas pop popf xor xor push sbb push movsb aad popa clc int3 add mov xor mov clc inc mov pusha add das (bad) cmp jbe push push mov sbb loopne sub inc (bad) dec or and adc push int3 iret push jbe pop add pop js imul add ds cmp mov mov (bad) shl movsl imul push add push mov leave push push push or push adc add adcb sub mov xor js adc loop je bnd adc add push xchg icebp xor hlt pop daa sbbb sub test xor jmp nop adc icebp enter mov cmp mov adc (bad) jo aas gs xchg mov sahf cmp jmp out test jb xorps dec add inc inc fldt scas dec add jns inc pop maskmovq add adc push sub fstl shlb xor je pop push or inc adc cmpl push data16 test enter aam push cmp cmp js test add bound movsb loopne out add add add pop add mov mov and pop mov xor loopne lret dec cmp adc mov in (bad) xor mov xor jmp cmp outsl ret xor imul gs cmp dec push dec clc add cli ja andl or stos popf sub xchg (bad) mov add adc daa shrb (bad) mov sbb push dec lods xor pusha push pop add ret push outsl lea add and jne xchg mov enter pop xchg xchg and in xchg mov lcall mov mov lea add push mov in add shl sub dec outsb or pop dec pusha adc add add pop inc ja push add lds adc adc lds xor adc addb or inc pusha sbb sub stos jge bound mov ss daa sbb adc push jmp add mov cli adc mov xchg sub pusha lock sahf pop inc inc dec dec inc insl lock push les dec stc or int cwtl push and pop pop mov and mov mov subb pop add add js adc ud2 jle mov mov mov add decl call sub in movsl mov mov das sub cmpb dec add xchg push mov (bad) (bad) pusha cli dec jne pop pop push out inc loopne pop push (bad) int3 inc js add add jne and and arpl add inc adc test mov (bad) (bad) jge mov rcrl aaa loopne mov jg rclb aam iret xor mov or jne shll lret movsl inc mov mov je xchg loope fmull pop cmp push lahf aaa add cmpsb jnp inc dec xor sbb rcrl (bad) loope adc adc xorb add or push outsb adc or or stos test sbb test pusha push jae sbb jg xchg nop cltd sub adc cmp inc cmc or or xchg or or sbb xchg adc in (bad) adc fsubrs adc push pusha and cli pop lahf bound pop leave fwait pop cmp and push add push fbstp jb jo mov and adc adc pushf xor es pusha xchg mov jl sub jp adcb xchg mov mov clc jg xchg clc lea cmp ja or dec ret or add popa or or insl loopne cmp sbb push jb bound cwtl arpl adc mov xor inc sbb pop addb adc movsb pop movsb stc into dec or add jmp add mov add push sub pop push fldt pop ds sbb inc pusha xor aam jl xchg push and testl insl popa test lods in add adc inc push push into inc fidiv ja lods pop (bad) push ja jmp or inc int3 xlat jge mov icebp pop jmp push cmp pop (bad) lds sbb imul push adc and popa cli pushf xchg jp add mov ljmp cmp movsl roll inc push lea and adc mov in mov push push adc leave dec mov push push mov sbb inc pop arpl int push pushf pop add add jae and sub add add rorl jno je out add adc ja xor sub ret mov sub pop mov jb jnp or pop lds das sub sbb ret jp dec dec inc and xchg test adc pop add mov jbe int dec or and xor mov fistp lods ret test push cmp mov arpl adcl or lret jne ffree dec ret fistpl inc jle hlt and clc pop je adc xor clc les orb or shll or dec adc pop repz jge mov mov push or scas and xor loope mov nop xor call mov pop xchg jbe push sub or out push aas push pop sub inc cmc xor xchg sbb push and repnz or pusha or jns inc pop or jl push add mov rclb (bad) fidiv das mov (bad) push dec add addb push dec add leave adc adc sub sbb xchg pop lcall xchg push dec imul adc clc imul (bad) push loope or aam mov aas dec cmp sbbl xchg and cmp in inc test inc pop push xchg sbb add push dec pop push bnd jne movsl push push push dec pop test add roll insl push push add inc es cmp movsl aad mov mov aad or or (bad) add js insb dec sbb mov xchg cmp jge mov add test out in aaa push outsb or (bad) xor mov xlat xchg icebp in jle push sub cwtl xchg nop xlat push add inc (bad) pop and and push popa push in repz pushf mov pop jo inc addl pop push cmp xlat movsl mov push rcrb pop bound xchg dec fidivrl sbb sbb adc addb and add es mov insl or ljmp orl sbb add jo push mov imul fisubrl bound mov push sarl and mov pushf add je mov pop push popa xor add dec add mov pop aaa push rolb push cwtl jnp and inc cmp adcl mov (bad) and mov push lock mov pop loop add dec rolb cltd mov pushf mov es xchg add mov hlt push fisttpll fistpll jg mov add dec mov mov movl adc add lock ret inc add lea nop cmp rorb mov dec cmp test cld lds pop inc or inc sbb adc xor adc scas mov add or sbb jl cmp sub inc inc addr16 mov pop add and add pop add cmp sub mov mulb xor lods divb push fs test fdivrs notb sub lods add (bad) inc (bad) push sbb adc push stc xchg out pop xor jae xchg mov mov hlt clc je dec mov sub fidivl and cwtl add mov pop adc or stos mov in sub and jns movq and testb adc leave inc inc inc xorb ret fldcw rolb or js test and inc add xor sub clc cld enter cmp jbe mov ds cmp popa mov pop movsb add test xor out jle xchg movb pop sti shll jae lret inc daa adc adc adc ja ret ret insl inc push jae adcl or lods sbb push cmp cwtl js xor sub popf push mov xchg sub cmc and push imul es pop cmp das add add in lea movsb push add push push inc mov rol inc stc push xchg cmc mov pushf out and pop sbb sub push mov push jb sub jecxz lcall mov xor ficom push loop inc or add sub jns fstp jge and mov push sub insb push jmp pop pop jp add test pop inc and pop dec mov js adc jmp movsb rcrb outsl adc pusha mov call ss loopne and mov scas stos fs bound (bad) dec adcl imul add pop mov pushf pop bound cwtl ret pop iret pop mov jmp lahf in inc add cltd int push in dec dec jb loope jg cmpsl jmp add std ja mov out pop shufps incb mov add sbb mov mov mov aas or fucomi adc andb mov sbb jp sub or ret cmp push lods xor push cmc add cmp pop inc push cld movsb lea xchg mov int cmp jl or or mov int adc ss adc shrl fild cltd jp js mov push cvtps2pi je pushf lcall push add mov pop jle or cld xchg add into inc subl icebp xor loope jmp pusha ret jmp rolb push push pop cmp sarb cmp fs aaa and aam aam popf loopne inc mov xlat jmp les pop sbb sbb adc mov scas dec jl lcall pop ret rorl loop add inc daa or loopne lock add mov into or add je stc xor not test mov push test mov out push push call stos insl pop push sbb sbb insl jo dec jle cmp pop adc dec stos mov dec jb sbb add stos inc (bad) xorl jne xchg adc aas pop fwait pop fwait nop shr jp sbb iret or push mov rclb test jae add xchg mov test inc and loop (bad) into clc (bad) (bad) icebp mov icebp loope and or shr test xchg sub rorl adc mov add jecxz push ds std inc daa mov pop xchg inc shll mov enter mov dec lock jns shrl ret fimul sbb out lock in mov or shr call adc xor fdivrl mov pop jecxz popf pop mov into in cwtl dec mov inc loope (bad) in xlat bnd mov test adc (bad) pushf cmpsl rol mov testb pusha cmp pop test test hlt js nop xchg sub shr mov aad in sahf sbb ljmp push sbb xchg mov sub dec int int3 (bad) repz movsl or mov inc dec jne xor (bad) ret mov sbb add pusha aas popf into fadds mov adc push pop adc out loop test add loopne xchg push xchg ja mov or mov mov push les add mov add mov jne pop xchg push ret mov ja adc fadds jbe (bad) ja push repz (bad) pop push cwtl cmp rolb enter sub (bad) out les mov mov or mov lea xchg mov movsl sub push sbb dec inc lret push xchg adc movsb clc movsb mov xor js rorb inc jl stos mov push out or add mov xchg mov pop sti push pop ljmp and test or cmc insb mov xlat sbb lods addb dec sub jle ret lret in out pusha inc mov dec inc jg sub inc jne sbb xor cld inc inc std jb sub or inc or xor sub jge push dec cmp stc pop mov pop inc outsl call jmp in add cld xorb xor pushl or div (bad) faddp loop cmpsb and out roll add incl (bad) fsubrp xor daa dec mov shrl sub rcrl cmp test jne pop and ret mov outsb inc mov lret test lret cli movsb push idivb movsb mov leave mov (bad) getsec into inc nop (bad) das stos fcom jecxz sarl (bad) mov inc xlat xlat sarb outsb add pusha dec push add in imul movsb sub sub pmulhw (bad) daa mov sbb arpl add addb push ss mov fld jo aaa pop mov adc add cmp (bad) cmp push cmpsb adc out js adc and lea mov pop outsb mov out xchg cmp arpl addr16 loop lods and inc jae inc xor add test fimul push cltd mov sti mov and (bad) (bad) loopne fdivs sbb cmp xlat ret addr16 jne xor cmp inc push sbb xor bound jp sub jmp ret or rclb ret xchg cmpsb dec pop pop adc xor nop incl pop mov mov pop add loopne xor inc mov and jg or jno sbb adc xchg sub sub addr16 data16 enter xlat cmpsl xor pop pop loope mov jle clc fcmovnbe dec mov pop xchg or movsl mov (bad) and icebp and inc sbb mov sahf push ljmp orb xchg loopne inc push roll in ds shlb mov clc aam in jns (bad) stc or sbb rol xchg arpl pusha mov dec es sarl clc mov enter push mov repnz mov adc sbb lock aas jb push pusha add or push in mov fldcw call inc cmp jb sbb rclb mov inc adc movb js cld mov mov mov mov ljmp jne pop lcall jbe mov ret data16 add jecxz call rorb loop xor push rclb mov ds call mov add data16 jae jl movl scas (bad) xchg loope lret adc call lret xchg cmp and adc add push fadds and and cli repz rcll clc jb sbb loopne mov inc or push das mov mov lea loope adc push mov add rorb js inc adc nop cli sbb ss cmpsb dec aam push xchg dec xor xor mov clc loopne inc jo adc xchg lret jae xchg sub or push imul loop push sbb (bad) (bad) jb lret xlat sbb test and sbb ret mov pop push mov (bad) or xchg fsts and cmp pop enter mov gs cmp sbb jno (bad) mov outsl arpl out inc popf sub add push test mov adc inc mov sahf aad inc pop (bad) push fildl sbb faddl sub mov adc repnz xor daa loope pop pusha scas pop mov mov sar and je xchg push push adc jne (bad) sub push and pop mov inc adc xor (bad) jmp rorb jge push xor mov fcom cmp or or lock inc (bad) jbe mov pop mov mov popa xor add cs inc mov push shrl pop cwtl dec movsb sbb out jmp xchg jo lret push into add sub and dec test or mov sbb cmpsb sahf or aam add sbb xchg add jns jecxz adc push xor test jl push mov mov mov inc ss sub sti pop jae mov xchg mov push lahf dec orl and roll cmp add sbb jg enter cmp nop cmpsb repnz pop orl les or addr16 (bad) push adc ret in mov cmp lock pop pop cmp pop jb shrb pop cmp or inc cmp push mov mov or push xchg xchg ret (bad) daa jne mov rol lcall pop sub roll mov mov sbbl (bad) xor xor lods mov push cwtl clc ljmp mov lea and and lock or ret stc cld sbb dec sbb lods sbb jge addw outsb jmp inc dec sub fcomps and aaa hlt outsl xchg pop add test out or add or jb push pop imul mov mov and sbb fwait nop or test sbb pop orl je dec adc es rol loopne mov adc and sub ret dec cld adc nop mov push push lods clc imul cltd jmp rclb jae or ret scas lods inc adc jno push jo ja (bad) push add lcall xchg jl shr or enter pop and setge lea xor mov jl cmp ja adc orl add popf pushf outsl xor outsb sbb mov andl and push dec sub push sub dec dec pop push inc (bad) bound push addl inc xor inc jo fild rcrb cmp pop je outsb mov jb ja rcll cmp pop je mov xor js dec or push rcl inc mov cmp cmc fs jp sbb daa xchg orb jl push js lock fisttp fmuls and pop cmp cmpsl push mov mov mov inc popa mov imul imul (bad) lret sti or and punpckhdq sar dec leave inc in mov push sbbl pop testb movsb or jb (bad) movlps adc sarb loope addb xor lea or ljmp sarb jl push loopne xor push lret andb push les and call out push ja sarl cmp jo mov xchg jmp sub jne mov lods inc inc int3 and cmpsb jo dec push jns sahf push inc mov push mov hlt add orb mov ds pop je lea mov or test push jl and test push jp mov test cmp add cmp ret inc es pop int ja sahf adc into repz scas lret jg fisttp adc cmp pop movb mov (bad) jne (bad) adc or jne cwtl std imul int mov aas adc add rcll adc add push outsl inc sbb push jg jno cmpsb nop adc popa in lret sub aas sub fucom ret movups inc je dec mov mov or sbb or mov in mov mov fs jl mov jg lds add (bad) (bad) pop mov fist push push add pop roll test mov cmp or pcmpeqb or fstpt aaa pop das sub jns lds or scas add bound sbb fs outsb xor sbb and fisttpll push test cmp pop mov xchg push insb xchg mov pusha mov add jmp mov jae (bad) jle mov or inc out dec dec mov fldcw adc add xchg gs lds xchg add sbb sbb jecxz,pn ljmp mov popf mov xchg rcrl cmp inc sbb ret mull cmp into cld mov mov int3 sub cmp std push push jmp ret or test in loop xchg adc push dec jo int (bad) aad xchg push sahf fbld adc adc test aas dec loope mov cmp orb mov roll aas (bad) mov add sahf or in addr16 inc cmp es jo mov dec sub aas mov les je xor sub data16 ljmp or mov mov push fidivr mov dec mov mov or jbe and fwait fwait aam cmpsb xchg inc push or jmp mov inc scas cmp add push xor pop fdivrl add xchg movsl roll inc sub adc pop movsl bound movsb fs add mov aaa loopne push inc xlat inc imul add shrl inc fs loopne or scas insl (bad) nop fisub mov cmp mov mov fcoml sbb jae cmp pop cmp sbb dec (bad) and out mov ss mov sahf dec (bad) (bad) mov das pushf or (bad) int3 and push jmp jmp cltd std mov or or or mov jnp fdivrs popa das and insb decl ljmp jae jnp sbb jp inc or mov lahf mov pushf mov ret lret (bad) xor sub mov add ja cld or rorl mov pop repz mov cmp push inc xchg call fisttpll flds mov outsb adc das or and in jg popf mov mov cmp adc mov inc rorl xor call pop cwtl je fs mov mov clc jecxz pop cmpl popa orl add inc pop push sbb loopne (bad) xor js cmp inc mov orl push adcl xchg sti sbb rol and push xlat cmp mov rclb fcom push mov and rol in sahf xlat outsb cmpsl insb xchg or pop call jae mov sub sub push or cmp sbbl sbb push inc decb rorl (bad) pushf mov cld insl mov ss mov inc ret xchg lods ljmp loop,pn movsl icebp sbbb cwtl xor pop imul mov push test pop xor add adc jmp insl pop push (bad) push and ds scas scas mov xlat sub mov cmpsb lret dec inc mov std adc xchg or fwait clc xchg and into je rcrb inc dec push roll lret xchg sub dec std push scas mov jmp pop in add faddl adc xchg call cli xadd shr je sub adc inc push test fsubrl sbb inc sarb int push mov mov dec push ja dec popa push and loope (bad) jne dec popf js mov enter jbe aaa insb or popf mov cmpsb int3 dec mov jno pop ss insb ja das mov pop pop inc in xchg xchg or add xchg push push mov and jmp and insb fdivr arpl pop cmovs dec sbb jle or loopne (bad) push sti daa mov and dec and std jne dec mov jl test outsb dec sub bound (bad) (bad) ss dec cmpsl mov out std sub and jle and or sbb pop pop or lock sub add outsb movsb cmc cmpsb leave in cmpb mov fs add rorb add dec and mov push push cmp mov and iret mov sbb add cmp push bound cmp mov xlat scas sbb adc xor cmc ret call sub rolb or or nop mov inc or stos lock test sub je nop jp or jae pop jp or les and pushf out es sub jbe cwtl loope lods dec xchg mov jp xchg cmp pop xchg imul pop iret test or add sub in dec sbb jno push insb sbb mov aas sub cmp stos mov pop inc sbb (bad) (bad) stos gs sub inc cmp mov jl (bad) mov xchg lahf cmp stos sub pop sub mov fldl jl ja pushf sub jecxz adc mov (bad) mov or or push int3 dec movsb (bad) jne dec je sub cmp dec push jo mov or std or jmp pop rclb and sub rcr adc lret jmp frstor adc sub mov mov inc jl pop jmp jecxz mov mov xchg movb push sbb test inc mov dec pop aaa push (bad) (bad) xor daa xchg je or xor test add int3 mov pusha cmpb add (bad) and push insb mov lret xchg lock cmp rol (bad) dec add (bad) fimull pop or cmp cmp jne testl pop scas xor add mov (bad) sbb std into sub jl js adc je cmp faddl jl and ds add add data16 dec jae sbb xor test sbb add sub add fistp and mov dec add add cmp lar lret sti xchg scas gs mov inc mov mov pop xchg add mov sbb enter rorl sbb sbb cmc imulb push inc push jb icebp xchg mov xchg push cltd rorl adc and sahf jge push dec enter inc xor ss cmpb sub mov pop mov cwtl mov push mov (bad) and int daa ljmp movsb inc add adc pop inc lock pxor loop mov mov xorb or je into lods and lock inc push hlt insb ds mov pop pop mov arpl test inc add pusha js push ja and jl add sub pop negb xchg cmp xor push push sub mov xor adc mov push jo push or add aam popa push xchg xor sub cmpsb sbb xor mov orb pop xor push adc rorb je add pop (bad) imul iret int orl xor xchg inc inc push pop and push sarb jbe imul test lock add loop fildl (bad) xor and repz sbb imul (bad) cld or adc cmp (bad) int3 pop adc dec or mov pushf popf add adc sbbl hlt negl nop sbb push js lcall pusha adc add fmull or ret lods mov jmp lret lods adc repz mov dec mov inc movb je mov pop es mov adc pop mov or dec inc or jecxz sbb push js pop daa fistpll inc jl sbbl pop test shlb dec shrb popa insb cmpsb aam cmp lods inc dec sub loopne xor out add xchg jo lea enter mov xchg aas mov mov shr and add sbb rolb dec inc fldl2t cwtl xlat scas jle enter out add loopne jbe mov xchg push jp incl dec dec jne jmp aaa dec out fimul or imul mov pop mov js add in adc pop inc pop add jae andl or xor call and inc mov push pop sub xor scas (bad) loop sub mov je jecxz popa bound insb adc ficoml jbe ljmp xor push sbb jnp popa cmp dec push dec mov mov lcall push out lods or or std xor mov mov les fs cmp jge orl xchg fdivr dec adc incb dec add inc fcomp add les dec cmp xchg in leave mov ljmp push mov sub pop mov imull ja mov cli gs xchg sub rcl (bad) insb or and (bad) mov lret or push adc cli and in inc repz (bad) (bad) (bad) aas cld jae mov dec push shr dec lds js fistl inc jb,pn jmp push loopne sub fwait adc jecxz dec inc lock mov push sbb negb stc hlt or (bad) jb imul fadd or push push xchg add and add mov cmpb out cld out push push or add push cmp mov jae push mov call inc sub cmp fcmovnu fdivl ret inc mov inc push jb pop mov mov mov push or insl js fisubr inc push xchg push sub aam pusha lock cld cs inc pop shlb hlt adc movb test mov cmpsb mov dec shlb inc pop mov pop mov and aaa (bad) and or xchg enter push jb xor (bad) (bad) xchg (bad) dec dec dec mov dec mov or dec mov jne xchg or add pop mov dec xchg adc or cltd les and jne sbb mov inc adc pop add out dec insl mov jbe cmc (bad) fisttpl (bad) and xor sub sar or add lret dec mov or fdivrs lret fiaddl and rcl adc aam push sbb mov outsl lret jne xchg mov and lock jns ja popf imul xor and xchg or ss xor pusha mov mov jbe lea es add ficom je dec xor popa stos adc dec mov (bad) inc dec rcrb jne add mov decl adc push lret in inc nop (bad) push inc decl dec push dec dec jnp imul dec lea je sbb imul mov push or dec mov out xchg mov pop inc sub and je jbe mov out bound dec arpl mov jne outsb gs movsl pusha roll incb movsb icebp test add outsl jo or and push jbe sub cmp call and es nop or out je in insl aaa lods adc push sbb sub cmpl outsl iret add add inc or sahf xchg mov add lahf mov aaa cli xchg sbbb aas mov popa dec stos mov xor hlt cmc xchg cli jno inc jne (bad) pop push mov sbb jno shl sbb push lret or jne (bad) iret and rcrl movsl js mov pop lcall dec jg jmp insl in vzeroall in jbe or xchg dec jmp jmp in mov ss or lea or sbb enter imul pop loope fs scas adc mov add fildll or fidivl xor movsl sbb loop push pop les add cmp ret fimull bound mov imulb (bad) inc or fisttpll nop loopne cmp movsl pushf movsb and lods xchg xlat sbb lds cmp or subl in or dec loop inc scas push pop cmp sarl ret and into stos cmpsb (bad) xchg mov xor push clc packsswb outsb lods fisttpll add aad into les pop jb and adc push xor pop dec mov and add jnp sbb sub lea jo xchg test inc fnop insl dec add daa js inc xor jl aam fnstenv (bad) lock je lret inc mov (bad) pop dec adc sub fsubr push cmp pop (bad) jne mov aam sbb lret jne mov xchg sub and xor mov sub pop sbb pop mov push push rcrb jmp sbb shlb movsb push dec sub add mov insb push bound int3 (bad) jnp sub pusha dec fdivl add and cmp hlt sarb push sbb lock pop xchg lods test insl sbb ret rcrb push (bad) cmp xor or pop inc sub mov dec add inc cmpsl (bad) mov xor pop in shr sahf ret bnd dec sbb xor or mov push shlb xchg outsl and fwait icebp test add push repz ljmp add sub sbb sub sub and hlt test jae shr popf add bound mov inc add test inc pop (bad) cmove inc mov pusha call aad xchg outsb adc out jnp adc inc inc inc pop inc divl inc daa inc inc test jo add (bad) xchg je cpuid xor lret and or dec add das mov jne xor and inc lods ret jo rcrb or jo js ds mov dec loop ret cltd push sar loope ret enter fdivs sbb imul mov sub es push cmp inc ret call das sub loopne pop or and mov imul pop mov inc pop lea dec lcall lret ret xor jae sbb jmp xor jle push nop std ljmp inc add clc sti xchg cmc inc mov lahf pop or xor scas outsb mov mov (bad) add dec mov mov nop insb lock (bad) cmp inc fcmovnu (bad) mov push std rdmsr popf psubsb dec cmc xor test insl pop lahf mov lods sub pop and shr add mov es sbb sbb incb lock enter enter xchg (bad) mov push loopne loop pop and inc jmp dec dec jne fstps sbb sarl add jne call xchg ret sbb loopne lds lret fmuls push aaa std (bad) repz sub imul add pop dec pop or mov shlb call add or push mov repnz xor jb xchg (bad) adc mov in inc dec push rorl xchg xchg add gs push nop or cs inc punpckhdq xchg jbe and add add mov adc and push dec push sbb add pop int sbb push sbb js push popa shll into mov (bad) cmp ficoml ss insb xchg xchg cld (bad) xor pop pop out imul fs outsl dec movsl dec cmp fdiv ss jno cmp pop sub inc add fmull add xor add push clc sub pop outsb inc cs lods dec outsl xor and js or scas xlat inc adc lret add pop push add pusha shrb lea or inc js pop or inc out popa int3 or (bad) bound (bad) sbb jmp or mov sbb mov cmp sbb lret out ss (bad) je inc mov jne sub (bad) dec or repnz xchg push xchg sub std xchg push xchg push jno orl dec mov rclb add or lock insl inc or ljmp insb leave sub lret idiv push pop add add cmp fnsave push mov add cmovge mov imul (bad) loope xchg dec jle ljmp sbb sub int3 ret fstpl sahf sbbl add cmp imul lret xchg mov dec mov mov xor and or xor movl jne mov push pop add xchg inc sbb add sub push insl xchg pop xchg out insb and mov add addr16 add and and mov push push dec int test cmp push jmp inc add push pop sbb jne mov (bad) adc pusha pop fs jp jo adc pop pop fisub in add scas mov adc push rorb test sahf pop or dec lock (bad) popf mov xchg movl (bad) push cmp fwait into pop rorb or pop orb ss add loopne xor sbb rcrb popf mov rorl call and cmc (bad) or inc aad sti push add bound inc sbb loope pop lock cmpsb inc push adc pcmpgtd cmp mov pop lret adc dec incl jns call decl jmp or mov adc pop lret or jmp inc loopne (bad) addr16 dec mov les lea push fild or outsb mov or fsubs (bad) mov stos sbb add inc repz call jmp or inc in dec xchg cmp lahf inc or dec sbb sbb adc int outsl loop mov jp cmp mov push cs lcall cmp (bad) loop add push pop (bad) movb mov jg pusha andl push jb push dec jne jae push xor adc push adc jne ret push mov test pop xor and or add mov mov pushf pusha or popa dec jecxz mov je mov fisttp lock pushf test cmp or loopne mov xor pop xchg mov sub mov nop je lret push mov loopne adc push xchg lods outsb movsb incb jmp add mov push loope pop or cmp fldcw pop scas push shlb push out lea dec loope pop scas (bad) adc call stos cmp push mov in cmp cmp add cmp fadds add daa cmp outsl pop xchg add and add mov cmp lret repz add and fidivrl add pushf ljmp adc add bound enter bound add inc imul jl jb add pop (bad) jecxz arpl xor and xchg dec cmpsb insl (bad) and jmp add mov dec jne stc pop insl je adc adc jmp fistl cltd mov sbb stos jb adc jne jbe push and lods rolb add jmp aad iret add test or push push fstp lds add jmp and add cs push lahf out nop add fist hlt mov lret shll and lcall mov dec out in cltd sbb sub imul jns pusha push cmp mov or lea (bad) dec push test insb inc mov and es push sahf xchg add in fcmovbe add in inc jp push enter add dec xchg mov loope sub outsl int mov pop iret or ret xor pusha leave jg mov stc pop cltd jmp jnp aad dec mov adc add sbb push add or push (bad) cmpsl inc mov xchg dec pushaw dec add push cli pop in add inc pop jmp fnstcw out jnp fucom mul jmp sbb jle outsb call add inc sub pop popf add test aam dec pusha mov aam or jl cmp push adc mov xor std or or and gs stc out push mov mov add inc call dec pop jne jne js pop cmpsl sub dec xor test sbb sbb jmp mov ja or aaa std dec jno orl std cld push cltd test sahf sub test dec jne or xchg and cmp push mov jne and add add mov sti dec cli int cmpsb (bad) push mov fadds orb out pop lock mov mov fldenv movsl sbb adc fs ret xor test pop insb jecxz (bad) or ljmp xchg gs xchg std dec xchg jecxz std add fldl xchg mov inc rorb addr16 and inc push or call add rcr clc sub ret or xor add and rorl jge mov add cs arpl adcl add xor loopne or push sub jne fs rcrb test lea shr inc and pop lock dec or les mov push push push test enter dec jne push jge mov jbe js jbe stc repnz mov loop imul enter mov outsb mov fwait mov dec pop xor add sub pushf mov mov cmp cmp dec or cmp mov add stos ret inc and scas ss add lock cmp xor add jo test pop mov mov mov jl mov (bad) mov addr16 icebp out push mov jbe push sbb (bad) xor dec (bad) loopne or push bound (bad) mov enter jb push and mov nop lock add iret ret sbb mov (bad) js ret daa lahf shll fistpl push lock add shl pop js mov rol loope sbb add aas inc jo scas xchg jo mov sub mov mov mov mov add inc mov inc add ret shrl js xor fadd or imul push or enter mov inc dec cli xchg int sbb mov add adc jne les ljmp and adc lret push add xadd pushf dec cmp jge outsl cmp push add and push (bad) dec dec dec and and add cmp xlat xor add push or cwtl fwait pop (bad) xor pop inc iret int fstl enter sarb cmp pop cmp dec add or je shrl ljmp inc incl ds mov push popf and add jne dec mov sbb mov jge dec cmp mov add xor sub adc xchg dec int3 push pop add pop mov mov sub rclb loope lret pop jae js fildl mov and (bad) pop xchg out or add xchg inc add psubusw mov call fcmove shr add or cld push pop cmp inc push stc enter sub repnz sbb lock jo mov ja mov in lret sbb stos cli mov rolb rol add shl shrl xchg inc add rorb push push jne ljmp je mov scas or push scas cltd or or sbb repz (bad) cmc mov dec dec mov ljmp lock loope lock sub lahf loope sbb sbb sahf fcmovnbe add adc cmpsl jge negb cmp jne or jmp adc jae add dec dec inc dec lret dec stc mov sar dec adcb je cmpsl aad loope enter jmp mov hlt jecxz pop sbb adc les add cmp jne ret add out and cmp jle cmp out es mov mov xor shl and mov fstpt mov push push pop adc cmp and sbb sbb addl (bad) xor jo,pt pop sti jne adc cmpsl jb lret jne dec std jne inc adc test adc jg add push or dec xchg jg bound das jo dec or sbbl and outsb test sahf inc sub shrb jg mov js jle jne or add add and mov mov push decl push or add (bad) and loop adcb loopne fs add bound adc ret mov mov or lods jne jecxz and loopne mov gs test xor jbe in inc jnp inc add out mov add scas (bad) mov push loop or xchg lods aad inc dec mov jb leave stc ret fwait mov sbb mov out or mov dec aam popa adc sbb test enter sub bswap pop xor xchg and push test sbb je addb mov push dec fist jbe test in and adc out out insl push jg pop add dec jl mov cmpsb xchg imul fadds cmp or aas sbb adc mov hlt mov push add mov ljmp cmp mov adc dec test lret andl js ss lcall jmp mov dec add movb negl jb and cli or clc (bad) or and aaa dec mov leave cmpb loope or mov xchg mov inc mov mov jl arpl sbb mov pop and cli sar hlt pop lods push nop fisttpl leave mov (bad) jbe and shrb cmpsl mov sbb jns je clc mov inc dec inc shr orl repz jno dec scas inc movsl lds enter pop push imul jb int3 xchg cmp cld fcmovu mov aas cmpb insb ret fisttpl xchg mov loopne cmp aam fwait mov jne pop cwtl ljmp leave (bad) aaa inc fsts sbb jns in or push add push adc dec mov addr16 adc xor lcall dec mov fcomp lcall or test dec sub sub jmp or sub jmp pop add jb movb jmp jb lcall add sarb cltd jns pop stos inc inc jo ret xor and outsb inc jo add aaa cwtl fmul adc push or or mov in mov sbb add clc sbb sbb dec inc pop das push xchg cmpsl pop or das or addr16 xor adc adc add add adc lret rorl or ret or inc mov and pop (bad) bound push rcr adc jl lret les add xchg mov inc push add cmc sbb xchg mov movsb imul and pushf outsb daa pop xchg pop ret xchg or nop add shll xchg inc movsl stos add dec xor (bad) xor int inc push adc sbb mov flds sbb push add dec or dec adc xchg mov outsb (bad) pop sbb dec adc shr insb or add mov leave ds cmp mov ret dec repz jge push popa movsl fwait call push ret jle mov sbb adc pusha cmp xor push xor (bad) xor and sbb bound paddusw outsb (bad) mov push cmp inc pop sarb pop dec and mov add pop add add or aas mov aaa dec dec leave ret xor sub xchg xchg stos lcall cmp rolb adc push adc rolb or mov dec sub push fild pop mov nop imul lock jns adc sub lods adc gs lcall mov imul xor push xchg or sarb idivb xchg cli fisubl lcall aam xor (bad) cmp cmp push sub ret ljmp test sub lahf pop dec pusha enter (bad) movsb cmp rcrl push jno mov sbb mov ss lock (bad) pop and add mov jmp adc cmp cmp dec or push aaa outsl in xchg xor inc mov add roll push inc mov shrb les lret lds pop int3 xor mov lds xchg mov das daa mov mov push jb iret dec or addb jp lahf test inc and or and or dec cmc clc jo jle cmp sbb and adc add icebp dec inc sarb test jle push xor push lds gs imul cmpl daa or leave out rcr xchg rolb pop outsb bound jnp mov aam enter mov outsl and dec lods add imul cmp jb jnp add mov mov mov xchg fsub loopne dec dec push in dec and sbb clc or xorb or lock or mov pop add xor les sbb add mov cmp scas pop sbb scas stc inc push push mov test sub jo rcrb xor and mov nop dec mulb jl clc imul sub mov es sbb or dec push jg lods pop xor fcmovne inc jp and mov add or sbb imul cld push (bad) (bad) lock loopne cmpb adc lcall xchg mov call or dec push ja rol call daa mov mov adc aad test add push lock xchg nop lock push mov xchg imul lret popf push (bad) and test sbb test lahf pop fidivrl sbb jge out and ror subb mov les or frstor sti add sbb jo sbb js xchg lock sbb iret or xchg push add inc mov in gs mov loopne sbb icebp testl push xchg or cs ss ret leave (bad) call cmp adc pop adc popa push cmp and ret mov or lea jne mov mov pop mov and rol dec add in jo fimul (bad) jae shrb out es sti mov xor inc les popa cmp inc xchg adc gs cmp idivl pusha insb (bad) call (bad) mov cmp sbb push push pop mov popa dec aas adc test jne or and jl (bad) cmp and cmpl mov fiadd lret and addl rcrl je xor lea push push cld adcl add jp mov mov adcl push adc jge ljmp adc addl subl adc test push jnp sub add xchg push lea sub mov or sbb insl mov dec pop push cmp es dec jl mov orb add dec cvttps2pi pop sbb mov add dec sub dec push inc lds (bad) jbe adc xor movb (bad) aaa adc cmp jle lea or mov mov xor adc sub jge bound add lret dec sbb add ss lds inc sbb inc jne sbb xchg dec inc dec insl mov add jne push jmp cmp jp mov lret push jecxz bound jle rcrl pusha jnp or push adc jnp incl push dec add and test cmp push adc nop or mov cmp pop sbb pop insb dec and popa in mov (bad) pop inc lock or xor dec mov push add pop ja mov pop ja or cmp push orb jne call insb sbb add jmp push test imul cmp mov push xor repz cmp mov cli ret add pushf and aad mov jg dec mov int xchg mov aam mov mov jge and sub add cmp jg insb sub lret adcb outsb lret jl add daa push cmp xchg xchg xchg mov lar int3 cmpsl xor leave test push adc push pop cmp jnp rclb push inc and mov cmp jne sbb adc pop (bad) hlt js push push or xchg inc add mov xchg loope adc adc jbe push push lret xchg lahf das mov lahf push xchg inc test jne sahf popf add or cli dec (bad) jge stos xchg mov push add lods push nop xchg jne xor push dec or push xchg mov jo orl inc in add pop shl mov negb xor and inc rolb and ret mov je subl je jmp mov aad xchg mov leave inc lock and pop in (bad) jns push sbb cmp pop fnclex dec mov xchg dec movsl ds in adc lock jns lods add aas dec push pusha pop lods or jne lret add in pop popf mov pop add test push fs inc stos add push mov or pop add inc or sbb or mov insb fsubr dec mov push sub aaa xlat or jl jbe mov sbb adc sub fs sub mov (bad) (bad) lock (bad) adc mov adc out cmpsb xchg add push jne inc xor clc mov mov popa pop or pop je inc clc dec push dec pushf fs neg and subb push or imul or ret cwtl popa rcll cmp xor inc cli jg mov push outsl hlt dec adc jge mov dec imul cmp ret dec and mov dec (bad) xchg dec scas ret dec cmp (bad) mov push xchg in add lock mov adc or mov xor push jmp mov push cmpsl test xchg pop mov dec add call dec sbb (bad) jae jbe lods mov cmp lret cmp inc jb jecxz sbb push add rol loopne add inc pop fdivr xor push jne and or or pop lret dec jbe insl and (bad) ret xor adc inc gs mov lea hlt xorl push jbe or pop pusha cmp push lock rcll (bad) xor sarl es sbb and add add add jo dec inc add ds (bad) call pop dec cmpsb nop xlat incl mov mov or cmpb push cmp and mov pop add test mov and leave test dec mov or fs inc cmp mov add and or leave adc inc gs outsl in xor cmp ficom xor les mov bound mov or dec cmp (bad) xchg dec inc imul mov daa or or sbb push xor xchg mov mov mov add and push sub popa in mov sbb sahf cmp add (bad) jae mov lea test adc sbb cmpsb add subl notb xchg lods fmuls jge cmp push and mov shrl (bad) mov add push xor cmp xor mov mov jecxz fiaddl pop mov xchg jle add sub loope test jl outsb push sub adc fsubl sbb sahf mov xor xor leave lods popa cld add pop dec ficomp dec fildll add lods push js (bad) adc inc jl or add insb or jns mov imul mov inc fadds aam add pop or dec int rorl and jo sub dec sarb inc hlt jle fild add mov mov mov rol or test in or mov outsb xor pop lea push lea add or mov inc in pop pop cmp add mov sbb push inc js lret inc add xor (bad) sti jo push mov shrl xchg (bad) rep mov sbb add push push sub lret rcrb icebp popa inc sub nop aaa sbb mov sbb dec dec jne dec imul fcomps (bad) dec xor movsb jo imul rcll test pop pop scas inc sbb push ds inc rcr iret mov mov jecxz sub sbb fldenv xor xor in lods neg cmp mov sbb add fcomps jle cmpl push mov dec and xlat jbe dec xchg add stos lods stos test ficoml js cld mov mov or or ror add fs (bad) int3 int3 push (bad) mov daa sbb inc cltd js and cmpsb jnp inc inc lods out (bad) out (bad) mov or shrb in mov sbb in aam int cmp popf ret dec lock xor lret xor ret add cmpsb inc push test das and fidiv push pop inc or sbb lea into xchg dec push or ret xchg or add dec rorl cmp cmp pop jl loopne mov push dec pop lret add ret out inc adc pusha or loopnew push and mov dec pop repnz mov xchg stc popf xor inc jge lcall rorb jl xlat and lea or dec shlb loopne xor cmp ret es scas add loopne add pop dec pop les dec and mov add std dec je add and orl dec xor dec mov test add (bad) shrb xchg mov adc add lahf adc push jg and sub ret dec pop call adc mov pop ljmp jb sbb cmp std mov xor jnp popa jnp adc mov cmpl dec outsl pop mov push jp (bad) mov hlt test ss inc pop stos loope jl mov dec cmpsb or pusha push xorl sti jnp pop inc add sub xchg aaa inc or cmp push insl adc mov xor add push add xor push push mov dec nop loope jecxz es leave (bad) adc add fsts sub sbb pop daa xchg inc adc imul daa inc sbb and push int3 inc stos bound pmuludq push and push ss add cmp jnp mov mov dec mov inc inc and add imul mov mov jmp test add pop add mov cmp sbb cmpsl push mov (bad) int3 dec adc (bad) dec mov adc dec sbb xchg mov mov jmp or mov ret xor add adc stos push xor popa loop (bad) sbb rcrb push mov gs enter xorl push (bad) movsl (bad) mov mov add pushf in aad push fiaddl mov add aam dec bound pop xor mov mov push adc imul inc push mov jle sbb js,pn adc pop adc jmp mov inc shrb les cmp dec ret enter xchg and inc sahf inc push jno rclb add mov std push xchg ret mov inc sarl pop lods jo (bad) std insb adc dec sub enter pop jl mov pop insb insl out jne push adc push outsl jne loope lahf inc pop bound sbb xor ret add outsb daa pushf (bad) aaa je and mov cmpl inc aaa or add sub xchg (bad) mov xchg push dec jle push sub adc cltd or adcl or push out mov dec pop and dec mov inc or mov aas inc inc lock xorb add mov push add loop jmp inc dec out decb jo test es inc mov jne jecxz jmp push lahf cmp js cmpsl ret push cmp jne shlb arpl into adc xor ds xchg jno stc std jmp cmp repz cld roll pop sbb mulb push push push jmp add jo add sti rcll out xchg addl mov or std cmp xor cld add int3 loopne mov (bad) fist nop loop mov xchg push or addb sbb mov push das xor insb push push in daa xchg outsb mov push mov add ss push mov shrb int push sarl jnp stc sub aam (bad) jns dec sti sbb push add pusha mov out mov sti xchg add jg cld add add or or (bad) les jnp fistp lret rolb int3 clc fadds je adc add mov jne cli dec lss mov shlb sbb jl cmp or cmpl sbb lret push jle push adc cmp cwtl aas jno adcl test dec push out jmp pop mov ds xchg rorb aaa jb xchg jno inc arpl xchg mov dec add int or push dec cmp dec cmp aam fiaddl in push sbb repz fisttpll fcmovne add inc dec push testb stos or pop cld pop nop lret add sub mov inc and (bad) lds mov scas add pusha sahf mov mov pop call cmp adc mov bound ret inc xlat gs test fsubrs and dec sub mov jp xchg xchg inc popf cmp pusha xchg jl dec jle add sbb (bad) dec enter dec add icebp dec push xchg mov inc or or add push rolb loop inc cs push ss sarl jl imul xchg mov add test clc je mov outsl mov into mov dec sub rcrl lret or enter inc cmp call cmp lret dec dec rolb push and lods dec movsb dec insl jl std xchg push ret xor xchg out xchg stc repnz sub jb mov and ss mov push and dec loop add hlt (bad) mov je inc inc lretw mov test orl les subb (bad) sbb dec sahf lret adc adc xchg pop shrl cltd add sbb jne or jns nop nop rorb nop inc adc imul (bad) mov xor cmpsl les sbb out and out inc inc dec cmpsb lods pop fdivs lea mov mov lods mov pop pop adc inc mov adc push aas push dec loop ja das mov les jns add inc repnz xor jecxz ret add inc xchg shl pusha push (bad) nop mov nop test mov popf lock xor jle (bad) inc (bad) in or mov sbb and add cmpsb jl xorps or nop loop pop daa mov sub mov ficomp les sbb mov movsb sbb and test xor lods or cmp daa add sub cmp jo xchg pop pop mov popa fucomip jns add xor inc cmp jb adc mov mov imul into cmp mov mov xchg inc jp xchg mov dec push add fwait add or add pop push scas jle fidivl inc clc sbb int or xor rorl add ljmp adc add or fimull xor sbb cmpsb test add jb insb or sahf ret xor fcoms sbb xor or push icebp pusha dec jecxz loope xchg cmp cmp fisttp sub test mov (bad) adc mov ja adc je add cli or or xor fmul mov loope inc push jne hlt add adc shr xor pop push fnclex or adc scas push xchg pop ret mov mov (bad) adc cmpb push dec sbb xchg imul push fisubrl add jne adc adc ficompl sarb mov inc cmp adc xchg jns xchg dec fld fistpl scas mov xchg addr16 push lods pop sbb xchg (bad) push dec mov inc sarl lahf inc cmp out jecxz or xchg data16 fsubrs add xchg js push add addb fsubp inc ret fmuls add adc sbb in or mov adc pop sbb push add jmp inc mov lods mov xchg pop dec cmp inc iret dec xchg daa mov rcrl notl je jl add or sti jmp xchg (bad) fs scas inc dec jne test hlt or loop je mov (bad) adcl mov loope pushf inc adc fist test in sub out inc xchg mov or inc jmp xor push cmp inc jb xchg pop ret jge imul push mov movl imul cmp pop or aad dec inc mull pop push ja or mov and movsl aad dec xor add push mov js arpl test js lea and adc je (bad) mov lods add mov pop adc mov push adc mov mov add mov stc mov xor dec pop ret lods arpl xor mov cmp push push icebp add imul mov add push andl add ja mov and inc add or xchg das or cmp inc cmp jb sbb ds aas and and inc nop mov scas sub inc pop (bad) inc and cmp add xor add ret popa pop push add into test push addr16 clc or out xchg jmp lods out loop inc iret fimul sbb insl mov xchg push or mov lods fist adc add sub mov mov hlt sub and mov js add jmp pusha adc outsb jbe (bad) out mov pop je jb loopne inc (bad) and lret fisttpl mov cmp js jae or mov mov clc mov push dec sbb subb outsl ljmp jecxz dec ret ds push sub dec and add push inc je cmp mov insl sbb cltd add mov ror sub push lods sbbl jne fs (bad) fsts add dec add ret sub xor mov sub insb or fdivs xchg test adc or pop jbe push cmp xchg (bad) xchg std add fcmovne inc fadds or lea dec lea ret push stos cmp pop mov je xchg je cmp adc test shll movsl arpl dec in nop cmpsb movb push push aas add cmc adc push addr16 lcall lods sub bound push daa add and sub das xor mov (bad) xchg mov clc add dec jne inc test and (bad) mov aas shl inc sbb sbb jo shrb loopne add and mov add add add cmp jnp push push adc repnz stos jg push pop lret popa gs and push and cld sub rorl dec dec sub nop test inc adcl sub test inc inc dec add inc pop adc inc repnz add xchg and cli addr16 dec pop inc sub and (bad) in insl push adc inc add pop dec lods sub pusha mov sbb sar outsl and add lcall xor (bad) jg jne jo or and fmuls divl inc pop lcall adc and jl jbe mov out addl lret outsl test and out in in or lods inc inc lock adc enter dec and xchg xchg out lcall push (bad) out outsb sub pusha (bad) jecxz push xor inc and and sub push push aam xor xchg jg push push ret cmpsb push sub insb ja cmp ja inc push xor cmp push pop add iret call jnp and push sub daa inc lret scas jbe push imul pop xor cmp jbe mov sbb jbe jns mov inc je push push add pop xchg jae cli add ss mov dec or add scas add nop jmp xor mov movsl pop or sub outsb test dec ret add xor jbe es xchg icebp and jmp jmp xchg pop stos adcl shrb lea inc popa nop jbe push shlb loopne or aas je fs add mov xchg adc ja push sbb mov cld xchg xchg add sub test adc jle dec and mov mov cmpb cmpsb pop push xor sub push lea test mov lret sbb in loop add mov cs (bad) mov lahf add push dec outsb fsubr dec in pop xor leave lds pushf std jae cmp mov push jb fldt lds push test movsb pop repnz enter fldt fcomps pop xor and mov mov mov push fsubs loop stos lds add int3 leave sbb xchg mov lcall xchg inc ret pop sub and inc pop imul dec xor insb jnp int push cmp sub jne inc sub inc (bad) cmp push push add inc push mov test clc adc mov outsl cmp dec dec scas sbb or push rorl aaa and jne outsl xor add cmp and aas mov mov jns daa and xchg ds push or jmp loope pop (bad) xor jg int3 adc mov push dec enter movsl dec push fs sbbl inc lret or scas jle scas push jno sub push dec xchg test sbb pop or in add or (bad) pop ror inc sub xor lea push push xchg xchg in sbb movsb jo jmp js int3 inc je scas inc jmp cltd movsb jb bound sbb or xor xor pop dec push add or push shrl fdivs jo das or fdivl arpl mov pop inc or loop sbb icebp mov inc pop cld or shl cmp jg push sahf xor call cmp cmc fnsave add pop jl mov sbb xchg push lcall lods or imul in and in mov pop add fsubs adc add pop dec pop (bad) mov add push add add js inc js push pop bswap movups sub ljmp cmpsl xchg push shrb and aaa sbb (bad) test xchg fs adc inc scas mov mov pop in dec decb add mov aaa mov cmpsb cmc pusha pop cmp cltd and and cmpl adc jne add or cmpl movsb push bound mov (bad) mov or jne xor jg cmp mov xorl into aam shr or cmp xor ljmp push pop addr16 dec sbb sbb in aaa mov push or dec sar mov mov fldenv push jnp fucompp hlt popa add push pop lock nop push mov cmpsb testb icebp je sub imul mov sub dec aaa jnp mov test push mov insb jmp dec sbb sti mov mov jne pop enter sub jne ret sbb lahf pushf mov ja mov sub cmp insb push adc mov mov add mov xchg mov jmp lahf sub adc loopne cmp jb mov jp ret and lahf lret bound lods pop lret out fisttpl jecxz dec sbb je mov pop ja and je orl and jmp int3 dec pop lcall add cmp mov jmp (bad) dec lcall sbb out fbstp cs bound add xchg push xor cli add push adc and lcall push daa sarl fstps dec inc bound jae sub sbb in sahf cmp sbb add or push and mov lahf mov pusha and subl pop mov add movsb adc mov imul ret cmp xchg inc (bad) into and mov mov popl mov setno lods ret mov loop pop lods pop iret lea mov or xor icebp popf push lcall and lret or and pop mov pop outsl fs (bad) jae sbb popa and inc fmul push js mov cmp cmp adc adc ljmp sub ljmp and mov or rcl mov mov addl xchg mov adc cmp dec sbb jp test push js pop popl push ds out repnz xchg (bad) or dec leave push add mov cltd adc pop mov adc enter dec pop sarb cmp inc xor and lock (bad) enter mov sub push popf or jne add rclb pop rolb mov test push or push dec sub push push imul and sub push (bad) data16 roll jae clc pusha ljmp inc pop or movsb ficoml dec leave push sahf push push enter push ret sub sub dec jmp add or mov cs pop mov lods std add add pop mov adc mov orl shrl jp xchg sarb and xchg cmc dec dec test call and (bad) jae (bad) iret fadds lahf fcompl jecxz out sub jg cmp push mov fistpll test add imul and add push (bad) sub lahf cmp sub fbld cmp dec pop add cmp mov js xor dec out inc dec mov aam into not mov out shr shrl jb lds sbb out sbb sub xchg jo sbb push mov aam xchg mov clc inc or mov mov lds (bad) out xor hlt pop sub cmp add inc sar rcrl mov and push xor in push mov xor (bad) mov jno mov (bad) inc dec hlt mov outsb (bad) jns fsubs sbb sahf cld xor lock (bad) repnz pop pusha into pushf adc je push fdiv popa js mov lret mov aam adc inc push xchg inc add or push dec clc adc sub shlb stc inc sbb xor sub lock mov sbb push mov or ret ret dec ss pop (bad) movsb ds cs jae xchg adc ds adc in cwtl mov je cli push jecxz or rorb add cmp pop cmp les dec add or loopne nop inc movsl (bad) mov je push add or gs cld mov jmp pop out push adc paddusb lea sarb push andl pop inc xchg push or ret test cmp lahf dec shr stos rorl adc rol jo xchg pop (bad) jo jge int3 pop mov or push mov pop jle or cmp into or xchg lock loopne jb pusha mov dec test (bad) bound imul jb sbb lea imul movl jae (bad) data16 (bad) mov stos faddl and add fsubs loop pop leave andb add call add jno stc movsb or cmp jnp adc inc insb sub and push dec mov shlb jp and dec push rcl call sti inc add fcoms xor lret jp out sbb fwait inc sti icebp testb cli inc adc or pushf dec repnz insb jmp add and push add or jmp insb or sub add rolb push or cmp iret add sbb je add xor repnz mov pop mov ret cli mov add inc jg les sub into mov popa mov cmp out loope inc xchg (bad) cld out jge jne xor sub push adc jnp loope jne dec and push push mov jbe sub adc jo mov dec loope push add in and inc or ret popf aaa int3 lods data16 mov in and pop add insl loopne cmp fstl add sahf test adc push inc adcl aam (bad) pop cmc fwait rclb push cmp iret rolb adc ds push push jecxz (bad) or ret pop fsubs dec xadd jbe sub xchg mov xor (bad) or inc jmp movsb and push push roll jb xor mov xchg mov inc push push fnsave pop icebp mov xor or shrb rcrl (bad) push push cld push ja push add dec sbb push std add xchg xchg in mov popf dec cmp push leave mov pop movsl dec add popf dec outsb fidivl mov push shrb (bad) dec mov mov mov and popa sub inc insl rcrl inc sbb aas mov adcb cmc loope mov fwait dec add mov (bad) xor sbb adc or adc sub and ret das push adc js dec add mov pusha mov sbb test adc add and xor (bad) push mov lahf enter adc stos cwtl test push popa push cmpsl lds movsl loop sahf xchg sbb inc push sub loop pop add adc mov xlat mov add stos add jb movl push xchg and std pop pop rcrl inc in mov ficomp lock js mov imulb call fwait mov shlb xchg fimull lods xchg dec mov aas jecxz test push dec xchg inc inc add sub jmp jnp aaa shlb cmp pop add sbb roll (bad) jp,pn push loopne dec fmuls nop mov jno or insl inc cs inc lcall shrb cmpsb aaa ja sbb xchg popa dec (bad) cld jmp mov push pop and pop dec xchg out (bad) nop inc dec inc add dec push lods fmull push outsb repz jl jecxz pop (bad) pop test (bad) dec and adc sub out mov andb push bound cwtl ret xor dec roll nop xchg rorb lahf pop push pushf add int3 (bad) andl xchg lret inc leave sub nop (bad) sbb sbb sbb ds jno rorb (bad) xchg sub fisubrl sbb jno sub pop cmp inc sbb (bad) rcrl push or pop and fistpll xchg add mov mov je dec je fmuls jno (bad) lcall push xor sbb popf je fwait lret cmc rolb pop push es sub fistpl push inc xor rcl push outsb push xor movl pop lods in shlb xlat mov sub ret jae adc push fwait and dec lods sbb xchg or xor push rol cmp adc popf add je jnp lcall xchg push insb jl cs fdivr test dec pop in mov mov push rolb dec sbb sbb cmp cmpb fwait xchg shrl (bad) (bad) arpl fstps push push sbb dec out or cmp push and adc pop xchg lea addr16 inc hlt bound stos and inc mov ret or pop fcomps and loop sub sub jle fs ss or insb and jne pushf pop scas cmpsb push cld mov mov xor push jne mov outsl jg lea loope (bad) jno jnp jbe movsb ds lea int push outsl mov dec sbb (bad) cmc fstps inc mov xor sub outsl inc pop fwait inc loop sbb fdivs (bad) lock cmp pusha or loopne or push lods lcall and sbb fsubrl std sub adc add ret mov cmpl or pop xchg loopne jl mov sub and mov fiadd out pop dec xchg sarb fiaddl fdivrs fnstcw fnstcw add push sbb inc dec add scas xor or inc add mov push or test sub mov ret pop nop orb inc inc push xlat add andl fnstenv and add fisubrl jb jb pop push mov jle or adc inc mov cmp decl pop add pop cmp insl je xchg loop push fs cmp outsb sbb mov lods push mov add mov sub push mov in out insl inc xor dec xchg and aaa in mov cwtl inc sub sub push (bad) out (bad) dec add in mov imul pop dec jmp lret xchg inc pop push test inc add and es clc adc inc pop mov mov and jle out push inc pop es orb in jae or xchg sbb xchg sbb dec dec dec cmp enter push sub ja stc jb dec test icebp xor inc ja sbb js pop push shl or xchg jl (bad) nop xchg int roll push mov inc xchg sti add int3 fwait jne mov lret mov inc adc add pop nop popf lods push pushf daa mov clc dec in xchg push dec dec and outsb dec rorl add jle mov dec sbb (bad) mov mov mov and adc roll cmp mov push pusha xchg repz cmp movups loop mov idiv pusha lcall xor push push sub add push mov inc dec push loopne jno dec pushw add cs ss outsb lock ret add pop negl adc (bad) pop pop ret mov cmp aas loopne push out ja xchg call dec outsl jo xchg sahf xchg addb sub cwtl jbe sub add mov or and popa jmp xchg inc adc or or aam and add lods and mov jbe or jle aas nop mov cmp stos movsl aaa sub inc sub fisubrl lcall xchg leave cmp inc dec push sbb cmp sbbb imul roll mov add adc fs inc push xor pop clc inc push sbb or mov movhps rorb mov sub mov pop lock ja in ljmp or push js mov divb push jle test mov pusha dec pop lret adc call dec xchg add dec sarl dec mov add or int3 xchg pushf dec sbb dec call bound leave ret (bad) mov add sbb sti lcall pop je inc add push dec jnp js add cmp and mov mov push push fldl ss cs lret and dec std out ja mov sahf mov mov pushw nop dec lock sub das lock rcl test push in dec cs sahf sbb pop lock dec adc mov adc lret ret insb rorl push add push in xor sub xor jecxz xchg les jne push cmp movsl icebp xchg push mov rclb mov push rolb and xor fdiv pop push sbb aaa push ss sahf sub xor push inc movsb in je add pusha pop lock jmp or adc mov inc push xchg xchg adc mov add push fcompl mov push xor test xchg out jns int cmp jno dec xor sbb xor cs daa int roll pusha in cmp xchg mov faddl scas xchg pop mov mov sbb and cmpsb dec fs sti add adc pop and add ret xor mov dec push xchg dec ret add aas and dec inc test rcrl or aas mov icebp lea clc imul push adc jle aam jecxz outsb xor mov mov and (bad) dec rep jne dec dec and cmpsl sahf add xor out test bound cmp ficom imul cmp or mov popf pop sub lahf push inc inc das rolb incl imul pop and sub jge xor push sbb and ss sbbb (bad) add test mov imul js popa and add push bound fimull clc push andb movsb or add inc pusha push dec adc stos addl sbb mov xchg ror pop dec xchg hlt rcr mov cmp cmp lock sub add pushf sub push dec push push das pop (bad) pop stos adc out mov aam inc je mov dec pop push sbb lcall cld and movsb push jbe fmuls imul ljmp iret je cmp inc adc (bad) mov call add outsl inc push sub mov jae push sub pop pop bound leave inc add dec xchg das mov adc imul sub or push push loop mov jae pop dec push lahf rclb sysenter or lea lods push mov or in inc sub aad inc inc mov push pop or xor stos pop das or repz sarl dec and jb cwtl mov lea test (bad) jmp sarb jbe pop sub push addr16 rcl cwtl dec das jle pop xchg test int lea mov mov mov inc push or xor (bad) xchg lea hlt sub pop sub sub sbb out mov mov in adc lret rcr mov stos push cmp sub lret xlat xchg cmc cmp jne int fdivs push ret and imul stos inc loopne test fistp or mov lods outsl inc inc adcb jl addb push inc inc (bad) ss shlb pop xchg lods cmpsb or shrb imul jecxz fstpl xor push push insb testb lds or sahf stc xlat or add add lcall in push adc or popa inc push xor (bad) dec pop pop adc xor test xchg push rcrl je dec ja dec sub cs push xchg dec inc inc push push mov push adc push or xor sahf adc push cmp jae mov (bad) rorl nop cmpsb cmp into mov push jb insb push jmp imul ja fwait inc cltd pop pop bound pop divb aad push cwtl lock add ficomp out fiaddl adc jecxz xor int3 loope pop jne scas push (bad) daa call andl lods or and cmpsl mov and in or xchg xor mov mov lcall sub clc inc mov mov push mov push jo sarb andl sub sub jbe shrb sbb xor test and dec mov mov add push push test enter pop dec sub into cmp fistp setle shr dec fnstsw push fmuls sbb jo test sub mov sub sub lret jne rcl adc sbb es ds cmp es test test loopne add movsb mov jno xor cmc arpl dec imul clc dec out add adc inc mov and or push loope and push and in clc add push lcall mov mov pop rcll call popa pop xor cltd dec insl mov pop sub or push add push loopne or pop push cmp movsl cwtl lret sub and in add jecxz adc xor xchg cli roll rolb mov rorl lock or jne adc dec push scas jmp push and (bad) add cmp adc and inc pop test push movl pop pop jg ljmp addl mov sub jae push push sbb imul mov pop add mov and loope pop cmp adc push push fwait ds js dec pop enter ret es jmp fdivrs push lcall mov push dec push sbb push es mov xchg dec push sub lea cld (bad) ja fiadd and jo and jecxz add push in mov push inc lcall mov push mov sbb xchg lods xchg or add imul or xchg mov sti insl and call push fisubrl cli adc movsb pushf mov jecxz cmpsl sbb push dec push out add add hlt fidivl enter test cmpsb xor push popl xchg dec jb add lret cmp jge jmp xchg inc sub pop mov inc dec pusha insb ljmp dec inc arpl sbb pop mov cmp jl xchg add dec jne xor ss gs (bad) fnsave shrb xor cmpsb jo push or xchg lret mov inc test bnd pop lods test jl aas and das sbb push sbb pop jl jle sub insl movsl add sti stc enter pop mov inc mov sub lock sub mov sbb fbld dec jae jae xchg sbb pop add je adc jno hlt (bad) call push adc jle mov imul xor add fisttp inc mov imul xchg push xchg divb (bad) hlt inc pushf mov push add es sbb mov mov test stos jo je mov xchg or rorb adc add lds xchg add inc sar push (bad) imul sbb enter hlt js outsb lock lcall push mov jle (bad) xchg push add in xor pop and mov ss sbb mov in sbb mov (bad) je mov lcall push xchg pop or push inc ds add push cltd addr16 out add or hlt inc sahf dec rcr cwtl sbb clc aaa test mov xor fisub int insl sub mov dec lret ss jns nop pop fidivrl jl jne and ja or dec jmp cmpsb xor aam fidiv lock aaa sbb (bad) dec sub int3 dec mul xor sbb fldcw jge lds stos xchg and cld push xchg cmp jmp lock cmp add fiaddl icebp roll adc loop push and jle cmp xor sahf rcl (bad) adc jbe xor pusha cs xchg add push mov add aad popa mov adc or inc adc andb dec jp test jns sbb lods xor cwtl push lods ja lea icebp jl add pop jg inc xor and and test pop inc or (bad) lods cmpsb push sbb mov lods mov push cmp dec or adc loope ret push mov and add inc cmp xchg jo jbe test fsubl dec jmp inc add push dec fwait adc aaa je int adc jg and mov int jno push popl inc or ret lret pop fldl test push inc mov stos (bad) in mov or or add dec insl mov xchg mov xor pop adc (bad) cltd sahf jbe pop addr16 inc test jecxz xchg incl adc xor mov test pop pop rdmsr loope je fsubrp mov iret jg mov scas add mov lret mov test shl gs dec push gs lods daa popf test out shrl or and dec xor popa (bad) les add cmp pop xor (bad) cltd lahf out orb movsb pop sbb pop mov imul add xor repnz jp insl mov add add dec je call sub push mov loop mov and ja sub mov push add jmp dec notl aas dec dec or mov out lods push push mov arpl fcoms mov inc add or in and adc jns and and sbb mov ret ret es pop js sbb mov fwait out test xor add andl aad mov or rolb lret pop test mov imul sub mov sbb xchg pop mov test sub cmp dec gs test jae pop test in mov fs cmp jp xlat xor das xchg pop xchg les lret dec sbbl data16 xlat mov fldenv sbb je xor dec imulb push or pop add data16 add dec fdivs lcall add add mov dec shl jb cltd fs out inc (bad) jmp sub add xchg pop (bad) mov data16 test (bad) lock or iret xchg jne (bad) and add test dec or loop jns mov xor (bad) je loopne sbb or jp cs sbb imul or (bad) enter leave pop add incl add dec stos adc pushf outsb xchg sahf cs sub pop xchg or shl in insb sub mov fnstenv pushf add call push inc cmp sub lea (bad) rcll mov icebp adc enter push stos jge lret fs inc adc push mov xchg fild mov inc sub sti stc mov dec xchg add repz mov pop test ret xchg pop pushf mov lds cmp cmp test dec pop xor pusha test cmp sbb xor imul jb ja xor push bound dec inc or sbb rolb rol icebp (bad) subl adc scas pop and ret adc ja int ja adc add mov cli adc movb xor and movsb fs nopl mov push sub sbb test push insb add pop sbb cmp je mov xchg (bad) and not xchg pop mov lds xchg mov mov cli test sbb and std push test fmuls hlt adc pinsrw mov aad push add mov cwtl pop and clc (bad) (bad) mov or and or adc loopne xchg sbb shl das or push and pop sbb inc dec insl sub sub push mov lods loope out in or adc mov xor pop lcall cmp clc adc mov xor pop ficomp lds aam sbb cmp add jbe adc loopne cmp sub daa insb add pop or push xchg dec bound fnstsw fdivs je ret adc cmp fbstp pop mov pop or orps sub sub call data16 adc mov push pop insl out outsb adc adc jno,pt jmp or and adc daa outsl dec jo mov xchg shrb call add ret adc (bad) scas mov add dec and das int3 inc shl pop jnp mov pop dec push fwait je data16 int3 mov nop lret cli inc (bad) sar pop in or inc jb push pop fisttpll sub cltd mov cmp xchg mov mov or bound bound loope pop clc lcall jmp sub cld xor addl adc pop cltd xor inc dec push mov or xor loopne xor inc cltd or ret dec sbb xchg aas jecxz jge sub pop scas jg push loopne loop nop aas jne cmp mov int push cwtl mov (bad) xor cmp call or push orb dec jecxz (bad) xor mov inc push xor mov xchg (bad) (bad) sti sahf fild mov out jge call outsb cld dec and lock movsl and repnz and inc and out or sbb add push fs add nop adc and imul push into xchg push imul add mov cmpsl fstl sti js pop imul (bad) jo or aaa lahf xor adc lock jl test (bad) jb lret and and iret xor enter pop subb mov mov jno aas int3 leave stos sahf or jno sti lods mov push xorl arpl push ljmp gs sub mov repnz xchg (bad) cmp push dec lar jp lds add add and mov mov push clc enter xor out mov mov out mov (bad) aad add fimul dec stos mov or sub and mov arpl mov decl adc loopne mov push dec add mov cmp pop xor pop sbb bnd js (bad) cmp mov icebp (bad) jmp mov sub jge ret loop or lret enter (bad) xchg sbb sar incb out je add pop and sbb mov sbb lods (bad) sti cmp (bad) xor jmp movlps xchg sub (bad) mov test inc sbb lods add xchg and std cmpsb nop sub cld sub pop adc or adc lea cld add sbb ljmp test sbb cmpsl imul nop fxch mov jb scas jl lret test cmp sbb insb cli (bad) cmp sub cmp test fstl xor stos ljmp dec (bad) dec sbb xor fmul ljmp aas mov cmpb mov sarb sub inc push add cmp dec rorl mov fwait enter sbb xchg dec and cmp (bad) fildll js sbb jo dec and jo xor rcl mov into push mov adc xchg or shrb negl les and aam and push lret int add add and dec loopne add and rclb je cmp xchg (bad) mov add add sbb je inc inc mov sbb dec pop or add jecxz inc out mov jl mov add imul aas add lret outsb loop fsubs cmp mov cmp pop jmp adc cwtl mov nop std inc mov insl out fdivrs pushf gs bound test ljmp jae (bad) jo lds fstl outsb jne sbb je mov mov and mov adc and pop adc mov (bad) fcompl mov sbb mov mov jne push sbb cmp xchg jmp sbb stc xchg add inc jne inc das dec pop pop mov fmulp imul popa pop scas or daa xor add hlt add mov mov test icebp je pop mov cmp xchg mov test push loopne sub sbb sbb or popa inc adc dec rorb xchg mov or leave subb cmp cld dec mov inc lea iret or pop lea or pop or movsb inc sbb xor decl sbb mov push and push push test leave push pop shll iret test negb arpl push notl dec dec in ret lcall xlat fsubrs js cltd pop sub and orb bound (bad) lock (bad) jmp or xchg or fdivrl cmp mov mov mov pop inc sbb inc jno mov pusha (bad) sub sbb xor push aas sbb lea stos (bad) aam (bad) mov mov das jle sub popa hlt cmpsb inc mov je leave inc bound mov push or dec or (bad) mov aas mov xor cmp dec imul dec xor sub cmp lods xchg imul sbb mov cmp jg mov cmp pop xor pop enter xor mov lods mov jne fs pop add jp (bad) aad mov and lods mov mov clc ss fcmovnbe mov adc or mov sti push add popf insb loop jp push cltd add jmp xor jp out je push les adc pusha xchg add stos mov xchg sub dec and dec out mov decb shrb (bad) push adc pop xchg ljmp rclb fistpll mov xor roll cmp dec sbb adcl sbb inc sub and adc xor mov push sub and aas push ret adc inc adc enter push lcall dec cmp xchg cmp or and mov dec cmp cmp imul xor scas xor sbb push pop inc sbb inc and bound mov push or sbb push fmull inc fisttpll and sub sub xchg lods jl mov push or bound out jge dec push in sub je xchg out shl and xchg test testb push cmp out (bad) mov mov clc aam (bad) js data16 stos ffreep lret pop ds cmp push add lods or push cli add xlat (bad) jge je jb das aam dec aas fs push jp sar and rorb xchg cmp jmp mov jns inc adc (bad) out out and daa mov je sub mov inc inc adc pop ljmp sbb shll cmpb pop mov or aaa xor sbbl das jl add xlat cs mov jbe cmp mov je sub push icebp add sub push add pop cwtl jp test jne std and lret lcall inc xchg adc and subl push lock push push lret sub add test jno sub lret xchg mov add jp add sub rolb cli dec js cmp adcl or clc shlb lock and jnp mov add sub js mov (bad) cmp test push js mov shl inc inc je or add rcrl fildl mov mov sub push jns stos sar add push enter push pushf incb inc xor sub aam aad sub iret xchg pop js ds add je mov subb push push mov notb mov lret and xchg rcl jmp pop dec test push push test xor enter adc pop push inc clc sbb popa mov inc repz imul add jl xor ret dec fistp and mov xlat add inc outsl lret pop jo sbbl push not add xor in addr16 in adc jb and jae inc or pop cli inc dec orl adc jae mov fucomip cmp dec jb je loopne sub xor inc dec pusha cmp sbb negl mov pop push fdivrs loopne loopne sub call push cld jle xchg mov hlt jmp cld or jp lock fdivrl mov or mov fs sub lock popa data16 jl fdivrs fmull fmull fstps jl js mov and inc rcrl gs call sbb rclb sbb adc xchg sbb push sub addb ljmp sbb mov sub loope dec imul cld and lahf dec pop jl test repnz sbb out jge (bad) push in push xchg pop mov pop sbb sub lods test xchg mov sti and push sub xchg je pop push or push js xchg mov push rolb sbb mov dec xchg pop rcr inc jbe cmp movsl jo (bad) xor sub testb insb ficoml cli loope sbb or sahf cli cmp push sub add fwait jo or nop mov dec rorb xor pop (bad) mov data16 loope (bad) xor xchg insl jl adc push xchg dec jecxz and nop notl rolb ss sarb jg sbb or movsb xchg or outsb mov int3 mov cmp sub jne and push arpl (bad) adc rcrl mov push push js and movsb dec (bad) push sbb add pop xchg push add push mov dec outsb jo ret pop lock inc leave (bad) push (bad) sbb or loope sub sub push xchg push (bad) arpl push sbb loopne cmp sbb push int3 ds adc in cmp add test and in pop jb mov aaa xchg push xchg jno jge xchg shlb mov insl dec inc lcall lock lcall sbb push mov pop je ja mov sub sbb stos lea inc or cwtl outsl push push imul add pusha sub sub rcr pop adc pusha pop arpl add pusha pop out popa movsl movsl add mov push xchg popa iret add add mov outsb or push into cli mov (bad) push mov xchg jle je or ret sub xor (bad) xchg mov add mov jb loope cmp lcall jns push pop daa ret imul bswap adc inc or lahf inc dec mov push add rorb cmp sub addl sub enter or add jbe shlb adc mov test inc or sub mov in adc mov nop pop push mov adc cmp push pop sahf pop popf notb adc push inc fstpl ss (bad) jbe outsb (bad) mov pop or (bad) adc mov jle jb sbb mov fdivrs push ret cmp ret lahf mov jmp or imul cmpsb ret aas les pop sbb inc pop or data16 imul sbb rorb or nop dec in bound in lahf sar mov xor test in dec xchg test sub mov pop ljmp icebp fstps xor outsl jmp and in mov je xchg sub je sbb (bad) push ss add into mov mov icebp mov jl or or clc push lcall cmp mov aam leave js push (bad) ret add mov mov pushf mov les and and outsl xchg push mov add scas je jo and or out ss sbb adc (bad) fidivl cmp adc pushf iret shrl cmp popa jno js cmpsl jge or ds mov cli fdivrp add jo add push dec push sbb cmp sub loope jge add ljmp and add scas and dec pusha jns pop arpl dec cmpsl test dec sbb test add mov pop sbb cld and or jle sbb push fnop pop sahf push xor ret mov xchg sub mov (bad) push mov enter ret fsts cmp pop inc cmp or push push push push xor sub push test mov add sub out lock push jl push js imul push sub mov mov sbb pop jo sub ss and xor adc sub mov inc sbb or xor bound inc loop add pop ljmp js inc push jbe mov jmp xor sub gs fcoms fdivrs gs pusha push fimull stc jno sub pop xor fist and inc push jb pop pop sbb sbb pop call test sub jp mov jmp mov ror lret pop adc sbb pop mov mov jl cld and jo fadd shrb mov pusha add or test cmpsb jbe repnz inc pop adc lock mov int3 aaa pop fildl push mov push jo push push push pop sbb sbb pop sub jmp test ds push mov stos mov jnp lea pop pop adc xor jle jp inc dec es insl jne test fidivl inc push adc nop cmc clc popf pusha test add clc data16 movl add outsl stc adcl xchg (bad) cmp xchg movsb ret sbb xchg addb xor add push movsl xchg jle push (bad) jle sub and add loopne pop inc jmp sbb adc outsb jmp inc jge dec stos push dec mov bound add sub and sub jo test inc fmull ss cmp xchg jl sbb or scas insl subl add jne leave in and inc cmpsb jmp jl jne add (bad) jo cltd push or je jp jge (bad) je movsl cmp pusha add pusha cmp mov outsl fadds add mov (bad) adc cmp jne popf pop jl iret push mov jmp jl data16 std adc adc mov leave lods mov pop ss xor mov leave loop xchg mov mov (bad) mov adc xor jb in adc pop adc mov and dec insb xor adc ja (bad) imul orb (bad) mov cmpsb loopne adc xor xchg data16 data16 and outsb ficomp lds push jmp mov or subl ds aam add inc imul in aaa push jo les (bad) notb xchg inc negl sbb pop stos mov xchg adc jne (bad) push dec mov sub cmp adc jb in inc inc jo adc add or mov mov add cmp outsb dec cld inc js aas add loopne lock hlt add xchg lea popf idivl mov repz sti or fild cmp jmp sbb add mov mov sbb mov out sar and cmp (bad) push bound cmpsl mul mov sub repz jne (bad) mov add mov dec inc push mov xor stc ret push cs push (bad) lret js xchg cmpsb mov pop dec insl or cmp xor push push adc mov mov add or xor mov add dec jne pop inc enter mov jl scas sbb adc je ret jns loopne add fild push jo and clc lods xchg pusha add cmp fbld sbb sbb adc ret jl add inc repz in mov mov mov xor aaa daa aaa push mov xor and pop jp push cld add dec cs inc cmc scas ljmp cmp clc push in sahf or inc sub adc add sub sahf mov xchg (bad) push cld and mov ljmp out mov ja repnz fisubrl pop mov loope mov inc mov push jmp orl shr inc dec or push dec add prefetcht0 add push daa fbld xor mov movl mov lods jp jo sub xchg sub push sbb or mov mov push jns movsb dec negb lock (bad) sbb cmp inc dec push or adc in sbb fs sub adc and in sbb (bad) xchg push xor adc adcl test sub or je cmpl xor xor ud2 fbld jnp dec (bad) inc mov sub aam rcrb test xchg test sbb lret shrb sub sbb je push jbe inc adc mov mov rorl fwait dec fdivl (bad) mov add mov xchg adc and sub rclb jne (bad) jle add xchg inc sbb adc mov and add and pop pop cli xor push jg data16 lea leave dec mov adc push pop dec stos sbb sbb andl push ds sbb pop mov nop add ljmp pop xor js add add in inc test xlat insl addl cmc stos add xor push jle mov stos push ret js xor (bad) adc or xchg push adc mov mov push inc dec add cmp dec cmp xor fs cmp leave mov sub (bad) mov inc jo je dec jo (bad) mov push icebp cmp jl stos sbb mov sub push push cmpsb aaa add adc pop popa rorb jle inc mov clc popa mov and cmpl jl push adc cmp dec cmp lea icebp xchg mov fisttpl adc dec lea xchg mov push call loope scas test lcall inc inc dec dec inc js push jns jo dec ficompl xor movsl add sahf lahf inc js call stc sub cmp lcall jns sub ret cld sub or dec cmp pop add push xor sarl push push cld push std decb mov pop daa mov add mov push or lock add lock pop dec out sahf push stos mov lds cmc (bad) and icebp testb mov or dec dec shlb loop loope jo adc add mov rclb cmp mov sbb push and or outsl add and or inc cmp js push xor add xchg or mov pusha loopne ds and clc test inc adc ret dec lcall mov (bad) sti dec mov ss jl lcall aaa mov test inc mov adc inc insl mov dec inc add mov push movsb out and and ret push rorb pop cmp push push daa sar push outsb sti and push jo xor (bad) mov rcrb loopne mov sub jle or adc aam fstps test clc cli and mov push mov sbb add dec jbe ja fmuls rorb xor fidivl xor pop push pop or pop sti jg gs push cmovs sub mov xchg mov aaa call and jp pop mov inc sub mov rcl and or lea mov mov mov sbb (bad) cmpsb jp jne xor gs aas sahf inc xchg push pop jmp adc jg mov push push ret insb shl aas push sbb and test insb fnop adc dec or add sarl fcompl inc cmpsl ret (bad) (bad) mov imul cmp cltd jmp mov push jp jno pop and push cmp cmc mov daa loopne mov xor xor inc je loop shll and adc jmp loope dec roll test ja sbb add push mov enter dec push xchg sahf mov ret test mov aas and and test jl sub cmp jo lock ds (bad) push xor adcb xchg (bad) jbe cmp and pop push adc inc ss mov or add xchg out loopne adc rclb jnp int3 lods sbb mov mov push rcr dec loopne out (bad) jp lods inc loopne mov pop adc add jne cmpsl sbb sub or inc xchg add push int3 pop dec and nop mov adc mov pop nop xchg add sbb (bad) int and cmc orl adcl mov push pushf mov cmp movsb int3 js adc cmc push test mov sub jmp nop push sarl adc in loope mov pop mov scas repnz test mov add push into aaa orl loop or inc lret adc icebp fadds popa movsb orl mov inc and mov add push or pop xor daa cmp outsl sbb inc pop lock push das cmpsl rol lret js cli rcr push roll je sbb sub (bad) xor add dec xchg inc mov nop inc inc add pop fsubs or jo and xchg xchg add or repz imul mov sub jno or shl sub add (bad) out cs fisubl mov push fimul (bad) mov int (bad) pop je aaa adc js jmp lock jg mov ret jmp cmp jle (bad) cmc iret arpl idivl sub add out or je cmp jge (bad) inc xor push outsl test cmp dec jg call jbe pop inc jb sbb fsubrp out pop or jg adc sub frstor add movsb or mov int je add in lds fld xchg test lds and pop mov mov lahf sub out mov or cmp popf test lret jl cmc sub test mov aas enter lods js mov stos cmp mov or sub mov enter and fiaddl hlt pop js insb mov xchg punpcklbw loopne hlt add mov js mov xorl js adc inc cmp clc loope push inc stc add jp ret fmuls or xor loope clc dec lea add or xchg add insl int bound push mov cltd push lcall jle mov jmp xchg in inc xor and mov mov test call outsb adc lock pop xor fdivr aam loope dec shlb add or xchg pop push sti mov cmp jmp xchg rcrl loopne into les adc cmp dec push imul inc mov loop mov test inc xchg jno sub stc inc sbb mov adc je dec jo xor and std push mov rcr xor dec push xlat mov mov jo add inc loop push outsb and mov jb mov jns pop (bad) push xchg mov xchg nop nop push pop add inc imul pop dec ja xchg xchg movswl xchg test cmp push adc or fiaddl add cmp xlat dec mov dec add jl insb add cli jle inc ljmp jl test or pop cmp (bad) enter test enter and cmp xor mov icebp jmp cmp dec jle cmp jne and xor jg add lock mov pop stc push aad sahf fptan xor add sub outsl shrl sub into cmp push ljmpw sub nop mov mov push jo cld dec xlat push inc xchg pop inc sub daa jno mov fcomps cltd and (bad) xor cmpsb sysret bound (bad) xor pushf mov inc (bad) fcoml (bad) movsb add jbe push dec daa push cmp je bound sahf lret sbb add pop add mov std adc lahf mov dec lret or popf test rclb sub int adc push inc movsb push pushf xor orl push adc or ret and jg pushf adc cmp jle aam pop mov cmc (bad) and fstl and pop mov lcall fmuls das rol push adc sbb ds jo xor mov ss add das addr16 xor pop decb jl loop jns sbb jg mov pop inc cmp jg cmp mov push dec stos add lds mov enter outsb pop mov inc add idivl and or push sub in adc scas daa into lret push sbb sarb and sbb jl xchg cmpsb daa lcall (bad) inc inc cmpsb movsb pusha add sbb inc addps jbe add sub bound negl icebp pop mov jg push add cltd xchg xchg shl xchg sub mov or adc nop mov dec add pop sbb dec push pop sbb jne xor out cmp pop cmp pop or mov push inc (bad) sub or push aaa push xchg inc or cmpl mov jl adc adc or pop inc pusha push adc pop or subl xchg out jge or jmp xor dec jg test stc jg xor rorb iret shl hlt mov inc insl mov lock cld jne add mov repnz into dec xchg (bad) fidivl inc mov movsl push insb xor xlat sahf imul jo jle inc repz addl enter neg lcall mov js and pop popa jecxz sub mov (bad) mov mov mov popa fldl repz clc dec int3 imul mov in jg rolb cmp and les xor mov xchg mov repz fwait pushf int3 ret loope cs mov jg cmp (bad) mov nop adc inc pop push jmp adc mov fucomp enter enter fmuls addr16 cld fldenv sbb test jo pop leave sbb rorb xchg sbb ret mov mov xchg adc lea sbb push cmp push jg addr16 jmp or sbb sub adc pop and lea loopne sub push sbb push inc shr adc or aad push cld mov add js and (bad) je adc jns add add and dec aas js and adc lret lock xor clc xchg xlat jle sti inc xchg mov sub dec je dec jne xchg push int3 xchg xor dec movsb jo xchg sub jmp (bad) dec cwtl add add imul push daa push or and push inc cmp mov (bad) aad add pusha mov or or or dec inc or adc cmp cmp mov mov in repnz (bad) sub call jns sbb sbb xchg mov decl mov sbbl xchg ret jecxz xchg push or jb add adc push and fdiv add div jne mov xchg lds enter les out mov mov cmpsb sub std pop sub add sub add dec and fstpl adc sarb test test addl movsb cmp adc mov iret pop add jae add dec pop inc jne clc data16 xor ret mov adc jo jne jne cmp outsl daa jnp mov sti jne xchg adc rorb addr16 rorl or mov xchg adc push das ljmp jg cmp adc int xchg sbb fnstsw push or jmp or pop pop pop inc jno or or jg mov add (bad) push adc dec inc add cmp push adc adc adc movsl cld or push clc mov dec les mov rcrl lahf loop repz aam xchg lea add xchg inc out jg adc jne xchg or cmovb inc in test mov rcrb and into jbe sbb mov aad inc push stos insl aaa pop push mov mov and jle je or mov pop adc mov inc loope cmp add mov add or sub nop inc dec loope sub js sbb xchg test jns mov (bad) fsts aaa xor and test pop cmpsl pop push xor push jo mov ja mov sbb push inc fwait mov lock ja push pusha scas loopne dec add push outsb mov sub popa scas or cli test pusha stos in ss add and adc push mov into ret cwtl in (bad) rep pop jmp jns pop add pop jge jne push mov test call and sub sub sbb xor push inc aaa and mov xchg call jne dec or fstpt adc jmp les jae lea push adc outsb lock ret insb pop ffree pop sub jge addb dec sahf enter or add stc int3 or add push pusha cmp xchg out insl sti nop push rclb jl xor adc rclb loopne cmp push xchg sub and dec pop xor adc loopne cmpsb mov test shlb mov push push mov push mov scas nop call push ret sbb xor xor icebp shrl mov push mov sbb cs jle int jle xchg fisttpl push fs xchg jo lahf fdivr xchg add cmp sbb inc divb xchg push push insb adc mov lret call insb or bound pop or lea repnz test adc or lahf stos out mov xor inc adc and mov xlat test pop stos test inc inc and jp inc adcb push and jmp in mov add js jno push cs add lea leave pusha imul xchg int3 xor inc fsubl cmp jp outsl xor pop dec cmp ja in (bad) and and mov les pop or adc clc push pop ds lea xlat pop data16 jp lea pop xor adc movb test xlat rolb mov xorl (bad) leave pop add xor sbb ja jecxz push jmp mov rorb sub cmp movswl and push add cs pusha into or dec pop cltd mov jl sti jg sub arpl cmpsb aam cmp or int3 mov test push pop shrl mov jecxz sbb xor cmp dec je lcall rcrb sbb jmp mov cmp or pushf adc push jae jae ds std movb js out popf mov dec aad test mov add cmpl push dec sbb adcl xchg and sbb or dec cmp fild push test test add mov aam test inc push pop test lock sub and push mov push test jo lret cmc pusha movsb xor and mov in mov aas mov add out jl dec pop cmp dec inc lcall clc sub push in mov rcrb push mov xor mov xchg jmp push lea repnz ss daa cmpsb xor rolb push leave sub inc mov aas test push mov mov mov test push sbb lsl mov add jg jo sarb pop add inc inc sub dec sub fisub lcall jmp lret xor cmp xchg sbb add pop ja loop es xchg pop dec jo test lock inc or xor jo cmp testb pushf or push in (bad) rclb mov xor ret push sbb jb shl inc push adc jns popa inc loopne int3 jb outsb jp inc cmp fcoml xor xchg lock mov add arpl lods (bad) mov xor inc mov and add jmp mov (bad) (bad) push movsb xchg rolb sub adc push or in jecxz adc add xchg cwtl jo xchg movups jno cmp je sub add (bad) mov iret call xchg rolb inc je,pn inc pop fdivrs loop push mov mov lods scas mov fs addl adc xchg cmc pop pusha mov mov adcl xchg sub dec outsb pop je push xchg lcall jecxz or es cmp sarb add popa outsl or sbb test mov dec imul cwtl hlt add loop loopne inc in lret cmp mov adc mov cmp rorl adc sub out mov inc roll pop mov dec mov dec sti fcmovnu loopne arpl dec imul and push push mov sbb mov test cli cmp lock push push arpl rolb sub sub dec cld (bad) push xchg out push lahf dec aam pop outsl push jecxz add add mov das sub enter dec xor xor inc jae out sub aas add adc mov ja sti push loopne inc add xor (bad) scas stos or les xchg pop fstps push push push sbb pop rorb adc dec add sarb fs prefetcht0 loopne add push cmp emms adc pushf xor cmp addl out push adc imul inc mov xchg mov pop mov mov and add and movl and sub add sub rcrl aas and or sbb sub or jmp loopne in mov lea fiaddl loop xor call mov sbb adc loopne adc fdivl pop sub cmp clc mov je add inc jne (bad) popa lahf enter (bad) enter sbb out or pop inc pushf scas mov sub or fadds cli dec xlat iret enter jmp mov fldcw or je and or mov pop rcrl or sub cmpl push enter scas cmp adcl inc dec adc sbb adc loopne (bad) push add or add ja xlat jb rol (bad) mov ds inc xchg dec enter dec jo xchg and adc aad bound xlat xor push cmp out cmp fs loop and and xchg pop sbb adc add cmpsb ja push inc xchg mov and stos stos scas mov xchg add rorb cs stos push and addr16 outsb fldenv repnz or push add add or fcomps pusha addb push mov inc (bad) lret adc sbb lea add jno sbb push xchg fwait mov add dec jbe mov test push lcall pop in sahf xchg addl sub push jne mov xor inc inc dec add rcrl bound flds ror int or mov mov pop (bad) jae inc rorb ret int3 or dec mov shrb (bad) fnstenv nop nop mov push jne push imul ljmp aam aad or not push outsl mov clc dec and mov popf add xor push int3 lds jae fcoms push and push loopne es dec xor push leave call inc xor push jo jecxz sub push les add sbb js cwtl cmp je inc repz add mov fisub icebp fcom inc aas add add andb adc shlb mov push cwtl sub xor rorl in and mov mov addb out push inc dec mov jne sbb or push ljmp pusha mov aaa sub inc shlb imul sub cmp xchg jne clc and pcmpeqd sub push dec add jae jle fs pushl cmp jne dec cmp pop hlt cmp and call ljmp incl jae lea sub js inc and and test call pop (bad) adc (bad) or dec push sub stos jns popa adc test loopne faddp cwtl pop sbb sarl push add xchg lret dec outsb mov rclb fcomps mov xchg mov lret and mov cmp (bad) iret cwtl inc mov inc mov inc cmp jb rcr neg insb or push add inc sub xchg (bad) jo loop and inc mov fisub fistp sub sbb imul xor dec push pop lret imul sti adc lret je or sub add inc inc rorb js mov inc add dec lret movsl cmpsb xchg cs push cli loope inc dec sbb adc loopne push push ret pop xchg sbb (bad) cld ja shr sbb adc pop sub add jl jb jb adc and movsb lock (bad) mov mulb mov push and mov rorb jg jecxz dec mov je test rcrb push mov xor xchg xchg mov sbb mov nop cli movsb cld ds and mov mov jo or call icebp es push adc ret sub mov or lcall shr mov sub and cmp lret sbbl add mov xor and mov mov pop dec xchg cmp xor inc movsl dec in push aas adc (bad) cs push cltd add jp push popa push xor sub sub xchg cmp out in test xor shr push jne lahf and clc jne lret and in (bad) testl out dec insb mov mov dec sub push add push or jne sti orb inc (bad) sub (bad) shr shrb inc pop sbb inc sub in mov push dec lock clc sti sbb fstl in pop cld repz lods and pop cltd (bad) sub lahf call js mov je pop xor or inc lahf push xor arpl push dec (bad) into pusha sbb in mov dec rcl lods sbb cltd push jge cltd sub jmp push or add test push xchg jne dec add xchg dec mov push sbb mov cld faddp inc or mov dec sub movl nop xchg inc fiadd pop inc cld je cmp cmpsl jmp int push aaa fs dec test inc mov pop inc call adc stos mov lcall and push add int3 inc jnp fisubr add pop ret sub fcoms push jecxz and mov stos loopne and or sub int3 lods andb mov mov sarl test mov dec xor sbb lds pusha sub std cmp ret adc addl jo aam mov cmp dec rolb add cmpsb push inc push sbb jo push inc xor dec fwait add sbb mov and popf xor mov shrb sbb fmuls js jg mov int or repz orb daa je adc int inc mov test cmp mov push or mov pop jle pop gs fimull push or jmp mov dec adc cwtl adc adc stos mov xor mov or push sub jbe andb aam outsb push push ljmp pop pop es cmp loopne or mov imul dec inc add add loop sub lahf xchg add inc clc lret inc cmpb out sub ret pop in dec inc rolb sbb test jle mov movsb jecxz or or (bad) ja mov mov jge (bad) xor mov fbstp mov jmp mov jo test push gs sub xor push xor xchg push sahf test les mov das ret xchg mov adc pop outsb cmp imul add xchg xchg pusha xchg shl pop push loopne dec xchg push push rcl pusha cmp int3 or cs push push add mov shl sahf pop loop jnp mov push xor mov dec pop sbb sahf sub and test push sahf mov cmp xchg loop leave rolb std adc inc ja fmull sbb std es (bad) push sbb iret lods push add out je lods icebp and imul test or cmp mov shlb sbbb je mov data16 push sbb add mov pop xor js mov push imul xchg mov cmp mov lock int3 add repnz pop addl cmp xor lods dec push mov sub xchg dec push cmp pusha cmpxchg sbb cmpsl outsl orb sbb sbb jg push and push push cltd rclb into aam movsl out ljmp call arpl dec jl push hlt xor and cmpsl aam scas cwtl popf loopne sahf cmp mov out inc or sub scas add mov cwtl popa loop adc mov or jmp or sarb mov push inc dec dec jno add scas add lahf add mov popf cli movsb xor subl (bad) loopne xor pop pop dec add inc nop dec pop inc push jb mov add add push cld jbe push pop ffree jg sub mov mov ss cmp (bad) fsubrl inc sub repz rolb mov sbb (bad) jb jne mov xchg push or (bad) scas mov enter jne sub add push ret dec divb out mov arpl out add jmp in push in push pop nop mov add fisttpl sbb cmpsl xchg pop sbb xchg fadd mov push add call add scas mov mov mov pop (bad) stc sbb (bad) popf jo,pn or mov inc test movsb fdivl fs mov mov pop or xchg cltd cli jp jl inc test push adc add lahf sbb rcl pop jle cmp and into jl orl push stc sub and insl inc cmpsl inc xchg and (bad) lods mov push aaa popf and fcom (bad) (bad) mov xchg mov cli dec stos addl xchg and xor mov mov jo outsl cmpsb in adc push or jne (bad) stos (bad) pusha stos dec sub mov inc jns andl and pop mov subl xchg inc std nop mov idivb or je xor add decb dec sub popa je ds cmp (bad) mov pop mov mov mov jl push and inc sbb lods inc mov scas and jne mov mov fdivp or and sub push mov adc out sqrtps shl dec sbb mov sbb iret jl sub mov mov push dec or loop sbb cmp pop jbe sub adc out sub adc push add pop inc repnz aas jo cmp in mov fildll sub mov jne mov sub xchg jbe push push ret cmp jge ljmp sahf nop dec pop mov sub adc mov xchg or test mov jbe out adc dec cwtl push (bad) cmp inc push xchg push outsb shrb and pop test test rol (bad) je or mov js jmp mov je stos daa push xorl sbb sbb (bad) sarl or lock push jns push or and push dec arpl mov bound add lods ret or jle and mov sbb mov inc sbb and dec pop cmpsb sub cmp sub dec and add insb or dec mov into inc cld add or xchg jle hlt insl sub and mov xlat mov insb in jge dec and xchg test mov and xchg sub xchg xchg inc xor pop pop dec cmpsl lcall add aad sbb pop inc jo pop aas es movsb xchg rcrb scas imul inc dec mov bound xchg je dec sbb add pop stos bnd inc xchg pop cmp out add ss jge test push jl jle (bad) jge divb mov inc dec sbb sete cli inc aad adc push mov imul icebp xor subl add and test push aaa lock mov enter shl xor add dec sti test push push jecxz or imul cmpsb les fcoml mov and mov rclb inc jo sbb cmp push jle loopne das lods add sub and repnz aaa inc mov gs jg xchg cmp scas mov push or xchg sub mov or cmc divl mov add fildl cmc (bad) stos ret rcl jne mov mov insl or shlb test push mov or mov inc cmpsb push frstor cmpsb jo (bad) and mov cmp mov shrb nop push pushf pop movsb rcrb sbb add imul pop scas fsub into jle xchg je data16 shl nop and push inc inc push es push nop bound lret lock in mov iret push dec and push jp push mov or popf push add mov push and jno inc cmp sbb (bad) mov int cwtl dec pop mov push iret and mov scas jmp jb push push test dec cmp sahf lock add jmp loope (bad) mov fsubrl rcrb dec test popf cld push dec in inc repz shll test xor cmpsb sub bound xor adc das add jae mov sub clc iret shr cmc jno lock lock pop sbb push lock add sub insb push movsb (bad) ds push popf vmovss cmp dec mov mov sbb inc jns adc mov shlb xchg movsb test aad outsb pop mov rcrl sbbb stos addl out sub mov pop mov (bad) out mov mov dec jb sbb mov dec cltd mov push xchg add ret xor mov shlb pop and mov inc rclb jno stos mov loop xor xor dec in sub in imul pop jge mov inc cltd out sub loop (bad) fwait es pop setbe mov gs lret inc lea xor (bad) shr shl dec lret shr jle lret lcall jbe aas je jo ret out push inc pop pusha hlt and mulb cmp mov int3 (bad) (bad) fldl lods add scas cmp mov and inc xchg xor jo add aam add testl and imul add aad sbb pusha (bad) rorl pushf lret push adc pop (bad) sbb test mov sbb dec inc loopne mov ljmp dec jmp sbb xchg adc sub push and es inc pop push pop or pop imul mov (bad) jnp dec in ficomp sbb and sub inc cmp lea xor or jl xchg out cmp sbb and movswl xchg test mov in (bad) and pusha xor pushf lret ja or loopne rol call push scas dec xchg lcall pusha xchg cwtl push or push add push lea shl lcall jle inc (bad) ret jle insb lods add ret dec sub push add pop out push pusha (bad) lea dec clc test push sub xchg mov pusha pop out mov lcall cmpsb or ds in out xchg mov adc pusha and or cmp mov or rcll inc pop mov pop dec pop xor pop lahf sbb add push push sbb pop or push cs lcall outsb push mov ljmp sbb or mov sbb (bad) xor ret push rolb fs sub or or xchg daa adc fisttpll add (bad) or jmp call jo mov adc movups imul or fs inc jge mull xchg dec xor fistl loopne jp rclb pop cmpsb popa pusha push fcmovu push aaa inc pop jne stos inc in add int add adc jnp pop fsubrs rcll dec add dec loope in cmp std sbb enter inc aas sarb outsl mov fstpl sar inc mov mov inc push mov in loop mov sar dec cmp (bad) mov roll adc sysret and pop stc adc mov je pop clc or pop ljmp add add rcrb sbb pop xor sub xlat or sub push dec (bad) push inc movb add sub lcall add jge adc jmp fldt adc nop insl hlt enter mov mov cmp (bad) in clc mov sub jmp push sbb push push inc or xchg xor mov add sub loop inc cmp inc add nop out (bad) and lea mov xor xor or jbe in pop cmp adc xchg ja mov fdivs inc or xor push out xchg jo inc push call imul lea jmp insb mov adc pop sbb jecxz mov adc mov scas push pop lea (bad) push out jnp push loop adc out push add add sub (bad) mov sarl add add arpl push add cs loopne gs rclb add mov adc mov add je mov jo fistl add jbe lock ss sub out sbb mov cmp pop lock sub and push dec in and daa jl sti jle (bad) out mov pop pusha adc or push mov cmpsb jmp les mov and cmp out and subl mov cmpsl push mov rcr (bad) lock fdivs pop and (bad) mov add adc lret cltd jns sub sub mov sub sbb stos repnz mov pop push lea inc hlt cmp test mov movsl and push or mov mov push aas mov xor and aad ja mov or testb pusha addr16 testl xor lcall adc and pop jg sub add adc notb mov outsl repnz xor pop pop lods out lea adc jle jmp mov adc cwtl inc insl imul dec roll pop xor stos push or mov and mov pop push push sub sub daa insb cmc mov jecxz int3 out push sub jmp daa add push push sbb add push sbb cs and test jno cmp xchg sub push push push adc sarb xor add adc push adc je in xor nop ds xor roll add add repnz mov (bad) adc rcll jp (bad) jbe loopne mov or shl sar sub stos or dec inc pop clc add arpl gs fsts sbb xor add imul fnstcw push (bad) std or cwtl movsb shl ja lods pop mov sub lahf push sub adc jmp xchg sysenter and rcll add (bad) (bad) xor pusha stos and sbb mov imul out jnp arpl cmp pop pushf add dec mov sti stc add add repnz sub or push add ljmp std add dec cmp xor test je rolb fimull jo xor pop and add xor push imul cmp leave jae xor and and inc adc push or or divl lock imul adc push and pusha fsts (bad) xchg jb test xor mov mov and and xchg jo inc fmulp sbb xchg fnstcw or adc push xor rclb jp and jnp push xor rcr push xor loope std sti out xchg push xchg fadds fsubs cmp add adc lds les adc mov and fadd push pop inc inc and (bad) test inc pusha adc pop loopne neg xor mov adc cs sbb push push or shll xor fsubrp push or dec push or ds ficom sub adc fstps push fimul mov sub pusha sbb and test out push adc jbe in sbb and andb sahf push or rcrb loop dec (bad) pop pop pop sbb std movsl dec sub push and pushl je scas or or inc clc or fsubs cs adc in add sub adc ret adc lcall stos or xor jmp cld jae push ds sti mov imul and popa push mov and and test insb jo scas stos push popa lock and add adc sub pop sbb aaa lret aas or in (bad) mov add push mov mov mov cmp neg ficompl xor scas add and add repnz add enter jo mov mov sub mov lret movsb inc xor sub push loope iret fisubrl inc jge sub mov cmp loope or ljmp stc clc pop rolb pop rclb add dec adc test or sub adc sbb add fwait or push lock sub jne rcrb fs loopne xchg xor stc inc mov inc sar inc mov pusha xor lock mov dec inc cmp aaa scas sub add jecxz sub lcall and add (bad) mov inc dec clc push pop push cmpsb jge pushf pusha lret ljmp rcl mov mov cmpsb mov sub imul shrb sahf and sub js sahf pop pop add add cmc outsb dec xor dec mov imul or in rolb push mov imul test roll inc mov test adc addl xchg fisttp jns pushl sti sar inc and pop sbb call rcll add stos fs (bad) pavgw (bad) es (bad) xor push add jne adc test (bad) cmc test sbb add into mov xchg mov or fisttpl adc notl and xrelease and jo inc adc sbb pop and sbbb test sub aam or fidivl (bad) or lods mov ret dec test xchg int3 add adc and mov fidivrl jl loope xchg xchg arpl add or push dec and daa int3 loop call jp mov dec fucom inc sub fisttpl mov push enter mov and sbb jo push call jl adc add int3 enter mov cpuid push aam cmpsb cli push repz clc push (bad) sbb pop push cltd mov loope pop cli (bad) push add pop js imul dec xlat jns mov push mov pop aaa jb sbb cmpsl mov pop push repz orb dec adc or jp fldcw imul add pop pop jne hlt lret inc push push and fisttpl (bad) or adc or inc aad add and mov add loopne mov xor jne lods repnz (bad) adc pop add loopne iret rolb in aaa push pop mov dec or xchg test mov push sub jge adc and repnz mull stos pop aaa aad mov daa mov mov push loopne push fdivr cltd sub push adc lea pusha test or aam mov or rcrl xor or pop or fs xlat (bad) pop add (bad) aam dec push jecxz mov mov mov int3 add or sbb adc iret dec cs jo mov cli xor nop cmp sub cltd insl icebp sbb xor mov insb sbb sbb mov dec (bad) es popf je jmp into movsb adc fidivrl adc adc es popa jns pop fsubrs lcall pop test sub dec sub mov sub mov add test bound jp jl ds dec mov sbb repnz sbbb inc mov shlb xor imul sub or xlat inc sbb or xor cmp sbb js ret cmp mov in mov sub into or cmc inc movsl adc mov pop add or inc cmp loope sahf movsl cmpsl or and xchg into or dec iret and sahf pop fwait cli adc dec add ljmp and or xchg popf mov add jno jp add mov sbb bound rcrb lret inc inc setb mov and jns or xor add iret and cmp shr dec push outsl ljmp or inc cmp mov pusha sbbb pop repnz inc js add icebp pop loopne mov fldenv loopne into fbstp mov mov push inc sub jb outsb jmp insb pushf aam call xchg fwait mov push sub and add push pop jbe pop push jb aaa push xchg daa jnp out adc xor mov int3 inc push push xor or or sbbl mov nop add jl out add icebp mov jbe fidivrl lret cmp inc cmp adc sbb mov push cs movsb lahf (bad) jmp push or jg add cwtl add lret mov cli dec xor mov sbb in jecxz mov test inc mov adc and loope icebp out add or nop cmp leave fsubrs push mov push cld nop frstor test sbb add fiaddl sbb mov cs adc (bad) cmp mov mov or ds incl add xlat xchg fbld pop sub cmpsb xor rolb loop call es adc jle xchg movsl sahf nop adc sub ss jmp push cmp mov cld push jbe or mov mov xchg xchg push lcall add pusha loopne sarl scas jno addr16 repz pop and add or and wrmsr test (bad) imulb mov rol out outsb incb cmp clc mov cmp inc adc xchg add or lock pop push sbb or dec loop jge das push dec push dec sub loopne add repnz push pop sbb xchg xchg test in push push icebp test outsl pop sub cmp outsl push cmp cld cmpsl mov jp (bad) je adc cmp pop aam inc or add addr16 loope or mov mov mov sub adc lea addr16 inc or jo sahf pusha cmp cmpsl shrl sbb loop scas stc notb sbb push and sbb adc movaps jl push jbe fcoms popf push push fbstp imul and call mov jno cmpsb push mov repz rorl jge xorb inc rolb jge cmp and mov adc jl and mov dec ret adc mov mov lea lret lea mov mov inc ucomiss adc iret adc gs mov add jp in add add (bad) xor sub cmp mov lret adc push push dec pop leave and pop or add xor pop fnsave les jge push or test push lods or stos cmp mov add or scas or pop or or mov xor pop mov mov rcr xchg aas pop adc add xchg pusha push and jnp sub in incl push imul inc aas pop mov xor inc xstore-rng cmpsl (bad) xor adc push cmpsl je pusha or xchg mov roll add and or jge add das push or push sahf inc xor jb push push push adc jp inc das or out repnz xchg dec call pop sbb fs repz aad inc jne sbb jmp mov rcll roll outsb push fcoml aas mov orl mov jg ret sbb (bad) cmc sub cmpsl mov sbb add addr16 push and dec push and icebp add gs ret aas or mov imul xor adc add mov jle adc cltd dec in sub jae ror jns jb stc and cwtl adcb xor cmp adc out xchg dec or cmpsb (bad) sbb push loopne xor xchg or je rolb rclb inc rep lock or or xor dec mov pop or pop mov sbbl pop leave dec pop rorl or mov dec ss dec mov dec cmp into or push inc (bad) jl mov push (bad) ss cmp xor jo or clc movsl inc xchg aad xor dec or add inc mov cltd xchg test sbb and rolb fstl add sub adc push jmp add movsb imul add stos pop mov sbb mov test mov pop push dec call sub mov push lock push movb jp flds sub dec push inc pop cmp xor xchg xor mov sbb cmp sub inc mov leave dec fisttpl xor stc pop je sub pop add (bad) dec or xorb mov and adc mov js lods in cmp push dec cmpl addr16 lock push aam dec push and sbb cltd movsl rorb mov or xchg rcrl lock sbb dec push jbe mov arpl lahf leave or mov aas mov mov testl or mov mov dec outsb sub mov es pop incb xchg inc pop mov xor (bad) outsb shrl and jmp repnz in insl xor xchg dec mov mov mov pop dec and test arpl sub lret add dec pop cmp mov sbb dec push add cmp lret add and add cwtl inc xchg pusha or push push push insl sub js std jmp push dec (bad) bt aaa in push fimul sub nop adc adcb lods inc loop xchg clc pop enter and je push lea rcrl mov jmp jl add or or pop or adc pop mov and and ds decb paddb lock or or cmc inc sub fstl push fisttp or mov fnop xchg add push movl addr16 add or xor xchg fsubs and add push mov inc and jb imul mov inc cwtl sbb (bad) repnz adc mov push mov inc sbb cmpsl or cmp inc je add and test sahf pop outsb mov adc loopne movsl pop bound mov or rcrb xchg subl mov jns dec mov and stos subl fcoml push push mov inc push popa push cmp xor sbb mov lock loope add sub and scas pop or cmp lret pop inc aaa or xchg pop xor clc sub sbb aas dec shlb ret xchg xor pop adc and pushf loopne cld sbb sub fildll pop notb inc pop pop mov add addb and cmp dec (bad) outsl hlt adc push mov lods shrb add and xor and pop int notl lret mov mov shlb dec dec xorl cmp sub jmp cmpsl pop inc and pop mov mov xor inc xor (bad) mov mov pop icebp pop (bad) loope mov adc rcrb sbbb push or andb mov lcall and jecxz mov mov xchg insl add pusha andb jecxz xchg pusha mov ljmp sub ljmp ror adc add add out je (bad) hlt mov js dec push jp ljmp or lret and sbb push mov stc inc xor sbb mov lods jl les sbb mov jecxz mov add mov cmp (bad) jb cmpsl adc xchg add aas es ljmp mov xchg lcall pop rclb mov jp mov jp movsb mov xchg fisttpl sub call or lcall sbb or pop mov fiaddl js xchg and adc nop mov add xor int mov push pusha add xchg or or mov aad out inc sub lods popa mov ds add push je jp mov jl ror gs dec dec mov mov xor fdivl lods mov jae mov xchg jns cmp loopne mov xor push sbb push push inc xor mov sbb add cmp lret pop or mov pop push and inc scas inc lock pop shrb add dec adc mov test mov or jo cld loope movl fs aas lret mov or insl je rclb pop push adc pop sub jge stos jae je and mov push mov test rclb adc movsb dec add imul dec cs jle shl mov inc dec loope enter mov jge (bad) icebp fadds cmp push push adc mov xor test mov stos adc xlat sbb addl jl mov fldt pop pop sbb and test mov sbb lret das pop add or andl xchg shrb jne (bad) or xchg dec in iret gs sbb pop cwtl mov inc adc and add mov sarl xor sub repz jbe insb pop bound sbb mov rcl stos in add sbb mov pop push cmc push or and sbb mov sub adc add outsl pop mov jbe pop test push pop js cmc jno lods test jle add (bad) mov cmpxchg pop push iret inc add inc pop insb pop fstpt es push and les cmp pop clc ffreep or sahf fiadd inc xor or jnp lods push cmp fsubs pop aas sbb sbb cmpsb xchg inc es mov aas add loopne pop lock dec gs sbb lock xor pusha pop test push pop pop push and inc jmp mov ret pop nop push jnp insl add jno lahf sub mov jnp sbb (bad) mov adc and mov inc stc jecxz mov pusha sbb (bad) dec pop push pop xchg cli sub cmpb inc movsl test and pop inc loopne dec sbb outsl sbb (bad) or pop adc mov mov imul pop ss add insb inc mov push mov movsl inc xchg xor dec jae and lea or adc mov xor popf rcrb fmuls fsubrl xchg movsl fiaddl jne pop add iret mov iret inc (bad) lock mov movsl test or imul daa mov xor xlat test sti fnop jo sbb adc int3 pop xor je (bad) or cmpsb sub mov rolb ret pusha jl xor add push enter mov (bad) cmp push dec xchg into popa push add xchg sbb dec fbstp inc shll dec daa shlb and cld mov aad add clc mov cmpsb adc loope insb jne int fs xchg (bad) gs mov push in and and pop das pop jno dec push pop test inc dec data16 lea call popa sbb xor push push addr16 (bad) cli push cltd push dec add dec sbb and aam roll push cmp orl push fiadd in sub xor divb ret xor mov pop adc cmpsl in sub in inc out daa push inc sahf rcl push sbb mov adc andb popa dec mov push cmp sbb or lock adc fildl add xchg and dec inc fstps and or sub cwtl push mov ss dec les (bad) movsb add jl pop push imul mov faddl pop xor repz je sub sub add gs add ret add inc jmp movsb repnz cmp inc outsb les ds pop (bad) push push and xor inc xchg into xchg mov xchg insl xchg pop add ss pop inc decb mov cmp jne xor fimul add adc in lret ret ret cmp ret (bad) and xor push pusha int xor test add mov and add or clc mov lret cwtl or inc jl ret pushl dec add inc cmp dec rorb push mov inc or (bad) rcr push add cmp rcrb push inc dec fs lret addl sbb pop mov cs mov pop pop push adc das shrl pop push inc inc adc sub int (bad) push dec clc jne sub lock loop popa dec add pusha add dec outsl popl mov inc push cmpsb lcall push loop hlt dec inc or adc xchg push std pusha inc imul inc sahf imul and nop sub iret enter and sub jmp loope push leave push or ret or nop or add push das arpl and push sub je stc orl mov sub mov movsl xchg or and xchg pop cmpsl xor and loopne inc nop imul add das insl stos and add jo inc xor (bad) inc xorl dec cmp rcll dec js inc push mov jns fwait lods adc inc dec scas mov add dec or movsl pop inc into andb icebp xchg adcl push add jecxz dec inc push pop daa sub jae adc add sub orl or adc lcall sub pop sbb jecxz sub add rorl and scas or add outsl lahf testb adc push incb ss cmp ljmp int cmp mov xchg push xchg sub xchg nop loope inc bound add out ljmp (bad) xor jmp ror leave outsb adc pop push fdivrs cli mov mov pusha fs out xchg dec ljmp add xchg dec or fs xor xchg mov loop ret pop fcomps push pop rorl cmpsb sub stos xor das or sbb mov jo xor call pop add inc jns je nop les adc dec mov or jmp inc mov (bad) jecxz pause nop adc test loopne aam or push xchg sub and inc leave dec lahf or cld push sbb not (bad) call test ret test test fdiv cmp loop cmpsl add sub jne sbb sbb adc sbb mov add lock push jle repz pop ret and mov cmpsl repz pop sbb (bad) xor (bad) jge testb jne inc mov fsubrs les je dec or rorb inc or in xchg and xchg int3 roll wrmsr das mov add movsb lret and ret movsb sbb sbb imul addr16 sub add jae cmp sbb sti dec movups dec push jb xchg cmp or flds lds mov add icebp adc mov or fs adc dec stos mov push fs add scas mov stos neg lret ret or pop inc lahf lea shll (bad) mov outsb xor cmp rclb mov add sbb add jle dec sub adc or add cli pop stc or and sub adc enter adc sub or xchg mov inc mov lods jne push xor dec adc out (bad) sbb xchg mov xchg push adc adc pop in jb out dec mov sahf add cmp add push and loopne pop leave jbe and outsl jbe insb xor xchg inc sbb dec pushf xchg push xchg or pop push sahf push xchg and inc inc leave xor dec jae inc dec xor enter push ds add xor add and xchg adc imul jge jp,pt daa push cli addr16 sub out push mov xchg xchg pop sbb push and push push xchg and test addb pusha mov mov ror rcrl stos add test mov iret clc or (bad) dec push arpl pop sbb popa pusha push jo (bad) (bad) push sbb sbb lcall push orb mov (bad) push add push insl xor jno pop jns aam sarb cmc cld mov or xchg sub les std test out or fcmove push dec jl ret xchg fcmovb pusha mov adc iret dec or pop iret lods xor and pop popa pop adc int or call adcl mov push mov (bad) rorl push cmp dec sub push out pop xchg popa mov push xor xchg inc xchg mov or push mov inc xorl inc inc ror xor mov lahf imul add mov mov fist js or lock and xchg nop cltd or xor in les sbb stos and mov nop cld sbb nop popl dec pop lods adc mov (bad) mov add xchg sub lahf testb add ds xchg (bad) aas mov insb imul stos inc repz sarl pop dec aas inc xchg dec mov or adc pop adcl int3 js or and test sbb andl pop push dec mov das (bad) or pop push cmp cmp or sub daa (bad) rol sub test sub push cmp fs pushf jns jns cmp and dec mov sbbb sub sbb pop inc add jecxz (bad) aam and mov or jbe (bad) adc pop push test dec push repnz push dec inc repnz push leave add inc test daa xchg sbb enter mov inc mov ds or xor insl das inc dec push lahf add jp jp mov lea xchg daa xchg jne cmp xchg dec stos jg movsb cmp add mov mov nop test xchg pop aad fidivrl jp fcomps push push stc xchg adc repz hlt cmc mulb push idiv stc nop inc push sbb sti cld push push sbb incl mov dec inc dec inc addr16 xchg dec mov cmp es cmp ss push rcll pop inc jecxz adc cli ja mulb cs push pop or sbb (bad) fist inc add shlb call sub push add mov or pusha push aaa movsb dec adc xor or jmp ret rol add push test cmp inc add subl inc mov cmp adc jecxz ret test ret es (bad) dec (bad) push pop mov and or adcb sbb cmpsl and cmpsl and bound imull or adc psrld dec push and add and add sbb add mov xchg dec add mov stc push cltd mov (bad) (bad) jmp or outsl xchg in inc pop add lock inc test or outsl adc ret cmpsb sub dec dec dec orl sub and dec inc movl add sub dec mov push dec mov sub dec orl dec mov xor sbb inc scas js or push mov mov leave push xchg and inc dec mov and pop fild xor pop out int3 cli add data16 cmpsl stc push mov out sub lods xor cmpsl stc sub lret add cmpsl stc ficompl fist mov and xor out and cmp cli sbb subb dec lods mov sub add sbb xor cmpsb sbb sbb inc pop stc es cmp xor sub jmp scas inc (bad) shrb (bad) push fcmovb jbe add int xchg inc mov mov xor fwait mov movsb push xchg insb das jge loopne rolb inc push hlt pop test rclb jno gs mov dec add add test shlb add je fdivs and xorl dec popl push inc sarl dec sbb test xor popf fs and add cmp es cmp pushf adc pop sub dec pop sub ret inc lods ja dec push mov xchg addb aam mov sbb andb insb (bad) popa adc push jmp fnstcw push pop ds xor pop les aaa in movsl or xor fisttpll sbb xor and sahf add mov nop lcall mov mov bound jl arpl clc jnp add imul push mov call xor mov add shll dec sub xor or mov or sbb enter adc xor ss pop out dec pushf and sub das xchg adc mov jl insb test push ja add jg xor dec or lcall and stos xlat push mov test movsb xchg and adc xorb sti lahf dec mov jle jae xor das rclb add icebp adc dec sahf inc sbb (bad) sub sarl xor cmp dec test pop add call add ds into clc push test xchg clc pop rcrl push mov (bad) mov mov add add xchg push outsb xchg test lret sti mov out sub cmp push cmp pop or loop or lock lea in cmpb mov cmpb or add lahf pop add scas les fsubrp or (bad) test stos pop (bad) nop push pop lahf loopne sbb negb push rcrb pop nop add aam mov xchg and pcmpgtd imul imul (bad) add rcpps ficompl add lods sub rcr dec fistpl inc pop sarl jl push pop xor inc fisubl cli cmp or insl enter syscall mov jb and inc lods and dec add mov (bad) (bad) push adc xchg cs pop jb rolb das sub adc adc insl ret ret mov jle or jmp push dec arpl and mov addr16 sahf pop mov stc mov sbb inc dec jno out (bad) bound mov mov test push and xor pop jg mov xor mov or out add cmp jbe aas roll lret stos mov bound sub mov lahf add popa add sub mov dec or (bad) shlb add adc cli mov mov cmpl add bound mov repnz call mov adc jl sub mov mov pop or xor jns lods adc enter add orl fadds cmp inc cltd and sbb xor mov add mov mov jl rcrl sbb cmp mov dec push mov push push push cwtl xchg mov push jne xor adc dec sti cmc cmp test mov jmp sbb push pusha popa add cmp pop and sub and xchg popf mov in pop sub sub mov and mov mov outsl mov add (bad) jae pushf cmp or mov es pop adc inc xor adc addl push add pop pop out jmp clc and in or dec xor sbb je or or and and lods dec sbbl mov es ljmp add or push mov popa (bad) popf mov pop mov push lahf xchg and sahf into sbb push and test dec jecxz and ret xor pop jbe mov or mov sub push stc lods nop cs scas jecxz dec daa movb jne xor mov pop rclb and adc lods lret or adc into adc sarb adc pop enter and test test inc movsl test sahf sbb pop enter mov push pop and sbb lret int mov push outsl dec or addr16 sub cltd pop add or and adc or inc dec mov fsubs out jmp js sahf or or mov dec test (bad) js pop test lods (bad) icebp cmp ss fwait lock sbb jl or pusha shlb loop dec ja fstpl das pop or imul insb sarl repz adc cmp pop outsl pop inc (bad) xor and push ret es test fcomps jno inc ss lods in push sarb push push push aam sbb shlb cwtl outsb jb push lret sbb push push cwtl mov inc or inc or imul inc pusha pop (bad) xlat movsb sbb adc xchg nop cmp test in mov dec xchg fcom pop pop pop mov andb inc xchg cltd call xor das jns push xor imul jnp sbb adc jno mov add xor testl mov push out xor aad inc gs push pop rolb push icebp ja rcrb push add add sbb test sbb adc mov xchg dec out sub push or in mov inc out sbb jp shlb outsb jnp jbe pop mov mov or fsubrs or cld out add add out mov jae pop mov ds sti lret (bad) dec mov adc test imul jg push sub pop push push push int pop movsb sbb sbb fistl faddl sahf sahf test pop into jo push rcll js jnp ret or fs pop ret add and lcall popa sub pushf cmpsl loop xor pop pop mov andl push mov mov aam (bad) jge int3 xchg enter dec adc addb push xchg sarb adc inc pop inc jl mov pop dec fiaddl in sbb xchg jmp add mov inc jmpw xor push or adc mov les cs outsl xor (bad) (bad) lcall sub push insb fist call movsl lock push lea aam pop and popa inc je lret pop and divl (bad) pop push insl sub movsl sti jae jb sub das mov fstps mov je cmp push sub fisttpl in sub sarb inc cwtl loope xchg mov push sub mov adc and js mov push inc hlt adc pop sub dec test repz es and push (bad) or mov icebp lcall in push mov add jns sbb xchg jbe or adc out in mov add mov adc into cs cmp mov and cli push jl (bad) xor jl or pusha cld dec out push cld fsts stos cmpsl mov mov xor add movsl mov mov mov arpl jbe cmp pop push cli mov (bad) push repz lods dec push pop push sbb mov pop ret test lea (bad) or outsb adc dec add nop mov loopne inc jecxz es push popf mov fsubrs pop add movl mov and adc pop adc nop lea mov rol jmp stos or test adc jge add add adc fmull and add adc or adc push sbb add sub sbb xorl popa jno mov inc stos xor mov dec jae jns adc pop (bad) xchg and sarl sbb in (bad) mov ljmp mov sbb scas sbb dec lret cmp stc jae add add sar je movsbl lea mov (bad) mov inc mov inc push sub push jmp jecxz ds out xchg bound lods cmp mov (bad) jns push fadds imul xchg pop adc cs sti push xor push inc adc inc sbb stos push (bad) out push scas or xchg push imul or loopne pop jbe ljmp xlat xchg lea loopne push pop jno adc xchg (bad) scas pop stos fstps dec mov pop and outsw out push dec or sbb mov xor push push fcompl rclb arpl dec add push leave sbb add roll cli lret lret add mov jecxz add and push pop push mov icebp (bad) ss enter lock pop nop push decl cmp (bad) xchg rolb insl or dec imul std add adc add pop cmp adc sbb and mov cwtl pop pop outsb fdivrs push jle and fmull mov enter ror push inc loop in push dec sub mov and xchg mov insb sahf cmp xchg hlt fistl and lcall and cmp unpckhps lahf and dec subl add jae cmp pop popf push sbb mov mov mov inc mov add and sbb in cmp cmp arpl cmc sti icebp cwtl call push repz mov rorl bound xchg je push sbb adc icebp ficompl pop push pop insl xor int3 xor sbb inc add call add add repnz mov or mov mov mov pop cmp out xor fnsave mov cmp jecxz add cmp push xor sbb ds add push mov je lds add mov aas arpl dec jnp pop cmp adc sub mov push jae and jp sub cmp aam fwait lcall ret adc mov mov pop and add xchg nop inc mov push push enter push fmull push sbb mov and cmp rolb test and popa loop xchg xchg and mov mov mov xor or enter pop mov sarl pop cmpl je or xchg aam bound push rcrb clc test jae (bad) loopne outsb adc nop push xchg ret jo (bad) enter xor adc and and sub aaa nop and and push add inc xor cmp fdivs lods pop dec ds or inc cmp or adc mov mov aas or push out pop cmp add addr16 push add lret xchg or jb sub sbb lock xchg outsl add adc in scas test mov lea addl insl pop inc jle test add push jne mov aad push test (bad) mov sub call mov clc push cld es jp push jae fsub xor pop xchg movsl and push push push cmp jb stos and mov sahf xchg sub push jge jb inc pop jno push insl in out and imul xchg sarb add (bad) shr add sbb outsb sbb xchg icebp sub push jle test aas push xchg or dec ret incl cmp arpl or out shrl cs mov (bad) push xor fnsave sub sub push cmpsb iret es push lea sbb mov dec dec or jo pop out adcb insb int3 in lret enter imul jno cwtl mov pushf jg enter (bad) mov enter (bad) and xor push insl sbb mov add push dec pop insl fdivrl decb jge test or or xchg mov clc inc movsl cmp call mov xchg lods cmp lods and ljmp pop inc cs or push xchg inc add pop sbb adc fs push pop add bound arpl xlat xchg (bad) dec dec adc pop ds outsl mov pop and call inc insl cmp fs insl dec pop add push xor lea mov (bad) push cmp or test sahf in clc inc push and push jbe clc dec xchg loop jl push sbb orl pusha lods adc arpl sbb mov push mov call push jg push into (bad) push repnz adc lcall add icebp mov pusha and sti jge ret or shl call aaa mov mov aam cmp mov testb jo and push inc lods stc sbb lea in sbb inc test push idivl (bad) fdivs test push es jne addb jb pop stc mov pushf cmp in or leave add add pop daa xor pop add inc push fdiv push fs mul push push push push les pop adc cmp xchg sub aam js add mov into lret sbb rclb xchg ret dec pop rol rolb adc cmp shrl push push mov mov repnz jl cmp mov mov dec add cmp pop pop sbb push adc pop cmpsl out dec dec andb mov (bad) and and push mov fiaddl fiadd sub cltd push jle gs push ret or adc or jmp sbb (bad) aaa cmp inc xchg sub lea mov int sbb push xchg inc lock add inc negb test mov loopne jp rclb cltd push mov jmp enter imul cmpl icebp mov dec lods ret mov jae test je push mov dec xchg or push test rcll loopne add add dec jle (bad) dec inc sahf inc sahf push je fsubrs dec inc mov dec and dec xchg scas in push jne push je or test and push jbe add inc adc sbb sub mov inc or rclb pop adc or inc or and es add ds mov fbld pop pop loop,pt test push test dec mov (bad) ja in dec adc jp fmull sbb mov movsl dec add jo ficoml test inc (bad) cltd and and pop inc xlat (bad) outsb push sar push jle mov jmp push add sub cmp cmp sub dec rcl ja push rcll xchg lock popf outsb adc sbb push cmp and sub aas sarl test gs pop push cld roll xchg fild adc mov push jecxz jp push push test aad or push (bad) rcrl dec mov dec shrl pop mov mov fcomps mov repnz dec jmp lret imul inc inc dec add push jle cwtl ffree lock fs leave in sbb adc lahf inc add xchg subb pop mov ljmp sbb aas push fdivp push sbb inc cli inc dec fbstp inc or ss push inc js mov daa (bad) mov pushw push lds adc lcall sbb inc sub imul arpl xor mov mov mov (bad) les sbb or jno or mov mov xchg sub ljmp je dec dec test rcll cmpsb cli cmp xor xchg in add pop xchg add adc cmp test sbb xor jmp jp dec out cmpl inc std dec add and sbb inc adc cmp mov jb incb leave ret (bad) cmp push push cmp push cmp lahf jg pop add cmp jecxz dec dec add inc push pop cmp mov std sbb fistp push popf test aas or (bad) add loop sub xor add and push jp adc cmpsb jne scas addb mov movsl cmp push push movsb pop test mov pop push mov xchg push nop mov dec or inc jl add jg add jl pop fldt cmovbe cmpsl dec inc xor enter mov nop mov sub sub jne and pop daa or cs shr shrb (bad) les pop idivb js scas and cmp mov arpl pop lret and dec or repnz movsl cs lods xor les or push xor roll mov rcr mov mov dec adc (bad) xor pop mov (bad) mov sub cmpsb imul mov lcall push lea test push mov inc loopne ds mov and inc movsl ds movsb add cmp inc (bad) push lea xor mov stc mov jl pop pop aad loopne pop or mov push cmp pop jg pop mov arpl push jg jge rorb and rcl or ficoml sti or lea or iret pop movsb push in dec xor add dec in add test and pop dec xchg mov and decl xchg scas js or pop and adc mov mov xchg inc cmp xchg dec or adc mov ss mov pop xor mov outsb add divl (bad) pushf or aas or sbb std and ss and adc add cmp inc push inc imul (bad) pusha pop mov aaa pop add sub popa cmp aas pop sub je dec pop dec pusha inc dec adc rcrb or and fs mov icebp pop mov or sub or jle cli mov jl je dec adc dec inc ja loope pop xor mov xor in xchg cmp loope mov aaa mov jo daa fidivrl jne xor add sbb inc or (bad) jge sbb dec gs add add popa loope cltd cmp pop mov lcall push mov sub add xor mov add mov clc ss xor cmpl (bad) push xchg inc ss pop lea adc sub dec in mov jg mov mov sti mov icebp sub imul sub mov adc push jmp push push mov xchg xchg pop dec sbb sbb je and xor xor mov cltd sbb sbb pop pop sbb xor push or inc inc sbbl xorl and and cmp sub pushf jae lods add push pop inc sbbl jge nop xchg lods popa jno int lea cs movsl sbb pop test sbb adc jb (bad) inc pusha jns xchg inc imul pop insl or or in xchg and sbb pop adc and lds or daa sub or xor mov out push icebp inc sarb sahf jns cmp push fildll push ss js push sbb cmp outsb rclb bnd adc jns prefetchnta sbb imul pusha pusha sbb push loope add mov leave or add jns adc lods leave xchg dec pop out lea mov jmp push inc movsb inc jbe xchg rorb faddp push in push inc push jnp jo inc sysenter add out or pusha xor movsl and enter or pushf or xor adc leave and adcl sbb in roll mov push fidivr dec (bad) or in cwtl jo stc ds jp push inc mov imul jl sbb push lret adc mov xor cmp les add (bad) shl add mov pushf sbb loopne xchg add int3 movsb sbb (bad) inc fisubl cwtl sub jbe rorb adc gs ffree pop mov mov movb pop jnp movb jnp xchg cvttps2pi push xchg push sbbl dec or cmp call outsl mov push adc pusha cmpsl popa pop retw rcrb xor mov cmpsl ljmp add cvtps2pd clc cld das sbb pop addr16 pop test imul adc js add cmc adc jmp (bad) jge add sub dec jns adc push sbb add test and or add push cmp pop or movb jne (bad) ffree mov xchg inc sbb (bad) pushf call dec mov lea mov and sub mov ret xor js mov push test inc add call cmpb stos adc xor (bad) icebp faddl jmp je in mov mov mov jecxz call dec daa fildll or dec imul (bad) cmp cs inc add andl pop scas movsl xchg xor icebp and push cmp fcoms sbb push loopne push xchg xchg pop cmp adc lret sub mov movb cmpb ja dec adc cmc mov add mov inc aaa or sti push push xchg jmp dec bnd dec add xchg mov sbb lret shr inc pushf ss sahf ja jae imul push insl mov aad jbe ds lea bound sbb jne jo (bad) cmp and dec bts into xchg les inc mov pop dec xor ja xchg xor test jo pushfw cmp out int3 cmp int adc sub setg sbb fcomp pusha adc std imul imul inc xchg xchg xor scas addb xor push mov or push test sbb push movsb dec loop cmc (bad) fisubl (bad) je adc inc mov jne xor sbb sub imul mov adc repnz sub cli enter enter pop rcrl sbb jns shrb inc (bad) stos loope xor jne jnp inc out sbb sub dec add sbb (bad) fisub pop pop or or fstpl rorb int3 lea mov inc pop push cmp test je mov adc dec cld pop popf dec mov cli jb popw cmp or lea mov dec stos mov jmp inc jne sub inc add add fiaddl add mov in into push and fbld in dec mov imul cmp jg add dec sbb push mov loope fstpt rcll jle adc xor cmp into dec mov pop xchg scas mov add test (bad) js je rolb test push nop xor cmpsl xchg or test pop enter cwtl call xor ret loopne add cmp pop adc xchg jo pushf sbb adc mov xchg popa js addb push cmc cmp mov mov or pushl lods add pop or rcrl jne in adc add inc mov pop xchg push scas dec jne add lods jns cmp or inc cmp add popf push rolb adc inc arpl cmp jg call dec int (bad) aam lods sbb mov adc roll cli or pop sbb push (bad) enter cld nop stc fildll mov lcall dec repnz leave gs add scas or push incl lea cmp and (bad) lods and cmp dec daa xorl divl leave inc inc lds push cmpsl jg (bad) xor test iret jne lea and (bad) pop fwait nop subl in push jle mov pop push pop movsb dec jmp sbb jns sbb jmp loop xchg jmp lcall sub sub bound ret pop push xor lea into pop out adcb or ficom or pop je xchg xchg add (bad) sbb rorl loopne jnp mov rcll imul in or out fmull or daa cli ja mov data16 es pop (bad) adc sarb pop cwtl xor idiv xchg les jne movzwl push cltd pop idiv int cmpps mov (bad) outsb pop jge sbb dec shrb (bad) jmp andl mov push mov mov dec stos (bad) lea sub adc inc adc push add sbb mov in nop adc lcall insb mov in inc pop andl jp pop mov insl adc jmp jne dec movsb iret push cmp mov jl add inc adc sbb cmp sub (bad) xchg or sbb mov mov pop fildl pop and insl adc movsl mov sbb fcom xor and ss les fldl push js dec mov stos add mov popf les jbe push mov jmp push dec faddl lcall addr16 and pop push cwtl clc in fstl icebp insl or inc sarl ds pop fs je out shrb mov pop mov (bad) int xchg dec push inc mov cmp hlt mov idiv mov pop fldt inc jmp adc xor in in rol mov cmp cmp mov fs mov (bad) clc mov push mov popa lcall popa ret sbb hlt push insl mov rorb pop sbb sub cmp loop repz cmp movl pop jnp push pop (bad) in (bad) rcrb add mov inc adc rcrl sti popa add jle dec inc cli add (bad) cs test or push mov out inc (bad) dec jnp sub adc cmpsb movsl fwait mov or or add (bad) push jo jmp sbb mov sbb fildll lock mov or iret xchg in leave clc mull and sub sub mov adc fcmovne inc inc and adcl stc fsubl decb dec add pop adc aas adc mov fxam sub aaa and jmp and inc rcr inc dec mov outsl adc add or pop sahf add pop add pop dec or pop add bound ror es cmp xchg sub movsl xchg and xor add cmp pop ljmp add fcoml xchg sub pusha push lods dec lock mov in adc fidivr hlt dec push jo push add call jns out loopne fmull push sub outsb adc mov dec dec mov or aaa fsubp sub outsb xor lock loop push or or or or in or or fdiv push mov mov andl lcall add je data16 or or dec mov popa mov insb pop push jne imul pop dec (bad) fcomi add xchg js jbe in je pop clc fldl and sbb add jle nop jae push pushl add mov sbb adc xor addl lret inc jae outsl data16 adc adc cmp push clc dec andb cs loop or pop movsl sbb lahf adc cltd fwait dec sbb add fiaddl dec daa mov xchg inc jo notl xchg in sub cltd pushf inc jmp pop cltd and loope push mov xor adc insl lret cmc jae pop jno int3 shrb mov in push add add pop adc xor mov and inc xor dec and jmp or (bad) movsl mov adc outsb and inc (bad) sub imul jl push pop inc xchg sub sbb xchg (bad) icebp or and and lea adc daa (bad) bound push inc lcall mov insb dec in je outsb push rcl and push or in dec xor or xor (bad) clc mov sbb jg je push push jb cmp push and sbb (bad) jae lock or mov sbb xchg dec (bad) enter adc mov add or ret out popf mov push add gs mov sub outsb jle or add xchg sbb jge clc push inc add stos or sbb lock sub xor mov push scas les jp xchg xchg ficomp jle fsubs jge pop (bad) dec outsb mov lock daa fnop jb scas sahf (bad) out xor inc xor shrb or pop mov js fldenv aam cmpl jb mov and pushf inc push pop add mov or loop lea lcall movsl add movsl pop ret add jb sub in pusha lock adc ret and push (bad) js std cmpsb jo cmc stos xchg push pop or push int3 or ljmp les jb mov adc sub inc or loope cltd mov aaa add movl loopne in movsl mov cmc or pop sbb cwtl sub inc push test (bad) xor aaa cwtl and cmp add pop jmp or sub vmwrite lcall in aam adc dec flds shlb sbb movb ret xlat mov xor jo dec lcall loop mov add sub sbb nop (bad) out inc data16 pop and or adc push or (bad) or add loopne sbb aaa add jno lds add jge icebp fldcw push mov lock inc push sbbl add add test pushl popf mov sub (bad) jne sbb mov or sbb pop cmpsl xchg pushf js clc movsb mov pop fidiv cmp (bad) notb pop jne jle insl das push cmp jbe push add mov enter inc lock lock jp add hlt xchg aad sub das div cmpsb stos and aam andb popf push dec lods mov pop sbb add icebp push mov and rcrl ret push (bad) xor xchg test xor adc fs sbb les dec call mov decl cld mov pop rolb pop add push adc test xor mov or adc jg pushw cmp xchg adc lods (bad) test cmp or cs pop dec jbe cmp or fs xor mov mov pop sbb inc ucomiss sub shrb dec mov or lock dec lock adc mov inc loope into subb push xor leave mov mov jo or test aas das dec lock mov das ja adc fstl jb mov adc daa aam sbb es lea lods popa push pop adc and fnsave adc rorb sbb lea push push nop imul pop shrb inc mov pop js mov mov es cmp sub xlat cs xchg icebp mov addr16 aad or popf push xor or or in loopne sbb jae sbbl mov add sub add cmp push loope in jle fimull xor dec stos lea clc pusha lahf push mov jmp scas cmp outsb gs push ret push sbb mov icebp xor push and jno mov mov stos adc cmpsl sbb push roll adc mov fdivrl push stos in mov subl std sub lea push ja xor ss nop sub xor push adc add push add mov hlt shlb sub mov pop push jbe push xchg sbb push nop xor sub out fcmovnb sbb fmull push mov cmpsb dec rcrl pop mov mov nop add add inc sbb lret xchg mov ljmp movsb adc push add aaa or add pusha inc add imul mov (bad) mov mov push jno sbb push sub mov bound mov mov inc fldcw inc mov pop call (bad) push xchg mov or or inc inc and (bad) sarl nop mov adc sbb fldl xchg pop lahf mov add sbb add mul sub lods cmpsl loopne xchg cmp pop add popa mov sbb push or adcl movsb mov (bad) inc rolb push jecxz cld add jmp push pop mov insl jnp jno lahf mov push jge insb jl jne mov outsb adc mov mov cwtl add jo les xor mov mov sub cmpsl cmp lret into xor imul mov and mov loop enter jno sbb mov dec imull adc mov lods push jns sbb mov mov gs sub test mov outsb add pop icebp fcoms mov cmp addw inc call mov inc mov or int3 sahf negb mov rolb fcomi frstor dec fyl2x dec pop or and add (bad) pushf fs outsl enter lea cld sub cmp addr16 adc pop clc aas pop sbb or or inc jmp faddp pop repz jae and lock pop pop test push and mov mov pop dec imul mov and fnop and mov mov push in outsb cmp dec pop fsave adc inc add aas dec pop frstor fldl adc outsl loopne dec jmp stos adc xchg testl fldl mov cld loope cmp insb xor in pop imull pop mov fldt je in mov cmp and idivb jmp fld1 mov int daa dec or leave ljmp lods adc dec cmp rcr fcomp (bad) ss ljmp imul and inc sub fldenv add ret insb adc bound lock sbb sarl fs mov cmp aam xor fldl stos orl cmp in je pop fcom iret sbb pop jle jo push imulb inc cmpsb inc xor inc loopne adc push dec pusha imul jge mov scas scas sbb push push div or out lods add in loopne add imul xorl js lods inc or adc sbb mov sbb sbb xor mulb clc in es cmpsl pop cld cwtl mov xchg sub mov adc mov je aas in hlt add clc jmp sub out flds cmp inc push or ret push jno adc data16 fidivrl cmp ja lcall test pop pop pop leave xor lds ss pop shlb push daa push sub icebp test push add stc mov or jo xor pop jmp mov int jmp push fcompl lahf lcall and in push jge and xchg inc jno add sarb fwait inc bound sub in cmp adc inc (bad) (bad) jg adc enter rol mov xchg add jle ss pop dec pop je les loopne js xor aad mov cmc pop mov and gs fxch jne idivl sbb (bad) fldl repnz inc push (bad) sbb xor or loopne stc addr16 lods xor or or inc int mov out push les push push and mov js xor pop aam je outsb sbb xor push test lret enter test mov xchg dec adc jecxz fdivr mov add cmp pop cs cmp mov icebp (bad) ror or mov xor andl adc out adc inc ljmp stc mov sbb sub mov jmp pop scas int mov add sbb adc xor inc jne jmp rolb cld (bad) imul insl cltd inc push loop pop mov mov insl scas rorb sahf cld sahf mov sbb pop mov xor mov adc or fdivr dec push les ret (bad) repz adc mov xor dec adc cwtl inc in xchg loopne and rorl out mov cmp and sti jno cmp rcll sahf pop jo jo pop insl jo dec jo xor lock fsubl push xor sbb push dec fldt add hlt clc and lock cmp push inc int3 push loope or aam adc pushl and enter push push or jnp fsubs fcomps ret push addr16 mov loopne mov adc pusha sub rcr or ficoml adc mov xor adc jmp pop adc es scas push hlt mov scas imul pop add imul push (bad) ja pop fwait jp or jl incl jl dec push cmp dec lea cmp push std data16 add add imul dec push cld pop adc nop mov add inc or rcr popf and popl es jecxz cmp adc call mov scas imull xchg adc movsl add lods add push xor mov les outsl cmp sub sub ljmp mov add adc or pop mov loopne std loop sub push adc ret popl pushf fwait push jle jns (bad) jne aas nop xchg jp or push into xchg push push mov and jmp adc dec lods adc xor in pop loope pop or mov adc jle movzbl sub dec sub lret test lods inc (bad) add scas inc mov rolb test (bad) push (bad) ljmp or xor pop fstpt xchg or sub inc sub pushf mov jne pop xor xchg cmp add orl movsb icebp sub lea rcll ja jmp cmp ret jne aaa xchg (bad) lretw mov ret push sub xor xor in test lea stos and fwait insb lock push (bad) movsb repnz xchg push es stos lock adc xchg out insl mov shl fs or (bad) mov jmp adc insl mov pop rorl push xlat cs daa inc popa gs xchg sbb mov cmpsl (bad) adc out cmp pop xchg mov push add loope roll movsl sbb cmp add xor add cli push scas inc enter pop rorl dec dec int3 roll (bad) and add insb add push jbe (bad) arpl push gs jns mov xor mov or push ret repz push add sub xchg and inc mov mov push pop and mov sahf insl mov mov sub test daa pop and add push sar ret in (bad) cmp push mov mov add add push adc jmp (bad) testb cmpb (bad) jmp mov xor sbb dec sub mov sbb repz js cmp and mov jmp and jnp adc pop or jo mov or jmp movzwl mov lds xor or mov xchg fwait dec adcl andl push cmpb jmp hlt jnp lcall jl xor or jmp adc sub or mov adc (bad) repnz jo xchg lcall lock jle inc in sub and mov sub add add or sbb ds cmpsb les and inc ss adc jne mov pop jno pushf adc push rcrl or jl push daa pop cmp shr rcr or sbb lock mov add jle movsb out (bad) jb cmp or aaa xor jle jbe dec cwtl mov dec dec fsub sbb push (bad) xchg sbb pop or sbb mov and xchg adc icebp xor push pop sbb pop outsl dec mov ret jns jmp mov or (bad) stos iret inc popa enter pop mov addr16 or sbb xor or lcall pop aas jno popa dec les rorl add push add dec push or (bad) bound sbb sub adc addl (bad) and jmp jae shrb test cmp push nop push in lret lods push rcrb es and xchg imul or lods adc xchg lea dec add movsl imul fiadd inc jg dec or repz repz xor and adc lods mov mov sbb out sahf call hlt jle out hlt clc clc cld cld lea dec (bad) mov mov loope push jl xor lret mov sub fcmovnb push sbbl push lea jl adc jmp into mov out lock neg adc mov xchg stc sub lret pop or mov sub push fiaddl je and dec mov lods mov aas jmp out add add (bad) loop cs dec dec push jnp pushf cmpsb pop add mov mov iret jnp movsb or push mov (bad) iret mov repz aam int3 das sbb cmp repz sbb adc cmp repz or popf and iret add aas add inc sub scas or push sbb and pop shll push aas or cmp jg mov or lcall push adc mov shrb push je (bad) xor push sub mov xlat (bad) fucomip push push sub cmp xchg aas sbb sbb jl pop or adc decl push jmp add faddl fwait ror cmp add sub mov mov mov dec inc and clc sbb in in cmc (bad) aad adc cmp jae or jae shrd shr ret lock shr pop add decb add sbb push push push add into pop push pop pop imul mov inc loopne cmp (bad) outsb outsb push into jle and jle jae loop sbb ret aaa push push push rcrb rclb mov (bad) sbb cmp enter stos dec mov sar mov loope dec clc lcall jne mov jmp out sub xchg and scas sbb loopne test notl out jo sbb rcrb fstpt mov sbb lret sub (bad) mov push xchg (bad) dec fcmovnbe (bad) je xchg jne jmp clc inc dec inc dec les inc test aas jne pop cmp insb adc je inc cmp dec push test inc adc pop and into jae adc pop mov jne xor dec sub mov cwtl (bad) scas sbbl xor xchg or sub mov pushl fmuls sbb adc repnz jnp sahf in cmpsl fimull or rorl pusha jne add test pop adc and lods mov mov scas cmp out pop lret xchg out cmc inc test inc movsb scas push sbb push lods inc imul sahf aam arpl or or mov xchg jo rorl lods fs fmuls pop movsl rorl popa test cmp cwtl inc repz ss cmp or adc and mov lret andl pop push jne je sbb adc or adc sti loope pusha cmp or inc std pop mov sub sbb out insl jmp loopne and jae push inc pop lods mov arpl ja and pop or xor lahf ljmp lock jmp sub lock pop add and push jae lea ret cmp adcl out pop loopne and dec fcoms sbb dec mull aam sub inc ret inc pop add je (bad) in pop mov sbb dec push fldenv push test and aad or sbb jo mov sahf and (bad) push fnstenv cmp jl cmp lods xor (bad) shrb mov imul inc sahf push add in inc dec orl mov lock inc cmp jnp sbb cmp (bad) adc pop push aad cmpsb std outsb mov ja sub xlat rcrb pop stos mov inc sahf or xor enter mov cld sbb ja aam adc pop mov pop mov add fstl cmc jae push cmp repnz arpl test dec push in mov popa sub mov and movsl add dec add add out scas jne dec imul dec ret loop jmp (bad) jne push fdivl lock xor jg jle movsl hlt jb adc and or and pop sub mov xor je mov or push dec pushf adc xor adc lds fistpl jo dec xlat je adc outsl add adc ja cmp jp loopne mov call ljmp jge leave jge pop add loopne test test jmp daa adc or inc dec add add jo pop or sbb mov loopne dec out dec mov add xchg sbb push xor stos hlt test shrd jmp sbb push sub rcrl stos push jno inc mov bound imul mov inc cmp je xor inc adc push push or out push test lock lea mov test je sbb (bad) push cmp jne mov bound mov lahf std xor fucomip mov push pop rorl lea sbb (bad) or ret dec xchg (bad) loope (bad) dec push push sbb mov and outsb fcos aas testl je cmp ja push mov push in (bad) or call dec cmp call out les fnstcw sbb jmp push outsl add mov movsb and xor iret fs xchg rcr sub ss test lcall je iret lcall in or push pop dec cmp mul adc mov mov icebp mov lret jle xor dec xor out sub mov and or je xor mov pop cld ret add cld cmp je outsb insb fdivl iret repz ret and faddl out dec pusha aas aam xchg pop arpl outsb or (bad) push sub cld pop outsl and inc neg dec mov mov mov std adc pop je (bad) xor (bad) cld add xor in jmp (bad) push sub lock xchg push loope adc cli cltd (bad) mov xchg test jl jmp cli inc jne jb (bad) inc push or add data16 cltd (bad) dec enter or add add sub dec cmp or pop lea push (bad) aaa ret lea push rep test mov sub push and fcom mov mov add icebp add push xchg hlt mov push sbb jb push adc jecxz mov test setp inc jmp mov inc adc inc push mov pop shl dec (bad) jne andb inc xchg test sbb and ret je cmp xor daa setns dec pop iret sbb adc push mov dec je arpl lret jbe jb cmp sub or repnz xor notb xchg cmpsb xchg stos fwait xchg (bad) sub jp cld push and jmp sbb adcl cmp roll aaa xor mov mov mov cli cmp mov daa sti ja adc inc and xor or ret jbe sub mov in dec aad cmp repnz mov pop push dec jne adc jmp adc pop inc jl nop lcall sbb jbe mov dec xor mov pop pop sub pusha xchg dec (bad) cmp daa hlt adc mov (bad) sbb lea inc pop or or sbb or push call jle inc jl movsb imul add mov add adc mov jmp mov negb cltd sub (bad) fiaddl ret or adc lret pop inc clc ficoml xor jecxz push popa or mov xorl mov adc mov push dec jb add adc sbb inc cmp inc or inc enter sbb es and or ret ss scas movsb rolb cmp jb push adc dec call ja push sbb and out lahf jo mov fisubl ds mov ja cmpsl leave aaa mov fs adc adc pop inc add or jo test xor adc inc push sub (bad) and pop fdiv in jmp push or mov push mov (bad) xor inc ret xor les data16 and or fcomps rcrb push xchg or or jp,pn sbbb pop cmp imul subl inc mov xor out sbb sub inc or mov nop dec pop add test adc test data16 dec (bad) mov mov orb dec loopne lock notl es dec push call add adc (bad) jmp and outsl frstor adc les or xchg hlt and fsubr pop push push adc adc add sbb adc or icebp incl test xor pop adc and xor sbb imul je dec push in rdmsr pop mov jp pop jle add inc in jecxz mov add xchg adc test aas mov test push push sub or fs adc cs inc test push outsb dec and or rolb ret pusha fmuls inc push cmpsb dec and push adc pop enter loopne es add stos (bad) mov mov cmpsl mov inc enter aam fisubrl adc xor test xor rclb insl dec nop and sub inc es hlt push xor mov xor lahf les xchg inc xchg pop add cmp jl adc mov ret je mov push xor xchg call mulb push xchg mov jo sbb aam mov push jge subb mov (bad) call in iret ret mov idivl xchg cmp lods or mov aaa sub add icebp and stc jb dec ret aam push fiadd sub sub loop,pt push addb mov cmp jb or push and enter or pop push aaa gs shrb xchg ss sub fmuls (bad) mov jmp in das pop sub nop sbb repnz and rol dec arpl xor lcall mov fsts pop inc fsubs not dec dec jbe or loop repz sbb xchg out outsb dec cmpsb push mov push aam int outsb push (bad) loopne inc pop enter pop add mov jmp mov cmp xchg popa inc sbb cmp mov pop insb mov stos cmp inc jmp xchg rolb adc push dec out cmp xchg scas adc mov out (bad) and push push fbld push mov sub pop or adc (bad) jne bound push inc mov jp adc dec inc inc loope adc inc xchg roll xchg push orl fsubl in js nop inc mov clc sub mov std jb pop andb adc mov cmp roll cmp sbbb adc sub clc aaa enter repnz cmp (bad) pop (bad) sar add add xchg sbb sbb jle mov movsbl jmp lock add pushf inc dec fcomi jmp es (bad) popa and push (bad) nop into daa pop fcomps jnp inc or fnstcw adc int inc aad enter pop or or loope inc push dec sub inc into (bad) int3 rorl loopne mov ds rcl ljmp add scas ret or push jns cs and add jns adc add mov mov test push push sbb nop imul pop es mov mov out test pop push movsl rclb ljmp pushf dec div imul (bad) pusha inc enter sub cmp sbb push gs icebp mov enter orl (bad) pop and nop xor jp icebp inc push push sahf or xchg fcomps gs ja push (bad) jo stos enter fsubr cmp (bad) inc cld dec pop imul rcrb out mov fsubl movsl mov imul cmp jne ds pop scas xlat push jbe jge jmp lods and lahf adc aad shll mov sub fmul xor mov or cmp sub lock xchg mov insl (bad) push cmp pop add (bad) jbe xor jmp inc or repz int lods lret aam push push cwtl and mov pop rolb stos pop ret mov faddp jmp lock add push push mov inc js and aas xchg ljmp mov or int3 add cmp xchg shl sbb push mov xchg cmp push (bad) jmp mov scas pop or add xorl pop jecxz addl xor fisub mov dec or (bad) mov daa int3 push inc xor pop inc xor dec js xchg push cld dec cs xchg mov push les ss add mov dec rolb inc out (bad) insl out dec imul push push pop pop (bad) mov js inc jo icebp dec push in cmp add jbe insb cwtl push rcr adc movsl add outsb push les jbe pusha xor xor jmp mov mov rcr ret sub addb out mov sbb push sbb jmp cmc dec cmp cmp pop mov movhps hlt add add adc imul inc xor push push jmp loopne xor testb add push and inc bts jmp test nop inc mov sub mov jecxz sbb and pushf pop rorb mov push mov sti dec mov mov mov aam or ror xchg dec mov bswap sbb dec or push loopne es data16 aaa cwtl incb jne testb je outsb data16 xor push leave ret dec xor push lods leave addl test cmp aam add inc jl mov rcr mov sbb and or leave aam xor and xchg xchg loope cvtps2pd push inc mov test jge inc sub cmp inc or pop inc push push adc lret cmpsb daa cmc and xor inc pop mov dec jmp adc dec cmp and and mov pop repz lcall leave rorb call (bad) (bad) mov push or or or push jle or jbe jge push (bad) adc sub push adc or pusha lret adc and mov push dec pop (bad) test lret rcl add imul stos sub mov add pushf inc dec dec lea lcall push in xchg cmp mov jmp sbb lea mov sub (bad) bound xchg aam xchg int3 and gs or xchg flds add sub out imul (bad) nop lret cmp add xchg add add adc jbe add mov xchg sarb or mov jge or add and sbb sub dec or xchg cmp inc cmp adc mov push mov push popa int3 xchg cmc (bad) and sub stos aam test stos or rorl pop dec push push ret jmp push sbb or xor dec pop fwait push insb xor testb mov je inc inc xor sub adc nop lock nop adc push cvtps2pd jb scas dec xor addr16 or or pusha lea enter xchg push or push test or cmp sahf pop call pusha push rolb adc cmp mov push andb pop testb inc inc ficoml add and jbe cmpb push mov ret je mov mov push adc ss add push cmp xchg adc add pusha into mov cmpb (bad) jo inc push pop mov (bad) mov andl cmc cld sti and lahf pop and std add test and roll push dec jb and adc add inc sub sbb dec lock lods sti imul pop sub inc lcall sbb push addb shrb push loopne pop cmpl insl jg or push inc cmp outsb loope cmp and out pop xlat loopne add loope push push jno lahf mov sbb add mov or pop clc fimul nop sbb cmp pusha lock jb pop add add jns mov mov (bad) mov sahf out aam in lock add or sub pop sub and push push or imulb rcll dec imulb call jg loop mov lea push ret jge dec and imul adc xor (bad) cmp or repnz shlb sub in je jmp and cmp je inc jmp jmp and pop pushf jmp test (bad) cmp sbbb xor loopne mov add aad mov mov cli inc adc rorb je jg cs jne mov sbb adc cmp je xchg or lock dec rorl or mov fwait addl sbb (bad) xlat xor pop and lods adc cmp je inc xor xor sbb push jne subl dec cmp cwtl inc inc dec cmp lods cs sbb jne xchg lods xchg testl pop sub adc lds push add aam loopne or push and cmp mov inc mov and stos cmp std ret push cld jg movsl push xor inc mov outsl mov or xlat clc mov lods dec loope or push cmp jne inc inc jl rorl (bad) jne cmp and cmp (bad) and mov jne js or das xlat je repz adc push cld dec adc cmc sub enter ljmp dec jne pop inc push jge fimull cmp jne (bad) sbb out jne or sub fbld in outsb add push inc int mov xchg movsl push push push test test sbb mov insb lahf dec mov cmp dec push je push dec adc adc pop mov fnstsw push push inc insl lods jmp pop sbb pop inc (bad) push nop add subb mov (bad) adc xor mov dec dec pushf adc ds out call push js push cmp cmp jge sub xchg inc inc sbb mov add sahf add out sub insl lods sub pop push fnstenv push sub push out ret push int3 insl fnstcw ficomp mov scas mov inc add or dec repnz inc add add push add or push out (bad) ss pop inc or inc mov jbe jbe or pop cs add stos fcmovnbe add sub out rol add inc sbb add or sub in pop jge inc in pop pop pop test inc sahf jg add fsubrs dec ret ljmp ljmp xor pop in (bad) les out dec mov xchg pop mov test sub inc nop sub cmp jae xchg jmp cli fisubl mov cmp sbb test sbb and movq xchg mov push push aas testw decl push pop sbb xor mov push dec pop (bad) or cmp or pop psubsb lock mov jno adc lcall sbb push lds cmp lcall push shr mov movsb dec push jg (bad) mov enter jo (bad) std and scas mov lods call xor push mov cmp or mov and aas aam jno outsb aam lods add push xor mov nop outsl adc (bad) subl in sbb mov movb pop mov cltd dec xchg pop roll in or pusha push mov fwait cmp das je add xchg add xor push insb add add cwtl or dec nop fimul (bad) adc mulb insl in xchg dec lods js arpl mov inc jo test jmp sub mov push pop jmp mov adc jo and shrl incb cltd pop mov sbb or or push sbb inc lods push fwait mov xor nop insl adc xcrypt-ctr cmpsl pop sub popa adc or je lcall sub mov mov or cmp push jb (bad) data16 pop cmp movsb mov cmp add in aas cli ss dec pop cmp test dec xchg dec and nop cmp sub xor ljmp or xchg dec sub sti andb jb dec pop mov inc and xor or mov movsb sub punpckhbw ficompl add and movsb sti jmp sbb in inc cmp outsl imul stos mov cmp jl or mov das call roll add xchg xchg mov mov push test cmp mov out sbb (bad) add daa or negb mov xchg icebp (bad) cmp rcrb and adc or ret mov pushf rcrb decl add jne pop cli push sub adc sahf mov dec shr js (bad) add mov lea inc xchg jg adc sub jbe ret jne das in test lret add xor test nopl add or out push (bad) mov push or or cmp je inc (bad) je pop movsbl jo je gs and add adc add les je push jne je addl jg ret inc scas pop cld pusha (bad) push push inc call unpcklps push inc mov test orl mov mov add lods jns or scas lock jo (bad) or and cs sti mov (bad) cmp cmp inc cmp fisttp dec inc mov cld xchg push pop add sub adc pop nop js loope add sbb jle aas add push cmp je jge add bound xchg push pusha and push pusha mov fistpll in out or sarl dec adc ret cmp pop cs test mov in sub mov gs xchg (bad) pop jns mov dec dec xor jge xchg add mov movsl cltd mov push pop cmp andb push scas adc xchg push dec dec bnd jns pop shl daa jl jmp sbb jns add push jmp cmp sbb cwtl inc dec and in (bad) xchg mov mov inc xlat ret jl pop dec aaa push lds xor or movsl mov pop pop ja test mov mov sbb xchg push dec in push or bnd mov push xchg rolb nop dec cmp shlb or push hlt add rclb cmp pop cmp adc adc mov js lret mov mov mov add xor test sahf cld repnz (bad) or cmp ss push arpl pop push add jmp and push aas pop sahf test push loope sbb mov fsubs push movsl adc sbbl cmp dec rorl dec lret push loopne or lock pop inc mov gs push rclb (bad) adc in xchg jl cmpsl adc push jge fwait scas xor xor jp adc and push sbb push aaa rclb addl arpl inc cmp push in test pusha inc scas fmuls xor xchg sbb ret add loopne lret pop xchg add mov lret mov jmp sub xor pop dec data16 push or outsl jb and add jmp bnd push or xchg jae out or repz sbb xchg dec stos mov push xor movsl xor xor call movl or rol add fdiv push movsb push or push hlt or test sahf ja and xlat ret inc and xor sti dec adc rolb dec add dec adc sbb adc xor cmp and jb xchg rorb and adc xor mov xor je cmp stos adc and add gs jne aas add pop add mov mov adc shlb sbb dec (bad) or mov sub loopne or mov mov and dec ret adc out data16 cmp mov jne fidivrl hlt jb or push pop xchg push inc push cmp mov sbb push add popl mov test add gs push call add dec test mov mov mov add sarb or imul pop (bad) mov movl mov fnop mov fwait adc popa idivl mov push mov xor mov loope jbe push mov push jmp xor mov jne iret dec (bad) and sub xor bswap mov mov add call mov pop push add imul outsb pusha int3 pusha cmp and mov cmp sahf adc jge adc adc lock arpl lods jnp cmp sub loopne (bad) push cwtl push fs rcrb pop sbb jl mov inc cmp adcl (bad) sbb push test sbb and jo or loope add jmp ljmp fdivl jge add dec out mov test sub rolb push out lods out xchg mov xchg dec mov jmp xchg jns mov xor movsb icebp daa xor stos lea je xchg aam xchg and and mov jbe js xchg pop inc or or inc mov dec inc push aam jb rcrl les dec lock mov jbe mov movsl movsl pop mov mov incl fs (bad) mov arpl sbb das push push jno mov cmp sub fidivrl mov jmp push pop fwait pop xlat add pop loopne stc or neg push sbb pop pop loop or and mov pop jno in mov and pusha sarl imulb orb add xor pop dec adc and or cmp loopne adc or and jl jo lock aas mov pop jno pop jns add and cmp or jp js test sub hlt mov movb cmpsl inc lods push repz mov sbb lcall inc loopne adc inc mov xor add or xchg sbb push xor mov jl std cmp push xchg xchg das xchg jg cld jo (bad) mov iret pop adc jae inc adcb push pop adc xchg add sbb add std sub and cmp mov mov xor cmpsb jb fs ja add enter fistpl (bad) pop lcall in outsl cmp and loopne xchg mov cs int3 dec into pop icebp or std xor xor cmpl or dec inc daa adc pop std mov mov pop les push cltd xchg pop je add cmpl mov adc pop je inc sub or xor lret aad arpl ret das inc pop into (bad) (bad) and mov movsl (bad) pop fcmovnbe orl sub push and inc xchg inc push push pop popa je (bad) insl push and js mov inc cmp cld movsb pop pop jl mov test sub add dec inc popf xor add mov cmp insb orl adc inc add pop cs aas loopne adc push std or ret fwait iret mulps cmp mov ret xor cmp fidiv mov pop add xor sbb adc out add jne or inc dec mov adc mov hlt lock add mov mov pop fadds es push adc push add mov les mov mov cs movsb push std jo dec gs push push orl rorb std inc cmp or loopne stc dec outsb mov aam lea sbb or jo fs xchg push jne xor lea inc dec addr16 notl mov repnz push push mov cmp inc (bad) test sub (bad) or jmp mov test orl test sbb jecxz add aam inc jmp mov and jae in add mov fisubr push hlt aam mov dec jo (bad) (bad) or or xchg daa hlt push mov roll fs inc cmp sbb rorb and push xor sahf pop adc stos mov xchg popa pop orl push mov cs lret cmp xchg sbb test (bad) cmpsb stos xor ror lock pop and inc pop add push sbb inc push pusha shr jmp push lret aam test xor fldt cmp add jp adc lds cmp jne push or lods mov sbb xchg cmc or data16 mov fmull and je in and cmc sbb test jle jae inc insl mov inc or adc push push adc inc scas add jmp fsts int3 js mov jo decl push xchg push cmp cmp or mov xchg mov call dec push data16 outsb adc jo pop hlt pop push cmp fidivrl push push xchg call dec imul xchg and cmp pop push pop sbb aad pop jle rcr std outsb jne pop decl fisttpl loopne loopne add fs mov jnp jp jo pop adc push cs push inc inc mov pusha shlb mov pop push push add mov addb add pop (bad) pop repz or push fmul dec dec xchg imul cmp mov sub mov add aaa fcmovb dec lods jnp andl jg ja jb int mov test cmpb inc inc push jl cmp cli jl movsl add push lahf movsl pop clc push xor pop aad mov mov je cmpl or (bad) sbbl loop xor je shr stc lret or adc jne (bad) add push jle dec bound xchg test fisttpl jne scas mov push add add repz enter jo test add les inc pop jne inc inc jmp and sub and shrb mov daa xor dec mov (bad) xor or or mov shr loopne outsb insl pop je inc adc push pop inc sbb and dec dec cli xor inc add adc (bad) xlat shr cs sbb push ja xor jno dec push inc cmp cltd popa mov sbb daa sbb push sub pusha negb mov or idivb dec es fs arpl push cmp and or mulb jmp and add jbe daa aaa add dec pop fstpt fwait adc push sub fidivl stc or (bad) sbb hlt pushf sar sbb add push and lods pusha sub mov xor pusha mull mov inc sahf sahf hlt mov cmp adc pop add push cmp and movsl dec ds jl (bad) cmpsb push jo arpl mov ja (bad) xchg lcall lea popf ret or adc in outsb call popf or mov mov popa sbb into clc subb push cmp push fimul push incl mov inc insl fnop mov inc ret inc xchg adc sub and mov push cmp pushl les jge mov movsb cwtl daa cmpb pusha push out mov fwait mov add loopne or jl sub mov dec ret dec loopne loop and add cmp and push lahf lea loop mov cmp or int3 das ret enter mov mov or es inc inc fs aas stos ss or cmp push jne test sbb xchg lcall ret mov pushf pop pop cmc push js les push loope (bad) xchg addb pop orb jmp or push decl or jl pushl push xor xlat jl daa and dec test push push jp cmpb mov mov inc lcall jo or jmp pop push (bad) cwtl inc int push leave loope ss or pop ss loopne dec lea nop or and pusha push sbb adc push imul test inc es pushw add sub call cwtl push sbb rorl inc sbb add pusha mov test jmp (bad) femms fcmovu movb fdivrs mov cmpsl xor add insb scas mov in push sub mov fisttpll sbb pop lea sub fbld add jl cmp jg sub dec cmp insb cmp jne subl cmp cmpsb add dec push cmp fld decb jae mov stos xor int push mov xchg push cmp je (bad) enter cmp into mov aam fistp jmp repnz push inc repz sub clc mov sbb adc cmpb pop xchg push lea add not movsl popa add or mov mov push hlt clc add sbb jb mov xor test and outsb popa cwtl mov ret mov or or push bound mov add pop sbb sub sbb push push or lea cmp je cwtl cmp mov sub je sbb xchg xor xor fldcw loopne add and jmp mov pop add fisttpl pusha adc inc cmpsb cwtl loopne mov push sbb pop mov xor ds mov clc sbb sbb (bad) das adc sbb insb stos pusha jmp and sbb int3 cmp pushl (bad) adc xchg jmp adc lea xchg jmp les mov adc jns pop rcr or mov xchg jnp repz ret fldl pop movl inc lock fisubr faddl (bad) dec push fidivr push imul test lret push sbbw rcrb std ljmp mov popl shl clc gs jns push mov leave push mov data16 or inc mov and lcall add adc (bad) pop or lret ja fdiv and stc xor inc push in cltd dec jmp push cmpb je cmp test sub adc bound mov icebp jb and aas bound sahf fsubrs pop test adc mov jge cld lock fstl sbb les jo or dec rorb loop add test int3 (bad) pop aam sbb push mov sub push mov shll ret or stos inc or cmp (bad) or add mov pop pop cmp dec es pop jae daa mov jno,pt or xor mov pop sub fmull adc or rcl (bad) rclb loopne push xorl insl lcall mov add mov mov dec jns neg test es adc (bad) sub or inc cs add add inc hlt out push add in xor pop fidiv pop inc xchg inc arpl lcall in sbb loopne or cmp test ljmp fidivrl add inc mov push insl jnp test pop xor jmp mov jle das outsb xor or pop pop stos jbe inc inc sti outsl adc jge leave add fsubrp pop push cmp lret push or xor xchg xor hlt push push pop adc in xor sub add (bad) adc push ficoml loop and pusha movsl test pushf rorl mov call mov and inc add (bad) in mov add inc nop push sub jge pusha xor inc je inc fisttpl out cmp inc loopne je sub jmp and rorl iret sbb mov add adc popf add sti mov in jne fxch fyl2x jmp and in fldl2e ficom pushf (bad) call add push mov fdivp xchg ret xorb mov adc mov aas rorl jmp cmp or lock jge cmp add fldln2 inc in fnstsw mov loope jne es inc popa mov ret or push pop in xor cli mov inc mov mov push fldz push xchg rclb fstpt in ja mov aam add add add and scas daa adc lcall fcompp mov in aaa xchg cmp fisttpl daa and jbe lock loopne xchg addr16 sbb fmull (bad) sub je add pop shl clc mov add pop enter mov movsb jbe adc pushw (bad) and push je fs in decl push add popf pop ljmp mov iret add jmp mov mov sub pop loop ds in xchg mov xor loope stc rclb movsb pop mov insb and imul xchg sbb and push iret cmp insl das and rol mov mov cmpsb (bad) in adc or pop call add ret adc idivb jp or bound push loope jbe inc je pop pop add ja add add pop cmpsb dec or ds pushf and jge mov mov mov cld add add jge mov sbb or inc pop inc cld xchg push je cli dec in mov rcll dec loopne pop dec jo (bad) addr16 or js pop add insl scas or loope loopne jo mov or (bad) enter adc dec mov loopne (bad) inc mov push ret adc pop mov mov cs push arpl lret and or movsb jg push sbb or movsb enter push mov inc into fisttpl mov xchg or xor ret and pop outsb cmp pop pop sbb cmp and cmp or adcl dec fsts cmp xor mov test daa je xlat pop mov xor lret and cmp je jo in mov add xlat loope bound sbb mov add jae (bad) fsubl sbb inc (bad) mov loopne dec repz aam addr16 sub sbb mov dec jae sarb mov inc adc xor push adc mov push ja sbb xlat push loope in jo fstpl push cmp cmp and inc scas test sbb xor and dec es es outsb xchg mov sbb cmpsb add loopne gs or jne ss push inc movsb cmp test fidivl lahf fwait xor mov dec out adc dec (bad) inc call std fistp pop roll scas cmp test pop jne and or xor out fiadd push inc push ret test jl arpl dec xchg aad sub jb dec mov jo or aaa mov sub sbb pop cmp xor mov clc xor jo ljmp sub cmp sub das cld mov loopne push adc push adc dec mov jnp and into popa sbb sub cltd xchg lcall adc xor sahf adc cmpb xchg jp mov push test adc adc pop mov dec adc std add push or cld addr16 push and test sbb and mov sbb adc sbb lock loop ja xor dec adc pcmpgtd xor imull sub nop jbe sub shr and std cmp sub andl dec push cmpsb xchg mov adc (bad) stc inc add adc jns test adc inc popa inc pop pop push mov xor (bad) mov or punpckhwd test sub or jmp push das and sub enter mov jmp andl add out movsb pop and and jecxz sbb add leave add or jmp rol sbbl arpl adc andb in ja movsb or icebp dec and jecxz stc ds xchg push xchg dec add cmp jb mov inc and pop cmp and gs cltd mov loopne push cmp push cmp inc or repnz fimul xchg es adc sti add fist test fisttp push stos sar repz loope jmp cwtl je add dec push orb jmp mov and or or mull pop xor or push push stos xor push popw adc push push jbe sub and inc dec pop mov adc pop fldl fstpl xor pop jnp push push out bound pop je test pop sub cmp sub jmp (bad) lret mov enter xor out (bad) xor clc dec cmp sub pop add push inc mov xchg dec and mov mov popf (bad) iret pop push or or mov fldl lahf rolb add adc (bad) outsb aas stos dec mov or inc roll sub push fistp push leave sbb sbb dec sbb adc push xchg lret arpl loope (bad) push inc frstor adc xor push lea scas insl adcl jge lret fsubs sub push test shrl loop sbb mov cld in mov dec lcall pop cmp jge sub test inc xchg leave jp je insl hlt push inc mov add clc push mov or sub push mov pop je imul pop adc in or sub test or dec insl testb cmc test push je bound mov push add loope push lret push sbb mov and pop and cmp inc xchg ljmp add push mov or xor push (bad) mov and jle inc jg rorl pop and lret pop lods sub lods jl pop ja mov pusha mov inc push push push xor mov clc jmp test andb pop nop mov sbb adcl push sahf add jo scas outsb shll rcrl jo inc push jle divb sub sub data16 jmp pusha loopne pop mov pop loope popf inc pop push lods add pop ret xor shl fimull incb jns add sbb andb cmpsb jb dec push gs (bad) mov pop adc mov (bad) in shll adc and or sbb dec jmp mov gs out (bad) fwait jno hlt ret jnp fdivl fsubs inc push ss push pop cmp jp mov aam rorl mov ficoml (bad) ss sbb fnclex sbb (bad) cld loopne sbb ror mov dec cld or pusha cs inc cld fwait mov loop xchg mov or and adc and mov mov dec and mov icebp fstp sbb xchg out jmp mov dec les push xor cs adc inc jge mov lea cmp push push imulb mov insb xchg jp push push (bad) lcall sbb andb std cmpl cmp insb or dec sbb jno jmp lahf out mov (bad) fbstp mov lods cmpl sbb je cmp or sbb xor mov mov jne dec mov jp lods mov jnp daa ret push ss fistl sub mov push add enter repnz xor or pop dec cs add mov push movsb vcvtps2pd or cmp jne cld (bad) out mov andl jbe popf hlt lods mov sbb lret push scas rol mov orl xchg inc ss dec jmp aad push jle adc push data16 leave aad mov jne js decl xchg adc lock xor xchg movsb fmuls push dec add adc cmp add jge mov orl push outsl mov fdivrp ret pushf sbb mov mov pop sbb scas push addr16 push or mov push cmp sbb cmp pop bound fmuls inc mov movsb fstpl sub je mov cmp repnz sbb dec xor xor mov sub jb into push int sub aam jae add sub out and movsb loopne push (bad) idivl out push int aaa jnp fcmovu clc adc fisub scas lds fstpt adc xchg out jno or fimull pop adc scas insl mov lea push xchg fsubrs mov pop push nop lret or xchg bound rcl insl out xor and lret sbb lret lret fmuls pop adc (bad) jge imul jb inc adc lret fsubl pop mov int3 lret cmp xchg adc (bad) jge fisubl das pop enter int3 int3 outsb xchg add jnp dec adc (bad) jge in rclb out xor add int leave sbbl mov adc (bad) mov imul add into fnsetpm(287 inc cs into cmp or mov pop mov xor push push cmp aam stos cs push sub rcr into orb xor loopne cmp ja mov xor (bad) repnz mov adc mov or fmuls xchg sarl xchg imul add or mov add (bad) add mov inc add adc cmpl jl and enter test dec (bad) dec sbb sub mov xor pop fildl sbb jl popf pop ja pop dec or jbe inc fimull es cs jbe in sub test pop adc ja test jmp fdivs push enter or mov xor hlt push sub mov ss ret xor lret add mov add cmp clc loopne movsb subl fmull es xor stc ret mov cmp mov inc aas jbe add add cmc pop insb fcompp loope sub shll fadds mov fmull add scas sti dec loopne and fldt sub data16 xor je fchs jmp imul lock clc dec push fnsave push sub pop jg pop pop movsl (bad) pushf insb xor lods out add sbb iret fnstenv andl or fldenv cmp and pop xor xor push (bad) sbb (bad) jbe test ss enter ret mov xchg sbb or jns in cmp out add out sub and insl pop push rorb inc xchg sti sbb adc mov jmp jns je addr16 rcrl and sbb inc mov mov mov cmc inc xchg shlb ljmp sub pop jbe adc mov sub (bad) and add adc (bad) xor jb mov hlt inc in pop pop orb push sbbl pcmpeqw arpl xor mov ret or fist jae clc inc mov adc lea pop pushl xchg popl adc ljmp jp rcrb pop jae add mov addr16 stos push nop xor sbb or mov xchg add cmp (bad) fnsave icebp adc dec mov mov bound shll je insb xchg xchg ds das inc push push mov sahf cmp cmpsb push out xchg insb std int das jae pop push jne arpl or test mov or in inc mov mov loope divl cmp cmp notb ds cmp push pop mov fwait mov push xchg cmp adcl notb sti insb shrl jno fisttp xor cmp sub mov leave xor xor fs jmp push mov mov cmp push sbb add sub scas inc adc xchg jmp stos and xor test (bad) mov mov and mov jp dec fidiv ret ss inc popa int3 ret xor add push or andl sbb popa mov inc adc enter cs xchg pop pop push and orb ljmp rol mov xchg notb or fisubrl sub push push push jns movsb add jo movsl and dec push test mov sub testb outsl or pop hlt mov add xor mov xor adc adc xchg jecxz adc sbb shll mov pop mov adc imul jb lret xchg lcall jle pop cmp push push (bad) pushf jecxz push push (bad) add inc cs pop ret xor mov or jmp std jmp mov or sbb outsl bound add (bad) imul adc mov aad jo data16 inc mov adc fcomps incl maxps push mov xchg test je,pt cmp data16 sbb or lods mov es stc cmpl cmp js hlt aaa push cmpl jl adc daa xchg test inc jp and sbb push popf jno imul pop das ret pop xor scas xor stc sub lret mov sbb inc xchg (bad) outsl push stos (bad) jl sbb inc add push add pop inc cmp mov mov sti add jle jne adc mov cmpl es pop fs jo mov nop in jnp aam mov pop out mov stc add or xchg out mov fistl roll cmp mov jge push push pop loopne adc pop mov adc xchg in scas cld cmp mov popf fdivrs popa cmp cmp jg mov jo xchg jb dec mov sbb lods or js dec jae xor and jle jbe aaa jns mov jl movsb lahf sbb dec clc inc cmp loope pop add jo aas pop jg jmp xor push imul dec (bad) stos push out jle and add cmp fisttp dec lret int3 sub cli jo jge mov add bound xlat push jle rcrb lods addr16 sbb in imul cmp jl daa mov mov (bad) je cltd inc adc hlt xorb fwait and adc bound lock mov or outsl nop xlat rol adc test pop test sti cli cmpb je outsl add decl in xchg test in push push cmp test lock push js pop dec or out mov or or mov cmpsl or push add add into pop pusha add insb pop je mov xor dec jle mov adc add add movlps push or dec push jmp mov lahf out or cmp test jge xor mov cmpsb mov imul mov add mov jne and sbb push addr16 jge jne push add ds xchg dec into push sub out loopne xchg fstl popa cmp popf or popf (bad) xchg out jae cmp xchg aaa xor (bad) jne mov in xchg pop lock mov sub stos dec stos sbbl mov daa in insb adc jo pusha lods jp jp mov inc dec jo and jecxz lret push (bad) mov fcmovnb (bad) mov aam scas dec std mov xchg xor imul dec pop addl orb jmp push cmp in jmp clc or cmpl add add xchg and cmp pop dec insl adc aam lahf (bad) fildll ss adc push outsb sbb js cmpl dec test mov in xor dec mov or test pusha dec jl or and add inc mov jbe outsl loop pop das pop dec xor rcrb and push inc dec (bad) ret adc dec movsb xor mov sbb fisubr cmp jb add push adc out xchg icebp dec push inc cmpl inc dec xor sub insl push nop pop popf rclb xor add jne scas mov jnp fsubl mov mov jae push imul sbb mov or lea cmpsl (bad) push das fsubr pop xor mov sbb jl or and xor enter mov test xor iret popa mov push nop rol aas xchg jne cmp inc or int mov xorb push jge pop (bad) push and mov pushf or and or jbe pop xor push mov loope sar sahf sbb adc fcmovu rorb jmp addr16 popa sbb add pop rorb pop pop xor mov xchg or cmp je gs mov fwait pop pusha ss gs cmp jae mov inc popf test nop inc cmp pop and jmp stos lret sbb mov cld xor adc lods dec jecxz mov imul inc hlt fsubrp cs mov ds inc test gs ret dec rcrb iret popa sahf push addb adc jl pop enter movsl pop sub cmp or cmpsb iret inc inc mov inc jmp enter into out jo or sbb add mov mov push stc lret inc std std add add cmp push jecxz add int jne (bad) cmpsb inc or rolb flds inc jg add rolb sarb sbb shlb adc mov mov dec push dec addl push dec mov loopne (bad) mov pop dec ret dec jmp mov pusha test sbb enter (bad) pushf movsl sti add push std fidivrl mov dec ja inc pop aaa cwtl xchg addr16 repz cmp jle lea or inc adc cmp mov jp push xchg movsb loopne,pt xorl and inc data16 cs and xchg xchg addl add pushf add jo mov jnp les into inc por push loopne jo iret dec and data16 pop mulb lock push xor pop pusha mov testb inc mov mov jl xchg cmp inc dec mov rorb or lds data16 inc adc (bad) fbstp rcr mov enter pushf push pushw pop (bad) insl jne push jmp sbb and dec dec pop bts jg mov pushf test xlat jecxz adc inc push inc push (bad) enter adc or test rcr push sub push leave repz and adcl insl outsb int3 dec rcr push fnstsw rorl jmp xor or (bad) fnop repz popa int3 adc repz enter sbb adc or mov ret clc pop daa add lret and adc cli xor jne mov test pop xchg je jno ret jl jl sub and mov mov xor (bad) sub dec out mov jmp rolb lcall test jl (bad) pop jns adc imul adc (bad) sbb jle xchg push mov lea mov lock sub mov inc sbb and mov dec or aas pop jmp movsl xchg and dec push nop (bad) xchg jp jae mov jg lea and dec movsb cmc loopne jne add sbb cmp (bad) mov mov pop lret mov jmp rcpps test mov mov cs int3 (bad) outsb popa int3 jecxz pop hlt (bad) fistpl and xor dec pop cmp ja cmp (bad) mov roll outsl cmp and shlb add jp inc cmp lock ss lret shr not and cs adc xor inc in clc fimul cmp push jbe ljmp pop push push data16 lods pushf xchg imul clc loope cwtl in adc addr16 mov push orb ja jne mov mov sti dec paddd mov jae cmpb (bad) lock mov xchg xchg add sub int pop jl push stos push mov or dec sarl jbe cmpsb ret fadds (bad) testl sti mov jne sbbb insb mov add movsb and xor fstl aas popa jnp pop gs push or fs mov scas push decb xor adc and in pop (bad) and imul adc jmp adc (bad) jmp push mov cmp push lea pusha dec jl mov ja or jbe insl or ds pop movsl clc cmp fwait bound pop adc cmp push repnz and mov scas dec pop mov mov inc push xchg and mov ret enter loopne je pop aam shr sbb mov iret and xor addr16 and sbb ret adc pop cld xor push iret xorl adc pushl dec jae cmpl outsb jmp fisub xchg in es (bad) dec (bad) loopne push mulb fs push sbb or cmp inc push cmp idivl sub mov (bad) pop mov in jl inc adc mov add and push mov aam inc or xchg xchg or imul cmp xlat andb cwtl rcl loop lcall jl into lcall push shlb loope jmp mov stc scas mov bound mov add addl ljmp or cmpsb dec inc dec popa cmp sub aad shrb push cmp mov and mov decb jne dec push add mov in and jmp dec sub andb sub mov insb xor arpl movsb andl insb pusha or sbb jle hlt mov outsb xor icebp mov mov or cli imul sub ficompl (bad) sub add xor cmp push or das push or rcrb arpl or cs dec or cld pop mov and add inc add mov mov inc push or loopne jp cmp fildll nop jp inc loop jae cmpsl add add lods cs mov aam xchg and je xor xchg jnp push fldcw mov jmpw dec (bad) fdivs mov jns loop mov shrl xchg sbb or jbe repz test inc and incl sub add stc hlt jno xchg or inc mov ret outsb imul cmp lock (bad) xchg adc dec cmp or out add push shr sub dec dec lods lea pop cmpl pop mov psubsb inc cld lock insb inc jbe sbb pop ja popa loopne call adc lock (bad) scas sarb add mov add adc inc fs inc test (bad) stos mov or (bad) ficoml test hlt mov and inc mov xor not and pusha add cmp add xlat adc push clc lea sub loop ljmp or hlt dec cld dec cmp (bad) and dec add adc pop push jl out popl xor xlat lock pushf pop push mov pop dec xchg (bad) mov or pop cmpsl jns mov nop sub mov jo cs xchg jnp movsb call mov enter dec jg sub add jno mov add mov incl mov cs xor mov sbb xchg fldcw adc or dec (bad) xor dec pop dec pop pop pop in xor ss add xchg adc jae ret test iret ret mov jo and and jns dec test insl and xor inc xor or push pop rolb in mov sub dec mov fisttpl jge mov pop insl push inc dec insb pop xor and add add and jbe or divb icebp adc ret cld aaa xor dec insb xchg (bad) inc push xlat into je nop arpl xor push xlat dec cmp and in in repz or jno or sbbl cmp jnp aad add rclb dec xchg ret push pextrw test cmp seto sub lret ret jns xorb sub loop push pop inc rcl mov mov loop push jmp push and mov pop xor sub push fldl aad aad add mov push dec add je dec mov or push loop fisttpll (bad) cmp mov add adc mov adc or cmpsl mov lea jbe xor add sub adc leave (bad) xchg std adc jle push and dec inc cmp push rclb jecxz push dec inc adc push or push xchg push clc jae loopne in orb sbb push push lock xor sub daa clc xor add jg cmp push je add popf popa mov cmp mov int andb mov push mov sub xor push mov sbb pop adc test push orl insl cmp popa mov aas lods aas or adc add int mov mov xor int3 fs or or pusha sub mov jmp sub cmp push movsl cs lret mov je mov int3 or mov mov dec jnp clc loopne pop cmp or push or or leave mov or jbe or sbb push xchg fidiv out test jne lods jns and decl mov mov dec imul lret or ret adc jl sar or sub stc sbb adc clc jle mov scas and iret mov sub jne incl ret ret popf or mov repz push data16 lods outsl mov and add adc cs popa add cmp inc je adc out setp inc add push rcrb lret push mov xor iret jne sub movl or arpl sbb or fcomps ret jl cltd adc mov fnstcw addr16 es xorl jb mov rol (bad) cmp pop dec scas jge inc mov mov push mov rorl or or aas adc dec xchg fidivrl jmp mov push lock testl ja cmp adc adc (bad) jecxz cld ds out out test movsb movsb add or mov je mov stos aaa adc mov jle outsb pop fdivrl fstpl mov leave push sbb mov pop ss inc cmp adcl xor jne mov sub insb cwtl or jae dec mov jmp (bad) xchg jno cmp xor xchg push add mov (bad) insb aaa push jmp aaa je in jmp pop xor jmp sti sbb shll sbb sbb fs out int3 adc lea xor dec add (bad) aaa scas and adc test push in add sub xchg clc sub inc jecxz pushf and imul pusha add mov test gs and dec jbe add cmp inc inc jmp mov jae cmp add xchg insb mov (bad) cltd jmp lock sbb add jne mov jae adc push (bad) imul jbe xchg pop arpl inc mov inc inc lea push bound sub test mov xor test cmp dec ret sub jb ficom scas lods add jmp outsb push add inc mov or btr xor mul jecxz mov or sub mov jle add or lea (bad) (bad) test (bad) ja enter setle jmp jae aas insb xchg je dec lea or inc or mov hlt push jne jge and ja ds sbb jae xor xchg loope mov inc cmpb mov cmpsl inc inc push arpl sub sarb call aam cmp lret lock cmc sarb xor inc and cmp ja cmp sub push mov jo push mov (bad) cmpsb push adc imul cmp sub sub push mov inc mov inc inc push sub dec or adc stos cs loope or (bad) das sub je xor data16 push pop ljmp and xchg inc and push aad push dec pop (bad) ret mov cmp daa add mov inc pop insl insb cmp adc js adc mov lock leave push loopne push test js enter and scas ret xchg sub add das rorb push lar add aam mov push out pop lods xchg sahf je or je mov inc dec je sbb or int3 or inc lcall cmpb cmc xchg add sub mov andl jge sub sbb mov lret mov cmp inc inc shr jmp dec enter xorb aaa jne cmp dec push int dec jbe push adc cwtl stos inc xchg add ljmp adc arpl ss cmpb jne inc inc adc pop sub std orb les pusha adc jae movsb push jo jp sbb ficoml dec in mov inc push push mov clc andps sub adc lea in adc add das call mov in push insb and mov cmp and xor mov pushl sub pusha fild cmp adc xchg adc jne mov add je arpl add scas aam mov dec ficom add out inc jp shrb add sub rcl push scas lea xorb (bad) int enter repnz pop icebp enter punpckhbw mov cli outsl sub add inc pusha mov inc pop out mov and or cli add mov cmpsb mov sbbl lock mov icebp pushf push in inc dec push sub cs push fsubl call out jo addr16 sub sbb cwtl push rcrb sub ds mov adc add or mov add cmp call call test sbb adc clc dec mov inc xchg mov jmp mov call xchg loopne mov in cld xor pop repnz and sub fcoms aad lock test mov fiadd cmc inc push test push xchg out pop outsb inc mov push pop jo fld int3 daa cmp mov xorb imul cmp icebp ljmp fidivrl roll adc mov mov mov movb add and add push sbb inc or or cmpsb arpl and jecxz popf adc mov cltd jecxz or fsubrp ret ss je jne pop jmp jnp and inc xor or push inc mov jbe jmp pop mov jmp inc or loopne leave jb rdpmc (bad) xor pop shrb jg jl jae loop test sub xor leave call in push sbb divl or fsub into inc jge cmp notl cmp mov das and loopne inc in faddl call js pop popw lock add adc test mov aam imul mov sbb jle and sti cmp mov or jne pop int3 and mov lea in fsubrp scas lods sub add add into cmpb call fimul push in push mov data16 cs inc mov sub push inc sbb (bad) out jge pusha inc sub sub or xchg scas out je and fdivl sub add push (bad) mov xor jae (bad) inc rclb pop sbb (bad) in and ljmp push cmp out add pop sub push xor cmp add mov inc mov add lret xor jbe mov (bad) imul jb jmp mov hlt out sub sbb dec push int3 pusha (bad) shlb outsb or mov sbb push push sar fisubrl fs add arpl jmp fs shrl scas inc gs stos mov or js sbb add mov sbb sahf push push adc sub bound add mov mov jbe add jns and or dec loope mov loopne add jg and bound ret dec jo es arpl inc imul push push insl sbb ret dec loop ficompl loope add fisubl sbb cld cmp cmp adc cwtl pop push add or pop pop adc adc dec (bad) idivl popa lods push sbb or fist add call sub sub push and loope sbb shl sbb jbe xchg adc inc cmp lods or loop cld add push xor cs sub psubusb movsl sub adc lock xor subb jo jmp dec nop and out or cmpsl movb imul inc and (bad) push or ret aaa sbbb ret mov and push mov add imul cmp xchg mov outsb pop popa enter cmp push or jbe aad ss xchg fisttpl and or or add imul rolb popa lods dec push or push sub ss notb or pushf sub out outsb mov aas or mov cmp dec mov mov mov es mov addb inc inc cmp jb std mov ja add cmp adc (bad) cmp sahf dec jne cwtl inc xchg adc lods dec jmp ud1 lods jl adc fincstp (bad) push sbb lcall xor add insb mov std adc pop je or je out push adc jle imul je jmp add rorb push mov jge or adc ret adc add and out lcall js fidivr and mov jg roll xor add jno cmp pop stos push xchg xchg fwait iret mov iret std imul mov jae enter dec bound add xor or sub rcrb pop fildl movb sar sbb dec les push sub pop mov push pop adc andb push js push (bad) je cmovne outsb sbb mov andl ret in sbb mov popa add mov mov popa sbb adc push jb enter or sti xchg xor into add or xchg mov xchg pop test cmp test rorl test xor fistpll call sbb fmuls dec mov adc das or jmp sub adc mov jmp or jae adc adc and add mov or mov ljmp or inc orl cmp cmp xabort lcall sub lods into ds ffree rclb (bad) subb dec adcl xchg dec lret jge sbb pop cli nop mov mov mov pop jo into (bad) fdivrl cmp (bad) pop aas in mov aaa jne add push mov aaa mov jmp push sub sub mov mov inc push add mov lods push cmp cwtl sub push dec std rorb cmp sti jo adc cmpsb mov or pop or lds push or push add or push or addr16 inc les sub (bad) or sub arpl insl div xor or inc sbb adc rclb sbb fisubrl addb aaa sub es push sbb mov or push shlb test add mov test push divl xchg loope add fnstenv cmp push or cmp (bad) dec dec (bad) adc or dec add push sbb and mov jl dec sbb add and mov rclb xor push xchg xor push sbb jae cmp or je jl repnz decl and sub pop jmp or aam adc or jne sbb adc adc mov xchg pop les jb mov adc pop rcr fistp loope add and mov push ret es idivb adc and sub add arpl sbbb and adc dec outsb lea mov push xor cmp add inc and in cmp insb adc and xor out stc or lock (bad) push or repnz xor sbb push adc subb xor rorl mov adc movsl inc cld or xchg dec cmp cmpl mov rolb adc adc push js sbb push outsb int3 test jnp jp adc sbb cltd lret push push loop xor pop lret or and pusha data16 inc (bad) jl enter cmp (bad) mov cmpsb push ret add add jp xchg (bad) jmp jne jmp lea adc and xor ror or addl jne cs inc inc pop push or hlt sbb xor push pop mov xor jg mov jns pop pop inc dec or inc inc ret and nop xchg test xchg rcrb or dec mov mov (bad) adc add or inc cmp pop lea popa push das push sub add push inc jl mov dec xor push adc adc adc cmp pop test lahf pop inc fsubs repnz dec adc add (bad) ret jle popa inc dec cmp and mov shll enter rclb or or mov clc inc aam sbb mov jmp mov dec cmp sbb jae,pn dec nop aam add pop (bad) pop pop (bad) out add xchg push cmpsb ljmp fisubr adc cmpsl jno mov pop repz jns cmp mov pop mov mov sub push jge aam movb xor xor out jle lret and (bad) std loopne xchg mov inc enter sub pusha and mov test loopne push mov les gs fs jecxz push pusha dec xchg je push xor int3 call pushf imul rclb add ss push out push add xor dec jb bts add jmp and repz pop lret push call iret repnz push es inc dec mov es data16 rorb sarl push add jo sub jae std lahf push gs jg je or je or push ja jnp dec je dec jne inc jmp divb jne sub in outsl or xor inc add jp je stos rorb daa inc bnd insb (bad) xchg out je insb ja or jmp jbe push insb mov decb sti dec icebp mov dec adc sarb bound aam jge fmuls push cwtl cmp cmpsb push cwtl fcmovnu jbe rclb hlt xchg xor jne outsb add sub arpl xchg inc add and fistp or sbb dec mov loop or fsubl outsl jg push int3 jno adc push gs fs mov addr16 or loop or sbb xor and jg in or pushf push mov or jle push loopne jmp lea cmp xor push mov push aaa (bad) sahf and jne test mov addl push dec call add add icebp aam (bad) jle adc xchg arpl mov xchg inc jnp inc adc scas in jge lcall mov push pop pop addr16 inc mov fcmovnb or add loopne mov inc jle adc gs jne shrl rorb fwait shll push push es mov push and (bad) dec and or or mov inc fs and in add test fmull andb addr16 mov repz dec mov lret push je sbb jno mov and loopne jle ljmp test dec add js dec mov ret xchg mov (bad) xor and add dec cmp imul ret add fidivrl jne mov jle push pop sahf adc sbb (bad) lock cwtl push sbb xchg (bad) hlt data16 add adc imul (bad) xor add push fisubl push pop in (bad) js daa ds mov mov pop pusha ljmp (bad) (bad) push jmp pop or call subb sub mov mov aam pop insl jg pop jne mov inc push cmpsl and mov js cltd mov inc cmp xor mov bound pop xor ss cltd enter add push adc add cmp ja adc jp nop add sub inc cld ret or (bad) mov std sti inc sbb pushf or fsubr xor jmp inc push lods rclb sarl enter add add nop lret addb ret (bad) push test dec and push pop ss bound push xchg pop call add adc or (bad) je add mov popf jne or rcrb push fsubl mov pusha pop or popf pop sub ljmp gs ret pop ret mov dec es push add add cmp pop pop sbb or punpckhbw cmp and add push out or jb test xor loopne pusha lret and int add jne jmp sub (bad) out xchg dec gs xchg adc ret sub aas or lds adc add dec pop xchg pop push adc fwait pop push xlat outsb pop lods rcrb adc lahf add add int3 adc out fsubr mov and sbb leave add ficomp arpl xchg fsubr add stos andb fdivl add rol sbb aas dec adc js jbe and or add or push cmp shl jmp fwait sbb add and rol lea mov jo je neg push inc fs jmp into test clc js sub inc dec jno pop fcompl dec (bad) jmp ret push add add inc jmp or inc jns pop and (bad) nop cmp clc xor icebp adc dec daa sbb je sbb enter sbb inc sarb jne shrl sbb outsb ss data16 lock rclb shrl inc adc lcall dec fisubl pop das call daa and add cmp popa xchg or jo addl (bad) cmc shlb dec nop sbb rorb cmp cmp decl js mov ret sub or dec clc push lret pop and jno inc adc push jp xor out xchg (bad) sbb inc test jg test insb jns aas dec imul push popf pop push jle test imul outsb mov pop cmpb cmp add and je loopne ret or jne test xor add or sub mov dec bound mov adc enter xchg sbb ret add inc test inc sbb aam jecxz xchg les insl loop add mov adc adc or or lock loope xor mulb nop dec add out dec xor lahf mov or inc ja pop mov cmpsl cmp jno xlat (bad) xor aam add sbb fiadd test add inc pop ret sub add xorl (bad) sahf rcrb add mov addb and in enter sbb or les outsl xchg loope xchg adc (bad) push jl and or mov jo je cmpsb ud2 inc and lahf data16 and pop and adc xchg mov popf push out jmp push add daa mov fs cmp inc mov add ljmp les mov lret or xchg or dec sub push cmovb mov pop pop push ljmp lds sub xor pop push xor mov mov lods fs sbb add sbb sub xchg pop sbb or and xor sbb mov arpl xor lret add fdivrl xchg fcmove jns (bad) notb sub xchg mov call inc (bad) hlt int3 jmp jl pcmpeqd add adc pushf imul push clc js outsl aam sbb rolb jo cmp cli push pusha jae add push andb pop test pop adc loopne mov inc sbb sbb ja incl inc dec sarl insb jmp addr16 and lcall mulb addl out std push and sbb adc or or out and cmp cmpsl pop dec or mov (bad) or daa inc lret mov lds adc jp mov test cltd or pop mov lods pusha aas mov (bad) xor jae aas or and icebp adc add cmp outsb div adc test nop dec enter jge sbbl sub jns xchg xor faddl cmp pop adc cmc mov xchg xor or cmpsb pop loope and ret sub popf xchg addl push hlt les bnd sub inc inc ljmp imul mov lock je out sub ret jl cmp mov push aas add xchg (bad) dec add pop shlb xchg imul inc and push loope mov mov je jge adc lods adc or adc ret orl enter push or jp push pop loopne sbb dec and inc jnp call pop pop add push or rorb push mov sub push data16 sbb mov rcl jne adc xchg pop pushl fidivl insb jmp daa push sub add (bad) and in sahf je and movsb jae jne adc xor sbb mov inc cmp push aas push inc push jmp or xor push sti clc xor add adc jge mov jge xor jbe xorb mov lret push popa fsubl enter adc rcrl rclb les test pop fcmovb popf rorb imul imul mov push push stos je enter and mov or adc push sub dec in sbb or mov mov aam sub mov sub jo xor dec clc push js fwait inc xor and pushf xor notl sbb push ss push (bad) inc sbb mov cs stc jmp sbb sbb out pusha (bad) or push fadds and adc jmp or pop adc cmpsl add cmc hlt or int3 mov mov xchg pusha sub adc mov movups les imul jns xchg mov add mov push inc inc and sub mov or adc or outsb (bad) sub adcl xchg sbb mov imul mov or mov mov mov inc dec cmp sub adc fdivr scas ret jb adc mov loope lret jge das add adc test xchg xor insb push aam sahf (bad) push jle sbb btr pop adcl sub repnz xchg mov or aas mov loop push or vmovddup adc or divl scas test jne cmp adc cmpsb sub clc scas mov test scas adc in adc add pop mov or dec add mov movups sub rsqrtps movsb inc add sbb loop pop jle sub daa add test jne in shlb push inc sahf inc and (bad) dec sahf and pop mov enter mov rcl lods lods ja shrb ss je pushf and setb popa mov or pop pop or mov mov ja lock and cmpsb loope pop pop fwait push rclb imul mov stos xchg and inc test in outsb sub lock sub insl adc xor push cmpl mov and adc pop cmp or repz or add add jl adc add mov sarl or movsl (bad) mov iret jnp push adc push cmp sub out or sub xchg (bad) dec xor pop je popf ret out mov add insb pop pop test pop mov and rorl xchg dec adc or lcall test or bswap mov add shlb or (bad) or or or add pop mov or or cmpsl stos nop push or sahf add loop or adc or pop adc inc sbb mov sub cmp shrl adc outsb cmpl lea inc dec clc mov push pop push inc sbb bnd xchg xchg sub je iret out cltd adc cmp sub pop push (bad) mov push xor cmp dec js ss xor daa mov into mov ss push cld imul pop add ret pop cltd addr16 pop mov add cmp and and sub pop loop,pt mov popf hlt daa and sbb pop jo pop mov push add or sbb pusha clc hlt sbb jno hlt push cmp inc cmpsl mov dec popa fsts sub pop lret sub and add inc or mov xchg inc stc cmp mov push jno push push mov dec push (bad) pushf push sbb stos sub (bad) (bad) dec enter jge into mov call dec push in loopne mov xchg hlt push call push cli push sbb inc jb insb mov outsb call fadds dec mov push nop pop jns popf xchg push pop lods mov int rclb jb jo cmovo mov or add out insb jmp add jmp mov jmp sti add aad dec sbb pop cwtl xor int3 (bad) jo jmp and pushf mov es ja inc adcl push cltd jle enter loopne jge cmp aad or aas mov ja dec adc fildl repnz mov incl test testb movsl lea ds push pusha mov jbe xlat sub jg and add add aaa cmc inc mov movsb fdivs jg es xchg ds xchg movsb rcpps inc fsubrs clc out lock or and inc or ret mov xlat push jnp (bad) call ret imul aad or hlt je push push ficom test or jns or out dec or add push mov xchg lods xor (bad) jle rorb enter pop bound adc jne insb mov adc clc cmpb jl cwtl cmp add jmp (bad) jb push incl add xor adc or xlat notb adc push jl cmp adc push je adc fbstp cld movsl movsl movsw xor mov jge mov fimull add push inc mov sbb leave push and (bad) push mov xchg ret xor loopne add iret ss adc mov rorb inc loop mov pop sub or mov and dec push sub fildl mov dec add push jmp inc or loop loopne into ds les rcrb bound mov (bad) rorb fist iret orl mov dec or xor adc je dec and sbb push aam or xchg mov fsub mov bound inc (bad) ret insl cmp and mov xorb mov outsb int mov adc push je jno mov fwait movsb and hlt fnop loope stos xor repnz loopne je or and sbb add add adc dec mov push add je fiadd adc jns xchg adc add outsl and jne push mov mov cmp xor cmp out es add hlt jae xchg enter jecxz push call nop mov mov sub cs dec gs hlt jae das rorl xchg popa mov fisubrl sub mov push cmp or dec xor mov movsb jle,pt jne test mov push jecxz push push inc sub inc sub mov add lret lret rorl rorl sbb call jbe inc mov out movsl int leave xlat jnp popa movsl popf xchg sbb jbe imull cld mov push loopne mov sub in test add rorb adc xor cmpl xchg stc mov push mov xor add xchg out ljmp popa mov add mov cmp jno (bad) jmp mov xor or mov lds inc xchg adc or dec test cmp xorb lea repz sbb or cmp ret pop xchg shrb mull lea movsb or pop mov scas movsb (bad) mov rcrb call lock loopne arpl and les mov inc dec out lret stos fidiv mov pop insb insb ja ja or inc or in es jl or jg dec call mov cmp add adc insb push and aam mov push sub pop jmp xchg push sub pushf inc pop js inc pusha mov (bad) pop out mov or push in adc rolb xchg sbb mov arpl jg jp push sti dec push cmovnp fmull inc scas pop push lcall push push mov cli cmp add mov aad jmp inc and dec in mov movsl scas sbb push or cmp fisubl push jmp adc and sbbb xor repz rcr add lea inc cmpsb or cs dec mov lock outsb push lea sahf sub pop dec adc fs inc pop mov lods cmp mov cltd add sbb (bad) js cmovb or mov dec adc jmp jo,pt jle je mov (bad) mov push and test mov dec push pop pop pop (bad) dec pop sarl aam or inc mov inc jo mov sbb mov je rolb testl std lea outsl rorb sahf mov (bad) sbb push cld adc cmp adc jl incb jae cs hlt jbe inc dec adc lahf dec dec out sbb pop xor out ljmp cmp xchg mov xor fiaddl inc adc sub sbb fnop dec fsubrl inc sbb cmpl sub mov pop xchg mov cltd pop pop test add ret rorb movsl mov or in inc rol cmpsb mov mov cmp cmpb lcall mov mov jmp adc and add ret cvtps2pi ss pop mov push inc or fiaddl adc aad je fwait repz cmpsl push jnp add iret not pop popf inc adc cmp fbstp push pop sbb mov or inc cmc push sbb cmp mov xchg add inc add lods jbe mov add sub in orl mov fs ret ret pop test xor mov out lea popa add jmp inc xchg inc in adc xor divl insb mov pop lret mov pusha or pop jl dec or insb mov ss lea xor dec out cmc adc cltd (bad) loopne lcall test sbb xor mov jmp je or xchg negb scas adc mov call cmp insb je fcoml push rcrl ret bound movsb arpl flds shr adc pop adcb out or je xor and mov sbb push push sub mov rolb sti add mov icebp nop imul xor cmp xchg dec xchg in fiaddl loopne xchg dec adc sahf ds add out push or mov sti push sbb xchg xchg or pop lds mov daa movl pop add and outsb mov inc mov bound mulb lods xchg xchg (bad) ds and adc (bad) testl stos iret xor pusha mov sbb and add add xorl mov sarb movsb mov mull jno sbb fst js lock jmp pop inc xchg aam dec decb aas jecxz ret js or sti int ret pop xchg mov (bad) mov aad leave enter add adc mov jne loope inc paddq add (bad) loopne push and xchg scas jne jge cmp enter jb dec pop jns push mov adc ret pop cmp jne mov xchg lock rcr mov (bad) sbb idivb push add mov and push leave fadds push push inc test test (bad) fcoms in xor xor mov sahf orb add sub into adc in sbb dec les (bad) add test or sub dec mov mov jl xor lods and rcll clc jle fcoms cmpsl pop jne push jb popf mov xchg and xorl popf lahf cld jge push fdivrl cli dec adc leave sub movsl ret ret mov xor loop or inc cmp xchg fs or (bad) mov xor push jo fwait or xor repnz and mov mov pop adc push jbe,pn test mov ret and call out push lret icebp push in loope stos push gs xor jb test or cmp dec xor pop sbb les outsb (bad) push push ljmp stos sub push das or aas aaa cmpsb add negb xor mov push sbb xlat ret jo mov loope jne inc std pop push (bad) or push out jmp insl push shr or push mov outsl adc pusha mov insb mov loop and push or push aam jmp jge push or mov push or call ret int3 fisubr mov inc (bad) mov push sub (bad) pop cmp lods lock add jge (bad) adc add mov add pop or add jae adc cmp ljmp lods add jecxz or fmull mov mov std jmp (bad) cmp push in out jmp ljmp mov jmp mov jmp or push xchg sbb mov lock fwait push add add mov adc (bad) jp adc mov dec daa cmp das test mov jmp xor add add outsb push and adc out push ficompl dec rcrb ret (bad) outsb sbb sub movzwl and adcl dec mov and xor data16 les push cli imul mov lea cmp or cli xchg rcrb cmpl clc mov in inc xor sbb pushf xor xchg push std xchg xchg add add ljmp sbbb mov cli dec and cli les adc mov sbb rol inc (bad) jne adc neg jbe popa pop sbb cmp add xor inc scas jle or cmp jb add dec or js or mov mov jb (bad) mov push xor sbb mov cli cmpsb add and in mov lea jl sbb or out call xor incl (bad) (bad) cmpsb push push and icebp mov pop pop or jne pop hlt (bad) add andb rcl mov adc cwtl mov xchg stos fisubrl shr push in inc or mov push xor xor and cmpsl cmp adc test mov and lods cli std mov aas dec test mov mov fstps movb push enter mov fwait pop push mov out inc or cmp cmp cmp ljmp push dec cmp cmp or mov aam fbld inc dec bound rcrb xchg or call mov test movsb pop les inc sar sub (bad) xor inc adc add imul call adc icebp enter cwtl or rolb and mov orb in cmp or mov icebp jge (bad) sbb add pusha jmp fdivrs add dec (bad) mov xor loop xchg hlt ss fmull andb (bad) cwtl fcoml aaa gs inc fidiv fiadd adc mov loop push es or cs test inc adc loop (bad) and push jae mov cmpsb fimul (bad) sbb out pop test in sbb jmp mov add cmc pop lods push out andb dec inc call adc push mov lock jmp fsubl push mov mov es or adc mov inc inc fs es ret push xchg or pop nop mov not daa lea cmp rorb add insb hlt movsl add testb fldcw jl and mov and or xlat dec sti pop js shrl aaa xor iret test scas jbe jp inc jne lea xchg xchg int jo fs imul pop and in push push cli adc ret or and cmp shrb add inc mov xor cmp stos and add sahf mull dec movsb mov adc xchg call stos mov sub hlt ret and aaa adc sbb mov lods mov cmp and daa scas add adc ret lods xchg fidivl std mov and test jmp or or repnz nop xchg add sbb pushf rcrl orl add testl ljmp dec and or adc mov adc dec mov pop cmp mov mov (bad) mov jmp dec mov rolb ret inc push or push daa xor fbld (bad) jbe jmp jl pop orl mov adc in cmp in arpl cwtl or dec jmp sub cmpsl dec jmp pop add ret mov testb out pop orb adc sub mov mov jg andl enter test sbb mov lds (bad) aas and int3 jmp xlat xchg into in cmp xor or (bad) push pop in mov nop mov test xor out inc fs or jmp adc push mov (bad) das mov pop dec pop (bad) xchg mov push and (bad) rcrb xlat dec sub aad fcomi mov test mov frstor sbb mov test fldpi mov out and pop sbb xor fcomp cmc fs sbb and dec xor dec adc or and add jl adc out mov pop orl ffreep adc xchg shl nop popf ja add xchg dec sarb mov push clc jl call jmp cmp leave add (bad) notb add sahf mov adc imul (bad) mov or xor mov xor and lahf xchg dec lcall mov mov inc cmp mov add pushf dec lea or pop jle lods fwait pop pop push mov mov cmp xchg push call out clc jg and mov jne movsl fsubl mov dec inc push fsts or add sti sub pop add and std test insb push dec xchg dec and (bad) xor test rorb and adc push js cmp jg call movsb scas cld jmp cmp je (bad) and mov xor xchg (bad) les xorb mov mov sub xor rcll mov push mov pop mov shrb jne xchg loopne push jecxz mov fcomps push or xor pop push sbb ds mov mov jmp jmp mov inc mov inc je mov loopne sbb sbb sbb sub idivb pop add add add mov xchg jne test ja mov xor (bad) xchg sub and testb imul mov adc and dec or mov nop iret aad paddd and cmpsb call mov sbb pushf or add mov sub sub or adc sbb jno jge adc sub xchg mov cmp push push mov mov cmp sub lea cld dec fs jle cmp push mov mov dec das push ss push fldl sbb mov push mov sbb mov xor pop (bad) jmp js popa mov ret int3 and ds adc add push jmp outsl and fmuls loopne adc jl pushw xchg pop testb ja shrb add or sub pop jge push out cmpsb mov leave (bad) rol mov popf dec xchg popf dec sub lea add and test dec int3 scas or mov push mov rclb xchg cmp sbb push pushf jg push and scas fldcw xchg pop and pop repz push sbb and inc sbb push cmc adc sahf or sbb js lock add inc xchg pop dec sbb in dec cmpsl xor or add dec add dec pop ret (bad) aad js mov lods sbbl xchg add push mov and lods mov imul lock or addb pop xor pop shll cwtl cmpsl or or inc adc sahf hlt cli fdivl adc jl add pop mov adc outsl push outsb fs fdivrs push mov das or pop lock bound loop call jl lret ljmp jae int3 and fcoml bound push bswap inc adc shrb and (bad) push push and pop mov push ret mov mov pop sbb repnz dec or inc or sbb rorl jmp into rolb push inc dec pushl rorl ficoml push daa push add mov mov push jbe (bad) dec jmp push in mov sar adc or pusha call push jb fcompl testb add jae jmp push jnp cmpl in sahf add add or fiaddl mov xchg xor adc movd sbb lods (bad) dec insb inc sub xor arpl dec pop mov add cld cwtl push testb mov pop inc sbb xchg add push sub jge (bad) xor mov imul sub loopne push fs cli or aaa das mov xor popa mov ljmp mov (bad) adc adc repnz or notb ss dec mov popa or js js movb popf arpl jecxz mov mov mov jl push loop rcrl icebp sbb in (bad) fimull dec cltd push or repnz pop hlt sbbl divl sub cmp je cmp movsl push lret sub xchg push dec jmp xchg xchg lret imul add sbb adc inc cmp inc push outsl push xchg in scas xchg test sub pop jmp (bad) aam pop rcll mov shrl xchg pop movl rclb and stos jbe mov scas mov or out (bad) add jb sarl add push push bound outsl int3 cmp jo and sub test insb or push adc lret jmp cmpl call push jnp push js and sub nop daa (bad) mov adc scas sub cmpsl push push mov jmp cwtl rorl cld push lods sub inc fisubrl jnp test pop xor dec inc mov pop sub dec push jmp nop push cwtl ret dec in mov or sbb lods pop mov aam push out mov inc and push pop sub xor sbb cmp out dec les jmp movzwl push push or push stos je or push inc popf sbb dec or or loop js xchg pop mov inc clc xchg mov or clc cmp inc mov in leave xorl (bad) xor xor inc jo rolb and fsts pop sbb fsubl cwtl fild push out mov movsl xor inc loope pop jecxz cwtl lahf nop lods ds and repnz das pop repnz insb arpl lock je sahf je nop or sub sbb push fimul xor mov cmpsb xchg (bad) xor iret xchg dec mull add hlt lahf je inc sub in shrb xchg mov push push lock (bad) jo push js dec fnstsw cmp rolb or push adc add es mov mov xchg outsb mov popa dec cmp gs js fstl (bad) lret popa fwait sub jmp sub and push call andl pop dec jl mov cwtl inc xlat imul adc aam xchg push fisubrl dec jo jg mov test mov je or push push or fdivl or or lahf les subl lock int3 (bad) sub test jge in or popa cld data16 (bad) or push push out aaa lret push js xchg loopne or and fdivrl arpl aas inc pop cmc lea mov jb lret xchg or pop dec and cli (bad) and dec mov xorl push xchg (bad) mov pop adc fadd lock push adc xor hlt jl ficoml push adc lcall in dec rcll inc pop clc add ret xor adc loop lcall add mov mov aas inc xlat mov pop add inc jbe mov or push push inc dec mov out fsubs adc xchg xor data16 lods xorl aad sub adc test push nop (bad) clc mov in out shl je inc (bad) push bound adc add or adc push or das ret sub and call and aaa push lcall jl cmp fcoms jg add pop mov push or pusha xchg dec adcl insl stos push hlt imul in in and xor out xor mov pop mov inc insb jmp mov stc in xchg pop mov push sar xor push push pop adc inc sub xor sbb call pop pop jns sub dec lret xchg xor mov xchg imul or jae dec dec push fmuls dec xchg mov call rcrb loop xor lock adc cmp add (bad) (bad) imul push push pop cs test clc pop and lret negl pop xchg cmp pop je ja jae je ljmp jp cmp cmc or cmp imul jge addr16 out xor add sub or jge rep sub mov hlt jne xchg cli jmp xchg xor clc je fmuls sub clc ret sbb fwait mov inc push push cmp fwait aam jo aam push cmp push popa or stc xor add or jne ss ja mov mov xchg add dec push sbb push sbb arpl jne xchg jnp pop vorps cli pop or cmp jp mov fwait sub adc divl xor addl push clc pop unpcklps movsb inc add jbe adc mov and and pop sub push mov mov jl add xor push and inc mov call inc (bad) pop lret cli cmpsl pop inc mov add sub and or js adc outsb aad pop dec sbb xor in dec sbb pop inc mov (bad) mov adc xchg pop (bad) add in jno loopne (bad) cli lret push inc add fucomip push xorl or adc lods int xchg jg cmpsl jle adc fwait add subl es add (bad) (bad) or jl push fsubs push shrb in xor pop adc daa adcl and test jl push fcompl js jmp stos push dec test iret clc cmpl mov rorb (bad) in push and push or mov push cmp jg into sbb into in fnsave xor jge xchg fnstcw pop aam mov add je pop push sub mov and sarl mov push cmp jnp insl sbb mov mov (bad) cmp sub ljmp push push push jmp jle sub mov enter mov iret sub lock sbb sbb and sbb sub pushf push jns cmp fisubrl xor push or inc int3 cmpb lock cld sbb lret add jl pop sbb mov sub mov or enter in sub sub push mov sub (bad) lock mov jmp rclb mov or push or inc sub xchg jp cltd mov push cmovbe fmull jle push add fisubr inc inc cmp in jmp mov sbb inc cmp insb (bad) jno adc adc cld xchg sbb nop pop repnz (bad) or aad add adc mov fwait push mov push loop jmp stc mov adc xchg idiv out xor aas aaa fisubl sbb pop idivb push or scas sub push cs pop xchg lret xchg or mov or xchg insl inc mov xchg aam jge jb pushf inc mov loopne js inc add xchg lea add mov add shl inc and add push mov loopne jg push add shl std (bad) sub inc scas sbb lea nop and pop xchg mov or sbbb mov add mov inc fistl ret and push cmpl adc xor js xor cmpsb mov cmp and inc cmp inc add bnd ret pusha inc xchg lods mov bound cmp jo xor daa add or out push sub pop adc mov sub xchg cmovle jne adc icebp push add out adc call pop std inc aam jns movsb lds add adc enter sbbl mov pop fnop sub (bad) mov fst cld or dec dec aam hlt jl adc add cmp rolb sub and mov push or lods fsub sub sbb jno mov mov add (bad) push mov icebp gs sub mov call je pop test adc movsl movsb test cmp or inc pop pop push inc fnstcw xorl add xor sbb fist lret mov data16 nop lods or mov adc cmp push les xor cs adc sbb js push je hlt xor sbb and shlb addl cmp or adc and cmp pop sbb nop cmp sub push inc repz cmp jae dec cmpsb push jne pusha nop dec xor cmpsb rcrb rcrl dec mov (bad) mov mov (bad) pop adc sbb cmpsl sub test int add or and add jb out pop das pop jb ss addr16 movsl aam in cmp xor outsb or push adc cli test cmp (bad) in aas dec dec lods jns jmp inc cmp inc nop movsb (bad) xchg sub ret outsb inc adc jl mov adc pop adcb and leave dec leave (bad) movsl xor push in inc cmpsl test dec or imul repz (bad) dec add cs xor mov mov shlb rolb and inc ret mov out add ds pop mov loope inc inc mov push mov sub mov jle sub icebp lret je imul ja add or sbb pop inc daa addb or sbb or loope cltd lds inc or pushl mov lahf dec adc inc pop test (bad) or adc in push xor add lea push in loope cmpl clc data16 push or mov dec xor adc xchg cs push arpl inc in nop mov icebp scas add xor sbbl sti js add inc hlt push cmp ljmp pushl pop test dec mov or or test cmpsb fadd dec aaa push loop cmpsl rcll rclb pop mov push in mov xchg cmp lret adc pop or mov les les add cmp (bad) or rorl add push add cmpsl cmpsl and imull cs inc jmp ret pop push dec lcall add push push or inc hlt dec inc andb dec mov les sbb cs inc jbe iret ret cmp rcrl push shr cmp mov fdivrl pop ret xchg jmp hlt cmp punpckhdq xchg test xorl jg jmp inc lds pop rcr push push aad ds add sub jno xchg or dec ss aaa ret jle call aaa ret les (bad) clc add aaa (bad) lcall loop lea lcall jle xlat or out daa xchg out or xor xor push add stc cmp or sub add (bad) jmp lock mov push mov jecxz pop add mov and push je inc out daa imul ret outsb notb sbb and lock sbb popa push pop pop cmpsl mov mov mov cmpsl xor xor dec hlt mov push aam mov sbb aas add sbb out cmp or xor sti les ret jne and insb ret push sub adc mov mov imul sbb fcompl and (bad) daa cwtl loopne mov jno mov lret sbb insl lea dec inc xchg add pushf push and enter sub (bad) imul jp mov lods dec and cmp sub add ljmp test xor fldenv sarl xor pop mov dec or cltd mov dec jbe cs or fildll vmovaps push std dec pop mov cwtl dec mov sub mov les cmp jg ds push sub popa push dec mov mov dec add leave (bad) push aad cwtl pushf call pop ss mov out inc dec jnp lahf add or dec pop push dec xor or aam cmp dec iret push ret or imul jo cwtl test inc sbb test and lcall jns mov in inc rorb pop lret xor sbb test or xchg lret push push push test loop inc flds dec inc mov fiaddl clc push sbb xor out cltd js and pop adc xor andb fmul stos xor mov rcl or add loop mov jle pusha inc cmp pop or xor cli cld push lea inc cmp sub cld lea cmpb jmp cmp (bad) xchg icebp or lock adc insl sbb or lret jle cmpsb xor xchg test pop mov popa loop xchg lods inc ja jno out sbb add rolb xchg cli pop cmp mov jb (bad) (bad) repnz dec or rcrb push imul pop enter clc xlat sarl js and pusha add inc adc push xchg aaa or das rorb adc sub popa (bad) pop or xchg cli leave rclb mov and add add rcll rcrl je (bad) imul leave push bound pusha popa sbb aam or or leave pop inc inc adc or int3 jno movsb mov bound dec add adc test (bad) rolb hlt inc movsb out pop ss xor mov rorl or adc (bad) or inc jmp and jp inc push jo je int3 sbb inc inc nop adc add inc xchg fsubr mov xor icebp jg dec mov not shr and in xor or movsl add and xor (bad) cmp inc inc or push pop jl mov push hlt loopne mov sub mov pop and movsb or fisttpll ss aaa or sub inc pop jge cmp sub or imul ret or push and jns fnstenv jne jno pop inc add and jne popa jmp ds fmull aas jb xchg aam cwtl jl js push pop inc add mov inc and push sti adc dec and xchg sub mov or dec daa lea add xchg sub push test pop data16 dec outsb mov gs add and mov mov or xsha256 cmpsb push and xchg mov addr16 ds push pop dec sub and loope mov xchg sub push pop lods dec out push imul pop repnz in rcll and push aas or push pusha iret xor adc arpl add or rol and shrb pop inc push push rcl push push fnstenv add insl xchg (bad) xchg leave inc imul jne sub xrelease sbb pop sub roll sub movsb and test add sub jmp mov aam gs test loope pusha push pushf mov cmc (bad) push cmc adc mov xorb xchg or mov cmp adc mov mov jmp rorb inc adc mov movsb rolb or out pop pop mov or xor mov mov in add mul adc test out mov sbb or lock int cmpsl orb cmc in mov push or lods adcl add dec pop mov sub sub data16 push xchg dec inc lods insl sbb fiaddl pop xchg mov pop decl dec ret stc pop jo lock xchg js adc inc jmp insl cmpl dec jle sbb dec push pushl inc xor and inc hlt sbb mov dec dec dec bound notl (bad) jmp jne lock adc dec add add and add outsb lgs adc push pop push sbb and sub inc sahf stos jmp jge jnp push adc push test cmpsb aas adc les sbb xchg ret sbb xchg inc xchg popa pop sub aaa add add mov nop fwait clc aam jne jae lret pusha adc mov pop call or push mov mov dec insb int3 nop mov adc xchg (bad) lret aad and mov aaa fcoms xchg push into fdivl xchg mov mov mov out adc adc jle std xchg push push cmc sbb in or mov (bad) test push inc push adc jne dec add sub sub dec dec cmpsl jge and loopne (bad) (bad) or sub sub or sbb iret dec or jne gs sub loopne cmp (bad) push dec daa or bnd inc (bad) cwtl dec test pushf and xchg inc jmp aam lods fwait jp xor mov loop jb rcr (bad) lock lods sbb pop adc call cmp test xor testb divb and call pusha bound hlt adc bnd add dec push lcall add cmp pop inc mov cld flds inc push push push popa test sbb (bad) xchg icebp cltd clc xor mov inc and pop mov push ret xor mov and adc jnp xor jae add jbe push add pop push xor stc ret add mov sbb rcrl mov jle or pop fistpll or push sbb push or pusha mov jmp or js lret jb js mov mov test arpl jmp mov jmp push mov test push ret cwtl (bad) fbstp pop ret mov sti cmpsb dec enter push mov and push sbb xchg out cmp push ss cmp push sarl je push inc push add or jmp test pop (bad) in in out stc rorl cmpl (bad) sbb dec pop mov stc or mov or rcl decl inc sub pop or push inc inc sbb push je push push jp sbb xchg loop,pt dec adc xchg sarb inc inc jae mov pusha pop (bad) mov xlat out push dec ljmp push and aas or inc movsb xor add mov out xor pusha shll and mov xor orl arpl ret mov push js (bad) cmp push popf jns stos sbb xchg and adc outsb enter push (bad) push int mov inc cmp sub dec or pop enter jle and js pop add or mov or push (bad) mov adc mov pop or mov and dec jmp sbb xor outsl mov add xor ja inc inc aaa and push ss fbstp mov push or xchg js hlt pop je inc and hlt cmpw je inc jmp jbe cmp sub (bad) or (bad) cli roll jne inc push je cmp or add inc push mov xchg adc and pop popa and mov cwtl xor mov scas into mov adc jle sbb outsl ret fisub and and cltd xor cmpsb mov cwtl mov inc sarl adc adc fs inc xor push in add scas frstor add adc test jmp cld lret add jnp pusha push mov and jo or xor imul or sbb movsl adc or (bad) les cmp (bad) outsb add in aam mov or sbb enter cmp dec call iret jge or push push add nop pop pop xor (bad) adc inc push data16 in js scas scas push or pop or xchg jmp push push in cmpsl testb push xchg and inc pop out in sbb push ja pop std sub aas or inc hlt jne push or xchg cld jg aam mov scas int3 movsl clc pop lods sahf or mov loopne sbb cmp out jne sarl inc dec gs inc or push cmp push test sbb or test (bad) sbb pmuludq cwtl push sub jae (bad) sbb push lods fiadd ds in sub pop or ss xchg mov jo pusha mov ficom push imul xchg int ja (bad) xor loopne pop cmpsb dec loopne adcl or cltd mov jecxz les test lea sub rcrb or movsl and add loopne into and insl pusha add add jae adc (bad) int3 stos mov call pop outsb ret push mov sub je or pop sbb iret ss nop ss pop cmp inc push push xchg jmp addr16 mov ja dec adc xor in push insb ret jge jmp xchg rol or mov shlb insb mov jnp mov shlb sbb mov rolb inc inc (bad) movswl cmpsl lods enter sub mov push xor insl adc fimull add les jo ret and inc enter inc mov adc pop cmp out inc aam repz lods movb pop or cmovns nop and fimul clc hlt pop sbb dec push cwtl mov mov test call ret loop cmovbe sbb jae pusha push lret fadds pusha or (bad) xor and pop cmp sbb fucom jmp popf mov adc adc fsubs fdivrs mov loope push dec rolb pusha xchg xchg inc (bad) fnstenv mov mov fwait push out das in call je sub cmpsb pop leave push mov in sbb push or rcrl xor sbb jo xchg aas push fistpll loopne pop push pop push push adcl push jecxz jmp dec adc dec adc dec mov fisttpll (bad) sbb inc sbb adc pop (bad) jo inc lea xchg loope stos push sub rcrb mov loopne cltd insb inc loop xchg inc icebp movsb add push xor push js pushf lock lcall je push sbb stos cmpsb rclb or or mov pop pushl xchg jno fidiv pop mov daa jo int int scas pop (bad) hlt mov cs mov adc clc sbbb scas pop cmpsl loop sub xor in adc int3 dec or jo push xchg (bad) adc test sbb push adc inc and imul hlt adc out mov test cmp push shrd pusha pop and push test pop fcoml sub adc push (bad) mov adc add adc fnstsw xor notl push and fs addb cmpsb jo push popa dec pop jg lods lods cmp cmpl inc adc test pop dec movb or cmp adc sub push aad cmp movsb inc xchg add sub fucomip adc popf add mov flds testl add mov sbb inc inc lahf xchg push idivl cmpsb mov adc push and scas jp popf adc js and repnz in ljmp fnstenv subb push add jbe lods dec loope je and or cmp loop,pt push cmpl push inc imul test mov sbb mov mov adc clc (bad) push cmpb sub push mov and sub fstpt xchg clc dec push cltd movsb hlt in call test icebp sub mov xchg rcl sub lcall or rcrb repnz dec jae dec push push test sbb xchg loopne xor sbb daa movsb adc lods aam gs lock sub mov inc (bad) stos fcmovnb pusha push add inc mov jl xchg push xchg insb mov sub sbb and push push add push fiaddl mov in bound inc mov sbb scas test mov xor cmpsb push sbb loopne xor dec xor push xchg push push cmp and sub add lds stc or xorl insb sub xor aas fnstcw (bad) xor hlt clc imull jle or cmp jne inc cmp jne adc jmp cmp push stos ret mov insl cmpsl lcall and xor sub cmp je stos mov int jbe fsubr pop push and test xchg sub pop and cmpsl mov gs sbb push sub cmp test jg test imul sarl hlt pop fdivrs orb inc scas fiaddl das movsb push js pop push xor lds mov xor or push cmp gs setbe pusha pop jmp pop popf sbb push adc adc aam lods adc ret cmp aaa jmp or hlt lock mov xor sub inc popf ja xor aaa addr16 adc lea xor push test pop mov lea mov xorb inc xchg xor xchg adc lock cmpsb pop xlat daa xor jne xchg pop sub scas mov and adc fildl rolb and sbb orb or outsb flds mov mov and push loop sub lcall test sti xchg loopne cmc sahf sub pop xor push orl loopne jg pop push push sbb cmpl mov mov or sub jmp add enter jo push adc adc in mov jmp add out xor pop clc mov or enter xor ss bound sbb nop dec lods mov lods or inc xchg and sahf or add ret mov sbb es in cmp mov sti in ds adc ljmp cmc andb sub adc xor xbegin push ss jmp jne pusha pusha sub dec ficoml pop mov push xor jmp push loopne push ficom inc jb jl lret faddl dec adc lods int3 test sbb sbb cmp inc or inc inc mov adc lods adc dec push pop ss and stos xor xchg fcomi add jo fwait (bad) fsts or push add xor pop or mov mov lahf mov xor pop jno fwait and dec ret xor adc jge ficompl (bad) and (bad) pop (bad) xor jnp jne je dec sbb (bad) movsb mov sbb push push add fist push aaa hlt mov inc addr16 jno ret aad add ja mov sub mov mov mov pop test dec or mov lock sbb jns push je pop push addl cmp or jo cmp cmp push inc lods scas jl push xor jne call ret popa sub fild pop add adc jb jge lret push add pusha xor add mov adc outsb sbb xchg sub or dec push scas inc push inc cltd dec or sbbb sbb xor mov mov movsb out pop ret pop icebp sub sub add test (bad) mov sbb mov loopne inc add loopne or sbb and add push add testb dec or in mov xor test adc lcall jbe into pop cmpsb mov shrb push sub jno cld nop or xchg xor les lods orl sub popa sahf mov jge jns js push inc push or scas and aas pop adcb mov outsb push clc pop outsb xlat add test add loop and in cmp mov sub ret rolb push add jge mov mov or ficom enter cmp mov xor jmp add cmp rcl add push adc lret cmp jne in hlt fs push mov (bad) mov push cmp mov or mov je subb int3 movsb mov push mov imul in aad fisubrl inc mov fwait rclb sub je cmp sub jg push or adc int loope nop push loope jne lret cs mov push out pop pop sub adc dec mov (bad) icebp push es pop jns sbb lret sub add lock dec testb mov or cmp pop adc movsl loope icebp cmp scas loop fstpl jb fdivl push nop adc jne mov sbb jbe and dec or testb lea and sahf ficoml mov outsb das test mov idivb cmp push pop loopne cs aam mov loop jb int adc adc xorl divb andl mov fcomps jbe lock fcomp mov ja inc push aaa adc mov popa repz bnd call and (bad) sbb popa out les bound mov stc xchg sbb jmp xchg daa xor inc cmpsl cmpsl rcrb or add into stos fimul adc aas mov jmp add cltd sbb pop or jo imul and maxps dec sbb add scas (bad) shlb jmp push scas popa and jno lods icebp stos cmp dec add push dec mov test pop dec iret mov cmp iret jmp and and sbb adc pop out in repz in ds repz and ds sbb xor inc push in add dec add sahf out outsl pop ja pop pop fdivp mov ret int ds repnz sbb and ja es in insb jns shll testl fmull push add xchg push lcall movl call inc mov test inc sub sub rolb jb clc hlt xchg mov mov in outsl xor call faddl cld je fs test or dec mov xchg mov dec mov pop mov int cmpsb (bad) hlt xchg or lds sets mov lret mov ret iret or inc rcrb mov xor mov jl push aas sbb push cmpsb (bad) cld ss mov loopne cmc imul aas sbb push push push sbb push and mov adc (bad) int dec or xchg adc push lahf loope jb adc daa jmp push lds cmp cmp adc jbe imul hlt call push repnz push (bad) rorb push push xor push push hlt sti adc nop add inc aaa inc enter fsubs push mov bound mov pop dec loopne inc xor test xchg stos pop dec in adc loope inc js cs add cli ret cmp daa jne sub pop int3 pop sbb push xor aas pop les push sti jno arpl sbb imul and push fbld pop lock jo outsl dec (bad) mov inc data16 adc pop add aam cltd stc sbb adc je dec push fs ds jmp addl push sub pop xor xor mov aad add lods jb adc push loope or dec mov jo push sahf and lods sub mov sbb and adc or inc imul push les adc test inc cmpl cmp cmp or cmp in cmp pop mov add mov and xchg mov and push push fdivrs ret add xor inc lds xchg mov cli and or inc idivl imul fmuls push imul sbb fdivrs cs lea adc mov fimull cmp dec adc cmp cmp inc sub xchg stc arpl ja hlt cmp sbb test sub (bad) adc mov ficoml das jbe or je dec jne roll add fmull or and and mov inc movsb fs inc repnz into (bad) imulb xor mov mov into pop je cs cmp sbb cmp cmp (bad) jbe clc and pop jmp cmp (bad) xor or pop xchg std adc push loopne sbb cmpsl add cmp aaa pop jne mov data16 out rcll je adc push ud1 push mov adc add add or inc inc xchg dec daa push (bad) mov adc and xchg fnstsw sbb test fcom cmpsl cmp movsl adc add shll adc xor std lds sub adc lea mov pop or pop dec das cld lahf xchg lock sbb or or and mov in jo sub jo and pop add mov jmp adc xlat sbb mov sub adc and sbb xchg rcrb sbb cmp roll (bad) in pop dec jne inc or xor inc jge add inc mov sbb mov or and mov jmp and push in (bad) jge test repz sbb aaa push jmp mov leave push dec aaa mov sbb push int3 (bad) mov popf push cmp dec es sub lods mov faddl push mov lret nop loopne cli inc or rclb lds lods inc cmc adc lret pop js adc insb push int3 push adc pusha inc in dec push push xlat mov cmp dec pop adc cld pop lock or insl sub test shrb xor insl jge or mov mov (bad) pop in or movsb push aas mov (bad) mov inc clc ljmp in mov les or aam mov jmp mov push inc mov mov rclb sbb icebp dec add jecxz mov or imul sbb mulb cs inc incl jmp or mov pop add cmp and clc mov cmpsb sub (bad) lock or sbb push jmp push xor mov adc dec scas adcb mov push scas fnstenv cltd jno jecxz lahf dec mov sub mov popa xor jmp and mov adc inc adc add stos lcall test orl adc gs or sub mov or cld dec or xchg mov sub push aam stc ret inc pushf jo mov xlat lret (bad) sub cmp nop sarb inc add xchg stc std inc mov cmp jne xor jmp rcrl hlt jle sbb loopne in add inc pop push add mov add movsl icebp (bad) cmc cmpb xor aad push sbb mov je push or mov mov xchg inc (bad) icebp add inc jb add gs gs add test addb push or xor xorb mov movsl and addb sbb lret cli out faddl orl add add fisttpl push adc push or sbb add mov lods loop pop xchg jl and pop nop dec adc adc mov fs (bad) jb sub pop push addl mov xchg pop fs mov icebp sub icebp mov rorl adc pusha jecxz and pop jnp inc xchg orl rcrl add mov add mov cmp je inc push jne sub sahf ret xchg cmp and cmp (bad) (bad) mov call push xor sub mov push push ds sbb mov cwtl sbb test push inc cmp (bad) xor sarl jl ret sub in add cmp push mov ja push test adc sbb add adc or loope adc andl push dec or or pop mov mov xchg push por mov mov and pop dec jl add pop ret pop push idivb sbb push push fnstenv and xor cmp sti sbb push insb pop pop inc in inc adc stos push je jl mov adcl sub sub push xor pusha mov lods jo,pt movsb cmp mov daa pop and imul sbb sti rorb (bad) int3 jp jmp aaa or add xor hlt (bad) xchg inc sbb shlb sbb jnp inc inc or mov adc push cld xchg cmpsl dec mov (bad) fwait (bad) mov addb call mov or adc push add rolb and adcb hlt aam add fs fstl mov mov cmp xlat sarb and mov push or xlat mov iret dec add and xor jp mov mov sar dec add mov daa push (bad) negl movsl add sbb repz sbb popf iret rorl inc xchg or jmp or rolb push aas adc pop stc and addb jo lods es (bad) outsl sbb jbe clc xor adc out popf mull add pop ss cmp jns add fbld sbb cmp or and roll clc test add cmpsl cmp add mov rolb and cmp cmp adc add adc rolb sub sub pop jl test add add and dec mov fwait push sahf mov cmp notb xor loopne inc pop add jbe movsl push cmp lods ds push cmpsl hlt adc imul dec xor add dec mov and inc xor loop mov adc subb mov sub sbb push (bad) rolb inc push mov adc sbb arpl adc mov fnstenv pop or sarb mov jp xchg dec xor push and dec add fadds loope,pt clc xor (bad) pop scas mov push leave sbb adc pop cmp aam inc or jmp jae sbb add mov and pop clc ret inc bound cmp and in je cmp push and inc jbe fnstcw dec sub dec cmp jo sbb jnp add (bad) rcll cmp mov mov fidivrl xor sbb sbb repnz aaa mov xchg sub pushf sbb cwtl aam xchg test and or cmp loope cmp cmpl rorb jbe ficomp sub xor adc push dec xlat mov pop std push nop arpl push adc lds and xchg rcrb cli or mov leave mov sub sahf mov add stos push out and (bad) stos xchg push mov jb add pop rcrl jo sbb shlb in repnz sub ret idiv lds daa add add or dec lea mov ja push cltd xor mov subl adc lock mov pusha arpl jmp enter or jg push andb clc xor je sub sub mov out mov (bad) jmp orl and dec fiaddl and out xchg mov stos pop jl daa call xchg popa add dec inc scas xchg xor (bad) pop push mov xor adc and ja xchg cld movb push insb loopne cltd jno sbb pop sub jge popf (bad) je rclb mov xchg dec cmp add loopne mov insb push adc mov imul scas adc mov xchg jp orl push cmp in aas icebp cltd dec dec or mov jl push add les je add (bad) cmc xor jle scas jo sub xchg add xorb mov pop mov gs cld sbb inc dec aaa inc adc adc xor mov lds sbb jb (bad) xchg xchg pop lret aam sbb mov add xchg and ss push or lods into sbb dec inc in lock and push sbb in (bad) xchg addb in jge or orb mov nop into or sub jle pusha pop inc insb ret push mov (bad) lcall dec pop or lods inc pop pop cmc and (bad) push sub cwtl cmpsb xchg adc orl xchg insb xor lods add ja in push movsb sub dec popa or cmp xor into test iret test push xor adc test dec lods stos and jmp push xchg jmp sbb fdivrl je fisub add int call jae ljmp sbb xor test in mov jge jmp das jmp int out popf out ret data16 xchg addl adc lods add cmp mov sbb adc ret jno mov frstor clc push pop cmp loopne sbb xor dec scas inc sub cmp xchg mov cwtl je jmp popa jge stos test jecxz dec add xchg mov push push xorl push dec add fmuls cli and or sub adc popa sbb mov das jne lods mov jnp add or movsl push scas out ljmp dec pushf add add xor movsl ret sub xchg lret add dec or cltd inc js jo sub or les das or sub jno inc mov nop mov xlat cltd and sbb rcrl sbb jb aad mov es jl dec inc aas add std cli add ret dec push mov je and xchg push cltd push loope rolb jle jne movsb adc ja mov xchg adc mov or xchg test xor add (bad) (bad) add push add iret dec or sbb aad test js sub ss xlat mov out ret pop adc aas xor inc fdiv das push pop and loope mov cmp sbb cmp clc in or xor cmp enter mov xor adc push xor cmp stos (bad) cmp scas inc jo mov mov clc out jecxz cmp and or mov pushf ret mov aad push xchg push push hlt cmp popf xchg add add (bad) add push or mov push adcb add andb loope or adc sub adc test or sbb jne pop mov or and rcl sbb or pop lods decl jae or loopne sub xlat out fldenv adc push sbb fs add jmp pop pop test push push jmp mov inc sbb mov jb sbb insb clc js cmp jne cmp mov cmp je sub mov lock inc fs or je xchg xchg fmulp fnstcw mov or or mov sub jno fs adc cltd out icebp xorl cmpsl add mov pop outsb sbb xchg cmc cmc test jg cmp je je cmp xchg das push add sub jl aam xor mov xor mov jle push xchg loopne lods jbe jmp adc push or int3 or sbb adc xchg add lcall jo sbb and pop push subb sub cmp jae push push push cmp inc (bad) in dec insb xor mov push das je pop or inc add lds inc sub mov mov mov call pop or clc orb mov xchg pushf ror mov mov cmc leave and cmc pop pushl cmpsl adc out sub push add lods nop imul icebp gs adc bswap cmp in xor jge stos inc jecxz sti jo and shlb cs inc cmp sbb dec jo and adc sbb mov jmp jns ret cmpl mov pushf rorb xor push (bad) pop push adc push dec (bad) or test test sub add sub adc or or xchg jne xor pop aas or add ret pop fiaddl mov je lret test cmp xor sbb lock mov push pop jo rcr int jge cmp sbb jae lret push fcoml jae jmp lock lods mov (bad) ficomp je push repnz xlat fs cmp das push fadds push push mov movl insl push lcall lock loopne pop xchg icebp add pop scas adc push push pop adc cmp pop mov mov xorl push sub cmpl loop rol inc add mov loopne sbb (bad) sbb aas or js sbb fwait sbb xchg into adc add sub and sub dec or int3 or jno dec and mov or je pop in adc mov in (bad) adc sarb add xor or out mov mov add pop (bad) pop sub sub mov and movsl add lret or xchg andb cmp jecxz sub sub aaa leave sbb push mov or cmp aaa lock adcl movsl xorl pushf jo cltd xor jbe cmp push movsb dec inc adc pop add sbb jnp xor rcrl mov inc lahf orb push sub xchg lret ds add sub inc xchg lcall jae cwtl mov or pop fisubrl daa ja insb frstor ja je stos mov sahf test imul jo or jle sub jp and add push lods dec (bad) mov jns push push jmp add lock push cmp sub nop inc enter imul xchg jbe cmp xchg js add fmull loopne (bad) stos es xor jp xchg sbb push dec cmp pop lock cs fldenv jle mov mov insb jne insb je popa xchg lcall insb mov or dec push pop jnp outsl or popa in mov cmpsb sub mov aam cmp xchg adc or loope shrb pop bound je (bad) jne pop mov push pop sub jbe decl je dec int3 jp in icebp decb inc in jne push xchg sub pop or sbb push shlb xchg xchg subb push and out das pop pop out mov lods pop pop jle sub loopne in in jbe scas xchg xchg loopne mov jecxz scas mov incl mov sub and cltd icebp jle push sub loope fs jmp enter add sub or mov cmc rclb or and daa inc and mov or orl push add cmp cli dec adc icebp jecxz push jb fsubrs push fiadd jns mov imulb roll lock sub inc sub rclb cld inc jno lods or ds repnz mov xor (bad) push lea addb mov sub jle xor jo pop cmp test push das xor mov mov mov and int3 xlat xchg roll add dec mov enter cmc adc and mov rolb xchg mov adc lods push or or adc mov insb leave leave dec mov sbb clc sbb and js imul push dec pop popa pop inc loope mov repz cmp pop jae cmpl and push inc adc fdivrl pop pushl xor cmp sarl sub pushf cmp mov adc loopne push add dec std ss dec mov pop in jmp add shlb loop fcomip and or inc cs mov mov sbb cmc sub les sub loopne rcl jmp add fdivs and in mov xchg add cmp jge inc add int3 jmp (bad) sub jns push inc add xchg ljmp lcall lods pop sbb lcall cmp and aas jo rorb in or test adc pusha enter aas push xor push dec scas iret daa (bad) mov sub sbb dec test cmp cmp mov push push pusha add sarb jmp sub dec pop push xchg and loope sbb pop icebp inc dec or push rolb pop into call xor jge addb dec cmpw inc mov es sub mov push aam dec push add nop dec fstl xor sbb (bad) js pop jne lea xor xchg dec pusha or pop jne push or sbb sbb mov or ljmp and or push push pop stos jb sti icebp and and dec or dec addr16 xchg mov inc lea push jns insl pusha cld lea pop int3 lods dec and jnp xchg or mov pop aam inc inc roll (bad) adc and add inc pop shll or inc jmp add sbb insl xchg dec sarb mov xchg xchg icebp mov xchg inc icebp and push sbbl js add lock (bad) jae inc xchg cmpsb jno xor push dec sub idivb push pusha or test nop rcll adc adc and roll test xor pop addl cmp add fs or movsb lret xchg inc and mov add out mov cmp adc pop mov or xchg sahf push push std lea push or das (bad) fwait cmp in cmp fidiv aaa push (bad) dec inc mov xchg add inc adc inc fsts push cli add js fadds pop add shrb add sub adc (bad) push aad cmc shrb cmpsl je jne jge dec jo add jo nop dec shrb pop pop sbbb add or pop mov fs idivl push pcmpeqb adcl lret movsb push add ret xchg xchg mov pop clc xchg hlt shrb rolb push rcrb fsub fldenv test mov and (bad) mov lret nop or adc mov cmp pop xchg or sub xor xor in hlt dec es mov and mov xor push xlat pushf push (bad) iret pusha dec sbb arpl roll sbb rcr and pop push cli push (bad) inc popf sbb mov loope mov ret aaa dec sbb or cli cs xor inc lcall push sub sbbb pop cmc jmp adc sub dec loopne pop adc and mov mov xchg pop lods jo add xchg add push adc pop sbb cmp sbb or dec es jne ss lahf and lea adc mov rol call inc inc push es dec adc dec pop sub sbb add mov in or jge pop je push inc sub add mov add pusha fisubl (bad) repz mov insb roll sub xchg adc fnstenv push sbb or mov dec nop or sub nop mov je push cmc mov push ljmp arpl bound gs add mov jmp movsl les outsb ret mov adc jno jo push cmp fildll add xchg nop cmp jne inc sub pushf pop mov mov ret pop mov imul and rcll ret jb ret test jnp sub lods inc rcrl adcl leave andl insb xor xor jns imul xchg jo sub loopne and or and test adc enter adc (bad) sub adc fist push sbbb rcl add jae,pn push pop mov scas fs lcall xchg mov jae leave sbbl ja inc es xchg and fcoms (bad) ss jg int3 rorl push pop and out mov jbe sub je sub xor test jbe lods adc lcall (bad) nop jg inc movsb push repnz push adc pop sbb (bad) fs cmp push and into add or or repnz rorb out lds adc xchg cmp loope sbb pop aad sbb pushl or push push lock pop push adc mov xchg mov rolb jno,pn mov adc add in xchg jmp lock inc ljmp xchg or add fadd (bad) jle add rcrl or (bad) in jecxz mov adc add and in push jecxz dec or adc inc mov daa popa pop repnz test pop enter xor and test fcoms fs addr16 pop enter mov fadds jbe and sbb enter jg dec xor and pushf sbb inc pop xor xor dec mov xor xchg enter shrb push mov rorl pop and xor push and or or add push add or lock xchg xchg mov dec clc in or mov call cmp push and push add jmp sub add jns scas daa inc inc push jle loop push mov jbe push je jl add pop cmpsl or jmp cmc decl mov mov jmp das cld int add push mov jl mov mov clc inc add clc jmp es test cmp cld cmc adc sti cwtl pop and and xchg stos test or (bad) jmp mov call pop push jo rolb adc inc mov add es sub and andl or add hlt mov clc push push cltd xchg jae mov (bad) xchg test sahf or sub test (bad) loopne pop push sbb inc aad xchg fdivs add pop dec jle sbb aam sbb sarb xor cltd mov adc fdivrl fsts inc inc inc psrad push push or jns (bad) pop mov xchg pushw dec inc jns push cmp adc (bad) daa popa test fdiv add or test xor sub jge stos mov enter sub jo dec mov repnz pusha loope (bad) and stos rcl (bad) add stos (bad) ds cmova mov xlat add lcall fldt inc jle dec cmp iret and jnp (bad) dec xor and loop add clc in movsb push add cli add cs pop inc scas (bad) (bad) aaa es sub rcr in mov sti ficomp lret lea sub (bad) push cmpsb adc xorb mov cs sub testb ss sbb inc das xor add sub and jb js fildll pop clc insb push addl xchg mov push push xchg sbb fdivs sub add (bad) clc add xchg clc mov fiaddl fcoml lea repnz xchg and jmp bound and adc or inc xchg outsl popf dec sbb ficoml lock pop inc sbb les jb or into lahf adc and sbb mov dec fldt arpl movl inc push push sub (bad) mov imul sub out xchg addr16 inc data16 sti lret insb cmp push sub push ss xor pop les (bad) or fsubrp cli scas mov je push push mov call jmp and or add sub int das ss push pop daa mov sbb dec and pop xor add mov add mov stc add popf inc insb cmp pop incb dec mov inc sub or or or push popf push mov dec (bad) loop mov fcoms hlt mov (bad) jb daa inc sarb jo pop jo adc es repnz push shll push jle push push fsubs or imul ss into push mov leave lods adc adc jae pop shr cmp test push rsqrtps loopne jg inc (bad) loop sub adc fidivr cmp xchg pop jbe (bad) or inc enter and sub xchg adc or sbb or sbb test add fstl push test ret or in les cwtl (bad) xor enter push mov pop loopne and mov inc and or sbbb gs cwtl pop jecxz push pop push cmp push lahf orb je into (bad) xor adcl jmp xchg sbb ja stos and cmp push or addl and jo xor or mov out mov jae ret add push sub pop je fldl mov mov inc inc (bad) sbb lcall (bad) je (bad) les lret pop xor ds outsl mov fwait xor push and xor add push push clc data16 add dec rclb mov jl fimull sub sarl inc fbstp out adc jne pop adc ret lods pop test dec pop xchg cvtdq2ps pop loopne andb ja or outsb inc push or mov add sub mov adc adc push push cltd mov adcb xor testb popa lea mov xchg push xchg adc cmp xor and adc inc xchg clc mov lods dec arpl add and xlat adcl xor push adc in inc (bad) rcll sbb push add ljmp leave add cltd dec (bad) int3 sbb adc or call ds pop inc and xlat pop ss stc ret bound addl sub and inc aad pusha mov icebp and adc inc inc adc push cmp repz dec (bad) inc sub cmp insl cmp loopne and jbe insb rclb jae inc adc fist fs pusha mov cs mov sbb sub into rclb cmp and roll or dec out xorl and push or out fsubs arpl jne js dec push jbe test sub mov cmc ja mov dec jmp or cmp push add mov pop (bad) fdivl mov adc xorl into (bad) mov adc je pusha jne sub dec pop mov outsb movlps mov iret inc sbb adc call jo inc rcrb rclb pusha jo jmp enter in ficoml sub mov pop dec sbb or mov pop clts movb sub call movaps add addl add add cmpsl xchg cmp adc rclb jmp or loop pop rcrb mov jg push or mov jecxz xor sbb nop cs mov push mov fwait add (bad) fcmovne push fwait push lea pushf rorb repz pop add pop push or addl ret lock mov (bad) pop add mov push test mov ja xor jmp (bad) sub add lea cld mov mov fs mov xchg xorb loope sbb xchg (bad) mov push push or int test push xchg adc or imul and jns pop call stos sti adc mov mulb pop data16 clc (bad) inc movsb sub fwait mov lret (bad) je std xor cmp mov jne outsb inc bound push adcl cmp test push or and push jne mov mov lds ljmp mov fwait sahf cmp and scas lock cwtl or lahf mov in and mov stc shll les ret dec add mov outsb add xor inc dec (bad) into jmp incl aas in add inc dec fscale ss data16 andl cmp or and sub push add int cwtl rclb sub sbb add nop dec in mov pop les or or xor or outsl iret lea clc mov push inc mov mov loopne mov push movsl mov sti cwtl cmp mov jno rorb bts sbb inc imul clc or mov mov ja test out jne jp add pop jbe mov into inc or loop fimull popf enter jno lds sub xor push add sbb scas and (bad) clc xchg rcrb add fwait dec and lods push negl in imul inc sbb psrad xchg mov inc mov repz jg mov pop push and add cmp jl cmp sar ja cmp jl cmp jg push or loopne std hlt call xor cmp jge dec (bad) sarb adcl add inc xor pop sub jmp inc push inc pop loopne and and dec and out (bad) ss outsb mov fisttpll inc cmc pushf xchg addr16 cmp inc jl arpl jmp jmp adc push stc clc jmp mov cmpsb xchg xor inc rcr push add or lea cmp push add in ss decb adc or inc addr16 dec les dec and pop outsl dec push stos in (bad) xorl jne add nop mov les xor add sbb call mov jge xchg adc mov cs jo xchg cmp push pop nop or xchg jmp (bad) add inc dec dec xchg add adc jnp pushf xchg add rorb scas (bad) sbb rcll data16 leave dec and and adc xchg cmp repnz test adcl (bad) insb xchg add aas xchg pop mov jne mov mov insb adc add mov out xchg mov xor data16 in mov sub sub inc pop jecxz mov add lock or xor sub and pop jmp mov dec push inc add cmpl leave adc sarl je inc pushf bound daa rcrb pop push mov mov add xchg add cmpsb push push dec lods mov outsl adc dec and adc or push js xchg adc mov dec int3 lds dec mov dec (bad) pop mov or dec pop mov mov bound xor fidivrl mov sbb jg adc push cmp jne xor data16 xor and movsl mov nop hlt daa inc inc test sub rorl push inc clc dec test lock mov push stc clc bound add inc and dec adc subl es cwtl jmp mov inc pushf sbb inc aaa push cmp xor mov jecxz cmp and mov push movsb dec fdivr cmp loope fmull pop sbb xchg mov xchg adc divb mov or add ss add hlt insb inc mov popa lahf dec nop movsl cmp fwait outsl sbb in shl push xchg shlb lock mov push call lds or (bad) jge adc daa add test bound scas cmp fsts push push (bad) addr16 mov (bad) cld push push push mov aaa addr16 or pop mov shlb push xchg mov add mov gs add xchg fwait test xor push push push mov jae pop les add movlps inc aad test test xor xchg inc mov ficompl sub insl add into hlt ss adc xchg mov movsb mov sbb adc sbb sbb xchg mov les dec push xchg test jae cld add mov push ret imul jmp adc out mov das adc lret xchg loopne je jne push mov cmp test mov push push sbb or sbb xchg lock cmp push add inc jno jmp pop and push mov mov xor scas push (bad) cmp mov (bad) add push push andb sahf nop push dec push mov cmp test outsb add (bad) roll pop mov sub push adc lock std lcall shr cmpsb add out sbb xor pop iret rcrb es fldt xchg sbb or stos dec sub js mov je imul inc and add aam int or pop push add repz roll mov addl mov jmp lret mov xor xchg add cmp fildl into call daa out in mov push jmp xchg push mov xchg mov sbb inc mov sbb clc inc pop or fisub popf dec sub adc or cmpsb imul adc xchg sbb and in pop ffreep sub js loope jno into push mov mov rorl push add cmp jl xchg ret mov inc inc jl cmp mov adc loopne cmp xchg cli bound mov fnsave xor mov sub imul repnz push fdivl pop adc ror ficomp and and sbb js mov xor imul (bad) cmp push xchg push mov adc push and dec nop and pop (bad) jmp inc mov sub or jle fwait shrb sub repnz cmp test inc enter int3 mov and and cmp push fs iret or insl addr16 loopne (bad) arpl nop add and sub sbb imul cmc ret add xor sbb hlt loope pop cli je pop imul push sbb ds cwtl cmp add sahf mov push and test sahf cmp cmp inc (bad) mov cmp popa dec loope cld scas fsubs mov or inc cmp mov sub push out inc adc adc sbb shrb rorl xchg push xchg scas je sarl fwait ss add cmp mov or rcrl sub push adc jns pop or add adc aas xchg lret dec (bad) mov sbb enter loopne xchg jo mov push mov fs les imul jge dec adc add jl add adc or test sub inc inc fnstcw subb int in daa and call rolb fcoml (bad) out enter rclb and pusha sbb fs xor or sbb push daa adc in test mov pop mov mov fdivrl rcrl (bad) and sbb push das fadds pop jbe aad adc push test es loopne sbb fisttpl and cld test negl data16 out add mov mov and push push test outsl fwait mov xor sbb cmp mov or repnz adc mov lods sub ds push push dec mov mov addr16 idivl sbb mov adc xchg out cwtl adc imul sub clc (bad) sbb or mov lret test push pop or jl push pop dec in mov sbb mov push mov adc arpl scas scas sbbb push frstor lea imul mov lahf add xor fcomps inc or or sub xlat hlt cmpl mov popl push popf add jg in aas lahf pop pop or mov dec jg cmp sarb pop mov pop dec push push enter mov push lret bound sub lock adc sub pop jmp imul mov shlb (bad) push push pop push lock nop push adc and dec mov fs sbb dec bound subb xchg out test or das push mov shlb push xchg shrb sub mov roll adc aas add inc cwtl inc mov outsl orl lret or push mov pop aas inc lds sub sub addr16 std pop adc or rcrl call aad mov sub jbe pusha inc sbb jbe fnop jecxz pop int and fisubr sub in arpl cwtl lea hlt addb push popa mov into add dec adc dec push or mov xchg and (bad) jl sbb and jge push adc pop pop outsl xor addb mov dec pop addr16 nop inc adc or pop push xor adc je push fwait out sub lea sarb or pop jo mov xor enter add or mov lds sub roll pop push mov je fmull lret pop cmpl dec cmp adc pop sbb xor dec cs pop cld ret adc fcoml sarb jmp dec push jbe inc sbb in mov add sbb mov pop iret fildll std xor push xchg outsb dec call cmp or and xor fmuls add jmp outsb and es adc cmp mov fsub push and add jnp pop jmp pop mov roll sub pop mov mov xor pop xlat push adc adc rolb mov mov dec pusha pop cmp push inc and or add add das add outsb pop js mov cmp in aaa rcr xlat pop repz pop xchg add mov (bad) test and xchg and movb dec or and or add add test inc sbb jae push xor xchg mov push shrb push xchg fs sub pushf test js out jnp lods add lret in xor pop fistp add add les or or lods (bad) popa mov jecxz ret xlat ds pop adc and jge xchg sub add and add jle adc fdivrs dec jl loop inc jne fldl lds xchg push int3 lds arpl and and cmp mov mov cli jne push add pop add cmp insb lahf aam sbbl out aaa mov inc in sub mov add inc adc and dec inc adc cmp jl addr16 sbb push shlb inc divb scas pop mov dec xchg insb adc pusha cmp ds or sub adc jge mov xchg push insl scas lock adc sbb addl mov inc (bad) (bad) fdivrs sbbl lods les cli pop add mov adc adc sub xor clc add addr16 rorl loopne movsl adc sub imul mov mov mov push inc push stc add clc mov and xlat dec inc inc call pop lcall or mov rol mov mov sbbb gs bound ret subb or cmpb mov push cmp in add jge cmp scas bnd popa or out add les lea push adc gs push lea push or sbb inc (bad) dec adc sbb xor xchg adc inc dec sbb dec loopne pop mov dec cmc jmp add adc fsts xor jmp push repz (bad) jecxz sahf shrb mov sbb cld adc and add aas and and ret mov pushl add lcall or loopne push adc nop push cli loope jne add or std mov shll jo mov mov lods dec stos cmp or pop sub push sub mov jmp pop aad call mov xor xchg mov cmp and add or mov jge mov sbb sub ds adc pop hlt insb ret mov cmp or or and and sub dec mov xor xchg movb imul sti ljmp pop adc jo pop jbe inc int and and adc sub sarl add sub jle dec cmp add or in stc cs andb mov fbld lods mov jb pop cwtl mov test xchg jmp das and xchg xchg scas data16 xor sarb adc loope rclb mov push pushf cwtl xor add lea movsb imul push push movb sbb subl leave cmp mov sbb mov and xchg jnp adc or loop or mov and dec or push cwtl jl mov jmp xor xor das add shlb xor adc dec js sub pop out psrld push jl in xor cwtl imul cwtl fldenv sbb faddl cmp add fcmovu fcmovb jge inc jne push or repnz insl (bad) adc adc (bad) testl mov mov cmp xchg out fisub ret push mov xchg pop mov lods dec xchg or inc rolb xchg push pop enter pop in insl mov mov and (bad) in aas mov in js insl mov dec in out or cwtl mov xchg test popa adc fmuls pop mov add jle pop lea setns push pop push inc add sar adc sub in stos ss or inc pop cmpb sbb cmpsl xor jl push or mov and ds out sar mov sbbb inc pop (bad) xor add fwait sbb xor negl cmc out lret add shl es dec sbb repnz outsb or dec outsb aam push icebp push imul lock dec icebp sbb mov lock out dec mov add imul mov xchg cmpsb in ret pop jle add addr16 push sub fs push mov push push test enter jge xchg or jo dec dec popf in adc lcall leave js fsubrl push xchg sbb out add sub jmp xchg pop ds js jnp jb in jo pop push push fst mov inc push nop xor jne shrl enter add fbld cwtl sbb or leave stos sahf jl jnp or pop push and sahf jb push mov lods in popf or mov mov pop mov push adc das dec in sarb (bad) or push or ds add jbe lea sbb pop xchg and fisub jo je (bad) cwtl insb add add pop mov add or (bad) stos sbb inc push sbb daa xor pop push xlat inc push addl xchg in lods cld dec clc (bad) cmp rolb jge sbb adc adc xchg inc loop cld push or lock mov xor push push nop or sub js pop mov cmp aad cld cld mov adc pop andb mov push and push adc and sbb and mov das inc ret rcll fbstp and add mov adc ds sbb (bad) repnz inc lret mov push push dec mov loopne bound sbb mov pop lret loopne push lock adc dec lods pop dec pop mov (bad) mov dec jle pushf outsb pushf outsb popf ret push movsb test into lock scas je mov clc daa outsl fs push sub iret mov pushf aad rolb in dec add out movsl xor cld and dec mov out mov andl dec adc add xor leave dec loope push das dec push pop aam std mov pop sbb push sub xchg lods cmp pusha or nop rclb inc js imul loopne movb push ret addr16 ds sbb daa pop push xor xchg lret je push (bad) jbe pop push add cmpsb add adc jae cmp add mov rol jle pop sub jo xchg leave inc jo test or ret mov dec sbbl xor (bad) add out xor psraw sbb in repnz jmp adc fisttpll push push mov mov or mov sbb xor clc adc mov or add mov push pop push sti gs clc in das ja add pusha je xor push das cmp mov sbb push mov sarl mov add add fiaddl pop (bad) push push dec imul xchg xor jno adc cs inc arpl xor and pop loopne,pn enter test inc test cltd notb jge add cmpsb cmp (bad) aaa cmp lods mov inc or pop pop jae pop (bad) test shrl hlt pusha in inc or mov clc in into mov inc sbb push pop and cltd mov (bad) outsb mov xor ret jne movsl sub dec sub fs stos and rcll inc xchg adc fdivrl (bad) or scas aas dec loopne dec nop mov push sbb leave iret sbbb xor in pop pop es mov dec leave jb clc cli jnp sbb shrb mov push add nop out scas shrl test clc and add pop or xor lock (bad) jne lea fiadd inc or pop test ret cmpsb adc addb lds inc test rorl pop adc cmpsl jmp xor rol mov and jb adc jne xor dec or pop xor in (bad) adc pop add adcb or sbb add push pop lret push add js add or add shrb test xor (bad) out lock sub sub mov inc inc sub movsb and leave test jecxz int push add lret xor and stos mov mov into push mov ror (bad) pop mov sub movups lods cld (bad) ja jmp push in ret pop push popf jmp mov pop or sbbl jp push (bad) mov push cmp xor cmp and and or imul and jmp bound (bad) mov inc pop clc inc jl call pop sti sbb jmp mov adc aas call (bad) or fmul sbb decb pop add ret adc (bad) movsb movsl inc mov fdivrs in das or aas insl (bad) or xor cmp pop loopne,pt pop dec fs pop aas in rolb std imul ljmp sub inc jg leave and mov cmp and cmpl js push jb lcall push or pusha or adc lock adc js sbb xchg mov dec mov jl add rolb push push addr16 cmp in adc shlb fcmovnu insb sub jge cmp sub adc dec mov add mov mov xchg pusha movsb pop push fstps scas shll mov ret add cmp xor mov je cld mov std inc adc dec pop push (bad) lcall or aas loopne inc call jle out mov xchg fstpt enter mov enter ret push addb inc (bad) jecxz pop insb pushl xchg popa jo js adc bound and aas and dec leave mov jo mov pop and insl cwtl aas shr pop xor int3 lahf fmul cmc shll aam push aas adc mov jb mov fdivs enter insl sahf nop mov test out mov rorb cwtl mov out pop or nop js aas clc lret inc add in mov xchg out or js lcall incl out imul iret or inc das mov int3 aas or xchg cld dec repnz mov (bad) or adc pop repnz sbb fadds jb jb mov lock xchg lret xchg add icebp fsubl addr16 xor pop cmp mov mov sti int3 add rorl rcrb in outsl and jb sub adc in pop jb push outsl push nop movsb add xor mov repnz pop fwait sbb cwtl pop (bad) push pop mov mov sbb nop int inc dec and int push in out pop in in in inc push in in in in push in in in push in push in in in inc push in in in in push in in in push in push in in in inc push in in in in push in in in push in push in in in inc push in in in jl push in in sbb cmp sti adc mov sti pop or jb adc sub lods std inc ds ror (bad) pop cmp mov loope fcomip psubsb xor lahf or shr ret aas dec lahf fild pop loopne scas outsl push insb (bad) loopne das adc sarb movsb aas clc and mov mov lcall push imul stos jae sbb insb cmp cwtl (bad) pop imul mov jge (bad) dec pop push lods rolb adc adc rcrl add adc xchg push je sarb sub jl fstps fisubl push mov dec into dec aam inc sarl mov jmp add mov sbb mov pop and jbe mov lahf dec aas push or cmp push xchg shrb aam sub and test imul pop mov xor out movsb push rol aas lahf call jg movsb (bad) cli push jnp pop lfs mov mov mov push mov add aas mov test adc or outsl scas loopne or jb sub pop add andl lahf cmpb test mov ljmp out mov je bound arpl sub insl adc cmp stos ficomp jns pop mov xchg xchg dec jl push push mov push sub mov (bad) fcos xlat loope push sub outsb add adc pop lds aas and sbb sti lcall add mov inc icebp lods lret (bad) negb mov cld pop inc mov mov std add xchg test xor inc (bad) ficoml lret xor inc (bad) ljmp mov aas (bad) xor and inc pop fs testl mov cwtl pop mov dec push popf pavgb pop or jg pop adc pop xor mov bound (bad) popf jl mov lahf hlt dec sti rclb lahf adc add in sub adc (bad) dec in inc cmpl sbb fild inc xchg scas out sub push fistp inc mov loop or jg pop pop xchg insl stc cld lahf jno cmc aam pushf xadd lods in shlb stos pop enter (bad) xchg mov aas (bad) fsubrs xchg mov mov fnop lock out lods pop add cmp js jge movsb jbe (bad) and fbstp les ljmp sub out sub xor adcb adc and bound mov and mov push cmp outsb test les (bad) call (bad) jno fistpll rcrb fimul stos xchg nop rcrb (bad) push add loopne pop and lahf push loopne mov loopne mov pop sbb fnop jbe and js pop outsb xchg adc insb jl popa push inc dec mov sbb pop pop mov add loop ds mov movsb dec int3 js add test inc movsb mov faddl push jg jecxz and add cmp jb sub cmp jl aas aas fmuls call mov insb sar std test jl adc or rcrb (bad) xor (bad) dec or inc dec adc xor xchg shrb cwtl cld cmp je mov in dec jb dec sub mov fdivr pop sbb scas push (bad) xor mov sub punpckhwd sbbb xor add push test pop sbb cs add adc dec out mov cs inc pusha les outsl mov nop aaa cmp js sbb sbb orl and add pusha pop sbb pop add xchg aaa rcrb ss repnz dec add jbe push rcl out ss pop ds in pop fsubr sub fstps sbb or divb dec mov push xor insb sub repnz es ficom and lds pushl pushf mov loope cwtl dec jg call mov mov jmp aas inc push nop dec xor xchg test dec aas jnp dec dec xor sub fs out sar insb enter xchg sbb daa int mov sub mov in lret rorb lock and add add sbb clc sahf (bad) movsl sbb cltd sub adc cmp and std loopne test and push or fisttp jmp cmp lock pusha jmp mov in xchg aam and jg mov lcall int3 sbb mov add adc in mov inc fistp push push xlat (bad) xor sub sahf (bad) bound (bad) punpcklwd insb adc jg fmull xchg mov in fcmove inc ret inc in pop les or sbb aas test xchg and enter sbb rol dec or pop cs insl sub sub fcoms aas mov xor outsb hlt sbb mov pop cli jb mov out arpl sbbl dec push xchg jg out out inc cmp in out jmp adc sub loop insb adc in andl adcl jmp add ss xor add mov jnp fdivrs cmpb les mov dec xchg add sub jmp loope fisubr xlat adc inc dec jp repnz mov call cmpb rcll shrb pop pop mov push jae hlt jg pop leave inc jb jo cmp (bad) hlt fistp dec fwait mov inc adc pop call mov in inc inc inc jg arpl in cwtl aas addl in inc dec jp sub sub arpl cmp scas pusha fs imul test fisubr mov inc mov in fsubrl sbb in add sbb pop das inc push adc dec pop adc mov xchg data16 push dec mov add or push jl add andb pop aad mov push dec btcl cli fnstsw inc imul mov dec aas cmpb xor mov inc sub in aas loopne jae adc lea pop (bad) jp nop jg into lods cmc testl lods pushf pop adc add jbe lahf das mov add fiaddl pusha pop int3 clc jns or lock cwtl xchg fdivrl xor dec push jg mov dec lahf dec movsb or adc mov popa in nop mov mov jno add decl and in mov pusha std jg ss loop and lahf add mov mov in lret es pop jo (bad) xchg pop jno mov nop lahf adc test sar call sub cs xor bound add xchg addb push rorl (bad) cmp test add aam push fwait or (bad) jg in dec sbb test lods dec jg into insb push fsubrs pusha fisttpl mov shrl test nop in leave testl int in mov fnstcw in es in in in and push in call (bad) adc dec pop pusha aas in pop jo mov mov test mov aad popl int3 stc or lods inc dec pop and add mov jl add aas mov cs mov inc pop lock aas and in sub sub js xor push jle mov aas enter imul dec adc push cmp ljmp add mov push adc mov dec jecxz cmp cmpsb bound add push les lods pop and mov sbb sbb add ffreep add aam call push pop pop push pop test stc sahf adc pop dec andl inc ficom sub mov sbb jo dec cmpsb ficompl and or popa sub jb cltd das or in stc jo jb rclb stos pop (bad) and fwait test mov add sbb lahf in das mov adc jb inc adc adc xor and dec xor mov loopne lods lahf bsr in (bad) jg dec or fmuls ss jecxz das add call aas fsubl mov imul and (bad) (bad) iret sarb ret lcall aas and push mov pop xchg jbe cmp xchg ficoml insl xchg and inc adc cltd mov addl mov aaa xchg pusha xchg add or adc and mov lcall jmp lahf incl xor lock daa dec xchg lock or push push js aad sub xchg xchg pop fcoms push xchg mov mov rcrl or sbb or shlb aaa mov pop inc mov lock push ja fiaddl xchg out daa push nop mov loopne (bad) xor mov mov mov test sbb lcall push dec push xchg (bad) and aaa add popf mov push xor push mov xlat or clc aaa stos mov fcoml inc pop scas inc mov jg scas or jg or jl lahf clc fisubrl sbb pop and cwtl iret xchg (bad) xor rorb adc adc cmp mov sub fisubr push adc mov pushf (bad) mov addr16 pop adc cmp sub dec lods mov stos sub lahf data16 mov (bad) mov daa mov inc aam dec push cli push fcmovbe push dec xchg cmp (bad) pusha daa push xorb pop aas dec sahf add loopne adc dec mov scas out inc pop daa je mov daa nop into or push and inc mov shr pop aaa adc aaa or adc loopne shrb jb xchg mov out in nop vmread nop pop in bound pop daa ljmp sbb ficoml fcomps iret sbb sub insb dec push xor push sbb dec scas movsb pop daa mov in aas sbb ljmp xlat sbb mov (bad) lock dec rolb repz jbe ljmp dec lds dec and iret xlat roll jb adc sbb pop stos fadds jb clc addr16 pushf or xor mov mov js sbb inc dec fidivl leave mov sbbl mov add xchg dec pop fadds pop push pusha pop aas nop pop dec scas ss and or add iret repz add push sub pop dec inc push addr16 cmp adc sahf out mov pop fs push push push dec cmp imul cmp iret repz push push cs pop push cmp nop movsb mov out mov in push add sbb cs repz bound pushf iret repz push loopne mov cmp test jo sahf out test jns out into (bad) bnd ja cld push cmp push cs dec sarl pop push jo pop iret repz inc cmp push or out out cmp sahf push scas mov aam cmp ds inc mov cli cmp and cmp repz pop jo mov lods (bad) out jbe cld sahf out testl and push pusha jl out jb lcall sarl iret repz fs inc cmp push sahf out cmp add ds jns out mov cwtl mov jge out push cmp cs push mov sahf out mov repz out and imulb out (bad) mov repz jb dec xor cmp repz push add sub jns cmpsl loop (bad) mov sahf lcall sahf out sub or hlt sub sub (bad) mov xchg jns sarl jl push bound jge out sub cli sub aam sahf out lret xchg xor int jb aas loop (bad) out sahf out inc sbb ss sahf out sahf insb xchg jns jns add push push cmp pop push sahf out mov das mov mov pop ds pop lea sub fcmovb fnstenv xor call out adc and iret repz inc pusha jb xchg lods sahf out cmp lret cmpsb pushf jns out mov fs sti cmp repz xor repnz push xor mov push fs repz mov ds (bad) add adc repz xor and add shrl ss rol mov iret repz mov jns out stos lcall out inc sub add out repnz sahf push int3 mov sahf out je push inc iret repz mov jle pop dec ds cld xor jns out in les out mov lahf out sahf dec cmp add xor into pop ss jns out xchg cmp out or sbb dec mov insb adc out mov push mov (bad) cli jge roll push cmp inc out sahf cmpsl push sub dec push data16 out sahf jb nop scas mov jns (bad) adc es repz add push push in cmp repz mov mov out jo out sub divl out mov sub fidivrl lahf out sahf lret xchg or sub loope cmp (bad) sub mov iret adc adc iret repz adc adc cmpsb cmp mov data16 push adcb jbe mov outsl add pminub push jnp or dec es xlat pop cmp dec add pop push sahf out int xlat mov int3 (bad) repz sarl or cmp repz pop insb jge ds sti jmp jbe jo xor cs insb sbb gs (bad) (bad) fist je arpl imul gs sub iret fidiv dec popa jae dec push gs gs jae imul cmp sbb je sti pushl outsl jns inc gs push popa jb insl add jae jb js insl repz inc push mov inc flds aam fcmovbe cld imulb test push gs add mov add push sarb repnz fisttpll cmove repnz inc inc pop loopne jns stos js out pop add in adc push and enter add inc mov fldl add out in add xor pop push and cmp or iret adc add aas nop add and add and (bad) in (bad) jno push (bad) bnd call enter cmp xor cmp cmp cmp fcomip pushl ss popa data16 arpl gs add mov mov lret rol (bad) cmpsl mov add scas (bad) xor ss rorw pop add lock inc data16 dec jnp ss rorb rclb repz xorb and fidivr loopne dec es pushw adc popf in repz pusha pop xchg mov pusha fdivrp out mov push into jle push es aaa out jnp xchg pusha pop bound inc inc xor xor inc or (bad) fild xor xor xor xor add mov (bad) mov rol mov jns inc mov inc adc inc adc cmpsl (bad) xor xor and xor fisub jb mov and xor xor mov int mov mov cmpsb (bad) fcoml outsl outsl or inc aaa fdivs ss cmp inc xor mov mov xor fmul loop aaa inc fdivs dec testb xor dec push jle xor xchg cmp sarl or (bad) jbe repz or popa xor xor std mov push cmp xor data16 ss mov (bad) mov clc arpl inc aaa lds test and ss (bad) int3 inc jl add and dec cs push out in add inc andb inc mov mov cmp outsl ja add loopne inc scas in in jmp shrl lahf andb shrb cs mov dec hlt jmp push dec jmp sahf pop mov nop add dec daa rcll clc pop jmp add ja ljmp cmp mov (bad) mov jle push push nop push loopne int fldcw xor (bad) jg sub pusha push adc jae je insb cs add pop adc dec push xor add js pop jp js jg imul je data16 popa add (bad) cmp sub jo outsl jb push and pop ljmp cmp xor (bad) mov cmp xor sbb mov imul sub cmp aaa push cmp ds xor xor cmpsl dec xor ss fnstsw movsl fstpl mov loop and xor xchg mov rorl xchg cmp jge out or dec add scas mov (bad) aaa mov negl mov fisubl push mov mov gs stos loope fimull push out (bad) mov insb add sbb pop and cmp rorl repnz cmpsl xchg or stc aas xor clc cwtl cmp add pop in push (bad) in jo xor cli jno das cs sub xchg and jbe mov mov mov vpmaxsw xor and or out aaa cmc mov outsb in pop ja pop add mov dec (bad) mov xor mov out aad rorb mov fcmovnb dec sub adc dec add adc out inc cmp mov cmp mov xor pop fnstcw and mov cmp jmp sub loope mov loopne jns sub inc xor sub or xor adc xor sub xor xor push (bad) int orl dec push ja dec xor add sub mov xor or sbb jne mov repz roll push sbb cli dec xor gs faddp cmp (bad) (bad) xor cmpl pop inc add aaa xor mov andl nop xor mov pop xlat loop or sbb push cmp cmp out mov xor add inc nop or test stos jp,pn jo psubsw cmp rdpmc xor dec jb mov and sub sub repz mov mov mov jle leave js jb addr16 add (bad) arpl data16 outsb cltd add in in jmp das jae and outsb jne gs outsl and or push jae sub (bad) fistp and outsl insb gs jo and fidivrl jbe pop dec push cmp add incl add dec scas mov cmp inc cmovl lock push sbb mov mov pop inc jne outsb je (bad) jae pop ret dec pop inc xchg outsb mov gs dec imul add nop push inc cmp sub sub add inc xchg das pop sub mov push jl xor xchg jns sbb xor jbe lea pop xchg fisubr cmp adc xor ss imul fistpl and cmp xor leave sbb cmp xor mov mov pop push add loopne or sbb xorb jbe ss sti adc enter lcall neg aad js jbe xor mov and lock cmp cltd mov mov les lcall (bad) mov or adc imul mov ret sbb pop lods pop in xchg ss sub pop xor adc pop shrl sbb notb add inc cmp mov pop sbb add call aaa jno and dec sub add inc jae loopne and insl or mov add push dec xor push adc dec (bad) (bad) (bad) pushl aaa dec push dec xor insl jo xor push inc push jae push je push push push dec pop inc push jp add aaa pop cmc or pop ss dec xor xor arpl data16 xor std aas arpl data16 gs add pop add push lock mov and pop adc add lock xchg add jmp mov in push add cmp outsl int cltd es sahf pop add jae ja sub orb add cltd add rolb jns dec cld add push pop mov add mov or add addr16 add addr16 xlat sbb stos fiadd sbb cmc push ja adc scas jge fsubl gs jl test aam imul shrl aam push push jg ss fs push add es mov jbe (bad) jle mov repz enter inc add mov pusha cmpsl or add mov jg add adc xorb fstps add xor adc lret iret seto cmp cmp jg mov cmp addl addl lds or cmp or or or and or pop inc dec jnp popa loopne pop outsl and mov mov mov cwtl xchg push and dec (bad) out or jmp xchg xor inc fdivr jo pop mov xchg jbe test and inc int mov pop mov inc mov rcrl out rcrb addr16 and mov push mov pop jo mov mov mov cmpsl cmp mov push sbb inc xchg pusha xchg inc inc jno loopne pop adc or fadds jo (bad) aad rclb add (bad) and popf mov addb mov cmp sahf pop jns fisubrl pusha sahf iret call or mov test mov lcall add dec rcrb aas or andb pusha ficom or mov adc mov pusha outsl rolb dec enter and das in inc inc stc mov add mov mov in shrl movsb (bad) pop adc adc cmpsb aas rcl es pop push outsb scas or cmpsl das add sub stos outsb pop add incl xchg dec sahf or lods adc add dec push test add test nop cmpsl in ret or cmpsl das fmuls inc (bad) nop scas add add fsubrl add pop enter add das pop dec aaa cmpsl mov outsl sub es mov cs sbbl mov into add outsl out out xor mov push daa xchg add mov or lea mov outsl push es iret js add or int3 sub mov repnz add mov mov in dec clc lahf dec jb cmp scas xor loopne add ficompl add nop mov in jb mov mov mov and and nop mov add js lock cmp rorl mov lahf pop nop mov add add xchg xchg push (bad) mov jno loopne jg mov jo lock add out or add rorb adc mov add push les orl mov out shrl xchg mov rol jmp enter inc stos push pop leave add xor aas test in js iret cs mov and adcl (bad) adc adc das xor (bad) arpl fnstsw pushl (bad) loopne or lcall sbb inc out mov inc cs js test (bad) or mov loope add or add or loopne mov jno xorb add cmp pusha adc in and push in clc and add lock sbbl inc xor das inc in scas sub (bad) scas inc call out mov mov and lock adc shll dec nop call add mov jae mov shr mov or rclb scas es dec lds xchg js cwtl pop lock ds aas pop inc das lret inc negl add inc jbe inc mov jmp jle jg shlb insb mov int pusha pushf lock xchg push test ss adc popf je or (bad) jo insb lahf out nop rcl mov xchg int fistl sbb push enter into and mov (bad) push or dec ja stc sahf adc pop pusha dec fucomi and xchg aas sahf sub push and in imul push fildll sub push jne xchg and ss push in jne push push push or push test mov adc add dec icebp testl out add jle cmc push add push fsubr imul cld push and push stc ficomp mov testb popa inc add push lcall pop cs pop push dec push cmpsl or lds and add mov lds mov icebp push adc or out mov adcb xor es and xchg inc dec mov cs add jae das push mov inc in push push cltd push outsl sbb jae inc fwait mov add lods pop rolb nop adc xchg shrb mov inc test inc jne addl scas repz dec jnp subb add mov xchg out xor mov fs andl xor adcl nop push nop pop pop out jmp scas mov ror xchg and pusha adc repnz nop test outsb xchg cmp fnsave (bad) and repnz sbb or clc fcomip icebp push in pop aas addr16 aas daa push inc test popa lock mov add fimul add lods add jg mov add fimul xor cmpsl lcall dec iret inc fldenv aam popf xor sbb aas inc (bad) cmp mov sbb cmpb inc pusha cs or inc aas loopne leave sub loopne sbb add sbb inc popl xchg add cmp in sub cmp sbb pop adc inc iret sub stos (bad) pop scas pop adc out lcall xor add outsl xchg outsb cmp pop das push mov mov pusha push pop add in das cmp pop lahf xchg add repnz loop xchg in icebp and xor pushf jmp mov mov out jp ss inc cld xchg jmp jo push jb inc adc inc repnz shl pusha outsl inc cmp push add xor add out addr16 in or loopne rorl push push sbbb (bad) or mov (bad) inc push push inc movhps pop out addb (bad) push adc mov aaa fcmove jbe push dec push mov and pop clc imul enter cmp dec (bad) ss push mov jb outsl and (bad) xor jns rcrb je lahf mov jge pushf test mov iret mov add adc test in fidivr inc daa mov rorb inc mov push add iret pusha jmp aaa inc push loopne xor inc cs stos sbb jmp nop cmpsl xor inc xor add js pop repz out lock pusha (bad) testb cmpsb add jo mov or loope,pn stc add dec xchg decl xchg repnz inc lcall test aaa inc jno jno dec aas inc pop push adc jnp jge jg dec push adc sub pop fildl mov pop push outsl fsubs mov ds push rorb inc dec out lcall js adc xor add sbb cmp sahf fdivrp call adc pop inc pop nop add mov cs inc push cs stos add xchg shr das ja movsl jo mov inc ds ret lahf xor jb nop pop nop pop inc sub adc pop into push cmpsl push xorb movsb or push in or scas clc sub add out bound xchg ja iret pop pop popa pop popa dec repnz inc inc mov push repnz inc cs jo push repnz pop dec dec cs out sahf sub push dec xor xchg push pop es cmp dec inc cs and jns cmp push dec dec cmp cmp cmp dec dec loopne cmp cmp pop adc push pushf cmp pushf inc push push jo pushf cmp pop pop shlb in pushf cmp mov aaa dec lock inc nop pusha inc sbb movups pop inc sbbl addr16 nop insl inc lods jb and mov push pop aam fisttp jns inc mov mov test adc jmp pop adc cs adcl jbe and push repnz push xchg inc or aad xchg inc cmpsl (bad) xlat add cmpsl inc push cmp jbe lock cmpb push mov mov andb mov aaa clc shlb (bad) dec stc ja sub in mov inc gs divb jb inc jo push jns jne push insb push stos ljmp jne push gs arpl outsl jbe inc arpl sub cli call stos inc adc pop scas jp fsubrs test mov pop scas mov sub (bad) cs inc fnop fsubrl dec jae not add cltd (bad) call sub mov fidivr ljmp scas push repnz in inc js cmp or mov aaa incl leave cmp repz cmpsb mov (bad) mov xor jle xor imul std mov (bad) mov and js mov push xor int cltd and insl pop mov rolb xlat push mov rorb int add (bad) sti repz push movsl sbb cmp (bad) std cwtl add sahf repnz ret adc xchg add push jno rcrb add or and cmp push add mov stos add jmp (bad) (bad) incl push add add jge movsl add add add add add (bad) decl testb outsl add das push jae mov push incb inc pop xchg pop fldl sub jp lret or enter jns aad xor xchg (bad) jg imul and pop push int3 push cmp sub (bad) (bad) rclb xchg adc adc inc inc adc adcl adc mov (bad) (bad) call inc pop rcll data16 sbb sbb push sbb sbb sbb inc pop icebp pop mov and add mov and and and jmp mov jnp inc sub jecxz mov (bad) (bad) ljmp sub adc xor imul sbb adc call pop cmp inc adc inc and inc aas inc push aam (bad) mov xchg dec mov iret dec lock adc dec popa push mov push jmp push adc (bad) pop cmp pop or pusha sahf popa in (bad) (bad) (bad) jmp fs gs imul insl and lea jno jae je jbe ja (bad) jg (bad) jns jp jl jge jg loopne roll test push (bad) (bad) (bad) (bad) (bad) out mov xchg xchg xchg lcall jns cmp mov push stos and scas mov mov mov mov sarb movsl les xchg enter int3 xchg into cltd shlb (bad) int3 fsub (bad) fcoml fildll loope jecxz in out (bad) (bad) inc jmp dec lock repnz stc je (bad) ljmp test testb or movsb sbb and xchg (bad) fildll loope lret cs xor xor dec cmp cmp (bad) (bad) (bad) (bad) cmp lea inc icebp inc sbb inc pop inc jb xchg dec lahf dec movsl dec cmpsl dec movsl dec lahf (bad) mov push mov push gs dec push mov xlat push mov mov pop ss (bad) (bad) (bad) incl pop xlat pop movsb pop outsl pop cmp pop les popa dec bound arpl arpl lods popaw addr16 (bad) (bad) call imul imul fldcw sub outsb jne sbb jo jno jno (bad) (bad) lcall jae je jne jne jbe jbe ja js js jns jns jp jp jnp (bad) (bad) decl jl jl jge jge jle jle jg jg cmp xchg sbb mov (bad) (bad) ljmp test xchg mov mov xor (bad) (bad) decl lahf mov lea decb fs fistl cmp call or xchg rclb and xchg add dec (bad) (bad) (bad) lcall xchg lcall inc pushf mov sbb pop sahf ret lahf xchg lahf sti (bad) (bad) (bad) lcall xor mov xchg mov ret movsb daa movsl mov (bad) (bad) jmp jns (bad) (bad) test test subb stos cld stos pop (bad) (bad) (bad) ljmp lods shrl ljmp scas pop mov mov mov mov mov (bad) (bad) (bad) pushl xor cmp xchg mov mov mov mov mov mov mov mov mov (bad) call mov mov mov pop mov pop mov add lcall lods mov test sti mov hlt mov jmp cmp sar incl xchg ret mov ret addr16 mov pop les cmpsb (bad) test (bad) (bad) incl xchg (bad) xor add (bad) sbb movl enter leave mov xlat (bad) mov lret or push lret mov int3 clc (bad) (bad) incl data16 int int into xchg into fmul es jo mov rcrb mov (bad) je mov rclb sar (bad) (bad) pushl mov aam aam aam aad aad aad aad (bad) test lret (bad) adc pop xlat lahf xlat (bad) (bad) (bad) jmp xlat sub jb mov (bad) ficompl lahf (bad) fisubrl fldt mov neg (bad) (bad) (bad) (bad) cmp sbb fmull fisttpll xchg fst fstpl ficomp fsubp fisub fildll lods fcomip fbstp loopne (bad) (bad) pushl mov loope loope loope loop loop loop loop jecxz jecxz jecxz jecxz in in (bad) (bad) call in in in in out out out out out out out out call (bad) lcall jmp fucomi sbb pop ljmp push jmp jmp jmp in dec in (bad) (bad) (bad) decl in dec in xchg (bad) in add inc out jle mov out je mov out out sub loopne mov movsl lock jo icebp cwtl (bad) (bad) (bad) push aad adc dec repnz (bad) repnz aas repz mov repnz push cmpsb hlt loope sbb add cmc xchg cmc iret cmc or mov (bad) jg imull mul negl clc push clc nop clc lret clc add stc mov in stc daa cli popa cli fwait (bad) (bad) (bad) (bad) cli aam push sti dec sti cmp sub cld frndint adc dec std test mov push movsb (bad) (bad) data16 lahf (bad) xlat (bad) adc sub xchg (bad) out test leave sahf xorl inc inc cmp inc add jg cs daa daa es outsb jmp and and pop pop push add in jns sbb pop push adc adc adc pop enter femms and enter test sbb or adc and pop add jo das push fdivrp inc pop add and add test cmc imul scas mov aaa inc jae outsl loopne out jnp jg (bad) add bound inc add sahf add dec mov test jg inc inc push add dec push or inc ud2 lock lcall jno mov rclb (bad) js loopne test fdiv xor push inc cmpsl sub adc jbe cmp fistp aaa shll xchg in jl xor out cmpsl (bad) dec std dec in aaa fnstcw dec pop push lret mov inc mov in sahf cmp movsb aas add mov daa sarb sar mov and loope add adc inc loope test lahf enter call xor insl (bad) add inc dec lahf xchg addr16 fildll loopne pop pop and jo xor inc push jns or xor dec sahf dec pusha pusha mov mov (bad) leave outsb mov popl add leave xor xor mov ds xor lock add dec pusha (bad) cmp loopne lds enter cmp sub shrd adc jno (bad) loopne mov inc cmovs das adc inc cs lea sbb dec add ret js sub rorb xorb inc cs or and out mov inc jns push xorb mov inc mov and add inc popa faddl repnz and orb rorb lahf sahf inc stos loop (bad) jg add hlt call outsb add stc push and out sahf nop sbb mov iret adc push and mov pusha xchg loop (bad) out sbb fwait test scas outsl push add add xor arpl pushl inc inc inc inc inc inc daa and mov sub push out mov les (bad) hlt push xor xchg fs (bad) (bad) (bad) pushl mov push movsb mov aad mov rclb mov sub mov (bad) adc pop jno repz test ficompl jmp (bad) mov (bad) (bad) (bad) push movl imul std in leave mov add insb push arpl (bad) ljmp or adc in pusha aad jno mov inc aam (bad) (bad) incl std test movsl cli test xor (bad) leave mov lods jecxz fdivs jne mov iret or shrl add push xlat enter call popa sarb and mov cltd xchg mov mov or or (bad) (bad) (bad) jmp or adc stos sbb data16 inc fdivl jno add (bad) ljmp adc out mov mov movsl in lahf xor mov js stc adc (bad) (bad) jg test xchg sbb push sub insb fs add hlt push imul insb (bad) (bad) (bad) lcall xor dec add in xchg push insb jnp add (bad) hlt or (bad) fnstenv cld (bad) (bad) call ljmp cld fistp ficoml gs aam pop popa mov into jg pushl pop cmp mov inc movsl fisttp xchg fadd (bad) shll (bad) (bad) ljmp imul mov sarb add in add pop dec or (bad) (bad) (bad) (bad) cmp add daa adc or and test or mov popa into (bad) (bad) (bad) decl stc ficomp leave fldcw and xlat (bad) pop cmp mov cmp lods insb mov push in mov mov add (bad) (bad) (bad) cmp ljmp fildl push fdivl or test fs ds or (bad) (bad) (bad) decl iret push in decl xchg daa scas add mov pop jge xchg (bad) shlb add inc push imul (bad) (bad) lret xorb sbb push imul aam loopne (bad) ljmp pop jp adc dec frstor fistpll mov mov aad mov incl (bad) call xchg shll push repnz mov cmpsb fldl mov (bad) (bad) (bad) aas dec ss fisubrl or scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov (bad) (bad) pushl jns imul andl shrb ss push xchg ja int3 add mov (bad) (bad) jmp das es lds or sub mov cmpsl call ret (bad) mov sahf fcos (bad) (bad) ljmp ret es pushf mov insl add ss jmp addr16 pop push push add mov (bad) (bad) (bad) (bad) jnp sbb xchg or out fdivrl fisttpl aam roll clc mov cmp (bad) ljmp sbb int mov mul ja outsl ja mov out cli jo incl push pop or adc sahf gs scas (bad) clc sar (bad) mov mov loop mov push addl mov cmp cmpsl (bad) (bad) (bad) push push pusha rorb imul push scas fcompl fldenv fild cmp aaa push scas mov inc sahf mov inc jmp repnz lret mov cmpsb mov sarb xchg push xlat int push ficom fldenv jp,pn mov dec popa les sbb xchg sub aaa mov lock fild sub js out adc add rcr push jp add xor into mov add add orb and xchg shrb or xchg lock popa into mov jno cmp mull cmp ret dec (bad) mov into scas cmpsl inc xchg aas lea mov add ret ja adc in test and aas sar cmpsl addb pusha loopne nop push (bad) xor mov test call js add inc les fs (bad) (bad) jmp adc push aam mov hlt or dec int3 sub insb in sbb pop fdivrl jl add (bad) (bad) (bad) (bad) jmp adc jb or push sbb jp push xchg cmpsb data16 (bad) (bad) jmp push xchg push (bad) ss (bad) push mov cs outsb out push sahf pop fidivr mov inc shll popa (bad) incl cld loope xchg push (bad) xor mov sub pop fnstcw mov (bad) stc add movsl gs xchg push aad mov cmc ficompl (bad) jg sub popf pop fnstsw addl mov (bad) xor (bad) (bad) pushl dec lret sub pop fstpt mov inc (bad) daa cmpsl addr16 xchg push xlat aaa (bad) ja jg outsl out pop lahf pop fistpll mov add mov and loopne jo lock (bad) mov push xchg aam movsb in je cli dec mov sbb fdivr (bad) (bad) ljmp push mov int3 sbb pushf fsubrl lods in cmp mov rcll xchg sar (bad) (bad) jmp popa mov icebp add push xchg aad movsl in jne cmc or leave sbb pushl add test or pop popf (bad) (bad) (bad) in cmp inc (bad) ret xchg shlb bound repnz inc xchg push push xchg (bad) data16 (bad) (bad) (bad) jmp ss (bad) or lret lcall jp cli push dec mov push pop sahf fisubr outsb scas std (bad) (bad) (bad) out jle,pt incb inc add push xchg shll arpl repz inc xchg pop push xchg xlat daa (bad) (bad) pushl cld out ja (bad) or lret sbb fldt imul cmovg incl outsl scas out aas jg (bad) adc xor pusha jo nop mov lock (bad) ljmp push popa jno xchg mov icebp add and inc push bound xchg mov inc shl repnz and inc push arpl xchg mov repz and inc push fs xchg movsb mov scas (bad) inc aam hlt add push gs xchg movsl mov mov ss push data16 (bad) (bad) pushl xchg cmpsb mov (bad) out pop pop daa aaa inc push addr16 xchg cmpsl mov xlat out or sub dec pop push js cwtl test enter or sub dec pop imul fldl2t stc or sub dec (bad) mov lcall sbb cmp imul stos (bad) (bad) (bad) (bad) mov or sub dec pop insb jl pushf lods mov or pop insl jge popf lods (bad) (bad) (bad) (bad) mov push push cs pop outsb jle sahf scas mov nopl aas dec pop outsl jg lahf scas movsb dec inc cli mov pop push (bad) (bad) jg imul jae jo inc dec outsb pop jae mov and push inc push stos mov (bad) scas je pop je sbb loope,pn xchg dec dec (bad) in in rcrb jo inc pop dec push and inc sbbb or inc mov outsl hlt adc rclb adc adc or push xchg (bad) xor and fild sbb or push push fs in adc add and jo (bad) ficom add push xor dec gs adcl and imul out push pop inc lods add push pusha pop pop add into outsb pop push mov cmp mov adc pop addb cmp popf and add adc ss cmp add jge or add xlat and mov sbb sahf xchg lea (bad) sbb jns out sub sub sbb push push push pop adc sbb sub cmp xor and push cmp repz pop push push and iret repz xor es repz pop daa cs repz das aaa ds xchg xchg jg mov xor xchg add testb fdivp inc add std push stc icebp push jns out roll iret cld clc lock xor push xor inc lds push inc dec push mov cld decl mov pop and jae push aad jle sbb push bound mov inc sub fcmovne push sbb push and mov in aaa xor push (bad) daa aaa sbb or int3 mov push sbb cmpsb fmul int3 mov ss add (bad) (bad) mov mov xor aas lret xchg scas out aas stos adc (bad) repnz aas out lcall cmp jmp jnp push loope pop stos jb push test jg or (bad) xor or cmp xor bswap aas incl inc mov mov addl (bad) dec mov shrb sbb and adc das out pop fbld pusha nop push lods insb pushf pop mov outsl lahf pop or cmp add xor or cmp pop (bad) aaa (bad) mov (bad) (bad) decl js inc mov mov jnp inc mov sub sbb and adc sub sbb daa out xlat test (bad) (bad) ljmp pop movsb fs push stos imul add xor push into incb (bad) xor or (bad) (bad) (bad) incl jb dec mov jno dec mov shrb out push fisub loope shrl (bad) (bad) (bad) jmp push scas outsb sahf pop mov insl popf pop or cmp push (bad) ss or cmp add (bad) (bad) (bad) decl jp inc mov mov jns inc mov sub sbb es (bad) sub sbb and jo (bad) ljmp pop cmpsb xchg push test gs push std add test cmc xchg jmp cmp and insb gs inc pcmpeqw pop push mov xchg dec or ja dec pop daa pop negl (bad) cmp inc push arpl out jae mov pop rclb add in add out cs add xchg jo jmp add sbb xor inc popa add addl push jns out or sbb movsb or (bad) mov and xchg pop pop daa daa daa daa or or xor or add out inc test aaa notl adc pop sar pop or or or (bad) sbb jns sub insb in out sahf out pushf pop fdivrl out sahf mov inc jns out ret (bad) out xchg push (bad) xor jb or jns sub sahf out lcall sahf mov inc jns out (bad) cmpsb data16 jns out xchg push (bad) ss out sahf mov (bad) push mov sahf out into cs outsb out out sahf out sahf pop fidivr sahf out sahf mov inc jns out shll popa loope jns out xchg push (bad) xor jno or jns sub sahf out cltd pop fnstcw sahf out sahf mov inc jns out lds jns out xchg push aad sahf out sahf mov cmc or out int lods insl in out sahf out popf pop fnstsw mov or cmp repz push rcl repz repz mov jae repz jae repz mov repz dec dec lret lret repz repz stos stos imul cmp imul sbb fwait cmp repz pop pop fcmovnu repz repz mov cmp jnp sti pop pop xchg repz inc inc mov daa daa cmpsl cmpsl addr16 repz addr16 pop pop xchg cmp repz push push xlat xlat repz repz aaa mov ja repz ja (bad) (bad) jg (bad) dec dec iret iret repz repz das scas scas outsl iret repz outsl out out pop pop lahf cmp repz pop pop (bad) repz repz aas mov cmp jg pushl inc push sahf out sahf and push xor sahf out or push out cmp inc sahf out sahf and adc xor out fidivr (bad) addl ret and dec add sahf cmp repz adc repz repz adc sbb repz push push push push add cmp repz sbb iret repz dec adc iret pop pop in jns cmpsl add add or inc cs or cs mov bndstx daa iret jnp adc adc adc pop jb sbb push jb pop sbb pusha push jb ret xchg xor mov adc push pop mov cs sbb mov pop aam sbb dec xchg cs outsl or or movsb cs xor adc and cmp inc push pusha and adc and and fisttp jbe sub jg xor fsubr sarb aam mov jne daa inc nop push push lcall in aas repz aas lahf dec pop js (bad) (bad) loopne inc pop adc (bad) mov inc pop mov loope fsubr shlb out orl inc iret leave pop int nop ds shlb nop cmp jo inc and mov sub pop lods (bad) push pop call insw (bad) imul insb (bad) insw out xlat pop push push and lret push call ret or add es pop js fadd es aas add repz clts pop aas jg jns out inc (bad) (bad) (bad) (bad) incl decl test movups out jae push pop das jo xor repz and sarb or and mov addb repz dec outsb aas pop sbb leave leave cmp rclb pushf pushf cmp push pushf pushf or popf pushf add unpcklps daa daa mov ljmp je enter daa or daa daa daa add inc call or pop sbb in in push push jl dec cs ljmp dec dec dec mov dec dec dec clc add dec dec dec dec mov dec dec dec les bound dec dec dec dec movsb add dec in pop sbb dec dec xchg inc jp dec dec dec dec aam push dec dec dec dec mov mov dec dec dec hlt add in rolb jbe in in int3 pcmpgtd in in lods push xchg in in in or in in pushf arpl in in fcompl aas outsb daa mov leave cs dec push pop push daa cld call adc jno leave leave test leave leave mov pushf pop enter xchg enter jns rcrb mov test and das incb add jb xor lret daa daa daa and and daa inc ljmp lcall fisubrl jb jb mov daa pop jb push adc jb jb jae (bad) daa daa daa pop arpl cmpsb add daa daa daa addl jb jb sbb daa cmp imul jb mov mov pop jb dec notb pushf pushf pop and into leave leave leave test scas enter pop xchg test pop enter aas fisubr jbe mov (bad) (bad) adc in (bad) inc xor and leave inc xchg rcll xchg dec mov adc inc xor test and fldenv stc xchg dec and lds in aad xchg dec and cmc leave inc xor lods xchg dec and in popf adc inc xor mov and xor and (bad) mov xor repz dec and leave stos jmp leave inc xor and xor and leave xchg xlat mov push xor leave inc scas out inc xor jo leave mov push fsubp push push fistp adc out sub push add repz inc pop inc jg cmp push jns pop add push sahf cmpsl test or sub rcll shlb and sbb xor enter pusha orl leave enter or mov dec bound add adc sub jne into and icebp xorl push inc add jae push outsl or outsb es (bad) mov mov add jle (bad) push mov loopne inc es sub (bad) out pop pop ljmp xchg mov mov insb inc mov pop add orl mov xor sbbb loopne mov fimull sbb add add pop mov sar das mov xor push into mov mov cmc inc pop fdivrs jl add mov ja and dec lahf rcrb add outsl es pushl jo outsl jb gs js gs xchg notb xor es dec gs push das jns mov push add pop or sub scas es ss jp clc xor inc lahf pusha mov enter subl dec adc add (bad) push mov es jbe nop xchg (bad) cmpsb stos inc neg (bad) add push xor add inc leave dec sbb rolb js,pt and decb push and dec dec jne jnp dec sub push push daa je mov jns addr16 dec push cmp repz clc xchg xchg pushw (bad) test loop imul sahf xchg push and shrl pusha inc (bad) test add mov enter call xorl inc imul jo (bad) aas inc inc int mov outsb xor inc jb jae push imul and dec jo lods popa sbb roll pop pop xchg pop rcl cwtl push lahf clc jo sbb and das dec and adc jbe push call mov adc pop dec outsl inc xor dec es xchg pop dec jae int push gs jne push mov jae inc ss aaa movsl push scas mov xor out ljmp cmp mov cmp insb mov lahf cmpsl push hlt inc cmp js inc add mov dec ds jns lock mov int inc mov mov jl mov pop cmp clc pop out pushf outsl add mov nopl iret pop shlb dec cmpsl popf mov and mov xor out call cs lods pop cwtl pop push hlt push xchg pop push push pusha imul fldt sbb xchg add lods inc cmpsl scas xchg lods inc dec in sbb cs repz das push add and xor adc (bad) cli or mov dec mov loope orb out test pop sub inc inc cmpsl in inc mull lret pop push jmp div add dec gs jne push and outsb jae ljmp pop push insb ds mov imul push outsb fs cmpb cwtl inc lock cmp cmp out das and enter add xor push enter push rcrb stc cs cli inc push xor add or (bad) jns in push pop and sbb iret nop cs sub add push cs dec (bad) pmaxub into add adc pop repz sbb outsb or repz dec push sub pop das sbb (bad) mov nop out cmc out jle mov xchg nop add add pop std and js insb fs xor xor xchg test push push (bad) mov popa jb daa dec inc dec inc idivb and sbb push imul (bad) (bad) imul into outsl jb outsb outsw inc out jne fwait insl ljmp imul dec adc and mov daa push sarb mov jns pop xchg jne sbb adc add lock inc push xor push push dec inc pop add mov and pop addr16 cmp jae out xchg hlt cmc fwait into lods jmp out imul imul mov and clc xor cmpb cs dec jnp loope test xchg inc jae push mov pop adc dec dec dec jnp sbb dec aaa push mov iret push push and xchg addr16 mov (bad) xor fist inc jb mov cmpsb mov fwait or ffreep ljmp cld and popaw mov mov icebp and cmp jne je les je je add sub push cmpsl bswap out adc cmpsl xorb dec adc js mov lods mov das inc inc mov push mov mov lahf add push and out lock lcall mov pop lcall xchg pop mov jle addb mov out lcall sarb inc and insb mov leave jae lcall sub add mov cld js fmuls pop cmp xor dec add adcl push add lea and pop mov popa mov cmpsb pop mov xchg (bad) dec push data16 sub repz and inc cltd call dec cmpsb cmp xor mov jl pusha sti test jbe leave outsb push arpl push inc push pop call movb jo clc enter inc aas loope sti xchg ficomp das outsb adc outsb in imul pop das xchg jns pop add push jb adc push popa addr16 pop lock mov jbe lock push stc mov dec sbbb push push add jbe push es push sbb dec pushf ja or jns cmp xchg mov dec insl mov dec mov pushl inc and pop setbe adc xor addr16 inc loopne sbb insb push pusha loope roll pop pop and push js and jl aaa mov enter jle ret mov repnz addr16 js add adc shrl add bound dec repnz jge es jg out pop dec dec in loop dec mov mov loop cmp add scas sarb (bad) out mov arpl dec arpl lds push sbb inc insl fs and out push sldt add test xorl fildl test popl faddp inc daa push pop cmp pop clc xchg outsb clc jle in cs inc cwtl cs test js mov lock lock cmpsl push jno loopne push repnz imul jp jns push leave test and andb arpl xchg jae adc aas jp nop lcall mov jne cmc fiaddl dec pop jp sub out inc enter mov cmp mov dec cmpl inc inc push outsl jb fidivl pop cmp cs lret inc mov push imul and lahf mov cltd js aas jecxz call xchg push outsl or push lahf mul mov xchg push add outsl insb push imul call aam jne out mov ds test iret loopne lds les shl and insb ret pop roll sub std int je je pop arpl jae dec pushf pop sbb xor ret mov xor cmp inc (bad) cwtl lahf push mov je outsl enter loopne mov sub jg add mov call iret jo bound inc imul sahf das push testl sahf mov shrl jnp sub divl out mov movsb mov jns dec repz or cli adc imul ds out mov das mov sahf ja push jle push cmp push loopne out sbb dec dec dec dec lods inc inc dec jl int3 les or out push push push inc inc inc xor dec push aaa xlat test pop out push imul push dec mov repz in cs dec cs dec push daa push (bad) mov pushl xor das jge les fs addr16 jbe add fidiv adc cmp shlb dec dec pop cmc dec mov (bad) lods push imul lahf das dec inc ret cmp gs pop sub jns mov scas into or enter es sub dec xchg mov and test shrb pusha outsb arpl sbb push sbb cmp enter jb stos mov sbbl jle or mov inc mov pop ss inc negb pop rorb into aas in cmpsl cmc xlat rclb push rcrl in das cltd js loopne loope cwtl xchg pushf das in out xchg ret add add dec cmp add and adc int loope jbe fs or push inc push into aaa cmp pop gs bound push push (bad) push push pop outsl or and cwtl sub jne jle or fldl rcrb popa push jae mov out jne inc dec adc into mov jae mov xchg addr16 jle out push out jb xor mov jae push hlt clc sbb jle loopne (bad) and jbe ja pop dec inc cmpsl adc jo or add jns mov pop lret jb in gs cli jg pop inc dec dec inc inc dec pop adc repnz cmc inc inc inc and dec push push inc push push lcall mov or jb rorb mov push push and inc and int pop dec dec inc and push sub insl imul adc insb cmp dec (bad) loop imul mov outsb in aaa cwtl test push arpl mov out imul dec ss mov ss jbe jb push scas add inc dec or and movsb jnp mov js and mov lds xor out outsl jo mov pop imul je fs push cmp adc mov jo out je fistp scas inc aaa insl test push push je push inc arpl arpl test imul add inc jb int3 sbb cmp inc xchg popf sbb dec pop xor push cmp mov lea push cmp mov jae push xor (bad) popa fiaddl or and outsl icebp sub jae push imul mov inc dec imul ret mov inc sbb test sarb add cmp dec xorb fcoms addb push int3 (bad) sub inc mov push jae int3 pop test sbb xor inc dec inc push dec push mull xor add (bad) aas and aas jg xor fimull leave ds call jg sets out divb inc pop jns add outsl mov xor data16 cmp outsl fs inc xlat jo push bound add push insb fs cmp sub loopne add and imul jb sub fidivr inc cmovs jnp orb paddq (bad) xor (bad) jo mov add push pop add insb inc pop jbe cmpsl (bad) fwait mov push jecxz dec xor (bad) dec mov dec xchg push pushf dec outsl js leave mov and push das into repnz jnp mov dec push dec push dec push sbb push add mov mov push add add add jmp push pop pop or xor and in popa (bad) out pusha push jo js inc inc call xor sbb pop icebp or les add aaa lcall sub dec outsb pop jecxz xor push dec xchg addr16 bound mov jno sbb and cmpsb add (bad) sub jae je inc xchg cltd outsl add cmc jmp scas jo gs and push sbb lock jb je mov jbe cmpsl push dec and jnp arpl sub xor add push outsl insl popa imul in fiaddl in jo jo push push cmp repnz movsb sub add daa add lea js add inc fs fmul jb dec (bad) pusha jns (bad) inc pop sti outsb popa jo cmpb adc dec loop add (bad) hlt jb adcl out or mov daa popw push outsb or pop xorl push jmp or addr16 push out pusha xor or jle mov xor push push add mov add fs xor imul xor and test inc xor cmp jns cs push fldt add int xlat cmp fdiv add add inc lock test inc je inc jmp or push xchg jp sbb dec imul ja jo je outsl push or es fisubl call xchg out pusha insb (bad) xor pop icebp sbb add (bad) jo insl ja inc je shrw and and mov ret ljmp mov adc adc testb dec cmp and clc mov popa add jo gs sub mov add dec imul mov adc mov jle pop cltd enter popf xor push dec inc dec add dec dec inc add lret inc push jecxz,pn out cli jg and jg dec sbb scas sub adc in xchg cmp sbb in inc es sbb jmp clc sub adc add add and lods lcall adc jbe sti loopne xchg clc daa cmpsl xchg pop in jo and mov xchg push daa cwtl mov js lahf add xchg aaa inc lock sahf loopne in mov daa nop int scas js xor dec rolb call push addr16 pusha pop nop daa cs mov cmpsl aas ror or (bad) xchg lahf sbb mov cltd nop push and enter pop jo mov and jg mov test lods pop enter call fadds mov fldt xchg daa mov mov pusha outsl dec jo in ret cwtl jg mov mov mov lahf xchg daa mov cmp pop call jne cltd mov mov das pop insb sub cmp pop enter inc nop daa iret test shlb xchg cmp subb and add sahf xchg pushf and ds xor xchg dec daa ja rclb mov ja cmp dec enter mov add test out fsubrs xchg or out adc mov call inc mov xor xor insb (bad) loopne outsb push das fsubrs inc lahf (bad) mov bound psubsb or daa pop xor and cmp pop and nop and iret test mov jb pop shr mov mov cmp daa adc pushl lahf xchg or inc iret (bad) mov lahf mov clc daa clc push add add push xor add xchg and dec jbe repnz mov jo or (bad) lock das cwtl mov repnz insb mov cmp pop nop push enter mov pop adc in mov out pusha mov add inc add daa mov daa loopne psubusb lock xchg mov daa xor sub inc mov and push enter and mov mov loopne enter insb and fist xchg mov fisubr dec push mov xor daa sub mov mov das in mov loopne cmpsl add cs inc fdivrl mov les pop mov lea cmpb (bad) push fsubrs mov out or jns add mov loopne pop add or insl or addl pop or (bad) mov or mov js mov mov sbb or dec in adc mov enter sbbb test xor mov add out cmc add pop and mov push xchg push sub mov lock xchg loopne frstor and mov mov add nop mov or test cltd nop sub (bad) call sarb lahf clc or inc lcall call dec rolb mov roll jmp lds nop cwtl ja daa pusha xor add shl push dec mov xchg daa shrb sbb in popa mov das sub js and add add ret outsb xchg aas ss sarl dec fsubs ss mov pop mov test add or inc cmpsl cmp int pop add mov push pop shrb cwtl (bad) sbb pop lock dec ret jl inc das push out cmp orb clc mov test add ret rorb test das js dec leave xchg ret cwtl ret add or cmp in call loopne les sub (bad) (bad) in cs insl inc (bad) cmp les inc xchg pusha push add push enter sub and leave sub xchg loopne add jo cwtl and pop lds scas lock jae orb cmp mov mov add jb leave aam out jb cmp repnz pop std mov cmp mov pushl dec jae test add cmp call js in js sub pop scas nop out dec or iret repz add add in jbe cmp jmp inc cmpsb loopne or mov xor push cmp jo out (bad) sub xor and pushf cmp test add js das iret leave adc enter and mov mov in in in push add cmp inc mov mov leave scas dec inc or in mov mov loopne inc dec repnz mov lret cmp mov mov mov outsb daa pusha popl js iret in in mov test loope pop mov sahf out add loopne jb rcr loopne call aas sbb fild mov mov dec lret dec jns push enter (bad) cwtl fucomi in pusha push mov nop pop cwtl rcrl jg test mov dec lock push lea nop xchg and sub fmulp inc lea add add outsb push jl mov jns out cwtl or sahf out ret or fimul in psubd cmp sarl adc adc cmp repz adc adc dec push pop pop push cmp repz sbb iret repz xchg pop iret mov mov xchg lods outsb lds iret or fcomps (bad) out and xchg and cmp inc (bad) push (bad) bound mov (bad) mov in xchg (bad) mov les sbb loopne out (bad) cld (bad) nop in xchg and nop es xor mov jb nop push nop pop nop insb nop enter jp mov jb movsb nop mov rclb (bad) fmull pop ljmp add mov jg (bad) mov js test sahf add push (bad) pop add adc testl lcall pop pop (bad) outsb fmul pop inc outsb les or inc in nop inc enter xchg cmp fildl push loope jmp js out lds scas call mov add add out or nop xlat dec sbb inc nop dec scas nop inc pusha push addb add shll push inc outsl nop xchg pop xorl (bad) rclb jae sbb rcl loopne inc ja jmp inc (bad) iret decb and cmc jnp pop xchg repz add or cmp sbb pop xchg pop sub xor outsl cmp fstpl xchg pop pop xchg arpl imul adc nop daa call adcl shrl add add add lds pop pusha (bad) xchg and adc cmp enter xchg inc xchg dec xchg jb mov xchg pop xchg mov mov dec ja scas and mov mov mov das leave pop aam inc aam pop dec adc dec push adc cmp xor xchg push xchg and dec jne pand in adcb out popf dec and rcr sarl mov (bad) adc jbe push aad xchg daa daa daa mov adc and xchg inc cmp scas test sub add int out jo js outsl or (bad) mov mov outsl test add nop dec shr fcomps js lock mov adc nop dec lock xchg data16 cmpsb call js out outsb push in pop scas dec pop mov pop ljmp mov das jmp xchg hlt decl or test dec clc xor fsubs jb pop dec xorb js mov repz push cwtl pop or sahf sbb iret add (bad) clc cwtl and mov stc add cltd iret adc sub and out out jne sub adc dec add out pop pop cmp lock push jbe inc ds cltd leave in or push popa cltd dec insb test ja iret add sub scas lds pop fidivrl dec sub lcall fisubl lcall xor cs jo iret test popl enter add rcl daa daa lret (bad) pop loope cmp mov xchg pop fwait dec pusha push enter mov push enter xchg fcomp fistp xchg fcompl fcompl xor loope fildl adc pusha fcompl cs fwait add call iret xor adc pushf dec call xor fisttpll aaa fwait loop pushf lcall fist push pop ror mov sbbb jb mov cmp loopne psubsw jb decb popf jg xchg push enter popf inc ficom sub pop fiadd jo mov fisubr inc cmp popf enter lds js (bad) xchg nop cwtl (bad) (bad) stos fs mov fist aaa inc mov sub push and cmp enter sub adc pop push jg loopne jns das inc loopne sahf es inc enter loopne call repnz loopne icebp or jbe dec mov sahf dec leave xchg push lahf fsub lock sahf notb inc inc mov cmp push loope mov add push jb cwtl mov test iret jo adc sub jb enter lahf dec outsl cmp jb adc outsb push in push outsl push mov jns jo mov pop enter test add bound xor leave jg pop jns pop mov mov andb inc cs in mov jecxz in pushf nop push andb cmp in loop test and repnz in mov test adc fwait xchg enter in outsb scas bswap mov mov in mov mov mov mov cmp pop mov mov xchg xchg mov mov adc mov xchg xchg popl icebp mov xchg mov push pop sbb and and and cmp repz dec and and pop es jne repz sub cmp repz mov cmp repz ret mov cmp in bswap adc mov mov mov mov and mov sbb jb addr16 andl mov mov leave mov repz add or enter movsb inc push decl iret pusha movsb imul andl mov test or and inc lock xchg sub mov mov xchg movsl push aas push or mov (bad) jb pop jb call pop adc sarb cs and and inc fcoms add or cmpsb sbbb mov cmpsb jb enter cmpsb shll cmp cmpsb loop in cmpsb clc cmpsb loopne xchg and cmpsl push cmpsl sbb pop and das cmpsl cmp push adc outsl data16 iret repz jno or pop cmp repz push popf add lock mov mov ror cmpsl dec xor dec dec repnz hlt pusha jb xor jmp inc cmpsb mov test out imul fcomip xlat adc scas nop test in mov scas mov out or fcomps loopne xor mov test jb mov rdpmc daa iret jae ds add pop dec sbb outsl test sub test insb jne test jg movsl sub test jb xor jb add pop jb and sbb cwtl cmp cltd inc dec add dec scas pusha push fwait pop sub nop jns outsb push mov adc dec call loopne adc scas stos xchg rorb push push adc and in into inc decb pop test sub add popf pop jo orb cmp (bad) jb lock shrl enter push adc js inc repnz into mov out or lods pop outsl iret testl inc adc into repz cmp xor lds icebp incl jo (bad) lock js add mov pop jg out repz push cwtl push mov test aas cwtl icebp nop xor fdiv mov out inc pop outsl clc jbe and and fdivrs push fbld sbb repnz repnz enter push xchg fucomip (bad) sahf and jb lock clc dec repnz fsubr inc mov iret sbb xor in jb adc and cmp xchg ja mov mov and cmp leave loopne daa fdivp dec mov cwtl sub cmpsb cmp push xchg and hlt push lods enter dec jo push enter mov and adc pop push or lods leave sub mov cmp adc pusha xor test mov jo pop call nop cwtl add daa push enter mov jecxz ret pop into scas outsl pop (bad) enter scas add push scas scas scas ljmp push insb outsl inc dec pop add pusha dec dec push and sub dec scas (bad) in leave mov iret js test rorb mov pop cmc clc scas aas add xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov cmp mov push mov inc mov mov mov mov jb enter mov mov mov mov mov lds in xchg and mov mov mov sbb jb mov mov mov mov xchg and mov mov mov cmp jnp mov leave adc mov add test rcr mov mov xor dec add and pop sub test pusha js test mov jae enter and sti mov dec or pop js sbb cmp push ljmp mov pop inc mov leave dec dec xor das jmp fist cld or pushf inc jg lds push pusha mov dec nop (bad) lock decl mov lods dec inc cld mov mov cld mov dec movsl xor lds mov mov dec scas nop addr16 (bad) xor sahf out dec inc sqrtps xor and sbb std xorb outsl mov out (bad) cmp xchg ret jo mov sub test fdivr jle insb inc call les jecxz (bad) pop shrb sar dec mov jo push cmc (bad) mov outsl lock dec adc jl mov es (bad) sub dec and nop (bad) pusha mov bound jg xchg xchg sub inc scas (bad) leave fistpll dec xchg jp pop mov or pushl adc add xchg and mov daa inc rcll scas fsubs push loopne adc mov in imul mov lahf or and sub (bad) mov enter pop push mov add in mov in mov (bad) lock and dec xor cmp and das pop ficoml jo dec in sub cwtl nop shrb xchg sub xchg rolb ficom add jb jb pop inc push xor test mov jbe pop xor in mov loopne or leave adc sahf adc mov cmpsl (bad) mov add jo daa iret mov push add sub xor out rclb and dec call cmpsb nop add dec scas mov shlb fnstsw add fldl iret jb stos pop mov outsl sub adc adc sub cltd bound mov mov pusha nop out jb imul leave repz scas orb adc or ret add loopne loop in (bad) or pop (bad) sub mov adc push sbb mov xor dec jg lods mov inc fbld mov sahf pop jl enter inc rolb mov mov jns pop out xlat outsl add fsubr in ror push out jb (bad) jmp xchg and pop add outsb mov enter (bad) inc dec dec push loope fisubr mov mov pop orb and or scas test pop sub jns and call lock enter cmp outsl movswl adc jmp xor add iret repz add push add cmp daa daa addr16 or jb mov cmp or or sahf ja ficom loopne ror in cmp rcrb inc sahf add inc dec rcr xchg adc push rcrb jg scas jo cmp rcr cmpsb fmuls fbld ficoml push (bad) pop cwtl xor xchg push or add enter adc leave leave adc xchg lock xor add pop dec xchg aas js adc mov push pushf lea cwtl push js pop add pop cmp fwait dec pop and or or enter nop or daa int3 pop scas rclb call repnz or cmp mov in mov mov pop fadds add jb pop xor pop push lods js pop jb shlb enter leave mov enter lock and cld ret pop sahf lret adc add test shrb inc sub das imul mov jg nop fwait rorl inc lock jnp repnz sbb scas fmul enter out adc pop enter xchg sub dec (bad) call dec test push add test icebp and and js adc dec adc jo enter (bad) out mov cwtl ret decl leave repz outsb add scas call mov enter adc pop jae pop clc (bad) rorb dec push sbb push dec (bad) push pushw nop imul and add loopne xchg sub and xchg sub xor sub xchg sub sub xchg push inc sahf add pop push (bad) enter call mov xor pop jb pop fadd or fild in scas mov lds shrl fsubs cmp scas jne dec add jb pop mov inc enter push mov es push in scas push je xchg sub add test lds xchg sub int3 mov pusha pop clc dec mov (bad) mov and leave and fdivrs mov xor sbb inc scas movsl dec xor inc cs mov pushf test enter out rcrb int3 test mov aam pop fdivs aaa (bad) les loopne pop add dec out dec sbb call icebp stc ljmp nop imul dec sarb enter clc dec and push enter dec je push enter enter cwtl pushf rclb push mov les jecxz adc iret fadd mov (bad) hlt (bad) dec dec and and sbb mov or jb inc mov enter sbb mov sbb adc dec pop pmulhuw mov js in mov sbb pop pop repnz sub call in iret sbb xchg mov enter in hlt mov enter leave and sub jb push add nop out push pop add or sub lcall dec xchg adc popf cmpsb mov in mov pop adc inc dec mov repnz inc outsl clc push jno leave adc sti leave push and in pop cmp push pop and inc fnsave lcall bound push sbb daa lret test dec fcoms cltd inc pop add fs fidivrl jb (bad) xor push daa dec cmp enter cmp es fs jbe cmpsl jbe daa xor ds cltd fisubrl dec es inc pop sub adc push test dec dec sub ficomp sbb push lidtl inc push push dec dec dec iret sbb cmpsl sub inc dec xor dec push adc inc pop add push jl aas mov mov adc (bad) push cli (bad) imul fwait int mov js jp jl push ja repz jle xlat fstps shlb push rcl (bad) aaa mov inc mov mov popf xor inc add jl int push push sbb and lahf outsl iret data16 jl push mov add cmp cmp xor jge inc add xor cmpsl dec sbb (bad) (bad) outsb inc outsl push sahf out int jle addb add ljmp pop push add sarb leave mov xchg or or pop cmp aaa mov add inc push or pop movsb pop push pop push mov stos push out pop push dec shlb negl push or add stos mov in in outsl mov (bad) cmpsl int psrld pop (bad) jg sub jecxz mov lret (bad) into in stc (bad) fcomip into aaa repz mov fcmovnb stos pcmpgtd (bad) mov mov enter into jmp mov mov pop mov (bad) fadd repz lret fcmovb out and das pop push mov push inc and inc and xlat je sbb inc push iret repz or mov mov push fstpl mov mov pop cs pusha cmp loopne jg add sbb add repz andb jbe xlat ficomp dec idiv daa push inc scas cmc pop jmp lods (bad) add dec push fisubr insl repnz ss ja daa xor pop or xchg mov add mov push sbb pop sbb ret cmp (bad) ljmp add xlat daa test and testl xor out push adc push or sub dec out or add cmp dec scas xchg pop div or lods and xor (bad) xor sub push cmc lahf inc sub push jmp outsb sbbb push jmp ret (bad) push lods xlat cmpsl test push (bad) xchg add dec test push mov pop mov inc inc lcall pop jmp rcll in dec daa add pop inc out outsl (bad) mov sbb pop dec addr16 daa pop (bad) imul inc sbb push or stc ja cmpsl xor mov shrb mov fistp push int pop add sub ljmp push jecxz (bad) popl push adc iret stos inc (bad) sub push lds bound incl add xchg sbb inc adc adc das adc (bad) mov and add inc pop (bad) ja adc shrb or ret (bad) jg mov or daa rorl add mov movl push lds push dec jmp inc mov pop adc xchg incl fisttp jns stc stc std add incb (bad) mov sub ja in popf cmp andnps or rorl or pop test xchg aam mov sub lgdtl scas idivb fimul out mov add add sbb pop cwtd jl pop xchg mov mov pop add or jecxz clc xor mov in and add stos bound mov cltd add pusha or out addr16 fild pop xchg lock outsb daa clts jg divl adc mov and dec push push pop jnp xchg sbb adc out fnstsw jnp cld cmp add cmp or jne push neg mov jge loope mov ja in cmp emms mov ja ss dec dec jbe push aas (bad) jbe arpl ja fsubs out add and flds (bad) jbe mov movswl add mov dec lds add sysret daa mov fiadd imul frstor jecxz sbbb adc pop adc push lds out adc and mov adc jmp xchg scas push xor add xor add sub add sti mov dec cmp add jne jae and repz add xor push mov mov mov xchg push and jno dec adcl or mov xor (bad) fcoml and es sub xchg push xchg push movsb repz mov fs or cmpsl imul mov jmp push fwait jbe add inc xor (bad) cmpsl pop outsb jp lret stc int3 loope test mov push mov inc loopne int mov shrb mov fdivs fistpll mov cld shr push into lods sub mov fcom (bad) inc call mov lret mov out push mov loopne out shll fldz push lret not outsb jnp mov test sbb adc mov mov into cmpsl jbe mov xor xchg push (bad) add mov negl fwait aas dec xlat rcl out mov out into mov mov fsubs aad pop scas mov lock cs add orl aas mov stos (bad) out sbb fcompl iret (bad) mov aad mov sti or (bad) repz pop xor movsl (bad) ret fwait loopne and jbe ret pop or pusha jmp ds inc es mulb es jbe stos xor (bad) jno pushf loope (bad) cmp mov (bad) shlb outsb jp ret shr shrb mov rol or cmp into push out mov inc cs push lods jnp xchg xor and pop jae pop cmp pop dec popa outsb fdivrl pop addb clc out sub je cmp lods mov cmp aam aas dec pop pop mov shll adc inc insb outsl adc push dec adc push lock adc je add push xor pusha enter repnz aam ds or rclb adc push and test mov test insb jo in (bad) mov sbb ss aaa mov leave rcrb imul out fimul (bad) hlt mov inc lret fmul mov shlb fistl into lret ror je cmp inc shll lret pop js adc and mov popf loopne call xlat (bad) mov fbld mov aaa popf rol iret mov cltd jae and mov ret lret rcl fcomip xor cmp jb addr16 stos push sbb add daa push call inc inc push dec push pop dec pop sbb lock dec dec add add inc sbb sar mov cmp mov sbbb into int3 in addr16 lret das dec repnz sbb mov (bad) cmc out das fcmovbe stos mov mov mov shrb and mov test jl nop sub mov fistpll out pop dec stc and in dec icebp ja scas in jbe dec jmp add jbe sahf add add repnz daa clc fiaddl add mov and sub mulb add pop movsl fldt jge aas and aas decl sbb cmp sub push aas fwait das stos push mov sub pop mov pusha or mov mov aas inc and xor or sbb int3 mov aas (bad) arpl push push pop push or adc jae mov push xor add int3 dec xchg push xor and fstpt mul adc stos cmp push or fstps pop and sub push and xorb pminub sub xor gs repnz inc and push mov jle sub pop mov cli jns sub or fbld hlt push push data16 mov test sbb fiadd insl jbe pusha (bad) push adc cmp and mov or adc pop dec mov push jb mov inc repnz dec loopne scas pop cmp ljmp mov loopne add es insl lods inc push cmc dec mov cwtl pop and out xor flds and sbb bound sbb sub pop and jo or out pushf xor repz or add fsts or outsl push js outsl push add cmp add and xlat mov arpl xchg decl jnp xchg das arpl out ja mov das pop repz repz jecxz in sahf xor (bad) jp or and jbe lahf push pop push int pop data16 cltd int mov or gs jbe and inc pop push push addr16 lret jnp xchg and scas test push addr16 into push pop xor in outsl push mov data16 es xor inc lret cmp stos pop jp mov ds inc sbb pop xchg jge popf xchg or add arpl or in jge xor mov mov jl aaa inc add loopne jmp les test pop xchg into into mov rcr int mov rcl mov test sarl or add push repz push add add iret repz add cmp repz (bad) test lret mov ucomiss add mov xor addr16 lret push mov ss mov push ret jmp ljmp enter push mov push adc iret repz push add repz repz iret repz inc or cmp cmp repz or xor cmp repz iret repz and and sbb cmp repz adc adc cmp repz out cmp add add cld fstps clc sbb sbb jns out sbb out sahf out and and sahf out sahf and and and jns out and out sahf out sub sahf sub sahf out sub out sahf out xor sahf xor sahf out xor (bad) jmp in je arpl push insl outsb jo jb mov sbb je jbe js jp adc pop or add or dec adc adc adc mov cmp (bad) outsl outsl push jb (bad) fisttp and and sbb sbb sub and mov push sub xor sub sub and push bound rorb (bad) jp outsl sbb sbb sbb push pop and and sahf add mov sbb sbbb mov add jbe add sbb push sbb sbb orb addb xlat jge add orb wbinvd or or pop sbb addb cs and add sub xchg dec dec dec das xor cltd jbe cmp jo pop pop aaa adc aaa add adc jb,pt pop sbb adcb adc insl inc push and and adcb sbb sbb sbb addb sbb sbb mov add sbb addb and xchg sbb addb and lret adc pop add and scas add pop sub sbb and (bad) aaa add repnz lret addb and addb stc add in xor dec mov adc sub lret test xor adc cmp push or sub sbbl pop and mov sbb daa in fidiv orb xor rdmsr xorb sub mov sub xor das in orb or enter aaa cmpb adc aaa roll fstpt adc cmp add dec in or cmpb inc orb xor inc orb (bad) mov or and out add and sbb je inc orb inc add leave add push cmp pop aaa inc cmpsb fimull push add out aad add sbb rcr orb add sbb in cmp dec orb add pop xor movsl dec dec subb pop add xchg and sub aaa push sbbb add add push orb enter sub inc ds aaa xor xor bnd in push orb sbb pop in push orb push push push push pop cmp rcr pop daa add push and pop sbb pop orb out inc enter pop xor dec imul add sub sub pusha sub mov push add fiaddl pop arpl and mov add xor dec cmp pop sub fildl ficoml pop xor push jmp imul xchg (bad) orb xchg int add outsl sbbb pshufw dec outsb fcomi push je sub das imul jbe sbb cmpb pop add xor (bad) mov das add mov jb aaa jnp and jl add jge movd add push sbbb and addl fimul add sbb enter test dec (bad) jbe add xchg cmp in xor sub cs sub lret mov add and in (bad) mov add pop cmp push (bad) in fwait pop sti nop adcb xchg or inc mov xor sub in mov add fcoms xor and xchg orb sub pop in push notb cltd sbb sub and and or add push and sbb stc and adc sbb mov xorb add in pop sbb sahf out push movsl push cmpsb adcb test pop in cmp sub orb add lret repnz cs and in cmp stos lods adc sbb (bad) ss aaa add and mov mov out or add or leave aas pop mov or pop or or mov or and sub add daa xchg jl or sub push aaa mov xor sbb xor mov sbb enter mov cmpb mov pop sbb or or mov leave in sub sub xor mov or mov paddsb rolb add add pop mov add movb enter frstor lret lret or mov or orb into insl jbe dec sbb shlb and cmp orb add sbbb roll aam add aad adc test enter inc jb cld aaa (bad) adcb sub fwait packssdw xor flds sahf lret and sbb pop scas in dec sbb adc sbb aaa sub outsl fiaddl sbb orb add jmp jb sbb faddl adc and fldt or sbb fild sbb sbb and add in inc loop add mov sbb pop sbb ja jbe in in pop ss orb sub test add dec and fsubr arpl les in andb sub repnz popw xor sub addb sub jl in xor addb adc lods repnz repz sub cmp pop sbb pop push nop out sub sub out lods testb orb dec and clc orb dec sbb add xchg fcmovnu cli orb or add sti orb sbb and sub mov sbb aaa sub cld orb std xor xor in fsubs pop and sbb xor orl addl and andl lea add add and push add push adcl adc ss orl cwtl stc imul push adc or insl ret fimull pop add fadds pop sub fwait jbe fstl orl das add dec adc xlat push leave xchg daa adc (bad) in add aaa push pop aaa or fadd dec pop add and add stc and sbb dec into (bad) pop add and sbb push sbb sbb nop sbb and sbbl pop subl dec and xor nop push and jbe mov adcl jb aaa and fcoms dec and jbe add subl and xor and sbbb sub push jae sub or and pop adc sub subl fidivl and add and jns addl sbb xor add pop leave pop sbb lods ss ss es mov cmp and mov push cmp sbb pusha pop xchg or cmp cmp cmp add nop shrd addl fsts inc inc cmpsb ss dec insb pusha add sub inc sbb sbb or sub lret sub (bad) roll jmp ss aaa or or mov add orl (bad) push jp add xor jle mov sub jbe orl (bad) dec push push adcl adc sbb xor add fisttpl add xor dec push push rcrb idiv pop (bad) or and fimull adc push xor or insb lock or sbb push aaa adc or jbe (bad) pop or fidivl or push push lods jbe xor push mov sbb sbbl sub sbb sub sub (bad) or pop inc or push mov sub pop sbb sub mov add xor sbb or rcrb adc push push stos or fbstp xor lock push add jp,pn sub sbb xor xchg ret jbe pusha mov or mov pushf sbb es jl mov push sbb or add pop (bad) push push dec push repnz adc dec xor loopne push daa push int mov das add sbb and jnp popa stos mov mov ja cld push orl adc aaa push or push (bad) xor adc notb in sub out and add mov adc push and sbb aad sub bound jbe mov inc into pop ljmp add push cs adc into or mov sub inc fistpl push push push sbb fiadd sbb es cs inc or xor add jp das push ljmp jp mov (bad) pop cmp add pop jo daa pop sbb sub sbb fcoms mov sbb adc or push pop ds push cs and add bound xor sbb push sbbl or and addl sub adc aam inc ds cli add fcom mov push jbe sbb adc data16 sbb cmp sbb mov inc or pop faddl pop ljmp or jbe into sbb sub adc and mov into pop (bad) push ds mov pop into adc adc sbb int3 sbb dec testb ss jp mov or add ss adc jne push push or out push mov pop sar push xor pusha andl stos aaa mov inc fwait push into add xor pop ljmp push jbe arpl push mov dec sahf ds adc sub adc add repnz push sbb mov sub push sub push inc andw addl xor jle jb dec add add cwtl cs push je dec popa bound sbb bound mov bound fwait mov or add cmp add movb cli adc rcrb inc pop mov add add sbb or or popa push adc sub repnz cs test pop out subl ds rol sub add mov cmpsb xchg mov scas push ficompl shll push dec cs cs incl sub (bad) mov insl orl aam (bad) push pop or scas sahf fidivr bound adc push ss or sbb add ficoml add lods cmp ds das mov add jb js and sub xchg insb xchg leave pusha add addl sbb bound sbb ss ficoml pusha (bad) pusha stos xor shrb imulb andl mov sub sbb jno xchg push adc add cmpsb add jb mov scas and adc sub mov sbbl xor enter jle xor daa or or ret loop xchg sbb xor rolb scas push mov or xor sbb (bad) dec push add (bad) mov add fimull (bad) sbb sub dec shlb adc bound and push sub add ja into add inc inc aaa scas add push jmp or (bad) xor cmpl xchg or dec out loopne loope cs ss xor push push fidivr lcall or dec cs xorl mov negb pop push adc bound adc shr loop add or mov adc push add jo aaa xor inc test bound pavgw daa xchg xchg sub loopne cmp scas or test bound push sub pop sbb mov sub adc or xor or icebp pushw sbb lret xchg push xchg test push sub sub (bad) ljmp mov sbb loopne and sbb ss dec add roll xlat jp mov andl lods xor push and mov adc bound adc and inc xor pop and inc add push and adc es (bad) cmp ss add mov and loop or out es sbb push or mov or in ljmp jb or into (bad) rsm xor xchg ljmp xor inc (bad) mov and push xchg sbb mov sbbb mov adc inc ss jle or addl enter sbb ds sbb fimull addl dec cmpsb mov sbb bound fimul imul rolb cwtl inc sbb or add call pop lea stos add addb cwtl out outsb or stos call loop aaa xchg jl,pn sbb ss adc jae lret add cmp (bad) push cmp or mov mov adc sbb popl push cmpsb (bad) pop mov nop xorl dec jbe,pn push stos test xchg fisubrl jb iret roll and sahf dec das cmp mov hlt clc xlat sbb and add push mov push sbbb sub mov es bnd shlb mov sub adc imulb ficoml scas xchg adc cli cli and mov in test sbb inc repnz out stos and xor call rolb daa jp push pop adc cwtl negb xchg jle mov sahf sbb jle jmp xor inc mov (bad) lcall jae or cmpsb pop lock jle,pn scas test xchg sub stos push loop (bad) mov dec (bad) jbe and (bad) xchg mov sbb cmp push mov mov adc outsb adc pshufw or jle into inc and push repnz pop cmp mov mov add in loop ss mov add push cmp adc ss mov mov pop or inc xlat jbe or (bad) repnz jbe or push or scas sar jmp jp into bound xchg and pop je ret add push or es or or (bad) sub (bad) xor adc push adc test repnz pop push xor sahf cltd mov bound ds jno adc adcl into push dec popf mull bound ds add rolb es (bad) or aaa fisub sub dec stos xchg sahf pop xchg shlb jo sbb into mov push mov jb sub negb xor sub sub adc ret jo jbe sbb jg sub sbb stos test add sbb or push mov mov aam mov add or ljmp mov xor dec es xchg pop xor xchg push scas xchg cs popa jo inc push xchg mov adc xchg out jecxz js sub jbe add or mov repnz add adcl mov adc mov push adc pop inc daa int3 push sbb lret adc bound add cwtl sbb ret sbb sub pop or addr16 push dec sahf ds test bound sbb push mov adc sub push or (bad) into adc xchg mov scas xor inc gs or mov test cmp lods sub add mov ret inc or ss daa into adc xchg or xor shlb jge adcl push insb pop mov stos ljmp fsts ficom pop mov adc mov or add mov sahf es adc sbb scas ret xor push or push rolb adc bound int3 push data16 loop sahf rclb mov and sub xor lcall inc leave repnz sbb sbb xchg inc in (bad) sbb xor mov xchg or or adc xchg xor jo fs or fisub es xor push xchg andps push push and fnsave scas addl push or (bad) shlb lea inc out bound inc push jle aaa popf add pop ss mov jmp andl mov push and push jne mov push mov ficom fimul rorb sub sub rolb (bad) or jbe cmpsb xor push mov push sbb add out mov jbe pop sbb add or insl push loopne sub sub fldenv aaa (bad) adc sub daa mov lret adc jp or adc add mov or lds (bad) sbb and mov fsubl push or add or test dec lcall xchg data16 mov xchg xor pop xchg sub add or mov and int3 add xchg (bad) push mov push sbb xor jp clc ret sbb jle fiaddl pop mov add lcall or cs inc aad (bad) adc notb mov es and ss cmp pop xchg xor or push shrb mov sbb fidiv mov xchg pop repnz xor mov adc sbb adc sbb mov test or bound inc adc xor sbb or pop push test xor sbb ret je pusha daa sahf sbb mov adc addl loopne stos sahf aaa fiaddl adc cmp (bad) fisubl pushf data16 or adc test or cmp test inc inc shrl add es into or mov cs cli rorl jo faddp push xchg and stos or pop mov sbb push or push enter ljmp pop push add or ret xchg push add add and push or sbb push xor or xchg pop int cmp mov (bad) pusha out mov (bad) mov add rorl sbb add sub dec mov mov add jp sub push adc stos loop aaa xor or and push xor or fimull dec out and dec or add out xor xor das dec jbe adc sub sbb test rol and xor push xchg sub fsubs sub sarb mov xorl pusha push and push mov pop xchg push add adc dec add mov jb jge and mov cli adc push adc cmp sub sbb pop sub cs repnz sub aaa cltd or add mov adc or mov push test (bad) mov inc xor push (bad) and sub push xor add ret lds (bad) repnz add sub (bad) sahf pushf push outsb lods jbe lret sbb mov add jle mov add (bad) iret (bad) lret or push sbb call jbe adc xchg or (bad) push cmp cmp push rclb push cmpsb adc xchg add push sbb repnz int (bad) cmp push cmpl adc and xlat add pop push lret adc fwait mov adc gs jp mov add adc inc mov and pop xchg cmpsb sbb sahf or cmp sub (bad) xchg push mulb outsb bnd add inc sub sbb adc push adc pop into pusha push xor das lcall xor xor push sub add xor push jg gs adc inc adc xorl or add into and dec test into pop add mov sbb pop arpl push jae and pop cmpsb out fiaddl shl inc adcb and cli enter mov scas mov lcall sbb loope sub mov push and insl and push push cli sub in or mov pop out es sbb cmc addb cli mov jp push fdivrs adc jp xor inc insb xchg sbb (bad) pop adc push sbb stos loop inc (bad) out mov dec sub addl dec or or push test or mov adc push or sbb ret mov inc jo les push pop (bad) ret xchg jp xor jb mov xor int3 push push add sub test or and (bad) add ret clc add fsubs outsb outsb adc adc cli sbb sbb sahf xor or xchg pop mov fadds mov add push jle jb xchg pop or stos leavew sbb (bad) jle adc sbb xchg into shlb mov add ljmp push cs mov (bad) push xchg push std jbe dec xchg adc jb das fiaddl addb or and sbb bound xor cwtl jge fildl add inc lock sahf mov mov pop or (bad) add loop outsb andnps add xor sbb push inc scas loop test mov mov push call or inc rolb push push lahf cmp shrb inc subl xor or fs out popf push or out pop test ficompl pop es adc movsb jo add sbb or divb or das pop sub cmpsl add xor pop stos sbb mov xchg adc addl mov mov cli jle and fcmove aad xchg mov into push and aad add and loopne xor sub negb insb and xor push (bad) or push sub add sbb imulb or inc loopne loop push inc in movsb test lret and imul sbb mov lea out push adc ret or pop xchg ss push cmp xor jp xor pop push add xchg pop enter ss xor orb pop add out sbb jbe push pop push push ss pop call cmp push add sbb jbe add cs jge in or push push (bad) fidivr sub and push (bad) mov ds pop aaa or into insb cmp xchg imul or fldcw add or sbb adc add add stc fldcw sub add out testb or add out add add or stc (bad) (bad) sbb cmpsb push xor loopne push or into into into mov out push mov or and data16 fidivl or sbb adc mov and sub sub fdiv aaa or fucomp sbb or pop inc or and xlat or and pop repz dec push or sbb repz stos inc sub mov sbb sbb or dec mov or push and or shrl ljmp and push addr16 mov sub addr16 push xor pop (bad) xor mov push or and sub cltd xor dec push cs iret or or mov push add xor dec cmpl aaa or jmp (bad) or setge pop or xor das add fwait das adc jmp out loopne jp push cmp or popf lahf lahf sbb push xor or or dec jecxz xchg or adc sbb daa push mov repz adc or in (bad) mov lret mov or xor loop pop xlat shlb and or sbb pop aaa push or int3 jae cmpsb xor loope cmp push or lret push es and and loop sbb daa rorb add repnz inc sub and and out jle out or ja out jae pop and xor pop sbb or std xchg les aaa or sbb sahf add push jle out or push and add int3 inc mov push mov aaa push and aaa imul test cmp push or das das cmp into push or scas adc mov add ds mov in out sbb xor jo xor and addr16 add inc add or and out sbb sbb sbb addr16 pop add sbb daa add cld mov push pop adc xor aaa add cmp rorl ljmp rolb or add inc sbb jle enter sbb sbb add scas sbb sbb push dec aas sub or add pop sbb lock xchg out push fmulp (bad) or add xor rolb lahf cmp push pop and push repz and in in or sti push test ret fsts push inc sahf or pop or inc push cmp fnstsw lds mov xor add or popf lahf cltd ss add mov jns push and fistpll pusha gs sbb adc test sahf pop and adc sbb ljmp push cmp add into and sub and jae out bound add add or sbbb xor adc sub jno jbe stos adc push adc sub loopne out push test outsl push outsb cs add ljmp inc push ret or mov cmp dec mov or xchg push out xor pop pop ret add scas pusha push sahf cmpsl bound push inc cmpsb mov push push xchg adc cs sub adc xor add inc sbb mov data16 pop lock xchg (bad) (bad) sbb and mov and loopne (bad) and ss lret outsb xor cs iret and bound adcl or aaa out (bad) sbb mov pusha mov ret inc xor xor mov pop sbb jl xor jae dec stos rcll xchg pop xlat or fiadd or fist ljmp xlat add dec (bad) es mov mov add push jb adc mov and ret sub mov cli mov add loope sbb rolb mov fildll xchg test cmp xlat icebp adc adc jmp mov lods sbb push xor ret or popa addr16 pop ret out out pop sbb dec es add pusha jae pop and adc (bad) dec mov xchg mov cmpsl jne mull cmpsl ficom les shl incb add jae adc rorb xor xor loope sub rorb das scas sbb and push dec mov jbe sbb stos cmp add xor je add xchg pop ret pop inc xchg push dec xchg in js dec (bad) out lock loope pop loop dec adc mov xlat push popf inc out add idivb push add or mov jns stos mov push popa popa push outsb xchg xlat popf out gs jne imul outsl dec outsb push and imul jne idivl jle outsb es xchg (bad) into jne popa es pop gs out dec dec jns jae jp sahf out jb jno push imul data16 dec (bad) je fs jge test push jg xchg test inc mov mov iret pop outsl mov (bad) rcl mov and add aas and xchg aad (bad) rcll sub std and wrmsr sbb outsl stos xchg adc in out fnstsw mov mov mov pop fwait jp orl or (bad) lcall push and jg sbb mov rol cmc mov cmc (bad) mov testb push inc (bad) outsb mov and fisubrl sbb out mov xor leave stc (bad) hlt aaa push mov cmp dec dec inc inc sbb (bad) xor gs sub fcmovnu scas sub mov push (bad) and jl cmp mov pop iret js repz push (bad) push push repz dec inc cmp sub ds repz adc add loopne sahf out lock jns out sarb sahf movsb mov jns out mov jns out jo pusha pop sahf out sahf push dec inc cmp and lahf out sbb hlt fucomip repz repz les iret mov pop cmp repz cmp sbb jns cmpsl stc cld fsubrp fmul mov mov ficom inc push inc inc inc sahf out sahf inc inc dec dec dec dec jns out dec dec dec dec push out sahf out push push push push stos out sahf push push pop pop pop cmp mov jnp fidivl scas cmp jns jnp pop or repz or or repz repz or or repz add add add cmp repz add add repz repz or or repz or or or mov or sub sub lret (bad) fisub sub imul sub push pop xor mov test aaa ss xor test jne mov xor add and aaa ss and mov xchg pop xor aas xchg or insl sbb das xor dec dec dec outsb (bad) ss xor xor jae mov aaa repz repz jb mov jb jb push push push push jb jb push push push push jb jb dec dec dec dec jb jb dec dec dec dec jb jb inc inc inc inc jle jb inc inc inc mov test stos or aas loopne add xchg in push push dec push inc cmp push dec inc dec push inc mov iret iret dec inc dec inc dec inc push push nop dec outsb fwait mov mov mov sub (bad) sub jbe mov mov mov sub and ljmp or lret (bad) mov add sahf pusha ret inc push nop inc (bad) mov push sub pop pop cs push arpl xor push push jns add jb or and jg cmc or xlat jae inc (bad) xor jae xchg int3 fsubl add xchg repz out je push cmp push push jp sub ss outsb push push dec je jbe mov pop jb add sbb push (bad) or insb nop push add jae jns fisubrl das add mov repz dec out fdivrp push adc out ds add hlt in sti in out sahf cli sar sar jns out negl jns out hlt push repz mov xor and fucomip imul out mov in out sahf out in fs mov cmp add (bad) jmp je rorl out out jmp sahf out sahf push in jecxz loop jns out push loope loopne ljmp fidiv cmp je jg ficompl fstps (bad) push xlat cmp sarl (bad) enter repz aam push rorl repz push cmp repz and adc jns iret int3 cld call out sahf movsb leave cwtl enter sahf out jo pop lds sahf les sbb scas sarl push roll out iret repz loopne int3 mov iret jae push mov mov push push out lcall mov sahf out enter mov mov jo out mov mov les mov ret fadd jmp xchg mov les lret cld rol adc jo cmp fstps (bad) mov das push mov (bad) fnstsw into lahf dec mov (bad) pop mov mov out and fdivl mov std xor cmc clc (bad) int3 ficom popf ds mov lret fistp jbe in lret int3 xchg mov daa inc push dec (bad) popa mov iret in (bad) mov xor loopne and rcl mov rcr sti mov aad rol rorl mov mov push lock or in iret add movb mov xorb sub add add lods sbb imull rorb xchg fadds call push lock mov cltd sti inc add lret push mov daa enter inc mov outsl std adc mov aaa ljmp adc arpl lcall mov xor scas movsl pusha add addr16 fistpl rcl sub xor mov sub mov pop mov lea push (bad) xlat jecxz aas xchg pusha (bad) xchg dec (bad) mov data16 dec push inc mov mov jg andl mov sub into gs daa pop daa rcll insb mov incl and xchg pop pop fcomps lods push out aad in inc push loopne sbb pop wbinvd push xor lahf inc arpl stos cmp xor sbb (bad) ja lock cmpsl int3 stos mov cmpsb cld cmp jmp sarl and daa pop fwait scas pop les lret lock repnz out mov and aas inc push out add lods inc xor mov xchg rclb aas pop add notb daa fstpt push lock lret inc mov mov mov dec pop dec aaa xchg pusha adcl mov sub les popa out jg fbstp mov or mov mov enter mov (bad) push or mov in sti xchg sbb pop mov pop inc lahf addr16 loop rclb fisttp int adc jmp std mov xor stos roll aaa icebp inc sbb fdivrs enter (bad) lahf pop jo mov inc pop aas (bad) or and (bad) fwait mov mov push pusha out xchg add ja rolb push cmp loop cs and cs stos cmovl ret mov (bad) dec jmp lds idivb sarb pop mov cli leave cli loop in mov das (bad) mov aaa lret cs sub mov add repnz mul jle mov push mov sub adc add das pop xor jecxz aas xchg sub mov ret mov testl daa (bad) stos add rcrb xchg add xor iret jg imul imul imul cld rcl leave stos fildl pop out mov push shll mov ss loope jo outsb sar daa sahf mov outsb repz idivb sahf jo outsb add aaa mov mov sbb call inc mov fild and les push notl (bad) pop into add (bad) repz (bad) rcl rolb iret ret ret fwait push out sub vmwrite (bad) out std lds loope clc adc cmp rcl mov in and lock pop das add jbe cs call push les ror ss pop push lock adc ja jb jnp (bad) scas push insw je orb push inc push inc push dec inc add in push sbb xor xor add daa cmpsb (bad) aad push test pushf pop pop das and fisttpll fistl inc (bad) xor jg pusha push mov jbe stos jg dec scas push cmp push idivl and outsl add push mov ffree test in call gs rolb push dec stos fs ja jo jg jo addr16 jp sbb sub bound push fs sbb aad icebp cmp je testb xor cmp xchg cmp xor or bound xor ss pop jp mov xchg lcall lds aaa addr16 faddp mov xor jae add jl shr in xor add adc imul jbe sti add jl pop and sbb inc inc jo mov fcoms cs dec adc mov cmpl scas insl xchg or mov int3 push loopne push jne and int3 fs rolb gs sbb add lods out push and mulb add or hlt loop insl cltd imul outsb and sbbl mov cmp imul or repz fiaddl (bad) pop fnstsw adc in cmpsb xchg les cmp add popf idivl movsb jne pop outsb jg sub jbe push outsb orb cmp sub daa push pop sub jo lods mov fiadd outsl outsl ret aaa repnz adc (bad) arpl cli (bad) ss adc imul add pop loopne fs jnp sub fs inc bound mov in cmp push popl lods add dec jb lahf inc jbe (bad) xor imul lods add popf pop push movsl test icebp es jae mov pop push jmp add gs fs adc sahf loop imul (bad) sbb pusha mov ss lods loop lock addr16 mov jg adc fcmovnu mov daa aas jae mov xchg popa aaa jo lea jbe adc cmp mov data16 imul mov add ljmp add leave shl xor shrl mov outsb fs add or xchg inc rorl add inc gs rcl push pop xchg xchg push xor outsb int daa lock sbb fiadd stos enter (bad) adc cmpsl aas dec cmp fidivl ss sbb jle imul repz lods cmpsl pop loopne or insb inc mov cmpps insb ret (bad) aam ja je cmp xor jo mov mov cmp or mov jo dec lret stos pop lea push adc jbe mov add test rcr bound loopne ja inc jnp sub sarb outsl pop adc add loope cmp pushf push push ret inc sti xor lahf dec inc inc push outsb xchg or mov mov cs or aaa or sbb fs jne jg cwtl hlt nop cmp xor rorb mov mov scas push jle add fdivrl arpl mov cltd orl inc sub inc es mov fs push addr16 fdivs and cmpl out add scas test fsts dec push dec dec dec cmpsl fimull xchg or pop inc pop xchg data16 xlat lods xchg pop push cmp pop dec dec inc add push movq and lss add test pop or cmp mov and or cmp inc inc adc mov sub pop cmp inc incl arpl jb sahf adc add jecxz xor mov dec fist arpl mov cs bound inc inc inc and movsb and push sbb cmp xchg push pop cmpsb loopne xor push int3 addb (bad) or bound dec inc insl add dec sub pop (bad) push in or add jns shlb sub mov xor and adc popa fwait popf faddl mov rorb mov rorb and das stos inc or outsb ret lea push or pop inc mov inc dec sub pop stos lods sub jg mov test pop pop push inc mov leave and scas jae sbb ja dec pop rcrb out push push sbbl push in pop or in cmp mov popa sti pusha das sub jae mov push or inc mov xor add pop lret ror mov xor pop bound sti push movsb pop add sbb adc sahf cmpsl stc cmp clc add call jns int mov (bad) enter jnp int mov mov repz adc add inc into bswap iret push movsb orl lret leave ror mov (bad) push fisttp addb add decb jne jo jo sahf push and rolb add mov lock sub push or cmp mov incl fcomps rorb jnp cmp and movups in mov pop xor add cmpsl push lcall nop test mov fdivs in in in add jo lret pop mov push pusha pusha shlb pop push (bad) adc cs ljmp mov ja mov (bad) mov mov mov aas mov pop xlat iret leave stos fsts clc mov (bad) (bad) das repnz jg,pt fcomp cmp jp pop shrd mov or rcr (bad) loopne int3 gs outsb mov pop rol mov loopne or jg cmp rcr mov mov sbb ss mov inc outsl mov inc add xchg push jmp or in aas int outsl sub popa cmpsb pop out sbb and fidiv mov xor aaa repnz dec pushl xor mov cltd cli cld dec fucomi mov dec das dec fsubr jne lcall and sbb scas lahf pusha or dec rorb sarb (bad) fnstcw push mov bound outsl iret insb or push pop and xchg xor jb sbb dec pop dec and jne inc testb or shlb negl jb es (bad) or outsb inc push inc dec dec and add outsb arpl jo inc pop pop ds inc fbstp add xor addr16 into push popa data16 sub fimull je dec push mov decl imul jo dec mov inc js and in outsl mull in movb fidivrl and imul clc fs mov inc lahf (bad) sbb (bad) js imul or and out sub push cwtl aad inc sub (bad) ficomp rol insl pop mov xchg fucomi andl inc xor lds fs loope dec cmc xor pusha add orb xor arpl or push iret mov test inc aaa fidivl dec push xor les fistl xchg push pop je,pt lods arpl and cmp cmp mov out sub mov mov dec imul scas test sbbb out pusha cmp subb out shll (bad) xor imull pop sbb aas mov and aaa ror push pop (bad) arpl jbe push and pop jne pop dec cmp jae cmp inc ret push ficompl fiadd pop sbb adc cltd insl into xchg mulb cmc dec movsl add sub mov lahf or mov rorb insb adc inc orb and add aaa sub dec xchg cld insb outsl imul lret inc jg xchg add sbb jns inc jo add cmc popa dec adc idiv jmp outsb cmp insb out cmp lcall push xor sub pusha in dec jo ss push push mov and aaa push mov lock cmp lea mov mov adc dec pusha sbb or sbb push add rorl pop loop stc pop je pop jno ss and add mov mov fwait ss lea dec sub test mov sbb add das mov add add pusha pop adc pop (bad) sti pop inc out and cmp pop mov add (bad) (bad) repz mov cmpl or mov xor add sbb mov mov rcrl lds jns lods pop add outsb aas rorb rorl pop in out adc add imul pop iret and lahf sbb xor bound dec stos sbb add add (bad) jae add fildll jl mov inc push popa aas xchg iret dec cmc ja or popaw cmp push xchg adc xchg sbb insb adc add and inc ss cmp imul add cltd jae cs jp pop cmp mov mov dec mov adc and in add pop pop dec inc sub mov lock loopne das jno mov push adc mov mov xlat jge test xor loopne fadds das and gs fadds pop or outsl mov sbb mov push pop test sbb adc ror jmp in push clc xlat stos mov adc and lock call fs inc dec inc dec cmpl cmpsl mov mov push fadd pushf fs jns bound cmpsl sub bound imul xor cmp popl scas jmp push pop push push cmp and jbe mov dec sbb and (bad) test aad xchg fwait xchg inc inc jnp in xor lds push xor pop (bad) fisttp cmpl das push cmp add stos xchg inc inc and movsl dec cmpsl push and in and or das jne add jne xchg bound arpl dec xchg mov sbb add sub ret lret sub ja push shrb jnp aas lods add cmpsb jne jp mov lcall (bad) pop mov mov scas jnp add mov pop adc jp inc mov scas and and inc push jae add insb cwtl add sbb mov add mov push cmp push xchg popa mov fstpt rcl adc mov cld incl rol fidivl in xor or push lods es out add movsb push pop cwtl dec pusha xchg pop mov ja pop and cli mov in mov jmp adc (bad) lret mov jb add push adc inc inc pop stos test pop add fdivl pop adc push push push cs std ffree in sbb jp popa das xor xor sub mov adc cmp dec push dec inc and sub ja adc push and cmp inc arpl sub lea loopne pop and dec cmc stos cmp push push push das xor xor fldcw and popa dec imul jo cmp call cld mov dec dec dec dec dec dec dec dec xchg clc push dec sbb pop adc or xor cmp sub mov pop cmp cmp add mov pop add push cltd mov mov sub and mov push mov insl mov js popa cmp or addr16 das xchg outsb cmp push loopne and data16 popa pop js push pop sbb push adc clc fistpll inc dec push dec inc inc push pop and jo push mov dec outsl push and mov and add lret pop daa push jne adc int3 mov push inc in aad inc arpl dec dec rcrl sub add pop dec (bad) out (bad) cmp sub xor inc push push dec push and push in popa push dec scas ror mov icebp (bad) notl icebp test stos daa mov mov std aas iret in das loop (bad) shll xor int ret dec push test aam es ficompl cli test cmp mov cmp xchg xor out mov repz xor push jmp fistp xchg pop (bad) dec pop (bad) lods pop in pop das push imul lds pop fwait mov aas (bad) aas inc inc roll pop leave inc aas aas mov xchg push ds insl outsl (bad) jne dec pusha mov inc inc pop pop add fwait inc cmp pop aam nop pop das inc test pusha mov (bad) fcmovu add xor add (bad) jnp or int xor (bad) push xlat scas xchg je and pushl leave add (bad) (bad) aas mov add daa pusha cmpb push outsb fs or sub prefetcht2 jae aaa stos call pop mov arpl aas pop inc sti popl inc pop pop fiaddl push inc push inc jg push add aaa mov daa pop mov jg fldt add or inc (bad) sub pop dec inc inc dec dec bound inc adc imull sbb aad pop dec iret cmp cs cld push dec push inc inc xor cmp dec dec inc push dec inc outsl aas mov aad iret inc inc push inc fwait jno inc xor xchg xchg inc loopne outsb dec jg xor icebp add push pop fdivs and cmp xchg lea test and stos inc pusha xor push ret lcall adc add mov arpl and lods push aas (bad) pusha or mov pop stos mov popl jnp cmp sbb push inc insl aas mov insb add cwtl push fistp xor xchg inc adc add in mov pusha rcl idivl ja scas or mov insl add mov scas jno loope dec xchg es mov mov jo outsl daa cmp lds inc outsl mov aas insl jne push jae mov mov or loopne push aas mov add add push mov sub ds (bad) and fldl sysenter pop insl pop xchg mov pop mov pop or mov clc jne or xchg dec and add add and or ds push add imul popf fsubl or in (bad) sub or fwait mov push adc and leave leave in xor addr16 das push xorps cmp jae insl push and jb cs orl mov xchg sub in in sahf mov in (bad) mov into aas xlat sbb movsb and push or test (bad) test pop cmp pop jg pop test add jg sbb es mov in call in fcom enter iret mov cwtl xchg jns out nop mov sahf out js jo out in sahf fs push dec inc push cmp repz and adc sahf out add mov xchg clc (bad) out add das add in enter jns and (bad) pop scas jl lahf loopne inc jle test shll das mov mov popf pop rcrb mov sbb out ja stc in call adc push (bad) cmpsl in pop fidivrl xor fcomp loopne jb cmpsl repz jle shrb sbb add lea cs nop xchg mov xchg dec xchg xchg xchg adc push je scas or inc adc int3 movsl dec mov push or jns or and hlt movsb cmp repz rclb movsb sbb cmp rep sbb out lcall js out sahf pushf jns jp cld mov out js push mov push (bad) decl xlat mov or out ret ss or sbb xchg std aas inc add scas add lcall push inc jno inc xor or pushl xor xlat or repz sbb cmp sbb cmp repz andb push repz repz push cmp adc push push dec cmp repz dec and cmp repz xor sub repz sbb sbb adc iret repz or add jns cmpsl stc cld cmpsb and and add pushf out lock adcl movsl popa fsub xor adc xor js adc add or ljmp mov call (bad) mov lds xchg lret (bad) jg xor iret repz fnop out lcall adc out sahf out dec pop outsb jle out sahf sahf mov cmp sarl and popa repz xrelease ds out add out sahf ds push (bad) out scas into loop push xor xor jb repz xchg in mov movb add and push aas mov test mov addb loopne daa pop add repnz dec pop xchg and pop and xchg sbb xchg adc and (bad) xor add fisubl add xor dec pop enter andl adc ss or and imul inc jno inc cmpsb inc sub push hlt stos in sahf out sahf mov test dec cmp out and cld stos lock cmp repz mov xchg xchg idivl test cmp sbb ja or push enter mov out mov inc and lahf out sub test sub push pop cmp xrelease push pop ja mov lcall das dec je cli out and sub push je flds push push cmpsl lcall and fs inc jmp lcall out ss inc add cld xor xchg inc add sbbl iret repz mov mov pop enter inc enter pushf or ret mov adc repnz adcb sbb leave sbb xor in int3 into sbb rorl and sahf mov sub inc rcrb and in mov jmp inc jno xlat xchg inc push add inc stc mov adc (bad) pushl cmpsb iret decl js inc outsl (bad) loopne jmp xchg test mov cmp (bad) (bad) decl inc mov popf sti jmp stos push inc mov repnz test (bad) (bad) (bad) call stos clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov (bad) jmp or addl cmpsl xchg cmp xor dec cmpsl in cmp lcall mov cmpsb lock mov popa sar mov (bad) jmp bound stos xchg clc repz mov subb fwait xchg and add (bad) cli add int3 (bad) mov aas jno or mov pop fs dec lea aas (bad) (bad) (bad) inc shrl mov icebp aas rorb and cmpsl out aas inc cmpsb mov insb scas add pushl xchg aas xor aad mov std std into popa test ja stos in das dec pop loope (bad) (bad) decl mov aas xchg les jne int mov addr16 push mov xchg aas (bad) (bad) (bad) jmp (bad) loop mov jp popa push pop sarl jl mov das lea mov (bad) in adc movsl jmp jg sub jge mov inc rcr push arpl (bad) (bad) incl int3 and call cmp jp and cmp mov cmp push mov cmp mov sbb add movb pop mov jne fldt cmp jno shlb (bad) out dec nop pop cmp fisubl (bad) (bad) pushl adc mov sub dec in ss push scas into imul fdivrp (bad) (bad) inc jge call mov xchg cmp push andl dec dec gs std orl xlat lret clc mov ror add cmpsb fmuls add or adc dec or xchg dec es add loopne pop add dec adc (bad) fdivr cmp sti mov cltd pop dec add fwait dec add dec je popf dec add dec bound xor push push adc jbe push and ljmp push add loopne xchg push sub sbb fs adc js add jns add cmp mov jnp jl add jge add in adc add jg jl jno mov xorb sub js jp cmp mov or or (bad) hlt xchg push jno stc out lea cld ja push add add add jb push jbe test shrl push adc fild ss push notb (bad) imul dec mov cltd jo mov pop add pop jo andl sbb push sbb popa (bad) ja push (bad) xor mov icebp dec jecxz inc and inc push and inc pusha popa loope mov push pop clc push aaa and add jg ret add cmp daa and gs and pusha jmp (bad) jl jp adc pop sbbb sub add sub jno lods cs cmpsb pusha cld enter add xor dec or jg mov insl add sub cmp divb or cs mov arpl ja and push inc push imul cmp push sub sarl pushf inc sbb dec jo sub inc push sbb pop xor test test jo xchg or add test dec cmp lea test dec xor gs ss cmp push je dec xor pop sbb lea cltd push xor and xor decl add test xchg mov pop jle loopne adc mov mov mov cmp add sub inc test add subl inc add fs add nop push add add xorl and adc inc push add add add jg or add add dec mov out std mov inc and inc add dec cmp mov dec inc add or push insb jne pop popa inc sub popa data16 es roll jnp rorb and dec insl insl mov pop adc xor jg dec pop push inc push dec push push inc or jle cmp push push inc inc dec cmp fstpt push push dec push inc push pop inc dec imul into push sub pop call sub jl and push inc push inc sarb or push sub and fistp push xor sbb inc dec inc push inc inc inc and and movsl gs jo mov in or (bad) fdivl cmp imul popa lahf mov inc insb arpl insl insb ret xchg and add or xor shrl xchg or push and mov test add xor fnsave jb nop xchg movsl add out xor nopl aas enter iret repz je push data16 mov rolb outsb repnz jo add std int repz clc lock aas mov sbb fdivl mov cld ret das and divl (bad) adc sbb jl insb out dec mov nopl cmp rep das add add nopl xor repz push mov stos mov pop add iret repz incl addb or cmpsb mov cmp xor add add jns insb pusha add imul in add aas jmp sarb pop add pop js adc jg mov xchg (bad) cmp movsl stc xor loopne rclb sbbb outsb and shrb push nop cmpsb cwtl and sbb xor incb pop cmp (bad) xor add push dec push jl fwait lahf (bad) rcrb pop add add int movsb fchs aas lock add fisubl dec clc sar ret cmp cs (bad) iret inc ja repnz cmp insb mov add test push leave dec test jnp sbbl fs rcrb subl jp pushf mov nop jl sti xor xor pop js xchg sbb mov pop and fldenv sub add mov movl pusha adcl adc add and pop movsb incl and jb or (bad) fsubs and mov fldl (bad) cld jb fdivr jnp sbb sbb mov add (bad) mov mov sbb mov in leave jo cmpb addr16 outsb push jg pop or jg js leave or or jg mov sbb dec mov pop lds pop pop pop pop popf jnp in js nop lea jle movd (bad) fisttpl fldl wrmsr or smsw and aaa cwtl or faddl lcall pusha or lock push add (bad) in out fsubrl xchg (bad) daa adc xor clc jbe mov pop mov mov mov mov outsb push leave mov out jnp (bad) jnp xchg (bad) lahf daa out jmp fsubl js aas daa (bad) daa mov adc xchg push les jns xor sub popa xchg mov add js or inc push xchg xchg ja (bad) mov push pop (bad) aaa adc push jns add add ja sub sbb pop scas jnp pop cmp pop add pop pop in push sbb js lret xchg add int mulb vmwrite das push mov mov test pop stos mov sahf mov adc insb push adc inc adc (bad) xchg pop pop add mov pop mov adc inc stos add sub in cmovbe jl mov pop add in clc sbb dec mov js jp icebp notb pusha xchg pop sub inc pop in pop testl mov inc sbb imul addb xchg or minps mov add or fistp or or js jo or xchg lock add (bad) jg fisttpll jbe (bad) mov pop fadds add lcall or andl ret pop aas ret mov insl inc aaa stos add jmp or adc sbb mov imul or (bad) fwait scas mov push pop xchg sub subl ja js pop mov jmp mov or or and (bad) fdivl idiv inc jp jp dec cmpsb mov sbb dec scas xchg add clc (bad) pop arpl inc pop inc pop xor aam jnp or stc cmp ja or xchg xchg inc mov sbb mov or rcr or mov or insl mov loopne or cld decl mov mov pop sahf or sbb xchg add add ret out push nop (bad) enter push nop cmp add mov push loop dec subl xchg jo,pt push pop test or xor or sbb out ror sub push pop pmaxub repnz incl pop cmovns add add daa or add jae mov fs add push jnp or sbb add lfs dec add or sub adc dec or pop lahf out aas or jbe,pn fstl mov subb mov (bad) incl daa (bad) pusha and sbb sahf daa cmpsb es or mov daa push cmp out in pop loopne sbb lock (bad) adc xchg (bad) jb les (bad) iret addb add add mov sbb mov int3 mov cmp add mov sub push shr dec mov outsl ja jo push jnp (bad) into xchg mulb add pop sti dec pop or pop ja mov xor popf hlt mov pop lcall add test and pop push jo sti lea sbb mov addb das movsl fisttpll addb rorb test clc aas mov scas push rclb xor or js popl (bad) out fwait stc push xchg out pusha dec movq nopl dec xor jge sahf dec sahf stos pop add nopl mov adc inc add imul and adc enter nop inc add sub add aas add adc add mov pop or inc xor cltd daa or add lret insb add frstor int3 and scas repnz jo push dec ds mov add outsb pop push out nop cld jns or dec xchg and sub pop dec or jns push jne or or inc jo,pt out outsl pop arpl lods cld mov mov push orb push out pop dec mov ret or dec inc cli fs lcall push jo out push or push dec push bound mov sbb das xchg jl jl je jb or mov jae sarb xchg subb sub nop cmp movlps outsb and sti insl mov add jae fcoms fs mov add inc neg out dec or add or mov in cmp insb jmp xchg pop xchg (bad) ss repz fadd add pop push dec push push inc pop add add js jo add dec (bad) mov addl sbb aam ss addb out mov sbb aaa cs mov or out mov fist add mov add (bad) test add loop add fisubl adc lods sub sub lret dec gs pushf pop pop push bound fidiv (bad) add push push mov xor pop gs dec in jb pop add dec xchg out cmp xchg inc add jbe cltd jecxz pop pop rclb cmpsl fcoml push stc in (bad) push mov push inc jmp aaa or push jno add (bad) pop add (bad) sub xor out outsb (bad) jmp mov dec fs sbb mov sbb xchg add sarb add jg xchg cmpsb jecxz and sar add mov shrb movl jle adc outsb js mov xchg push decl dec sub adc push cld add or cmpsl mov adc out add xchg add or rorl add ss bound sarl dec (bad) stos loopne iret aas add aaa add insb adc xor xchg push or add pop (bad) pushl bound mov pop fisttpll sub cs or and pop cmp cmp and outsb mov inc jo dec aas testb cmc into test add xlat push rolb adc lock pop jb into inc dec iret xor gs dec cmp dec add cmpl adc add aaa fwait mov xor jbe sub dec xchg jne,pt mov xchg dec dec lret jae cmpsl add (bad) jae adc rorl xor mov fmul add ds inc add jae and push pop (bad) jo jnp in or jbe pop and dec cs or pop leave in ljmp mov out repnz mov add in in imul mov dec data16 pop test mov inc sahf (bad) jbe jg cmovne add cltd lcall mov aas inc mov add in dec add (bad) pop test push pop mov pop add popa ljmp mov pop movsl cmpsb das sbb in push pop out jle push push aam das in popa in xlat repnz cs pop and scas testl lret mov add hlt push dec out xchg add outsl inc xlat dec aas inc pop jbe mov inc loope xor or xlat in mov pop repz int3 xchg add xlat push insb enter inc push pop push repnz push dec mov in imul cmp mov mov inc neg cmpsl mov xchg scas movsb call add and sarb enter sarl addr16 push sub cs int3 push and incb fisttp add push cmp add sub cmpsb idiv dec jo inc repnz cmp roll xchg add inc sti add inc (bad) stos add jne add cmp jmp in and add xchg cltd (bad) pop loope xor iret xchg stos iret add mov negl pop (bad) test int or pop into and inc push push sbb repnz bound add add clc fisttp pushw push (bad) loopne or insl mov mov mov xor push lods sub dec sahf lahf or ja stc add pop mov jns xchg add add pop sbb sub mov add (bad) pop adc pop add fiaddl bnd data16 bound cmp adc jno daa fiadd pop and jle daa lahf push inc repz add adc pop test fwait inc (bad) dec addr16 jnp inc mov insl packsswb push roll das or (bad) mov jg repz push add mov sub (bad) push orb push sbb lcall mov or jae push sub xchg push es lock outsl call mov or sahf aaa enter movl and (bad) push add xchg sbb les add mov add cli pop dec xchg jnp mov insb push inc or mov push jb lahf outsl lock xchg or dec mov pop dec sub mov cmp cmp xchg inc aas sbb xchg pop xchg sub (bad) cs test dec (bad) or or cli hlt mov (bad) fisttpl aad xor mov pop or mov or popa mov adc pop jb sub lock imul test inc cmp pop inc scas insl cmp les js dec push xchg fs pop mov inc lock jg cltd dec (bad) xor ljmp and icebp cmpsl cmp mov dec repz xor or dec aaa or test pop data16 sub sub loopne pop push loopne aas dec sub push ret fsubrs ficom nop xchg iret test add call mov xchg pop or push sbb add or out clc mov push bound sti jl jle das add jbe fs dec add lds sbb outsb push aad insb xor push test push in ror mov push sahf xchg mov xchg in dec in roll out mov pop sahf dec gs fildl or push outsb pop pop sbb inc imul mov sbb dec pop jge xor cmp push sub xor movsb xor ficompl jp dec jp cmpsl xor jp pop daa pop (bad) inc scas cs mov pop das push (bad) aas (bad) cli pusha out pop aaa ja mov nop xchg push add jp pop and ftst dec aas repnz or push (bad) pop outsb jecxz das adc push (bad) push push call cwtl push stos or fs jbe adc clc jbe push aaa mov adc push xor incl (bad) fwait in push (bad) pop jp or pop dec fildl sbb shlb pop xchg (bad) adc push push bound std nop mov add xchg xor mov and fimul movsl arpl xor (bad) insl mov xchg (bad) fisubl pop pop cmp cmp out cmpsb subb (bad) repz mov addr16 ja pop shll inc je (bad) mov and inc sbb and pop insl or imul test fxtract xchg xchg imul pop cltd repnz prefetchw pop mov sub mov jnp or mov xchg add scas stos xor and or das push insb jle adc gs addr16 add mulb in push fstpt push jae lea pop das fnstenv mov outsb cwtl mov cmp push xor outsl addr16 xchg mov and out lea pop mov es sub inc and js jbe sbb jp fsubp outsb xchg pop pop (bad) xor mov mov fwait mov or push push (bad) xchg push fwait jmp pop pop cltd push pushf insl es or ljmp or jg neg cmp push pop jne pop mov or arpl movsb scas inc imul lahf push xchg or jns daa mov sbb shlb mov dec or mov scas nop mov das xchg arpl or add add pop pop inc mov cmp and dec push push ja cmpsl push jb scas add add sub push pop addr16 test addr16 pop das outsl lret stos push add das and xor xor outsb out cs sti jbe mov fucomi (bad) push xor (bad) fnstsw add pop and inc pinsrw push jb push push pop xor mov lret lock cmp aas ror out adc sbb and cli pop cmp xor jl mov cmp insb pusha or pop insb js pop add das xor bound pop (bad) seto out xchg stos dec fisttpll add cmp lea adc mov out jp out inc mov inc scas and fiadd mov ss or push repnz cmp adc and fs ds sbb adc xor cmp mull mov or xchg and pop (bad) jbe jmp add jge mov xchg inc or xor sbbl ljmp mov adc or push ret fcmovb enter adc sub mov (bad) add je dec cmp mov push nop xchg mov adcb (bad) fadd xchg stos and cmp or (bad) push inc sub sub out fcomi pop inc jns push outsl fs push movsb mov test push pop aaa dec jne mov aam das push add adc xchg dec xchg sub into xor push cmp int pop mov xor inc inc push dec cmp lret push insb jns mov scas jb insl jo adc jo outsb rcrl pop adc (bad) popa insb sbb push push jns inc mov mov pop and jno mov inc outsl jbe fimull inc fs and mov push adc sbb or inc icebp cmpl push insb popa addr16 fidivrl ret loopne andl lahf pop jne mov push gs out push add inc jl ror mov mov inc into sub imul je insl dec popa inc daa inc fs jmp pop mov addr16 add insb gs dec aad (bad) outsw push outsb mov pop dec adc jne adc sub adc roll imul push arpl xor xchg movsl test xor dec push cmpl popa jo mov js cmp sbb inc int3 inc rcrl pop les add jbe sub pusha mov out jge mov adc xor aam inc mov mov lock dec fstpl dec outsl int3 nop mov jnp add sbb leave fwait gs jo inc popa sbb movsl sbb ss fstps push movsb jmp dec lock js aas xchg mov push and adc loopne mov xor insb jp mov inc shll push insl inc mov cmp inc push loopne jbe sub arpl mov sub cs insb push pop add in je jg fistpl ss xchg sbb test and popfw push mov or ss aad insl inc mov sub insb jo mov jno aaa jmp lods pop lret insl cmp cmp or shll mov ja push (bad) fs addr16 fcom mov inc jbe,pn or mov mov les mov sub fmuls dec mov out bound sti inc cmp lea jb inc mov dec pop pop jbe pop fwait loopne push cmp push xchg mov jne arpl inc sarl dec mov mov dec sbb ror loopne jo sti je ja scas add mov jae arpl adc (bad) pop pusha cwtl mov fs and rcrb xchg xlat inc enter xor mov push ret das and mov or insl add imul sbb popa (bad) jmp notl lahf bound sbb out jge adc dec cmc sbb (bad) ss adc inc sbb inc mov movsb ja negl or pop mov (bad) jbe in jp pop push xlat inc (bad) fidiv std aad inc fs add insl adcb aad js or jns sbb inc fsubs insl pop aas inc mov xor inc cmp pop popf pop bndldx mov lcall repz adc ret push outsl fs push pop mov lahf mov add push sub jns sub popa in pop in mov scas push dec add xchg bound pop cltd add lods push adc sbb (bad) jb lock imul insb pop lcall adc inc notl roll pop rclb mov push push pop fs cmp loopne pop insb scas (bad) je sbb and fdivrl add inc outsb adc push dec jb cmp pop and mov fcompl inc imul leave movsb and xor cmc mulb insb aad inc cmpsb outsb mov pop ficom or pop mov jns xchg xchg xchg and fsub outsl popa dec xchg loopne mov sbb xor pop mov push dec repz outsl out scas pop leave inc outsl js bound mov test sbb arpl push cmp (bad) xlat sbb in xor bound lods add sahf jbe inc mov dec push push dec inc dec lock cmp in jae insb push inc fild inc sub es add fmull adc mov and dec adc nop jae or ret and gs inc adc test cs mov sbb data16 push and dec push (bad) jmp cmc sbb rcrl adc xchg arpl mov pop test adc inc inc lret rcl xchg and push lds sbb adc sbb push cmova scas out dec add jb (bad) cmpsl dec fabs imul pop aad outsb dec mov lret lods flds int3 ret mov cmpsl xor outsb popa stos xor jae mov test test sub push jo push or call push dec (bad) jo lods dec fmul mov daa push inc add pop xor dec arpl into js dec inc mov cmpsb push sbb jb adc mov cs cltd inc andl sbb lock call push ret movsb stos push dec push fxch xchg adc dec inc lret xchg inc stos or pop mov aad jbe sbb mov lods stos movsl mov inc jae adcl mov popa adcb das or les cltd test aad push and push loopne popf ret (bad) ja inc jae sbb ss sub mov arpl mov cltd push push cmc mov cli (bad) mov rclb inc and adc xchg ds xor (bad) popa xchg sbb fcompl outsl insl gs push nop lea adc inc loopne sbb pop (bad) push stos cmpl mov sbb mov pop sub cmpsl adc xor push jae push cwtl add sub xchg inc xchg mov rorl arpl sarl bound xor addr16 fnstenv jne mov sbb add and push pop sbb xor lock sbb sub rcrl fisttpll inc pop test or popf cmp mov pop (bad) pop add cmp pop dec or imul jae loope mov push loop adc insl sub ja test ret lcall (bad) jne fist inc lods inc das les adc (bad) push cmc ficoml pop out movsl loopne sub rclb and or inc loopne dec mov xchg mov in push jp push cmpsl push mov add pop cmp bound cmc jne clc lret sub sbb add jno adc xor scas imul jbe mov sbb loope add and mov lods dec xchg or mov mov or enter jg test add loope,pt add bound fs mov test sbb in add inc inc lcall add movl or test bound dec and out jae push inc jo fs shrb fisubrl rorb mov cmp nop je mov xchg das bound or dec inc (bad) lret lret ja xor insb mov adc sbb mov cwtl flds adc sbb jg movsb cmpsb inc push cmp jnp push cmp imul test imul or xchg test xor (bad) mov sub out push adc jo mov inc mov xchg lods pushf inc push mov adc dec repnz add adc sub mov scas fist inc inc sub xor dec sbb scas sub xor jg lret aam jo or cmp and aaa sub fistpll gs inc pop ffree xlat and bound push and fdivl jno jp (bad) ficom das sbb xor fsts movsb or mov pop out mov out and and pop lea mov daa mov sbb mov pop mov ret insl imul push divb xchg dec pop daa jae int3 jo sub xchg sub mov bnd out popf sbb ja cs sbb push sub inc popa inc sbb lods sbb aaa adc push pop gs subl cmp pop jge mov movsl insl andl ret lret aaa call or mov cltd mov in repnz inc jb clc jmp add xor adc adc xor (bad) xor add decl arpl add add jne or push inc cmc faddp movb sarb data16 dec test outsl movhps and lcall outsl add and sub nop push add add dec mov and add je push jae fwait loopne mov add jne jb,pn ljmp testl mov js cmp or cmovg jo shrb jae arpl out (bad) fidivl lahf push and mov test incl add add dec add call or pop inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp add add add add or mov add addb add or add fadds add mov addb add add call add add or orb add or orb add cwtl or adcb add cmp sbbb add js add add add add add add add add add nop add addb add mov add add add addb add add add add add add add add add test add in pushf push add add add add add add add add add add rolb add clc pushf push add add add add add add add add add add clc add add popf push add add in add add add add add add add cmp add pusha add addb add mov add mov add add add add add add add add add push add add add add in add add add add add add add js add cwtl lahf push add add in add add add add add add add mov mov add in add add add add add add add enter add add in add add add add push add add add add addb xorb add add add add xorb clc add xorb add add xorb add add jo add cwtl add cmpb add add add add call jns add add adcb add cmp adcb add add add add add add add add add add jo add mov push add add in add add add add add add add cwtl add add movsb push add add add add add add add add add rolb add push add add in add add add add add add add call cmpsl push add add in add add add add add add add adc add lock add add in add add add add add add add cmp add dec stos push add add in add add add add add add add pusha add add add add add add add add add add add mov add clc lods push add add in add add add add add add add mov add push scas push add add in add add add add add add add fadds add test push add add in add add add add add add add add add mov add add add add add add add add add sub add mov add add add add add add add add push add add add in add add add add add add add js add or add in add add add add or add add call add add add add cmp add pusha add add mov add mov add fadds add add add sub add push push add add add add add add add add add add push add add add add add add add add add add sub push add add add add add add add add add add push add (bad) mov add in add add add add add add add js add movsb movups sub add add add add add add add add mov push adc test add in add add add add add add add enter jl adc push add add add add add add add lock adc test add in add add add add add add add sbb add xchg mov add in add add add add add add add inc push add and add add add add add add add add push mov add add in add add add add add jg add cwtl push add rolb addb add add add add add add add add add mov add xchg mov add add in add add add add add add add fadds add mov add add add add add add or xchg add add add jo add cwtl pop add rolb cmpb add pop add adc add cmp add pusha or addb add mov add mov add add add add add add add add add pusha pop add and ltr add add add add add add add mov add mov add add add add add add add add add mov add cmp add in add add add add add add add fadds add xor verw add add add add add add add add add add add and add in add add add add add add add sub add rclb add in add add add add add add add push or add add in add add add add add add add js add push cltd (bad) mov add in add add add add add add add mov lcall in add add add add add add add enter call add add add add add add or add add inc or addb add push sldt nop or adcb add mov sldt loopne add or add xor add pop or sbbb add orb sbbb add sldt rorb add add add add add add add add add pop or add add add in add add add add add add add orb add pushf verw add in add add add add add add add test add lock (bad) js add in add add add add add add add rorb add push add add add add add add add add add clc or add verw add add add add add add add add add and add pop mov add in add add add add add add add dec or add add add add add add add add add add jo add loopne verr add add add add add add add add cwtl or add add add add add add add add add add add rorb add lldt add in add add add add add add add call movsl verr add in add add add add add or add or orb add dec or addb add jo add add add add add add add add add cmp add push movsl lldt add in add add add add add add add pusha or add lldt add in add add add add add add add mov add jl verr add add add add add add add rorb add add call add add or addb add add add add add add add add add fmuls add dec mov add add in add add add add add add add add add cmpsb lldt add in add add add add add add add sub add lldt add in add add add add add add add push or addb add add add add add add add add add push mov add add in add add add add add add add nop or addb add add add add add add add add add test add in mov add in add add add or push add pop add add inc add add add inc add inc add push add add dec add dec add add pop mov dec inc or add or add add add add or add add data16 and dec inc inc push js in popf dec (bad) and jne pushl je mov add jp inc jnp (bad) cmp loopne jno leave dec adc pop fmul clc and cmp add fnstcw and push enter push jbe (bad) in sub lods (bad) dec repz outsl push in and cmp fdivl inc mov repz jne xlat stc lahf inc adc ret xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor ret std mov add fsts pop cmp rol (bad) jmp add cs push arpl loopne scas mov cmp mov icebp test aaa movsb fist sbbl xchg and adc (bad) jae add cmp mov in jo push lock js out fiadd fmull into fidivr xchg shll or stc and test lock ja imul fnstsw out mov das adc clc call outsb or push mov scas lahf hlt pop cmp and decb mov add fadd and std and (bad) cmpsb (bad) adc cmp scas jle repz pop or adc (bad) fimull or sti jns jge xchg inc and jge test sub add add ret int lahf ror lahf test ret or rcrb andl mov aaa fimul and mov dec add mov xchg add push and das lock leave dec mov push push adc mov dec jnp je xor xor add jecxz ret fnstcw pushf jmp sbb popa sub rcll add rcrb ret loope dec mov js (bad) xchg stc addr16 inc or lahf lcall mov les or add push adc add out jo hlt dec js clc xor mov das pop or cmp aam loope pop sbb cltd ja and outsb outsb inc xor mov add dec adc push add clc or mov sti mov arpl pusha nop push push loopne subl in lods (bad) rcl add xlat aaa js mov call rcrb jo (bad) lock cmpb (bad) pop ret aas xchg cmp icebp pop xor repnz push or inc nop cmp push cmp daa test xchg xchg or adc stc dec test or mov stc push sbb ffree lods mov pop aad adcb xchg pushl test mov pop inc das cmp and inc add push pusha and lcall or xor out pop cmp adc push xchg pop sub icebp outsl inc pop rorb into test daa add pop cmp movsb xor mov arpl sub fadds dec add jmp pusha push pop clc sbb jle jae push les inc nop popf adc jge test xlat inc cmpsb add and cwtl leave inc add sbb add je add iret cmp sbb pushf loop cmp cmp adc mov or jae iret lds mov add and sbbb jne mov loope pop adc or adc xor ret imul jne xor hlt add xchg inc sar inc inc repnz sub dec mov int imull movsb inc cmc jo cmp adc add lock sbb testb ror stc and pop mov je or jmp push add jge sub jl std jae adc movsb cmp push add add or jns clc cmpsl mov fdivrl popa rclb sub pushl loopne es mov mov sti add or dec jb xor push in mov or pop loope clc adc ja mov or les scas adc or outsl push push dec mov inc add sub loopne fnstcw (bad) movsb add enter sbb cmpb in es mov mov bound jbe jmp pop xchg pop stos movsb ficompl and leave ds mov add add int3 xorl call push or sub test add jle xor mov sub xor (bad) cwtl add add jnp int3 lahf loopne in iret jecxz in iret or pusha and cmp sarb add mov ror cmpsl adc xchg or add fs push mov inc enter sti add daa ja jb sub dec das add push xor mov sub (bad) mov inc sub xchg xlat sub bound adc das sbb sbb sbb (bad) loope lods sahf test in sbb pop sbb scas or xchg inc xchg or leave (bad) out push add ret pusha in mov pop aam dec pop ret ror fstp stos jb adc dec inc or bnd das push add jle mov push mov add push cmp jnp int3 pop jecxz in aas rorb jno scas mov jmp and inc and pop aas mov sub flds data16 add pop cmp ret leave popf xlat jp or (bad) cmp xchg jne les gs cmp push sbbb iret sbb add pop sahf jecxz fidivl dec into (bad) bound subb scas mov and repz inc shrl mov dec loopne or icebp jmp outsl rolb or arpl inc add add and repnz lods dec jle sbb xor dec add xor jmp pop (bad) cmc test jo cmpl test mov loope loope cmp bts enter or dec pop fwait mov pop bound push ret pusha testb (bad) ja jl cmp add rcrb mov inc and rcll sub test add xchg stc arpl repnz cmp loope push xor (bad) (bad) push push in push and or adc stos or sbb movsl and add loopne or clc hlt jne add add adc add mov jno mov add add jno notb jo notb enter pop mov repnz std push push add mov test insb loope xor pop sahf jecxz icebp sbb jne les insb and sbb cmc add in movsb gs in sub xor sub fisttpl mov lock mov (bad) xchg cld jl jge inc and icebp fcomps into jnp repz repz fstpt mov mov icebp pop rol jo jecxz jmp pop and jne adc insl mov mov stos or push adc subb sti decb pop jle,pn int3 ds cmc dec mov fisubr adc enter add jmp sub pop fsubl pop int sbb adc subb add xor jl stos lret xor add sbb push add cwtl divb cwtl jge sti (bad) cmp dec add cld adc lret inc pop loopne xlat fdivrs adc ret adc mov or mov xor fnsave roll fmull pop jne incl out scas (bad) out pop inc ss sub xorl and push fidivr inc movsl pop shrl or subl aaa xor adc (bad) pop dec xchg icebp dec mov icebp popa push test add fs adc pop add dec sbb (bad) mov push add outsb adc mov xlat ret pusha sbb repnz aas sbb adc pop sbb outsl sub mov push and cli leave hlt imul lock or xchg add xchg sbb adc subl mov mov clc mov jl add pop add add jp jbe lods or call daa push add mov sbb sub or pusha decb daa cmp add pusha lods insw outsb outsb jle mulb mov mov arpl inc (bad) jae imul lea adc xor fbld add jp clc pop lods or stc and mov adc dec in (bad) jge xlat mov mov fs std arpl sti popf jl or imulb into push mov cmpsb or movsl cmc popf mov dec add in (bad) mov cmc outsb push or inc mov sub mov mov jp add jb inc pop repnz sub inc jmp sbb aas xchg push cmc push mov add test sti dec inc jecxz mov push mov inc mov inc insl int add add xchg insb out scas lret jnp adc ljmp inc call sub or dec sbb sub or dec xor dec adc push push ss pop ret add push lret jae mov dec repnz call adc nop and js pop clc dec pusha lock adc mov sbb push add cmp lahf xor mov push add hlt inc insl lds mov pop xor adc jg in pop mov cmpsb sbb hlt push cmpb jge xchg cli adc add sbb add jnp mov rcr push add xor nop pop push insl sub out (bad) icebp popf addl mov out pop notb inc and cmpsb jle dec imul rcl push cwtl add push insl ja test out mov mov mov cmp (bad) (bad) cwtl add ror mov sti lret loope faddl leave mov xchg roll lret sbb pop outsl dec add add ror sti inc mov inc aad xchg adc jp sub pop or adc jmp jecxz iret ja mov jnp fsubrs or rolb mov adc adc scas jne sbb sbb dec push adc mov repnz and inc xor jae mov pop stc jp push adc movsb add test in mov push pop sbb inc idiv ret jecxz cmpsl xor dec sbb mov jmp sbb mov dec aam lds inc jle pop aaa out jg sbb mov push adc or test add jb dec or pop dec sub scas push pop adc dec repz mov cld mov test add xchg sti daa xchg pop sub jmp add mov out xor jmp add jecxz lds fs ret dec mov sti (bad) lret gs mov or (bad) xchg push sarb shrb lret jo mov xlat ljmp adc sbb cmp jbe inc and icebp cmpsl and add jnp add repnz repnz in lock adc clc js in cltd pop movsb aas sbb add repnz jle in test adc dec enter sbb into dec add add lds jns mov ror loope adc pusha cmp test mov lock dec add repz cmp mov insl push xor fdivl inc lcall sub (bad) addr16 inc arpl outsl call mov mov mov xchg ret push or xchg or aam push (bad) push vaddps jmp sub add jg or xchg into pop sub sbb push (bad) repnz dec push mov and mov orb notl test add nop test pop mov inc xor inc add mov repz test inc add (bad) ss and mov inc xchg jnp inc arpl (bad) dec add ss jns mov call data16 mov daa add lods mov incb insl adc popf test stos out mov mov test jno and in daa add roll imul jle inc cmp xchg fimull stos mov nop push imul leave std movsl mov dec popf loop or mov stc (bad) hlt cld dec add sbb imul adc pop mov dec fildl inc loop cmp push jle sub xchg mov mov jmp add pop cmp rol sti jmp pop pop xchg out xchg aaa sbb push push int3 scas cmp movsl add les jge std mov inc lret mov add cmpsb mov call jp fcompl xor gs inc xor test inc scas std cmp xor mov pop push stc push sub cli mov inc cmp idivb roll stos add cmp jbe mov imul lods push sub dec jmp cld sbb jbe movsl add test inc add into mov push push xorb or popa (bad) movsl (bad) push test imul aaa adc andb pushl lret inc cmp mov push movsb add mov push push add jb jb gs and out xchg xor add xorb mov dec add xor xor loopne ret push fidivr add sbb pop pop mov mov popa pop and movl inc add xlat std ret (bad) adc mov movsl mov push imul or pop ficomp out mov pop das ljmp aad inc test push mov ljmp push in cltd fidivr jg mov mov add cmpsb add xor jae xchg cmp add inc in cmp fs (bad) aaa je je daa or push mov mov popa mov or in cmp xor adc sbb lea stc xor add js mov xchg in addb jb imul push inc sbb mov add cmp arpl add and mov ret push or jmp or adc mov dec xchg popa aam jno test (bad) roll fbld in push daa leave fidivrl std jb add fisubrl loop adc les jns fsubs repz mov add dec add iret dec add add pop popa ss mov push js lea in push in stos sbb les imul xor mov test in mov push inc cmp jp cmpsb out cmp xor adc sbb mov sub pop int divb pop mov ljmp les jge ljmp mov test push sub (bad) hlt pop fdivrl lds shlb and dec int scas add sbb xor enter rol sbb jae pop out cs fldcw or int3 test lods cmpsb jae jo insb and ret test imul jno push push or mov add mov int3 (bad) sbb vandps adc test int3 inc add pushf cld push pop repz pop nop cmp ficom jl inc jmp loop push mov cwtl test test jp scas and (bad) (bad) jp fisubrl (bad) mov addl out add sbb outsl scas dec mov ror lcall sbb lods sbb add sti mov mov (bad) daa mov sub mov out ljmp out pop hlt mov xchg lea push pop loopne gs (bad) shr aas jle ja mov loop nop dec dec out scas cmp mulb inc xchg push insb xchg repz xorl sub imul mov lahf aam push into insl insl adc pushf push push or ja lods test mov fwait hlt lods leave arpl jle jecxz adc sub sbb imul jle sub mov leave sub and pop mov leave push das add div mov mov sub mov xchg xchg or mov pop aam dec and lret mov out add and sbb scas fldl movsl mov push movsb add mov lret shrb add incb or xchg out lret sti sub aad ja popa negb sbb lock shl jmp cmp add add add icebp (bad) cli lods call jne cmp cmp hlt push mov inc mov js sarb push mov add rcrb sbb xchg fneni(8087 lea test int3 inc dec insl jmp fcmovu mov push ror dec mov add sub sarl imul jecxz add inc inc sti stc add add lock cld cmpl add sub repz mov mov dec roll inc outsl imul push add pop call add cmp jmp vcmpps cmpsb ds hlt adc (bad) push or sahf roll loop (bad) mov fidivr xchg push or roll xor xchg jnp popf or mov and jno shufps jecxz mov push sub enter pusha movsb ss neg out and fimul movsl dec mov pop add (bad) rcrl add inc jg (bad) (bad) jp fdiv jns aas cmc mov add jge test pop outsl sbb push ret dec add mov mov dec push add push insl call mov inc dec jl dec fcomps or pusha jle mov stc inc sbb arpl sbb mov inc dec lret ret leave xchg sbb ret inc push add mov push test rcll add fistpll push jmp dec (bad) ljmp dec imull pop push pop roll adc sub lds or out or in cmpl xor rcll jns lods (bad) iret sub out iret (bad) roll les cmp dec dec mov add popf sub or stos repnz xchg popa mov leave push fmull sub repz pop or inc pop push jo mov add adc lret into sti xchg jmp sbb lret rsm jmp lds and (bad) bound add into icebp inc hlt (bad) sub add mov lods out adc sub js movb and out lahf in mov mov and add loop add add bound rcr aaa in mov aam das sbb fdivl stos popa ret stc xchg inc out aas sbb inc mov ja and test outsl lods insl fwait ss mov inc icebp pop sahf xor inc adc sbb cltd adc jge int3 imul test fs lea fsts inc fnstsw pop jl jo mov add adc jge dec fwait mov (bad) lret adc outsl stos mov cmpb sub or sti or (bad) aam adc rcll xchg xor sbb repz jl mov xchg fucomp xor ret psubq add fstpt mov jmp dec xchg cltd inc mov push and mov int3 das jbe xchg dec xor add out sub stos test push outsb mov xor hlt jle das mov ret mov xor pop or and lret arpl clc (bad) pop xchg neg lcall rcl push add std mov (bad) lods inc xor rcr xadd adc inc es mov in cwtl cmp jp into fwait push jae out scas sub ficom push inc push mov mov cwtl mov lcall aaa xchg (bad) mov xor divb enter test lods inc popa pop fsubrl pop rcrl jmp fnstenv mov xor jmp pop lds pop lock test into push pop pop push push sbb sub and nop shll adc (bad) int push xchg in xor imul jp dec push add mov mov cmp mov pop or jo fstl push dec dec popa aaa cld xchg mov add std cmp aas mov mov push divl andl xchg inc lock loope push jo lock jge push ret lcall fstp mov jno loopne xchg sti dec xchg std or cld leave das fsts pop mov jnp adc sbb sti leave test fsubrl out lahf xor aad idiv pop inc lock sahf incl out xor ret int3 mov leave test in dec out out mov jo (bad) paddd jle mov or xchg daa jg mov out xchg cwtl inc sbb repnz cltd test je pop jnp (bad) ficomp sti daa sbb jns cmpsb and mov std (bad) out lahf addl xor (bad) mov loopnew lmsw (bad) mov fiaddl in jl daa hlt sub lcall push mov inc mov ds jo xor in adc mov mov xchg cmc pop jae testl mov sub int stos (bad) cwtl mov enter jecxz lods mov out lcall cmp in or dec cmp stos sbb mov push (bad) leave jl fildll stc jl lods mov ror inc dec and das pop not js inc ret in inc int3 sbb movsb outsl out jns fimull add sub jne (bad) notl ret jmp imul jge xor stos aaa inc popf adc pop add push dec and pop mov int3 popl sbb cld (bad) pusha fsub adc shr sub add mov out pop adc (bad) sbb or (bad) out dec pop adc sbb and aad mov mov sbb add sub ds (bad) cli push and popf in mov mov push mov cmp je pop aad adc repz dec ds subl dec push sahf fcomi push movb xchg (bad) repnz mov push out add add aad clc daa mov mov add call aaa mov xchg add xchg scas mov not or mov adc orb xchg dec cltd push adc les popa adc mov jo das sbb add xchg cs push pop ss add inc mov xchg mov mov jmp cmp lahf cmpsb dec xchg imul (bad) cld lds repnz lcall sub sbb fstp sar sub or std dec cmp fs nop push clc fistpl out bnd loope lahf in rcll or jno subb testl dec add rorb cwtl lods loope dec pop add or mov out xor aas inc inc add cmp cmp jns xchg shll dec pop add stos mov mov rcll or mov or adc push add sub jge aas fwait pop mov sti inc mov (bad) (bad) mov shl jno cld cmp inc add cmp xor icebp stos jle loop xchg cmc sbbl pop and test dec mov out pop aas cld pop lods repnz sbb imulb inc cmpsb sub and dec outsl int jg int3 or add cmpsl out add out mov loopne orb roll mov movsl add fidivr stos pmulhuw rorl mov aad (bad) mov int jns aas mov cld jmp scas add sbb scas jg xchg or sub add cmc mov cwtl push sub dec out out cmp std in fimull imul add jmp outsl scas pop pop in push lahf sub mov xchg bound hlt fwait aas add sbb call cs (bad) divb pop add add int add jns (bad) mov ret mov mov call add add lods testl push lods xchg fidivr sti sbb in add fsubr mov fucomp mov add jns cmpsb jb (bad) fdivrs fcompl push pop loopne cmc sub std popa cmpsl add add popf out mov push push mov add cmpb xorl loopne imul fstpl pop (bad) sub mov jbe add (bad) ja sti add ljmp cmp jns add ja (bad) jnp (bad) add (bad) pop or add and js ja xlat sti dec notl js or mov fistpll ja fbld jne sbb dec or ret popf mov pushf aaa jns das pusha (bad) cwtl and sub add std cld mov dec inc inc push loopne fidivr jp rcll iret xor iret fimul add mov (bad) add inc xchg mov add add out (bad) iret fstp out jg call std lds (bad) out mov pop orb testl mov std cmpxchg sub mov add fstpl mov or out mov adc arpl xor mov jg ds fidivrl pusha icebp pop (bad) decl lea inc loopne (bad) lock std push push pop and repz sub xor inc lds rcr push hlt stc add cmp push push xor lcall jmp sub add cmpsl jle outsl scas pop lret push adc add jnp mov mov xchg testl mov test sub add mov not loop add (bad) inc sbb fist arpl add jno mov mov fist cli dec (bad) out mov (bad) lret lock stos or add mov stos or pop psrld dec inc (bad) jo lret stos jg aaa fistpl add stos or mov imul js lds pop mov add orb mov loopne loopne mov mov cs cmc out sub fistp adc mov mov out ficom add sbb cmp mov push pop pusha icebp jge (bad) scas jle mov (bad) xchg inc and lret sar out adc add popa in add loope ret sub xchg inc inc fmul pop pop sarb out aas shlb lcall rolb or jp inc cwtl add mov stc lods (bad) mov ds mov fistpl outsb and adc rorl lock (bad) addr16 xor xor xor xor xor xor xor xor xor xor xor xor stc jg jg sbb add cli add add dec inc dec inc scas inc pusha (bad) or push add add add add addb add add add add push mov call mov dec mov (bad) incl add sbb add adc add or add add add add loope out mov (bad) decl add add add add add add or add add mov jmp loope decl loope decl add or add add add add (bad) loop lahf mov (bad) decl loope decl loop incl add add add add jecxz iret mov (bad) decl loope decl loope call add add jecxz out nop jecxz decl loop decl (bad) decl loop incl add add in call jecxz call loop decl loop decl (bad) incl add add in call (bad) call jecxz decl loop decl (bad) call add add in call in call jecxz call loop decl loop call jmp jmp jmp gs in jmp out ljmp out ljmp lock icebp ljmp repnz repz hlt ljmp cmc pushl idiv jae idiv jae clc pushl stc pushl cli (bad) js cli (bad) jns cli (bad) jp cld (bad) jl cld (bad) jge cld (bad) jg std incl fdivr roll add adc add pop cwtl out call in call (bad) call jecxz decl loop decl in jmp jmp jmp jmp gs in jmp out ljmp out ljmp lock icebp ljmp repnz repz hlt ljmp cmc pushl idiv jae idiv jae clc pushl stc pushl cli (bad) js cli (bad) jns cli (bad) jp cld (bad) jl cld (bad) jge cld (bad) jg std incl loope incl add adc add adc add or add add cltd out lcall in call in call jecxz call loop decl in jmp jmp jmp jmp gs in jmp out ljmp out ljmp lock icebp ljmp repnz repz hlt ljmp cmc pushl idiv jae idiv jae clc pushl stc pushl cli (bad) js cli (bad) jns cli (bad) jp cld (bad) jl cld (bad) jge cld (bad) jg std incl loope incl add or add or add add add add lcall call in call (bad) call jecxz decl jecxz call (bad) arpl ljmp leave in jmp out ljmp out ljmp lock icebp ljmp repnz repz hlt ljmp cmc pushl idiv jb idiv jae clc pushl stc pushl cli (bad) js cli (bad) jns cli (bad) jp cld (bad) jl cld (bad) jge cld (bad) jg std incl loope incl add add add add add add out lcall in call in call jecxz call jecxz lcall (bad) arpl jmp jmp in jmp out ljmp out ljmp lock icebp ljmp repnz repz hlt ljmp cmc pushl idiv jb idiv jae clc pushl stc pushl cli (bad) js cli (bad) jns cli (bad) jp cld (bad) jl cld (bad) jge cld (bad) jg std incl loope incl add add out lcall in call in call jecxz call jecxz lcall (bad) arpl ljmp leave in jmp out ljmp out ljmp lock icebp ljmp ljmp repz hlt ljmp cmc pushl idiv jb idiv jae clc pushl stc pushl cli (bad) js cli (bad) jns cli (bad) jp cld (bad) jl cld (bad) jge cld (bad) jg std incl loope incl add add out lcall in call in call (bad) call jecxz lcall (bad) icebp jmp ljmp leave in jmp out ljmp out ljmp lock icebp ljmp repnz repz hlt ljmp cmc pushl idiv jae idiv je clc pushl stc pushl cli (bad) js cli (bad) jns cli (bad) jnp cld (bad) jl cld (bad) jge cld (bad) jg std incl loope incl add add (bad) lcall out call in call in call jecxz call loop jmp ljmp leave in jmp out ljmp out ljmp lock icebp ljmp ljmp repz hlt ljmp cmc pushl idiv jae idiv je clc pushl stc pushl cli (bad) js cli (bad) jns cli (bad) jnp cld (bad) jl cld (bad) jle cld (bad) jg std incl loope incl add add out lcall out lcall in call in call jecxz call (bad) jmp jmp in jmp in jmp out ljmp lock lock icebp ljmp ljmp repz hlt ljmp cmc pushl idiv jae idiv je clc pushl stc pushl cli (bad) js cli (bad) jp cli (bad) jnp cld (bad) jl cld (bad) jle cld (bad) jg std incl loope incl add add out lcall out lcall in call in call jecxz call (bad) jmp jmp in jmp in jmp out ljmp lock lock icebp ljmp ljmp repz hlt pushl cmc pushl idiv jae idiv je clc pushl stc pushl cli (bad) js cli (bad) jp cli (bad) jnp cld (bad) jl cld (bad) jle std (bad) jg std incl loope incl add add out lcall (bad) lcall in call in call (bad) call out jmp jmp in jmp out jmp out ljmp lock lock icebp ljmp ljmp repz cmc pushl cmc pushl idiv jae idiv je clc pushl stc pushl cli (bad) js cli (bad) jp cli (bad) jnp cld (bad) jl cld (bad) jle std (bad) jg std incl loope incl add add out lcall (bad) lcall out call in call in call out jmp jmp in jmp out jmp out ljmp lock lock icebp ljmp repnz repz cmc pushl cmc pushl idiv jae idiv je clc pushl stc pushl cli (bad) js cli (bad) jp cli (bad) jnp cld (bad) jge cld (bad) jle std (bad) jg std incl loope incl add add out lcall out lcall out lcall in call in call out jmp jmp in jmp out jmp out ljmp lock lock icebp ljmp repz repz cmc pushl cmc pushl idiv jae idiv je clc pushl stc pushl cli (bad) js cli (bad) jp sti (bad) jnp cld (bad) jge cld (bad) jle std (bad) jg std incl loope incl add add call (bad) lcall (bad) lcall out call in call in jmp in jmp in jmp out ljmp out ljmp lock icebp ljmp ljmp repz repz cmc pushl cmc pushl idiv jae clc pushl pushl stc pushl cli (bad) js cli (bad) jp sti (bad) jnp cld (bad) jge cld (bad) jle std incl loope incl add add call (bad) lcall out lcall out lcall in call in jmp enter leave in jmp out ljmp out ljmp lock icebp ljmp ljmp repz repz cmc pushl idiv jb idiv jae clc pushl pushl stc pushl cli (bad) js cli (bad) jp sti (bad) jnp cld (bad) jge cld (bad) jg std incl loope incl add add call (bad) lcall out lcall out lcall in call in jmp enter leave out jmp out ljmp out ljmp lock icebp ljmp repnz repz hlt pushl cmc pushl idiv jae idiv je clc pushl pushl stc pushl cli (bad) jns cli (bad) jnp sti (bad) jnp cld (bad) jge cld (bad) jg std incl loope incl add add jmp (bad) lcall out lcall (bad) lcall out call out jmp enter leave in ljmp out ljmp out ljmp lock icebp ljmp repnz repz hlt pushl cmc pushl idiv jae idiv je clc pushl pushl stc pushl cli (bad) jns cli (bad) jnp sti (bad) jl cld (bad) jge cld (bad) jg std incl loope pusha mov jmp (bad) lcall out lcall out lcall out lcall out ljmp leave in jmp in ljmp out ljmp out ljmp icebp ljmp icebp ljmp repnz repz hlt pushl cmc pushl idiv jae idiv je clc pushl stc pushl stc (bad) js cli (bad) jns cli (bad) jnp sti (bad) jl cld (bad) jge std (bad) jg std incl add add (bad) jmp call (bad) lcall out lcall out lcall out ljmp leave in jmp out ljmp out ljmp out ljmp icebp ljmp ljmp repz hlt ljmp hlt pushl idiv jb idiv jae idiv je clc pushl stc pushl stc (bad) js cli (bad) jns sti (bad) jnp sti (bad) jl cld (bad) jle std (bad) jg std incl add add (bad) jmp jmp (bad) lcall out lcall out lcall out ljmp lret addr16 out ljmp out ljmp lock icebp ljmp ljmp repz hlt ljmp hlt pushl idiv jb idiv jae clc pushl pushl stc pushl stc (bad) js cli (bad) jp sti (bad) jnp sti (bad) jl cld (bad) jle std incl add add jmp (bad) jmp call (bad) lcall out lcall out lcall ljmp push int3 out ljmp lock icebp ljmp ljmp repz hlt ljmp hlt pushl idiv jb idiv je clc pushl clc pushl stc pushl stc (bad) jns cli (bad) jp sti (bad) jl sti (bad) jl cld (bad) jle std incl add add ljmp mov jmp (bad) lcall out lcall out lcall ljmp push int3 lock lock repnz ljmp repz hlt pushl cmc pushl idiv jb idiv je clc pushl stc pushl stc (bad) js stc (bad) jns cli (bad) jp sti (bad) jl sti (bad) jge std (bad) jle std incl add add ljmp mov jmp (bad) lcall out lcall (bad) lcall jmp jmp out ljmp out ljmp lock lock ljmp repnz repz hlt pushl cmc pushl idiv jae idiv je clc pushl stc pushl stc (bad) js stc (bad) jns sti (bad) jp sti (bad) jl sti (bad) jge std (bad) jg std incl add add ljmp mov jmp (bad) lcall out lcall out jmp jmp ljmp out ljmp out ljmp lock icebp ljmp ljmp repz repz cmc pushl cmc pushl idiv jae idiv je clc pushl stc pushl stc (bad) js stc (bad) jns sti (bad) jnp sti (bad) jl sti (bad) jle std (bad) jg std incl add add ljmp movsb jmp (bad) jmp call (bad) lcall out jmp in (bad) ljmp out ljmp out ljmp lock icebp ljmp repnz repz repz cmc pushl cmc pushl idiv jae idiv jne clc pushl stc pushl stc (bad) jns stc (bad) jp sti (bad) jnp sti (bad) jge sti (bad) jle std (bad) jg std incl add add ljmp movsl ljmp mov jmp (bad) lcall out jmp in (bad) ljmp out ljmp out ljmp icebp ljmp icebp ljmp repz repz hlt pushl cmc pushl cmc pushl idiv jae idiv jne clc pushl stc pushl stc (bad) jns cli (bad) jp sti (bad) jnp sti (bad) jge cld (bad) jle std (bad) jg std incl add add ljmp movsl ljmp mov jmp (bad) lcall out jmp in (bad) ljmp out ljmp lock icebp ljmp ljmp repz repz hlt pushl cmc pushl idiv jae idiv je clc pushl clc pushl stc (bad) js stc (bad) jp cli (bad) jp sti (bad) jnp sti (bad) jge cld (bad) jle std incl loopne incl add add ljmp cmpsb ljmp movsb jmp (bad) jmp call (bad) jmp in (bad) ljmp out ljmp lock ljmp ljmp repz hlt pushl cmc pushl cmc pushl idiv jae idiv je clc pushl clc pushl stc (bad) js cli (bad) jp cli (bad) jnp sti (bad) jl sti (bad) jle cld (bad) jg std incl loopne incl add add ljmp cmpsb ljmp movsb jmp (bad) jmp call (bad) jmp in (bad) ljmp lock lock ljmp ljmp repz hlt pushl cmc pushl idiv jb idiv je clc pushl clc pushl clc pushl stc (bad) js cli (bad) jp cli (bad) jnp sti (bad) jl cld (bad) jle cld (bad) jg std incl loopne incl add add ljmp cmpsb ljmp movsl ljmp mov jmp (bad) jmp (bad) ljmp lock icebp ljmp ljmp repnz hlt pushl hlt pushl cmc pushl idiv jb idiv je clc pushl clc pushl clc (bad) js stc (bad) jns cli (bad) jnp cli (bad) jnp sti (bad) jge cld (bad) jg cld (bad) jg std incl loopne incl add add ljmp cmpsb ljmp cmpsb ljmp mov jmp (bad) jmp in (bad) ljmp lock icebp ljmp repnz repz hlt pushl hlt pushl cmc pushl idiv jae idiv je clc pushl clc pushl clc (bad) js cli (bad) jns cli (bad) jnp cli (bad) jl sti (bad) jge cld (bad) jg cld incl loopne incl add add ljmp cmpsb ljmp cmpsb ljmp movsb jmp (bad) jmp ljmp imul ljmp ljmp repnz repz hlt pushl cmc pushl cmc pushl idiv jae idiv jne clc pushl clc pushl clc (bad) jns cli (bad) jns cli (bad) jnp cli (bad) jl cld (bad) jle cld (bad) jg cld incl loopne incl add add ljmp cmpsb ljmp cmpsb ljmp movsb ljmp mov ljmp imul ljmp ljmp repz repz hlt pushl cmc pushl cmc pushl idiv je idiv jne clc pushl clc pushl stc (bad) jns cli (bad) jp cli (bad) jl cli (bad) jge cld (bad) jle cld (bad) jg cld incl loopne incl add cmpsl ljmp cmpsb ljmp cmpsb ljmp cmpsb ljmp movsb jmp (bad) ljmp out (bad) ljmp ljmp repnz repz repz cmc pushl cmc pushl idiv jae idiv je idiv jbe clc pushl clc (bad) js stc (bad) jns cli (bad) jp cli (bad) jl sti (bad) jge cld (bad) jle cld incl (bad) incl loope incl add add ljmp cmpsb ljmp cmpsb ljmp cmpsb ljmp mov jmp (bad) mov iret repnz repnz repz hlt pushl cmc pushl cmc pushl idiv je idiv jne idiv jbe clc pushl stc (bad) js stc (bad) jp cli (bad) jnp cli (bad) jge sti (bad) jle cld (bad) jg cld incl (bad) incl loope incl add add ljmp cmpsb ljmp cmpsb ljmp cmpsb ljmp movsb jmp (bad) (bad) mov (bad) repnz repnz hlt pushl hlt pushl cmc pushl idiv jae idiv je idiv jne idiv ja clc (bad) js stc (bad) jns stc (bad) jp cli (bad) jnp sti (bad) jge sti (bad) jle cld (bad) jg cld incl loopne incl loope incl add add ljmp cmpsb ljmp cmpsb ljmp cmpsb ljmp test out (bad) pushl (bad) repnz repz hlt pushl hlt pushl cmc pushl idiv jae idiv jne idiv jbe idiv ja stc (bad) js stc (bad) jns stc (bad) jnp cli (bad) jl sti (bad) jge sti (bad) jle cld incl (bad) incl loope incl add add ljmp cmpsb ljmp cmpsb ljmp cmpsb ljmp mov ljmp insl (bad) repz repz hlt pushl cmc pushl idiv jae idiv je idiv jne idiv jbe clc pushl stc (bad) jns stc (bad) jp stc (bad) jnp sti (bad) jl sti (bad) jle sti (bad) jg cld incl (bad) incl loope incl add add ljmp cmpsb ljmp cmpsb ljmp mov (bad) (bad) mov in ljmp ljmp repnz repz repz hlt pushl cmc pushl idiv jae idiv je idiv jbe clc pushl clc (bad) js stc (bad) jns stc (bad) jp cli (bad) jl sti (bad) jge sti (bad) jle sti (bad) jg cld incl loopne incl loope incl add add ljmp cmpsb ljmp cmpsl ljmp mov fcomi ljmp ljmp repnz repnz repz hlt pushl cmc pushl cmc pushl idiv je idiv jne idiv jbe clc pushl clc (bad) js stc (bad) jp stc (bad) jnp cli (bad) jl sti (bad) jge sti (bad) jle sti incl (bad) incl loopne incl loop incl add add ljmp cmpsb ljmp mov (bad) pushl repz ljmp ljmp repnz repnz hlt pushl hlt pushl cmc pushl cmc pushl idiv je idiv jne idiv ja clc (bad) js clc (bad) jns stc (bad) jp cli (bad) jnp cli (bad) jge sti (bad) jge sti (bad) jg sti incl (bad) incl loope incl loop incl add add ljmp stos jmp pushl cld ljmp icebp ljmp lock ljmp ljmp repnz repz hlt pushl hlt pushl cmc pushl cmc pushl pushl idiv jbe idiv ja clc (bad) js clc (bad) jns stc (bad) jnp cli (bad) jl cli (bad) jge sti (bad) jle sti (bad) jg sti incl loopne incl (bad) incl jecxz incl add add ljmp mov (bad) lcall int ljmp lock lock icebp ljmp repnz repz repz hlt pushl hlt pushl cmc pushl pushl pushl idiv jbe idiv ja clc (bad) jns clc (bad) jp cli (bad) jnp cli (bad) jl cli (bad) jge sti (bad) jg sti incl (bad) incl loope incl loop decl add add in (bad) pushl fdiv ljmp out ljmp out ljmp lock ljmp repnz repnz repz repz hlt pushl hlt pushl cmc pushl pushl idiv jbe idiv ja idiv js clc (bad) jns stc (bad) jp cli (bad) jl cli (bad) jge cli (bad) jle sti (bad) jg sti incl (bad) incl loope incl loop decl add add (bad) pushl icebp ljmp out ljmp out ljmp lock ljmp icebp ljmp repnz repnz repz repz hlt pushl hlt pushl idiv je idiv jne idiv jbe idiv ja idiv jns stc (bad) jp stc (bad) jnp cli (bad) jl cli (bad) jge cli (bad) jg sti incl (bad) incl loope incl loope decl jecxz incl add add int ljmp out ljmp out ljmp lock ljmp ljmp icebp ljmp repnz repnz repz repz cmc pushl cmc pushl pushl idiv jbe idiv ja idiv js clc (bad) jns stc (bad) jnp stc (bad) jnp cli (bad) jge cli (bad) jle cli (bad) jg sti incl (bad) incl loope incl loop decl jecxz iret (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) stc (bad) (bad) (bad) (bad) (bad) (bad) jmp aas (bad) (bad) (bad) (bad) (bad) inc (bad) (bad) (bad) (bad) (bad) incl (bad) (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) cld add (bad) (bad) (bad) (bad) (bad) clc add (bad) (bad) (bad) (bad) push add (bad) (bad) (bad) (bad) jmp add (bad) (bad) (bad) (bad) jmp add add jg jmp add add (bad) jmp add add (bad) jmp add add jg jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) jmp add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) pushl verw add add add add add add and mov pushl add add add add loope incl add sbb add adc add push add add mov call mov (bad) mov mov (bad) incl add or add add mov pushl (bad) loop fisttp loope decl add add add add loop out (bad) loop decl (bad) decl add add (bad) call loop decl loop call add add in call jecxz decl loop decl jecxz incl add add in call (bad) call loop decl jecxz jmp call jmp jmp lretw push into lock repnz repz cmc pushl cmc pushl idiv je clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle cld (bad) jg (bad) incl add adc add pop add add cwtl out call in call jecxz call loop call (bad) arpl ljmp lret push into lock repnz repz hlt pushl cmc pushl idiv je clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle cld (bad) jg (bad) incl add push add add add add add add cltd out lcall in call (bad) call jecxz call (bad) arpl ljmp lret push into lock repnz repz cmc pushl cmc pushl idiv je clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle cld (bad) jg (bad) incl add add add add add add out call in call jecxz call in ljmp jmp fs ljmp lret push into lock repnz repz cmc pushl idiv jae idiv je clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle cld (bad) jg (bad) incl add add out lcall in call (bad) call in incl (bad) ljmp lret push into lock repnz repz cmc pushl idiv jae idiv je clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle cld (bad) jg (bad) incl add add (bad) lcall in call in call in lcall ljmp lret push into lock repnz repz cmc pushl idiv jae idiv je clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle std incl loope incl add add out lcall in call in call in lcall (bad) ljmp lret imul lock ljmp repz cmc pushl idiv jae idiv je clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle std incl loope incl add add out lcall out call in call in lcall enter leave in jmp out ljmp lock lock ljmp repz cmc pushl idiv jae idiv jne clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle std incl loope incl add add out lcall out lcall in call (bad) jmp enter leave in jmp out ljmp lock icebp ljmp ljmp repz cmc pushl idiv jae idiv jne clc pushl cli (bad) js cli (bad) jp sti (bad) jl cld (bad) jle std incl loope incl add add out lcall (bad) lcall in call in jmp enter leave in jmp out ljmp lock icebp ljmp repnz repz cmc pushl idiv jae clc pushl clc pushl cli (bad) jns cli (bad) jnp sti (bad) jl cld (bad) jle std incl loope incl add add out lcall out lcall in call in jmp in jmp out ljmp out ljmp lock icebp ljmp repz hlt pushl cmc pushl idiv jae clc pushl clc pushl cli (bad) jns cli (bad) jnp cld (bad) jl cld (bad) jg std incl loope incl add add call (bad) lcall (bad) lcall in lcall jmp in jmp out ljmp out ljmp lock icebp ljmp repz hlt pushl cmc pushl idiv je clc pushl stc pushl cli (bad) jns cli (bad) jnp cld (bad) jge cld (bad) jg std incl loope lahf mov jmp (bad) lcall out lcall out lcall jmp in jmp out ljmp out ljmp lock ljmp repz hlt pushl idiv jb idiv je clc pushl stc pushl cli (bad) jns cli (bad) jnp cld (bad) jge cld (bad) jg std incl add add jmp (bad) lcall out lcall out lcall (bad) jmp in jmp out ljmp out ljmp icebp ljmp ljmp repz hlt pushl idiv jae idiv je clc pushl stc (bad) js cli (bad) jns sti (bad) jnp cld (bad) jge std (bad) jg std incl add add (bad) jmp call (bad) lcall out lcall ljmp push int3 out ljmp icebp ljmp ljmp repz hlt pushl idiv jae idiv je clc pushl stc (bad) js cli (bad) jp sti (bad) jl cld (bad) jge std incl add add jmp (bad) jmp out lcall (bad) lcall ljmp push int ljmp icebp ljmp repnz hlt pushl cmc pushl idiv jae idiv jne stc pushl stc (bad) js cli (bad) jp sti (bad) jl cld (bad) jle std incl add add ljmp mov call (bad) lcall (bad) ljmp lret out ljmp out ljmp lock ljmp repnz hlt pushl cmc pushl idiv je idiv jne stc pushl stc (bad) jns cli (bad) jp sti (bad) jl cld (bad) jle std incl add add ljmp mov call (bad) lcall (bad) ljmp lret out ljmp out ljmp lock ljmp repz hlt pushl cmc pushl idiv je idiv jbe stc pushl stc (bad) jns cli (bad) jnp sti (bad) jge cld (bad) jg std incl add add ljmp mov jmp (bad) lcall call (bad) ljmp out ljmp lock icebp ljmp repnz repz cmc pushl cmc pushl idiv je clc pushl stc (bad) js stc (bad) jp sti (bad) jnp sti (bad) jge cld (bad) jg std incl add add ljmp movsb jmp (bad) jmp out jmp in (bad) ljmp out ljmp lock ljmp repz repz cmc pushl idiv jae idiv jne clc pushl stc (bad) js stc (bad) jp sti (bad) jnp sti (bad) jle cld (bad) jg std incl add add ljmp movsl ljmp mov call (bad) pushl out ljmp lock ljmp repz hlt pushl cmc pushl idiv je idiv jne clc pushl stc (bad) jns cli (bad) jnp sti (bad) jl sti (bad) jle cld incl loopne incl add add ljmp cmpsb ljmp mov call (bad) pushl into lock icebp ljmp ljmp hlt pushl hlt pushl idiv jae idiv je clc pushl clc (bad) js stc (bad) jns cli (bad) jnp sti (bad) jge cld (bad) jg cld incl loopne incl add add ljmp cmpsb ljmp mov jmp (bad) pushl into lock ljmp repnz hlt pushl hlt pushl idiv jae idiv jne clc pushl clc (bad) js cli (bad) jp cli (bad) jnp sti (bad) jge cld (bad) jg cld incl loope incl add add ljmp cmpsb ljmp movsb jmp (bad) jmp out (bad) ljmp icebp ljmp ljmp repz hlt pushl cmc pushl idiv jae idiv jne clc pushl clc (bad) jns cli (bad) jp cli (bad) jl sti (bad) jle cld incl loopne incl add add ljmp cmpsb ljmp movsl ljmp test (bad) (bad) mov into icebp ljmp repnz repz cmc pushl cmc pushl idiv je idiv jbe clc pushl stc (bad) jns cli (bad) jnp cli (bad) jge cld (bad) jle cld incl loopne incl add cmpsl ljmp cmpsb ljmp cmpsb ljmp movsb jmp (bad) (bad) mov iret repnz repz hlt pushl cmc pushl cmc pushl idiv je idiv ja clc (bad) js stc (bad) jp cli (bad) jnp sti (bad) jge cld (bad) jg cld incl loopne incl add test (bad) jmp ljmp cmpsb ljmp movsl ljmp mov (bad) repnz repz hlt pushl cmc pushl idiv je idiv jne idiv ja stc (bad) jns stc (bad) jp cli (bad) jl sti (bad) jle cld (bad) jg cld incl loope incl add add ljmp cmpsb ljmp cmpsl ljmp mov fdiv ljmp repz repz hlt pushl idiv jae idiv jne idiv jbe clc (bad) js stc (bad) jns stc (bad) jnp cli (bad) jl sti (bad) jle cld incl loopne incl loop incl add add ljmp cmpsb ljmp mov (bad) (bad) mov aad ljmp repnz repz repz cmc pushl idiv je idiv jne idiv ja clc (bad) js stc (bad) jp stc (bad) jl sti (bad) jge sti (bad) jg cld incl loopne incl (bad) incl add add ljmp stos jmp pushl call icebp ljmp ljmp repnz repz hlt pushl cmc pushl idiv je idiv jbe clc pushl clc (bad) jns stc (bad) jp cli (bad) jl sti (bad) jge sti incl (bad) incl loope incl add add ljmp mov (bad) lcall int ljmp ljmp repnz repnz hlt pushl hlt pushl cmc pushl idiv jne idiv jbe clc (bad) js clc (bad) jp cli (bad) jnp cli (bad) jge sti (bad) jle sti incl loopne incl (bad) decl add add in (bad) pushl fdiv ljmp out ljmp lock ljmp repnz repz hlt pushl hlt pushl cmc pushl pushl idiv ja clc (bad) jns clc (bad) jp cli (bad) jl cli (bad) jge sti (bad) jg sti incl loopne incl (bad) decl add add (bad) pushl icebp ljmp out ljmp out ljmp ljmp repnz repz repz hlt pushl hlt pushl pushl idiv jbe idiv ja clc (bad) jns stc (bad) jnp cli (bad) jge cli (bad) jle sti (bad) jg sti incl loopne incl loop decl add add int ljmp out ljmp out ljmp ljmp icebp ljmp repnz repz repz hlt pushl cmc pushl pushl idiv ja idiv js stc (bad) jp stc (bad) jl cli (bad) jge cli (bad) jg sti incl (bad) incl std decl jecxz out (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) jg (bad) incl add cld (bad) (bad) incl add lock (bad) incl add loopne (bad) (bad) incl add sar (bad) incl add cmp (bad) incl add add (bad) (bad) incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add incl add add add add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add incl add jg add (bad) (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add dec verw add add add add add add and mov call add push mov lcall add add add add add add (bad) loop adc loope decl add pop add add add add nop jecxz xor loop decl (bad) incl add add jecxz decl loop decl (bad) incl add add in call jecxz decl loop call add add in call (bad) decl loop call (bad) fs ljmp lret out ljmp lock repnz repz cmc pushl idiv je clc pushl cli (bad) js cli (bad) jp cld (bad) jge cld (bad) jg std incl add adc add push add add cltd out call in call jecxz call in jmp jmp jmp in ljmp out ljmp lock repnz repz cmc pushl idiv je clc pushl cli (bad) js cli (bad) jp cld (bad) jge cld (bad) jg std incl add or add push add add lcall call in call jecxz call (bad) fs ljmp lret out ljmp lock repnz repz cmc pushl idiv je clc pushl cli (bad) js cli (bad) jp cld (bad) jge cld (bad) jg std incl add add out call in call jecxz lcall lret in jmp jmp in ljmp out ljmp lock repnz repz cmc pushl idiv je clc pushl cli (bad) js cli (bad) jp cld (bad) jge cld (bad) jg std incl add add (bad) lcall in call (bad) lcall loopne jmp jmp in ljmp out ljmp lock ljmp repz cmc pushl idiv je clc pushl cli (bad) js cli (bad) jnp cld (bad) jge cld (bad) jg std incl add add out lcall in call in call out jmp jmp out ljmp out ljmp lock ljmp repz cmc pushl idiv je clc pushl cli (bad) js cli (bad) jnp cld (bad) jge cld (bad) jg std incl add add out lcall in call in call out jmp jmp lretw imul lock ljmp hlt pushl cmc pushl idiv je clc pushl cli (bad) js cli (bad) jnp cld (bad) jge cld (bad) jg std incl add add out lcall out call in call out jmp in jmp out ljmp out ljmp icebp ljmp ljmp hlt pushl idiv jae idiv je clc pushl cli (bad) jns cli (bad) jnp cld (bad) jle cld (bad) jg std incl add add out lcall (bad) lcall in call (bad) jmp in jmp out ljmp out ljmp icebp ljmp repz hlt pushl idiv jae idiv jne clc pushl cli (bad) jns cli (bad) jnp cld (bad) jle std incl loope incl add add call (bad) lcall out call in jmp leave in jmp out ljmp lock icebp ljmp repz hlt pushl idiv jae clc pushl clc pushl cli (bad) jns cli (bad) jnp cld (bad) jle std incl loope out mov call (bad) lcall (bad) lcall in jmp leave in ljmp out ljmp lock ljmp repz cmc pushl idiv je clc pushl stc pushl cli (bad) jp sti (bad) jl cld (bad) jle std incl loope xor add add jmp (bad) lcall out lcall in ljmp lret push int ljmp ljmp repz cmc pushl idiv je clc pushl stc (bad) js cli (bad) jp sti (bad) jl cld (bad) jle std incl add add jmp (bad) lcall out lcall out ljmp lret out ljmp out ljmp icebp ljmp ljmp hlt pushl cmc pushl idiv je clc pushl stc (bad) js cli (bad) jp sti (bad) jl cld (bad) jg std incl add add jmp (bad) jmp out lcall out ljmp out ljmp lock icebp ljmp repnz hlt pushl cmc pushl idiv jne clc pushl stc (bad) jns cli (bad) jnp sti (bad) jge cld (bad) jg std incl add add ljmp mov out lcall (bad) ljmp lret out ljmp lock icebp ljmp repz hlt pushl cmc pushl idiv jne stc pushl stc (bad) jns cli (bad) jnp sti (bad) jge cld incl add add ljmp mov call (bad) lcall in (bad) ljmp out ljmp icebp ljmp ljmp repz cmc pushl idiv jae idiv jbe stc pushl stc (bad) jp cli (bad) jnp sti (bad) jle cld incl add add ljmp mov jmp (bad) lcall (bad) ljmp out ljmp icebp ljmp repnz repz cmc pushl idiv je idiv jbe stc (bad) js stc (bad) jp sti (bad) jl sti (bad) jle std incl add add ljmp movsb jmp (bad) jmp out pushl lock ljmp repz hlt pushl cmc pushl idiv je clc pushl stc (bad) js cli (bad) jnp sti (bad) jl cld (bad) jg std incl add add ljmp movsl ljmp mov out pushl into lock ljmp repz hlt pushl idiv jae idiv jne clc pushl stc (bad) jns cli (bad) jnp sti (bad) jge cld (bad) jg std incl add add ljmp cmpsb ljmp mov call (bad) ljmp icebp ljmp repnz hlt pushl cmc pushl idiv je idiv jbe clc (bad) js stc (bad) jp cli (bad) jl sti (bad) jle cld incl loopne incl add add ljmp cmpsb ljmp mov jmp (bad) ljmp ljmp repz hlt pushl cmc pushl idiv je idiv jbe clc (bad) js stc (bad) jp cli (bad) jl cld (bad) jle cld incl loope incl add add ljmp cmpsb ljmp movsb jmp (bad) (bad) mov iret repnz repz cmc pushl cmc pushl idiv jne idiv ja stc (bad) jns cli (bad) jnp cli (bad) jge cld (bad) jg cld incl loope incl add add ljmp cmpsb ljmp movsl ljmp mov (bad) repnz hlt pushl cmc pushl idiv je idiv jbe idiv js stc (bad) jp cli (bad) jnp sti (bad) jle cld incl (bad) incl add test (bad) jmp ljmp cmpsl ljmp mov loop ljmp repz hlt pushl cmc pushl idiv jne idiv jbe clc (bad) js stc (bad) jp cli (bad) jl sti (bad) jle cld incl loopne incl add add ljmp test in (bad) pushl fdecstp ljmp repnz repz cmc pushl cmc pushl pushl clc pushl clc (bad) jns stc (bad) jnp sti (bad) jge sti (bad) jg cld incl loopne incl add add ljmp mov (bad) ljmp (bad) repz repnz repnz hlt pushl cmc pushl cmc pushl idiv jbe clc (bad) js clc (bad) jp cli (bad) jl sti (bad) jge sti incl loopne incl (bad) incl add add in (bad) pushl fnop ljmp lock ljmp repnz repz hlt pushl cmc pushl pushl idiv ja clc (bad) jns stc (bad) jnp cli (bad) jge sti (bad) jle sti incl loopne incl (bad) incl add add ljmp push out ljmp lock repnz repz repz hlt pushl cmc pushl idiv jbe idiv js clc (bad) jp stc (bad) jl cli (bad) jge sti (bad) jg sti incl loopne incl jecxz incl add add iret lock out ljmp lock ljmp repnz repz repz cmc pushl pushl idiv ja idiv jns stc (bad) jnp cli (bad) jl cli (bad) jle sti incl (bad) incl (bad) decl add add (bad) (bad) (bad) incl add (bad) stc (bad) (bad) incl add push jg incl add inc jg incl add incl add incl (bad) (bad) incl add incb (bad) (bad) incl add incb add jg add incb add jg add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add incb add incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add (bad) (bad) (bad) (bad) incl add inc arpl add add add add add add add and mov call mov pushl add add mov pushl mov (bad) out mov (bad) incl add or add add nop jecxz pusha mov (bad) decl (bad) incl add add jecxz call loop decl add add in call loop call (bad) out fs ljmp int3 lock icebp ljmp repz cmc pushl idiv jbe stc (bad) js cli (bad) jnp cld (bad) jle std incl add adc add add cwtl in call jecxz call jecxz jmp out fs ljmp int3 lock icebp ljmp repz cmc pushl idiv jbe stc (bad) js cli (bad) jnp cld (bad) jle std incl add add add add add add in call (bad) call int jmp jmp in ljmp out ljmp icebp ljmp repz cmc pushl idiv jbe stc (bad) js cli (bad) jnp cld (bad) jle std incl add add in call jecxz call jecxz jmp jmp in ljmp lock icebp ljmp repz cmc pushl idiv jbe stc (bad) js cli (bad) jnp cld (bad) jle std incl add add (bad) call in call (bad) jmp jmp out ljmp lock icebp ljmp hlt pushl idiv jae idiv jbe stc (bad) jns cli (bad) jnp cld (bad) jle std incl add add out lcall in call out jmp jmp addr16 imul icebp ljmp hlt pushl idiv jae clc pushl stc (bad) jns cli (bad) jl cld (bad) jle std incl add add out lcall in call call in jmp out ljmp lock ljmp hlt pushl idiv je clc pushl stc (bad) jns cli (bad) jl cld (bad) jg std incl add add out lcall out lcall call in jmp out ljmp lock ljmp hlt pushl idiv je clc pushl stc (bad) jns cli (bad) jl cld (bad) jg std incl add add call (bad) lcall out jmp leave in ljmp out ljmp icebp ljmp repz cmc pushl idiv je clc pushl cli (bad) jp sti (bad) jl cld (bad) jg std out and add mov call (bad) lcall out ljmp lret imul icebp ljmp repz cmc pushl idiv jne clc pushl cli (bad) jp sti (bad) jge cld (bad) jg std inc movsb ljmp lahf call (bad) lcall ljmp imul repnz repz cmc pushl idiv jne stc (bad) js cli (bad) jnp sti (bad) jge std incl add add jmp (bad) lcall out ljmp lret out ljmp lock ljmp hlt pushl cmc pushl idiv jbe stc (bad) jns cli (bad) jnp sti (bad) jle std incl add add ljmp lahf call (bad) ljmp int3 out ljmp icebp ljmp repz hlt pushl idiv je idiv jbe stc (bad) jns cli (bad) jl sti (bad) jle std incl add add ljmp mov call (bad) ljmp lock ljmp repz cmc pushl idiv je clc pushl stc (bad) jp cli (bad) jl cld (bad) jg std incl add add ljmp mov jmp (bad) ljmp lock ljmp hlt pushl cmc pushl idiv jne clc (bad) js cli (bad) jnp cli (bad) jge cld incl add add ljmp movsb jmp (bad) pushl into icebp ljmp repz hlt pushl idiv je idiv jbe clc (bad) jns cli (bad) jnp sti (bad) jle cld incl add add ljmp movsl ljmp mov iret icebp ljmp repz cmc pushl idiv jne idiv ja stc (bad) jp cli (bad) jl sti (bad) jg cld incl add add ljmp cmpsb ljmp mov (bad) repnz hlt pushl cmc pushl idiv jne idiv js stc (bad) jp cli (bad) jge cld (bad) jg cld incl add add ljmp mov (bad) (bad) mov loop ljmp repz hlt pushl idiv je idiv jbe clc (bad) jns stc (bad) jnp sti (bad) jle cld incl loopne incl add add jmp ljmp out (bad) decl (bad) repnz repz cmc pushl idiv jne idiv ja clc (bad) jp stc (bad) jge sti (bad) jg cld incl loopne incl add add in (bad) pushl (bad) hlt ljmp ljmp repnz hlt pushl cmc pushl pushl clc (bad) js clc (bad) jnp cli (bad) jge sti incl loopne incl add add std (bad) js repnz lock repnz repz hlt pushl cmc pushl idiv ja clc (bad) jp stc (bad) jl cli (bad) jle sti incl loopne incl add add into out ljmp lock ljmp repnz repz cmc pushl pushl idiv js clc (bad) jnp stc (bad) jge cli (bad) jg sti incl loope incl add add (bad) (bad) (bad) decl (bad) (bad) incb (bad) (bad) cld aas (bad) (bad) clc aas (bad) (bad) clc add aas clc add jg add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) clc add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) in jae add add add add add add add add add (bad) incl mov pushl mov (bad) out (bad) loop pusha mov (bad) decl add xchg in lahf xchg jecxz decl loop incl add add in call jecxz jmp call ljmp out ljmp repnz hlt pushl idiv jne stc (bad) jns sti (bad) jge cld incl add add in call in jmp ljmp lret out ljmp repnz hlt pushl idiv jne stc (bad) jns sti (bad) jge cld incl add add in call in incl leave in ljmp out ljmp icebp ljmp hlt pushl idiv jne stc (bad) jns sti (bad) jge cld incl add add (bad) call in lcall in ljmp out ljmp ljmp hlt pushl idiv jbe stc (bad) jns sti (bad) jge cld incl add add out call in lcall leave in ljmp out ljmp ljmp hlt pushl idiv jbe stc (bad) jns sti (bad) jge cld incl add add out lcall in jmp lret imul repnz cmc pushl clc pushl stc (bad) jp sti (bad) jle std incl add add out lcall out jmp lret out ljmp lock repnz cmc pushl pushl stc (bad) jp sti (bad) jle std incl add add call (bad) lcall jmp out ljmp icebp ljmp repz cmc pushl pushl cli (bad) jnp sti (bad) jle std incl add add jmp (bad) lcall ljmp imul ljmp hlt pushl idiv jne clc (bad) js cli (bad) jl sti (bad) jg std incl add add jmp (bad) jmp jmp ljmp lock ljmp hlt pushl idiv jne clc (bad) jns cli (bad) jl sti incl add add ljmp mov in (bad) ljmp lock repz cmc pushl idiv jbe stc (bad) jp cli (bad) jge cld incl add add ljmp movsl jmp (bad) ljmp icebp ljmp repz cmc pushl pushl stc (bad) jnp cli (bad) jle cld incl add add ljmp cmpsl ljmp insl iret repnz hlt pushl idiv jne clc (bad) js cli (bad) jl sti (bad) jg cld incl add add ljmp scas in (bad) (bad) mov (bad) repz cmc pushl idiv jbe clc (bad) jp cli (bad) jge sti incl loope incl add add jmp ljmp out (bad) lcall (bad) hlt pushl cmc pushl idiv ja clc (bad) jnp cli (bad) jle cld incl loope incl add add in (bad) pushl fcomi ljmp repnz hlt pushl idiv jbe idiv jns stc (bad) jl sti (bad) jg cld incl loop incl add add (bad) (bad) jns repz repnz repz hlt pushl pushl clc (bad) jp cli (bad) jge sti incl loopne incl add add iret lock ljmp repnz repz cmc pushl idiv jns clc (bad) jl cli (bad) jg sti incl loope decl add add (bad) incl cld (bad) incl clc (bad) incl lock incl lock add add add add add add add add add add add add add add lock lock lock lock lock lock lock lock lock lock (bad) (bad) incl (bad) (bad) incl je verw add add add sub add add and mov jmp mov jmp loopne incl add add loop decl add xchg in call jecxz jmp out fs jmp push iret repnz hlt pushl (bad) js cli (bad) jl cld incl add add in call int3 in jmp ljmp out ljmp ljmp cmc pushl clc (bad) js cli (bad) jl cld incl add add in call jecxz jmp jmp push (bad) repnz cmc pushl (bad) js cli (bad) jl cld incl add add (bad) call out jmp in ljmp out ljmp pushl cmc pushl (bad) js cli (bad) jge cld incl add add out call out jmp in ljmp lock repnz idiv jne clc (bad) jns cli (bad) jge cld incl add add out lcall call out ljmp lock repz idiv jne stc (bad) jns sti (bad) jge std incl add add out lcall jmp out ljmp icebp ljmp hlt pushl idiv jbe stc (bad) jp sti (bad) jle std incl add add jmp (bad) ljmp int3 out ljmp ljmp hlt pushl idiv ja stc (bad) jnp sti (bad) jg std incl add add jmp (bad) ljmp int ljmp repnz cmc pushl (bad) js stc (bad) jl sti incl add add ljmp mov (bad) ljmp icebp ljmp repz idiv jne clc (bad) jns cli (bad) jge cld incl add add ljmp mov (bad) ljmp pushl hlt pushl idiv jbe clc (bad) jp cli (bad) jle cld incl add add jmp pushl out (bad) ljmp repnz cmc pushl pushl stc (bad) jnp sti (bad) jg cld incl add add in (bad) (bad) mov fcomi ljmp repz cmc pushl idiv jns stc (bad) jge sti incl loope incl add add (bad) (bad) jp repz repnz hlt pushl idiv ja clc (bad) jp cli (bad) jle sti incl loop incl add add iret lock ljmp repz cmc pushl idiv js clc (bad) jl cli incl loopne decl add add push add push add push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push add push add verw add add add add add add add add jmp dec (bad) ljmp (bad) inc (bad) jmp incl call incl out inc shl inc shl inc shl inc shl dec enter out decl out decl in decl in incl in incl out and incl out dec enter out decl out decl (bad) decl in incl in incl out test (bad) incl out dec leave in call out decl out decl (bad) decl in incl ret xchg (bad) incl call add in call (bad) call out decl out decl in decl ret call incl call add in call call (bad) call out decl out decl in incl jmp incl jmp add out call call (bad) call out decl out decl (bad) lcall out decl in incl jmp add out lcall call (bad) call (bad) call out decl out incl (bad) jmp adc add add out lcall jmp (bad) call call (bad) call out decl out incl ljmp add add out lcall (bad) lcall call (bad) call (bad) call out decl (bad) ljmp add add out lcall ljmp cltd jmp (bad) call call (bad) call out decl ljmp add add lcall ljmp lcall call call (bad) call out decl jmp dec iret lock ljmp pushf ljmp cltd jmp (bad) call call (bad) decl jmp dec iret icebp jmp jmp lcall ljmp lcall call call (bad) decl in incl add add jmp jmp jmp ljmp pushf ljmp cltd jmp (bad) call leave in incl add add repnz decl decl decl decl out decl out decl out decl out decl out decl in decl in iret rolb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add dec inc push mov add add inc inc add add and sub add xor add add and test add add add add add add push add and add add add add sbb add add add add add add and mov add adc add add add add or push inc inc cmpsb verr xor add push add pop add inc add push add dec add pop add dec add dec add add add add add add add add add add add add add add test add add push add add outsb add inc add insb add dec add data16 add pusha add add add add add add xor xor inc add add add add add add imul push add jb jae imul add add xor add add add add add add add or add inc add insb add inc add jae arpl jb imul imul add add inc add insb add and data16 insb add add add xor pop add add jb outsl add add je dec add insl add add add ja jae arpl je jb insb add add add or add push add outsl add add je push add jb jae imul add xor add add add add add add add add add add popa add add jo jns jb imul je add pop dec add addr16 bound and (bad) mov pop int jbe jg sub imul add add add add outsl add insl add outsb add add add jae arpl je jb insb add add js add add add add add popa add inc add insb add dec add data16 add add and add add push add popa add jae insb add je imul add add add mov fs add js insb and jb imul xor and arpl imul inc sub je outsb fs insb outsl outsb gs and ds jae gs bound js insb outsb jae and outsb cmp push sub outsl jae data16 arpl cmp insl jbe,pn and insl popa outsb imul jb imul xor ds jae gs bound fs je je and insl gs jo and jo outsl arpl jae jb jb push je jb cmp and jbe jb imul xor xor xor and gs xor and ds gs outsb fs arpl cmp gs outsb fs je jae gs bound cmp jae gs bound fs je je and gs xor and outsb popa insl gs jb jae data16 push imul inc outsl insl insl outsl outsb sub jb insb jae and jb imul xor xor xor and outsl arpl jae jb jb push je jb cmp and jo bound dec gs outsl imul and xor xor xor arpl xor and addr16 addr16 das ds fs outsb fs je jae gs bound cmp fs outsb fs arpl cmp popa jae gs bound push inc inc fs adc jno adc lock add jle adc clc mov add mov adc xchg mov adc mov mov add lods mov adc mov mov add (bad) mov adc sarb adc fnstsw adc jmp mov add repz adc add adc or adc add add adc add sbb add sub add dec mov adc ds adc add add insb mov add mov add add add add add add add add add add add add add add add add addb add inc inc push inc push dec xor cs insb add dec inc push dec xor cs insb add insl fs xor cs insb add dec xor cs insb add push dec inc dec xor cs dec dec add xor cs insb add inc inc push push xor cs insb add push inc push dec xor cs insb add inc dec dec xor cs insb add inc push xor cs insb add dec dec dec inc push cs insb add dec dec dec cs insb add dec push push dec dec dec cs push push add xor xor fs insb add add push gs jo outsb dec gs add add outsl outsl jae inc outsl insb outsl jb add inc jae popa jo add inc js je jb arpl jae add inc gs jb arpl fs jae add dec outsl popa fs imul add push imul jb je arpl dec insb gs outsb imul add add jae popa outsb addr16 jo add push push js arpl gs add add je inc add add je jb gs jo outsb inc add add jbe dec jne dec jo outsb add add outsb push jb outsb je jb idiv (bad) pushl rol push mov call mov pop ret mov mov test jne pushl je cmpb je dec ret adc or cmpb inc ret test mov add mov cmp jne or je cmp and in sbb call lcall lsl ret jne sti (bad) jmp shl jge je mov inc jle inc push jmp add aam outsl dec in lret les (bad) mov lret test inc test sbb mov (bad) (bad) (bad) jle rolb lock call out mov dec test jo push je into in dec lea sub ret or std cld aaa clc lcall es inc shl sub lea push movl pushl add push pop add pop add dec jne pushl (bad) or add clc pop lea push lea or mov movsb dec cmp pop add fisubr in adc push or mov (bad) stc or inc add rcrl mov add mov (bad) je push int dec leave sti out pop mov dec add sub sub test add ficomp fist inc subl jbe aaa daa mov clc mov xchg sarb pop cld xchg cmpl test jl and cli movsl xor pop mov clc push jg dec pop repz adc (bad) hlt push clc nop or inc jno xchg fbld mov test add cmp lock mov test jne mov shll add sbbl push stos lret xor in arpl cld add pop sahf sbb test fwait sbb or push hlt add and add lock lock push mov add and out mov cmp andl inc add loopne and and cmp inc jg lds hlt fnstcw imul (bad) data16 incb fldcw fistpll insl (bad) cmpsb mov push clc adc mov and clc xchg or imul jno mov xor loopne push lds (bad) enter fildl xchg mov mov call xor cld nop lea inc xor push loopne cs sub xchg cmpsb xchg cmpsb add and dec sub pop and push iret inc pop jno pop fildll out sbb and xor (bad) clc pusha je cmp pop test and psllq fdiv mov out jmp or push mov jbe push dec adc adcl aad imul loopne xchg push jge sahf enter adc cmpsl (bad) dec jbe push adc mov push dec fsubl clc call push andb or stos rcll push daa nop (bad) ss scas mul dec xor xor add imul div hlt inc adc push lock bnd inc jp sbb pop imul pop add add adc push dec in mov cmpsb daa add push push push push push pop testb jne cmpsb (bad) sub cmp add adc adc mov jo dec jns adcb mov stos in cs (bad) xor clc scas push add xor ss std mov clc hlt pushl clc mov test jecxz jb dec sub in in stos adc call cltd xchg call nop mov clc stos sbb inc mov and lds xor pop inc addb jmp adc xchg cmp push add or and jno inc stos push test mov rcrl inc sub xor push repnz rorl add pop (bad) dec pushl scas add cmc ret push leave aas cmp xor icebp sbb mov fdivr mov int stos add adc push adc push outsb or ss lret adc test pop rcr outsb push inc sbb or pop lods or adc pop dec jne fcmovnu int (bad) mov btrl push (bad) fcomps mov cld push cmp jg push push mov or cmpsl aaa xchg pop pop cmp jl add pop movsl and rorb pop jmp bound push dec dec jae bound popf mov pop add loopne add jns jge js mov adc outsl add push xchg xchg outsl lock test (bad) sbb mov imul rcl mov mov dec cmp xchg rcl xchg loopne test xlat sub sbb sahf add pop pop push adc add inc mov or add push xor (bad) fld (bad) je add mov icebp lock jmp push add push movsl movl out (bad) inc jp or xor je dec and movsl mov movsb dec jne mov sub cltd adc add pop push push jl inc xchg and in mov adc push xchg xorb pop mov pop xchg (bad) fmuls ftst fnstsw test je fnstenv outsb hlt loopne sbb pop jecxz add xor fidivrl fdivl loopne rolb push sarl cld cmovg movsl jbe pusha cld xor es data16 cs add push add aam cmp inc add dec sub mov jae es mov int3 cwtl shlb add int3 add cs test jne mov add jge lea stos adc and and adc in out scas loopne mov cld xchg push stos cld pop mov or mov and fstpl popa dec xor lods xchg push aas pop (bad) xor in hlt loopne iret test loopne xchg add xor pop adc adc sbb push mov jge sbb aad add or sbb jecxz mov adc rorl sub inc adc sbb loopne push push cmp sbbl (bad) mov pop sbb jae fabs lds pop xchg xor rorl adc imul aad frstor or cmp add inc mov add push push inc xchg mov inc fwait pushf cld sub jecxz call and shlb fiadd nop shrb clc in dec mov and sbb mov (bad) cmp sbb xor sti pusha or adc sub leave cld mov sbb jo outsl inc push out sarl test incl push pop pop test jns push outsl xchg outsl sub lds inc stos sbb push inc adc sbb or and xchg pop jge add or es push mov mov inc mov or or rcl icebp xor mov sbb or insb cmp loop and xorl inc adc inc and in fs sub dec dec dec push enter add push jbe and out pop dec pop ret dec cmp ss leave sti and mov sbb sbb cli movsl add adc push mov pop in push (bad) rclb scas fucom lea or pusha pop imul mov mov in aad lods mov and leave hlt hlt jge mov fstl xor push lock and loopne and sarb jl sbb inc and mov rcrb leave mov adc test je push fsub pusha sti in gs push push pop pop dec rep jl aaa jne movsl and cltd test (bad) (bad) mov xor subl xor loopne popf cmp ret mov dec adc add test mov push ss fucom mov leave push mov cwtl xchg jecxz cmc insb dec jo andl sub add js out fstpt sti je repz add cmpsl mov or (bad) lahf add inc pushf inc dec cmp mov mov pop mov and sbb xor clc adc clc sti aas fisttpl (bad) mov int3 xor jle mov scas rcrl mov sub ficomp xor fist clc sbb xor jne pop in xor xchg mov add out pop ficom inc (bad) je push popf dec jmp xor or jl pop adc add inc mov stos addl xlat add pop and andb (bad) arpl movsb cmp in lock fs sub lock sbb dec dec hlt clc lahf loop test sub cltd jge ja adc add nop cmpsb mov add int stos adc dec or mov test dec jge and arpl and ret sub push xchg adc jl jle sub sbb stos adcb lea xchg push notb hlt fistl inc adc cmp gs ljmp test fcoms leave mov fcomp aam jmp add repz aaa sub jmp scas repnz xchg or or adc inc pop sub out clc mov sbb popf or daa jb sti cld xchg jmp cmp adc cmp mov (bad) jne mov in and insl and or (bad) stos adc sarl ret push mov lods lcall stos adc vsqrtsd pop xor sub sbb dec inc pop test sbb xchg call pop xchg sub test in jbe imul pusha icebp push mov pushf or mov cs shrl jmp or and adc pop adc shr cli adc xchg push lock insb test enter clc mov inc jno pop inc and mov jl jo adc ret pop push shr test or lock (bad) and loopne sbb cmp and test push inc lods (bad) sub fisubr rclb or jmp mov out add add or and sbb cmp or dec int fsubl sbb or rorb pop add xorb sub cmc add xor sub in push push mov popf leave push daa in xchg pusha mov in pop (bad) inc add movb repnz xor fcomp push add (bad) cs add subl jmp sub xlat add fcomi rcl dec loope pop add jecxz xorl xchg arpl in add mov in orl cmp jbe pop add add je aaa pop or push loopne xor adc mov repz and or sbb inc xchg sub fwait or leave adc add lods jo jo xchg push add xchg dec clc cld sub sub and or xchg cmp jge andl adc ja and add and xor inc or sub (bad) cmp cs addb sbbl dec dec and inc roll mov sahf minps push add fcmovnb test xor push inc sbb xchg mov or and dec dec (bad) xor mov push (bad) lock cld fninit push cmp push je xchg xchg mov jmp jb or cs fs jl pop sbb jae int3 add inc or lcall push je add cmp ja pop jbe test ja push aas orb push mov or (bad) repnz adc and pop not mov add add or cmpsl sub jle dec cld mov ret arpl mov in aaa je adc je cmp or cmpsb sbb popl (bad) push popa add dec jnp or rorb xor sub (bad) out cmp shrl aad push loop pop mov idivb xchg add das mov je lret je or or xchg add add sarb je out adc clc sub push mov adc insb sub xor mov or add mov inc lea fldl fcompl (bad) or out rclb inc outsb fcoms cmpsl out mov frstor cld lods mov pop cmp mov adc jne and pop sbb sub inc or fstpl lahf lret aas xchg out fimull je push mov mov add call je dec jne xor jmp or add or fsubrs jecxz adc bound aas or pusha cmp push push and pop dec mov push (bad) fs mov jl sbb stos xchg (bad) mov (bad) jo inc out imul pop sub xor jl or sbb jmp sbb iret les cs in mov or dec pusha cmp js mov lcall push add add sbb jle jae adc rolb add sub sbb cmpsb mov push outsb js push jbe inc sarl or insl lock cs jmp in call int3 push and xor xor push push (bad) inc pusha mov outsb scas inc jmp sbb adc lds pop jbe sbb mov cmp or dec pop (bad) ljmp pushf push add mov inc and add in and pop fldl das popa in dec test pushf sbb enter gs fldt mov scas into (bad) je mov xor aas push add jg stos sub rep add ret movsb xor pusha cmp jle rcll mov cmp pop mov mov mov xor or pop orl fist icebp sub add lret or pop push sahf fistl je mov push sbb jg jg dec js cmp jge sarb lea cmp jle sub adc adc sub sub pop adc sbb push ja push push push insb je and call (bad) push xlat (bad) dec mov mov js adc xor dec sbb mov dec inc setl dec and push and sbb jg (bad) sub sub (bad) jl push sub sbb lock mov dec out mov jg,pn or lock mov push out xlat push stc stc mov dec sbb out ret jne xchg jle pop jecxz out push lock pop stos pop out idivl ret dec addb rcll push testb cld or (bad) cmp pop mov xlat jg (bad) fiaddl push jmp mov mov into repz loopne sbb jne inc das psubsb inc mov movsb pop xchg mov insb sub add sub jge pop cld sbb sbb inc sbb xor dec leave aam aas jl aas add push fwait scas push push mov and mov xchg xor stos mull dec push xor and mov or lahf frstor cmp pop push push pop jl test notb cwtl sbb fistpll or jp pop sub mov jmp test or dec add jnp push inc adc jmp cmpsl and movsl popf je sahf inc pop (bad) hlt rorl sub lea mov imul pop push and fcomps loopne xor imul lods cmp ss inc pop sbb or jno and fs pop loope dec repz or movl and pop inc sbb daa cld test mov insl xchg movsl or lea cmp dec ret ja enter mov (bad) test cmpsl inc push dec repz ja inc sahf and push mov hlt sub gs sbb add mov (bad) imull imul mov daa ret add push add pop popa sub fisttpll xchg out addb fldz adc hlt outsl imul rcrl dec fstpl pushf scas in sbb (bad) push lds adc inc popf xor push pushf sbb add (bad) fcmovu and (bad) mov lea sbbb cmp xor pop repz cmc jne cmp adc xchg adc pop cwtl arpl xchg xor test mov sbb stos cmp adc ret cmp pop push jl cmpb push test mov daa pop aam roll push sbb mov jbe xor ds and cmp pop leave aas cmp xor jle pop mov mov leavew test jmp xor cmpsb mov (bad) mov pusha push inc cmp inc and aas push dec fnsave insb add enter mov addl faddl adc xchg xchg mov xor sbb std dec pop loope lock jne add pop mov mov (bad) sahf fiadd sub sub add (bad) aaa rcrl push inc rolb (bad) and mov or loopne sub jle ds push sbb sbbb or adc imul xor mov imul adc rorb jmp pop pusha pushf ret (bad) je inc cmp cmp xor cmp (bad) mov xchg ret sbb mov xor movsl mov mov sbb jecxz scas mov sbb test test (bad) je mov push fist cmp int jo jge (bad) push cmpl popf iret add sub cmp or sbb repnz mov jo adc aad fild mov mov dec repz mov sub ja push call add sub cmp stos je dec mov je jmp mov lahf mov jl sbb adc mov jecxz inc dec jmp push or sbb sbb outsl aas add push jo test jmp push lea mov dec add test and test sub push cmp push in pop fbstp xor call fild clc fnstcw pop xor xchg sbb sbb sbb sub mov jge imul ficompl jmp cmp pop add xor cmp sti or movsl shll or push out add lods loope sbb sbb xor outsb pop sub pop xor cmp cmp fs mov (bad) mov into mov mov mov scas movb jmp loope rep adc add add adc fistpll loopne mov repnz add pop cld mov aas cmp xor cmp mov insl pop jno sbb mov xchg jno stc int3 addr16 sbb mov add jmp sub adc or pop pop lcall inc pushf ror ret and and cpuid imul mov mov push mov lea sub add sbb sbbb in jecxz and push push push stos pop lock xlat icebp inc mov fs sub add insb jl and adc fstps jg or lcall push sbb dec jno push mov daa adc cmp jge call mov push adc rcll inc inc icebp (bad) push loope pop or sub jle lea push jno push jecxz dec (bad) je hlt push inc cmp sub or data16 mov add into pop jge or lret in cli in or je xor sbb xchg inc rorb mov or movswl mov push push and mov push push xchg (bad) (bad) mov in pushw cmp in enter or loopne push mov mov and or stos mov pop fs test sahf inc fs addr16 xor push jne mov and or dec mov sbb mov sub mov inc je imul push push outsb ret inc call push aam jne out jl push fs je aaa adc pop or pop (bad) dec lods loop cs mov int3 add push add roll mov dec fsubr push pop sbb add inc add test adc mov push sub sbb fild add sbbl or or lret mov adc sbb pushf ror push dec mov jg bound adc out scas pop or push dec pop or xchg aaa adc out enter cwtl test loope cwtl mov and call push add jmp add enter or sub iret lahf in and xchg add sar jnp repnz leave cltd adc add push xor pop xor dec add pop fsubrp push adc imul push cs out mov or insb aas in jbe xor std add add fstpl inc xor or lods test sbb xor or adc adc pop or out push cmp (bad) or adc sbb mov fimul (bad) icebp add pop xchg ret dec inc adc and mov fcoms sbb sub daa ss scas xor or mov cmp loopne sub push test xchg ret and inc test cmp je je add adc pop jl sbb scas les sti adc mov enter and add xlat mov mov movsb les (bad) aad xchg jge lock out cmpb testl call fs fstps (bad) movsb and les adc push add incl aaa jp cmp jge lea add lock add mov test jle push push jo imul push dec into sub icebp sbb imul fsub push mov mov pop sbb cli xchg sarb ret pusha inc sub jae pusha stos les stos rcll adc in push cmp push test int jo sbb pop mov jne sbb sbb fnstsw mov push jg sti sahf clc arpl add sub decl add scas sub bound jmp mov adc adc xor or mov mov xor mov or jmp and add mov push lret push ret jp (bad) mov lds sbb lock repz lret push xor and xchg dec insb push xchg xor out (bad) punpcklbw push push fwait add mov or add sub sbb push push pushf into call sub pop lods faddl mov and (bad) loop cmc je lods movsb pop mov push imul sub mov idivb xor sub iret xor out je push push sbb sahf out inc inc dec dec out shr pop and and cmp push push push jne insb push into mov outsl jl (bad) adc push sbb pushw xor mov push adc xchg mov mov sub nop addl dec fucomi jno hlt shr es add sbb push sub incb popa xlat push (bad) mov ljmp xor ja hlt cmp in shrl movsb sbb push push popf in push divl push pop mov adc movsl adc xchg jne push cmpsl sbb outsl jnp mov rcrl std sub dec or sahf js jp and xor inc xor mov sub das fdivr pusha push push push int3 xor push mov daa js pop push add push xor pop mov inc push pusha hlt sbb dec xor test ja subl or or adc xor jne inc (bad) push or aad sahf fdivs je or push cmp push sub stos aam push dec and iretw jmp lods cmp dec pop mov pusha jmp cmp pop and push imul cmp pop xor sub cmp push lcall push add je rcr fcompl daa and adc pop pop ret adc scas popw push sbb xchg mov icebp dec inc stos hlt jge movl js xchg pop cmp mov sub add xchg xor mov inc adc pusha or pop aas xor mov int3 mov call movb adc jmp (bad) mov sti test inc dec dec pop sbb push mov out sbb and mov aaa mov push rcrl add push int3 jmp push add push (bad) (bad) pop xor mov adc arpl pusha lock mov add push pop ret test xchg or jle jg sbb add adc fsubs cmpsb add test (bad) cmp adc pop cmp adc pop mov sbb sbb push ljmp (bad) lahf jle ret jne cmp mov aas je pusha mov push push push dec fs imull add mov inc mov sub or dec or jno out outsl lods adc lock mov sub inc fidivrl sbb in mov push enter pop jne or dec lock inc lcall outsb push popa sub mov jne mov pop jnp inc or push (bad) lcall push insb sub lea cmp jb add aas inc mov pop mov sti or jl cmp or int stc add jg cld sub jbe push jne lea jae mov test cmp lahf adc cmp jge xor idiv and movsl mov movsb cmp push cmp pop daa adc loope js sbb or mov push push ret mov hlt jle or push shl push cmpsl xor js imul or je mov inc clc jb lea cli jae mov pop sub sub cltd and sar sbb xor or das mov fcomps jo push or rolb (bad) std inc mov add xor xor add jmpw push test sarb fisubrl lock mov mov sahf xchg in fild sbb dec push fs fildl sbb sar xor pop inc or push or or mov loop rorl adc pop mov or stc or shrb xchg and sub adc enter or mov dec aaa mov mov mov jle push pop jo lods dec push inc sub iret das inc ja (bad) outsl inc dec sub jbe sub cwtl push dec call cmp sbb test mov jle push popa inc into ficom push fwait ss (bad) add clc lahf cld rcll fsts dec loopne push jecxz pushf mov jnp (bad) not or stos and add lock jl jg test out cmpsl xorb xor dec lock je adc lret dec jns push aaa add cmp je lret daa xor (bad) (bad) nop loope inc or nop ret push mov dec lret addr16 test cmovo mov int3 dec sub in mov mov jg enter xchg or and lahf xor imul in roll ret xor mov scas push mov je sub cmp pusha lock aam dec adc neg mov sbb (bad) js xchg mov cmp aam cmc icebp push orl sub sbb call adcl lret (bad) dec cmpsb ret or push pushl pop push mov mov scas jb adc push fisubl pop pop inc pop push or add cmp jne icebp push pop lock adc clc movb fldt xor push pop lea mov lcall jge sub lea stos sub fcompl jmp outsl xor push nop push add iret pop insl sbb sub adc imul lea jmp push cwtl loope sarb leave push je sarb cmp mov sbb flds cwtl popl cli jns mov cmp push jecxz jge inc or mov ja das push dec shrb ret dec fsubrs ret sbbl cmp movsb mov std push inc test cmpsl xchg push push fdiv cmc popf in inc add mov push scas loopne insb dec cs inc jmp mov fsubl xchg jge inc (bad) adc push add push push inc in xor mov and push push inc push mov sub push or pop fdivrl mov repnz jne and lds mov sarb jae int push (bad) icebp icebp jno iret adc rol stos inc or (bad) mov jge fidivrl mov sub cmp jge sub mov popa cmp or sbb xor scas pushf fsts adc pop push sub bound fcoms into or mov push (bad) clc int3 arpl daa fnstsw out or adcl push mov jmp addl pop (bad) cmp sti push mov add stos movw inc daa add ret mov dec adc adc cmp test dec or xor inc or mov jle fmuls add enter pop push push jbe or aam rolb or xchg adc dec or lds inc lahf mov cmp lahf mov cwtl push js sbb pop into push aaa jne sub movsb xchg sub or dec movl xor push cmp sub xor and sahf mov mov push jp cmp minps fwait mov clc es fwait push push call cs push adc int fadds mov jns iret xor push cmp stos pop fidiv insb mov inc je inc sahf add add jnp and xor cmp mov jo xor insb push iret push dec add enter popf mov std decl mov lahf xchg cmp push push push sbb sub inc xchg xor xchg sbb cmp xor or cmp shrl mov testb js gs xor mov cmovbe xlat mov test add pop mov adc or xor loope jp push mov out mov pop daa add sub sub add cli add mov jne pop adc mov js ret ret add cmp aam decl test int3 add mov cmp sub test inc and add mov mov jle dec push push vsqrtss cwtl in repz sarl sbb sti sub leave mov lret repnz or mov adc and jne add lds ljmp adc cmpsl scas in jo add pop aaa sbb xor lods sub adc fstpt fistp push push push testl pop je sbb lock lea and cmp je inc jmp lea loopne nopl ret pop andl bound (bad) add rcrb cmpsl push jb pop repnz adc jnp push cs int3 push jnp inc push and mov fs mov (bad) mov jno int scas push orl push jne cld ss sbbb add add insb mov or or xchg adc adcl xchg xor mov jb xchg sub inc inc xor push dec mov call or mov push sub cs cmp dec jg addl mov into ds shr sbb aam sub in movsl xchg jle mov jo imul or sbb push bnd jge addb fwait in test imul (bad) pop test jge add mov mov scas mov adc mov insl cmp inc sub cmp loop push mov mov push pop cmc mov xor xchg das or mov sbb cld xchg fsubp dec sbb mov call mov xchg mov or insb or repnz pushf adc imull dec dec and mov lea mov jo je pop cwtl test adc inc inc mov cmp jg mov dec lea (bad) push inc push out xor ljmp out mov add pushf stos pop mov shl pop dec call (bad) sti mov fmull push jno and mov add in or add lods (bad) das adc in jg mov cwtl adc xor aaa mov push push mov cmp jne fild push mov pop push sbb insb add fcompl mov add (bad) fdivr or pop jne cmc insl fcompl leave push (bad) adc push aam cmp sbb pop das in fsubrs jl push movb subl cmpsb mov sbb push shrb mov sbb nop sbb iret popf test sahf or das dec popf push lods adc rdmsr dec mov sbb or dec dec fsub adc sub sub or sbb (bad) xchg or jge into push push es stos push inc lds pusha sbb adc sar add shr cmp into test mov pop insb xor mov andl xor (bad) inc xlat add insl ret cmp lods cs lahf add sbb or or fiaddl fucomip arpl or lock (bad) or push mov shrl dec xor mov cli inc out cmpsl inc jbe adc jnp adc bound add insb sbb xor add imul sub (bad) (bad) fstpl jle clc add mov mov sahf fstl add mov adc mov popa sub inc loopne push (bad) out sbb (bad) add jnp xchg push fmuls pop inc mov mov add dec lahf sub or andl xchg sbb push ret rcrl arpl add or outsl (bad) and add cli add xchg roll xchg cwtl xor pushf fdivrl mov push jmp cld mov popa pop sub fwait test sbb lock or sub ret iret push xchg bound xor adc int3 fcompl sub into movl inc sbb cmp pop push call mov pushf sub add loop jne xchg pusha mov in sub (bad) jne sbb roll out lds int3 push pusha lock pop pop repnz pop push xor xor faddl xchg (bad) lea add sub mov inc lds es movsb cmp push add push mov (bad) cld and dec inc and jmp inc inc pop cmc ret ret fs call jp cmp add push xchg push mov js add data16 jl sbb jle add outsb outsl ds or je jne sub je jne std insb xor jbe fisubr shll or shrl sbb or pop inc fwait rclb das add pusha xor faddl aaa je cmp mov adc jno dec push or cmp aaa push jg mov jnp sbb add jae or xor jmp xor inc pushf jl mov insl adc jg jl js ja das psraw xor setae or enter jg sbb dec xor rorl pop (bad) out push adc insb inc sbb lcall lods jmp mov fstps (bad) pop movsb int3 dec dec lea scas jl jl jnp jnp dec push fstpl jecxz popf ja xor fimull mov adc sub fcompl cmp das mov sbb pop jmp movb fistpll cmpl je aaa push pop jns push jne mov and loope mov je lds dec cmp jmp inc adc cmpsl xorb repz out and inc jb test pusha add and fneni(8087 ret xchg inc inc scas mov mov and cmpl shr xlat repnz push ret cmc mov push out pop lret sub mov adc cmp xchg push loop sbb jnp sub imulb inc dec outsl pop in push sub pop pusha add nop pop inc cs add pop pop roll mov sub stc adc aas popf jo cmpb jmp sbb add adc dec rclb sar test and mov cmp or (bad) cmpsl mov adc jmp adc lret pop push push (bad) dec test rorb cvttps2pi add sbb (bad) cmp rcll mov inc mov jbe sub faddp cmp fcoms mov psllw adc les test ljmp cmp sub fldenv add rcll push rcll lea mov dec or xor xor arpl aaa inc dec repz push faddl icebp rcrl ja negl xchg pop xchg xchg pop cwtl stos je test js and push popf inc lahf dec jecxz sbb das loop insb shr sub push call mov out inc bound popa mov pop out lea xchg js or lea mov inc js push push cmp ret cmp cmp sbb pop js fldl cmpl xchg jo fcomps pusha inc or adc push or pop pop jg nop fildll push popa xor movsb add inc dec mov push sbb cmp cmpsl cmp mov pop xchg cmp pusha lahf cwtl repnz or lcall xor pop push dec xor pop clc add sub ret mov shrd into shrl fiaddl adc orl pop pop ret cmp mov or inc dec jg nop xchg ret lahf enter xor inc rcll dec jo mov ret (bad) dec cmp fdivrl flds push addr16 mov mov jle insl adc sbb cmp in and cmp jo scas and je push loop xchg push mov cmp push sbb pop lods sbb stc xchg xchg mov (bad) movb xchg add adc loopne sub push sbb inc das in js lahf dec and add xchg sub xor nop inc mov jb xchg or pop jp sarb mov nop mov cld pushf outsl mov gs daa cltd mov lock push sbb jne or jns mov daa (bad) bound xor push pop and clc mov (bad) mov add sbb dec pop dec mov (bad) dec test sarb dec jle (bad) jge xchg sbb inc push cmovs sbb sbb cmp popf jmp pop mov dec sti pushf add push mov fist push push mov jl push insl inc push push js push jo fdiv mov add add icebp subl fincstp fdivr pop loopne or dec lods test add mov jb add mov xchg xor add into inc nop or addr16 sahf bound dec cmp out push pop fs push out das mov pop pusha push mov mov add cwtl jb jmp push repnz push daa sub inc cli xchg cmpb cmp ja js and cmpsb (bad) xor fild adc or dec pop dec push je dec lea mov push ljmp cmp shrl cmpl and jle fcoms (bad) aad bound mov pop xchg nop add cs popf sub mov je pop mov pop jle jl xchg int3 je or adc jo out add add lods jo mov je,pn roll mov popa cltd inc lret leave dec icebp les bndldx repnz test and push jl outsb out mov addr16 mov adc fisubr into push cmp adc clc jne jbe pop mov stos movsl cwtl adc pop andl mov fs cmp or rclb call sub jg inc fs scas dec popf lcall jo ret in or sbb andb xchg into add sbb (bad) cmpsl add sub inc test or jmp mov pop inc jnp push and or and or push lods sub inc xor dec test sub or sub dec clc push sbb push push fdivs or jo int cltd xorl mov cmp mov js mov xor mov cmc jb popa and jmp push cmp jae push push push dec inc push pop jae repz dec add push ret add stos (bad) cs push (bad) push add leave repz cmp mov or or call jecxz cmp jl and mov cmp pop mov add dec enter push xor pop hlt mov nop mov push push aam or push cmp pop xorb inc push adc sbb js shrl inc in adcb pushf div add pusha lahf je xchg loopne or fdivs outsb cmc sub sub jl mov mov addr16 mov sahf sub dec or add push cli or mov add jnp js je adc sub adc (bad) clc adc pop call ss lods js scas cmp jl push cmp jle lock fisubrl jl push jl icebp or rclb gs inc fisttpl mov or fcomp jl cli push iret dec jp sbb inc fxch fmul int sbb daa dec gs out add subl dec add in sub jmp ja (bad) adc fmull pushf and pop ret add std jns adc fbld and mov push push insb adc inc cmp jnp jecxz nop fs jg push push push dec cwtl (bad) dec sbb enter test lea cmp jge daa outsl pusha clc and cmp xchg aas xor push add add mov cmp popf fiadd dec jmp je pusha push mov push push jp lods icebp sbb movsl mov mov lret jmp sub adc (bad) or adc mov or inc or lock lea push mov add xlat mov xor imul dec mov jecxz jb je xor or xor dec mov add xor ficompl or rcrl add inc enter enter sbbb dec cmpb add add sub jle inc out repz in into sahf push pop jecxz jg add sbb jae cmp je mov sbb cmp and outsb fdiv sbb aad adc and gs lret adc lahf adc mov sub rcrb push rorb cs add or or pop imul adc je push loope insl stos mov scas xor add fcomps outsl stos (bad) fistpl push push mov pushf fldenv sbb loopne and and aas and mov cmp pop ret fld add xor sub rolb pusha push adc std and dec pop mov ud2 sbb call lea xlat push loopne cmp inc dec push pop mov add xor push push and add sbb add incb xchg roll inc test imul sub mov mov push xor sub enter das or add cld dec and iret dec push divl movsl cli fstps leave and pusha pop and ret imul lds sbb inc xlat aas push jmp aaa push mov pusha mov push xor out aad lea je or jne call jmp or adc push inc imul ret and xchg sahf jl mov cmc into fbstp sub sub push inc (bad) movsl je push push jo adc ret pusha lock icebp sub pushf loopne lahf inc pushf add jge (bad) sub dec loop jge lock push sbb movsl (bad) jmp and sub inc add cs pop leave icebp pop push cmp inc add das sub jle and jmp xchg add push in inc or ret and je arpl jl mov mov push push jmp push (bad) scas or inc mov xchg test inc sub cs adc ss imul add aad mov in addr16 out sar arpl mov xor lret and xchg sbb and sbb push sbb sub jne jmp in cmp mov cmc push mov in sbb fs jmp ret jnp insl push mov inc vucomiss sbb adc jg sub arpl loope rorl sbb push scas pop and sbb adc cmp (bad) xor add cmp inc inc push sub or repnz and pop repnz ret enter cld xchg nop add dec repz mov nop (bad) pop lahf jle jl xchg addr16 mov push push dec pop adc sbb xor orb aaa or (bad) xchg loope jno jle add sbb test mov mov push cmp and adc xor into sbb sbb or cwtl add loope inc je icebp rorb aas sub je adc pop mov mov repnz xor notb rorb push sub add jle and das ds js dec jl push loope sar xor cmovo xchg xor movsl rorb sahf repnz xor sbb dec cmp sub push les cmp pusha mov or mov inc rcll ja mov dec xchg push mov jnp jo in push pop ja clc popf test add jmp mov jmp sub jmp add adc ja jmp add cmp je lcall mov mov sbb adc push push jle (bad) aam shrb add mov (bad) inc rcl mov pop push pop lea mov and insb add dec xor add paddw pop cmc cmp adc cs sahf or adc add cmp xchg mov or sbb and lock or dec xor lahf sbb push imul ret lods mov sbb xor push push out xlat stos mov mov out pop popa insb push push leave int3 mov jns (bad) push and cmp xor rcll cmc add popa pop jns punpckhbw out flds sub in gs aas addb cmp add inc pusha sbbb orb xchg insb or and daa xor loope xor xorb (bad) sbb xchg xchg push mov in jb (bad) pushf sub test and insb xchg (bad) sub or lret loope fnsave pop adc sbb dec rclb or imul mov jbe xchg dec scas mov and mov pop sbbb call sub inc int3 clc fs mov test in mov daa sbb test push xor (bad) dec and cmp push pop inc (bad) mov int3 push popa mov stos add rolb cltd sbbb movsl test cmp mov pushf push dec mov rolb add fucom mov push mov les les aad leave mov clc jg adcl test fistl push ret jne,pt imul sub inc jmp mov push add mov pop enter mov push int pop pop sub es pop pop cld sbb adc jg je leave add push pushf mov dec call nop push pop jnp orb ljmp js lock ljmp fmuls mov mov xor sub push aas dec pop mov xor (bad) (bad) dec cld add cmp xchg dec mov xchg (bad) lcall mov pushf and mov rclb je imul push sub cmp loope orb shrl adc insb and add dec psrad xor fwait adc lock jns out test and pusha add xor jo jno add leave adc and or adc mov in lods xchg (bad) mov xlat cmp imul jge pusha pop xchg push add jno push pop scas xorl outsl mov or ffreep or cmp call inc test mov push push cmp popa jo pop push imul push (bad) es iret and mov mov pusha add sbb push bound popf xchg das push daa lcall push lea jg add cmp jae incl add add sbb mov push push push imul dec out hlt mov lahf fwait test mov jecxz (bad) cwtl pop data16 add xlat dec dec push data16 sti dec xor aas push xorl and cmp aas push jne dec xchg mov inc mov je imul push jns stos dec push push aas pop dec mov push stos arpl add test lods mov into cmc or or dec lock fwait rorl out test je push mov dec push rcll fistp mov iret jle and pushf adc pop add jne sbb sbb loope sbb mov push pop cmp stos add jnp sbb add or fcmovnb aas jbe jb pushf sbb lcall (bad) les (bad) (bad) ljmp mov xchg pushf popa enter jg lods clc and add stc pop xor addr16 pop jg xchg fcoml adc and xor adc daa sub ljmp cmp fdivr test pusha jle inc jo cmp or inc jecxz jle loope add fdivrp stos pop ret pusha or mov dec aaa cmc inc dec or mov mov push pop mov push sbb jl lea shll comiss mov in sub xchg xchg jb lock xor push jl xor and gs roll bound push std or adc mov movsb test (bad) mov fldt xchg dec and and bound or mov data16 pop leave jg adc dec js mov fiadd out mov jne mov push or (bad) or cmp jne or push jnp add repz and or sarl add cmp (bad) aaa mov adc xchg or cli sub fistp jo enter pop inc cwtl dec push adc cld adc push shll shrl movsl pop xchg add inc or lcall adc repnz sbb pop add inc xor clc add mov inc mov or dec dec lea mov jne jg addr16 cld rorl sbb cmpsl (bad) adc mov mov inc push iret xor push dec insb call xchg add (bad) and xchg sbb xchg adc cmp xchg push add addb sbb pushf lret int3 inc jnp aaa test xor pop je clc into xor push (bad) out mov int3 into repnz push mov push dec inc xchg shl fistpll add jmp lea fist or sub push lock push jb out or jae push add popf mov movsb fdivs rcr lahf ret jns cmc mov test add lds lahf dec mov mov in cmp push repnz add inc mov and dec add lahf xchg push pop or aad push push xor sbb push rcl xor je mov clc or (bad) sbb sub sub xor loop inc and mov pop cmpsb mov add mov push loop lea je or mov cltd adc addr16 cmp adc cmpl sbb mov mov rolb dec outsb inc xorb out iret inc inc pushf pushf add jae adc clc xchg test and les xchg inc inc lock add or pop sbb add pop cli cltd test sbb (bad) pushf xchg sub clc pop pop fstpt push mov dec dec fisttpl and sti mov xchg dec clc push popf ret and push dec (bad) adc push add xor lahf add stc inc mov mov (bad) test jg sub jle push or inc xor and mov mov es add movl dec add inc push sahf jmp jae insl cmp xchg adc add hlt sub movsb cltd add add mov popl test enter orb movsb enter cmp aas rolb pop mov cmp adc add rcrb mov adc xor or icebp add stos jae pop arpl movsb test and imul arpl sub mov inc pop insb xchg dec fnstsw jo pushf in stos mov (bad) add xchg xchg rorl dec ja add sub cmp xor xchg mov stc lahf xchg add sbbl or dec xor mov in pop push jb int pushf lahf in mov pop in add pusha dec sub and outsb xchg xor jecxz test jmp sbb add jae cmp loope add push push mov cltd dec jp lods lock mov scas pop or adc orl adc push lock imul sbb push push or or rcll cmpsl ret push sub mov scas add mov pop cmc aam mov mov add jae cmp in aas pushf mov imul pushf mov mov mov roll pop sbb sub pusha and xchg push mov and or and mov and enter jb adc push push mov xor in mov mov pusha mov pop stc flds loopne fmulp mov cltd adc pop xlat push adc movl and es mov mov cmp and inc std xor test jle add lods lcall inc cmp jl pop mov adc and push sub int lods out mov cmp fnsave sahf inc adc movsl xor inc cmp jmp or mov fwait mov mov shr out call sbb and cmp jl dec add int3 sbb jne pop stos or xlat jo popa je mov dec and add test mov stos or adc sahf leave pop jl loope mov lods pop push cmp pop dec add inc cmp jl push mov jl jecxz mov xor js jle adc xchg dec fcoml mov fdivs mov dec adc jmp neg sbb xor and or mov loop add pop inc cmp jl add outsb inc out inc xchg mov or cwtl push sub jbe cwtl pop popf jbe adc jne lock push out push mov mov sub cmp mov dec movsl add jne (bad) fldcw dec jmp nop adc jb mov inc add add (bad) jg mov mov push mov call mov int3 jle lahf jl sbb cmp adc mov sti mov mov mov sti mov andb add movl cltd mov or fs je insb jo je pop test mov sbb test enter mov mov cmp rol mov cmc add into add movsl shlb movsl sarb or jns dec call dec lock idiv stc dec aam cmpsb fist dec and frstor pop mov push mov arpl dec push dec dec bound sub adc push dec sub mov nop dec cmc cmp pop mov test xor xchg mov dec adc inc mov repnz test mov and rolb xchg stos jb clc or mov push (bad) fsubr push jl and adc movsl (bad) rolb or and leave int3 mov popa push jecxz pop cmc pop adc push notb jo into push aad mov subl mov sbb jb and movsb dec cli or dec dec inc and cmp cmpsl mov jb xchg or in addl mov add dec fcoml fdivrp or push das jbe sub sub aas push or or add cmp jmp add lock sarb cs xchg cmp fistpll xchg mov add dec out daa adc fistl xchg hlt sbb lea push pop and (bad) decl add dec and flds or movsb (bad) dec or jb call repz mov inc push pop add push outsl in push jmp cld inc dec clc dec popf roll jl jo insb into arpl in sub add dec and scas cmp jge xor movsl and js sbb nop cmp xchg je mov mov mov das or mov mov sub sub xor sub loopne push mov mov cmp adc in cmp es insl imul push hlt and sbb popa js add and and insb mov pop outsl aas dec mov int3 sbb cmp xor xorl dec xchg or popa push fcomps pop push popa push test xchg jle or sbb lea test sahf mov arpl cmpsl sub dec fs xchg or jecxz dec inc push sahf mov enter lock fs add push mov pop (bad) ret sub jl rclb xchg sbb xchg decl dec xor add mov jb cmp in pop push lahf jo aam sbb lock mov fs je je add mov ret jg push je sub outsb (bad) gs rol call cltd jnp loop call adc mov xchg and xor add pop and inc sbb pop pop aas stc and adc je dec bnd xlat add gs sbb dec jmp jo lock adc sbb dec cmp and sub sbbl int lock mov mov std aaa xchg mov sub cmp jge mov xor popf mov (bad) xor push scas pop (bad) sbb push pop push push push je fs enter and dec into push sahf out xchg lahf mov and cmp and dec jns cmp fcoms pop inc or mov sub jle test repz mov xchg xchg lods stc dec and push (bad) (bad) xor cwtl xchg or ljmp push jo xchg dec or dec lcall stos dec lret nop push mov mov inc stos dec mov repz and leave je shll sbb lods push fbld push stos sub inc cmp and test mov insl pop aad add sbb pop inc push mov ret or (bad) cli push jo inc xor cmp fisttpl inc sub xlat cmp and movl sbb add call dec pop fidivrl test jmp in (bad) mov cmpb faddl gs pusha or pop lock cli rclb out cmp sbb sbb or je gs push push lahf sub jo pusha and mov jg out loope mov cli sub fsubrs sbbl jno mov enter push lret icebp sbb add add push loope fcompl xchg fiadd imul push int3 cmc sub or repz lock xor movsl push dec xchg cmp sub js mov inc outsl sahf (bad) int3 gs push and cwtl aam fisttp call adc shrb mov jle and cmp aaa push adc mov sub je (bad) (bad) jge sub sbb or loopne pop mov sti mov ljmp fnsave jge clc cmp add mov xlat std sub adc sbb dec movsl sarb and sub sub cmp inc mov jle dec jle dec enter push push pop pop stos pop ds pusha cmc sbb push sahf pop movsl insb jo je jbe xchg scas repnz js or sub in jle inc mov test mov movsb test mov inc inc inc or out push jg inc inc sub push xchg dec in loopne mov mov and jmp sub fsub in mov lock fmull clc cld add je jg jmp mov sub sbb and test xor cmp inc dec test push push pop lret outsl movsb push pop pusha fs adc xchg push movsl push mov test mov push sub movsl push mov add mov aas adc test insb test dec add jmp pop and std push adc mov dec adc jo test divl into dec and jns mov fiadd cltd dec push add jl test fisub or (bad) in or dec lea or add xchg inc add aad jnp popf popf xor cs fs push add rorl dec jl rorb pop shrb je mov mov (bad) dec xor sahf ror push jae jl mov dec cmp pushf mov ret mov sbb jge fisttp js cmp aaa sbbl jg fldl inc mov or adc data16 mov mov movl or add int sahf mov mov mov (bad) pop mov add xchg mov mov test dec ja pushl add (bad) push lcall gs mov je push ja lahf cmp xchg sbb and push das js sub imul xchg xchg fs add push jo sub pop pop push xchg push and jae mov je das adc std mov jle cmpb xchg push adcb mov test ljmp inc or adc dec push push xchg or orb rcrb dec in cmp je stc nop notb inc inc addl and push sbb arpl add (bad) and (bad) sub jo mov cmp (bad) je push xchg scas (bad) inc ja inc clc clc rcrl adc push xchg cmp imul scas dec rolb push jecxz je adc mov push dec cmp mov out push push into and add pop fist mov cmc jne push jne aad iret xor aad ror jno and dec xlat adc adc cvtps2pd mov adc pop ja in gs cmpsb sbb incb into lea sahf pop cltd cmp mov aas cmp dec dec stos push cmpb cld daa pusha and dec movsl adc adc sbb inc ud1 or pop ret mov dec add dec icebp adc data16 je int3 add je adc mov cmc inc mov sbb dec inc dec es shrb pop add call dec jo dec rcrb cmp lock pusha jbe mov loope and add inc sub sti jle mov pop or cmp imul popa cmpsb mov or bound push loopne and jmp and or (bad) in out push sbb dec xchg push jmp push push (bad) mov push imul (bad) sbb or xor mov xor fdivrs movsl orl imul or or loop mov pop pop sbb inc test xlat jnp jmp aad jmp push sti pusha pop (bad) mov adc enter dec mov loop sbbb je test and les mov loop lods cmp stc mov jb cltd popa ret push add daa xchg cmc sbb dec popa outsl xorl pushl test pop or rorb add sub fmull test push jno jns les leave push pop add push pop push adc cmp adc sarb mov mov pusha and lahf push add aas push add add jnp dec nop arpl cmp js inc ja out cmpl cmp adc enter xor rclb test push jl push add arpl scas (bad) clc scas or xchg jno lods ljmp enter dec shrb subl lahf pop push mov or pop call pop jmp cmp dec sahf lret nop roll push mov call insl inc xchg or pop cmp jl rol xchg arpl xlat das add mov incl adc adc sbb mov mov adc sbb xor nop fwait (bad) leave jne mov aad movsl push dec inc (bad) pop add xchg ret add enter pop mov jl gs lcall or enter clc outsl ret jg pop and aas adc pop cs loop ret fstpt pop insl add bound ffree pop push dec cmpsl ss loop push xor mov push push push ret in sbb pop imul adc fdivrl push mov sarl mov cwtl nop dec cmp sub adc adc dec push push push out sbb xchg mov or pop xor push mov dec lret stos imul jb cmpsl push dec lods dec lea jecxz xor fsubl add imul rolb lock pop cmp and jbe pop or mov jl jo push dec pop pop or std sub jne pop inc push lret stos pusha push lahf push (bad) or or aam mov inc das push mov bound add aaa insb adc push movsl push inc aas nop jl sti cltd inc jo mov adc push or call cmc pop mov jmp push sub cmp jge mov dec aam adc loopne or jnp popf or add add mov outsb mov mov sbb (bad) cmp mov push pop or leave jle lods loope fistl adc push xchg push insl pushf dec shr les or pop inc dec jo dec and stc cmp push or lea call add push pop push adc mov lret hlt int3 arpl inc adc leave add adc fmuls mov lea lock cmc add push push lea mov shrb das or add dec sub add xchg lea jecxz add or call iret push sub add mov sbb add jl push push roll ja add inc push (bad) adc xor cld jbe dec fimull adc fbstp pop push nop cmp sbb sub ret sbb fistpl jle push sbb add push sub jo fimul cmp mov mov mov push push and inc mov pop dec mov leave enter sahf pop inc mov and leave das inc or sbb mov test push adc push stc test notl or pop pop out pop jmp aad loope,pn lcall and rol sbb outsl test pushf dec (bad) lret fstpl inc push mov inc add movsl dec push mov lock adc std shl in add es fstl scas and add std jns pop xchg and lret mov sub lds sub lahf iret lods mov insb sub int dec mov cmp mov dec pop fisttp add adc pop add notb repnz fistpl in or fimul insl add lret mov fmull popf adc arpl push or pushw add sub cwtl push adc and inc cmp mov push sbb pop insb push xor imul sbb call mov xchg cmp xchg lahf jbe sub jge push movsb mov negb loopne in pop add stos mov out pop add (bad) call jmp add xor ja addl inc xchg jnp test sti pop jecxz add or xchg and clc jns leave add adc add faddl clc push imul push int3 push mov arpl je add jecxz popf or xchg sbb sarl jge lea cmp (bad) (bad) shlb insb sbb inc clc test aaa in push jle inc cmp in add mov jns (bad) lea add pusha push sub inc xor and stos arpl sbbl das add add dec mov rcll add push adc ds fstpl cld xchg js call aas add mov inc ljmp lds jae ret and (bad) fbld lods or or mov outsb or push aas mov jecxz add xor test inc clc rorl rcl into sbb stos mov push cmc fnstsw (bad) jb xor or sbb inc cmp pop in and sub (bad) xchg stos sub enter xor daa fimul mov cmpsb cltd cmp les push xchg sbb pop sbb sahf sub mov aaa adcl stos xor sbb add and andl xchg or mov test rolb xchg and ret adc mov xchg imul and inc cmpl and mov adc sbb lret ljmp ret push rclb xchg outsb cwtl js (bad) pop dec pusha (bad) dec sbb or xor lds pusha bound jg xchg sbb or lea inc es adc dec push je or jl in hlt movsb pop mov fadds (bad) test movsb cmp out out push inc call sub insb push int inc ret pop mov push int xchg add sub sti mov push daa mov dec (bad) into sahf xchg mov push jne push vxorps pop pop mov inc cmp sub rolb int3 and xchg inc jp pop push adc sbb dec mov in mov cmp inc xor xchg pop push out and pop pop outsl lcall or and pop jmp ja xor or dec test mov fisub and push or (bad) push (bad) decl lret and pop out cmp xor orl cld out fucomp fistl add rcll add (bad) mov stos movsb push sbb cmc shrl cmpsb inc mov arpl jl pop inc lods push add push xor push mov inc pusha sub ds sbb mov je stc push cmp mov and xchg rorl xor (bad) rclb std je mov repnz mov mov xchg adc xor and or ds xor push push or mov mov pop cld loope dec xlat aam mov inc addr16 fcomps shlb inc mov mov and cmp jg outsb mov push mov sbb jmp fistl sub iret lret inc add leave mov enter or fsts (bad) jb rorl and enter mov int3 push ja push fisubr cli movsb or in adc push sbb arpl cld std pop inc dec jnp or mov out mov sub push (bad) mov shlb jp mov mov xchg push lea cmpsl xor sbb xchg aam shlb adc inc sub adc dec je (bad) push adc loopne inc jmp or sarl scas mov dec xchg adc inc or dec or jg sub ret pop jecxz sbb lahf pop push mov adc push dec int test or dec dec and bound dec xor iret add or rorl mov jecxz or lods popf or sti lea push push adc sub or fist repz jns js inc push jmp insb dec cmp int3 adc dec or inc mov push mov ljmp jge and push es inc pop icebp push ret pop (bad) add jne lock push nop fnstenv push les test rolb or jge adcb mov sbbl cld jmp lea gs fist lea lea arpl adc adc add adc stos ss sbb pop test stos fist daa sbb inc jle cld inc inc cmp adc lea mov or cmp nop insb hlt dec jp cmpsl out dec push xor mov jp mov rclb push fdivrp or outsl lahf xchg adc mov add inc addr16 cwtl pop pop imul mov push mov push or fucomp prefetch jmp add inc mov jne xchg inc (bad) (bad) sbb or jne aaa (bad) xor (bad) add mov mov loop fld lahf cmp loopne xor pop push add mov (bad) lret hlt mov inc and cltd mov imul mov add call push push data16 outsb sub pop mov rcrb cmp cmp aaa and mov mov pop lea or notb jl or mov inc (bad) (bad) (bad) pusha xchg js push xchg and test or jo ret jle or lea es (bad) mov test scas or add or ds in add insb pusha (bad) sub add push inc repnz ds aas fimull sub enter lock (bad) fs (bad) jo push adc aam adc pusha pop add dec sti je sbb adc or mov call pop pop sar sti ret push lret cmp add push and push dec pop jo push xor mov pop mov or shl add push cwtl in xchg sbb xchg add and leave sub inc and cmp and push neg es lods add sbb sbb adc lods nop mov in in in or or xchg jbe fisttp xchg in ret in mov enter mov outsb mov mov mov movl add or pop add idivl or mov fsub fsubr mov clc jae push addb sub xchg lret test mov or add in enter sub enter gs cwtl rcl push pop push mov jg (bad) sbb inc xchg or ds or and add adc mov and (bad) sbb pop sub add icebp loop adc scas lods sbb lea stos or loope int in dec lahf inc push inc rclb dec cmp inc out in fcomip sub push dec and pop pop subb and sbb dec pop or push and icebp cmpsl cmp mov ror mov rorl call mov push or leave inc pop jne xor icebp mov mov lahf int3 mov daa sbb test inc je jo jl jne sub or cmp push jb push adc inc adc adc jb and add jns daa adc add out xchg add setns adc or mov pop jb and pop jb and or jb daa pop xor and add ret mov and hlt aas and repnz (bad) or and iret mov movl inc pushf test in ret leave fadds cmp pop add stos in rolb sti sbb sub xor inc pusha adc ffreep fidivr dec fwait addr16 pop or cmp dec cmp adc push push sub add loop sbb inc inc pop loopne aad pop mov xchg jo fadd enter mov daa sbb pop lea push ret les test cmp jne pop and jo js pop jg xchg inc cld orl sub std rcl adc xor jnp test cld dec push ja cld pusha stos adc cmc imul loope mov and xor scas pusha insb sub lea xchg lock and jl pop cwtl or daa mov mov dec add add push mov mov or mov inc push scas stos sarl add sub push adc leave add stos adc push and pop push xor mov bound adc or aad (bad) aas sahf xor (bad) push sub les xor lcall dec rorl add jge xchg sub mov mov xchg out pop inc shlb fst cmp xchg push mov inc test xchg ja inc sbb insb dec sub sti sbb mov push dec aaa dec dec mov icebp add cltd sbb push and xchg mov sbb pop and push dec dec lea sarb cmc je rorl out xchg lods cmp je mov jl sbb push (bad) lea mov test je pop push push dec movl fwait and add pop imul push (bad) sub mov cmp xchg dec arpl pop outsl pop das clc daa lock js dec int3 jg das or adc push jns cmpsl (bad) int3 enter in imul pop sbb xor push add or fwait aas push add es test add cld cmp aas push adc roll pop push inc add xlat and stc ret call fmull imul aam dec xlat push cld or insl and scas push push cmp and rcll or inc rorb dec or scas pop mov xor inc push jl xchg xchg test add or insb cwtl stos pop adc add (bad) pop sbb (bad) jp and loop outsb dec mov mov inc mov inc ficoml push inc sub adc mov shr xchg shr add pusha mov inc push jne sbb cltd add test shlb mov outsl mov (bad) pop add in push jo push adc cs push testl ret in push dec pushf adc fwait ja add clc mov test aad aas lea add (bad) jmp sbb pop pop loope cmpsb in addr16 or or fildl push outsl push dec jl mov ret add in mov add sti push (bad) lods jmp test enter mov push jmp fwait scas pop add dec lods jo loop sbb stos cmp jb adc dec push test ja sub jecxz or loopne jbe mov mov es add push mov cmp adc mov cmp call or mov add xchg das stc cmpsl loope or inc adc ret pop adc add sti leave mov inc mov notb jo sbb inc jo or pop subl fild cmp cmp into (bad) lret jp lea dec jae fwait cmc lahf or jle imul xchg dec jne loope cmp mov or xchg push jne push pop popf xchg ja mov sub or test rcll test jne bound jnp dec push and test and insb push nop pop add sub mov insb cmp xchg adc sbb enter push inc sub in sbb hlt add rcll (bad) leave cli cmp (bad) fcoml push sbb fsts dec jp mov mov adc pop xor dec mov fldenv ffreep jmp pop jle cmpsb adc ljmp push add add ds cmp fcomps das mov das adcl dec mov outsl lods cli mov push inc xor push push push call add outsl add out adcl pop mov test add cmp or or inc xchg mov cmp dec add or sbb xor xlat stc adc jmp dec or sub mov dec scas roll push fidiv (bad) add inc add loop push scas cmp sub inc sbb or push mov mov or push mov adcb cmp pop rolb push imul xchg push adc ss pop sbb pop sahf mov push shlb push inc outsb int sbb sbb pusha or or xor fildll loope mov jae cwtl es lods push inc push mov gs adc int3 cmp test daa push imul jns xorb (bad) in mov pop fildl inc add push sti push push or shrl and add inc out iret repz jae enter cmp (bad) or or (bad) repz sahf fimul mov jns iret fistpll repz sub ss in repz cwtl gs in dec adc ja out sahf neg push mov or out lahf testb cmp add dec cmpsl stc xor mov std add test inc mov lods mov and adc sbb mov cmp inc sub pop push bound mov inc xor aad movsl cmp test inc jecxz add std xchg ds push sub push mov out dec push xchg or jbe xlat test (bad) arpl dec mov jne sub push xchg mov in call int3 pop push movb sub sub daa sbb mov push arpl or and mov aaa mov jne mov mov imul nop clc adc mov test pop push adc mov ljmp nop mov (bad) ficom sub fwait stos mov mov xor fldl adc movsl sub test mov in nop pushf outsl add rorb out cmp invd in add or or mov rcrb and mov stos mov shr dec es mov (bad) icebp call cmp xchg and dec fmull jne jno or adc insb jecxz xor (bad) mov int push mov mov mov adc enter jo je jo sbb shr test int3 mov add jg sbb pop xchg add push rorl mov and and mov fcompl inc and push das lods dec jl sub mov ds sbb aas mov pop pop das mov into push and add sarl hlt mov rorb mov cltd dec inc jp jno mov jle cmp enter jne adc inc insb cmpsb push in ss aas gs add xor pop lret adc repnz or add out gs xchg test and and jo (bad) inc dec push or pop sub xor ljmp jne aam jns and not in insl cmp je push ss pop test mov fucom nop dec add xchg adc and ja rorl popa fildll inc imul sub jno xor push push xchg lea fs or pushf and pop sub pop lea or cwtl jo outsl cmp push mov sub loope inc mov push inc xchg (bad) fisttp xchg adc push pushl push subl push js clc and and int3 dec inc pop sbb sar xchg sbb jl in rcrb xchg sarb (bad) push mov dec and xchg jne fyl2xp1 dec xor icebp xor in push and int3 mov fcomps sbb add dec mov pop subl inc mov arpl or fiadd push sbb add jl sahf inc sahf xchg and push mov sbb inc xor dec jle gs mov and push scas call or jle dec jae sub xchg fmull popf cmp mov fnop mov inc sub (bad) sbb test shlb mov fdivl xor je loopne dec nop and sbb clc mov fucomi pop push adc push mov shr and xor dec xor jns enter ljmp xorl mov orl mov fs insb daa dec mov dec mov push adc ret mov test fs ds scas shlb mov mov inc add sbb mulb jns je decb sbb add or sbb stos test and loopne in lods push push or mov test arpl cmp sub je lods enter sub lcall or and add inc inc out stc mov mov mov test or xor sbbl push dec xchg add pusha xor mov push mov sbb push push cmp inc (bad) or lods in cmpsb lcall xor stc mov sbb movsl xor ret je sbb mov inc clc popl popf js clc sbb pop and movsb inc adc xlat jg xor je,pt and cmp dec mov jge add shrb ret and jo sub addr16 stc and bound pop mov and (bad) out inc insl jmp mov and cmp adc pusha adc fldl lds and or test sbb add xorb scas scas cmp sahf outsl aad push push push adc or outsl lret mov das (bad) xor pop or aad xor lods sub jg fdivs mov js add push pop jae addl aad xchg icebp dec push add dec sub (bad) or mov cmp jb xor jg test cmp jg jmp mov and inc daa jmp movd mov xchg je mov push adc dec dec mov into and cltd sti and or sbb (bad) mov cs divl addr16 sub pop (bad) jl movsl push adc adc stos xchg and xchg inc ret pop cmp dec jo xchg sbb jecxz testl out adc adc pop jl iret cld inc and loopne lea xchg jbe jl sub mov push jl addr16 push push jmp xor xchg mov inc or inc dec test and and or je lea sti rcrl lea fnstcw stos and push inc inc and adc xchg test push xchg mov js jmp movl cwtl incl js lea xor push dec push dec sbb xor cmp mov pop (bad) dec or adc inc cmp add sahf mov add jl add inc arpl call cwtl mov idivl adc add adc mov inc sar or lret sbb and (bad) fisub push cs jl lcall add adc and int3 fidivrl adc enter push scas popa push test clc (bad) mov pop sub mov sbb or loopne adc call rcrb jno aad pop rclb lods push push movsl scas or add mov add lahf xor mov inc imul (bad) or or cltd nop test sahf fistp lcall hlt movsb pop (bad) push inc nop test inc xchg mov imul imul sub mov xor xor into xlat xor clc add jo test xlat movsb sbb push jne mov dec lea mov push sbb adc jl test ljmp pop or dec dec sbb push jecxz jns jbe mov movb adc push dec and sub sbb cmpb std mov mov xchg call jne ret std sti and or mov pop loop (bad) daa inc daa push sub sbb clc cmp pusha add movl mov insb decl xor push pop mov and in fidivrl cmp jge pop and mov aad adc shr sub lcall insb sbb sbb stc sub jnp sti adc adc inc adc loop fldl dec add cmp loopne push sub jecxz movl call adc ret arpl jne inc sub lahf sub test or adc dec aam inc sub adc int3 mov and cmp adc inc or add imul fadd pop bound jne adc nop jge inc cs stos dec adc jne push outsb mov cld mov in add mov xor or cmc rcl mov lea adc adc or aad pop adc push xchg lcall mov inc add je aaa das push lea add movsl mov mov sbb pop out adc scas inc and adc xor test sbb fcomp inc add adc adc sahf push sub jg lea push add mov test jb push lock js push lea sub stc or inc add mov and (bad) pop fcmovne imul push jle add xor inc lock out add jne inc popf pop mov inc add push pusha pushf jle jecxz hlt push or lahf test loopne push je jnp inc or movsl mov jg adc cmp sub mov lea push movsl sbb stc push jne xchg subb xor inc cmp adcl mov or pop jp mov or test dec jne pop daa insb cmpsb push adc fiadd or add fs les mov add cmp and cmp adc scas and es dec cld inc dec push xchg rcrb inc adc lock add xchg fwait or pop and subl sub in mov cs adc xchg add sbb push test add fildl test push out enter (bad) mov stos pushf loop inc add xchg or cwtl je lds imul into (bad) sub mov mov push sarb ja mov ret rcl jmp je sti fidivrl sub lock jb adc mov xchg push inc mov (bad) (bad) xlat clc shlb aaa movsl lods or and xor orb movsl aam (bad) ss dec inc cmp xchg jae inc or push pop outsl push sbb pop ljmp pop pop fistl jo js nop push cmp or lds ljmp and mov je enter sti mov push lods cmpsb xchg mov add pop jbe movsb sub pop mov adc pop inc daa xor add jg out lock (bad) aam or inc mov or rclb and push inc dec cmp faddp mov ret jecxz sub cmp outsl loope sub jl fs jl test movl (bad) bnd sub adc push push sub imul mov or sbb pop rcrb pop lea dec jae push into jge cltd insb sub out mov rclb test pop nop pminub mov adc sbb xor cmp or aaa movsb cmp mov or lea imul scas pop sbb sbb rolb pop push jb push loopne adc pop lock popa aas (bad) pop dec mov enter and arpl and push mov insl pop xchg test push lods jne xor sbb call cmpb jne ret and mov sbb loope fdivp xchg sarl aam hlt dec jo mov cmp jo ds sub xchg pop sbb xchg in pop mov pop pop test aaa xchg push nop insb mov and seta add inc cmpb pop roll mov into test xor push sbb popl std sarb push fs shrb xor sub pop js lret xchg dec insl nop sbb popa cli data16 or and cwtl push jnp aaa push cmp mov lea adc adc xchg mov cmp sbb (bad) lods xchg push clc les xor and add mov adc jl dec mov inc rorl ret cmp (bad) mov jge enter cltd jmp mov aad mov daa arpl adc jns fnstcw vpmulhw mov xor and cmpl adc int3 jl jge jmp std cmpsb jl lret pop inc inc add int inc sbb pop push int push repnz jae pop sub push push test jae rcll popa fwait pop xchg lea lea cltd jb in xchg xor stc popa xchg pop adc xchg call pusha scas mov insl loopne (bad) in fs add push pop cld insl jo enter dec addb sub rclb or mov xor mov jo cmpsb mov add mov (bad) fldcw push push movl shlb xor mov inc or xchg xchg cmp popa inc xchg inc shr rcrb ds sub jae rclb push and sbb and xor adc or inc jno jns mov adc in pop loope pop or jae cmpsl rcrl sub jno je inc or xchg mov outsb pusha push mov test addb mov hlt popf fildll jge mov pop ljmp (bad) dec mov mov push jge mov lea add add push cwtl inc pop pop xchg jge js fimul sub push int push and add lods sub mov aaa (bad) push repz cmpb pop adcb (bad) and test cmpsl (bad) adc jbe leave lods mov out mov iret rcrb pop and rorl (bad) push sub dec push out movsl xchg lahf ret loopne cli mov and packssdw jmp cmp out mov sub imull mov jnp or cmp adc xor xor mov (bad) sub add adc adc mov repz test sahf sar dec sbb xchg or (bad) dec jne hlt ljmpw (bad) loopne je push outsb or aam (bad) jmp dec mov fs mov mov mov or aas sbb cwtl mov push sbb inc jp dec ret aas movsl notb push push mov into int mov je rorb (bad) add hlt ljmp jp mov test xchg mov mov leave pusha pusha push (bad) push and out pop or inc sub cmpb push stos jne mov add movsb mov insb dec mov push dec aas adc push push mov daa insb lea ficom rcrb push inc xor push mov bound mov jnp test (bad) call cmp pushf inc inc sbbl push inc test jno sbb mov cli lock imul lock int3 and mov std sub mov pop (bad) insl out push push ret scas sub pand arpl in adc in fbld pushf ja mov and pop div pop add repz aam outsb sub cli and mov jbe insl cmp mov inc and mov test push or push push sti enter add dec in scas cmp sbb sbb pop jnp outsb sub add mov xor vmovlpd push scas mov imul jg jp pusha jge arpl add mov (bad) imul and inc fs inc popa (bad) loopne pusha adc mov xor cli (bad) nop mov aas popa xor mov pushf pop pop push dec jnp or lock hlt xor push out adc sbb and adc and dec (bad) je (bad) dec repz in test add add ja mov xor mov pop jb loopne rcll aam add jmp or aam mov mov lea lods push push push hlt je cmpsl push xchg sar pmuludq mov pop cmp pop test mov mov (bad) add sahf mov cmp adc js adc mov das sbb push pop cwtl out and cmp cmp mov iret push aas dec sbb clc (bad) pop ds sarb adcl ficomp call dec or xchg sbb add cwtl adc mov call sbb call popa mov enter test mov push and fmuls call mov or (bad) ds sub cmp push mov xchg es cwtl xor mov xchg sbb je dec shl and and cmpsb dec test cld jb mov adc pop xor sub nop out push stos adc lcall (bad) xor pop or push ljmp or xchg pop mov out sahf cmp shrb sub pop push adc lods mov enter loope pusha pop pop cmp lods add inc pusha sbb aaa or cmp push adc dec rclb or daa push jo in push lahf cmp xor sahf mov ror jp push jp add arpl out ret jle dec jmp cmp xchg (bad) cmp into stos lock cld lods dec fwait jne and ret out lahf add and sbb inc dec xor jne loopne or cltd mov push daa lods dec xor faddl sbb or je ret push arpl aad js push cmpl jp mov xchg or push add add sub daa je adc fwait pop lods cwtl inc sbb jne (bad) xor add jmp push jne push lds aad lods orb shrb mov xor push loope (bad) jge lea add cmp inc insb lds jle loopne adc (bad) (bad) xor pushl mov (bad) add jl pop fwait add mov or adc jecxz ret mov inc push cmp or (bad) out in cmp bound jp sub int3 sbb xor roll cmp add rcl outsl mov sub push xchg test sahf enter xchg xchg dec mov mov push adc pushl dec or stos jo cmp repz push xchg rcl clc lods arpl and add fistp cmp test js fimull mov jno pusha push adc push xchg add mov xchg xor ds pop pop add popa pop fadd and jl cmp test push mov mov push sbb xchg lock stos dec or jb pusha push xor pmulhuw add lret insb jo inc sbb pop test jb dec or and call adc rolb push lock cmp add push pop lock push sub lea adc cmpsl ljmp and mov push lea pop cs xchg add rolb movsl sbb cmp mov scas imul sbb xor add std mov mov mov jo jne dec loop add cmp add idivb xor and sub sub int or push adc mov rorb add shlb or shrb pop ljmp xchg test mov loop mov add aaa test inc xchg jns popa lods mov jg jb push ds push sbb dec test push jl xor push push faddl pop rorb testl xchg and or imul lock sub push xor cwtl out ret clc mov mov sub cli jbe mov das cmp jmp xchg sahf pop sub sub inc in xlat pop lret pop rcll ljmp inc mov push dec pop iret xor in pop inc ret notl add jne adc rorl add xchg and lock mov pop add xchg in push add inc dec sub dec ret aad jp and cmp xchg or or out adc pusha and and test push idivl add cld xor and pop adc rcrl or pop xor pop push cmp add inc dec and xchg insl loop loopne adc fidiv dec cmp pop xor dec adc mov int3 insl (bad) out xor or jne sub enter das pusha inc mov push sbb imul jle repz xchg push xor in and add push in mov push jo je bound std ja cs push lods fdiv adc mov cmp adc ret cmc sub movsl jmp iret push push shrb or jns xor cwtl push ja dec gs pusha test idiv sti xor lret add push push loop ret cmp testl xor cld rorb mov mov sub mov and in nop ret inc js pop sub jl or dec lds add adc (bad) nop fldt xor roll ret mul dec xchg scas (bad) sti mov je dec push mov sbb xchg pop rolb or xor add and mov nop ljmp in addb call xor into sbb push sbb pop mov inc out ret inc mov fwait ss add (bad) push ljmp daa sbb mov jmp movswl loopne lea ss ret cmp das mov sub cmp jb bnd mov in fs inc inc iret repz in push das rcll (bad) cld fstpt pop add add add add pop out in popf add lea push pop add jns outsl test jo push sbb aaa jno mov fiadd lea inc std add push (bad) movsb pop xor pusha cmp out mov sbb sbb cmp and pusha jecxz insb mov dec inc leave and jns dec out xchg lcall scas mov cmp pop dec popf push mov mov sbb adcl add mov (bad) mov jns sbb stc (bad) mov push mov stc outsb sbb es cs or cli or shlb mov pop sub jecxz movsl je push jbe add xor out dec mov xlat pop lcall cmp pusha scas shrb add js lock mov push sbb call ljmp jp push adc jp pop lods pusha cwtl push mov lret test jae jae pop mov sbb push or fidivrl (bad) sbb push pop and mov or fiaddl adcl and cmpsb or mov ret mov adc adc cmp and test and scas inc pop pop jmp push jnp inc pop push xchg pop mov pop (bad) adc mov inc je pop pop pop dec dec fcmove cmpb fisubl dec outsb daa fbld push pop sarb aam insl lods fstpt pop xor rcrb xchg mov out into sarl adc sbb adc or push add adc ja push mov pop push push xchg lret popa in and in push mov (bad) mov or aaa dec pop and xchg ds mov movsb push adc cli or cmp fmull ja and cld mov fsubrl orb incl pushf mov mov and mov jmp inc adc and or xchg rcrb insl je mov je and inc cmp jl xchg jo and inc test dec mov or add push sub insb (bad) xor adc cmp clc mov add and dec mov jnp or add mov and push aas adc sbb je repnz mov ret mov inc pusha jge push add ret and or inc (bad) popf push mov sbb nop pop inc (bad) push push mov mov xchg xor jns dec in mov xor push sub cmp sahf mov cmpsb jmp fstl adc je shlb sub push int test or aad ljmp das loope movsl push rorl fsubs dec insl dec sbb mov xor fst (bad) imul js inc pop mov (bad) mov call cmpsl stos push xchg les push test xchg or and repz sbb cmp rcr int lock rolb pushf mov in mov or sub ds fidivrl lret mov or mov sbb mov and sub shr fwait add orb push lahf call divl mov add sahf cwtl add sbb mov or mov mov sbb cmpsl ja enter adc add sub mov xchg adc dec lods cmpl dec and xchg cmp dec mov mov add cmp add insl jl lods rclb std mov ds push lea mov or icebp mov loopne jp sub ret sbb xor fcoml jp aas aam (bad) sub popa push sbb pop sarb lock iret gs push dec xchg or test cs hlt pusha inc add xlat mov and test pop lock dec jmp mov sub mov jns jb (bad) and mov push (bad) stc adc roll loop add ret jge scas aad or sub add mov dec lea dec sub xor je add int inc cmp xchg cmpl notb repnz cmp xor lods pop inc aaa stc xor and or xchg push add adc mov sbb sub adc inc pusha shr push mov lods or (bad) int dec mov and add xor pop or incb xchg inc pop mov xor mov lods ja adc insl movsb lcall inc cmp imul or adc mov push popf push mov mov xchg sub jne or jns divl adc and cmp jle jbe sub data16 sbb pop fdivrs ret sbb popf es cs push lret das test jge ss sbb push loop push into jle mov add fadds push cmp cmp dec sub dec push icebp xchg dec inc xlat fs and xchg int3 mov adc add pop adc loope xlat push addl out aaa adc je dec dec call or mov mov fildl sbb cmp add std test insl mov mov arpl (bad) fistpl jns add adc cmp jb cmpsb inc scas cs inc push clc cmp mov sbb and ficoml ljmp push outsb aad pop mov push test or add xchg adc rcr push mov or push sbb call sub add sarb gs push popf out adc (bad) cwtl int3 testl repnz shrb jecxz adc test sub and je mov mov test (bad) movswl add dec stc xor mov or popf movsb pop cmp pop stos lods dec rorb pop mov push and mov inc pop cmpl adc test bound je je add cmp add xchg jne outsb ss dec xchg dec inc bound rcrb dec inc add scas or leave mov pop or pop and sub xor aam push cmp pop cmp sub mov adc xchg push pop scas mov pop test imul gs mov cmp pop mov sub adc sub dec adc imul push dec pop xchg test cmc out pop cmp inc cld mov push nop out cmp push nop inc dec pusha bound xor cmp ret out sbb jb ljmp push xchg movl pop adc jo insl push scas pop adc or dec icebp fsubr mov addl pop adc cwtl in shlb sbb inc pop dec push dec cmp dec adc data16 daa cmp xchg mov mov push push lahf out push mov add xor ss xchg and push (bad) xor push sahf cmpsl fldcw pop pop cltd (bad) les dec pop mov stc mov inc fldl (bad) or add and pop mov ds sub and sbb and or mov mov or mov jmp leave adc (bad) sar sub int cmp add in jmp (bad) or repnz bound test data16 xchg fdivl mov out and inc enter jecxz jo bound or mov adc cmp jb cmpl cmp jb adc or nop adc inc cmp jle adc rolb ds push rol sub inc or lea rcl add jne inc or mov add subl add sub imul (bad) dec jmp fadds cmp jg and sahf insl pop mov and cltd and mov add jge and dec lahf jmp fimul or sbb jl cmp popa pusha sub jo loopne ret and push push arpl rolb cs pop xchg aas dec rorl fldl sbb add mov or lods mov (bad) arpl ja sub cmpsb mov xor xor cmpsl int3 inc xrelease insb sub es jl ja xchg out or add cs or roll mov outsb adc pop jno sbb inc inc adc add adc sarl cmp popf inc mov dec push pop jp mov ja lds xlat pusha loopne lea enter cmpsl pop add xor shrb bound and lret mov inc sub sub xor sub fs xor and insb jo test mov jb push cmp push in jmp push xor adc add lea lret fidivr jne pop in jb lea sbb repz push cmp mov inc inc jl clc or push and xor (bad) inc or xor push cs adc inc xor xlat loop push cltd nop ljmp js lea xor jge subl movsb clc push in sub test push adc in nop sarb push xor or inc add add add xor add insb xor add js add add (bad) mul push test mov stos jae pushf pop je nop cmp jmp add xor (bad) adc add xor cmp inc insl sbb pop lcall mov sbb or xchg gs pusha mov dec lds aad sahf fbld test or hlt lea pop adc push inc mov lcall movl push mov push push dec or mov or sahf fdivrl add mov (bad) cld mov add cmp jmp adc xchg setle pop test outsb add dec into xchg jp out mov pop (bad) mov nop push sbb fstpl test push fiaddl sbb dec sbb scas lock rolb xchg hlt jle test push xor jge arpl cmpsb pop push hlt or lock dec sub cmc into xor addr16 sbb sbb xor out test xchg sbb inc dec sub cmp push or add imul xchg inc inc or sub nop xor (bad) xor imulb jecxz cmp and adc xchg and test adc inc jmp mov jne mov xchg test dec jae adc pop add movsb test aas pop lret sbb ss mov jne fadds ja add or insb int3 ss ret cmc test inc adc in nop mov pushf arpl inc lret push rcrl inc dec inc cmp test lods loopne scas popf inc andl mov cmp aaa sbb cmp mov icebp add jle leave sbb ret into dec adc cmp out adcl sub xchg out or inc in into cmp das mov aad das sub xchg dec add sbb subb in adc or cmp fs punpcklbw add sub lock std mov mov add dec xchg cmp fildl ficoml jmp jae inc xor add jmp cmp xor lock popa pop sbb sar sbb data16 addr16 and add (bad) xor adc add xchg and push xchg lods loopne adc (bad) aas lea and jo sti incl pop cmpl add je cmpl add test cmp in sbb fs inc bound rolb or add push sub (bad) mov or ret sub push xor add dec lods push mov push in pushf xchg adc sarl pop dec jmp push (bad) lock adc sti shl pop mov mov adc push rcrb sub mov add jg pop sub cmp je adc loopne jno sub or cli mov iret mov lods jb and lahf push jl xor pop fwait clc xor push sbb dec add or stos jne pushl xor ds aam sbb stos dec add or mov lock mov pop rolb push sub and cmp icebp nop out imul rep jne sub and les inc xchg or mov mov push clc sub mov dec adc fdivrs jecxz mov or or or icebp sbb adc xor or jl mov jnp push pop ret xor dec pushf xchg add imul daa pop (bad) daa pop jne push cmp xor addr16 pusha dec addb iret cmp and push cmp adc push jo pushf mov pop push jo push pushf daa push (bad) mov test xor or mov pop xchg (bad) push sub push rclb push push or pop push lret dec jae xorl add cmpl pop xchg loopne pop repnz add (bad) xor test add fiadd out xchg sbbl xor mov insl pusha jbe or sahf push push mov ljmp mov dec dec cmp nop cmpsb dec adc test lret push das push xchg push outsl add or mov outsl mov adcl add cwtl cmp add xor pushf inc loop and inc jo movsbl lea cmpsb gs inc insb sahf fistpl add sbb pop outsb xor dec inc sub mov insb cmc repz andl push xchg cmpsl add repz insl data16 jns add pop pop add lods sbb daa jo mov push dec and inc nop lret pop mov jl adc pop mov pop lods cmc pop xchg sub cmp push (bad) aad ret stos insb add inc repnz test add les (bad) push add ret add push push into sub cmp je xor rclb imul rolb adc andl imul mov push sbb pop mov and pop xchg cmp adc sbbb scas xor dec incb das popl mov xchg lods and mov sub call pop mov test push popl inc test adc nop adc cmp push jo xor clc push mov sarl scas sub cmp jbe fadd adc in scas rorl aad and (bad) mov add nop push add xor jne or push scas add notl xchg mov cltd orl (bad) mov cmpsb popa pop push inc bound pusha dec adc insb ret push xor cmp repz fiadd lock cmpsl stc cmp dec outsl imul mov pop jne sahf out lea lahf repz jb jae lahf insl mov cmpsl lods mov call sahf std xchg cmpsl push ljmp dec and enter cli orl jbe stos and inc pop arpl and adc jg pushf pop shrl jns inc loop int3 add aas nop das mov cmp mov sbb mov (bad) sbb mov inc xor out add std je xchg or xchg push stos inc inc daa mov cmp sbb je jb or pop sub cmpb popa sub xlat add push repnz enter enter rol or add int3 in shrl mov add cmp repz pop outsl mov imul cld cmp sahf out cmpsb mov xor cli pcmpeqd dec arpl cmp jmp xchg test fildll test aam les inc pop lock test lea and fild dec cwtl sub pop lods add (bad) lret jge inc (bad) xor inc rol dec push in push enter sarb pop and adc out push sub cmp and inc mov test jne or addr16 or out adcl scas adc mov dec inc push jmp lcall xchg jno,pn movhps push mov push mov sbb jle xchg jbe sbb pop and mov adc xchg jno push adc mov inc push js cltd nop sub pop sub adc adc and xor push adc inc xchg pop shll mov mov inc js in movl pop jo fild adc cmpsb cmp xchg dec jle add notl insb jo scas fcompl add push add add and add nop lret add dec pop jo nop fsubs out jmp or mov leave fstps ss iret es movb pop inc jmp sub adc sub adc cmp dec push test fcoms push mov or adc adc add xor cli push subl dec xlat mov or push sbb mov xadd sub leave arpl shrb mov leave pop jo movsb mov add push lock pop mov add dec push sbb sbb cmp test or cmp xor mov lahf and mov repnz insl add loopne push dec (bad) jae ja scas add and cmpb fisttp push xor cmpsl pop cmp dec xor sbb (bad) cmpsl dec pop sub mov pusha ret inc je xchg lea rcrl test xor jno add jne inc dec push imul sbb test add dec je xchg nop xchg sub out inc cmp add add jne adc xchg add mov hlt dec fcmove in mov fsubr pop cs xchg fsubs jl out repnz lods pop out mov cmp inc clc cmp popa incl outsb add sub clc xchg and mov pop sbb mov add lock cmp sbb mov inc call push xor insl mov pop add or inc enter push movsl inc cs fidivrl pop sbb add test sar sbb mov imul xchg xor and (bad) shll add ja int3 adc push subl sbb inc jb or pop and xchg movsl (bad) orl push add sbb popf test inc popa adc sbb pop and mov xchg in icebp lcall mov lea sbb xchg movsb (bad) shlb test mov aas or (bad) pop aas inc jp loopne or rorb in add popa inc sbb repz stos orb jnp mov push dec test jb pop arpl mov testb pop cmp popl idivb inc jecxz cmp cmpsl xchg outsl mov jecxz or cmp jp test mov inc mov scas dec aas pop repz pop outsl or bound pop push clc add mov (bad) iret adc jno,pt cmc adc cmp mov add push dec ret jnp test or jns ret sbb cltd (bad) push add xchg sbbb in inc outsb jne ret push dec popf in cmp and pop nop je cmp or jg (bad) and jns mov jg nop jg (bad) xor cli ret inc pop test rolb cmc popf inc mov jb inc dec adc arpl ret jbe lods push rorb pop dec rorb fadds inc sub sub pop sbb mov sbb enter jle repnz in lods sar mov dec scas jle adc loop mov call rclb je sbb cli (bad) es or repz (bad) negb jnp pop add or push jmp push add scas cmp (bad) rorl push sbb push push push sub xor jmp xor lcall inc loopne ja mov into std repnz adc ret mov outsb cmp push dec and jne insl push pop cmp push push push dec push vpunpckhqdq enter mov lahf adc stc add clc add jmp push push and icebp bound adc add (bad) lret lret xchg dec sbb jno add dec inc pop sbb inc jmp syscall test in mov fistpl and gs or pop mov pop out fwait xor xchg xchg mov sub js (bad) into stc jecxz daa pop lret adc cmpsb or jo add pop pop decl push cltd add and or daa in inc add enter pop inc adc orb int3 inc xchg fcmovnu add cmp mov loop add scas sbb push dec sbb xor pop xor data16 sarb adc out inc insl pop pushf xchg adc inc loope cwtl les test jnp ljmp adc push mov cmp push into mov mov mov mull ljmp pop sub adc push sti dec dec popa call test ds enter les iret jecxz push mov mov pushf loopne or fs jns pop jo je insb mov movsb dec arpl sbb jo popf pusha push arpl cmp sahf out mov push sbb lret aam dec (bad) sbb fdivrl jbe sub inc pusha sub adc add mov mov test jne hlt inc add xor inc hlt push jo (bad) cmp sub lods insb push push inc (bad) lods add repz xor iret sub cmp daa push enter xor gs dec add push lahf dec std aam dec out mov sbb pop mov (bad) push inc jae insb pop shll pusha add loop pop jmp jae movsb push sub and outsl rclb and mov sub fsub jmp fcmovnbe inc mov sbb push out outsl jbe xlat mov pop sbb jno mov imul out or enter daa and movsb pop push add jp cmp lods sti lea les ret xor jecxz cmpsl fucomip sar outsb jg cmp jle fcmovnb fldt lret sub dec movsl pop and sub add add sub mov nop movl push or sub xchg cmovo add inc pop add sbb sub cmovnp and mov pusha ljmp push je adc mov xlat sub popf or (bad) js add cmc push repnz imul stc add roll js movl dec xchg loopne xchg pop dec sbb ret cwtl outsb push daa mov dec fsubrs inc mov add add add pop cld dec sbb adc rcl inc cmp mov sarb and jo and push les adc cmp jb add adc mov sub dec jb sbb push push (bad) enter add out pop sbb inc loop lock dec loope inc push loopne mov add out inc xor into or xlat push push fs aad push xor dec pop mov cmc or mov push sub jge lret stos dec movsb ficompl pop inc inc add test repz jle je cmp mov cmp or test or jl lcall xor mov je cmp and mov xor testl adc fucomip cmpl adc rclb push stos sti mov lea mov fnstcw repz divb sbb (bad) sbb adc dec xchg mov loope repz mov xor sbb jne icebp cmp mov mov and stos adc jmp push or add sbb je cmp adc in stos add insb cmpsb out je iret iret jae or cmp rorl push and xchg add xor or lret pusha fs punpckhdq outsb into icebp cmp loopne or adc xor dec xchg push les push push lcall imul into idivl lds les loope dec or int3 inc jmp fistl loopne mov sahf jp imul and dec pop and dec aas dec cmpl xlat clc adc adc add sub fadds cmp loopne js test pushf int3 mov (bad) fsubrl push shrb js pop addl scas cmpsl push cmp mov faddl push adc jno pop add sub ret arpl inc fldenv mov cli pusha mov and push and mov xchg test popa fiadd adc add mov pop add lods mov mov les cmp xchg xchg mov cmp or fs add out jp adc loop and cmp sbb jno arpl adcl add shrl mov lcall sub add out xor cwtl jle cmpsb adc loop mov add inc mov or lret adc jne dec jmp les xchg es jo mov add shl and movsb and loope lcall dec mov cmpsl mov add outsl inc aas addb and mov (bad) mov std cmp jne sbb mov cmp je inc pushf mov (bad) mov or ret sbb mov data16 push adc push adc cmpb adc adc jecxz lahf push and jg xchg jmpw push sub pop sbb xchg insl mov outsl (bad) in sbb outsb pop sbb or or and sbb xchg mov add dec cmpl lcall pusha sbbb xor popf cmpsl sub lds mov jmp xchg add mov sbb test and insb add push rcrl sbb leave fmuls sbb hlt push mov jecxz pusha outsb sbb push (bad) leave mov xor push push push popa jge mov inc je and ficom push out cmpsb mov adc inc xor mov push lock mov sar mov lea ljmp add jno inc sub xchg push imul lock xor xor ret jnp or test xchg add cs loopne fdivrs push and adc mov or push add loopne and push and jns cmp (bad) mov xlat clc add pop call add pop sbb push adc js push sahf or mov xor (bad) es out cmp cmpsb dec mov pop xchg adc mov jmp jae pop cmp mov pop sahf dec js aam inc or or cmp jle dec sub pavgb xor inc lret and lea bound dec stc xchg enter mov int3 daa dec gs sub js add xor inc mov and clc add or mov mov arpl and xchg jne jns and inc dec dec mull lea xchg or ljmp pop insb mov push add mov pusha pop dec sub pop jmp dec rclb in sub rorl pusha lods pop xchg shrb pop xchg add test mov sbb cmp jne inc loop xor dec cmovle out lods in pusha fsin adc mov mov cmp jle add hlt jb js mov scas int inc sbb popa adc mov sbb scas mov inc cmp rcl lea sbb push push data16 and mov or inc mov mov or mov dec repz in pop sub cmpsl call mov adc push inc sbb call pop cld xchg inc cmp pop addl adc and adc dec dec dec data16 add adc or push (bad) nop and mov stc cmp push push ret imul sbb rorb andl movsl fcoml sub xchg jb pop imul inc adc pop sbb sub dec add dec xorb jae sbb clc cmpsl repz js dec cmp js shrb sub adc push add sub sbb add xor xchg sbb cmp mov push push push sbb cmc dec mov and mov xorb add sbb cmp add inc js adc aas push xor pop sbb testl or inc imulb dec je iret pop push arpl insb lds add push dec clc je clc push mov push pop ss xor pusha xchg push inc inc sub xchg push loopne mov movsb mov push ret inc inc mov fiadd fidivr pop mov adc fmuls or cmc push aam mov repz test jno push scas xchg ret add outsb lcall test aad rcll and xchg push shrb add movsb sbb popf cmpl inc insl sbbl cmpsl pop jno pop std sbb or pop sub or push xor outsb nop mov ret xchg insb lods je jle mov mov dec or jecxz xchg repz push lock xor dec push jbe (bad) imulb repnz jbe movsl push push add popf add push pop pop notb aas out (bad) pusha push js movl sub in jne aam fnop jno sub cltd and rol cmp or mov stc inc pushl sub call movsb lea push dec (bad) xor lock bound cmp push push xchg add xchg push scas fucom pop jno pop repz push push add xor add pop or test dec xorb or aad aaa fadds xor dec inc push nop mov sti mov lcall mov xor push mov inc mov sbb shl xor cld xchg pop or sbb shlb aaa test sbb add push push fwait rcrb and test daa push sbb inc nop aam outsl les aam leave mov fmuls cmovb sbb or sbb cmpsl pusha insb cmp mov sahf scas mov pop lods xchg leave cmpsb pop test ret into inc adc jmp pusha mov push fadd (bad) stos inc aaa or adc pop lods push icebp cmp and icebp add adc or mov cmpsl push or les and test mov add push jnp dec icebp jo test jp push mov pop cmp mov mov je test and push cmp ljmp jnp inc daa loope inc sbb mov roll sbb xchg xchg pop sub mov mov popa leave test dec test push mov xorb xchg cmp lods lea mov add dec or mov data16 and cld mov test enter sbb pop stc out (bad) add and or test xor jne call cmp ja jecxz clc add fildl insl shrl xchg popa xor pop jb dec cmp jmp xchg lods adc sub pop push sbb add cli mov sub and fs xlat pop adc pop dec shlb xchg iret jne in sub inc cmp fidivr mov lods xchg add test adc and add sub daa cmp sbb or jecxz pop jbe cmp mov decl test stos mov mov rcrb decb xchg adc movsl (bad) push out cmp mov or cmp xor push cmp aaa sbbb jl push jo test and push inc mov and and cli hlt pop or push add (bad) popa loop xor cmp inc jl and adc (bad) loopne lret or popa or lds (bad) xor repz cmpsl cmp mov jecxz or mov es mov sbb push push lea out mov leave lea mov pop lock jb fs jo leave dec inc ret fldl je mov aam cwtl xchg jecxz add dec sti mov ficomp mov stc add mov push adc pop push scas pop bound jbe pushf pop mov shlb lret push xor xchg ret cmp movsl push jg jp movl mov mov cmp adc daa push push aad icebp mov cltd jge inc jb imul (bad) mov jo pop gs cltd lds push popa adcl pop das stos mov dec out ret jnp push push aaa fs ja xchg xchg insb push aaa loop daa fmull andl push lds dec pop aam loope imul or xchg (bad) mov add xchg sub xchg lcall sti push add fsubrs mov mov lea mov ret dec mov insb add inc xchg and add fistl (bad) adc mov inc pop stos sub and scas add stos inc (bad) dec mov xchg and mov repz lods adc shlb jmp cmc imul inc roll mov pop arpl and xchg pop ret rcrb mov pop and sahf mov lods cli cmp imul dec xchg or aad setl std jne sbbb lods flds out mov pusha imul mov inc jle add push lret inc loopne inc es out scas (bad) cli sub add cmp inc adcb sub and aaa mov (bad) je push ds or imul add inc sub push arpl inc add out mov xor xchg adc xchg sbb sub mov and jo gs sarl mov cmpxchg nop lret cmpsb or clc inc add xor cli nop popa pop and xor sbb mov sbb rolb mov or inc push and adc jne adc fbstp setp add out push mov fimull cld add loop push sar mov adc add and inc inc cs sbb inc inc inc cs jo inc insb sbb inc adcl je inc jne cmp inc cmp dec xchg cmc insl testl orb out push sbb in cmp addb loop pop fisttp test push sbb popa cmp popa sbb je sbb mov pop cltd rcrb pop lret mov pop bound jns push push push push dec xchg adc jns fmuls push jge or sbb inc cmp pop adc les xor pop dec dec mov jbe scas rcl xor sbb mov (bad) nop xor sbb pop cmpsl xchg mov int3 leave data16 loopne,pt pop xlat xor push mov insb popf (bad) cld adc or inc mov cmp dec xor cmp pop pop loop aaa and add xchg adc ret adc push dec roll cmp jo sbb dec mov nop sub sub subb and push outsb scas sub sahf push sub jne out add xor sbb dec js (bad) inc int3 outsl sub cwtl sub addr16 jp jo insl adc orb xchg sub cmp sub add push sub mov xor shlb push lret cli (bad) push push jno (bad) dec jns adc in aaa xor div cmp xchg sub negb adc or add sub je pop mov mov sub dec rclb rclb faddl pop add (bad) mov loopne sub sub jo cmpl (bad) mov inc popf cmpl or scas xor xchg xor add lods add test xor mov std cmp sti dec lds lods rol inc push inc adc mov mov popf mov mov pusha push shrb inc pop xor dec int add jecxz xor pop in (bad) in lret fs pop inc js pop call push dec adc mov fdivs int3 lcall out mov mov out sub xchg lea int3 lods dec or adc (bad) cmp mov push lcall mov inc or pop fwait lret ljmp jb pusha mov and inc dec push rolb pop aad js or sahf ja or and test add add add fistpll jno rorl xor dec push inc or sbb and nop push call push xchg cmp in enter push push cmp jne out push adc test cmp aad mov or push aam test xlat rclb loopne jge lock sbb ret int3 push or pop insb cmpsl out lods pop push aaa add add adc repnz push mov xor push mov rolb movl mov dec jnp pop fisttp sbb or fnsave pusha aaa dec movl mov xor add movsl mov sbb push fmull and xchg mov lods lea in bound andl xor loopne xor hlt dec insl rolb and or jl jo adc fs insb and or insl xchg adc mov in xor call je into in shr xor sub cmp fmull adc inc push adc push or rcrb inc mov or rcll xor adc adc (bad) mov nop sbbb cmp movl push (bad) hlt jb movl lea clc mov cld cmc nop pop mov pop inc int3 jle push jb dec cmpsl lods out cmp gs in mov mov inc in loop jb dec adc jge fadd inc xchg movsl cmc outsb fsub jmp in or or push loopne inc push scas enter dec loope push or sub or sub xor xchg aad (bad) (bad) hlt fs sbb rcrb in xchg add or inc add enter add adc sahf iret je add dec or xor add cmp add sub xor cmp mov xor mov outsb inc add push push aam shl jmp in jbe or int cmpl test xchg cmpsb fldpi cmp js dec dec out rcll ss repz dec imul inc mov push shlb les cmpsb imul ret add and lock or addb xor cmp int3 dec push xor or into js push out add rcll add push fcmovnb ss jns jnp sub pop adc adc push push xchg adcb fdivrl test (bad) out adc out sbb pop aas sbb adc (bad) mov adc pop xchg inc pushf or (bad) rcr movl jne xchg jg scas sub push ljmp aas movsl pop orl cmpl adc or lock cwtl and adc cmc xor and cmp enter outsl and xor mov push jae les nop push mov cmp mov mov mov popa das or js orb lods fildl or sarl or pop push push jae xchg push stos sbb (bad) dec pushf bound ret stos xor mov or inc mov push adcl mov pop or hlt push mov push orl adc dec (bad) mov jo in and or add gs aaa adcb xchg popf lret xor cmp add and sub aas or mov insl pop adc ret call test bound mov sbb sbb and cmp sbb xor inc ss lret outsl mov inc cmp jl pop mov dec jb (bad) xor clc inc pop pop push mov jo add pop cs mov xor xor je adc dec and push mov xchg mov inc or cmp dec push add pop sbb add xor mov xorb leave sbb mov pop add incb jle or add jecxz pop int push jl mov (bad) cmp icebp sti mov cmp jb or dec mov cmpsl ss push adc testl and adc dec sahf lret and adc cmc or pushf sub insl cmp jmp sbb gs (bad) test mov cmp adc (bad) push or push fs sbb jl or or (bad) adc repnz dec pop inc pop pop inc cmp or push pop pop mov push add cmp or or and bound dec or inc jne push push cltd mov scas loop sti pop (bad) mov (bad) (bad) idiv push mov (bad) ret (bad) enter xchg push sub add cmp lock xor dec jne mov mov cmp pusha call jne cmp jne es jne or inc jne mov fdivrs inc (bad) shlb fiaddl add scas dec pop fldlg2 fldl xchg xchg fyl2x fstpl and mov shl sub movsbl mov add mov std rorl testl stos dec xchg inc cmp stos insb fstpl flds aaa sub mov jne jmp fmull fcoml push mov or inc push adc sub je xchg lret and cmp push xor test fisubl lock jae pop (bad) lock lods mov sbb scas gs rol pop add lcall pop xor mov movsl add jmp jbe fmulp jp xor sbb or xlat and mov inc mov daa scas insb push out loopne inc or xor add cmpsb or mov addb or scas enter daa or or adcl add push push fwait lea pop (bad) aaa dec inc cs add pusha lahf push adc pop dec sti xor and dec sbb cmc mov fild aaa jmp push lcall inc inc xchg inc inc sbbb mov (bad) xor cmp adc mov insl sbb adc add repnz add add cmp xorl jmp mov adc lret adc pop cmp lock jb push mov dec push jge push inc loop adc sbb fimul (bad) mov push loopne mov sub xor sbb push adc sbb xor (bad) pusha leave push sub add mov dec andl mov lods inc ret fbld fwait or test or je test mov mov jne ds out xchg rorl xor repnz (bad) mov mov orb add dec sub cmp push iret push jmp cmp sub cmp cmp nop or or jns (bad) jp pop ret jg xchg add sub xor xor sub int add cmp cmp gs push xor scas repnz add sub cmp addl (bad) sbbl add sahf je xchg inc mov or loop mov mov inc jbe sbb aam rcr outsb jle pop je mov das je or sbb je xchg fwait mov cmp jne jmp sahf cmp mov mov pop dec movsl jb js daa mov xchg dec pop sbb lods mov (bad) jmp ret iret xchg daa iret adc dec push test int3 iret xor xlat mov sbb enter shl je lahf mov in (bad) or icebp adc push pop adc mov xor (bad) lret arpl lret sbb in lods add insb pop jle int rcll mov pop pop push push aas in adc mov mov lock (bad) and sub and push xchg int3 std clc inc lods insb pusha cmp jne cmp jne mov test (bad) push fs mov xchg pop cld mov pop mov and icebp jne xchg mov add add add fnstsw dec xor les cs push inc cmpl out add gs dec mov and sbb rcrb stos add pop mov shrb loope push push mov insl jl popf push cwtl xor add je js (bad) pop mov aas push mov ds push mov sub pop adc pop call add jmp pop pop xor int das repz jg nop mov cmp jne mov ret cmp or (bad) fstpt inc out jp jne mov ret mov jbe cmp jae loop or ret xor call and mov in jg or or leave push or fimull adcb (bad) mov lret cmp jle xchg repnz mov pop clc movsb rcl inc lahf mov mov sbb lea xor imul jno xchg jl push adc push subb mov ficoml xchg aas (bad) mov xchg and xor xchg ss xchg out call jno add ret dec insl cmp test ds xchg jecxz push dec cmp fimull jg (bad) add mov push push ljmp pop jge test arpl ret and cld adc dec add jo xor nop ficoml or sub in push aad dec xchg push add xor (bad) sbb test cli sub push cmp cmp sbb xchg add jle add push push push dec cmp loopne cltd mov sahf test daa pushf pop insl ret insb (bad) pop or jle pop sub push into ds jle add aad dec or jle mov jle add push and sbb xchg and xor jno mov mov jae lods pop pushf mov lcall sub les adc int or sbb sbb add jmp sbb lock imul pusha push dec popf push adc dec pop dec iret cmp (bad) xor js sbb mov xchg loop clc test mov lods inc shrb sbb pop mov sub and btc out js cmpsl mov and scas push xchg mov push push xor sbb push push push (bad) into sbb add xchg repnz adc loope call dec jnp into or sub ja lock movsl shrb add out not clc sets dec rcl cltd mov dec sub push cmp xchg mov (bad) sub push cld into cs fs push loop add or pop sbb push xor daa popa aaa adc adc sbb dec shrb fidivrl rol aad inc inc push pop ja cmp cwtl dec pop sub lods insb add adc mov adc or lods jns adc aas add sarb mov sub push xchg inc push ret inc adc add fnop les adc incl or or lock pop test (bad) lods andb or idivb mov pop fcmovnbe sub mov das hlt jl cmp (bad) xor jp clc add cmp orl mov lods sub sub jae dec cmp sub movsl cmp inc test sbb mov fild add clc add lock (bad) lret mov xor or and mov into es and comiss push xor push popa jns or xor je aad push repnz daa jbe,pn popa in cmpsl jb dec push jo xchg mov adc sbb and pop or lods lods pop je movsb xor add clc push decb iret jne cmp sbb cli push push and jle push lea xchg sahf push push dec testl pop cmp xchg lock or fsubr or push xor dec adc or lcall push sbbl mov or mov popa pop imul xor adc test rorl dec neg adc push mov and mov lods xor and fild or xchg or push (bad) out or test gs dec add and push add sub add pop lods (bad) iret aad aam push xorb dec adc cld enter push add fldl addr16 mov xchg pop cmp add ret sbb adc loope imul inc xor inc aas push jmp xchg cmc push or push sub ja lds push push jmp push loope adc mov adcb fwait lret ss mov aas lcall add daa xor je adc push jne cmpsl jns inc xor daa ret cmp or sub dec mov sub pop adc add pop sahf lret adc adc xchg out xor daa pop int3 jle in mov adc add sub and fisubr in add jo cmp push test dec jnp add sub push push mov rorl push aad and xchg push cmp mov fcos std rep stos lea mov lea sbb or sbb jno ret clc push cli cmp push dec xor fldt add je mov or sub lds bswap fdivl jne movsl movsb popa push call mov stos and call jg rcll adc adc add repz sarl into cmpsl mov test pop dec mov push sbb add repnz fisubl mov mov ja jp jne ja push fldcw push and and aam pop mov adc push mov or xor shr sub sub movsb call rcll ficom call roll add rcrb jge fsubrs cmpsb hlt cli push mov or ficom push cmp sbb jl movl adc jo add inc mov mov xchg inc or jle xor push mov inc outsb sub ret xchg into mov sub insb cmp and int add scas add or jo cmp push (bad) (bad) (bad) adc mov lea cltd (bad) or imul sahf inc cmp pop adc add rcrl mov jge mov push inc js bound pop psubb mov outsl jg push mov adc ret sub rolb dec jne fdiv fwait mov inc mov inc jp int xorl fistp xchg (bad) in mov nop mov push test (bad) (bad) jge repnz push call cltd mulb sbb xor inc cli out movsb mov insb call faddl call adc mov pop and lea jmp lea jmp fcmovb sub data16 adc sub ss mov push push or adc popf scas mov or lea lds lcall push sbb xchg cltd push inc addps out sbb or lea and xor pop cmpsb mov je fisubl mov add and mov in (bad) inc add sub lods sbb add and mov fbstp dec or je or decb push lea xor push push inc inc fiadd das test std rcrb sub xor mov jle and push nop pop lea lahf dec xchg jmp mov dec inc sub imul mov lods in dec push push lea pop jb rcll push fwait push jmp fiadd in ja push and dec or and sbbl (bad) push and dec and xor dec jnp clc sub loope jl mov test mov mov push or dec je dec adc push adc call sbb faddl inc dec int3 jl fildll push xor or mov (bad) jne sbb icebp (bad) xor jbe sub add add ucomiss clc clc sub sub mov push rcrb xchg aaa mov cmp pushf es das jo mov jge sbb mov sub mov clc push dec mov jo mov cmpl mov pop add inc dec test push add xor mov xchg dec add test jne jmp rcll movsb ds mov stc mov (bad) or push add jbe mov sbb and or mov std and cmp dec inc sbb lret fsubl dec inc mov insl xlat lea sahf mov (bad) aad pop add cmp jle cmp sub xchg scas pop sarb loop or fadds cmp cmpsl xor adc push jmp out push sarb add (bad) inc mov pop ror push loope cs mov dec add fsts mov pop pop sbb daa in and jns cmp jne inc dec push popa xor add add mov xor data16 sub pop mov aas sbb jecxz push nop cmp and push leave call mov addr16 cmc out ret add je stc lds add cmp in in adc loope pop lcall and mov fiaddl xchg inc shll xchg push les dec xchg mov xorb xchg (bad) dec ds mov or in add xchg sub imul and mov jle pusha repnz add std ret ret popf negb out sti cmp sarb jecxz ret mov repnz and sbb push pop cmp add inc pop inc mov mov or pop or sbb (bad) dec dec mov mov adc call adc enter jle imul in pusha lods aas rclb (bad) mov add shrb (bad) sub mov loopne add mov addl popa outsl sbb jns add in arpl cmp push adc arpl je pop in mov movsb dec je sbb adc push and pop xor mov not jecxz mov mov jne add in push push sbb hlt dec cli jne pusha xchg and dec ret push and add daa adc push push cmpsb xor and jne out inc push pop ljmp lea mov xchg mov fisubrl or inc add lret mov icebp xchg test adc or inc inc push lods sbb mov test ret add pop lcall xchg outsb add xor pop pushf push fmuls and popa push push jge sbb jo cmp popa pop shr jb xor push and mov test xchg (bad) das xor into or in mov pop jl js mov mov add xchg xchg je adc sub and mov rcll jle,pn ret rcll mov mov xchg sbb push add es scas adc or inc adc adc or cmpsw ss inc in add je add push ss cs mov rcr or into orl mov (bad) xchg and into and or jge mov pusha sbb in movsl daa cmpsl mov ss add sbb add mov fdivrl xchg in adc jns jecxz insb out in and push das push add jnp insl pop xchg add sbb imul fisub push ret into aam cmp dec int3 inc cmpsl mov sbb enter cs cmpsb enter or sti dec lods mov pusha xor (bad) and xchg rorl ja add mov jae or idivb sub mov adc xchg xor jle mov mov out mov add aaa icebp fadds jo pop (bad) cmp and inc daa or inc adc mov dec aam jl sahf dec push cmpl jp jne inc and dec dec roll daa dec push mov jl incl mov cld aaa mov ds cmp lods add and das imul push mov jge mov scas or add lods scas test testb add or (bad) jnp rolb mov push mov outsl jl scas jo mov push mov adc test scas rclb or test and mov inc clc lods int3 (bad) pop mov ja jp add push call inc xchg rolb stos outsl rorb lea rclb stc or add loopne xor add push mov jo jmp pop and jne imul je fadd xor cwtl rcrb cmp pop push pop fsts divb jb mov or outsb sub mov mov xor push pop sub popf cld in mov mov les sub push or jo inc pop push mov dec fmull stos and mov mov pop xor (bad) rolb add stos or and push lcall pusha cmc cltd mov sub cmc aas sarb int3 adc shl sub std mov xchg nop cld and add push repz sbb pop test sbb rcl add jne (bad) jne add lea jp insb mov mov inc ret cmp outsb dec aam push push cmpsl rcll ja aam push adc mov push push mov adc aas or mov loopne xor aad mov push je jo inc mov sbbb out les and dec in ret jle or push sub scas insb enter push cld dec addb mov jle inc int3 push add insb inc fcmovb out or and insb ljmp fdiv loopne cmc lret (bad) mov insb ret pop sub sub mov stos jne outsb mov sub dec xchg sbbl push test cli and add mov cltd fidiv dec mov addb pop cmc loopne ret shrb inc (bad) lds add ja mov mov clc lea lret out push clc pop int3 xchg je faddl out fiaddl or leave push loop je idivb test das xchg add push pop mov push push add adc outsb pop ds push push dec add pop mov pop and sbb pop push mov mov scas dec cld mov jl jg push stc jbe dec mov jmp or mov sarl loopne dec jo cmp imul xor and (bad) mov inc or lock pop cmp lock data16 xor xchg test xor movsl add pushf clc inc and dec clc add mov mov es aas inc or sub je dec ret cs push or mov (bad) mov divb adc jno enter and orb test push or push sbb (bad) xchg and imul xchg or add add adc int3 jb cmc dec loopne jmp pop les inc pusha outsb pop cltd in xchg add and fimul xor cmpsb pop pop mov lock push pusha push lret pop repnz dec cltd add or adc mov loopne dec push addb nop rol dec lcall adcb xor jg jle jne pop ror mov bound inc rclb xchg push push ret ja push pop jp push sbb sbb xchg sahf (bad) mov xchg repnz add cmp fdiv arpl push jnp cmp pop jnp lahf push mov adc push or (bad) mov cmp jp imul add in jg sub dec adc xchg pop mov or add dec cmp cmpsb adc add lods in xorb sbb xor insb xlat push add cmp push popa (bad) mov dec out push bound andb pop cmp rcrb add (bad) dec add add paddd cmpl pop push out push repnz fidivrl js add push xor dec xor aad push and inc loopne mov mov cmp movsl (bad) xchg ret add lret push imul pop dec movsl add push or dec mov push aad inc iret sarl in push jle in cs dec lds inc mov cs in mov cmp inc shlb and dec cmp sub or add cmp cmp or testb pop and imul shrb cmp aad adc jmp mov pushf in fisubr sbb cmp hlt lret rcrb xchg shlb fistpl sub inc dec js and pop and stos adc es les jmp arpl push jnp mov inc sub xor mov or pusha ret pop pop push cmp mov xchg add mov mov adc or sarl pop add cmp scas inc pop cwtl pop pop cs or iret iret push fldcw movl inc and pop pop add movsl cs test (bad) rolb sbbl inc cmpsb add adc and sbb cmp inc mov or pop xor mov jbe,pn (bad) mov test jle mov mov stos xor jecxz ret (bad) push insb sub and xchg mov add sub mov pop jne push lret fwait xchg mov pop pop push ljmp xor std pop add or adc outsl insb test push cmp cmc loop mov cmp xchg inc and dec test ja push (bad) push mov rolb xor fstpl (bad) repnz ja outsb mov mov cwtl or inc adc and push dec jp cmp jl mov ficomp daa push sbb fistpl push insb imul cs sub mov sarl pop sub add sbb js dec pusha in aaa lock adc sub dec insb mov push cmpsb push test add jg and fs push pop xor jne jp fisub loopne repz sub imul mov mov incl daa mov pop xchg ret dec and stos lcall fsts mov pushl dec sbb hlt cmp jle or int3 sub rcr and dec test cmp push add pop (bad) push (bad) cmp jne push ss mov lret and imul fcoms xor pop bound lret insl jne in ret pop pop mov push js or sub es in das cmp pusha int clc add add inc dec test jnp sub mov push movl xchg push and hlt (bad) mov or decl ljmp or outsb add scas adc mov fstpt pusha movsb clc movl pop insb cmp clc rcl je sub rclb push inc bts into push xlat add rcll add and push push inc sub jo sub inc mov or int3 add lock orl mov scas cltd js xchg mov push sbb (bad) add popa inc and or sbb sti fwait inc test in and push sub sub push sbb aad sub sarb mov jp hlt or xorl clc ds or jp repnz in and jecxz addl or cmp inc mov push cmp xor dec add sub xchg call insl ret sahf push imul sub xchg mov pop call push testl nop push fcmovbe inc sbb add xchg loopne jno push mov movsl shlb iret jmp arpl sbb inc arpl insb lock push in lods sbb sub mov insl lret xchg (bad) (bad) das pusha mov rcl push std pop push imul mov scas sub adc sub xor out push push cwtl lret jp insb sbb adc fs imul dec push add pop stos push loop jo aam jmp nop or add xchg sub sub xor test adc call int out mov test add add push bts pop ret pop cmpsl push ret jle out int3 ret pop sbb mov jl dec je shrb cmpb sub pop adc dec pop orl adc sub or imul pusha jne in fdivrl fnop test mov or jb or push call dec pop int3 inc adc xchg or cmp fmull inc shlb ret inc xlat mov add pop add icebp or test mov das pop inc enter or push dec mov cmpl dec dec add inc out call add dec sar mov pop js pusha or adc or mov pop je jo sub (bad) ljmp and mov fcmovb lret loope lea mov or leave jmp xchg mov fsubs pop jnp arpl and mov (bad) dec jmp insb loop pop add or sbb rolb das add dec adc sbbb pop pop out cmp fild add es je loopne mov mov xchg ret mov bound mov pop cmp aaa inc mov sub or push jo mov iret mov pop orb lods adc sar pause (bad) jp movsb mov cs aaa pop xchg inc xchg stc add or sbbl cmpsl sti fnstenv xor dec fwait sbb bound pop psraw jo pushf xor (bad) mov or xchg push arpl mov out adc out les pop (bad) sub add add inc outsb dec and adc and stos mov cmpsb (bad) add test sub push cli push je and fcomps dec inc push movsl dec push divl push jbe push push repz gs insl push jg dec dec lcall out add lea data16 cmp push rclb inc clc dec lea imul adc push add adc jl mov add or mov inc push dec mov cmpw adc fisubrl cmp jne dec fisttpll push outsb ds add dec mov push push insb rorb and sub pop and mov cmp sbb or cmpsb inc repnz inc (bad) push enter pop or loop ret pop push loope or push ret mov sbb add jp aad fmull insb push inc add mov cmp cmp int3 jle aaa pop pop scas pop pop cmp inc sbb cmpsl pop push test mov in ret xchg mov aam sti lea ret adc imul or mov mov add mov cmc xchg rclb ljmp adcl mov sbb aam rolb and add xor cmp add cmp or pop sahf ret incl push bound dec aad inc jno xor inc adc shr outsb mov mov je and jo (bad) pop dec enter push add xor pop jle mov inc adc pop dec push push mov or data16 pusha mov jecxz jp mov dec push cmp mov adc push ret (bad) insb clc jne mov jp sub dec add int add jle xchg (bad) mov rorb fnstsw push pop call add test pushf (bad) ret js cmp cmp sub or punpcklwd mov xor aam je cli dec sub dec sbb loope ret sbb fisttpl xchg and cwtl push lcall movsb or sbb or push jge xchg outsb push add or add pop add lahf movsb in aaa test outsl fildll cmp into mov ficom cmp je xor aad dec push xchg adc aaa mov (bad) ja mov or inc lock jo lret (bad) sbb cmpsl pop outsl dec fadds test pop negl or push cmp push push jmp and mov and orb sbb add mov fldpi dec addr16 sub cs push (bad) inc ds push push push ds cltd or xor push add out push push and stc cmp or sbb jp pop insb mov fidivr jl jae adc decb jl std add ljmp sub add cmpl clc dec adc popa xor push push nop mov xor inc (bad) xor or mov hlt inc sub data16 or jns testl jecxz dec outsb add inc test cmpsb dec sub adcl sbb add mov adc add adc xchg pop push push push push pusha hlt in jp icebp add mov xor adc pop cld loop push lahf rep xchg xor insb lods js jo (bad) enter and mov dec add dec inc cmp sub add loopne (bad) adc sar xor adc mov push pop pop rcl insb hlt cli or lea lock sbb push loopne or xor roll shll es xchg dec inc enter add push mov ds mov ds sahf std pop inc pushw pop out inc mov fwait jnp xorl mov and lods sub decb cmpsl mov add clc pop sbb dec xor movd add push fadds sub sub test cs push loopne pop rorl push push mov dec pusha call loop pushf imul hlt or dec add in sub mov jmp rcrb xor mov sbb call inc pop lds push push jmp (bad) repz in xor dec test push ss adc adc push fildl mov fs lahf into jbe jbe inc sahf pop push and jge neg aam rclb pusha xor mov pushf push cmp sahf sahf mov cwtl inc or test sub add es fwait and inc push aam push or (bad) aad add pusha rol cmpsl push in xor adc push push ljmp mov popf jb push pop jo push lock jl pop jns data16 cmp jne fldenv and cmp repnz and add fbld sbb inc xor xchg mov sbb jl xchg and inc mov hlt fwait push je and mov (bad) lret xor dec push (bad) mov lcall jge add jno add out and ds or xor call xor sbb (bad) fnstenv push mov addr16 mov ljmp mov test pop mov jp adc out into push fiadd push js jg (bad) rol lock sbb cmc mov sbb cmpsl sar mov adc lods cmp adc sbb jl push inc je push xor loope lcall addb and (bad) push push inc xor adc stc pushf lods xchg adc pushf and inc leave adc addr16 inc jmp sub sbb jns dec mov adc mov shll cmp icebp ja sbb and sbb inc test pop push cmpsb push in flds ljmp inc out je jmp dec push and sub jge ljmp cmp popf push sbb push and loope or or sbb sbb ret xchg hlt (bad) subl mov xchg movsb jbe dec jnp dec xchg dec mov js or pop ja jle push push popl mov jmp cmp adc or push or cmp test pop iret ror adc aaa cld dec push in push push cmp lock sub les mov insb push pop lock inc in and push mov push nop jns sub inc pop jae add mov jo inc dec mov and jge adc adc adc pop es cwtl push adc mov push or push mov sub dec mov inc aad pop bound cs repnz jnp cmp lds addr16 movsb or (bad) cmc xor pop push add (bad) mov dec lds lods cwtl (bad) (bad) xor push jp pop fsubrl mov or xchg int3 xchg pop push inc add pop and add mov inc ss push loop mov push pop jmp enter add add data16 or mov inc inc sub pop inc je jmp adcl addr16 sub scas add sub inc add push cs mov lea pop or xchg xor jp fildl sub imull sub push nop and gs and sbb and loop push leave or or xor xor mov and insb jg adcl ss popf mov fmuls andl cmp inc je pop cmp pop pop jl adc je sub inc adc sub (bad) jmp outsl cli xchg mov or or cmp adc adc add jg sub add insb cwtl push fisubl jle mov cmpl jge inc (bad) jp or cmp jle fisubrl ljmp adc (bad) jg push push push add jmp lret lock jg psllw adc dec xor lea pop add scas push adc je add daa add inc push adc addr16 mov jge adc stc push jbe cmp shll jl jo mov inc pop inc pop lea push popa add aam incb pop out or push mov adcb pop (bad) lret subl and pusha mov ljmp xlat sub adc mov sub pop cmp stc push inc push nop pop ja inc mov cmp add sub sbb dec repnz flds push sub inc add out jmp xchg (bad) test or adc pop mov mov adc movl jl imul cmp mov add pop mov aaa jg xchg les xchg int fs xorl (bad) roll jp mov add jo inc add nop rolb sarl jl jnp or fsubs lcall xor in jns pop inc cld mov ja add mov jl cld in mov jbe jmp jb scas pushf mov scas jbe push shr out xchg push xor jl clc push inc cmp fistl fadd jae aas sub xchg ja mov xorb pusha mov push lock cmpsl insb ret mov cmp rcrl dec or inc mov mov movq jle add pop add xor lea (bad) push add mov inc mov or jl leave clc jo add inc add inc dec repnz push xchg cmp push test adc int3 mov stos test lret pusha sub jmp adc push negl loopne xor push dec mov xor sahf cmp popa xor mov jp dec or mov dec add data16 mov jne lcall enter fmuls fist mov mov (bad) clc in cli fldl add div fnstcw inc xchg cmp out out xor andb (bad) leave push lock inc nop jl test adc xor es or sub ret jle xchg inc lret jle adc popl hlt imul pop rorb (bad) (bad) addr16 inc jb pusha loop popf dec cmpsl sub add adc jns test adc inc push push xor (bad) out pushf (bad) fbld lea push idiv or mov pop add and xor xchg ja dec cmp add mov and rcrb add es mov and lods xchg out mov mov je add lock enter fsubr ret pop ds xor (bad) fmuls aad mov xchg daa jb or jne inc fcoml lret loope leave clc outsl sub sbb sbb dec fs xor xchg push add idivb mov data16 and loopne (bad) jb and aas nop dec mov and ret mov loopne test push andl fsubrs xor sarl pop add movsb jne xchg fimull ljmp fndisi(8087 xor sbb outsb movsl mov mov test and imul cmp add adcl mov push push divb add add xor aam or adc cmpl pushf je je adc or sub fisttpl mov aam pop add stc imul sbb fsubl or popa add xchg mov sbb push fadd stos xor jmp call add lret je movsl ficom scas (bad) push cmp and mov (bad) adc dec push cs sbb and iret adc adc jae mov push pop mov loopne sub jo lods pusha cmp or adc fidivl repz mov adc pop out pushl pop or jl repz xlat dec jle xchg sbb and sbbl adc mov dec or dec les mov mov push sahf push push xchg js call ret aam pop ret dec sub xor shl fsubrl add jecxz cmp cmpsl and test and stos push push push cmp sbb or in test data16 push or rolb mov mov rolb pushf add test dec jle lea loope aad pushf dec out sbb pop pusha jl,pn es pop lret add pop movsl xor cs push adc jmp lret enter dec fwait dec nop pop aaa outsl push sub inc mov sub xor cmp cs add mov push cmp lds add adc cwtl push sbb adc inc cmp xor dec fs mov pop adc dec xchg mov clc mov xchg std add mov mov pop lods inc add inc cmc pop hlt mov sbb sub mov rclb adc mov mov or or jp mov xchg and sbb loopne lea inc (bad) out sbb adc and wrmsr adc mov mov cwtl mov inc outsb pop add mov insl or lods sar loope adc push sbb sbbl clc mov pop rcrb dec adcl sbb cmp movsl xchg jo (bad) fnop (bad) nop and rcrb jnp loop les outsb xor dec (bad) shr xchg cmp inc cmp ret rorb gs jmp dec lods fwait rcll jmp xchg and cmp push push sbb push dec or pmaxub add rolb cmc push std cmp inc scas mov inc nop pop clc lcall ret xor test xor lea mov xor add inc mov call fistl dec jne jmp aaa xchg add sbb push push mov insl scas (bad) (bad) and negb sub and ret adc ja pop les mov cmp jl inc dec sub cmp (bad) rcr jmp push sbb pusha or cmp xchg sahf push pusha fisttpl push inc pop repz jne push adcb add out outsl dec sub add (bad) add fadd pop lods je lock sbb or push and es test fisub nop adc push inc jo inc js testb add push pop xorl push inc or pop ret mov js mov jns ds sub mov outsl rcpps outsl add rcrb (bad) cmp jne and push and sub mov insb sbb and or sub sti sbb rclb add cmpsl push lock add lods das loop fisub jne cmp aaa jle negl jns mov adc push xchg mov mov inc out jb and in and jae cmpsb inc dec push add push jbe daa sbb pop scas add mov rorl (bad) or mov or and test aas push jle push addr16 loope rolb push push and lock addr16 or in sti push ds jl loope pop in pop ret xchg jbe dec (bad) pop add sbb lcall lret (bad) mov mov mov mov bound jne mov inc loopne clc or incb mov roll dec js xlat or ss xor push fwait mov xor clc xchg jne sbb dec movsl xor push add inc shr cmp jg push or fsubr or andb out dec jmp imul rep or mulb je or sub xor pop cmc fnstenv cs gs cmp jmp add inc push or aas push fbld adc mov inc mov pop call and fsub add fs push inc add sbb sbb lock fidiv daa pusha lock jle dec roll jmp xchg rorl lods lods lret loope xchg mov sbb add pop push je imul out sbb dec cmp jmp push cmp and jne and sub push and in cmp in (bad) (bad) mov pop pop (bad) cmp out push fs push (bad) (bad) sub ja rclb rorb addps add je movsl clc adc notb repz dec js pop mov fsubr cmp lahf std jns push and jmp jbe cmp ds xchg add pushf jmp pop sub out dec xlat lock rcll or out mov rcrb push xor ss xchg dec sub aad sbb push ljmp (bad) add jge mov mov test sub add jge add adc mov push lcall pop pop scas add nop push es xor or push push test clc shlb adc push cmp pop pop push push and push data16 lock push push faddl dec sarl inc pop (bad) push cltd push js fdivrs or jne (bad) pop pop push and jle push push push dec gs lret mov push orl outsb pop xchg jo or loope inc inc iret cmc or and sub pop or xchg movsl sub fmuls cli add test add sub or xchg mov mov inc sbb movsl cmp xor loope les rcr das test mov aam mov adc adc in outsl xor add sahf cmp dec and ret (bad) dec dec and push push cmp stos cltd adc xchg sti sbb jle mov or push and mov fsubrl and jns adc push fcoml jg inc add orl gs (bad) out inc clc ret pop je (bad) fistl fadds clc outsb ret sbb add aam sbb je lret fmuls faddp xchg inc jb jecxz add lock int3 sahf adc adc out fimul inc dec jne std inc fstp add or icebp adc pop cs cmp jb push jo jno add jae jo and sbb xchg and inc daa test lds push push adc shrb mov shrb and xchg adc adc mov sbb loopne dec loop and push push pusha (bad) les fs cmp mov inc aad aad cmp pop sub mov jne nop lods mov adc xlat jg push mov dec loopne (bad) jnp int3 mov push idiv add aas in and cltd js ret rcrb neg push inc loope pop cmpsb jl into and sub add jo lods mov shrl xchg mov (bad) sbb adc pushf sbb push add add das cmp test stos mov xchg dec sub mov and hlt pop loop add sbb sbb add in cmp push push cs add pop pop mov inc cmp dec sub insb push mov and lds push in pop mov pop jp mov push or jbe mov push out lods xchg xchg xor pop jb clc mov add jle outsl loope loop movb movsl iret out and adc lret jmp pop cmp jbe sub jae aad stc notb insb jae mov into push xchg xor inc sub inc lcall ret dec xor sbb pop and and js adc adc mov push xchg sub xor push in je jle aas fs dec or pop dec clc ss cs or add or add orl cmp mov jae out mov push dec dec inc jl inc sbb int3 aad push leave add xchg ret mov je repnz sbb outsb pop adc add add sarl mov sahf adc (bad) adc xor add dec inc sbb push ret (bad) cmp std pop dec mov jo test jbe push adc fadds addb jg adc inc dec sub inc jg popf inc jle jle imul (bad) int aam jne (bad) lock mov adc mov inc push mov inc xchg (bad) repz push dec cmp add insb lea dec mov insb mulb jecxz call dec std add jb cwtl mov aad adcb fldenv pop add loop jmp popa movsl das or shld and shrb hlt sbb aad xlat and xchg cmp std bound adc insb sbb mov xchg call ficomp icebp cmp mov adc add andb out and xchg popa sbb mov cmp push fistpl and mov lcall sub les jae or or cmp adc imul sub adc sbb mov and xor push adc lods push fwait decl sarb ret fcomip loope or push push es inc fsubr mov dec imul add or mov add adc fs rorl call inc add cld out adc mov adc and sub push mov subl sub scas add dec enter push (bad) pop std adc sbb scas pop movl inc lea pop mov out and mov test and orl push cmpl leave mov mov cmp xor ds sarl std shll sbb scas mov or or mov push push mov dec xor add rcrl aas cmp andl push jle out adc pop cmpsl stos push add jl or pop test jmp and adc xor or push (bad) cmpl and and dec es xchg jbe das xor pop add add inc add in add xor test xchg cs jo out jne add jne mov stc aaa pop jnp mov popa add and ja cmp bound cmp in lret add push or cmp jle push rcl pop mov mov sahf in sbb mov ss and push adc sti or mov push repnz jg jne test inc dec push (bad) inc mov out cli adc out cs mov inc xchg mov mull pop xor or (bad) xchg int3 aas fdivs mov (bad) aam sbb stc inc dec fsubrl and inc bound (bad) mov xlat xchg in mov into fisub dec testl ss add pop xchg xchg mov inc cmp and sbb (bad) dec fmull or ret shlb xor add push loopne inc inc xchg or les pushl cmpsb and push out adc pop cmpl mov inc insl fisttpl adc shrb rolb sbb push in sub int3 jge repz stos sub int3 push push ret jbe (bad) in cmp je push js je (bad) xor mov pop pop pop mov and pop dec add jge mov sar addr16 mov dec cmp lcall jg adc iret insl pusha cwtl sub push sarb cld sub mov adc jne (bad) cs sub cmc jmp hlt inc (bad) jbe lock sub add js add inc fdivrs lret cmp adc mov in or sub or jl sub adc or lret movl dec int3 mov dec push push inc add adc daa and movsl jge sub popa add pop stos add stc add pop cwtl sub inc lods dec out and xchg cmp pop or jle rorb add push mov dec and jo fs push outsw stos call sbb (bad) in gs in (bad) and sbb add or add jb,pn mov jge cmp jg jne std push std or jne je inc (bad) je mov push add or adc sbb daa orl in (bad) ss xor adc fcoml movl pop test imul (bad) cmp gs data16 les add push sub add push inc sbb stos and mov sbb inc sub mov mov ret and or or add stc cmp (bad) bound test and dec out lret push push jmp fdivrp aam cltd test sub adc adc xchg inc std ficom xor cmp les inc lret les int3 (bad) lock or addr16 add pop cli cld lock les fiadd sub pop out sub cmpsb sub outsl jae sarl xor mov sub cltd xor adc jg inc test movsb dec loopne add sub push sbb xchg dec sub or fadd xchg out in push sbb lock lock out std mov cmc xchg push movsl lods scas jmp lret pop pop adc movsb es mov fdivrl jne mov jecxz pop inc addl or lcall hlt sub nop mov jne mov jl jmp add sbb int3 popa adc and push jo imul dec insl pop jo xchg sub cmc pop sub adc mov push mov dec xchg pop andl aas sub insl mov inc dec dec and pop ret fbld addr16 and xchg hlt xor idivb sbb das inc clc rcll sub cmp sbb (bad) popf lods rcrb inc pop adc js fs fs fwait push mov inc adc cli mov xchg cs push sub push push nop and sub ss das call ds mov xchg loopne in inc ret add push inc jg sahf ljmp out clc inc sbb jo rorl push inc pushf mov test (bad) adc and xor adc ret xor xchg cmp (bad) jo push fidivr pusha test adc xor mov cmpsl ret leave mov or cmp (bad) mov push lret jae pusha push cmpl inc clc sub cld mov je mov lods imul aam or (bad) mov lret pop xor or jmp sbb adc add repz adc add nop adc imul test adc or mov or cmp jo inc orb push xor (bad) push push cmp sub push add outsb dec mov jns lock fmuls pop or jbe das pop push ret pop scas in sbb push xor popa pusha test out or push push cwtl push fadds lret or les andl sbb xorb dec fimul xchg mov and or imul add cmp mov xor sti and inc sub xor and inc dec cmovns add inc cmp mov bound and push jns sbb shrb aaa or cmpl adc mov in jns push push out rolb mov les aad mov and mov clc mov push pop repz das adc push mov sub add jmp mov std mov push iret and pop push lahf insb fs adc cmp mov mov inc dec test pop and fsubrl sub mov add sbb aad rcrl jo xor or out add dec mov loop lock jl call imul std cmpsb xor add test call pop addr16 mov sub or and jg aas mov dec lret idiv mov mov mov mov shl data16 test push inc stos sbb ljmp jne fnstsw clc add jmp cmp sub inc sub mov and scas jno push jge sub into sbb add call add push rcll mov dec push aad es add mov and inc mov inc adc or movb mov in cmp push fidivrl dec sbb shrl mov inc or fisttpl push or dec ljmp fidivrl sbb add in (bad) mov movsl push pop clc adc incl and lods test clc jbe sub inc je inc sbb mov dec or inc lea imul push (bad) push lcall add jae inc cmp rorb inc clc (bad) (bad) daa push lea (bad) and and les adc rol mov daa (bad) idivb mov cmp jbe cmc sub test push in (bad) jle push les std dec and bt and lock (bad) (bad) push push mov adc and cmp fdivs (bad) fistpl inc lds out xchg dec cs mov (bad) arpl movsb addr16 push pop adc cmpsb add aas sbb pop fmuls test mov mov shr push sub adc jmp adc nop ds fcomps inc dec push lods push int3 or push pop cmp movsb and or dec adc icebp sbb lret xchg ja cmp jno call and rcrl out xlat shl lds or hlt or xor cmp and das loope ss aas aam ret push push pop add jb or dec pop inc js push push sbb std mov mov aad loope bound dec in push loopne and addr16 add or loope sub es add lahf push cmpsl std and add adc test sbb mov movl sbb pop add push adc (bad) push (bad) jmp adc or and push add je andb je pop xchg lea jle mov jne int3 adc lea xchg push ret out push lods inc xchg pop imul add ss ror or ret jns xchg ficomp pop or xchg sub loope dec lea lcall and outsl push push data16 mov cmp xor insb dec sti pusha ret pop push cwtl xchg mov cmp sahf cmp xchg lret and (bad) je or adc cli sub je aam push sub ljmp push add push lock adc sub add dec pop cmc inc cmp mov nop cmp add test push jle sub fild (bad) or jo sarb ret or xor jmp adc dec movsb mov insl insb push add mov push out mov insb pop mov lahf out loopne sbb add sar fdivs cmp (bad) mov fwait mov add inc cmp das sarb or dec adc inc mov xchg xchg adc sbb sub inc add xor inc pop cmp xor xchg add shrl add xor (bad) xor and sub lcall mov cmp cmpsb imul dec add push push cli dec loope mov pusha push cmp push int3 je daa jno sbb push mov jo int3 (bad) mov push fidivl bound into cmp push enter sub sbb mov pop dec adc nop test jnp push mov adc adcl or in xchg cwtl aaa xor loopw add inc mov stc movsl test aas add adc pop adc cmpl and inc sub mov je mov mov movsl jmp xchg jl cmp or xchg add add (bad) jbe test and xchg adc lret mov call decl adc or or outsl mov inc cli je insb lea test outsb pop mov push push mov inc add js (bad) mov sub int mov lret mov mov sub sahf pop pop jns push mov cmpsl test ret push push and cmp pop in xor mov js and cwtl or int3 and push pop adc push jno incl sub mov imul pop (bad) loop sti cmp jae xor test out ret push fsubrl nop pop sbb push or and cmp jae pop mov xchg mov or push xor into cmp mov jb rorb dec stc sbb mov and sbb loope cmpsb sbb sub sub movsb loope out test test int pop push or or mov add pusha and stos and orl jmp sub mov sub add mov sbb inc (bad) fmuls (bad) jns (bad) sbb insb xchg cmp inc and jg shrl sbb jns ret mov dec jae sbb ret jns push add nop adc or ja xor adc sub adc and pusha jae fisttp inc pop inc out pop sub push ret es push dec jmp jbe inc lret push inc rcll dec cmp push push fisubl xchg sbb pop or jo mov ds in mov or or cli inc loopne dec ficomp pop mov pop adc add jo inc loopne add push mov and dec stc jbe jp cmp push push mov push sbb jne mov pop dec loopne mov jecxz repnz push fs adc test and enter dec movsb mov add pusha imul jne push faddl loope pusha jle pop sbb aas push movsb insl add pop and push mov or inc sub int3 stos lret sahf ret addr16 and push pop popf jmp xor sbb sub js adc dec mov jo mov movsl clc adc scas fstpt pop or leave inc int3 dec ret cmp divb pop add add inc pusha push idivl andb push pusha mov and add push sbb add add sbb push adc das sub iret fbstp inc or hlt pop sub call sub and push sub add ja pop add mov or push aas or mov mov add or add mov mov je xchg je lea jmp dec push insl jl pop lcall xor xchg mov insb mov cmpb adc je dec sbb sahf es mov cwtl jne negl jae movsb clc or mov xchg je cmp pop sarl inc mov fstps and or (bad) mov insl cld inc mov mov xchg jno lods loopne dec fs loopne add cli jae or push push aas notb inc mov push adc hlt stos imul mov and fdivl jnp mov rol xchg inc fs sbb push repnz add arpl adc ds sbb or dec adc xor pminsw (bad) adc lret xor jno jno (bad) jb pop push sbb sub xchg int3 ljmp enter inc or push xchg lcall fs ret xchg pop push or and and and mov es jne mov insb pop sahf pop (bad) decl and mov cmp movl test cmp movsl and sahf jp jne push push xor push lods std inc push cmp mov and cmp je scas add rorb adc or mov mov add dec or ror add lods (bad) sbb lods movsb or test jmp enter in cmp or mov mov adc (bad) je or out sbb lea xchg add or mov icebp loope xchg add fsubs pop inc or xchg dec sti jg movsl rolb mov test jbe mov push int inc xlat (bad) lret mov adc add or cmp inc or add jg out cmpb jne or push jmp and sbb dec add push movups pop push sbb lcall jne pushf push jp jmp leave inc cmp movsb adc pop lahf das cltd mov faddl popa adc cmp adc fidivl jo push jle iret shll pop in bound out inc or imul lret xchg js xchg mov jle jecxz outsl cli mov mov pop add enter push jne jl movb dec or ret cmp int3 inc jbe cmp je pop mov movl pop add push aaa jmp push mov scas inc sub in orb je cmp xor adc add xchg cmpsb add divl mov cli rclb jle or (bad) fst mov inc mov jae test jne sub mov sahf in mov mov mov add sub push incb insb push loop cli mov jnp pop jne orl inc out pop add pop mov mov (bad) std cmc pop push je inc or lret sbb sbb sti or in dec or dec call sbb adc shlb mov mov sbb add sbb dec out roll ljmp popa xor aaa push test ret inc add and sub adc inc cmp push pusha adc push push loopne aad imull movsl push push add out or lods inc adc mov pop sub pushf out pusha sub mov outsl pop pop mov lcall inc call inc xor enter movsb out add or xor (bad) push add and fmuls push push insl in pop pop fcompl push push pop mov jecxz or xor andb add (bad) jno pushf mov sahf mov pop jnp subb nop (bad) mov mov int3 test xchg rorb inc mov xchg mov je add (bad) add mov lock test or inc lret cmpsb (bad) lcall and mov cs cmp sub call cltd rolb or jge sti mov inc je pop orl nop push xchg inc mov mov cwtl subb cltd jne mov cmp sahf cmpl orl sub or shl adc cli enter push xor mov (bad) pop mov jne add pop xchg lcall adc mov push cmp mov sub sbb fcoms stc add (bad) jecxz xchg fidivrl popl xchg dec loop jnp int3 pop jbe fadd outsb mov stc loop aad inc inc fadd add imul dec outsl shl or adc cli pop insb sbb mov mov jne in sbb popa sbb inc dec cmp jne pop jnp jl (bad) movsb nop sub jle fwait or fistpll or stc inc sbb or or lds jl inc sbb fwait jbe addl enter jl dec sbb sub bound jb adc loopne cmpsb and dec shrl cmpsb aam dec nop pop nop dec lods and sbb pop les dec mov and mov dec dec or adc ret ret (bad) and inc inc movsl sahf (bad) push incl add jg rorl and mov (bad) jmp lock addb mul add mov ss fcoml lock mov inc mov addb xor test xor and xor sahf or rcrb dec pop push push fiaddl adc sbb xor mov mov jns add dec int3 lods adc jb cmp adc test lahf pop add push or std rcrl pusha jo mov out adc push adc adc popf out test jle icebp jg mov inc mov xor out test dec or lret imul jae cmpsl ja sbb inc mov incb cmp adc int and loopne pop adc fiadd push push or add movsb addr16 ljmp sbb cmpsb rdrand mov add pusha push or fdivrs jp shl test movsb jbe mov je mov sbb push clc dec dec jne lods mov dec insl fs and lea jl ljmp add and or adc sti xchg dec out rol (bad) jne sbb lea or jmp jo push adc (bad) sahf test sarb dec mov fstps ss lea mov or dec or and or push mov or mov jnp jbe xor (bad) jo pop sbb xchg bnd pop ret shrl movsl mov sub xor ss loop or insb lret cmc test cmpl je bnd int sbb dec cmp jne add mov or mov test add aam adc and aad cmp aaa (bad) ret pop add (bad) mov sub sbb movsl pop adc icebp adc xor cmp adc add sbbl roll enter mov sbb jl push xchg jnp pop aad jmp into pop imul pop dec leave in jmp pop sub bnd enter mov pop sahf mov jbe sub inc dec hlt push push in add jb push and or mov nop data16 adc lahf daa adc jbe xor or mov xchg add mov jg lea cmp mov push inc cmpsb (bad) push push outsb add nop or inc push cmp sub pusha jns idiv cmp sbb imul es lds sub insl push cs cmpsl lds aad and add inc push add and in xchg imul stos je mov add (bad) enter mov sbb mov sub je outsb pop adc or dec dec cmp xchg xchg mov cmc or das movsb ret jbe hlt std cmp push lock lods mov sbb mov out xchg rcr sbb and or in fmuls xor or lds shr (bad) sbb movsl push lods sbb sbb mov hlt fs dec hlt push outsl xor pop out outsb push mov test gs dec call fild jno lret (bad) leave inc push xorl xor adc push inc sbb dec into (bad) movsl mov in lds fisubr out add adc loope,pn push dec fild lods adc xor sbb jnp push xchg mov jae add push xor addl add shlb cmp and into roll pop bnd fwait jns or push fdivl insb xchg add repnz push push or mov pusha inc inc cmpsl and jne sarl inc push roll add xor in mov sub repnz inc aaa sub (bad) stc adc inc or xor mov outsb pop adc push push loop inc mov and inc jns sub pushf pushf xor mov dec int pop std repz lods fidivrl jle jo add add ret push sbb popa and fdivl mov xchg ja push or cltd xchg out or lahf nop adc in out inc test push mov and sub dec bound jo fs xchg icebp jg sbb sub (bad) into inc dec mov movsl inc fildll (bad) dec jne sti lea pop pop push push stos pop cld push push andl sbb or and xor push add cltd sbb bound push ret ja push pop mov (bad) pop rclb aad mov mov lahf add mov cmp (bad) mov pushf pusha mov mov dec out add pcmpeqd jle push gs jl push dec dec mov add cltd push inc cwtl rol pop lock out adc jb imul lahf push popl add movsl mov xlat or jbe cmp mov pop add test mov in mov ret add in push mov (bad) mov lret inc lock test je cmp clc ret stc ret and (bad) int3 add dec fildl add mov pop pop mov push xchg and or and out fs add pop push shl mov mov or xchg insb push sbb and insb or adc adc rolb (bad) out pop push xor fdivl lock outsb push push push cld or add shrb dec add fs sbb pop (bad) xchg hlt mov fsubrs cmp push push adc adc hlt xchg mov add add sub aad lea push push rcl mov sbb insl loopne inc add mov outsb imulb rcrb adc add loope pop or push out sbb int cmp (bad) pop jbe sub stos push aas mov loopne mov test sbb add pop and int data16 lea push lock add jmp (bad) jb mov incl jno shrb add ret in loopne or mov add ret sbb out cltd (bad) (bad) mov mov clc sub ss clc cmp pop mov cmc sub dec repz push xor push push push push int3 push mov inc push adc rolb popa xchg push test sahf js addb sbb out gs cmp jbe dec in neg sbb mov and dec add push sbb xchg in mov ret test lcall dec pop push jb lahf adc gs lds jo outsl add lret jmp mov jg push or add mov inc pop xlat enter push add ds lock arpl pop test pop and lret into adc into mov rolb rcl and inc cmp cmp cld int3 and pop lahf mov sahf xchg mov and call test or push jge fstpt adc add or sub pop xchg add insb add push push lcall fnstsw jle push mov pop into jnp sub xor sbb lcall jecxz adc cmpb mov xor jl out jge pushl pop bts inc and stos test inc jo adc sbb adc repnz xor push mov push or (bad) or fsub test outsb sbb loopne or pop cmp pop sbb lock out (bad) xchg sub sub sub or push dec call sub push or xor sbb pop mov xchg sarb cmc (bad) or xchg dec adc and and xor pop (bad) adc stos rorl dec addr16 or adc daa out fs xchg mov lea mov int3 add jnp cmpsl dec and adcl and sbb push pop sbb imul add pop addr16 orl (bad) lea mov xor adc and mov loop dec mov pop push fs sar push add dec and cld loope (bad) pop cmp bound nop sbbl dec lods fs pop inc pop and inc and (bad) xor xor adc or mov or cmp aas test jl adc adc addr16 sbb out push lea imul or loopne add das pushf and es sahf and (bad) jno pop ss ja iret enter sbb inc rcll sbb lret (bad) push mov mov and xchg push rcrl adc inc lds inc push xchg sbb mov pop jb xor sbb or lock xor (bad) jo inc daa mov je inc add jbe sbb pusha stos or xlat je sahf inc test or mov add and jo mov call lret adc repnz jl idivl mov and pop ret jb mov movl adc inc pop rorb and add pop mov mov xorl and pop add inc sub mov movsl pusha (bad) xor (bad) in pop dec sbb movsb rclb repz mov cmc call ret dec xchg fmul pop js add mov cld (bad) push (bad) push pop imul or test adcb hlt (bad) and inc aam lea push dec les loopne cmc mov mov mov cli mov adc xchg mov mov loop sti or pop imul add add add jmp test or inc mov push mov das in push sub dec sti ss sbb mov push xor lock mov insb mov ret cmp imul cmp imul sbb cs pop jg repz repz add mov add push and test imul adc or test push sub in lock add out jne add std xchg cld add push add add adc xchg int3 xor and insl scas mov dec enter imul dec sbb push insl imul cmp mov lret adc jne loop or inc jae aad insb inc addr16 imul orl inc sbb stos inc xor xor mov cmp enter in inc push stos addb rcr or (bad) ds sbb sub jecxz adc or fcmovnb stos push (bad) mov aam insl setne out add sbb sub cli imul push mov cld lods jl out inc xchg dec scas mov pop adc add dec pop imul gs pop mov or mov jl lcall out add enter sub jge jg shll lahf or cltd adc xchg decl (bad) push cmp and insl cmp orl jp lds mov dec push dec add add add sbb push add and insb test adc and jb adc pop sbb inc adc imul pop jbe pushl pop sbb rcl cmp lret mov das (bad) inc pop xor and cmp mov pop and fsubrp lahf dec test lea mov or rorb sbb add xor lods adc (bad) popa in jg add adc xor andl push inc and jo dec aas or add dec fadds ja bound lea out sub inc jne andl jns enter mov cmp ret push loop xlat pop or pushl inc inc (bad) or dec dec sbb (bad) xor push xor insl push push and or sbb cmpsl (bad) cmp lahf insl cmp jb nop sub add xor aas add or inc add pop jl popf std and xchg sub inc cmpsb adc or sub sbb gs push push push inc mov mov rorl dec mov inc out pusha sub dec push or (bad) nop sub rorl inc push sarb icebp dec jne jne mov or pop fisubr push fwait adc dec iret shlb jle aad inc mov (bad) sbb mov sbb rorb dec push lods mov push inc cmpsl inc mov sub jecxz push xchg pusha in pop pop enter xchg xor sub sbb movsl push ficompl sbb xor iret jae or mov pop sti lcall add push pusha lret jge decl mov xor jg jle ss loope repz jb dec cmp leave inc or fdiv inc dec clc and xor inc mov je aam add adc sarl out lea or cmp mov pushf sub add int3 xor clc push or xchg in sbb in popa or movb mov mov cld cmp pop ficoml push sbb mov mov adc mov and fdivs push push adc aam orl mov pusha enter loope xor and inc jl jmp xor mov add mov or out call popl mov push pop or xchg hlt in lock dec adc test mov and push movsb sub (bad) and sub pop mov or jbe jg mov enter adc sbb jl mov pushf pop (bad) inc push add xchg cld cltd loope mov push sub xchg adc adc xor adc fldl2e mov movsb mov mov xchg xor mov adc inc orl adc pop inc pop jle fild ret add incl cmp imul into mov popf popa lea out lcall push push mov inc cmpsb sti shr pop decl mov outsb lods mov mov mov xchg mov push lods mov jl adc pop push mov add fiadd dec pop xchg test sbb mov push jo insb ja pop xor or iret cmp pop inc sbb jnp test sub insb mov mov cmpsl dec daa push adc stc dec adc adc fsubs cwtl adc xor repz adc and fisubl (bad) push in out adc fs push xchg xchg xor xor and add or inc dec or xchg dec push add sbb cmp xor ss add daa ss or add in cltd add fadds add mov push pushf add mov and and add adcb xchg loop push mov test mov or mov cmp mov xor add xor dec scas in cs sub sub in sub in scas in es and pop sub (bad) mov ja and fdivl daa and push jb push push sbb and pop sbb mov and inc ret pop in inc out mov push test imul jno and sbb mov pop shlb test in and or xchg sub add mov pop adc int3 sahf pushf mov sbb loopne mov popf movsb pop push push cmp lock popf pushf pushf pushf mov js imul aas or pop sub mov (bad) aas les jg mov add dec add adc mov jl add jbe dec cwtl popa imul and ljmp pop cmpsl pop xor pop mov push adc leave lods sbb fildl sgdtl sbb lds sub (bad) xor and or test mov add hlt jmp push or fsubrl adc dec pop sub mov xor xchg mulb insb ret push push mov push push fcmovnu lea popf aam pop rorb enter imul sbb add rcrl and das push roll or das or lret int nop das xor mov (bad) sti in je push sar jecxz pusha loope and lock jmp jmp sbb push in ja cmp xor adc mov or mov fisubl aas loop mov add test xchg jg mov pop mov rcrl cld inc adc dec cmp jle push pushf mov pushf (bad) adc adc pop fstpt mov mov (bad) xchg or add push mov hlt and or add push push notl xlat int xchg xor mov call scas jnp inc in fs and push and js sub xchg iret lcall lock mov int pop fild pop xor add cbtw int3 sbb movsb jo cs int mov push dec xchg inc mov js cltd mov cltd push push and ret test pusha sbb xor pusha fs fs inc mov cmp adc xchg lock ret pop loopne jns,pn mov jnp add mov mov (bad) rcr add mov mov loopne xor push mov addl add add pop cmp nop mov or (bad) jne add push push cmpl lods xor lods pop mov xor pop jp ror ret pop xchg dec add sarl call jns add ret enter jo cmp and push xchg jg mov mov adc add add (bad) and shr or notl jl jl inc ret push in in adc push lods add lret test ret mov in roll roll lds push mov sub (bad) xchg js rcrb xor or in rorb adc fmuls outsb jge ja pop lea mov sub dec js cmp mov or jl mov jmp pop cmp or jbe or mov data16 lods sbb into xorl push push inc jg nop sbb inc sbb movsb push add dec adc sub xor dec jge mov outsb jle pop sarl ret jo loop jmp dec call sahf sbb clc dec add enter cmpsl ret popa mov add sub cli pop mov fldt mov dec adc jmp test xchg jb mov lea test dec ljmp addl rcrb sbb sub mov add movsb push inc cli rcll popa in sub sbb mov je sarb movsb dec pop aam inc pop movsb mov dec or aam mov pusha add mov hlt lea xchg push fsubrs dec sub lea dec pushf adcb fsts push clc es xor insb pop mov push adc pop mov or loopne push sub mov mov xorl test daa rcrb (bad) (bad) xor dec sbb cmp add nop inc rcrb fmuls pop xor add lret push xchg ret cmp dec leave mov push or and out lock cmp in and aas fidivrl cmp push fildl and outsl jmp add sub cmpl push add mov push mov fs cmc aaa or mov xor iret (bad) je lock or test mov push cmc inc jne mov (bad) and sub dec push push je cmp (bad) mov jnp add or push sbb lods and sbb repnz pop pop icebp jae pop pop (bad) icebp ret jne push mov out and or rclb cmp inc and movsl inc mov or loope cmp pop ja add adc dec and call nop jmp mov sbb push jns sbb dec ret (bad) push xor xchg je lret add add xor mov es adc addr16 cltd lds call or dec adc inc pop sahf hlt fstl cmc int3 or fisttpl outsl mov xor mov push add add mov cmc sbb sub lcall and jle xor inc adc push add mov shrb push movl push add in (bad) jl cmp cmp mov (bad) xchg adc call jl mov or jge mov ljmp inc xchg test loope jo add or inc jo add push adcb sub sub sbb mov mov and sbb imul cmpsb imul in cmp movl mov jl xor ret sbb lods sbb and data16 (bad) mov push jbe pushfw push pop pop pop push (bad) xor adc add jl dec add add add add add inc lods (bad) xor lret ss dec jnp adc inc or xor cmp add mov cmc add rclb or in jae or and pop cmp mov add je mov movsl test outsb adc push mov adc nop mov pop or push or das stos dec pop sbb push xchg roll inc sub pop loop,pn pop xchg jg jl lea test or decl add jne cmp jne test test fadd adcb jmp lods daa inc and pop mov stc outsb or mov push pop maskmovq sahf cmp cmp jne xchg push push pop test sub jns add jae pop add dec or or push push (bad) mov into inc and xor pop lahf xchg pusha paddusw push mov add push je pop mov xchg testl and xor bound ja add or stos sub (bad) cmp mov (bad) xor sub pop fsts (bad) adc testb lahf lahf sub xchg or or mov add stc in nop dec push sub or mov subl mov loope icebp imul int cs inc xchg sbb xchg test mov fcompp les adc stos or inc or jle cmp mov xchg mov imul and int3 mov add inc mov pop dec cmp ss fwait (bad) cmc inc sub shll and fimul ficom and iret test lods int mov shlb jns (bad) dec sbb cmpsb rorb es or xor sub jnp cwtl add nop cmp push fdivs jno test push mov aaa push push test or inc and sub les jg movsl inc mov lea sub dec (bad) and adc push and lods cwtl mov js adc jge fisttpl push pop rcll add sub or call cli jb dec (bad) push je xor sbb add mov cmc jg fdivrs divl sub jl cmc push push xchg bnd mov push cmp push push push sub movsb jl sbb lods jp (bad) aaa or je cmpsb or push (bad) and jle dec jge jl push fwait xchg pop aaa mov sub fs xor xor push xor cmp or das scas fcoml fmulp (bad) pop mov or inc aad pop pop push insl mov xor dec add aaa fadds adc jl sub pop inc inc enter icebp xor imul or and inc mov xorl movsb fldenv add xchg mov inc sbb ljmp adc sahf mov add cwtl inc cmp mov fsubr popa add test jle cmp xchg (bad) lea push or and lods push lret and enter inc mov adc sarb mov lds pop jmp push or cmp and lea out inc incl push or dec mov leave xchg cmp mov and jo sahf mov nop sbb or (bad) xor adc lods insl (bad) mov lahf (bad) das sbb in fwait dec adc push daa mov dec sub outsb or in and or and cmp test adc jmp adc dec loop pop push cli sbb xchg cmc add lods loopne sti or push push mov pop mov adc mov and push xor addr16 dec jg mov mov add (bad) or testb xchg pop push xor imul and inc outsl addr16 xor inc pusha je repz inc sub in cmpsb push push and mov or mov or pop sub rcr repz mov and inc and js or lea or repnz lea rclb pop adc adc test dec add or sbb ret push roll sbb pop sahf movb adc or push lock adc adc loop push adc inc cmp jo or cmp iret adc push repnz jl sbb push leave and or push xor adc jl enter and sbb sub add push mov fs es fs xchg mov daa cs cld jp inc push gs cmp addb push aam inc push cmpsl jecxz outsl loopne shll sahf and lretw stc jmp popf mov icebp push and push mov xor lret mov out dec (bad) rep mov ljmp lods out fiaddl inc adc add fs lret sahf jns mov add ret cltd dec push loope adc xchg inc movsb adcl push add lahf adc or insb mov push push test push cli data16 dec mov testl adc notl sub or sarl sub (bad) loope inc jle jmp sub lret rcl cmp xchg aam push cmpsb dec jecxz push enter jmp xchg fs and lcall shrb icebp adc js sbb dec adc or in or jg outsb cmp mov sub jg adc cld movsb adc pop bnd jne push ss push popf sbb mov push pop add lahf fwait shrb pop lcall je orb lds nop insb push cmp xchg addr16 sbb imul inc cmp fisubl sarl rcll mov dec jns (bad) mulb aam and in add mov inc insb sahf adc lods jecxz call jmp cmp mov jl insl pop ja mov add jge push je jb (bad) popa paddw mov insl cld pop xor dec sub insb sbb add add adcl stos adc and lahf and add pop insl cwtl fbld test add push xchg adc or in mov sub test or clc mov in adc notb cli push push outsb cmp cmp cwtl mov lcall xchg sbb adc fsubrs jge int add push xchg push dec inc in sbb mov cmp or (bad) rcrb xor les je inc shrb nop or mov int stc or cwtl xchg jns jns mov dec test scas pushf or jo lds fmull ja mov pop or out (bad) into sub loopne dec mov sbb lods mov sbb out jecxz iret and adc out nop or push mov fisttpl adc ss adc mov sub int3 dec cmp pop xchg fcmovu js dec or daa mov pusha and sub adc ret jl movsb sub mov xchg je fwait rcrb nop mov sbb mov sub and xchg and fwait cmp push pop adc and xor cltd (bad) cmp add dec and push aas push insb mov sub (bad) xor (bad) (bad) jnp push jo fisub or or inc sarl scas js sbb and lock pusha mov idivl xor and repz ja push mov pop cmpsb cld add push sub dec rcr push sbb lds sbb mov inc iret ret xor shlb push js push sbb rcrb loope lret push js inc mov lock sbb mov mov subl mov rorl jne mov or sub repz dec out sub dec cwtl test je cmp xchg das inc add add ljmp mov daa sbb loopne into sti or push and mov fs or sbbb xor ja sub push and or add and aaa test clc jl push fldcw test fbstp mov adc mov dec movsb xor xchg stos sub lret jno or push adc fcmovnb enter jmp or add pop fiadd lea rcrb cltd pop js jg add loopne loopne pop out lds pop js pop fwait xchg insb push and jae cmp popa inc dec dec push jge mov fnop add popa in add gs push and sbb dec adc push sub pop jl repnz (bad) dec xchg cmpsb imul xchg nop (bad) adc xchg mov mov jae mov adc adc mov cmp pop fldenv sbb mov cmp push xor inc push cwtl gs adcl jge arpl xchg sub (bad) push push cmpb cs pusha cltd mov cli jge adc (bad) test clc mov mov fs push (bad) mov jo mov rolb pop shlb cmpsl inc cmp inc clc cmpb dec mov fcomps lea sarb in imull mov sub cmc fiaddl jecxz lahf dec mov xchg adc mov je and jns and push decl call xor or and mov or inc add repnz xor inc lcall outsl adc loope cmc test aas popa movsb mov adc lods jo sbb inc mov ss repz cmpsl repnz pop fimul pop push push loop mov push mov cmp mov arpl jns dec fwait nop outsl and xchg push loop push hlt xor cmp pop xlat push inc call mov aad adc in push sbb push je lds (bad) rol rcrb xchg xchg (bad) loope ret inc cmp cmpsb sbb fdivs dec or push ja repz add and sahf push push inc xchg jbe mov push sbb jno das sbb (bad) push push inc fisttp mov inc xor aaa mov add mov fldcw adc sarb inc loop fstps push mov push add jmp inc mov mov push mov popf inc js cmp dec lcall in mov popa (bad) jle js call cmpsl dec sbb push xchg add lret add pusha inc in aad xchg xchg or and idivl aaa xchg mov push pusha scas push xchg mov mov push shrb gs jo (bad) stc icebp imul jns js xor jbe lds cmp push xchg xor dec jae je cwtl rcll mov sbb or dec movsb push (bad) jecxz (bad) leave sub rcr sbbb cltd xchg loopne sarb sub test pop add mov (bad) ja inc sbb xchg and mov and mov pop pop or push scas (bad) mov sub add stos into addr16 xchg arpl mov xchg and push stc inc les mov fcomps sub loopne cli dec jns mov mov inc inc (bad) and push pop mov jae test lret push dec insl push clc dec scas add aam fst dec ret ja ja in cs sub xchg push dec push cltd cmp imul (bad) imul je push mov dec clc add adc mov es xor rcll test push imul aad les int3 adc cld jne in fdivrl xor push rclb cmp scas and and lret xchg cmp call mov cmp gs jbe or aam cmp sbb pop inc sub sub sbbl jmp mov test xchg xor mov push pusha cmp jge cs inc push pop pop nop loopne std cmp jmp adc sub aas dec pop lcall cwtl lcall or and outsb adc mov insl xor cmc pusha push dec mov xchg sbb mov add adc or add dec mov imul dec push test xchg mov mov out idivb xchg repz (bad) loopne cs xor ds dec xchg push push push (bad) mov push fsubrl jnp jmp push sub out cmp (bad) and cli cltd inc loopne mov sub (bad) movsb mov cltd imul mov and sbb je cmp jmp rclb test lea mov push jae jbe mov xchg std es hlt adc notb push test lds lock xor or pushf rcrb lcall hlt int dec xchg (bad) push push ret pusha lock lea sub push adc jo nop loope pushf mov dec test fs adc popa push aam mov mov dec sbb and add test dec push push loopne inc xchg cld pop lds xchg mov xchg ss dec arpl add push adc mov cs pop loopne sahf mov cltd push push mov arpl jns jne jb js (bad) jnp bound mov (bad) or cmp and add mov andl cmp into mov jle push mov push popa mov mov mov stos daa push add mov add add add orb pushf inc xchg dec call xor sbb push es imul mov jns xchg cmp rclb xor xchg inc sbb xor sbb adc inc es mov or jb je sahf lea sub fs inc push stc mov leave enter dec dec sbb mov inc sbb xor add jl xor stos cmp mov push or mov jmp aam mov jb es add es xchg js dec fdivl pop ret pop mov addr16 test and add xchg jns es hlt cwtl or aas or dec test mov xor push sbb hlt sub mov test adc cmp push push jge inc pop add push call int3 sbb push mov call sarb add mov push inc or jg test aad and popf adc xor inc sub mov fsubrl sub or stos add pop xor push sub inc xchg adc cmp xlat add in test dec push cmp push fldl (bad) (bad) into push push lds cmp (bad) push stc push and push xchg into mov dec xchg pop inc mov mov push fsubs ja mov lods cmp pusha adc adc push inc adc jl push fs xor dec fsubrs add add pop jp scas pop add cmp iret dec call mov cmp jmp nop xchg les lea lods pop mov mov mov rcrl (bad) add fsubrs inc pop sub and lcall popf dec dec push mov rorb nop lea dec and add jmp push aas sub pop loopne push ret imul cwtl add mov test (bad) and aad and in xor jg push cmp cmp sub cmp lret or cli cmp or mov push pop sub inc clc dec xor rclb sbb xchg add call push or cwtl test dec xor add sahf adc movsl lcall sahf (bad) popf push mov rclb insb xchg int3 lret and mov pop fucomip ljmp repnz inc add test sbb pop or add rorb and nop inc popa repnz dec dec mov call cmp adc xchg push dec dec add cmpl sbb sti xor cs movaps dec stc pop mov mov ret cmp add and imul cs test sbb add add dec push outsb js add jmp int3 inc xor pop or adc push fisub inc push das sbb insb das fwait in orl jg cmp mov fistp mov mov addl cmpsb enter sub pop aad and popa popf insb mov push inc imul mov sbb aam mov sbb inc xor cmp mov push jge dec js jmp mov sbb shrb int3 add pop call ss add in icebp inc push cs dec adc (bad) repz dec pop clc xor sbb and jne cmp scas xorb or pop push fs fs cld ret rcr adc add and xchg inc iret ficomp mov adc out out insl ret pushf pop lods (bad) xchg shrb inc lods std xorl push dec mov mov je lods sbb mov or mov xchg and lods mov ret sub sbb lock and and dec rorl and mov push testb sbb fistl mov sbb shrl test sbb rorl repnz ss cmp sub dec aad lahf mov pusha cltd lret mov xchg (bad) addl dec cmpsb fwait or sub sbb sub push ss or push sbb inc adc pop jno add mov or push xor cld inc arpl xor and inc dec sbb leave push loopne and mov dec dec push (bad) rolb and or push and sbb lcall sbb adc sub mov ret add sbb dec iret xchg add into mov inc imul test and andb movsb dec dec jo ret clc jl adc movsb adc (bad) push add pusha nop loopne sub loop jge fwait mov jg sahf mull jmp push add pop shlb pop add (bad) ret mov or jo stos sub les jecxz push adc lds aam ljmp jg sbb jo fdivrs std test ja push or bswap dec int3 out enter int3 xor xor std add add cmpsb jl mov ret ja mov pop jbe add iret pop sub stos insl iret xor in mov mov lock or adc in mov je fsubrl test lea jecxz jo lahf (bad) xlat cld adc je mov mov push xchg rorb jmp dec scas dec adc test rolb sbb stos stos push mov sti mov dec out mov dec mov jle inc cld sbb mov jns ret mov imul xchg or or jl (bad) sbb lcall je jge push inc hlt movsl jae lahf mov mov mov xchg mov pop mov add fimul cld mov into neg push push inc fist mov arpl add mov pop inc je sub dec hlt enter or aaa sub dec dec imull clc jg and roll bndstx jge cmp mov add adc jo dec insb test jmp add jb ret push inc push and fs and loopne insb xchg push add cmp aas jl mov sub in cwtl test arpl and (bad) (bad) push or adc xor or ret mov sub hlt jns fldpi jge xchg and sub fs in je loope pop push mov xchg lret (bad) mov pushf movsl lret sbb aas (bad) cmp cmpsl sbb shr mov mov popa jbe dec jge push inc pushf es jo pop sub add sub push add push (bad) jge int push (bad) push ja add inc jl jmp jle mov sbb ja nop jnp in mov add or fs mov sub add sbb call scas mov icebp (bad) jmp nop cmp es or rolb xchg sub mov (bad) data16 test hlt fnstsw ret ljmp pop jg xchg push add fmull sahf mov or adc fistp or orl faddl lea lea or adc mov add jmp cmp mov jg mov inc mov outsb sbb je cmp and lret jae inc inc add jne jns or pop orb mov dec push and test add jae jo or and ss sub jo andb fwait pop (bad) fwait rcl mov dec rclb pop vmovntps ret or fs mov push add mov insl add loop jne mov mov fdivs mov mov mov subb push mov or push lock add push aad mov and cmp add xor add fsubl cmp enter sbb loope fnstsw ss sub aad insl mov lea xchg loop add ud2 sbb fcompl xchg xchg daa lret dec add mov repnz xor push repz mov loope or scas popa inc jl js or data16 sbb add hlt add cmp lea or push push ror jb orl xor or add dec cmp mov int3 mov mov sub fwait dec sub aam and test dec pushl je pop call cld cmpsl inc pop xor je sbb adc mov push bound sbb movsl and pop add cmp aaa (bad) or pop xor sbb insb push adc push sub (bad) pop push jg push (bad) or dec cmp sbb or adc pop adc test lret (bad) and mov scas xorb popf lods inc jb lock or inc mov mov je add xor icebp sbb lret add jecxz mov push add xchg push (bad) lods pop clc pop jl push jmp jns in std icebp mov ret push sbb push outsl sti imul pop dec mov mov jle imul cmpsl sbb dec sub xor push fadd es add mov cmpsl and and ss cmpsl inc lods dec popf xchg stc fcoml call push adc mov add aaa mov lock pushf aad in pop aam loopne incl outsl push dec int push add incl decl jne fmuls and push pop xlat xor aas adc pop or shr (bad) or jmp or or or push loop push sub cmp loopne xchg jecxz inc add (bad) and pop testb or jne mov sub iret mov test cmp ljmp push arpl (bad) inc das adc in es push push and pusha dec fisubr adc movsb lods inc loope rcr mov test push sahf mov add mov shl out adc pusha push and dec inc xor or push mov cmpsb fxch cwtl dec inc jmp pop aas dec mov in inc lock pop pop testb jae push or out fs gs jae ret mov push fwait push push fs insb xchg mov sbb xor ja push mov fstpl or inc adc xor addb mov push dec sbb rcrl gs push lods mov movsb or push inc sub sbb outsl xorl push jmp dec sbb ret push sbb and (bad) sub jo xor ljmp ja ret (bad) rcll dec cmp push jge jg push incb imul (bad) inc sbb adc push fidiv test jl out loop lret fldl xor add jnp ds push xchg sub and cs (bad) mov fidiv je pop xlat xor inc hlt mov and xor dec dec movsb jle pop push nop jl adc hlt mov add mov fdivs call jmp test push scas inc popf cmp mov push in xchg (bad) nop out lds ret push test shlb lock xchg xor fimul movsl test push sub das and pop and or movl call mov pop in cmp or int3 test rolb push add aas mov add mov test stc or les jle xor and jo and add rcrb lahf or mov mov test jne xor mov ficoml add jb sbb inc cmp lock jl aad adc rolb into mov jb push bound sub js pop lock js xor add pop or dec push xchg mov pop jecxz iret mov push mov iret push or sbb pop in rorb lea imul cld and push les lret sahf rolb pop pop loopne cmp pop clc gs loope sbb and mov adc dec pop loopne dec dec js mov push int ret subl and mov pop divl push sti (bad) xor pop or and dec and inc inc cs je cmp je hlt push ret adc jns inc push cmp push push mov mov add inc rcll xor or pusha mov inc sbb push add jmp test clc inc movsb mov add imul mov or aad test in and and xor je add adc jg lahf and or movsb addr16 mov push dec test sbb push or dec cmp data16 mov add aaa xchg (bad) xor sbb add or iret pop mov fstpl pop sub add enter mov jo in insb dec jne mov rcr (bad) mov push andb or (bad) loope mov sahf out and dec push roll cmp cmp popa or imul mov jmp adc sbb outsl and sub fcmovbe pop and dec push bound sub add and add sbb jp jb mov sub push jmp jge daa dec fbstp aam push or cli sub pop pop add fwait sbb adc ds aam out add or in ret xchg pop xor jle push test nop sbb mov sbb mov leave jno dec aam push push pop push jb xchg pop aas add gs jmp mov cld out inc adc in lock repz or clc std lahf mov popf or xor mov xor inc sbbl mov mov adc (bad) in sbbb add mov add mov call cmp sahf push push inc pusha or xchg sub jp cwtl fsubs add decb cmp adc adc push cli arpl repz sub out popa jecxz dec push sbb push add cld xor ret jl cmp or jl or out pop jne cmpsl push push aaa (bad) sub das add test push loope mov fisttpll mov call jecxz push jbe loope lahf sbb cmc aaa fcmovu jmp lods pop dec add sbb roll sahf xor cmp dec mov es adc sub loopne mov pusha pushl mov jle xor and and and fdivl daa je or je sub out out je and je and loopne jecxz jne insb sbbb and sbb mov cmp dec pop inc xchg scas adc loope clc add xor outsl dec loope orb xchg mov fldcw test push test xor and and add and aad jle in out inc mov or mov push in movb (bad) int3 mov dec adc (bad) mov lods movsl mov imul mov fiadd movsl fsubrs xor inc (bad) adc mov mov add xor xor pop xor and (bad) mov (bad) int3 pop xlat andl arpl inc sub loopne clc vmwrite mov dec push push jmp inc cmp notb xor bound je outsl shrl outsb test push inc xchg inc sbb (bad) (bad) enter xchg or cli dec or dec fcoms cmp xchg cwtl mov cmp dec scas jne xchg inc inc sarb push cmp dec push push cmp fidiv pop inc fimull xchg mov dec jge mov out mov and push stos in jecxz jnp divl adc push test jl lds add cmp testb or or or or daa sbb call stos add inc scas aas dec xchg mov adc sbb je ret inc out (bad) jae aad aad daa adc inc inc pop push mov cmpsl insl test adc sbb iret xor mov sbb and addl push fucomip fsubs xor cmpsl adc lods movsb das cmp push xlat mov mov lea aam test mov mov inc jge js (bad) or fnstsw cmp fisttpll sub add mov push dec pop cmp (bad) xchg sbb cmp mov jge les test mov cltd jno push je (bad) dec (bad) dec fistl or ss icebp rcr mov or sub add dec scas dec (bad) aad mov inc mov cmpsl inc adc dec push push sub push pop and jmp out adc (bad) (bad) xorl aam cmp pop add (bad) pmaxub mov shl jmp mov in pop jno negl pusha pop daa dec xchg ljmp clc push stos dec test lret or xor test bound jl jmp out std xchg je sbb or xor ret add out leave (bad) loop out xor dec or cmc pop pop xchg out mov add sbb and cs scas test xchg mov inc rolb movsb rorl cs dec xchg dec rorl dec sahf push nop pop imul jne xchg xchg and xor fcoms add and aas xor inc push and or je or and xlat dec jl insb inc push mov dec sub or sub dec shll (bad) jl sub mov ret or push pop rcrl add cmp je jo call jnp je rorb mov ds push test jbe push adc imul push jl pop jmp or adc dec inc ljmp dec enter cmp jmp xchg jae sbb pop mov sbb add enter xor add inc wbinvd pusha lock jb jne inc or aaa aam stc or bswap sbb lea jae mov fsubrs push int3 add sbb dec sbb sahf call cli add push sbb imul aam inc clc push add imul adc push lock addr16 xor roll pop and imulb (bad) sbb jge fsts mov mov jge inc iret es nop addr16 add (bad) jmp int inc push push xchg push xor in nop xchg lods push daa aad jns nopl imul cli add lret pusha cwtl and stos ljmp push rorb adc push push aaa sub mov cmp adc pop fist cmpsl sub test xor std pusha push movl rolb in or fs sbb pop jb call fsubr adc push fnsave jo jae push inc pop push and lcall popa or jns cmpsb aad mov cmp imul gs lret or cmp jle sub adc and xor ret adc adc aad cltd or xor fist cmp adc add notb ret into or adc push cld pusha sti ss jbe jle add jne cmp xorw sbb xor leave loopne mov mov adc mov or cmpl push aaa in dec xchg daa dec lahf mov sbb ret inc lea mov lahf adc adc adc out mov or repnz movsl icebp cmpsb lock lea xor sub mov add cltd js test adc sbb jg push iret inc and xlat mov lds cmc jmp lods inc push pop test add mov nop fmuls xor adc aam or lcall push jp mov lods loopne call and call cmpb jmp aaa das sbb imul rcrb daa es rorl inc xchg inc cmpl cwtl pop movsb or loope mov test sub mov dec and mov jp test jecxz dec mov loopne nop mov int3 jno ret xor xchg out pop sub mov int3 ret xchg add popa or adc push (bad) dec mov neg push push add push cltd mov es jmp jp jmp mov cmp ret in mov faddl push in jno sub fmuls push dec movsl xor jbe shll or and fisubl sbb mov and push sbb push enter mov adc addl in xor add adc push cmp push je inc loop fcoms les dec imul pop or push fisubrl mov and popa stos adc data16 call leave sbb push add jno out xchg ret (bad) hlt push pop mov and inc lahf lea mov lret cmp add adc pop xchg pop test mov fnstsw je sub pop add cmp lcall push cs cwtl and push lretw sbb add (bad) nopl ffreep daa push mov pusha push push and ret push loop mov jge push (bad) stc push cmp inc dec fucomip bswap push or and cmp ret jl sbb push mov subl and out (bad) (bad) pop or xchg addl adc ds movsb or or out add mov fnstenv push inc push ret pop add pop daa or je aad add test pop xor addr16 dec ja pop test sub jl add imul dec mov fnop flds popa scas dec mov pop push faddl or pop insb sbb popa mov loopne insb or cmp ret mov pop gs sbb add rorb adc stos add inc mov jb pop stos ret xorb cmp mov mov pop addr16 fisttp lahf and or movl popa add xor rolb (bad) xor add push jae push fisubrl movsl ds adc es sbb sahf xchg and mov sub adc out push add push adc add fadd or aaa fstl ret sbb mov or sbb push sbb sahf sbb push or pop jne push add mov push je dec imul cltd mov sbb repnz data16 xor andl cmp inc jle dec mov push add and nop adc int3 inc mov (bad) adc orb mov fsubrp test jb insl xor in xor ss cmpsl sbb inc mov mov sub sbb and jnp inc pop nop mov or out xor ficom aam mov int ret aaa arpl movsb add jg pop jne es jmp mov mov xor or pop les and and jp nop das fistp push push cmp jo push (bad) repnz adcl lret sahf add pop cmovae sub jne adc ret mov and cmp mov test cmp adc scas cld push popa es orl inc test jo sbb mov lret dec sub push lock (bad) fsubs add mov mov ret or cmp or nop lods test sub push jo iret mov mov xor pop scas mov jmp sub adc jle cld adc push xchg jmp mov cmp mov das repz pushf bound pop popf sbb or xchg or inc adcb ror dec int rclb add push sbb addr16 outsb mov mov dec add stc lret mov cmp mov jo or sarb dec fisubl rorl sub mov xor hlt je out mov jge cli mov test imul pop add sbb mov outsb (bad) loope gs sbbb mov inc outsl sub arpl xchg jmp inc add add pop and dec add mov icebp leave mov push (bad) shlb xorb and add push push xor inc insb push fisubl stos xor push inc fsubs xor push push test pmulhw rcl jns push inc xor enter sub ret test xchg lahf and and add sbb mov inc pop mov call in inc and dec dec sbb sarb sti (bad) jbe movsb jecxz rolb push add and sub ret sbb pop or push cs fist pop in rep and cmp sub adcl mov jne jb popf imulb aaa mov pop or es sbb xor dec push push mov pop xchg ror int je or cmp je add movsl sbb or xor and test shl add jmp or fwait adc jg or sub imul sbb sub (bad) xor addl fldcw inc pop mov push gs (bad) enter adc inc daa jmp je adc loope stc pop push test pop mov or xor cs insb push add cmp inc lcall dec push lods adc adc dec mov ss dec add and ljmp outsl sub push int sbb lock xchg jb pop fucom pop sub call push jbe int3 data16 adc stos or (bad) rclb sbb xchg (bad) xor neg and mov imul push aaa push add add jbe call inc push add mov enter inc cmp pop out jl cmc je adc cmp loope test movsl pop outsb adc push xchg or test dec outsl inc pop fild or sbb gs push test adc push push add push mov cltd cmp repnz jge push inc or imul add jo cs je mov xor push add dec and mov push or and push (bad) xor add in clc outsl or mov jbe dec arpl dec sbb out in cld inc outsb sub outsb dec sahf push inc add push inc dec push into push mov push rorl das push push jb lock and aas test or cmc lcall xor lods push add sahf add cld pop pusha dec xorb hlt or pusha fmull jmp in stc xchg jl pop dec pop jl (bad) jmp xchg inc sbb loope dec (bad) loopne cmp mov aam dec mov data16 enter jno mov imul add sbb psraw test or push leave and add dec mov popa leave add rorb inc mov repnz add pop push and ficompl dec inc pop sbb adc and or adc inc or les lods outsb mov fnsave or cmp sbb and or mov and popa pop in add inc pop (bad) inc (bad) sbb adc addr16 pushf adc add inc sahf xchg sti add addr16 pop clc or sbb sahf or or or or or pop call push or inc dec jle sbb stc leave sbb movsb and and pop push sbb xchg fidivr pushf mov or incl add jg push push fcmovnbe decl cmp inc aad ret cmp rclb lahf mov fdivl cmp adc enter mov repz lea inc push mov and jl jb jmp clc imul jmp mov mov dec or movsb push inc ja incl and pushl test (bad) cltd add test fidiv mov cmc jb or cmovs shl adc mov lea scas rolb xchg aas push xor aas cmp jmp fidivl mov jno and xor dec inc lea nop addb sbb jne mov sbb test mov (bad) not cmp adc pushf jle cmpl xchg xchg bnd jl jmp mov dec outsl dec and cmp fist lret enter incb pop fldcw add or or or sti or sub jbe dec sbb das jecxz push aas add and loope pop fstp sub std or incl loope cld andb popf xchg sub mov dec nop inc test stc shrl sbb in dec push sub push sbb inc jecxz,pn dec jne lds pop xor and jmp iret and imul dec push shlb and or adc ret jmp (bad) or cmp jae push add mov jnp and sbb mov and adc xor bound adc movsb and out cli xor lret pop lods dec and das and or rolb mov lods lcall subl push add call jg cmp mov mov mov jne call add hlt das inc dec arpl inc lods jne push push fiadd inc or in push push push add scas out xor imul sub push sbb or push fwait or dec in mov push xlat cmpsb divps and faddl test fbld sub outsb dec sti rcll cmp or push pusha lods add pop dec lock rcll mov push inc mov xor fcoms jl adc and add int ret pop movsl push mov adc aaa push scas lret or add mov and inc adc sbb inc inc cmpsb sbb pushf jmp fildl xor call repz push sbb cmp lds call adc dec je nop sbb lds mov mov add or mov or lods and dec push push sarl push jbe mov lcall test mov outsb pop push pop pop mov cmp (bad) mov (bad) sub fild mov adc and arpl add inc push or (bad) mov adc and mov lods in add icebp sub dec jl pop pushf cmpsl cmp shlb sbb call jp adc mov cmp stos lea mov mov xor pop mov inc inc push or mov paddq mov dec or xor mov add testb inc inc in dec fisub fldlg2 pop xor sub add dec add push mov sub lods aas and fwait sbb lock in lds lcall or push jo loope lock lea xchg push ja push (bad) mov sbb repnz (bad) xchg mov and addb adc sarb add cs and add dec or mov ret shl dec dec repnz add ss imul jns out inc add dec dec sbb fisubl mov (bad) repz nop shl mov int3 push test xor sbb adc shr dec or or or cli lahf cmp les mov mov and cwtl jl add jb xchg mov mov cwtl icebp cmp fwait push leave xchg or jmp mov xchg loope xor call mov inc xchg loop insb push jo clc lea movl cli mov test sub adc out push inc decb xchg test mov inc mov or das mov push mov add mov mov push push or adc lcall insl loope stos fcmove fiaddl push les push lahf or jae lock and mov pop dec out add sbb push xor mov jbe mov push adc roll ret cwtl rclb xor lods dec mov jp dec add test or mull add (bad) jmp pushf mov mov arpl (bad) mov adc sbbl xor aam or mov or enter dec insb jle clc push jne mov fstl loop cmp mov pusha pop jne or les (bad) pushl mov loope add cmp add add loopne enter shrb mov jne test add outsb fmulp rolb jmp loopne sbb push push xchg jne inc dec lcall fdivs mov mov push xchg or aaa jge jge pusha mov or and adc xchg rclb xchg or push seto cmp stos (bad) jae and cmpsb scas flds mov in add lcall jns inc fstpt nop push into cwtl ret in fldt jl push cs cmp pop pushf dec dec mov cmpl dec popf inc mov dec (bad) mov adc mov arpl imul mov inc movsl jmp das pop js daa fistpll out push adc dec or orl test cmp sub xor int3 (bad) or jbe push inc add dec test adc dec les (bad) sahf lods push leave or movsl or or (bad) movsl mov stos scas mov xor inc mov pop and dec inc leave xor push enter xor enter inc sbb rcll mov gs mov xchg inc (bad) mov outsb test mov pop in push jge mov adc mov mov xlat dec les xor scas pop or sub ret inc push xor ffreep (bad) push rorb flds jmp jo add lea nop mov xchg or mov orb cmp lods lods jns xor std jmp xor xchg fmull lods lods pushf call fwait mov push arpl or and in adc sbb or or test dec or inc cs cmp xchg sarb in sbb and or les test cmp movsb cmp fwait xchg aam inc stos cmpsl test add ss xlat roll mov or fimull adc xchg or cld adc sub mov or pop dec adc sahf pop pop or or and in or dec call mov ret pop and mov orl xchg pop push inc movb add les jb idiv clc add sbb and cmp adc fimul push mov or jo sbb sbb dec sub pusha inc mov aam int push cmp ret (bad) adc mov jno ljmp dec cmp leave ds mov inc in jg mov jne mov dec sub fmul dec push adc je nop fistp xchg enter lods ss and or or pop pop rorb or jle lea ljmp rclb xlat or sbb insl test add mov push jge push popf and inc or into pop popa pop popa sub addb testb mov xlat push aam add inc in pop cmp or xor pop (bad) jmp fldlg2 sub clc fbstp or lods loope and (bad) fs push outsb sub xor add dec push (bad) sbb dec cmpb out jg dec mov push or addb inc ja jl mov fcoml adc mov push (bad) js movsl icebp xchg aaa and sub jo leave dec mov pop push pusha rcll (bad) push (bad) mov or pop xor cmpsb jge cmp inc mov push cmp inc xor xchg stos mov andl jb or push fucomi and aad push les lods push mov adc or jg mov hlt cld movsl jmp call inc icebp pop push sub mov xchg lea arpl sbb xor add mov or pop aas sub lock sbb xor xor adc pop mov add cmpsl shrb and stos aam or daa fistpll push outsb push mov push xor mov and sub mov jmp nop loopne imul aaa cmpsl je inc fadds jnp or push push jno dec repz in sub insb imul inc loopne cmp mov push scas adc loope jle shrb cmp outsl adcl lret jmp dec test mov push stos mov jge mov cmpsl repnz mov notl dec imulb or leave add inc inc xchg jmp lods loopne in cmp lcall adc and add enter adc pusha or popa xchg jmp inc lahf je cmp or push xchg push inc and or cmp enter notb fildll in jge add push (bad) adc scas outsl lds mov leave lods push push dec pop out sbb icebp sub not mov adc inc push push xor xor fidivl dec adc push cmp or or dec mov push add lahf and fwait loopne ss add sbb push sub pop shll jne add push (bad) mov mov push adc rorb mov cmp and jb and ds in mov add cmp (bad) insl mov (bad) addr16 push or cmp cmp push add dec ja inc rcrb mov inc sub in or ror and mov jg xor mov flds fcomps push cwtl stc orl sbb mov pop fcoml pop sti (bad) mov add mov rclb dec xorb aad cmp imul add pop rcr daa adc ret xor orb fpatan mov vmovntps dec rorb ja,pt jb cmp sbb loopne stos inc fcomps push mov adc imul add xchg call inc xor and dec clc inc pop pop lcall xchg pop mov lods fsts cmpsb jns mov cli sub sub xor ret jl out (bad) cmp push repnz inc cmpsl xchg mov ds sub aaa in fs jne testb add jmp gs (bad) dec test jle mov pop dec jmp mov (bad) jl inc and jl dec or mov xchg mov xor xchg lret dec daa dec insl xchg das inc mov push push mov add pop mov xchg or mov in mov jnp adc adc inc loop imul cmp add inc dec mov psllq sbb test je cmp mov mov add cmp pop mov sbb decl cmp jb cmp ja add jnp int aad lcall call add add addr16 fcmovb add mov mov test add mov and (bad) (bad) pop inc push fs shl sub dec pop cmc in and pop sbb (bad) push dec mov fcomi lcall pusha or jae (bad) lcall dec adc push cmp sub sub add pop cs ret and mov pop fisttpll pop mov add clc mov fdivrs ret mov ss mov jecxz (bad) or sbb int3 and inc cmp push daa push mov inc mov jae fsubrp pop sub mov mov mov aad insb imul fist mov fsubrp fs mov (bad) gs and jno movsb clts fistp adc orb dec loop inc movsl cwtl inc adc fild (bad) fisubrl add lahf sub ror sbb dec leave ret add mov mov movsl and xchg es cmp inc push stos add add ret jg lods push xor lds or mov and cs sub jecxz cmpsb imul pop xor popl and sti mov sbb lahf mov movsl add mov cmp es mov mov (bad) and imulb jo pushf andl ds add adc xchg add add fisub sbb and push xchg push negb nop popaw push ss cmp insb xor dec mov cmp testl and pop les pop js xor mov mov xchg mov clc loope adc mov rcrb cli sub into add fsubl or or insb addb push inc cs adc std sahf ja adc cmc clc rcll inc mov xchg (bad) pusha push in loop jns adcb popl ret mov das mov imul rclb test sub ret pop insb pop jae push xchg jb (bad) loop dec sub mov pop pmulhuw mov add add push xlat or and (bad) jmp cmp sbb inc aas push lret sub fdivl inc sbb scas push movb mov pop das aaa jecxz mov out arpl sbb andl adc pop mov idivl mov repnz and lea repnz push pop (bad) orps push pop pop sbb (bad) mov aad inc jl mov out xor xchg dec pop aas andb add push (bad) loope sub add (bad) mov mov inc inc dec xor les jnp xor jl or ret les (bad) add loope push pop push das sub rclb and xchg adc push mov fadd jo adc dec dec pop loopne cmc stc adc cmp inc xor xor dec sbb aas mov inc push sbb pop rcl xchg inc add push and decb (bad) lea ret push cmp sahf or and push pop pop test push ret (bad) lods insb sbb mov mov inc pop mov push jo add push push push jns jg mov sbb push inc cld mov xchg jne or out cs xchg pop or add mov addl xor lea push es sub push mov sbb inc add mov dec push push xchg cmp iret xor or xchg adc sub out dec jne cmp stc mov les xchg das popa xorl mov or insb and sbb push add push outsb repnz pop inc and (bad) imull add sub xor push aad dec xchg lock js or push push shll adc jmp jo sahf dec push (bad) jbe inc popa mov add sbb iret out dec push mov or mov pop xchg sub inc ss sub cmpsb bound add js adc sub insb fmuls dec add mov mov fdiv mov stos jmp inc mov stos lds xor mov mov cmp inc cmp sbb (bad) push cmp ret stc add nop jecxz ljmp arpl cmp add mov test lea xor mov in pop icebp inc adc mov cmpb mov jno je rcrl stos (bad) jg (bad) loopne pop arpl inc inc lcall cld lea jl mov pusha mov pop pop aaa lods addr16 sbb enter adc pop mov iret vmwrite jge mov or pop add js test jmp jne xor subb and jbe arpl clc push scas sarl and call xorl push mov aad testl imul test xchg (bad) xchg and popf lea sub jae sub popa jae lahf sbb aad ds data16 jl or mov push jae add pop std mov xor lods (bad) je ds (bad) je mov push push rclb cs movsl (bad) test ffree scas dec push adc pop iret adc lds sbb push popa mov mov push mov push icebp mov iret jge xchg dec mov inc int3 adc movsb test and xor cmc (bad) ljmp add xor xchg rcl push mov ljmp push jbe or add pushf sbb ret mov imul adc loop aaa sbb loope add loopne test push cs lcall pop int3 (bad) push clc lea imul (bad) mov push in jl fcoms add jle syscall ret and sbb sub xchg and daa lods inc push ret daa pop fmull mov xor cmp roll xor mov add xor stos jmp (bad) testl sbb movl orb movsb ljmp lods push mov push or dec push and sbb aas pop (bad) (bad) ss (bad) push outsl inc cmp push inc (bad) loopne xchg inc bound jbe inc and mov (bad) lret (bad) sub mov nop shrl pop sbb sbb mov dec sub shr in loope jne daa (bad) rorb sahf inc mov xor test xchg xor data16 loopne popa int or cmpsl lock push jge adc divl dec cmpsl push stc push out mov mov dec (bad) repz push inc daa push mov jno les (bad) je rcrb stos xlat lds push inc lods adc stos lahf inc scas sub clc daa and movsb xchg xor or xchg add je adc int lea int adc add xchg ret jp inc xchg cs xchg stos sbb decw and or lret imul or push push popa mov mov inc es cmp sub fsubrs add pop insb adc mov xor mov jnp or pushf xor push add sub sbb add cwtl aas xchg mov inc imul jl lods js xchg sub movsb rorl or fadd (bad) call pop inc scas cmp insb rclb xchg jbe dec mov inc inc std imul push cmc jb sbb inc les dec lcall add adc lds inc scas adc sbb pop lret push cmp push cmp sbb jmp rorb mov jp sti sbb add jne inc js insl mov loopne push leave in mov lahf mov sub pop push mov (bad) testb or adcl add and outsl add das nop int xchg mov (bad) rclb jecxz cmp mov sbb jne add xlat add sbb stc sbb lods dec inc insb imul xor aam gs xor shlb lods shrl mov xor sub cmp mov cmpsl popa cmp inc jbe push add fimull jns int in xor adc push push lret lahf cmc rolb fldt push mov xchg add orl push sbb lret or add inc inc enter iret xor push inc adc bound dec mov fisub jbe push cmp pop pop fmull (bad) pusha insl (bad) das and or adc inc push xor ds add push jecxz push (bad) call pop add dec lods cmpsb push lret adc ficom jb push cmp adc pusha ds sub sub sub jmp cs inc ret pop push loop in aad es pop push or fstl or outsl cmp lea sbb jo stos cmp sbb mov jl,pt mov xchg push mov pusha fndisi(8087 add adc jg shrb push and pusha (bad) sbb jb lea add nop ficompl inc and or outsb xor push sbb add xchg push dec ret push dec je xchg add xchg pop clc jle cmp lret and xchg inc push adc cmp addr16 aas jae add add push js jp jno sub push scas fimull out pop mov psrlw pop pop (bad) ss jmp mov in gs call dec mov add pusha push pusha inc add dec push (bad) inc lock mov sub sub cmp mov je add stos push push dec or pop stos xchg add fsubl sub bound lds inc adc add inc or dec sub sbb lret pop movsb in imul cmc nop loop push pop xchg dec test sub push add pop jmp jp icebp icebp adc add sub lea sub push inc push gs adc and jle mov or jne dec inc adc aad rorb rcrb jae push cwtl in pop movaps pop push repnz xchg aaa push mov push sahf scas lahf (bad) mov lahf mov fcmovb in push lods test cmp cltd xor (bad) adc adc int3 and inc pop jg or jne jb cmp cmp xor lea sbb or add bound and push in jg xor inc dec imul test lea cmp inc jne mov xor xor mov jmp lret (bad) aad push adc das or jmp push jge mov mov jo adc popa add insb pop pop and pushf or das divb inc test inc (bad) adc lods (bad) jne mov mov mov je adc jo repz int3 adc sbb (bad) popa nop ret or sbb pop push insb add push arpl add cmp fistpll test or or aas adc add mov or xchg rdmsr ds cmpsb dec sbb adc add mov into and jne scas ja xor mov and lods cld mov xor inc clc repz dec lret das out xor sub mov push ds dec push imul mov cwtl js cmp loopne mov lock in cltd xchg div (bad) mov test push (bad) fmul inc push jg dec sbb sub lds sub popf mov mov les mov pop ljmp mov orb inc cmp push xorb jo adc fistpll xor loope mov (bad) (bad) test dec cmp icebp mov imul jbe andb test and out or dec mov or (bad) and and and push push cmp rorl cmp es push push (bad) mov sbb add pop ja jle loop nop data16 push outsl je insb and sbb in test or inc mov xor or push jbe add shlb loope xor pop and sar mov pop repnz sub adc xor daa sbb mov fstl pop enter sbb inc rclb jo sbb cli imul les push add (bad) jg mov in xchg dec icebp call lret testl sbb fs jb push add leave cmp cmp pop mov push (bad) mov and xchg xor adc add xor dec adc fdivr dec movsb pushf sub test sub mov inc push sbb jge jmp adc dec jnp (bad) mov jne xor iret push sbb adc dec scas mov inc cmp sbb aaa adc or pop mov fnstsw pop mov int les add fisttpll push add cltd inc ds scas inc jb in es mov push mov add push push lods mov add jle mov sti cmp or fiaddl add (bad) invd or daa fadds inc ret (bad) rorl push pop dec lock xchg cli push mov inc out push jmp add xor pop inc adc rolb nop push enter scas add add sub add add stc orb ret mov and inc mov es mov pop cmp xchg xchg adc loopne and imull std dec inc push push jnp lea push in jmp lock push xchg lods jle insb mov mov adc inc sub int push rol sbb pusha cmp aas pop insl int3 inc cs pop fcmovu adc xor jb stc push lcall jecxz mov push adc call cmp sbb mov add lods jg push int pushf popa aas sbb add add cmc into test call lret and test push jbe or mov dec lahf add sub stos popa mov or mov (bad) fstps and outsb push xor sub jo push inc pop scas cmp cmp scas dec cmpsb inc lret sbb lea adc pop icebp fs and add sbb ss lcall sub and enter add inc aad pusha xchg push movb push inc sbb in jo pop xchg xor add in sub mov (bad) fdivrl outsl pop adc (bad) cmpsb xchg or mov mov ljmp or add or mov jbe cmp cmp add aaa push or push mov push imul xchg or pop adc sti add stos inc (bad) inc addps pop mov cmp lret xchg sub lock xchg add sbb inc inc add cmpb sub push mov loopne add pop jns add inc movsb inc (bad) push dec loopne lock inc mov sub sub or add pop push add rcll xor cld dec rolb nop fldenv add push clc add push test push xor test cmp mov and enter mov ds sub or push xor (bad) aaa subb scas pusha (bad) jl movsb jge jno push je popf sbb fnop js adc sbb dec lcall push sbb sbb or or jp (bad) xor lods jecxz popa lods fldt add ret push inc pop test scas test imul push int lock adc imul pop adc xchg or les rcl pop fnsave xor dec xor (bad) inc call or mov adc or adc mov adc xor outsb scas xor pop jmp pop lret cmp enter jns es pop sbb nop dec shlb adc and (bad) (bad) xor iret or cmpsb sub push out xchg ljmp lds repnz push dec das adc in mov fsubrs add inc mov cmp dec js add jle jmp add sub lea das aam cs inc adc add lds (bad) das add mov push add dec in and shrb or mov or nop xchg mov lock or add nop xchg or or cmp aas or xor pop das adc pop jb xchg pop adc das adc xor inc or adc mov pop test push in sbb sub sbb pop sub and sbb add add lock mov icebp pop dec or fidivrl test dec add add inc pop fadds out mov push lods push push icebp push push roll xor dec in sub mov push test push add dec lret das cmp push js jb in push mov lock pusha mov dec cltd in bound (bad) mov push loopne dec in inc xlat sbb inc xchg lret in push xchg add push jns in dec or push dec push xor insb pop movsl in nop add add into push mov movsl add (bad) mov or mull nop mov sahf jno mov (bad) sbb xor dec add add movsl inc lods or and push jo inc ljmp pop add push push pop pop lods lods inc add std loope and mov add inc xchg loope outsl sbb sbbb cmp or insb cwtl sbb push les cmpb add sbb add pop mov jp lock inc mov mov inc xchg adc push mov sbb mov inc sub inc sbb loopne pushf jb imul dec dec cmpsb dec lea fisttpl push pop lea outsl xchg jge das jl sub fmulp add add lcall imul sbbb adc jb,pn dec and mov js and add or xor insb adc adc dec or pop add or popf add out adc lea add loopne fs sbb adc mov je or pop or add dec or inc pop pop sub lds test pop inc adc pop sarl rcrl pop or push dec inc pop cmp in push and out das push (bad) inc dec dec sbb inc leave add inc dec push cmp lret popa jecxz inc out jge xchg cwtl jnp push pop push dec roll pusha mov inc push and pop sub dec repnz ret or popf imul or jo push cs dec inc adc xchg lahf push xorl add mov dec sub xor pop push add mov add cmp adc adc add fs sbbl dec add mov ljmp bound call cmp fsubr push (bad) cld rorb push das pop fsubs or (bad) mov mov xor out mov mov xchg lds ds lock rcrb push push pop mov xchg les lods mov sbb pusha mulb sbb or adc inc cmp sbb sub lods shrb mov adc mov add push push mov push push ror or xchg add insl cmp push xlat and out rorl nop mov add loop xor cmpb bound decb add lcall fucomip repnz or inc push cmpsl sarb test or sarb (bad) leave add enter enter sub sarb xchg push fistl add push mov jb push call shrb or mov leave mov push push dec dec add fadds test mov adc push cmp jno push arpl mov dec xacquire shrl (bad) cmp in xchg das fsin or sub adc jne repnz push jo adc mov leave and xchg rorl and in sbb push mov and cs push pop cmpsl mov mov mov jbe addr16 rclb ja pop sbb pop push loop mov std xchg fcoms push lahf test jb lea push mov ret movsb orb push or mov sbb dec sub mov addb lret push inc popa bound or xchg mov and fldt adc repnz jb ds or pop dec sub jae jns rcl cmpsl add or push inc sub jo lock lock push outsl xchg and outsl pop inc xor add popa flds jge dec xchg test or and add add jecxz enter add inc jge sub lds adc fs call lock dec lods or fbstp inc mov mov mov stos push fwait jge call or test xchg sbb fcomp mov dec sarb pop dec mov sbb add les inc sub in in subl inc fstps pusha inc push inc xor sub bound sbb addr16 dec xor dec add icebp outsl into inc enter cmp fadds inc xlat xor int3 pop loopne outsl (bad) decl pop fdivrs mov in ficoml mov and mov push push in sbb in pop sub adc xlat shr xchg fucomip cli jmp sub sarb inc or add loopne les push hlt xchg outsb adc (bad) je pop cli pop mov or pop clc pop jmp xchg addl and sbb enter or fstps mov inc addr16 push jb pop push sbb mov pusha push cmp inc (bad) xor test inc mov adc movsl pusha and lahf or add lcall imul movsb mov dec loope je es add dec xorb jle and loopne push jmp insb or add or imul insb sarb imul loopne aam out pop lahf add xor add ss aam cli add ds cmpb sbb ret mov mov arpl xor fsubrl ljmp dec mull pop mov (bad) pop or lea pop sub loope push mov or or inc nop fs pop ss sub popf repz mov test cld dec add or mov mov push xor (bad) xor fs pusha xor mov sti clc les or mov out push jecxz test cmp test jne inc jb sbb rorl ret push (bad) mov cs mov cmp je insl sarl insl inc inc test push adc fwait movsl js ret pop ja jle mov cmp jbe roll xchg push push mov sub out lcall int mov imul inc cmp push je (bad) sbb notb jb mov and xor int mov add or repnz sbb inc sbb jbe and mov add push dec leave mov inc (bad) das dec outsl imul fcompl call or lock sbb lahf mov test adc shrb dec sub pop int test dec pop mov mov or imul inc test repnz nopl movl add pusha pop mov out or outsb mov sbb mov mov mov xor sub or enter and xchg pop and test sahf cmp push add fs aam mov mov ljmp mov sahf cs or adc and or cltd stos sbb cld dec sub push and fimull dec icebp fadds test adc aaa add xchg pop aad cmp lods mov test imul mov int3 fiaddl into ret dec inc int3 sub xor mov aad or mov in sbb lret jle fidivl popa sbb or dec sbb add xchg in fstl dec add inc inc pop sbb lods lods (bad) pop xchg xor repnz sub (bad) icebp push cld (bad) pop xor push cmp jae adc push sbb xchg mov sbb popa xor adc push pusha pop pusha jns mov inc mov mov lea (bad) dec sbb add aam in xchg hlt pop mov enter cmp push jne push mov mov popa pop sbb stc mov pop dec add xor mov and lds add mov or stc loopne aaa mov adc sub cwtl fisttp xchg mov mov cmp inc stos pop inc cmpsb les adc sub in mov xchg xchg mov lret insl sub pushf sarb popa clc bound or xchg push stos sbb sahf push ljmp mov sbb inc adc pop mov push fist test xchg mov sub push jb sub push (bad) hlt mov cmp in shrb sbb push cmpl mov (bad) sub inc push mov out pop je loopne movsl add xchg mov ja inc cltd xor sarl in loopne mov and pop fucomip addl mov adc add xchg rcll mov mov mov arpl sbb add aas dec ljmp leave dec subl fwait and js push (bad) insb test popa mov (bad) fild bts lahf dec movsb xchg and ficomp imul push push xchg inc test fdivr push enter jnp (bad) mov movsb inc dec mov pop das ror jb sbb ret push rclb sbb bound mov push pop adc push bound sahf xchg dec dec pop pop and xor cmpsb sub and add out loope push cmp and cltd fildl loopne cltd mov push dec popa push ss fs cmp jp xchg cmp fbstp das rorb in popa jo test into push les out lahf lds out insb or pop icebp stc sub pop push xor push punpcklbw addl push pop push jo mov daa jl fcoms and clc mov sub imul xchg adc clc mov loop ret andb xor sbb jmp sub sub mov sub sbb mov jno push psubw loopne pop gs pop or xor (bad) ss push push dec pop sub fcmovbe call inc mov fs push fstps int3 cmp loopne add sbb mov mov fdivrs xchg inc push push and fs sub mov push jmp ljmp movsb jecxz xchg out repz sub push test jle dec or jne nopl cmp dec inc sub push ret (bad) xor popa cmp or sbb dec or inc push inc sub add xchg sbb xor test add xchg cmpsb push or dec pusha xchg push shl in jmp pushf pushf inc cmp ja aaa je xor lock jp subl or cmpsl ljmp shrl daa sbb pop jmp in rorl sldt sbb push int cmp push movsl ret (bad) jecxz scas mov jge subl loope mov sbb adc pop pop mov cmp push in pushf adc cmp dec inc lods pushf movsl and inc inc insl sarb xchg add notb sub push adc in cmp sub call call sbb hlt mov push push (bad) jo inc pop lcall loope pop xchg std push inc shl push sti shlb notl (bad) pop mov loopne or lea cmp jg mov aam stos mov lea cmp in mov lea loop lcall xor repnz push mov push mov addr16 dec je xchg or jbe dec add mov call lock popw lret fimul outsl push xchg movsb xchg shrl pop in inc sbb out (bad) xor movsb xchg jns pop or pop jae mov mov adc xchg mov ret ret xchg jmp (bad) outsl mov xor pop mov mov out outsl popl and mov xchg xor je mov fidivrl inc push push inc dec enter pop cmp in (bad) jnp rolb pop and mov jge mov xchg mov cmp stc fistpl daa dec inc add jg lea ja mov cmp cmp cld andb mov add add inc add mov mov mov out cmp add fisub mov xor cwtl imul jmp rorb xor and mov mov pusha cmp lret jnp mov push xchg xor sub mov mov std pop add mov or stc (bad) aas mov and dec add sbb imulb pop lcall add add mov add add arpl xchg mov lahf add test outsb (bad) add inc mov cmc xchg loop sbb xchg mov and or mov xchg push mov and sahf rorl mov or insl sti hlt lret sub lea mov insb ds (bad) pop pop sbb popf and adc jle add aaa ljmp cmp dec or xchg xor and inc sub sbb xor sbb bound dec inc ljmp or (bad) mov ret mov fidivl push gs add inc (bad) or cmpsb imul dec and add js mov mov stc movsl add mov cmp adc out sub pop mov push or pop ret add adc inc xchg jg sti mov (bad) std sbb xchg mov in aas xor (bad) push mov mov enter jmp inc mov or mov add shufps mov sbb xchg ficompl and adc sub adc add sub inc cmp cmp push insl pop inc fadds adc std or adc inc inc xchg jl aam (bad) pop mov jns (bad) sbb xchg ret push fwait aam inc (bad) xabort mov (bad) pop jl push push mulb js dec inc outsb dec ljmp lcall xchg and xchg jb mov mov shl adc dec enter cmp (bad) mov xchg mov stc (bad) or jle je xor cmp mov jb pop jg xchg xchg add pop sub push push lea (bad) jnp add mov lret cmp jle rcrb adc iret dec or inc and mov add pop dec dec pop xor sbb nop push xlat movb or sub xor jo mov push imul movsl adc fmull add jecxz ss sbb ret pusha nop jo mov pop mov loop add jb (bad) das adc lret jns push dec out inc ret fsubr pop adc or adc lret dec gs test xchg jmp push dec dec imul loop cmpsb loopne movsb dec roll pop cmovns push cmpsb sub dec or mov mov jns push ficomp stos popa outsb adc inc pop xor sub xchg and cltd bnd cli and icebp loope sbb push cmp jb inc xor pusha cs scas (bad) movsb jecxz orb adc loope mov leave decl xchg (bad) dec pop dec sub sbb clc js incb inc pop mov gs cmpsb jmp cmp lret daa daa int mov sbb and shl add jo and mov sub insb fxch dec sahf int3 and es push push inc sub shl xor js les and loopne ljmp shr sub add mov pop add sarl push xor cmp push inc fxch dec int3 dec inc fs sbb ficompl add inc push or xchg out add push cmp mov xchg (bad) jbe in test js clc or mov xchg out mov jmp sub (bad) (bad) jne jl out into sbb adc bound cmp adc js dec mov and xchg jnp cmp mov sbb rolb (bad) fnop test xor jmp test push lea inc and or ret push xchg fnstsw stos add dec bound add and push push (bad) jne mov and stc es aaa int jle jl inc decl xchg out jle xchg iret or sub lret cmp sbb add fistl int3 fcoms sub xchg jmp xlat pop jmp push jl adc movhps mov mov mov clc inc and cmp call pop xchg jg inc cltd or add test cmpsl adc and out pop outsl cwtl xor sbb add xor cmpsl jnp push add inc and or scas add and add insb movsb mov aaa mov sbb pop imul fimull ret outsb xor lret jno repnz xorl in jbe mov cld int3 add jle and xor lcall sub dec (bad) push fsubl loopne sub xchg cmp ret or inc pusha adc add adc xchg xor in das sbb jno out sbb push cli sbb inc add es (bad) or pop fisubrl dec push je clc fwait push adc and (bad) add jno call xchg movsb push and adc add xor xchg xor cmpl ljmp fsub adc pop pop int cmpl pop popf push lock (bad) movsb add xor sbb push add roll pop and stc mov lahf and add mov adc xchg les xchg jb fldcw sub add adc xchg aas je sbb or and inc xorl enter subl sub add pop cmp mov pop mov mov pop push sub xchg xor add (bad) mov icebp add rorl adc rcl loope in fsubrs pop lock and add lds adc and push fbld ret and insb popa and pop add mov inc lods fs inc add inc fsubl jns cmp adc jle (bad) dec mov inc cld mov inc cmp dec dec imul sahf int and xchg add inc (bad) sbb jg inc add push mov lods inc adc dec pop xchg cli ret mov or fs loopne fldlg2 mov enter sbb cs xchg lret adc push dec (bad) xchg test or xchg mov mov enter nop inc je lea shlb loop add xchg mov jmp xor jns movsl (bad) inc cld mov push and rorl mov popa roll pusha enter mov movsl push push push cmp add mov push movsb lock adcb ja dec in scas test sub jns add pop popf mov xor jo cwtl add mov and dec pushf and out dec sbb jge lea jl lea pop stc sbb pop les push add add and add aas fcom adc (bad) jl cld insl sti mov test jge adc mov inc leave mov dec sub xor jl and pusha imul clc std lret shrb xor or mov mulb mov pusha inc js int3 inc and adc xor sub adc inc cmp jl sahf adc xchg test and jnp notb xor cmp push enter test enter push inc sub fdivs or jle in add mov or cmpsl cld js push mov push ss imul pop adc pop pop inc xchg jb adc fwait jae (bad) ljmp (bad) sub in jmp cmp unpckhps xlat cmp insb in rorb rol sbb ret mov dec mov push jno add mov ss lcall push call cs or lret iret push dec or xchg cmp mov (bad) pushw add or inc loope cmpsb push jmp cmp pop outsb xchg adcl jp in sbb cli test (bad) mov jmp cmp add pushf inc call dec cwtl (bad) pop push mov mov test sub mov es mov cltd loope sbbl push test sub cmp push or xchg call cmpsl fmull movsl jnp xor js dec fist and out push inc ror enter mov and enter das imul das (bad) and leave das fisttp xchg mov and das int3 das pushf pusha test pop lea fisubr test int3 jmp insl gs adc sbb cmp mov ret fldl stc fs add sub mov outsl pop jecxz pop push ljmp int3 push xchg roll jp add ror add push and lret dec std es mov repz rclb mov xchg mov stos and or rcl jno (bad) cs xchg and xlat rcll sub mov add mov ss fbld nop pop test adc lock (bad) in push cmp ret int3 push add xor push sbb adc rol push inc lahf inc subb fsubrl xor decl lret mov mov pop inc ficoml ret push mov pop pop mov jmp test add out icebp mov nop jo jns jge or fbld and mov xlat xchg mov push push mov dec dec add or or sub scas inc sub mov mov sub or and push or mov push rclb (bad) push mov lods push pop lret (bad) xchg add repz pop mov cltd dec or les adc cli in lea or or or adc or cs mov jmp inc mov dec loopne cmp inc lea or test inc inc rcrb sub iret or sar adc loopne sbbb lea mov and push dec push push and push rorl add clc imul push aam test (bad) jo push rcrl int3 and cmp call xor dec and movl ja sub and jnp pop add xchg sub xchg out adc adc sub dec inc fbld lret aaa xchg adc adc pushl daa (bad) xor cwtl addb inc lock mov push push xlat pushf adc add mov mov push or cmp test push pop add mov pop push mov sbb and or adc popf sub sub push jbe jbe pop jmp xchg pop aad fstpl mov fucomi cmp mov je lock mov jne outsl imul pushf mov pop push (bad) testl inc jo push cmpsb daa cvtps2pd mov fisttp lea aas mov xchg xchg lods adc adc fadds and sbb xchg fmul into jae lea gs movsl sub cmp fildl scas push popa push sub dec mov (bad) push cmp je jb repnz and loop mov jmp push inc cld push push fwait mov pop mov sub or dec imul push pushw lea notl and mov xchg sbb insb cmp int3 (bad) dec mov sub out pusha pusha and scas andb or mov and inc sub pusha inc loop xor mov add adc jmp lea (bad) mov scas push (bad) jne push add fsubl mov incl add testb push inc or and (bad) pop and cmp adc push mov (bad) mov cmp sahf outsb test push lcall enter dec sbb dec jg lahf (bad) stos push sbb lea push pop jge push dec mov fisub and xchg sub test inc jbe test dec pop cwtl xchg repz cmp mov (bad) mov cltd cli mov and or xchg push adcb cmpsl rcrl add paddsb sub enter add ds push adc (bad) icebp push push push loope inc pop inc and jmp stos aas add add idivb dec push andl xor sub inc cmpsl mov ret cmp je mov jmp or inc sbb ljmp xor sbb jge cld mov mov push es mov mov inc and xchg add repz out sub push sub gs or test cmp mov jecxz adc mov cmp cmp pop cld or (bad) inc (bad) enter push loope dec add jnp xor pop bound or mov stc mov xor push test fild and xchg jae sub xchg xor add jne inc inc mov xor sbb bound lods nop push lea jne and mov adc scas lret mov and jb jecxz jl add cwtl aas insb or cmp cld mov adc jae rorb jg ret and mov pusha push or (bad) es stos mov punpckhbw mov push jle and add cli xor mov or cmp jb push push add adc jmp inc sub adc add push sbb adc inc pop sub nop sub and and jno add mov or push or add push sbb sbb pop xor enter mov and or scas mov (bad) call xchg loopne loop inc dec rorl xlat push or jge mov dec mov adc jo fistp push outsb rol ljmp dec fisubl ljmp and or sub fldl into mov push shr or jmp insb push (bad) lcall or std mov test scas (bad) cmc cmpsb loopne or cmp lock and not or push xor lds rclb sub xchg or pop pushw fcoms cmp mov sub dec in xor jle push test add or cmp mov pop rol ja push sarb inc mov cmp cmpsb stc jg pop fcomps shr xlat add xor or nop or lods cmpsl test testl lcall rclb push or adc mov or cmp cld sarb lret mov mov cmp and push cs lahf dec push stc rcr and nop imul int sbb cmp xchg mov push add lds jg jno std adc fs push and ljmp pop mov cmpsb movups jecxz pushf ljmp and xchg pop lock lea mov push push in or ljmp or sbb push mulb test mov or movups and jmp add aas js mov rclb (bad) push shll lret je and out cld mov push pop pop adc or push jo cli pop pop iret cmp std and jo out mov out int3 pop mov mov add das (bad) mov and ret pusha in lock and (bad) cld push mov fs insl push adc add add loope,pt ret mov into jmp inc ror movups roll not mov aad fisubrl iret pop sub mov out nop loop shr clc (bad) xor faddl sahf outsl mov int and dec dec lock flds cld (bad) cli imul ret inc (bad) pop dec loopne bnd mov or dec ljmp dec lcall push int inc mov into pushf sbb adc inc mov push xchg inc jo loope pop nop das cld lret test fldenv jecxz rcl mov pop jl xor sub adc lcall add sti and jle jo cmp mov sbb pop adc and sbb mov mov dec sub inc add xor ljmp pushf xor xor lahf aas cmp cwtl inc cmp (bad) jmp pop push sbbl mov addl xchg inc adc mov mov xor repnz pop and pusha aaa jmp insl mov shr adc cli cmp cmp fs and adc in sarb cmpsb sarb call cs xlat xor fbstp jl ljmp sbb ret cmp pusha lcall mov pop jo add call lcall dec mov fild or punpckldq xor mov iret lahf sbb outsb jo mov xor lret xor jle sub mov ffreep out loop jb add rol mov push cli (bad) cmpsb or daa mov in cmp sbb aad adc loop add fnop fbstp (bad) ljmp pop bound add out in or addr16 add push cmp aam outsl daa (bad) cld ljmp (bad) xor pop cmp in fcmovne and out adc popf jecxz push jl pop xchg loopne into cli mov sahf sub cmp push inc push mov push sarb and push lods (bad) loopne or aas jl subl inc ds and sub stos hlt adc or and cmp ljmp inc push or pop push movsb push stc cmpsb (bad) xor stos add or adc mov push push (bad) icebp pusha or pop sbb mov xor mov jg and ret pop pop gs sbb cli test and mov push add jb js jne jecxz,pn fld dec jns jge out ljmp in adcl lods movsb test push add or jmp or jle outsl les and dec lock lret pop push inc jmp sbb cmp ss add or sub in jb int3 (bad) mov and pop sbb add divl (bad) jle push in cltd imul and out lahf xor mov jmp dec shrl jmp mov dec addr16 xchg roll ret sub inc pop out adc xor sbb add es mov or or adc mov sbb add adc rcl ljmp (bad) push xor clc insb and repnz jo or add push les pop adc iret rorl shl mov ficomp and and add jp aas xchg es mov add movl add inc addr16 mov fdivrl sbb test mov arpl ds aas inc sbb inc add repnz neg hlt stos test cld sbb mov movups push sbb xor xlat jb pop pop imul push pop pusha addr16 inc and hlt inc pop (bad) adc fbld clc add sar loopne cmp jb mov or adcl mov sub sbb push jno push pop outsl mov repnz icebp outsb adc stos sub pop mov sub dec push hlt cmp ja adc and jl jno sbb and sti or inc lret mov cmp movsb jl sub pop dec roll push inc jg or mov ret int leave mov lret (bad) push mov jae incl mov add mov sub cmp mov call xor adc add cmp or imul add lea clc push (bad) and cmp jae call cld xchg rcll (bad) dec inc xor out xchg jp pop add lods add add mov icebp add test lock jo gs mov lret sar and cltd and insb add mov rolb ljmp cmp add cwtl add mov mov arpl inc pop jb mov adc mov imul mov xchg add xchg mov mov cmp fnstsw add add movb or sub lds push incb jmp test mov imul mov add mov loope cld jns pop adc pusha pop movsb icebp dec fs add and mov ret add lahf adc clc cmp cmp pop insl sub dec les xchg pop adc xchg xor xor loope das ret jmp push dec inc daa jb mov addl jne push loope adc fwait pop xlat mov lods lea je or int subb lods pop fsubr and or rorb mov outsl movsl pop and sub xor push push push mov pop inc xor inc xchg add mov inc inc adc enter fidivrl (bad) pop sbb cwtl dec sub ret rcrl mov jb hlt cmp ja jo mov aas addb dec inc push jl jmp xor pop nop mov mov stc push push dec std mov mov pop (bad) cmpsl imulb dec daa xor and rol xchg rclb ljmp jecxz leave sbb mov dec xchg (bad) pop xchg jbe pop push push push pop push ss shrb push xchg outsl pusha test pop mov dec popa and repnz ljmp adc push shr (bad) cmc xchg mov aaa inc ljmp lock mov stos mov adc cwtl stc xchg pop sub dec loopne popa cld sbb int xor jmp sub add inc adc scas inc and mov fisttpll push mov loopne rcrb or mov add fisttpll js (bad) inc fwait jle iret inc push lea push lret or les inc add sub add or int lret add push dec arpl xchg jecxz notb mov or lods das arpl xchg push std rolb or dec push lcall sub mov jo add jg pusha jecxz ret inc aas insb call xchg cmp orl aad ret mov mov push int push mov cmp mov jo stos adc sbb daa fadds cli jne sbbl popa dec loopne cld xchg or or enter inc es inc cmp test adcl dec addl pop loope push in lcall lock dec xor clc and mov cmp xlat js push (bad) mov daa test jge cmp sbb xchg push sbb faddp loop sbb jnp inc sbb pushf xlat in scas cmp add mov mov ret mov adc rorb jg or sahf inc add out test mov int (bad) mov jns push dec aad mov adcl fwait xor and adc push int lock and add js scas dec shll adc sahf ret dec cmp fwait lcall sbb dec xchg mov push push inc mov jg push sub xchg inc gs ret popa or sahf xchg jl cs inc lea push add pop nop mov xor mov dec mov fwait lret xchg sti pop xchg sbb mov scas push and cmp lods fdivl pop push pop pop or add mov xor test sub arpl test push adc dec movsl cmp mov lea sti lea orl xlat sarl ret shr nop jne cwtl push mov mov int3 incb (bad) jae xor push sbb ss jge xchg test clc push mov fcoml cmp (bad) sbb xor lcall jg sub jo sbb xchg sbb xor daa and sub mov mov dec pusha and clc lock xor adc sub push push dec adc mov xor mov add mov cmp mov and lcall jnp shlb mov fs or xor or pop andl mov adc mov or addb roll add add int3 add xchg mov mov xor ficoml xor outsb dec mov lret mov or sub ss arpl inc pop cmp jne fldl or dec mov mov xor push (bad) sub cwtl sub pop dec lcall lock mov stos xor loopne repnz mov fwait mov mov rcrl xor out (bad) faddl out inc lcall ja adc pop dec mov or in mov loope stos call daa lods inc shrb jle inc je rolb add outsl pop jo xchg add push xor mov dec fnstcw loopne cmp loopne mov add clc pop fdivrs inc xchg in inc adc in fdivrs pop loopne movsb inc test int3 ficompl sbb rclb mov mov push mov sbb je rcll xor mov xchg cmp ss sbb mov xor (bad) adc push imul add inc adc dec dec loope fldenv pop aam fmull inc punpckhbw add icebp cmp rolb push mov mov fsts js,pn mov shl mov mov jecxz dec adc dec (bad) hlt test ret sub xor int3 jp sub xchg pop stos fs out push push pusha xor test fdivs test outsl loope mov xchg inc mov sbb jno test and or lret sar fidiv ret cli orl std sbb push inc addl rolb or and les dec and imul dec push cmp jmp inc xchg icebp dec rcrl push rcl xor inc (bad) test je push ljmp mov push push roll sbb sub mov loopne fcomps adc ret jne jl loop test dec mov mov clc sbb loop test add push push pop cwtl or ss test ret push in pop jnp in or movsb (bad) xor sub push adc add into sub mov xlat cs inc inc mov lock sti mov mov or adc mov sub inc add dec jne in inc outsb bound xchg mov xrelease push mov and into mov ret je sbb cmc and aam inc push jmp cmp rcr pusha add cmp mov popa pusha test fisub popa pop adc xor pop out jecxz addr16 mov test ret mov add add nopl inc mov sbb mov add int out dec add or sbb jbe add sbb ds pushf loopne jmp mov lods jbe push jmp (bad) faddp pop test add xor repz cmp and cmp mov test or mul adc add push (bad) pop dec test cld into push and movsb adc jns xlat sbb dec arpl inc (bad) fmul jne mov movl and stc or bnd (bad) add cmp mov fdivr imulb and test mov sbb (bad) sti mov mov jne pop mov pushf or pop jp sub sub rdtsc cmp (bad) cmc add mov lods jb sti aas push xchg push cmp je or sub daa inc mov gs insl jno inc test ret rorb arpl mov cs in int sti xor mov add and (bad) push push add inc add jg aas xor cmpb jge push xor add addr16 push sbb mov imull (bad) repnz lock adc xchg dec into inc add adc mov add adc mov push divb mov hlt (bad) cld mov sbb test or sub sbb adc scas outsb xchg and push xor mov gs data16 mov (bad) inc (bad) int3 clc jg pop jl push rclb sub roll mov mov pop rcr xchg loopne cmp cld or test mov inc xchg mov rcr pop jmp sub inc bound jae mov in roll lea std sarb adc enter dec lahf add rep (bad) js dec xchg lock out add push shlb nop sar rolb and and sbb jno push add hlt call icebp mov lret adc aas mov ret jge push jle mov inc jg adc push enter mov inc imul xchg lds lds sub pusha xor subb sbb divl out sub dec cmp out pop push push jecxz jo add pop sub inc out lock push adc inc adc xor in jnp adc test pushf jns ja inc sbb xor and mov pop and bound xchg push aad movb xor mov fisubrl insb into adc jl add mov fisubl cmc test out xchg add pop sarb je mov in fisubr sahf mov add sbbl out or test ljmp fwait dec outsb or jns dec sti aaa mov icebp das int rcll cmp js test rcrb mov lcall hlt (bad) (bad) (bad) jle sub sub push adc add xchg hlt push or pop xor in (bad) bound iret sbb and clc push inc daa cwtl call push or loopne into clc fild add sub imul xor icebp or in jecxz imul lock icebp inc push in add in cmp lock out int3 or and int3 pusha pop adc push mov loop sbb data16 and inc je cmp xchg nop dec rcrl and add int3 push pop push pop dec push pushf push outsl xor xchg insb shlb and clts inc mov aad pop mov daa mov (bad) and push cld add mov loope repz mov jl sti mov mov insl xchg push adc js xor sub pusha mov jmp xor add mov xorb flds ljmp adc or inc xor mov aam sarb decl nop mov pop inc or push pop add or xchg dec adc mov dec es pushf mov cltd fs dec sub fucom jns jnp shr push mov jns fwait call adc (bad) cmp cmp jl cmp jg test lret ja testb sbb push dec mov ss xor insl pop mov das sub jl xchg mov mov dec dec or jmp movsl (bad) mov xchg ret push push push out inc cmp or sti xor push and cmp dec mov cmp call and cmp fsubrp rclb lcall jge sub push cmp push in add rorb insb aaa inc dec je push cwtd dec pop fs out pop bound push lret pusha sar pop pusha pop add add out imul push or and add insl test mov and add add aam xor mov and cmpb add sub adc movsl fadd sub rcll jg xor hlt inc sbb push inc jno xchg dec dec subb pop sbb add outsl mov pushf cmp pop xor clc and ret out jne leave in adc jmp pop mov mov xor pop lds jp sbbb and pushf and xchg or out leave pop xchg frstor xor adc clc jecxz ljmp push xor jmp inc and or inc stos sub sahf lea inc jl push adc mov inc loop add adc ret lods inc inc out imul sbb out push dec pusha mov and rclb sbb sbb inc call loope sbb inc adc push sub inc push dec es sbb push ljmp lock sbb sub pop leave ret sbb popf adc nop push outsl inc imul inc loop lahf and mov xchg jns (bad) mov roll xchg cmp js movsb es lret mov cltd movsb mov xchg add mov test or je out dec movsl jle xor popa xchg cmpsl jns dec pop adc fildl iret movsb stos pop fidivrl fsts xchg cmpsl jns sbb adc fidivrl aad add and jp add or pusha mov fadd adc lret mov in enter sbb adc mov rorb lret imul shrl or sub sub ja int3 fnsave xlat data16 data16 lods xor loopne adc (bad) js fcmovb and add sub xchg adc cmpsb lret ror adc or cmpsl dec pop and adc xor or xchg push and and sbb aaa fnstcw push bound mov adc loopne jbe dec mov push sub sbb fdivs pop inc xchg push push pusha xchg call sbb lcall sarb add mov add sbb rolb rcrl pushf or in mov or sbb or out jno cs arpl xor and lea movl das jmp jl out adc roll bound pop add and add lds fmull dec rolb dec int pusha (bad) je add andl fidiv test in cmp xchg cmp jl and add jae xor or movsb imul or xor in xor adc (bad) (bad) xor adc mov (bad) jl inc sbb cld sub or movsb les arpl inc (bad) mov inc dec movsl sub (bad) mov je lods ret mov js (bad) cmp inc add push lea push adc test rclb ret add or test add cmc rep mov and icebp (bad) ret test xor mov adc xor or mov andl pusha push mov add gs mov jo mov mov inc and repnz aad lock dec mov push dec loope enter pop mov mov and mov iret pop dec mov daa lea push icebp sbb add push add push mov (bad) mov js add mov insl adc (bad) add push cmpsl sbb fsubl or pop movl mov in cmp cmpsl test sbb push push lea pushf add or call sbb jo xchg push and mov mov dec pushf jb hlt push cmp or dec sbb (bad) mov sbb jne and push mov std xchg int3 lods add push movb inc or inc jmp orl add (bad) push fisttp shl sti lods push xlat push popa sub aaa pop jmp or push or xchg ret pop mov inc sbb cmp inc mov ds shr sub mov (bad) or push sbb shr push push sbb adc xchg adc add inc add jo,pn mov enter jbe mov jmp mov iret int mov mov sub mov push and push lods mov pop icebp inc ficoml je (bad) xor jbe adc lods xor pop jbe popa jp push iret sbb add cld lret push mov mov loope int inc or xchg orb lret mov testl add sahf adc ret sbb xchg and test jnp add rcll cltd cmpb dec sub jg in loop (bad) test cmp jnp push adc adc jle and inc inc gs inc inc pop add sbb dec inc aaa inc jns mov xchg push sub frstor fwait inc loop mov push push or enter inc sbb incl add (bad) jnp daa cmp je clc cmc push icebp repz add inc cmp cmp or dec inc cwtl adc push enter cmp adc pop push cmp adc push inc je cmp insb out sub push mov mov jne mov inc test pop push push inc or push fidivr push inc sub or clc dec insb arpl ja push cmp lret ljmp insb je cmp je jmp pop cmp fbld jo pop stc adc pop int3 jns push jmp pushf jb aaa (bad) in jo and arpl sbb push (bad) push dec insl pop adc fisubl and dec add outsb (bad) xchg and pop push inc arpl pop fistp cwtl dec push test adc push (bad) in and lret mov xchg lret xor adcl mov inc fdivs cmpsl xchg pop mov pop push out addl loopne mov push stc cs inc fcomip mov adc jecxz add jg imul dec push es and dec xor rcr jle push or shl or setl jmp cmp mov aam clc xor addr16 loop cmp ja das jmp ja out sbb clc adc xor test popf inc popa popf push adc and or or shrb xor ret lret mov sub enter push lret jmp pushf or push (bad) mov and sbb mov mov lock inc push mov push push daa jmp ds push mov fdivl jl pop mov pop shl rclb sub rcrl ret clc daa mov nop data16 (bad) jns pop or dec in pop inc add je add xor adc sbb or push iret popa dec xor inc inc pushf repnz push mov add add clc aad inc mov or rcrl lret cli fadd out cmp cmp jne adc je push test pop shl aad ret xor inc and aaa xchg je push test push inc lock cmp dec pop sub nop lcall mov js clc ljmp cmp ficoml (bad) dec popa add inc ret dec cmp cmpsb dec mov dec xchg invd test out js outsl shll in ficompl lea push cs nop jo inc push cs xchg sub imulb pop jno pop mov aas sbb punpcklbw mov enter xchg add sti stc dec stos test adc or xchg daa xor (bad) adc punpckhbw lock aam out fsubrs rcrb into push call xor or adc testb clts cmp dec in fmul add add push out and jge push js jno or nop pop shr (bad) jg cmp xor mov mov push inc jle xchg (bad) mov sub popa hlt adc into jl or push jl fwait rorb cmp ret push mov or mov mov fsubrs fsubrs mov push fimul fs push or and jne xchg stc rcll pop or add mov sahf nop mov jb xchg scas xchg clc clc and insb xor es jb std mov ret or je movsb insl outsb outsb add sbb je mov (bad) jl insl jae adc or push test es and mov xchg jg jmp pop add in or push sbb pop add test or mov add stc pop bound push outsb jp ficom aas mov pop je inc repnz cvtpi2ps je mov (bad) mov sar je push sbb sti xchg pushf dec push das bound sbb or ss cmp cli test jg mov aad stc cmp xchg mov mov je mov and adc mov push or add lds jecxz lea (bad) sbb ja xchg sahf in int3 test jne or jmp test jne std cmp xor rolb jg jmp sub pop sbb inc cmp dec sbb rolb jp or jmp or inc jp inc xchg pop rolb sbb shll ficompl mov xlat fadd push int fnclex sbb hlt sbbl push add in add jnp and add jle push in repz sub dec adc jmp stc pop add add add movb xchg sub jo add in sub push decl (bad) xlat mov iret sub mov loopne movsb mov fstps aas sub jl sub fcmovnu aam mov pusha faddl jle dec jns scas and adc fiaddl out je push enter xor and pop jb ret adc fstp fisttp and into add fdivrl fadds stos inc push aam sbb or push cmp adc fnstsw mov out inc pusha push fbld pop jp dec cmp sbb pop fcmovnu bound out test clc aam inc or (bad) jno call push lock mov decl cmp cmp and addl mov fldt or faddl inc jl lahf nop push lods jno enter sarb enter scas or jo mov pop or test push mov clc arpl out std jle mov xor jnp adc push jge sti fnop in adc lea xchg dec mov leave push xchg or jnp stc mov mov dec pop mov sub fs imul cmp or movsb and adc lea daa inc push adc test push pop adc xchg faddl dec sub xchg pop mov push addr16 adc faddl lahf pop pusha or cmpsb mov mov jl test and push loope loopne mov cmc es push push cmpsl sarl fs xchg inc rolb inc jbe imul push ljmp inc outsb dec test add imul stos sbb cmp jae mov sub jmp xor mov orl lock cmpsb lock jp jae (bad) adc jbe mov cs es adc inc and loopnew fwait mov lahf loope jmp adc loope addl jb jns pop adc movsb mov je push das dec xchg jae test xorb and lock sbb xor push int3 mov inc adcl mov mov and push and jbe sbb inc jecxz pusha loopne fdivp add dec add cmp xor fsubs mov icebp add add xchg fwait jle dec loope or pushf ret xor pop push mov hlt sbb dec cmp call or mov xor inc adc sbb out push jno xor shl xor roll jnp ret fdivl add sbb xrelease inc fwait adc jbe mov stos jmp ljmp xchg pop das nop es mov add mull jno pop lret sbbl movsl outsl or fdivrs jb push stos pop jl push jle mov mov push inc insl js sub stos xchg adc dec mov xchg lea pop cmovb jnp add lods push (bad) or dec inc and rorb jg sti xor sti push mov xchg add add add xor jg xor add mov cmp jae mov (bad) call xor jb fsubp push outsb xchg (bad) jmp inc dec mov jae xor pop jb jmp push or sbb jbe jnp xor daa mov in cli mov inc mov fimull (bad) pop pop jb jmp ds push (bad) add mov lret test or sbb cmc adc ds push ljmp mov and push pop fwait addl xchg stos dec or clc inc pop xchg mov mov jnp lret aas sbb add xchg (bad) pop aam or mov adc inc push inc jg push pusha and adc je in push adc jae push lret sub or push push in lea js push jno xchg or push into mov mov pusha mov test mov cwtl rorl push (bad) sti loope dec pop fldt sarl pop in dec cmp addl pop movl inc or push gs or lret or jecxz shrb mov in cli jmp push (bad) and sbb cmp les push mov sti mov mov sbb sub lock sub or lcall (bad) jecxz dec out push lahf xor and pushf dec loope scas imul or cs imul fadd insb adc les mov cld sbb cmp jne cwtl jne push aam pop insb jmp cmpb dec repnz xor outsb mov repnz mov int3 and dec call int mov inc cwtl adc inc push dec push jne push add in pop jae mov or dec adc mov inc cs dec inc test xor jb imul fwait and mov cwtl inc dec bound pushf dec fsubs cmp push dec arpl jne inc dec inc cmpsl xchg popa pop jb fcoml push xchg jae inc outsl das mov inc inc jo jbe pop mov mov sbb dec pop xchg dec inc cmp imul add enter inc imul push jg je inc je sarl dec das or xchg sbb push dec push (bad) je push jp enter cmp xchg jl jmp add loop sub cmp cmc mov sbb pop sub (bad) fdivr testb jne jge mov inc sub inc pop cmp xorb adc jns (bad) fwait lahf xchg out add testb push xor test outsl jecxz stc mov in scas nop mov int aaa adc adc adc cmc or mov rolb pop jbe adc jge jmp adc ret push add leave xlat add add or aas stc ja add mov inc add xchg sbb cmp flds cs jne jl sbb sti daa pop jne test jmp mov mov and andb mov leave mov inc test pop cmp popf jmp push shll roll leave std mov popf (bad) cwtl jmp testb ss jae inc ss fisttpl out jmp stos js (bad) mov stos adc cli sbb lds mov push pop test bound imulb mov (bad) push adc xor adc push inc push mov add pop movsl cmp imul cmpsl sahf push sub inc idivb jns pusha test push pop ljmp mov pop push mov or jl sbb xchg ret out mov pop pushl mov cmc fildll dec pop rorl cli dec or adc cmp xor or jo rorb js cmpsl jne inc and push jae mov outsb adc push mov int and iret adc pushl (bad) les pop mov ret xor xchg adc shlb jne clc fisubl stc push xor sarb dec pop jl or nop ret or outsl cmp or pop sbb jne cmp add push mov push test fcomps sahf cmc xor ja add xor fscale fwait clc out sub or add dec jne push icebp sti push stc lea mov ficoml popf cmp or push js xchg add flds inc call mov sbb addl and ficoml mov decl dec jne fcmovnb sub (bad) out aaa inc cmpsb ret das mov jo imul mov ret xchg ljmp xchg jmp mov add mov xor or xchg adcb adc add mov roll add jge dec and test shl mov fcoms pop or inc mov faddl test mov ljmp sbb les or or fstl cld (bad) ljmp sbb mov push cmp xor stos pop test pop push add sbb hlt pop sub insb je sbb cmp ss sub aaa (bad) push es call aaa test jo xor adc push mov or inc adc xorb mov cmp xlat push in (bad) sarb and pop push push mov cld sbb inc add or adc dec mov or push in inc or adc mov cmovbe push fadds cli jo jae fcoms adc or mov or mov adc cld (bad) or jecxz and or sahf test jg mov loope mov js adc fisubrl fucom push mov pop jne add jno sbb or push jg sbb ds cmpl pop inc push add cmpsl inc jle cmp rcll push mov stos push incb mov clc push mov pusha add pop inc pusha adc inc pop sar out and inc sti and adc dec mov pop sbb inc roll dec out in push lock jo mov daa mov aam or repz pop xor shrb rcrl pop mov add iret pusha loopne loope js jecxz aam cli lahf jo movsb cmp cmp and or (bad) nopl cmp cmp or mov add add mov loop ss jge ret cwtl sti test arpl adc addr16 inc jecxz jle push cmp push (bad) lret and fadd add jbe dec popa or cld inc lods add fidiv and and (bad) je push push xor push xor je mov jo ret sub adc sbb sub xor dec (bad) icebp dec lcall insl or outsb or pop jecxz adc add aas mov mov inc add scas xor mov rorb cmp shr mov (bad) neg inc mov xor sbb imul lret add pop cmp iret xchg or rclb ds cmpb push fs loopne and test inc and fwait ret xchg cmpsl cmp cmpsl stos sub push (bad) jp sarl jnp adc add cmc jge mov adc (bad) push je xchg mov xor jne or jns or xchg fldenv pop or or loopne lret cmp mov xchg das icebp add scas xchg enter andl adc ljmp pop dec xor adc add pop push cmp stc jbe mov or and xchg rcll adc lret sub jp orl arpl xchg xchg sarb nop ss (bad) imul stos pop cwtl xor add cmp hlt mov adc cmpsl outsb pop inc jbe and push es fadds mov push roll or xor mov popa cltd push loop (bad) and jno add dec inc call les push lret push add test test insb mov fisttpll sub mov dec out xchg ljmp sbb icebp push cmp vmwrite daa jae push pop iret or or pushf pop jg iret jo clc inc fadds ret add out mov loop dec (bad) cmp jge dec sbb jl dec dec or add and and xchg mov (bad) fmuls pop (bad) mov xor add mov jge ret jmp test or push or je clc mov add pop add add nop jo test out push xchg mov and cmp sbb aaa je das cmpl adc sub xchg sub mov and clc xchg pusha ljmp sbb cmp sbb popa leave inc fisubl hlt outsb insl mov test movsb mov mov jb xor xchg rcrl imul call inc lret push push je add jb fcomps aam adcl cmp sbb dec push fsubrs push push lock ss out mov ss xor or inc das sbb (bad) out jge mov mov mov pop lret (bad) (bad) sub enter ss cmp sbb subb xchg mov adc sbb inc sub call out or push or add es mov in pop mov out ltr push sbb cmpsb xchg mov push fiaddl inc cwtl shrl inc sub iret test sbbl jo pop stos push fxch push in push aam mov enter shr xor xor cmp in push cmp xchg inc xor sbb mov cwtl dec mov mov jb in cmp mov (bad) std and loopne out push jb jb out cli mov scas mov aad test bound add popa mov mov dec mov push popf rcrl aam inc test sbb cmpsb adc nop inc fisubrl mov testl mov or add push adc or pusha gs leave xor lahf push push mov add (bad) les shlb add push jo push sub das mov daa loopne repz pop add andl adc ds adc push add pop sub lds dec inc pop bound pusha jns mov mov test mov jo loopne punpckhdq sbb cmp adc dec ficoml sub (bad) jno push cwtl stc mov push sbb cmp add pop int3 push and nop xchg fxtract jne loopne jbe or orb test cmc and fisttpl aam int3 and insb cmc sub inc push add cmp jg pop fimull fadds fildl icebp aad outsl mov xchg ja mov xor jmp fadds test (bad) xor jne push mov testb push xor xor js jmp pop and or xchg rclb add mov mov mov pop sub mov sbbl push xchg mov cs push dec dec repnz jo shr mov mov and mov mov pushf outsw sbb jle (bad) cli jb je out or pop cmp add sbb loopne dec pop loopne or test ss imul lea ret mov sub mov inc mov mov cwtl jbe popa and pushf shrb sbb cmp adc add sbb cmpsb push rolb push pop push leave out sub cmpsl divb adc lods jmp repz push (bad) movsl jl inc xchg push push pushf push loop push mov and imul das xchg cmp sbb int add xorl popa sbb popw lods push mov dec inc or stos sub mov cmpsb mov lret inc pop xor or jbe cmp jb lea or mov shll sub jl inc das xchg je mov xor add test shl inc xor push mov (bad) icebp mov dec gs or (bad) mov xor inc in mov push xchg jl xor inc inc jne loopne cmp or jge in ljmp (bad) sbb mov mov push dec enter popf mov jg mov pop mov mov add dec sbb add cmp movsb or and push (bad) mov adc dec push dec dec or cmp dec call sbb fisttpll push jmp xchg adc xchg mov data16 cmp sub xor xor xor mov test jb fistpl pusha (bad) sub push cmp arpl imul (bad) into int3 pop mov rolb cmpsb or push enter adc mov arpl cld inc in je (bad) sub pop sahf jbe sahf test xchg xchg pop rolb pop out call cmp pop jbe mov scas pusha sbb data16 shr jns andb js sub add jb and fucomp insl out jne xor es and xlat inc ret add in cmp add fucomp pop sub (bad) jae cmp xor nop inc add jns dec xor (bad) push les xlat add clts dec or insl ss sbb jl adc lcall push sub es cmpsb mov pop dec lea push dec cmp jmp push test mov mov xlat outsl push pop in dec sbb push push sub push imul add xor push cwtl or mov int3 cmp jne dec ret or lea or lret push fmul mov adc lret popa add shll or xor sbb add xchg adc fsubrs and pop mov out into sbb leave dec les fimull push or bound inc inc adc jns ret pop mov push ds inc add adc mov cmp push pusha add push mov push (bad) bound add xchg fnstcw add add add mov push inc ret add xchg xor push pop neg sbb pusha or shrb sub pusha out sub pop mov mov adc inc add (bad) call je (bad) pusha xchg and pop rol ret or mov aas jne cmp rcll mov pop push rol ret push sub mov sbb push ret mov in dec (bad) xor push (bad) adc ss cld pop pop and sub and repnz jp sub push (bad) adc test pop js enter movsl sbb lcall fistp add mov rol pop mov mov mov mov xor sub xor push pop stos sbb out test (bad) cmp test pop inc sti (bad) (bad) das push mov pop add or pop hlt pop dec jecxz xlat mov add daa test dec loope mov sub arpl push push jmp cmp lods xchg test pusha dec inc shr xor jns stos adc or rcr push inc popa or stc iret sbb pushf lods or in setb cmpsl lea add ret cli ss mov leave push shl push sub out pop sub add jns cmp shl lods por sub dec jg jne add jg cs cli lret fadds lea ret jo lea stc adc push shr mov movsl jne xchg pop insb jo test and roll ds dec jae enter shll into mov and fistl aad cltd rcr mov (bad) arpl inc iret fdivrs or xor (bad) (bad) call in das or and add inc mov clc pop enter or xor in add inc adc sbb rorb inc (bad) in std test (bad) out xor adc cmp jno cmp jbe xorb cmpsb adc add add cmpsl push or popa shl push ret loop add fldt jecxz sarb mov push dec lcall jp fbld out xor add add and jle or sub fstpl cmp sub or push fiaddl or lret jle xchg and sbb pop adc lock inc sub jo adc xchg or jmp orl inc xor xor mov mov in mulb clc add mov das iret xor dec xor in jnp add outsl pusha pushf sbb jne (bad) mov (bad) (bad) push add adc jecxz dec in mov pop add inc ret dec jg inc in push mov js xchg jnp xor movsb lret push push inc sub leave imul inc xchg (bad) push dec mov mov rolb xor (bad) stc cmp add add cmp jge mov push lock sub in pop ss cmp xor fiaddl adc insb mov jg mov push je dec test (bad) jp lock add insb stos or mov mov repnz (bad) hlt mov out cmp cmp sub (bad) fnop sbb je adc cmpb je jmp push sbb mov jne cmpl cmpl inc add jle xchg pop cmp add jmp cmp pop jle jne adc das loope decl pop fimull mov add sahf jge or test dec mov mov or loop jne or dec or sub push or pusha bound movl sub jg js adc test mov das insb jecxz imul call lret dec sub test xor aas jle mov pop mov or adc cli dec sti incl jmp push push add (bad) push push xchg fistpll cmp cmpsb cmp (bad) jle adc (bad) xchg insb sbb pop pop push add mov jns push pop jo test jb aaa or xchg popa sbbb notl jb and inc sub fimul outsb fadds mov push cli push mov cli (bad) movsb sub fildl pop add cli sbb in sbb sarb sbb mov jo shl std sbb sub lea dec insl mov test jnp ja popa sub mov imulb iret sbb xlat and out pop aam iret enter jge lea int cli pop add adc jp addr16 push cltd es xchg movsl stc cmp sti adc cmp sbbl vcvtps2pd mov xor push pop stos and clc add pop rorb xchg pop mov jmp sub sub mov adc push cs cwtl rcr or cmpsb addl dec push inc (bad) stc in adc test test in test stc jmp cmp jae mov mov push lea jo fadds test ss mov pop add cmp jb or inc mov sbb mov cmc outsl adc movb jmp cmp jbe jmp sbb das ficompl pop fildll add shl into mov mov sbb decb or jmp dec stc (bad) jbe enter adc cmp lret cmpsl mov xchg add in jmp fnsave mov mov scas repnz ljmp mov add pop inc rorb ds jae fcomp (bad) jbe jmp push fstps mov add in or sbb pusha jo fimul aaa push pop loop dec std jb shr adc sbb sub mov jbe mov pushf jle dec das inc dec cmp adc decl mov cs cmp mov push cmpsl push mov mov decl cmp iret xlat and sub call jne in add clc ljmp int3 push dec pop leave push fist (bad) div ret xor test sub push call push jp push cmpsl and jmp je,pt adc push pusha out je outsl dec sub push mov push add scas test mov push les jp jmp jmp pop push lea stc dec lods jl pop lods test push test arpl or and and imul sbb mov mov push add push je arpl and sbb jno add cmp mov adc aas ret adc orb jg fnstsw mov mov dec movb movzbl lret mov pop mov jp (bad) dec out add dec add inc sub nop jnp and sub sub adc and cmp pop lds mov dec mov je push sbb lds outsl or push pop pushf inc and mov push call adc mov icebp in adc sbb or push inc sub inc and imul fiadd push adc divl xor fbld or inc nop cmpsb in loop test xor fwait dec adc or fisttpll das out push cmp pop mov or sbbb and dec xor or adc rcrb pop cmpb jne cmp jne adc sbb jae and inc bound inc sbb add dec in cwtl cwtl nop testl adc mov ret je add jge push dec jmp dec imul xchg inc bound jbe lcall push sub push fs mov loop jle push mov movl xor mov insl fiadd fstps dec sub js push or push mov inc jns cld or xor or adc push pusha out fdivr dec jne insl imul and jno pop decl repnz pop mov jl and inc push sbb rol jo inc sbb mov lods inc jle push or ret pop sbb lret add (bad) xor adc mov out clc es mov jl and mov mov std pop cmc roll mov dec jmp dec pop out dec xchg xor out and push mov mov aam ret mov popf imul bnd not and cmp mov sbb test and hlt sub orb and adc iret ljmp das mov dec cmp call loopne mov or add mov push pop pop pusha xchg or nop mov sbb mov add js cmp pusha push cmp clc and sub loop xchg xchg sub xor or sbb jae,pt adc add push mov cmc rol les sub mov mov or adc add mov sub outsb sarb mov cmp (bad) sahf jmp push fs lea add (bad) repz inc mov add cmp idiv lock mov inc out sbb and gs imul and fs inc inc mov sub inc decb js loopne or mov js insb das adc out pusha int3 mov push sbb xchg add xorb shlb pusha push adc insb cmp jecxz add ss jo fiaddl or xorb lcall daa adc cmp cmpsl insb pop sbb popa xor test dec ss cli adc dec icebp or xor mov and dec cli mov popl and sub je stos lret rcr imul adc pop add mov mov dec stos das pop aad mov dec ret mov add aas sbb movups dec xlat lods out fsubr cmpsb ja aaa ror enter push pop (bad) and (bad) into test lea test dec inc dec (bad) mov movb or rolb ljmp sub shrl or shl es cmp add shl (bad) out sub insl (bad) je and repnz inc push and push push insl adc pop or fisubl mov inc loopne or jbe cmpw pop jbe ret ds and xor add rclb and push cmpsb repnz xor ret rclb lods sbb enter pushf mov rolb pop outsb fstps sbb push sub adc push cmp (bad) sub inc inc push pushf mov xor and jae and mov pushf jmp stos and clc cwtl enter mov stos mov mov (bad) (bad) sti mov mov inc loopne dec mov dec push in inc fistpl jmp and pop mov mov sahf mov mov adc add sar sub sbb call sbb dec (bad) mov shlb cld mov scas imull sarb push pop dec pop out cmp cmp add and cmp or cmp inc push push aad adc mull call nop add adc cmp call dec dec aam lret or and or sub adc sub sub shrl sub xor sbb fiadd mov popl repnz out cmp jo inc jecxz pop pop fiaddl stc pop sub sub jmp xor inc inc add add adc push push fnstenv fdecstp sub adc repz pop cs repnz add inc and mov push push push out loop cmp dec add ret scas dec jbe (bad) xchg outsb js dec pop jae jb cmp mov pop leave ret push lcall sbb mov pop test xchg pop (bad) mov add movl addl push (bad) rclb arpl jns adc push outsb icebp xor dec sbb in in or sbb cld mov adc and cs ficoml js add cli cs insb add cmp sub add dec add cmp lods add xchg mov xchg test and fwait push adc test mov fstp pop fmull ja inc push test add lea jb in add pusha sbb nop add jns,pn sbb popa data16 inc push fs pusha pop sbb push dec sbb mov add lea push movl xchg pop push pop push data16 mov lods push mov fwait jge out repnz or das es leave dec fidiv inc cs pop leave es cmp pop fsts aaa xchg mov pop push xchg adc jnp xchg push sbb sub add and sahf das mov aam sub cmp sbb jo (bad) in sbb xor dec in inc outsb push or or sub aam mov add ds push xor fsubl mov push sbb ds sbb xchg into add lods xchg dec mov adc or in sub dec dec nop adc pop test inc imul cs jnp inc xchg inc adc sbb add push and and cmp mov dec and add pushf lret ret jno mov or mov cmc cltd ret sub mov mov pop dec mov dec sbb (bad) cmp adc aas adc push cmp or or or cmp xor inc add or das dec jmp mov mov test mov push int adc and (bad) aad scas and or jge std jnp imul mov rcr fistl insb test popf xor xor cmp jl cmpsb lea insb pusha add mov call and xor push or xor ret jmp ret lcall subl movsl add push add add push push mov add add adc jb xchg pop inc or popa xchg sub ja outsl fbld cmp flds sub mov aaa cmp sub pop or out jle jge lea xchg ja or sub push xchg push jo xchg cltd rorl pop int3 push sbb sub mov xor fadds (bad) xor loopne adc jns aas fs (bad) popl xchg js push or cli in cwtl je repnz push fdivr sbb loopne dec push bound pop cli xchg jo lahf mov mov pusha inc pusha cmpsl insl and dec and popa repnz or push mov dec mov jg pusha cmp xchg dec push orl add stos iret out lea loopne push paddusb das xor dec pop rorb popf sub add outsl or push mov sub (bad) lahf add movl sbb pop add dec aas add sub loopne add and bound dec jle adcl lea je repz jmp (bad) sbbb ret fwait sbb mov dec xor or lcall sbb pop inc mov pusha pop pop pop rcrl dec lea inc push pop pop jo dec xor jle push sbb push cs cwtl lock pop jecxz lret lahf popa flds push jo test jle push je pshufw sub insb mov xchg adc mov lods inc add and rolb fwait divl push es (bad) inc mov mov sbb fstpt push dec sub lcall sub gs inc nop push pop inc test jl mov movsl sbb add mov sti hlt add jge test lock lret push and (bad) aas push and cwtl movsb cli jns inc pop mov adc xor pmulhuw xor ret (bad) testl into jns or ficompl das sbb cmp mov cmp mov add in adc les or jge or pop push mov jmp push pop repnz decl loope rcll pop push xchg ljmp or add jns add or sbb les add or sub lcall or add loopne add fbld push lds xor mov mov lock loop cmp sub lcall daa fs bnd push xchg pop nop jmp dec jmp inc sbb push insb mov movb aaa push jl into or mov je push mov inc push dec pop jnp popa sbb es repz cmp sub sbb push xor scas mov inc push and iret jnp xchg add jmp repz cmp fcmovu lds mov nop xor mov mov in add sub xor sub dec add dec add int sbb inc clc cld xor and rolb sti jl out xchg lock xor js popa add sbb js dec imul scas xor (bad) xor push es js jno adc add clc es shl xor mov adc inc cmp fsts (bad) roll jmp je add adc adc pop add arpl test andl adc (bad) xor fistpl lods pop rclb jns and or push push std add popf sub push push sbb push mov xchg add insl adc sub gs inc xchg ljmp sub push add add mov into aad mov xor and clc movsb jnp adc fadd out fsubrl sub adc popf mov dec enter mov loope movsb out add sbb dec sub sbb dec inc js daa mov or fdivrs movsb or mov lcall jae xor cltd ret lods stos sub test std jb jo dec inc jmp outsb pusha cmp sub mov jno jbe push inc inc add xor or mov fdivrs push jae or jbe fisttpll aam add xorb iret lcall bound mov inc xchg mov xor mov inc add (bad) cmp inc dec cwtl pop mov movsb (bad) sub add cmp or mov push loope sbb into jnp dec cwtl out push sti mov lcall jo mov jo nop clc sbb rol xor push or ret aaa add icebp push daa jmp ret shlb add add add lock lods mov (bad) xor or in and cmp jb repnz xor xor xchg inc inc fcmovne outsb loopne sbb les aam je (bad) aam call dec sarb repnz loopne mov mov ret pop cld or leave inc pop xor pop popa roll jne pop daa mov cmp je cmp daa inc xor xchg or pop sub dec xor (bad) xor mov jle or push add pop inc dec sbb inc subl enter fcoms or push movl ss push xor push dec push dec add or mull inc pushw ljmp and dec lods lods or or add fs xchg jecxz scas adc xor push call cmp add aam pop add and (bad) cmp lods test incl mov push (bad) call push fs out sbb or mov cmp jg inc mov sahf add cmp ret xchg jo add ss xor jbe inc mov movsb ret push in or adc dec stc push and mov adc rcl mov inc mov ss jne dec mov sarb push aam push fs pop cmp cmovae sub jge fistl mov push aas adc cmp lcall aas pop or jae or ret push sbb jle xor cmp add sbb js shrl dec push movsb dec or mov push push dec pop leave pop movsl lock outsb shrb mov (bad) movsl lods mov dec pop or sbb push or and add js or and jo lds dec test mov or push jl sbb popf int cmp and mov ret notb sbb sbb inc inc inc pushf mov add gs adc sub shr nop (bad) jbe loope inc inc sbb dec cmp sub pop aas (bad) xor adc jl jmp mov dec hlt inc pusha mov je fs sbb push mov cmp divl mov cmp cmp mov inc aad or or ss sbb imul dec xchg ret inc and (bad) and fisubrl movsl testb enter dec sub into imul ss sahf adc fsts loope cmpsb hlt je lret and add or push mov aad sub mov bound icebp rorb jge dec sbb mov clc sahf mov shrl and int3 push mov clc mov fstpl mov xor or dec rorl decl hlt hlt jmp adc je and push lahf inc sti xor dec lahf sbb cmp mov mov xchg js aaa or fsts scas xchg ret in or or (bad) add inc sbb cmpl leave out fwait test jg fiadd push cmpsl jl dec inc mov xor nop roll xchg cmp or sbb jmp or rcrb and pop (bad) jno dec imulb or popf dec daa inc insl adc add pusha sbb push mov adc fs movsb addl rolb push imul cmp or inc xor and add sbb (bad) or out arpl iret in mov pushf cwtl and jns mov test mov and das cmp add hlt sarb cmp add cwtl gs jns inc inc je mov jp or adc cmpsb jle nop inc data16 cmp arpl mov push sbb inc cmpl in cli xor push or and nop pop inc cltd pop push push pushf adc cs js les test add push (bad) incb mov in sahf mov jns test pop mov dec cmp xchg cmpsb push add pop or mov jne mov mov lea xchg mov push test cmp xor sti data16 pop adc psubd jle mov out inc adc pop push inc pop (bad) stc dec clc mov rorb fild scas mov cwtl pop xchg push enter js sub add xchg aam mov sub jmp ret sbb psubusw imul push pusha cltd cwtl sub pop in add bswap sbb sbb add add dec lret sbb mov daa jmp int and add sbb adc add mov push inc add sbb sub inc or add inc ficompl sub shll hlt lret push lods push shll inc pusha push in mov push popa loop dec fisttp adc inc ss push adc and or test dec mov aam jle inc mov inc fnstcw test and (bad) mov mov mov sub cmp popa mov pushw push popa sub dec mov inc js movsb inc nop cmp or pop xchg and xchg test imul pop lea popa ret push pop out adc mov faddl mov sub add sub pop sub cmp popf and test adc ja movsb and add sarb add push jge jns jl lea pop adc or decb (bad) jae enter add es pop push dec mov ss or cmp dec push insl lock insb xor cmp test dec leave in mov hlt shrl mov daa jne push pop dec fisubl mov jmp inc ja push inc insb jge inc out mov jecxz imul or pop mov xchg sbb stc and roll adc mov outsb jmp into movsb outsb xchg dec push jmp mov push fwait (bad) jmp lock pop inc dec adc cmp enter das mov push sbb jl cltd lcall stos push push hlt daa mov cld cmp pop sbb and stos cmp lods sbb dec cmc ljmp in push fdivs jae or pop test mov jg test add cld das push sub call or sub cmp add in dec xor xchg dec ret push sub sub (bad) and mov xchg push sar andl repnz and pusha push adc dec and jo lock test inc jo push std xor xchg test jecxz sub add call ret lock or (bad) pop cmp in jge or pop es mov cwtl into add ffreep mov pushf fimull or cmpl out push add orb sub (bad) xchg inc mov andb adc into mov rcr jge push out decb ljmp lock or xchg cld cmp cmp pop std (bad) shlb es sbb nop add cmp jge inc inc fidivl push sub mov and adc (bad) push fildl rcrl dec fnop dec mov das (bad) mov sub dec aad mov aas movsb or inc pop int3 jns push xchg and daa pop lahf xor xchg dec sbb or lds enter (bad) jns imul sbb xchg lea push mov push xchg mov sub pop xchg adc (bad) push inc xchg (bad) dec mov lcall mov lahf out incb sbb divl test xor xchg sbb je xchg mov push pop adc shrl mov jl cmp jne fwait cmp inc or add mov sub mov xor push xchg dec leave dec mov test int3 jl pop xchg fmuls lret lret dec mov and add or cmp add (bad) fsub test sti lcall insb mov adc add add add fs lea or hlt dec imull sub mov sbb or repnz inc inc gs xor push mov sbb inc push dec inc cmp add fs mov rcl sub lea rol stc add daa nop inc add adc (bad) xor imul test clc inc movl xchg cmp mov xchg mov out add push movsl and inc push add (bad) test xor popw fiaddl shl test jecxz jne test out roll inc inc icebp mov xchg push sub int3 fidivrl ficomp mov cld movd lea sub rolb sbb or push push mov inc and cli add loop shrb sbb mov pop (bad) cmp push or addr16 mov mov pusha mov inc or add js inc js inc stc scas add inc inc (bad) cmpsb imul shl sub dec jp shl sbb add add xlat sub xchg int3 hlt enter fwait adcl test call ds fcoms add cmp inc in sub fldenv dec addl mov scas dec dec pop call pusha cmc inc clc xor mov lods add xchg lock push repnz push jnp or xchg pop notb (bad) clc adc sub inc (bad) movsl or cmpsb sub stc sbb mov sub push pushf mov add add inc clc enter pop sarb sbb sarl or rclb push jle repz clc push pop add push rorb andb cs (bad) xor popa push and add out call add or xlat xor test sbb pop movsl cs sbb cli inc mov jg sbb fdivrs clc rol add movl inc push fsts or xor adc pop adc add lods sub arpl sub addr16 gs ror (bad) fucomi insb xchg lea pop pop dec popf dec je xor js push push or adc and arpl int3 adc add lds popf aas pusha mov lock mov pushf push push fcoms test stos test add or cmc xor ljmp dec lods add push xor es mov ret push cs loop in std pop push sub outsb jo hlt daa add xor jbe sub mov add mov inc insb mov outsl pop mov outsl mov jno loope jp imul inc push and (bad) adc and push xchg dec jmp and lock jne mov fldenv cmp push adc or pop cwtl (bad) xor (bad) xorl neg xchg out mov jbe ss imul mov test push es (bad) cmp and dec mov (bad) mov add ss popf push call inc add cmp call push push push movsb popf mov sbb movsb adc inc pop add aad jmp fisttpl push mov mov push add add shl jnp inc inc push add sbb pop add shlb cmp push movsb push pop push shll dec into sbbl movsl mov pop dec or or movsl push mov push dec outsl jge fs push pop adc jno jb or mov loopne push jno xor or push push iret pop mov or or jno clc xor out jns repnz push ss and es add xor int adc push lahf add jg jl pop pop push popa add adc adc or pop or xchg dec mov in jmp inc sbb pop in or push fnstenv in dec push or push pusha sbb cmp fnsave xor jp mov mov shll or mov add xchg insb rcll adc sub add dec or inc xchg push rol add rclb mov sbb lds fcomps mov xor rorb sub dec and rolb add xor mov jo adc orl loop loope in mov inc dec imul add add push pop in sub dec mov and sarb sbb nop mov loope movsb inc push push jns cmp sbb mov push lea xchg cmp js push sbb cmp inc cwtl jg jb jb fmul bswap cmp cwtl push inc outsb pop add outsb or cmp pusha xor dec incl outsl push rcll outsl sub and adc and push push mov cli or dec clc mov lock xorb (bad) lods cmc or daa pop loope rcl mov or or pop mov pop lock inc cmc roll adc sbb or mov fistpl cmp xor pop ret pop cmpl (bad) leave arpl inc cld ret loopne inc mov and movsl add lods rol jo inc cmp push pop js add xchg test mov and mov int rorl mov outsl dec or or or xor adc push (bad) mov xor add lods fstpt dec dec lret icebp xchg ljmp (bad) push sahf out dec shlb push outsl jle push adc add test mov call xchg push leave or icebp push dec je and nop push sar add rcrl add sub xchg xchg insb insl sub int xlat push pop pop or mov jle push and fstpt push cmp add add jb xor dec lods les lret imul psrlw adc pop (bad) adc mov fsubrl push daa cmc push sub stc push jne sub adc out inc jne xchg add push (bad) push mov mov pusha sub lcall jbe sub jbe aam xor lock adc pop mov imul sub adc cmpsb jge insl mov add mov icebp and dec add mov jnp rolb inc lods jb sub pop cmp stc jae pop aaa jmp add lods jnp sbb iret jno pop xchg xchg das enter repnz pop and shrb inc inc hlt clc push sbb adc outsl (bad) pusha je aaa mov push cld iret xor outsl cmp lret mov mov jl adc inc or xor iret xchg mov test or adc rcl pop hlt int addr16 xor push jb ss add ds sbb mov jmp push andl xchg push sub fmull aad jno mov daa pop cmp push or dec (bad) cmp mov xor mov mov xor pusha cmp push push mov sbb es outsl rclb push jmp fs jb fbld mov jecxz jo sbb xchg test mov sub sbb add inc xchg sub int test sbb jo js push setns mov add jbe cmp xchg jnp push adc adcl (bad) mov andl or and or mov or lea arpl xchg mov jge loopne adc sbb clc pop add dec add adcb sub or nop adc imul and int3 mov xchg mov jns fidivrl movl mov ret lods push test xchg inc xchg into dec pop push sub imul addl gs push push (bad) jbe xor sbb add imul jnp cmpsb sarb daa xchg lock push sub jbe or pop mov and (bad) mov addr16 into bound add adc js and lret enter or mov pop push jo inc dec and cmpsb cmp mov (bad) (bad) mov enter push cmp cmpsb loop add or cmpsb pop sarb sub adc or and ljmp pop mov test dec and mov mov inc inc punpckhbw push lock test push jo sub or dec leave enter jne (bad) or xchg sti sub mov push inc test rorb (bad) mov stos mov nop mov rclb mov or (bad) loope (bad) pop bound add out push sbb push inc mov (bad) cmc cmp dec sbb or dec movsb out add nop sub enter add pop mov (bad) jne test ds jbe rorb cs jo mov jb xor jl mov or push cmp or jnp mov mov sub pop sti (bad) adc cmpb cmpsb inc (bad) (bad) hlt cld mov stos lahf push or ret mov adc pop dec push mov inc js adc je sub out inc mov adc jnp test sub ljmp movsl sbb pop dec pop pop jnp in pop mov mov popa pop inc pop and or adcl aaa int les jbe mov in dec cmp cmp pop mov add inc mov jecxz subl add aas xchg je xor sub cmp jl add outsb or cvtps2pd popa jl inc test fdivs push push dec call addps push fidivl jecxz mov dec xor mov dec inc das or clc inc pop inc inc jge jmp stos and cmp and cmp out cmp ret sahf in inc add ret lcall enter pop dec sub cmp lcall push arpl push mov and mov pop int3 bound pop or jne ret mov inc imulb dec je leave pusha inc sub je mov jle jbe insb inc movsb into scas fcmovne push jbe lret dec fcoml jno cld pusha add or in mov scas inc test cmc mov xchg sub add inc push mov pop pop push and push loop int3 addb mov sti xor ss ret push popa cmp sbb les icebp test inc loopne into loop loopne lret repnz sbb fldl cld mov inc (bad) mov int3 mov loope cmp mov push leave push dec cmp push pop data16 mov dec lods jle push rcrb in lock cwtl inc ret mov inc xor or popf popf dec lods push cmp clc sub cmpsl pop push push adc push int3 outsl pop jnp test fiaddl sbb cmp frstor push loope inc jo add push push mov mov mov inc sub dec mov cmpsl imul je mov or ds mov call sbb pop and jnp sbb insl and test inc shll rolb adc xor loop movsl sbb in inc add pusha lods int3 xor popf into pop pop push pop test push frstor or mov add xchg (bad) adc jns inc pop (bad) pop pop jbe push sub mov ja push dec xorl xor mov and xchg aad xchg mov ret negb adc cmpsl sbb popa mov fdivrs ret dec adc div pop cmp ja pushf or inc or test lea cwtl jmp dec mov or (bad) or in or push mulb mov (bad) clc jg (bad) int3 push add mov jecxz or pusha pop lret mov int and add dec sbbl mov push or gs in xor les jns push lods enter push dec in push xchg mov cmp dec add je add lret adc jno sub inc test scas je add xchg js test push je enter xchg arpl mov mov mov push mov lds dec push mov inc or xchg cmp rorb (bad) out xchg into sub out add jl sub pop sbb mov xchg mov notl ret inc aas push pop add fwait out call ret add or pop ljmp jbe imul sbb push xchg xchg (bad) hlt rorb jne sbb or xchg aas mov mov jmp jbe or adc out enter add cltd sub incb mov sub jo adc push xchg push inc adc jle sbb inc ficom mov sub mov (bad) jb add mov js arpl pop enter cmp fnstenv add jl or jg inc and rolb cmpb pop movsb push not shlb in add cmp cli inc lahf fdivrp and adc jle mov xor in or cmp sub and dec dec mov push push push add fiaddl out ffreep add adc (bad) mov jo lods adc ret cmp add sti adc ret dec mov inc (bad) aaa sbb ja fwait pop clc jns or jp dec dec test inc fcomps add adc rorb bound int3 inc pop dec cli stos dec mov je movl cwtl aaa cld sbb dec and and nop push push push mov inc roll dec inc rol bound add and jmp or mov (bad) es sbb mov push pop movl (bad) out out cmp or movl mov sub push jp cmpsl fldl dec cmp push and cmpb subb movsb pop and out pop mov sbb add add cmp adc andb cmp push adc cmp or or movb sbb fcmovnb xchg mov shl mov or pop setae ja dec inc mov mov lock pusha insb sub xchg pusha js dec jae and pop or test je imul out mov je cmp ret ret pop xor adc add enter divl loopne dec cmpsl inc loopne cmp push stos sbb mov fadd add outsl push dec popl or xchg and jns add cwtl sbb push shrb mov pop xor fwait outsb in pop imul adc add aas cmp jne inc add insl fwait divl or add out cmp nop push jbe into sahf out jl sarb jns mov iret sarl mov and test mov mov lods and stc sub add insb xor cmc movsb mov add add dec dec or add dec ficom jne dec xchg and js adc in adc add and imul mov and cwtl push sub xchg adc or adc sub mov out inc das xchg je mov push pop sbb sbb dec cmp xor pop ficom and mov daa mov push adc or and or pop jo push sub lods push into (bad) mov (bad) pop lcall (bad) inc aas mov test inc lret xchg cmpsb aas add testl jl push ret sbb insb aaa mov pop push mov or jo notl test and add icebp sbb inc dec jg adc loopne push test aas mov aas insb or addl movsl cli clc sub pushf arpl mov jg (bad) lea (bad) in inc fucomip mov (bad) jge dec mov xchg dec mov cld adc cld cmp add sub push aaa sbb cmpsl add or or and stos mov or dec cltd fcomps or add add xor cmp aam insb dec pop add and movsb andl out and and xor xchg nop insb cmp fldl clc sbb mov and inc sub or mov pop xchg (bad) push cmpsb xchg sbb sbb sbb lret out mov add push push mov jbe mov inc push rorl in mov ja sbb pop or (bad) aas inc testl sbb or aas insb inc push push (bad) xchg mov cmp insl popa jle (bad) pop sbb jmp push scas sbb adc cmp dec cwtl data16 cmpl inc push push mov xchg mov xchg dec (bad) inc inc add loopne or les mov aad sub add je popf fsubrs jmp cmpb jnp add fisttpl (bad) fild lods push outsb or sub mov push popf jl inc xor ss push inc (bad) test out js push push mov push mov mov insb adc push push or inc stc dec loope cld push nop mov sub mov mov cmp pop or movb cs adc adc jmp test ljmp pop sub pop adc adc mov or add cmp push loope mov loopne jl push sbb adc push popa adc xor sub sub (bad) lock push mov xchg lret mov add ret ficom test popf add arpl adc repnz cs mov (bad) test jno imul stc or (bad) sahf pop push rolb std (bad) int3 (bad) jno push xor push imul inc xchg dec ljmp xchg mov pop cmp cli sub pop push loop fstpt mov mov mov mov (bad) jg movl inc cmp shrl bound sahf and ja cmp out sti jne push inc or je adc hlt mov js push push je dec inc inc incb and pusha xor fild cli xor lds and popa insl and xchg sbb jge add xchg sbb mov mov pop test xchg lahf pop mov imul ss ret fdivrs test je inc push loope stos sarl xor sub add or faddl sub sbb pop rolb sub ret popa add inc mov jb movsb cmp add dec popl mov loopne rcl iret mov add adc ljmp repnz push adc jne dec sub cmp je testb inc or pushf lock xchg mov mov mov push mov outsb pop pusha push cmpsl add clc jecxz add dec push fwait mov (bad) xor adcl xchg je add adc pop hlt adc push test push adc or sahf xor xor or (bad) dec je mov push lret arpl adc jno adc push pop push xor and lds (bad) mov and es cmp movsb fldcw insb stos rorl out push push inc and dec aaa jo mov xor mov push push push xchg cmp repnz sbb pop sub cmp cmp insb inc dec sahf adc (bad) (bad) ror dec cmp sbb mov mov stc cmp jle or js je sub adc insb mov out sub xorb xor cld mov loop mov pop sbb jp andb inc sahf lahf rclw ret mov pop push inc push dec cmpsb add roll dec cmpsb and enter push mov cltd pop fbstp mov rclb adc adc xor hlt cmp dec sbb add mov inc adc cmp jmp sub addr16 mov lods ljmp mov push inc int jo or xchg push xchg jnp pop mov push mov add adc in fcoms mov xor lret jmp push or clc lahf test (bad) jae mov test inc stos push jb stos (bad) loopne cmpsb xlat fiaddl (bad) dec roll inc add (bad) js push pop sub (bad) jp lods push stos mov and cmp sbb shrl fldt mov notl and and sub adc dec hlt push pop mov cli mov mov outsb aad pop mov jle mov jg inc cmp mov xor xor mov ss push mov clc int xchg push jl xchg push pop push imul lea mov imul fcmovnu fsubl fmull adc push or push push add jo test inc jl xrelease lods clc adc std mov cwtl dec in or sbb fcmovb xor inc gs adc sbb add sbb sti xchg dec mov fimull lea fcmovbe rcrl out (bad) mov fldl into incl mov ss or push adc fild scas ss jbe testl cltd pusha int3 xor inc and mov jle or mov inc mov imul (bad) push push pop lock fmuls dec jecxz pushf and sbb nop mov test inc mov add sbb lods incl adc mov xchg jge push ret or js dec jl test add sub aaa rorb leave adc movsb icebp jo push pusha or push xchg in inc stc dec pop mov cmpsl cmp popa inc inc pushf add mov stc or inc or sub fs popf cmpsl jne inc pop pushf or push scas lea add and push fstl sub or scas jmp movsl push jmp lcall movsl pop sbb popa xchg cmp xor imul test xor push pushf mov push mov mov add push dec repnz movl pop aas and dec shlb orb xchg call xchg push mov push js add dec push push xchg sbb ret inc cmc ret jne jno bound (bad) fisubrl xor nop add push call lods std js or les roll or push jmp push or mov sarb in addb and jg mov xor cmp gs adc stos fwait push mov push into xchg and add push sub mov pop jbe imul jmp negl movsb pop (bad) mov push xor dec sbb sub imul add adc add xchg lock mov jge push mov or sbb add jle push jnp adc sbb dec loopne shlb pop test add add pop xchg pop xchg rcrb imul and pop xchg in or nop and pop adc mov add imul push mov fcoms xchg add (bad) scas pop popf xor xor push sbb push movsb aad popa clc int3 add mov xor mov clc inc mov pusha add das (bad) cmp jbe push push mov sbb loopne sub inc (bad) dec or and adc push int3 iret push jbe pop add pop js imul add ds cmp mov mov (bad) shl movsl imul push add push mov leave push push push or push adc add adcb sub mov xor js adc loop je bnd adc add push xchg icebp xor hlt pop daa sbbb sub test xor jmp nop adc icebp enter mov cmp mov adc (bad) jo aas gs xchg mov sahf cmp jmp out test jb xorps dec add inc inc fldt scas dec add jns inc pop maskmovq add adc push sub fstl shlb xor je pop push or inc adc cmpl push data16 test enter aam push cmp cmp js test add bound movsb loopne out add add add pop add mov mov and pop mov xor loopne lret dec cmp adc mov in (bad) xor mov xor jmp cmp outsl ret xor imul gs cmp dec push dec clc add cli ja andl or stos popf sub xchg (bad) mov add adc daa shrb (bad) mov sbb push dec lods xor pusha push pop add ret push outsl lea add and jne xchg mov enter pop xchg xchg and in xchg mov lcall mov mov lea add push mov in add shl sub dec outsb or pop dec pusha adc add add pop inc ja push add lds adc adc lds xor adc addb or inc pusha sbb sub stos jge bound mov ss daa sbb adc push jmp add mov cli adc mov xchg sub pusha lock sahf pop inc inc dec dec inc insl lock push les dec stc or int cwtl push and pop pop mov and mov mov subb pop add add js adc ud2 jle mov mov mov add decl call sub in movsl mov mov das sub cmpb dec add xchg push mov (bad) (bad) pusha cli dec jne pop pop push out inc loopne pop push (bad) int3 inc js add add jne and and arpl add inc adc test mov (bad) (bad) jge mov rcrl aaa loopne mov jg rclb aam iret xor mov or jne shll lret movsl inc mov mov je xchg loope fmull pop cmp push lahf aaa add cmpsb jnp inc dec xor sbb rcrl (bad) loope adc adc xorb add or push outsb adc or or stos test sbb test pusha push jae sbb jg xchg nop cltd sub adc cmp inc cmc or or xchg or or sbb xchg adc in (bad) adc fsubrs adc push pusha and cli pop lahf bound pop leave fwait pop cmp and push add push fbstp jb jo mov and adc adc pushf xor es pusha xchg mov jl sub jp adcb xchg mov mov clc jg xchg clc lea cmp ja or dec ret or add popa or or insl loopne cmp sbb push jb bound cwtl arpl adc mov xor inc sbb pop addb adc movsb pop movsb stc into dec or add jmp add mov add push sub pop push fldt pop ds sbb inc pusha xor aam jl xchg push and testl insl popa test lods in add adc inc push push into inc fidiv ja lods pop (bad) push ja jmp or inc int3 xlat jge mov icebp pop jmp push cmp pop (bad) lds sbb imul push adc and popa cli pushf xchg jp add mov ljmp cmp movsl roll inc push lea and adc mov in mov push push adc leave dec mov push push mov sbb inc pop arpl int push pushf pop add add jae and sub add add rorl jno je out add adc ja xor sub ret mov sub pop mov jb jnp or pop lds das sub sbb ret jp dec dec inc and xchg test adc pop add mov jbe int dec or and xor mov fistp lods ret test push cmp mov arpl adcl or lret jne ffree dec ret fistpl inc jle hlt and clc pop je adc xor clc les orb or shll or dec adc pop repz jge mov mov push or scas and xor loope mov nop xor call mov pop xchg jbe push sub or out push aas push pop sub inc cmc xor xchg sbb push and repnz or pusha or jns inc pop or jl push add mov rclb (bad) fidiv das mov (bad) push dec add addb push dec add leave adc adc sub sbb xchg pop lcall xchg push dec imul adc clc imul (bad) push loope or aam mov aas dec cmp sbbl xchg and cmp in inc test inc pop push xchg sbb add push dec pop push bnd jne movsl push push push dec pop test add roll insl push push add inc es cmp movsl aad mov mov aad or or (bad) add js insb dec sbb mov xchg cmp jge mov add test out in aaa push outsb or (bad) xor mov xlat xchg icebp in jle push sub cwtl xchg nop xlat push add inc (bad) pop and and push popa push in repz pushf mov pop jo inc addl pop push cmp xlat movsl mov push rcrb pop bound xchg dec fidivrl sbb sbb adc addb and add es mov insl or ljmp orl sbb add jo push mov imul fisubrl bound mov push sarl and mov pushf add je mov pop push popa xor add dec add mov pop aaa push rolb push cwtl jnp and inc cmp adcl mov (bad) and mov push lock mov pop loop add dec rolb cltd mov pushf mov es xchg add mov hlt push fisttpll fistpll jg mov add dec mov mov movl adc add lock ret inc add lea nop cmp rorb mov dec cmp test cld lds pop inc or inc sbb adc xor adc scas mov add or sbb jl cmp sub inc inc addr16 mov pop add and add pop add cmp sub mov mulb xor lods divb push fs test fdivrs notb sub lods add (bad) inc (bad) push sbb adc push stc xchg out pop xor jae xchg mov mov hlt clc je dec mov sub fidivl and cwtl add mov pop adc or stos mov in sub and jns movq and testb adc leave inc inc inc xorb ret fldcw rolb or js test and inc add xor sub clc cld enter cmp jbe mov ds cmp popa mov pop movsb add test xor out jle xchg movb pop sti shll jae lret inc daa adc adc adc ja ret ret insl inc push jae adcl or lods sbb push cmp cwtl js xor sub popf push mov xchg sub cmc and push imul es pop cmp das add add in lea movsb push add push push inc mov rol inc stc push xchg cmc mov pushf out and pop sbb sub push mov push jb sub jecxz lcall mov xor ficom push loop inc or add sub jns fstp jge and mov push sub insb push jmp pop pop jp add test pop inc and pop dec mov js adc jmp movsb rcrb outsl adc pusha mov call ss loopne and mov scas stos fs bound (bad) dec adcl imul add pop mov pushf pop bound cwtl ret pop iret pop mov jmp lahf in inc add cltd int push in dec dec jb loope jg cmpsl jmp add std ja mov out pop shufps incb mov add sbb mov mov mov aas or fucomi adc andb mov sbb jp sub or ret cmp push lods xor push cmc add cmp pop inc push cld movsb lea xchg mov int cmp jl or or mov int adc ss adc shrl fild cltd jp js mov push cvtps2pi je pushf lcall push add mov pop jle or cld xchg add into inc subl icebp xor loope jmp pusha ret jmp rolb push push pop cmp sarb cmp fs aaa and aam aam popf loopne inc mov xlat jmp les pop sbb sbb adc mov scas dec jl lcall pop ret rorl loop add inc daa or loopne lock add mov into or add je stc xor not test mov push test mov out push push call stos insl pop push sbb sbb insl jo dec jle cmp pop adc dec stos mov dec jb sbb add stos inc (bad) xorl jne xchg adc aas pop fwait pop fwait nop shr jp sbb iret or push mov rclb test jae add xchg mov test inc and loop (bad) into clc (bad) (bad) icebp mov icebp loope and or shr test xchg sub rorl adc mov add jecxz push ds std inc daa mov pop xchg inc shll mov enter mov dec lock jns shrl ret fimul sbb out lock in mov or shr call adc xor fdivrl mov pop jecxz popf pop mov into in cwtl dec mov inc loope (bad) in xlat bnd mov test adc (bad) pushf cmpsl rol mov testb pusha cmp pop test test hlt js nop xchg sub shr mov aad in sahf sbb ljmp push sbb xchg mov sub dec int int3 (bad) repz movsl or mov inc dec jne xor (bad) ret mov sbb add pusha aas popf into fadds mov adc push pop adc out loop test add loopne xchg push xchg ja mov or mov mov push les add mov add mov jne pop xchg push ret mov ja adc fadds jbe (bad) ja push repz (bad) pop push cwtl cmp rolb enter sub (bad) out les mov mov or mov lea xchg mov movsl sub push sbb dec inc lret push xchg adc movsb clc movsb mov xor js rorb inc jl stos mov push out or add mov xchg mov pop sti push pop ljmp and test or cmc insb mov xlat sbb lods addb dec sub jle ret lret in out pusha inc mov dec inc jg sub inc jne sbb xor cld inc inc std jb sub or inc or xor sub jge push dec cmp stc pop mov pop inc outsl call jmp in add cld xorb xor pushl or div (bad) faddp loop cmpsb and out roll add incl (bad) fsubrp xor daa dec mov shrl sub rcrl cmp test jne pop and ret mov outsb inc mov lret test lret cli movsb push idivb movsb mov leave mov (bad) getsec into inc nop (bad) das stos fcom jecxz sarl (bad) mov inc xlat xlat sarb outsb add pusha dec push add in imul movsb sub sub pmulhw (bad) daa mov sbb arpl add addb push ss mov fld jo aaa pop mov adc add cmp (bad) cmp push cmpsb adc out js adc and lea mov pop outsb mov out xchg cmp arpl addr16 loop lods and inc jae inc xor add test fimul push cltd mov sti mov and (bad) (bad) loopne fdivs sbb cmp xlat ret addr16 jne xor cmp inc push sbb xor bound jp sub jmp ret or rclb ret xchg cmpsb dec pop pop adc xor nop incl pop mov mov pop add loopne xor inc mov and jg or jno sbb adc xchg sub sub addr16 data16 enter xlat cmpsl xor pop pop loope mov jle clc fcmovnbe dec mov pop xchg or movsl mov (bad) and icebp and inc sbb mov sahf push ljmp orb xchg loopne inc push roll in ds shlb mov clc aam in jns (bad) stc or sbb rol xchg arpl pusha mov dec es sarl clc mov enter push mov repnz mov adc sbb lock aas jb push pusha add or push in mov fldcw call inc cmp jb sbb rclb mov inc adc movb js cld mov mov mov mov ljmp jne pop lcall jbe mov ret data16 add jecxz call rorb loop xor push rclb mov ds call mov add data16 jae jl movl scas (bad) xchg loope lret adc call lret xchg cmp and adc add push fadds and and cli repz rcll clc jb sbb loopne mov inc or push das mov mov lea loope adc push mov add rorb js inc adc nop cli sbb ss cmpsb dec aam push xchg dec xor xor mov clc loopne inc jo adc xchg lret jae xchg sub or push imul loop push sbb (bad) (bad) jb lret xlat sbb test and sbb ret mov pop push mov (bad) or xchg fsts and cmp pop enter mov gs cmp sbb jno (bad) mov outsl arpl out inc popf sub add push test mov adc inc mov sahf aad inc pop (bad) push fildl sbb faddl sub mov adc repnz xor daa loope pop pusha scas pop mov mov sar and je xchg push push adc jne (bad) sub push and pop mov inc adc xor (bad) jmp rorb jge push xor mov fcom cmp or or lock inc (bad) jbe mov pop mov mov popa xor add cs inc mov push shrl pop cwtl dec movsb sbb out jmp xchg jo lret push into add sub and dec test or mov sbb cmpsb sahf or aam add sbb xchg add jns jecxz adc push xor test jl push mov mov mov inc ss sub sti pop jae mov xchg mov push lahf dec orl and roll cmp add sbb jg enter cmp nop cmpsb repnz pop orl les or addr16 (bad) push adc ret in mov cmp lock pop pop cmp pop jb shrb pop cmp or inc cmp push mov mov or push xchg xchg ret (bad) daa jne mov rol lcall pop sub roll mov mov sbbl (bad) xor xor lods mov push cwtl clc ljmp mov lea and and lock or ret stc cld sbb dec sbb lods sbb jge addw outsb jmp inc dec sub fcomps and aaa hlt outsl xchg pop add test out or add or jb push pop imul mov mov and sbb fwait nop or test sbb pop orl je dec adc es rol loopne mov adc and sub ret dec cld adc nop mov push push lods clc imul cltd jmp rclb jae or ret scas lods inc adc jno push jo ja (bad) push add lcall xchg jl shr or enter pop and setge lea xor mov jl cmp ja adc orl add popf pushf outsl xor outsb sbb mov andl and push dec sub push sub dec dec pop push inc (bad) bound push addl inc xor inc jo fild rcrb cmp pop je outsb mov jb ja rcll cmp pop je mov xor js dec or push rcl inc mov cmp cmc fs jp sbb daa xchg orb jl push js lock fisttp fmuls and pop cmp cmpsl push mov mov mov inc popa mov imul imul (bad) lret sti or and punpckhdq sar dec leave inc in mov push sbbl pop testb movsb or jb (bad) movlps adc sarb loope addb xor lea or ljmp sarb jl push loopne xor push lret andb push les and call out push ja sarl cmp jo mov xchg jmp sub jne mov lods inc inc int3 and cmpsb jo dec push jns sahf push inc mov push mov hlt add orb mov ds pop je lea mov or test push jl and test push jp mov test cmp add cmp ret inc es pop int ja sahf adc into repz scas lret jg fisttp adc cmp pop movb mov (bad) jne (bad) adc or jne cwtl std imul int mov aas adc add rcll adc add push outsl inc sbb push jg jno cmpsb nop adc popa in lret sub aas sub fucom ret movups inc je dec mov mov or sbb or mov in mov mov fs jl mov jg lds add (bad) (bad) pop mov fist push push add pop roll test mov cmp or pcmpeqb or fstpt aaa pop das sub jns lds or scas add bound sbb fs outsb xor sbb and fisttpll push test cmp pop mov xchg push insb xchg mov pusha mov add jmp mov jae (bad) jle mov or inc out dec dec mov fldcw adc add xchg gs lds xchg add sbb sbb jecxz,pn ljmp mov popf mov xchg rcrl cmp inc sbb ret mull cmp into cld mov mov int3 sub cmp std push push jmp ret or test in loop xchg adc push dec jo int (bad) aad xchg push sahf fbld adc adc test aas dec loope mov cmp orb mov roll aas (bad) mov add sahf or in addr16 inc cmp es jo mov dec sub aas mov les je xor sub data16 ljmp or mov mov push fidivr mov dec mov mov or jbe and fwait fwait aam cmpsb xchg inc push or jmp mov inc scas cmp add push xor pop fdivrl add xchg movsl roll inc sub adc pop movsl bound movsb fs add mov aaa loopne push inc xlat inc imul add shrl inc fs loopne or scas insl (bad) nop fisub mov cmp mov mov fcoml sbb jae cmp pop cmp sbb dec (bad) and out mov ss mov sahf dec (bad) (bad) mov das pushf or (bad) int3 and push jmp jmp cltd std mov or or or mov jnp fdivrs popa das and insb decl ljmp jae jnp sbb jp inc or mov lahf mov pushf mov ret lret (bad) xor sub mov add ja cld or rorl mov pop repz mov cmp push inc xchg call fisttpll flds mov outsb adc das or and in jg popf mov mov cmp adc mov inc rorl xor call pop cwtl je fs mov mov clc jecxz pop cmpl popa orl add inc pop push sbb loopne (bad) xor js cmp inc mov orl push adcl xchg sti sbb rol and push xlat cmp mov rclb fcom push mov and rol in sahf xlat outsb cmpsl insb xchg or pop call jae mov sub sub push or cmp sbbl sbb push inc decb rorl (bad) pushf mov cld insl mov ss mov inc ret xchg lods ljmp loop,pn movsl icebp sbbb cwtl xor pop imul mov push test pop xor add adc jmp insl pop push (bad) push and ds scas scas mov xlat sub mov cmpsb lret dec inc mov std adc xchg or fwait clc xchg and into je rcrb inc dec push roll lret xchg sub dec std push scas mov jmp pop in add faddl adc xchg call cli xadd shr je sub adc inc push test fsubrl sbb inc sarb int push mov mov dec push ja dec popa push and loope (bad) jne dec popf js mov enter jbe aaa insb or popf mov cmpsb int3 dec mov jno pop ss insb ja das mov pop pop inc in xchg xchg or add xchg push push mov and jmp and insb fdivr arpl pop cmovs dec sbb jle or loopne (bad) push sti daa mov and dec and std jne dec mov jl test outsb dec sub bound (bad) (bad) ss dec cmpsl mov out std sub and jle and or sbb pop pop or lock sub add outsb movsb cmc cmpsb leave in cmpb mov fs add rorb add dec and mov push push cmp mov and iret mov sbb add cmp push bound cmp mov xlat scas sbb adc xor cmc ret call sub rolb or or nop mov inc or stos lock test sub je nop jp or jae pop jp or les and pushf out es sub jbe cwtl loope lods dec xchg mov jp xchg cmp pop xchg imul pop iret test or add sub in dec sbb jno push insb sbb mov aas sub cmp stos mov pop inc sbb (bad) (bad) stos gs sub inc cmp mov jl (bad) mov xchg lahf cmp stos sub pop sub mov fldl jl ja pushf sub jecxz adc mov (bad) mov or or push int3 dec movsb (bad) jne dec je sub cmp dec push jo mov or std or jmp pop rclb and sub rcr adc lret jmp frstor adc sub mov mov inc jl pop jmp jecxz mov mov xchg movb push sbb test inc mov dec pop aaa push (bad) (bad) xor daa xchg je or xor test add int3 mov pusha cmpb add (bad) and push insb mov lret xchg lock cmp rol (bad) dec add (bad) fimull pop or cmp cmp jne testl pop scas xor add mov (bad) sbb std into sub jl js adc je cmp faddl jl and ds add add data16 dec jae sbb xor test sbb add sub add fistp and mov dec add add cmp lar lret sti xchg scas gs mov inc mov mov pop xchg add mov sbb enter rorl sbb sbb cmc imulb push inc push jb icebp xchg mov xchg push cltd rorl adc and sahf jge push dec enter inc xor ss cmpb sub mov pop mov cwtl mov push mov (bad) and int daa ljmp movsb inc add adc pop inc lock pxor loop mov mov xorb or je into lods and lock inc push hlt insb ds mov pop pop mov arpl test inc add pusha js push ja and jl add sub pop negb xchg cmp xor push push sub mov xor adc mov push jo push or add aam popa push xchg xor sub cmpsb sbb xor mov orb pop xor push adc rorb je add pop (bad) imul iret int orl xor xchg inc inc push pop and push sarb jbe imul test lock add loop fildl (bad) xor and repz sbb imul (bad) cld or adc cmp (bad) int3 pop adc dec or mov pushf popf add adc sbbl hlt negl nop sbb push js lcall pusha adc add fmull or ret lods mov jmp lret lods adc repz mov dec mov inc movb je mov pop es mov adc pop mov or dec inc or jecxz sbb push js pop daa fistpll inc jl sbbl pop test shlb dec shrb popa insb cmpsb aam cmp lods inc dec sub loopne xor out add xchg jo lea enter mov xchg aas mov mov shr and add sbb rolb dec inc fldl2t cwtl xlat scas jle enter out add loopne jbe mov xchg push jp incl dec dec jne jmp aaa dec out fimul or imul mov pop mov js add in adc pop inc pop add jae andl or xor call and inc mov push pop sub xor scas (bad) loop sub mov je jecxz popa bound insb adc ficoml jbe ljmp xor push sbb jnp popa cmp dec push dec mov mov lcall push out lods or or std xor mov mov les fs cmp jge orl xchg fdivr dec adc incb dec add inc fcomp add les dec cmp xchg in leave mov ljmp push mov sub pop mov imull ja mov cli gs xchg sub rcl (bad) insb or and (bad) mov lret or push adc cli and in inc repz (bad) (bad) (bad) aas cld jae mov dec push shr dec lds js fistl inc jb,pn jmp push loopne sub fwait adc jecxz dec inc lock mov push sbb negb stc hlt or (bad) jb imul fadd or push push xchg add and add mov cmpb out cld out push push or add push cmp mov jae push mov call inc sub cmp fcmovnu fdivl ret inc mov inc push jb pop mov mov mov push or insl js fisubr inc push xchg push sub aam pusha lock cld cs inc pop shlb hlt adc movb test mov cmpsb mov dec shlb inc pop mov pop mov and aaa (bad) and or xchg enter push jb xor (bad) (bad) xchg (bad) dec dec dec mov dec mov or dec mov jne xchg or add pop mov dec xchg adc or cltd les and jne sbb mov inc adc pop add out dec insl mov jbe cmc (bad) fisttpl (bad) and xor sub sar or add lret dec mov or fdivrs lret fiaddl and rcl adc aam push sbb mov outsl lret jne xchg mov and lock jns ja popf imul xor and xchg or ss xor pusha mov mov jbe lea es add ficom je dec xor popa stos adc dec mov (bad) inc dec rcrb jne add mov decl adc push lret in inc nop (bad) push inc decl dec push dec dec jnp imul dec lea je sbb imul mov push or dec mov out xchg mov pop inc sub and je jbe mov out bound dec arpl mov jne outsb gs movsl pusha roll incb movsb icebp test add outsl jo or and push jbe sub cmp call and es nop or out je in insl aaa lods adc push sbb sub cmpl outsl iret add add inc or sahf xchg mov add lahf mov aaa cli xchg sbbb aas mov popa dec stos mov xor hlt cmc xchg cli jno inc jne (bad) pop push mov sbb jno shl sbb push lret or jne (bad) iret and rcrl movsl js mov pop lcall dec jg jmp insl in vzeroall in jbe or xchg dec jmp jmp in mov ss or lea or sbb enter imul pop loope fs scas adc mov add fildll or fidivl xor movsl sbb loop push pop les add cmp ret fimull bound mov imulb (bad) inc or fisttpll nop loopne cmp movsl pushf movsb and lods xchg xlat sbb lds cmp or subl in or dec loop inc scas push pop cmp sarl ret and into stos cmpsb (bad) xchg mov xor push clc packsswb outsb lods fisttpll add aad into les pop jb and adc push xor pop dec mov and add jnp sbb sub lea jo xchg test inc fnop insl dec add daa js inc xor jl aam fnstenv (bad) lock je lret inc mov (bad) pop dec adc sub fsubr push cmp pop (bad) jne mov aam sbb lret jne mov xchg sub and xor mov sub pop sbb pop mov push push rcrb jmp sbb shlb movsb push dec sub add mov insb push bound int3 (bad) jnp sub pusha dec fdivl add and cmp hlt sarb push sbb lock pop xchg lods test insl sbb ret rcrb push (bad) cmp xor or pop inc sub mov dec add inc cmpsl (bad) mov xor pop in shr sahf ret bnd dec sbb xor or mov push shlb xchg outsl and fwait icebp test add push repz ljmp add sub sbb sub sub and hlt test jae shr popf add bound mov inc add test inc pop (bad) cmove inc mov pusha call aad xchg outsb adc out jnp adc inc inc inc pop inc divl inc daa inc inc test jo add (bad) xchg je cpuid xor lret and or dec add das mov jne xor and inc lods ret jo rcrb or jo js ds mov dec loop ret cltd push sar loope ret enter fdivs sbb imul mov sub es push cmp inc ret call das sub loopne pop or and mov imul pop mov inc pop lea dec lcall lret ret xor jae sbb jmp xor jle push nop std ljmp inc add clc sti xchg cmc inc mov lahf pop or xor scas outsb mov mov (bad) add dec mov mov nop insb lock (bad) cmp inc fcmovnu (bad) mov push std rdmsr popf psubsb dec cmc xor test insl pop lahf mov lods sub pop and shr add mov es sbb sbb incb lock enter enter xchg (bad) mov push loopne loop pop and inc jmp dec dec jne fstps sbb sarl add jne call xchg ret sbb loopne lds lret fmuls push aaa std (bad) repz sub imul add pop dec pop or mov shlb call add or push mov repnz xor jb xchg (bad) adc mov in inc dec push rorl xchg xchg add gs push nop or cs inc punpckhdq xchg jbe and add add mov adc and push dec push sbb add pop int sbb push sbb js push popa shll into mov (bad) cmp ficoml ss insb xchg xchg cld (bad) xor pop pop out imul fs outsl dec movsl dec cmp fdiv ss jno cmp pop sub inc add fmull add xor add push clc sub pop outsb inc cs lods dec outsl xor and js or scas xlat inc adc lret add pop push add pusha shrb lea or inc js pop or inc out popa int3 or (bad) bound (bad) sbb jmp or mov sbb mov cmp sbb lret out ss (bad) je inc mov jne sub (bad) dec or repnz xchg push xchg sub std xchg push xchg push jno orl dec mov rclb add or lock insl inc or ljmp insb leave sub lret idiv push pop add add cmp fnsave push mov add cmovge mov imul (bad) loope xchg dec jle ljmp sbb sub int3 ret fstpl sahf sbbl add cmp imul lret xchg mov dec mov mov xor and or xor movl jne mov push pop add xchg inc sbb add sub push insl xchg pop xchg out insb and mov add addr16 add and and mov push push dec int test cmp push jmp inc add push pop sbb jne mov (bad) adc pusha pop fs jp jo adc pop pop fisub in add scas mov adc push rorb test sahf pop or dec lock (bad) popf mov xchg movl (bad) push cmp fwait into pop rorb or pop orb ss add loopne xor sbb rcrb popf mov rorl call and cmc (bad) or inc aad sti push add bound inc sbb loope pop lock cmpsb inc push adc pcmpgtd cmp mov pop lret adc dec incl jns call decl jmp or mov adc pop lret or jmp inc loopne (bad) addr16 dec mov les lea push fild or outsb mov or fsubs (bad) mov stos sbb add inc repz call jmp or inc in dec xchg cmp lahf inc or dec sbb sbb adc int outsl loop mov jp cmp mov push cs lcall cmp (bad) loop add push pop (bad) movb mov jg pusha andl push jb push dec jne jae push xor adc push adc jne ret push mov test pop xor and or add mov mov pushf pusha or popa dec jecxz mov je mov fisttp lock pushf test cmp or loopne mov xor pop xchg mov sub mov nop je lret push mov loopne adc push xchg lods outsb movsb incb jmp add mov push loope pop or cmp fldcw pop scas push shlb push out lea dec loope pop scas (bad) adc call stos cmp push mov in cmp cmp add cmp fadds add daa cmp outsl pop xchg add and add mov cmp lret repz add and fidivrl add pushf ljmp adc add bound enter bound add inc imul jl jb add pop (bad) jecxz arpl xor and xchg dec cmpsb insl (bad) and jmp add mov dec jne stc pop insl je adc adc jmp fistl cltd mov sbb stos jb adc jne jbe push and lods rolb add jmp aad iret add test or push push fstp lds add jmp and add cs push lahf out nop add fist hlt mov lret shll and lcall mov dec out in cltd sbb sub imul jns pusha push cmp mov or lea (bad) dec push test insb inc mov and es push sahf xchg add in fcmovbe add in inc jp push enter add dec xchg mov loope sub outsl int mov pop iret or ret xor pusha leave jg mov stc pop cltd jmp jnp aad dec mov adc add sbb push add or push (bad) cmpsl inc mov xchg dec pushaw dec add push cli pop in add inc pop jmp fnstcw out jnp fucom mul jmp sbb jle outsb call add inc sub pop popf add test aam dec pusha mov aam or jl cmp push adc mov xor std or or and gs stc out push mov mov add inc call dec pop jne jne js pop cmpsl sub dec xor test sbb sbb jmp mov ja or aaa std dec jno orl std cld push cltd test sahf sub test dec jne or xchg and cmp push mov jne and add add mov sti dec cli int cmpsb (bad) push mov fadds orb out pop lock mov mov fldenv movsl sbb adc fs ret xor test pop insb jecxz (bad) or ljmp xchg gs xchg std dec xchg jecxz std add fldl xchg mov inc rorb addr16 and inc push or call add rcr clc sub ret or xor add and rorl jge mov add cs arpl adcl add xor loopne or push sub jne fs rcrb test lea shr inc and pop lock dec or les mov push push push test enter dec jne push jge mov jbe js jbe stc repnz mov loop imul enter mov outsb mov fwait mov dec pop xor add sub pushf mov mov cmp cmp dec or cmp mov add stos ret inc and scas ss add lock cmp xor add jo test pop mov mov mov jl mov (bad) mov addr16 icebp out push mov jbe push sbb (bad) xor dec (bad) loopne or push bound (bad) mov enter jb push and mov nop lock add iret ret sbb mov (bad) js ret daa lahf shll fistpl push lock add shl pop js mov rol loope sbb add aas inc jo scas xchg jo mov sub mov mov mov mov add inc mov inc add ret shrl js xor fadd or imul push or enter mov inc dec cli xchg int sbb mov add adc jne les ljmp and adc lret push add xadd pushf dec cmp jge outsl cmp push add and push (bad) dec dec dec and and add cmp xlat xor add push or cwtl fwait pop (bad) xor pop inc iret int fstl enter sarb cmp pop cmp dec add or je shrl ljmp inc incl ds mov push popf and add jne dec mov sbb mov jge dec cmp mov add xor sub adc xchg dec int3 push pop add pop mov mov sub rclb loope lret pop jae js fildl mov and (bad) pop xchg out or add xchg inc add psubusw mov call fcmove shr add or cld push pop cmp inc push stc enter sub repnz sbb lock jo mov ja mov in lret sbb stos cli mov rolb rol add shl shrl xchg inc add rorb push push jne ljmp je mov scas or push scas cltd or or sbb repz (bad) cmc mov dec dec mov ljmp lock loope lock sub lahf loope sbb sbb sahf fcmovnbe add adc cmpsl jge negb cmp jne or jmp adc jae add dec dec inc dec lret dec stc mov sar dec adcb je cmpsl aad loope enter jmp mov hlt jecxz pop sbb adc les add cmp jne ret add out and cmp jle cmp out es mov mov xor shl and mov fstpt mov push push pop adc cmp and sbb sbb addl (bad) xor jo,pt pop sti jne adc cmpsl jb lret jne dec std jne inc adc test adc jg add push or dec xchg jg bound das jo dec or sbbl and outsb test sahf inc sub shrb jg mov js jle jne or add add and mov mov push decl push or add (bad) and loop adcb loopne fs add bound adc ret mov mov or lods jne jecxz and loopne mov gs test xor jbe in inc jnp inc add out mov add scas (bad) mov push loop or xchg lods aad inc dec mov jb leave stc ret fwait mov sbb mov out or mov dec aam popa adc sbb test enter sub bswap pop xor xchg and push test sbb je addb mov push dec fist jbe test in and adc out out insl push jg pop add dec jl mov cmpsb xchg imul fadds cmp or aas sbb adc mov hlt mov push add mov ljmp cmp mov adc dec test lret andl js ss lcall jmp mov dec add movb negl jb and cli or clc (bad) or and aaa dec mov leave cmpb loope or mov xchg mov inc mov mov jl arpl sbb mov pop and cli sar hlt pop lods push nop fisttpl leave mov (bad) jbe and shrb cmpsl mov sbb jns je clc mov inc dec inc shr orl repz jno dec scas inc movsl lds enter pop push imul jb int3 xchg cmp cld fcmovu mov aas cmpb insb ret fisttpl xchg mov loopne cmp aam fwait mov jne pop cwtl ljmp leave (bad) aaa inc fsts sbb jns in or push add push adc dec mov addr16 adc xor lcall dec mov fcomp lcall or test dec sub sub jmp or sub jmp pop add jb movb jmp jb lcall add sarb cltd jns pop stos inc inc jo ret xor and outsb inc jo add aaa cwtl fmul adc push or or mov in mov sbb add clc sbb sbb dec inc pop das push xchg cmpsl pop or das or addr16 xor adc adc add add adc lret rorl or ret or inc mov and pop (bad) bound push rcr adc jl lret les add xchg mov inc push add cmc sbb xchg mov movsb imul and pushf outsb daa pop xchg pop ret xchg or nop add shll xchg inc movsl stos add dec xor (bad) xor int inc push adc sbb mov flds sbb push add dec or dec adc xchg mov outsb (bad) pop sbb dec adc shr insb or add mov leave ds cmp mov ret dec repz jge push popa movsl fwait call push ret jle mov sbb adc pusha cmp xor push xor (bad) xor and sbb bound paddusw outsb (bad) mov push cmp inc pop sarb pop dec and mov add pop add add or aas mov aaa dec dec leave ret xor sub xchg xchg stos lcall cmp rolb adc push adc rolb or mov dec sub push fild pop mov nop imul lock jns adc sub lods adc gs lcall mov imul xor push xchg or sarb idivb xchg cli fisubl lcall aam xor (bad) cmp cmp push sub ret ljmp test sub lahf pop dec pusha enter (bad) movsb cmp rcrl push jno mov sbb mov ss lock (bad) pop and add mov jmp adc cmp cmp dec or push aaa outsl in xchg xor inc mov add roll push inc mov shrb les lret lds pop int3 xor mov lds xchg mov das daa mov mov push jb iret dec or addb jp lahf test inc and or and or dec cmc clc jo jle cmp sbb and adc add icebp dec inc sarb test jle push xor push lds gs imul cmpl daa or leave out rcr xchg rolb pop outsb bound jnp mov aam enter mov outsl and dec lods add imul cmp jb jnp add mov mov mov xchg fsub loopne dec dec push in dec and sbb clc or xorb or lock or mov pop add xor les sbb add mov cmp scas pop sbb scas stc inc push push mov test sub jo rcrb xor and mov nop dec mulb jl clc imul sub mov es sbb or dec push jg lods pop xor fcmovne inc jp and mov add or sbb imul cld push (bad) (bad) lock loopne cmpb adc lcall xchg mov call or dec push ja rol call daa mov mov adc aad test add push lock xchg nop lock push mov xchg imul lret popf push (bad) and test sbb test lahf pop fidivrl sbb jge out and ror subb mov les or frstor sti add sbb jo sbb js xchg lock sbb iret or xchg push add inc mov in gs mov loopne sbb icebp testl push xchg or cs ss ret leave (bad) call cmp adc pop adc popa push cmp and ret mov or lea jne mov mov pop mov and rol dec add in jo fimul (bad) jae shrb out es sti mov xor inc les popa cmp inc xchg adc gs cmp idivl pusha insb (bad) call (bad) mov cmp sbb push push pop mov popa dec aas adc test jne or and jl (bad) cmp and cmpl mov fiadd lret and addl rcrl je xor lea push push cld adcl add jp mov mov adcl push adc jge ljmp adc addl subl adc test push jnp sub add xchg push lea sub mov or sbb insl mov dec pop push cmp es dec jl mov orb add dec cvttps2pi pop sbb mov add dec sub dec push inc lds (bad) jbe adc xor movb (bad) aaa adc cmp jle lea or mov mov xor adc sub jge bound add lret dec sbb add ss lds inc sbb inc jne sbb xchg dec inc dec insl mov add jne push jmp cmp jp mov lret push jecxz bound jle rcrl pusha jnp or push adc jnp incl push dec add and test cmp push adc nop or mov cmp pop sbb pop insb dec and popa in mov (bad) pop inc lock or xor dec mov push add pop ja mov pop ja or cmp push orb jne call insb sbb add jmp push test imul cmp mov push xor repz cmp mov cli ret add pushf and aad mov jg dec mov int xchg mov aam mov mov jge and sub add cmp jg insb sub lret adcb outsb lret jl add daa push cmp xchg xchg xchg mov lar int3 cmpsl xor leave test push adc push pop cmp jnp rclb push inc and mov cmp jne sbb adc pop (bad) hlt js push push or xchg inc add mov xchg loope adc adc jbe push push lret xchg lahf das mov lahf push xchg inc test jne sahf popf add or cli dec (bad) jge stos xchg mov push add lods push nop xchg jne xor push dec or push xchg mov jo orl inc in add pop shl mov negb xor and inc rolb and ret mov je subl je jmp mov aad xchg mov leave inc lock and pop in (bad) jns push sbb cmp pop fnclex dec mov xchg dec movsl ds in adc lock jns lods add aas dec push pusha pop lods or jne lret add in pop popf mov pop add test push fs inc stos add push mov or pop add inc or sbb or mov insb fsubr dec mov push sub aaa xlat or jl jbe mov sbb adc sub fs sub mov (bad) (bad) lock (bad) adc mov adc out cmpsb xchg add push jne inc xor clc mov mov popa pop or pop je inc clc dec push dec pushf fs neg and subb push or imul or ret cwtl popa rcll cmp xor inc cli jg mov push outsl hlt dec adc jge mov dec imul cmp ret dec and mov dec (bad) xchg dec scas ret dec cmp (bad) mov push xchg in add lock mov adc or mov xor push jmp mov push cmpsl test xchg pop mov dec add call dec sbb (bad) jae jbe lods mov cmp lret cmp inc jb jecxz sbb push add rol loopne add inc pop fdivr xor push jne and or or pop lret dec jbe insl and (bad) ret xor adc inc gs mov lea hlt xorl push jbe or pop pusha cmp push lock rcll (bad) xor sarl es sbb and add add add jo dec inc add ds (bad) call pop dec cmpsb nop xlat incl mov mov or cmpb push cmp and mov pop add test mov and leave test dec mov or fs inc cmp mov add and or leave adc inc gs outsl in xor cmp ficom xor les mov bound mov or dec cmp (bad) xchg dec inc imul mov daa or or sbb push xor xchg mov mov mov add and push sub popa in mov sbb sahf cmp add (bad) jae mov lea test adc sbb cmpsb add subl notb xchg lods fmuls jge cmp push and mov shrl (bad) mov add push xor cmp xor mov mov jecxz fiaddl pop mov xchg jle add sub loope test jl outsb push sub adc fsubl sbb sahf mov xor xor leave lods popa cld add pop dec ficomp dec fildll add lods push js (bad) adc inc jl or add insb or jns mov imul mov inc fadds aam add pop or dec int rorl and jo sub dec sarb inc hlt jle fild add mov mov mov rol or test in or mov outsb xor pop lea push lea add or mov inc in pop pop cmp add mov sbb push inc js lret inc add xor (bad) sti jo push mov shrl xchg (bad) rep mov sbb add push push sub lret rcrb icebp popa inc sub nop aaa sbb mov sbb dec dec jne dec imul fcomps (bad) dec xor movsb jo imul rcll test pop pop scas inc sbb push ds inc rcr iret mov mov jecxz sub sbb fldenv xor xor in lods neg cmp mov sbb add fcomps jle cmpl push mov dec and xlat jbe dec xchg add stos lods stos test ficoml js cld mov mov or or ror add fs (bad) int3 int3 push (bad) mov daa sbb inc cltd js and cmpsb jnp inc inc lods out (bad) out (bad) mov or shrb in mov sbb in aam int cmp popf ret dec lock xor lret xor ret add cmpsb inc push test das and fidiv push pop inc or sbb lea into xchg dec push or ret xchg or add dec rorl cmp cmp pop jl loopne mov push dec pop lret add ret out inc adc pusha or loopnew push and mov dec pop repnz mov xchg stc popf xor inc jge lcall rorb jl xlat and lea or dec shlb loopne xor cmp ret es scas add loopne add pop dec pop les dec and mov add std dec je add and orl dec xor dec mov test add (bad) shrb xchg mov adc add lahf adc push jg and sub ret dec pop call adc mov pop ljmp jb sbb cmp std mov xor jnp popa jnp adc mov cmpl dec outsl pop mov push jp (bad) mov hlt test ss inc pop stos loope jl mov dec cmpsb or pusha push xorl sti jnp pop inc add sub xchg aaa inc or cmp push insl adc mov xor add push add xor push push mov dec nop loope jecxz es leave (bad) adc add fsts sub sbb pop daa xchg inc adc imul daa inc sbb and push int3 inc stos bound pmuludq push and push ss add cmp jnp mov mov dec mov inc inc and add imul mov mov jmp test add pop add mov cmp sbb cmpsl push mov (bad) int3 dec adc (bad) dec mov adc dec sbb xchg mov mov jmp or mov ret xor add adc stos push xor popa loop (bad) sbb rcrb push mov gs enter xorl push (bad) movsl (bad) mov mov add pushf in aad push fiaddl mov add aam dec bound pop xor mov mov push adc imul inc push mov jle sbb js,pn adc pop adc jmp mov inc shrb les cmp dec ret enter xchg and inc sahf inc push jno rclb add mov std push xchg ret mov inc sarl pop lods jo (bad) std insb adc dec sub enter pop jl mov pop insb insl out jne push adc push outsl jne loope lahf inc pop bound sbb xor ret add outsb daa pushf (bad) aaa je and mov cmpl inc aaa or add sub xchg (bad) mov xchg push dec jle push sub adc cltd or adcl or push out mov dec pop and dec mov inc or mov aas inc inc lock xorb add mov push add loop jmp inc dec out decb jo test es inc mov jne jecxz jmp push lahf cmp js cmpsl ret push cmp jne shlb arpl into adc xor ds xchg jno stc std jmp cmp repz cld roll pop sbb mulb push push push jmp add jo add sti rcll out xchg addl mov or std cmp xor cld add int3 loopne mov (bad) fist nop loop mov xchg push or addb sbb mov push das xor insb push push in daa xchg outsb mov push mov add ss push mov shrb int push sarl jnp stc sub aam (bad) jns dec sti sbb push add pusha mov out mov sti xchg add jg cld add add or or (bad) les jnp fistp lret rolb int3 clc fadds je adc add mov jne cli dec lss mov shlb sbb jl cmp or cmpl sbb lret push jle push adc cmp cwtl aas jno adcl test dec push out jmp pop mov ds xchg rorb aaa jb xchg jno inc arpl xchg mov dec add int or push dec cmp dec cmp aam fiaddl in push sbb repz fisttpll fcmovne add inc dec push testb stos or pop cld pop nop lret add sub mov inc and (bad) lds mov scas add pusha sahf mov mov pop call cmp adc mov bound ret inc xlat gs test fsubrs and dec sub mov jp xchg xchg inc popf cmp pusha xchg jl dec jle add sbb (bad) dec enter dec add icebp dec push xchg mov inc or or add push rolb loop inc cs push ss sarl jl imul xchg mov add test clc je mov outsl mov into mov dec sub rcrl lret or enter inc cmp call cmp lret dec dec rolb push and lods dec movsb dec insl jl std xchg push ret xor xchg out xchg stc repnz sub jb mov and ss mov push and dec loop add hlt (bad) mov je inc inc lretw mov test orl les subb (bad) sbb dec sahf lret adc adc xchg pop shrl cltd add sbb jne or jns nop nop rorb nop inc adc imul (bad) mov xor cmpsl les sbb out and out inc inc dec cmpsb lods pop fdivs lea mov mov lods mov pop pop adc inc mov adc push aas push dec loop ja das mov les jns add inc repnz xor jecxz ret add inc xchg shl pusha push (bad) nop mov nop test mov popf lock xor jle (bad) inc (bad) in or mov sbb and add cmpsb jl xorps or nop loop pop daa mov sub mov ficomp les sbb mov movsb sbb and test xor lods or cmp daa add sub cmp jo xchg pop pop mov popa fucomip jns add xor inc cmp jb adc mov mov imul into cmp mov mov xchg inc jp xchg mov dec push add fwait add or add pop push scas jle fidivl inc clc sbb int or xor rorl add ljmp adc add or fimull xor sbb cmpsb test add jb insb or sahf ret xor fcoms sbb xor or push icebp pusha dec jecxz loope xchg cmp cmp fisttp sub test mov (bad) adc mov ja adc je add cli or or xor fmul mov loope inc push jne hlt add adc shr xor pop push fnclex or adc scas push xchg pop ret mov mov (bad) adc cmpb push dec sbb xchg imul push fisubrl add jne adc adc ficompl sarb mov inc cmp adc xchg jns xchg dec fld fistpl scas mov xchg addr16 push lods pop sbb xchg (bad) push dec mov inc sarl lahf inc cmp out jecxz or xchg data16 fsubrs add xchg js push add addb fsubp inc ret fmuls add adc sbb in or mov adc pop sbb push add jmp inc mov lods mov xchg pop dec cmp inc iret dec xchg daa mov rcrl notl je jl add or sti jmp xchg (bad) fs scas inc dec jne test hlt or loop je mov (bad) adcl mov loope pushf inc adc fist test in sub out inc xchg mov or inc jmp xor push cmp inc jb xchg pop ret jge imul push mov movl imul cmp pop or aad dec inc mull pop push ja or mov and movsl aad dec xor add push mov js arpl test js lea and adc je (bad) mov lods add mov pop adc mov push adc mov mov add mov stc mov xor dec pop ret lods arpl xor mov cmp push push icebp add imul mov add push andl add ja mov and inc add or xchg das or cmp inc cmp jb sbb ds aas and and inc nop mov scas sub inc pop (bad) inc and cmp add xor add ret popa pop push add into test push addr16 clc or out xchg jmp lods out loop inc iret fimul sbb insl mov xchg push or mov lods fist adc add sub mov mov hlt sub and mov js add jmp pusha adc outsb jbe (bad) out mov pop je jb loopne inc (bad) and lret fisttpl mov cmp js jae or mov mov clc mov push dec sbb subb outsl ljmp jecxz dec ret ds push sub dec and add push inc je cmp mov insl sbb cltd add mov ror sub push lods sbbl jne fs (bad) fsts add dec add ret sub xor mov sub insb or fdivs xchg test adc or pop jbe push cmp xchg (bad) xchg std add fcmovne inc fadds or lea dec lea ret push stos cmp pop mov je xchg je cmp adc test shll movsl arpl dec in nop cmpsb movb push push aas add cmc adc push addr16 lcall lods sub bound push daa add and sub das xor mov (bad) xchg mov clc add dec jne inc test and (bad) mov aas shl inc sbb sbb jo shrb loopne add and mov add add add cmp jnp push push adc repnz stos jg push pop lret popa gs and push and cld sub rorl dec dec sub nop test inc adcl sub test inc inc dec add inc pop adc inc repnz add xchg and cli addr16 dec pop inc sub and (bad) in insl push adc inc add pop dec lods sub pusha mov sbb sar outsl and add lcall xor (bad) jg jne jo or and fmuls divl inc pop lcall adc and jl jbe mov out addl lret outsl test and out in in or lods inc inc lock adc enter dec and xchg xchg out lcall push (bad) out outsb sub pusha (bad) jecxz push xor inc and and sub push push aam xor xchg jg push push ret cmpsb push sub insb ja cmp ja inc push xor cmp push pop add iret call jnp and push sub daa inc lret scas jbe push imul pop xor cmp jbe mov sbb jbe jns mov inc je push push add pop xchg jae cli add ss mov dec or add scas add nop jmp xor mov movsl pop or sub outsb test dec ret add xor jbe es xchg icebp and jmp jmp xchg pop stos adcl shrb lea inc popa nop jbe push shlb loopne or aas je fs add mov xchg adc ja push sbb mov cld xchg xchg add sub test adc jle dec and mov mov cmpb cmpsb pop push xor sub push lea test mov lret sbb in loop add mov cs (bad) mov lahf add push dec outsb fsubr dec in pop xor leave lds pushf std jae cmp mov push jb fldt lds push test movsb pop repnz enter fldt fcomps pop xor and mov mov mov push fsubs loop stos lds add int3 leave sbb xchg mov lcall xchg inc ret pop sub and inc pop imul dec xor insb jnp int push cmp sub jne inc sub inc (bad) cmp push push add inc push mov test clc adc mov outsl cmp dec dec scas sbb or push rorl aaa and jne outsl xor add cmp and aas mov mov jns daa and xchg ds push or jmp loope pop (bad) xor jg int3 adc mov push dec enter movsl dec push fs sbbl inc lret or scas jle scas push jno sub push dec xchg test sbb pop or in add or (bad) pop ror inc sub xor lea push push xchg xchg in sbb movsb jo jmp js int3 inc je scas inc jmp cltd movsb jb bound sbb or xor xor pop dec push add or push shrl fdivs jo das or fdivl arpl mov pop inc or loop sbb icebp mov inc pop cld or shl cmp jg push sahf xor call cmp cmc fnsave add pop jl mov sbb xchg push lcall lods or imul in and in mov pop add fsubs adc add pop dec pop (bad) mov add push add add js inc js push pop bswap movups sub ljmp cmpsl xchg push shrb and aaa sbb (bad) test xchg fs adc inc scas mov mov pop in dec decb add mov aaa mov cmpsb cmc pusha pop cmp cltd and and cmpl adc jne add or cmpl movsb push bound mov (bad) mov or jne xor jg cmp mov xorl into aam shr or cmp xor ljmp push pop addr16 dec sbb sbb in aaa mov push or dec sar mov mov fldenv push jnp fucompp hlt popa add push pop lock nop push mov cmpsb testb icebp je sub imul mov sub dec aaa jnp mov test push mov insb jmp dec sbb sti mov mov jne pop enter sub jne ret sbb lahf pushf mov ja mov sub cmp insb push adc mov mov add mov xchg mov jmp lahf sub adc loopne cmp jb mov jp ret and lahf lret bound lods pop lret out fisttpl jecxz dec sbb je mov pop ja and je orl and jmp int3 dec pop lcall add cmp mov jmp (bad) dec lcall sbb out fbstp cs bound add xchg push xor cli add push adc and lcall push daa sarl fstps dec inc bound jae sub sbb in sahf cmp sbb add or push and mov lahf mov pusha and subl pop mov add movsb adc mov imul ret cmp xchg inc (bad) into and mov mov popl mov setno lods ret mov loop pop lods pop iret lea mov or xor icebp popf push lcall and lret or and pop mov pop outsl fs (bad) jae sbb popa and inc fmul push js mov cmp cmp adc adc ljmp sub ljmp and mov or rcl mov mov addl xchg mov adc cmp dec sbb jp test push js pop popl push ds out repnz xchg (bad) or dec leave push add mov cltd adc pop mov adc enter dec pop sarb cmp inc xor and lock (bad) enter mov sub push popf or jne add rclb pop rolb mov test push or push dec sub push push imul and sub push (bad) data16 roll jae clc pusha ljmp inc pop or movsb ficoml dec leave push sahf push push enter push ret sub sub dec jmp add or mov cs pop mov lods std add add pop mov adc mov orl shrl jp xchg sarb and xchg cmc dec dec test call and (bad) jae (bad) iret fadds lahf fcompl jecxz out sub jg cmp push mov fistpll test add imul and add push (bad) sub lahf cmp sub fbld cmp dec pop add cmp mov js xor dec out inc dec mov aam into not mov out shr shrl jb lds sbb out sbb sub xchg jo sbb push mov aam xchg mov clc inc or mov mov lds (bad) out xor hlt pop sub cmp add inc sar rcrl mov and push xor in push mov xor (bad) mov jno mov (bad) inc dec hlt mov outsb (bad) jns fsubs sbb sahf cld xor lock (bad) repnz pop pusha into pushf adc je push fdiv popa js mov lret mov aam adc inc push xchg inc add or push dec clc adc sub shlb stc inc sbb xor sub lock mov sbb push mov or ret ret dec ss pop (bad) movsb ds cs jae xchg adc ds adc in cwtl mov je cli push jecxz or rorb add cmp pop cmp les dec add or loopne nop inc movsl (bad) mov je push add or gs cld mov jmp pop out push adc paddusb lea sarb push andl pop inc xchg push or ret test cmp lahf dec shr stos rorl adc rol jo xchg pop (bad) jo jge int3 pop mov or push mov pop jle or cmp into or xchg lock loopne jb pusha mov dec test (bad) bound imul jb sbb lea imul movl jae (bad) data16 (bad) mov stos faddl and add fsubs loop pop leave andb add call add jno stc movsb or cmp jnp adc inc insb sub and push dec mov shlb jp and dec push rcl call sti inc add fcoms xor lret jp out sbb fwait inc sti icebp testb cli inc adc or pushf dec repnz insb jmp add and push add or jmp insb or sub add rolb push or cmp iret add sbb je add xor repnz mov pop mov ret cli mov add inc jg les sub into mov popa mov cmp out loope inc xchg (bad) cld out jge jne xor sub push adc jnp loope jne dec and push push mov jbe sub adc jo mov dec loope push add in and inc or ret popf aaa int3 lods data16 mov in and pop add insl loopne cmp fstl add sahf test adc push inc adcl aam (bad) pop cmc fwait rclb push cmp iret rolb adc ds push push jecxz (bad) or ret pop fsubs dec xadd jbe sub xchg mov xor (bad) or inc jmp movsb and push push roll jb xor mov xchg mov inc push push fnsave pop icebp mov xor or shrb rcrl (bad) push push cld push ja push add dec sbb push std add xchg xchg in mov popf dec cmp push leave mov pop movsl dec add popf dec outsb fidivl mov push shrb (bad) dec mov mov mov and popa sub inc insl rcrl inc sbb aas mov adcb cmc loope mov fwait dec add mov (bad) xor sbb adc or adc sub and ret das push adc js dec add mov pusha mov sbb test adc add and xor (bad) push mov lahf enter adc stos cwtl test push popa push cmpsl lds movsl loop sahf xchg sbb inc push sub loop pop add adc mov xlat mov add stos add jb movl push xchg and std pop pop rcrl inc in mov ficomp lock js mov imulb call fwait mov shlb xchg fimull lods xchg dec mov aas jecxz test push dec xchg inc inc add sub jmp jnp aaa shlb cmp pop add sbb roll (bad) jp,pn push loopne dec fmuls nop mov jno or insl inc cs inc lcall shrb cmpsb aaa ja sbb xchg popa dec (bad) cld jmp mov push pop and pop dec xchg out (bad) nop inc dec inc add dec push lods fmull push outsb repz jl jecxz pop (bad) pop test (bad) dec and adc sub out mov andb push bound cwtl ret xor dec roll nop xchg rorb lahf pop push pushf add int3 (bad) andl xchg lret inc leave sub nop (bad) sbb sbb sbb ds jno rorb (bad) xchg sub fisubrl sbb jno sub pop cmp inc sbb (bad) rcrl push or pop and fistpll xchg add mov mov je dec je fmuls jno (bad) lcall push xor sbb popf je fwait lret cmc rolb pop push es sub fistpl push inc xor rcl push outsb push xor movl pop lods in shlb xlat mov sub ret jae adc push fwait and dec lods sbb xchg or xor push rol cmp adc popf add je jnp lcall xchg push insb jl cs fdivr test dec pop in mov mov push rolb dec sbb sbb cmp cmpb fwait xchg shrl (bad) (bad) arpl fstps push push sbb dec out or cmp push and adc pop xchg lea addr16 inc hlt bound stos and inc mov ret or pop fcomps and loop sub sub jle fs ss or insb and jne pushf pop scas cmpsb push cld mov mov xor push jne mov outsl jg lea loope (bad) jno jnp jbe movsb ds lea int push outsl mov dec sbb (bad) cmc fstps inc mov xor sub outsl inc pop fwait inc loop sbb fdivs (bad) lock cmp pusha or loopne or push lods lcall and sbb fsubrl std sub adc add ret mov cmpl or pop xchg loopne jl mov sub and mov fiadd out pop dec xchg sarb fiaddl fdivrs fnstcw fnstcw add push sbb inc dec add scas xor or inc add mov push or test sub mov ret pop nop orb inc inc push xlat add andl fnstenv and add fisubrl jb jb pop push mov jle or adc inc mov cmp decl pop add pop cmp insl je xchg loop push fs cmp outsb sbb mov lods push mov add mov sub push mov in out insl inc xor dec xchg and aaa in mov cwtl inc sub sub push (bad) out (bad) dec add in mov imul pop dec jmp lret xchg inc pop push test inc add and es clc adc inc pop mov mov and jle out push inc pop es orb in jae or xchg sbb xchg sbb dec dec dec cmp enter push sub ja stc jb dec test icebp xor inc ja sbb js pop push shl or xchg jl (bad) nop xchg int roll push mov inc xchg sti add int3 fwait jne mov lret mov inc adc add pop nop popf lods push pushf daa mov clc dec in xchg push dec dec and outsb dec rorl add jle mov dec sbb (bad) mov mov mov and adc roll cmp mov push pusha xchg repz cmp movups loop mov idiv pusha lcall xor push push sub add push mov inc dec push loopne jno dec pushw add cs ss outsb lock ret add pop negl adc (bad) pop pop ret mov cmp aas loopne push out ja xchg call dec outsl jo xchg sahf xchg addb sub cwtl jbe sub add mov or and popa jmp xchg inc adc or or aam and add lods and mov jbe or jle aas nop mov cmp stos movsl aaa sub inc sub fisubrl lcall xchg leave cmp inc dec push sbb cmp sbbb imul roll mov add adc fs inc push xor pop clc inc push sbb or mov movhps rorb mov sub mov pop lock ja in ljmp or push js mov divb push jle test mov pusha dec pop lret adc call dec xchg add dec sarl dec mov add or int3 xchg pushf dec sbb dec call bound leave ret (bad) mov add sbb sti lcall pop je inc add push dec jnp js add cmp and mov mov push push fldl ss cs lret and dec std out ja mov sahf mov mov pushw nop dec lock sub das lock rcl test push in dec cs sahf sbb pop lock dec adc mov adc lret ret insb rorl push add push in xor sub xor jecxz xchg les jne push cmp movsl icebp xchg push mov rclb mov push rolb and xor fdiv pop push sbb aaa push ss sahf sub xor push inc movsb in je add pusha pop lock jmp or adc mov inc push xchg xchg adc mov add push fcompl mov push xor test xchg out jns int cmp jno dec xor sbb xor cs daa int roll pusha in cmp xchg mov faddl scas xchg pop mov mov sbb and cmpsb dec fs sti add adc pop and add ret xor mov dec push xchg dec ret add aas and dec inc test rcrl or aas mov icebp lea clc imul push adc jle aam jecxz outsb xor mov mov and (bad) dec rep jne dec dec and cmpsl sahf add xor out test bound cmp ficom imul cmp or mov popf pop sub lahf push inc inc das rolb incl imul pop and sub jge xor push sbb and ss sbbb (bad) add test mov imul js popa and add push bound fimull clc push andb movsb or add inc pusha push dec adc stos addl sbb mov xchg ror pop dec xchg hlt rcr mov cmp cmp lock sub add pushf sub push dec push push das pop (bad) pop stos adc out mov aam inc je mov dec pop push sbb lcall cld and movsb push jbe fmuls imul ljmp iret je cmp inc adc (bad) mov call add outsl inc push sub mov jae push sub pop pop bound leave inc add dec xchg das mov adc imul sub or push push loop mov jae pop dec push lahf rclb sysenter or lea lods push mov or in inc sub aad inc inc mov push pop or xor stos pop das or repz sarl dec and jb cwtl mov lea test (bad) jmp sarb jbe pop sub push addr16 rcl cwtl dec das jle pop xchg test int lea mov mov mov inc push or xor (bad) xchg lea hlt sub pop sub sub sbb out mov mov in adc lret rcr mov stos push cmp sub lret xlat xchg cmc cmp jne int fdivs push ret and imul stos inc loopne test fistp or mov lods outsl inc inc adcb jl addb push inc inc (bad) ss shlb pop xchg lods cmpsb or shrb imul jecxz fstpl xor push push insb testb lds or sahf stc xlat or add add lcall in push adc or popa inc push xor (bad) dec pop pop adc xor test xchg push rcrl je dec ja dec sub cs push xchg dec inc inc push push mov push adc push or xor sahf adc push cmp jae mov (bad) rorl nop cmpsb cmp into mov push jb insb push jmp imul ja fwait inc cltd pop pop bound pop divb aad push cwtl lock add ficomp out fiaddl adc jecxz xor int3 loope pop jne scas push (bad) daa call andl lods or and cmpsl mov and in or xchg xor mov mov lcall sub clc inc mov mov push mov push jo sarb andl sub sub jbe shrb sbb xor test and dec mov mov add push push test enter pop dec sub into cmp fistp setle shr dec fnstsw push fmuls sbb jo test sub mov sub sub lret jne rcl adc sbb es ds cmp es test test loopne add movsb mov jno xor cmc arpl dec imul clc dec out add adc inc mov and or push loope and push and in clc add push lcall mov mov pop rcll call popa pop xor cltd dec insl mov pop sub or push add push loopne or pop push cmp movsl cwtl lret sub and in add jecxz adc xor xchg cli roll rolb mov rorl lock or jne adc dec push scas jmp push and (bad) add cmp adc and inc pop test push movl pop pop jg ljmp addl mov sub jae push push sbb imul mov pop add mov and loope pop cmp adc push push fwait ds js dec pop enter ret es jmp fdivrs push lcall mov push dec push sbb push es mov xchg dec push sub lea cld (bad) ja fiadd and jo and jecxz add push in mov push inc lcall mov push mov sbb xchg lods xchg or add imul or xchg mov sti insl and call push fisubrl cli adc movsb pushf mov jecxz cmpsl sbb push dec push out add add hlt fidivl enter test cmpsb xor push popl xchg dec jb add lret cmp jge jmp xchg inc sub pop mov inc dec pusha insb ljmp dec inc arpl sbb pop mov cmp jl xchg add dec jne xor ss gs (bad) fnsave shrb xor cmpsb jo push or xchg lret mov inc test bnd pop lods test jl aas and das sbb push sbb pop jl jle sub insl movsl add sti stc enter pop mov inc mov sub lock sub mov sbb fbld dec jae jae xchg sbb pop add je adc jno hlt (bad) call push adc jle mov imul xor add fisttp inc mov imul xchg push xchg divb (bad) hlt inc pushf mov push add es sbb mov mov test stos jo je mov xchg or rorb adc add lds xchg add inc sar push (bad) imul sbb enter hlt js outsb lock lcall push mov jle (bad) xchg push add in xor pop and mov ss sbb mov in sbb mov (bad) je mov lcall push xchg pop or push inc ds add push cltd addr16 out add or hlt inc sahf dec rcr cwtl sbb clc aaa test mov xor fisub int insl sub mov dec lret ss jns nop pop fidivrl jl jne and ja or dec jmp cmpsb xor aam fidiv lock aaa sbb (bad) dec sub int3 dec mul xor sbb fldcw jge lds stos xchg and cld push xchg cmp jmp lock cmp add fiaddl icebp roll adc loop push and jle cmp xor sahf rcl (bad) adc jbe xor pusha cs xchg add push mov add aad popa mov adc or inc adc andb dec jp test jns sbb lods xor cwtl push lods ja lea icebp jl add pop jg inc xor and and test pop inc or (bad) lods cmpsb push sbb mov lods mov push cmp dec or adc loope ret push mov and add inc cmp xchg jo jbe test fsubl dec jmp inc add push dec fwait adc aaa je int adc jg and mov int jno push popl inc or ret lret pop fldl test push inc mov stos (bad) in mov or or add dec insl mov xchg mov xor pop adc (bad) cltd sahf jbe pop addr16 inc test jecxz xchg incl adc xor mov test pop pop rdmsr loope je fsubrp mov iret jg mov scas add mov lret mov test shl gs dec push gs lods daa popf test out shrl or and dec xor popa (bad) les add cmp pop xor (bad) cltd lahf out orb movsb pop sbb pop mov imul add xor repnz jp insl mov add add dec je call sub push mov loop mov and ja sub mov push add jmp dec notl aas dec dec or mov out lods push push mov arpl fcoms mov inc add or in and adc jns and and sbb mov ret ret es pop js sbb mov fwait out test xor add andl aad mov or rolb lret pop test mov imul sub mov sbb xchg pop mov test sub cmp dec gs test jae pop test in mov fs cmp jp xlat xor das xchg pop xchg les lret dec sbbl data16 xlat mov fldenv sbb je xor dec imulb push or pop add data16 add dec fdivs lcall add add mov dec shl jb cltd fs out inc (bad) jmp sub add xchg pop (bad) mov data16 test (bad) lock or iret xchg jne (bad) and add test dec or loop jns mov xor (bad) je loopne sbb or jp cs sbb imul or (bad) enter leave pop add incl add dec stos adc pushf outsb xchg sahf cs sub pop xchg or shl in insb sub mov fnstenv pushf add call push inc cmp sub lea (bad) rcll mov icebp adc enter push stos jge lret fs inc adc push mov xchg fild mov inc sub sti stc mov dec xchg add repz mov pop test ret xchg pop pushf mov lds cmp cmp test dec pop xor pusha test cmp sbb xor imul jb ja xor push bound dec inc or sbb rolb rol icebp (bad) subl adc scas pop and ret adc ja int ja adc add mov cli adc movb xor and movsb fs nopl mov push sub sbb test push insb add pop sbb cmp je mov xchg (bad) and not xchg pop mov lds xchg mov mov cli test sbb and std push test fmuls hlt adc pinsrw mov aad push add mov cwtl pop and clc (bad) (bad) mov or and or adc loopne xchg sbb shl das or push and pop sbb inc dec insl sub sub push mov lods loope out in or adc mov xor pop lcall cmp clc adc mov xor pop ficomp lds aam sbb cmp add jbe adc loopne cmp sub daa insb add pop or push xchg dec bound fnstsw fdivs je ret adc cmp fbstp pop mov pop or orps sub sub call data16 adc mov push pop insl out outsb adc adc jno,pt jmp or and adc daa outsl dec jo mov xchg shrb call add ret adc (bad) scas mov add dec and das int3 inc shl pop jnp mov pop dec push fwait je data16 int3 mov nop lret cli inc (bad) sar pop in or inc jb push pop fisttpll sub cltd mov cmp xchg mov mov or bound bound loope pop clc lcall jmp sub cld xor addl adc pop cltd xor inc dec push mov or xor loopne xor inc cltd or ret dec sbb xchg aas jecxz jge sub pop scas jg push loopne loop nop aas jne cmp mov int push cwtl mov (bad) xor cmp call or push orb dec jecxz (bad) xor mov inc push xor mov xchg (bad) (bad) sti sahf fild mov out jge call outsb cld dec and lock movsl and repnz and inc and out or sbb add push fs add nop adc and imul push into xchg push imul add mov cmpsl fstl sti js pop imul (bad) jo or aaa lahf xor adc lock jl test (bad) jb lret and and iret xor enter pop subb mov mov jno aas int3 leave stos sahf or jno sti lods mov push xorl arpl push ljmp gs sub mov repnz xchg (bad) cmp push dec lar jp lds add add and mov mov push clc enter xor out mov mov out mov (bad) aad add fimul dec stos mov or sub and mov arpl mov decl adc loopne mov push dec add mov cmp pop xor pop sbb bnd js (bad) cmp mov icebp (bad) jmp mov sub jge ret loop or lret enter (bad) xchg sbb sar incb out je add pop and sbb mov sbb lods (bad) sti cmp (bad) xor jmp movlps xchg sub (bad) mov test inc sbb lods add xchg and std cmpsb nop sub cld sub pop adc or adc lea cld add sbb ljmp test sbb cmpsl imul nop fxch mov jb scas jl lret test cmp sbb insb cli (bad) cmp sub cmp test fstl xor stos ljmp dec (bad) dec sbb xor fmul ljmp aas mov cmpb mov sarb sub inc push add cmp dec rorl mov fwait enter sbb xchg dec and cmp (bad) fildll js sbb jo dec and jo xor rcl mov into push mov adc xchg or shrb negl les and aam and push lret int add add and dec loopne add and rclb je cmp xchg (bad) mov add add sbb je inc inc mov sbb dec pop or add jecxz inc out mov jl mov add imul aas add lret outsb loop fsubs cmp mov cmp pop jmp adc cwtl mov nop std inc mov insl out fdivrs pushf gs bound test ljmp jae (bad) jo lds fstl outsb jne sbb je mov mov and mov adc and pop adc mov (bad) fcompl mov sbb mov mov jne push sbb cmp xchg jmp sbb stc xchg add inc jne inc das dec pop pop mov fmulp imul popa pop scas or daa xor add hlt add mov mov test icebp je pop mov cmp xchg mov test push loopne sub sbb sbb or popa inc adc dec rorb xchg mov or leave subb cmp cld dec mov inc lea iret or pop lea or pop or movsb inc sbb xor decl sbb mov push and push push test leave push pop shll iret test negb arpl push notl dec dec in ret lcall xlat fsubrs js cltd pop sub and orb bound (bad) lock (bad) jmp or xchg or fdivrl cmp mov mov mov pop inc sbb inc jno mov pusha (bad) sub sbb xor push aas sbb lea stos (bad) aam (bad) mov mov das jle sub popa hlt cmpsb inc mov je leave inc bound mov push or dec or (bad) mov aas mov xor cmp dec imul dec xor sub cmp lods xchg imul sbb mov cmp jg mov cmp pop xor pop enter xor mov lods mov jne fs pop add jp (bad) aad mov and lods mov mov clc ss fcmovnbe mov adc or mov sti push add popf insb loop jp push cltd add jmp xor jp out je push les adc pusha xchg add stos mov xchg sub dec and dec out mov decb shrb (bad) push adc pop xchg ljmp rclb fistpll mov xor roll cmp dec sbb adcl sbb inc sub and adc xor mov push sub and aas push ret adc inc adc enter push lcall dec cmp xchg cmp or and mov dec cmp cmp imul xor scas xor sbb push pop inc sbb inc and bound mov push or sbb push fmull inc fisttpll and sub sub xchg lods jl mov push or bound out jge dec push in sub je xchg out shl and xchg test testb push cmp out (bad) mov mov clc aam (bad) js data16 stos ffreep lret pop ds cmp push add lods or push cli add xlat (bad) jge je jb das aam dec aas fs push jp sar and rorb xchg cmp jmp mov jns inc adc (bad) out out and daa mov je sub mov inc inc adc pop ljmp sbb shll cmpb pop mov or aaa xor sbbl das jl add xlat cs mov jbe cmp mov je sub push icebp add sub push add pop cwtl jp test jne std and lret lcall inc xchg adc and subl push lock push push lret sub add test jno sub lret xchg mov add jp add sub rolb cli dec js cmp adcl or clc shlb lock and jnp mov add sub js mov (bad) cmp test push js mov shl inc inc je or add rcrl fildl mov mov sub push jns stos sar add push enter push pushf incb inc xor sub aam aad sub iret xchg pop js ds add je mov subb push push mov notb mov lret and xchg rcl jmp pop dec test push push test xor enter adc pop push inc clc sbb popa mov inc repz imul add jl xor ret dec fistp and mov xlat add inc outsl lret pop jo sbbl push not add xor in addr16 in adc jb and jae inc or pop cli inc dec orl adc jae mov fucomip cmp dec jb je loopne sub xor inc dec pusha cmp sbb negl mov pop push fdivrs loopne loopne sub call push cld jle xchg mov hlt jmp cld or jp lock fdivrl mov or mov fs sub lock popa data16 jl fdivrs fmull fmull fstps jl js mov and inc rcrl gs call sbb rclb sbb adc xchg sbb push sub addb ljmp sbb mov sub loope dec imul cld and lahf dec pop jl test repnz sbb out jge (bad) push in push xchg pop mov pop sbb sub lods test xchg mov sti and push sub xchg je pop push or push js xchg mov push rolb sbb mov dec xchg pop rcr inc jbe cmp movsl jo (bad) xor sub testb insb ficoml cli loope sbb or sahf cli cmp push sub add fwait jo or nop mov dec rorb xor pop (bad) mov data16 loope (bad) xor xchg insl jl adc push xchg dec jecxz and nop notl rolb ss sarb jg sbb or movsb xchg or outsb mov int3 mov cmp sub jne and push arpl (bad) adc rcrl mov push push js and movsb dec (bad) push sbb add pop xchg push add push mov dec outsb jo ret pop lock inc leave (bad) push (bad) sbb or loope sub sub push xchg push (bad) arpl push sbb loopne cmp sbb push int3 ds adc in cmp add test and in pop jb mov aaa xchg push xchg jno jge xchg shlb mov insl dec inc lcall lock lcall sbb push mov pop je ja mov sub sbb stos lea inc or cwtl outsl push push imul add pusha sub sub rcr pop adc pusha pop arpl add pusha pop out popa movsl movsl add mov push xchg popa iret add add mov outsb or push into cli mov (bad) push mov xchg jle je or ret sub xor (bad) xchg mov add mov jb loope cmp lcall jns push pop daa ret imul bswap adc inc or lahf inc dec mov push add rorb cmp sub addl sub enter or add jbe shlb adc mov test inc or sub mov in adc mov nop pop push mov adc cmp push pop sahf pop popf notb adc push inc fstpl ss (bad) jbe outsb (bad) mov pop or (bad) adc mov jle jb sbb mov fdivrs push ret cmp ret lahf mov jmp or imul cmpsb ret aas les pop sbb inc pop or data16 imul sbb rorb or nop dec in bound in lahf sar mov xor test in dec xchg test sub mov pop ljmp icebp fstps xor outsl jmp and in mov je xchg sub je sbb (bad) push ss add into mov mov icebp mov jl or or clc push lcall cmp mov aam leave js push (bad) ret add mov mov pushf mov les and and outsl xchg push mov add scas je jo and or out ss sbb adc (bad) fidivl cmp adc pushf iret shrl cmp popa jno js cmpsl jge or ds mov cli fdivrp add jo add push dec push sbb cmp sub loope jge add ljmp and add scas and dec pusha jns pop arpl dec cmpsl test dec sbb test add mov pop sbb cld and or jle sbb push fnop pop sahf push xor ret mov xchg sub mov (bad) push mov enter ret fsts cmp pop inc cmp or push push push push xor sub push test mov add sub out lock push jl push js imul push sub mov mov sbb pop jo sub ss and xor adc sub mov inc sbb or xor bound inc loop add pop ljmp js inc push jbe mov jmp xor sub gs fcoms fdivrs gs pusha push fimull stc jno sub pop xor fist and inc push jb pop pop sbb sbb pop call test sub jp mov jmp mov ror lret pop adc sbb pop mov mov jl cld and jo fadd shrb mov pusha add or test cmpsb jbe repnz inc pop adc lock mov int3 aaa pop fildl push mov push jo push push push pop sbb sbb pop sub jmp test ds push mov stos mov jnp lea pop pop adc xor jle jp inc dec es insl jne test fidivl inc push adc nop cmc clc popf pusha test add clc data16 movl add outsl stc adcl xchg (bad) cmp xchg movsb ret sbb xchg addb xor add push movsl xchg jle push (bad) jle sub and add loopne pop inc jmp sbb adc outsb jmp inc jge dec stos push dec mov bound add sub and sub jo test inc fmull ss cmp xchg jl sbb or scas insl subl add jne leave in and inc cmpsb jmp jl jne add (bad) jo cltd push or je jp jge (bad) je movsl cmp pusha add pusha cmp mov outsl fadds add mov (bad) adc cmp jne popf pop jl iret push mov jmp jl data16 std adc adc mov leave lods mov pop ss xor mov leave loop xchg mov mov (bad) mov adc xor jb in adc pop adc mov and dec insb xor adc ja (bad) imul orb (bad) mov cmpsb loopne adc xor xchg data16 data16 and outsb ficomp lds push jmp mov or subl ds aam add inc imul in aaa push jo les (bad) notb xchg inc negl sbb pop stos mov xchg adc jne (bad) push dec mov sub cmp adc jb in inc inc jo adc add or mov mov add cmp outsb dec cld inc js aas add loopne lock hlt add xchg lea popf idivl mov repz sti or fild cmp jmp sbb add mov mov sbb mov out sar and cmp (bad) push bound cmpsl mul mov sub repz jne (bad) mov add mov dec inc push mov xor stc ret push cs push (bad) lret js xchg cmpsb mov pop dec insl or cmp xor push push adc mov mov add or xor mov add dec jne pop inc enter mov jl scas sbb adc je ret jns loopne add fild push jo and clc lods xchg pusha add cmp fbld sbb sbb adc ret jl add inc repz in mov mov mov xor aaa daa aaa push mov xor and pop jp push cld add dec cs inc cmc scas ljmp cmp clc push in sahf or inc sub adc add sub sahf mov xchg (bad) push cld and mov ljmp out mov ja repnz fisubrl pop mov loope mov inc mov push jmp orl shr inc dec or push dec add prefetcht0 add push daa fbld xor mov movl mov lods jp jo sub xchg sub push sbb or mov mov push jns movsb dec negb lock (bad) sbb cmp inc dec push or adc in sbb fs sub adc and in sbb (bad) xchg push xor adc adcl test sub or je cmpl xor xor ud2 fbld jnp dec (bad) inc mov sub aam rcrb test xchg test sbb lret shrb sub sbb je push jbe inc adc mov mov rorl fwait dec fdivl (bad) mov add mov xchg adc and sub rclb jne (bad) jle add xchg inc sbb adc mov and add and pop pop cli xor push jg data16 lea leave dec mov adc push pop dec stos sbb sbb andl push ds sbb pop mov nop add ljmp pop xor js add add in inc test xlat insl addl cmc stos add xor push jle mov stos push ret js xor (bad) adc or xchg push adc mov mov push inc dec add cmp dec cmp xor fs cmp leave mov sub (bad) mov inc jo je dec jo (bad) mov push icebp cmp jl stos sbb mov sub push push cmpsb aaa add adc pop popa rorb jle inc mov clc popa mov and cmpl jl push adc cmp dec cmp lea icebp xchg mov fisttpl adc dec lea xchg mov push call loope scas test lcall inc inc dec dec inc js push jns jo dec ficompl xor movsl add sahf lahf inc js call stc sub cmp lcall jns sub ret cld sub or dec cmp pop add push xor sarl push push cld push std decb mov pop daa mov add mov push or lock add lock pop dec out sahf push stos mov lds cmc (bad) and icebp testb mov or dec dec shlb loop loope jo adc add mov rclb cmp mov sbb push and or outsl add and or inc cmp js push xor add xchg or mov pusha loopne ds and clc test inc adc ret dec lcall mov (bad) sti dec mov ss jl lcall aaa mov test inc mov adc inc insl mov dec inc add mov push movsb out and and ret push rorb pop cmp push push daa sar push outsb sti and push jo xor (bad) mov rcrb loopne mov sub jle or adc aam fstps test clc cli and mov push mov sbb add dec jbe ja fmuls rorb xor fidivl xor pop push pop or pop sti jg gs push cmovs sub mov xchg mov aaa call and jp pop mov inc sub mov rcl and or lea mov mov mov sbb (bad) cmpsb jp jne xor gs aas sahf inc xchg push pop jmp adc jg mov push push ret insb shl aas push sbb and test insb fnop adc dec or add sarl fcompl inc cmpsl ret (bad) (bad) mov imul cmp cltd jmp mov push jp jno pop and push cmp cmc mov daa loopne mov xor xor inc je loop shll and adc jmp loope dec roll test ja sbb add push mov enter dec push xchg sahf mov ret test mov aas and and test jl sub cmp jo lock ds (bad) push xor adcb xchg (bad) jbe cmp and pop push adc inc ss mov or add xchg out loopne adc rclb jnp int3 lods sbb mov mov push rcr dec loopne out (bad) jp lods inc loopne mov pop adc add jne cmpsl sbb sub or inc xchg add push int3 pop dec and nop mov adc mov pop nop xchg add sbb (bad) int and cmc orl adcl mov push pushf mov cmp movsb int3 js adc cmc push test mov sub jmp nop push sarl adc in loope mov pop mov scas repnz test mov add push into aaa orl loop or inc lret adc icebp fadds popa movsb orl mov inc and mov add push or pop xor daa cmp outsl sbb inc pop lock push das cmpsl rol lret js cli rcr push roll je sbb sub (bad) xor add dec xchg inc mov nop inc inc add pop fsubs or jo and xchg xchg add or repz imul mov sub jno or shl sub add (bad) out cs fisubl mov push fimul (bad) mov int (bad) pop je aaa adc js jmp lock jg mov ret jmp cmp jle (bad) cmc iret arpl idivl sub add out or je cmp jge (bad) inc xor push outsl test cmp dec jg call jbe pop inc jb sbb fsubrp out pop or jg adc sub frstor add movsb or mov int je add in lds fld xchg test lds and pop mov mov lahf sub out mov or cmp popf test lret jl cmc sub test mov aas enter lods js mov stos cmp mov or sub mov enter and fiaddl hlt pop js insb mov xchg punpcklbw loopne hlt add mov js mov xorl js adc inc cmp clc loope push inc stc add jp ret fmuls or xor loope clc dec lea add or xchg add insl int bound push mov cltd push lcall jle mov jmp xchg in inc xor and mov mov test call outsb adc lock pop xor fdivr aam loope dec shlb add or xchg pop push sti mov cmp jmp xchg rcrl loopne into les adc cmp dec push imul inc mov loop mov test inc xchg jno sub stc inc sbb mov adc je dec jo xor and std push mov rcr xor dec push xlat mov mov jo add inc loop push outsb and mov jb mov jns pop (bad) push xchg mov xchg nop nop push pop add inc imul pop dec ja xchg xchg movswl xchg test cmp push adc or fiaddl add cmp xlat dec mov dec add jl insb add cli jle inc ljmp jl test or pop cmp (bad) enter test enter and cmp xor mov icebp jmp cmp dec jle cmp jne and xor jg add lock mov pop stc push aad sahf fptan xor add sub outsl shrl sub into cmp push ljmpw sub nop mov mov push jo cld dec xlat push inc xchg pop inc sub daa jno mov fcomps cltd and (bad) xor cmpsb sysret bound (bad) xor pushf mov inc (bad) fcoml (bad) movsb add jbe push dec daa push cmp je bound sahf lret sbb add pop add mov std adc lahf mov dec lret or popf test rclb sub int adc push inc movsb push pushf xor orl push adc or ret and jg pushf adc cmp jle aam pop mov cmc (bad) and fstl and pop mov lcall fmuls das rol push adc sbb ds jo xor mov ss add das addr16 xor pop decb jl loop jns sbb jg mov pop inc cmp jg cmp mov push dec stos add lds mov enter outsb pop mov inc add idivl and or push sub in adc scas daa into lret push sbb sarb and sbb jl xchg cmpsb daa lcall (bad) inc inc cmpsb movsb pusha add sbb inc addps jbe add sub bound negl icebp pop mov jg push add cltd xchg xchg shl xchg sub mov or adc nop mov dec add pop sbb dec push pop sbb jne xor out cmp pop cmp pop or mov push inc (bad) sub or push aaa push xchg inc or cmpl mov jl adc adc or pop inc pusha push adc pop or subl xchg out jge or jmp xor dec jg test stc jg xor rorb iret shl hlt mov inc insl mov lock cld jne add mov repnz into dec xchg (bad) fidivl inc mov movsl push insb xor xlat sahf imul jo jle inc repz addl enter neg lcall mov js and pop popa jecxz sub mov (bad) mov mov mov popa fldl repz clc dec int3 imul mov in jg rolb cmp and les xor mov xchg mov repz fwait pushf int3 ret loope cs mov jg cmp (bad) mov nop adc inc pop push jmp adc mov fucomp enter enter fmuls addr16 cld fldenv sbb test jo pop leave sbb rorb xchg sbb ret mov mov xchg adc lea sbb push cmp push jg addr16 jmp or sbb sub adc pop and lea loopne sub push sbb push inc shr adc or aad push cld mov add js and (bad) je adc jns add add and dec aas js and adc lret lock xor clc xchg xlat jle sti inc xchg mov sub dec je dec jne xchg push int3 xchg xor dec movsb jo xchg sub jmp (bad) dec cwtl add add imul push daa push or and push inc cmp mov (bad) aad add pusha mov or or or dec inc or adc cmp cmp mov mov in repnz (bad) sub call jns sbb sbb xchg mov decl mov sbbl xchg ret jecxz xchg push or jb add adc push and fdiv add div jne mov xchg lds enter les out mov mov cmpsb sub std pop sub add sub add dec and fstpl adc sarb test test addl movsb cmp adc mov iret pop add jae add dec pop inc jne clc data16 xor ret mov adc jo jne jne cmp outsl daa jnp mov sti jne xchg adc rorb addr16 rorl or mov xchg adc push das ljmp jg cmp adc int xchg sbb fnstsw push or jmp or pop pop pop inc jno or or jg mov add (bad) push adc dec inc add cmp push adc adc adc movsl cld or push clc mov dec les mov rcrl lahf loop repz aam xchg lea add xchg inc out jg adc jne xchg or cmovb inc in test mov rcrb and into jbe sbb mov aad inc push stos insl aaa pop push mov mov and jle je or mov pop adc mov inc loope cmp add mov add or sub nop inc dec loope sub js sbb xchg test jns mov (bad) fsts aaa xor and test pop cmpsl pop push xor push jo mov ja mov sbb push inc fwait mov lock ja push pusha scas loopne dec add push outsb mov sub popa scas or cli test pusha stos in ss add and adc push mov into ret cwtl in (bad) rep pop jmp jns pop add pop jge jne push mov test call and sub sub sbb xor push inc aaa and mov xchg call jne dec or fstpt adc jmp les jae lea push adc outsb lock ret insb pop ffree pop sub jge addb dec sahf enter or add stc int3 or add push pusha cmp xchg out insl sti nop push rclb jl xor adc rclb loopne cmp push xchg sub and dec pop xor adc loopne cmpsb mov test shlb mov push push mov push mov scas nop call push ret sbb xor xor icebp shrl mov push mov sbb cs jle int jle xchg fisttpl push fs xchg jo lahf fdivr xchg add cmp sbb inc divb xchg push push insb adc mov lret call insb or bound pop or lea repnz test adc or lahf stos out mov xor inc adc and mov xlat test pop stos test inc inc and jp inc adcb push and jmp in mov add js jno push cs add lea leave pusha imul xchg int3 xor inc fsubl cmp jp outsl xor pop dec cmp ja in (bad) and and mov les pop or adc clc push pop ds lea xlat pop data16 jp lea pop xor adc movb test xlat rolb mov xorl (bad) leave pop add xor sbb ja jecxz push jmp mov rorb sub cmp movswl and push add cs pusha into or dec pop cltd mov jl sti jg sub arpl cmpsb aam cmp or int3 mov test push pop shrl mov jecxz sbb xor cmp dec je lcall rcrb sbb jmp mov cmp or pushf adc push jae jae ds std movb js out popf mov dec aad test mov add cmpl push dec sbb adcl xchg and sbb or dec cmp fild push test test add mov aam test inc push pop test lock sub and push mov push test jo lret cmc pusha movsb xor and mov in mov aas mov add out jl dec pop cmp dec inc lcall clc sub push in mov rcrb push mov xor mov xchg jmp push lea repnz ss daa cmpsb xor rolb push leave sub inc mov aas test push mov mov mov test push sbb lsl mov add jg jo sarb pop add inc inc sub dec sub fisub lcall jmp lret xor cmp xchg sbb add pop ja loop es xchg pop dec jo test lock inc or xor jo cmp testb pushf or push in (bad) rclb mov xor ret push sbb jb shl inc push adc jns popa inc loopne int3 jb outsb jp inc cmp fcoml xor xchg lock mov add arpl lods (bad) mov xor inc mov and add jmp mov (bad) (bad) push movsb xchg rolb sub adc push or in jecxz adc add xchg cwtl jo xchg movups jno cmp je sub add (bad) mov iret call xchg rolb inc je,pn inc pop fdivrs loop push mov mov lods scas mov fs addl adc xchg cmc pop pusha mov mov adcl xchg sub dec outsb pop je push xchg lcall jecxz or es cmp sarb add popa outsl or sbb test mov dec imul cwtl hlt add loop loopne inc in lret cmp mov adc mov cmp rorl adc sub out mov inc roll pop mov dec mov dec sti fcmovnu loopne arpl dec imul and push push mov sbb mov test cli cmp lock push push arpl rolb sub sub dec cld (bad) push xchg out push lahf dec aam pop outsl push jecxz add add mov das sub enter dec xor xor inc jae out sub aas add adc mov ja sti push loopne inc add xor (bad) scas stos or les xchg pop fstps push push push sbb pop rorb adc dec add sarb fs prefetcht0 loopne add push cmp emms adc pushf xor cmp addl out push adc imul inc mov xchg mov pop mov mov and add and movl and sub add sub rcrl aas and or sbb sub or jmp loopne in mov lea fiaddl loop xor call mov sbb adc loopne adc fdivl pop sub cmp clc mov je add inc jne (bad) popa lahf enter (bad) enter sbb out or pop inc pushf scas mov sub or fadds cli dec xlat iret enter jmp mov fldcw or je and or mov pop rcrl or sub cmpl push enter scas cmp adcl inc dec adc sbb adc loopne (bad) push add or add ja xlat jb rol (bad) mov ds inc xchg dec enter dec jo xchg and adc aad bound xlat xor push cmp out cmp fs loop and and xchg pop sbb adc add cmpsb ja push inc xchg mov and stos stos scas mov xchg add rorb cs stos push and addr16 outsb fldenv repnz or push add add or fcomps pusha addb push mov inc (bad) lret adc sbb lea add jno sbb push xchg fwait mov add dec jbe mov test push lcall pop in sahf xchg addl sub push jne mov xor inc inc dec add rcrl bound flds ror int or mov mov pop (bad) jae inc rorb ret int3 or dec mov shrb (bad) fnstenv nop nop mov push jne push imul ljmp aam aad or not push outsl mov clc dec and mov popf add xor push int3 lds jae fcoms push and push loopne es dec xor push leave call inc xor push jo jecxz sub push les add sbb js cwtl cmp je inc repz add mov fisub icebp fcom inc aas add add andb adc shlb mov push cwtl sub xor rorl in and mov mov addb out push inc dec mov jne sbb or push ljmp pusha mov aaa sub inc shlb imul sub cmp xchg jne clc and pcmpeqd sub push dec add jae jle fs pushl cmp jne dec cmp pop hlt cmp and call ljmp incl jae lea sub js inc and and test call pop (bad) adc (bad) or dec push sub stos jns popa adc test loopne faddp cwtl pop sbb sarl push add xchg lret dec outsb mov rclb fcomps mov xchg mov lret and mov cmp (bad) iret cwtl inc mov inc mov inc cmp jb rcr neg insb or push add inc sub xchg (bad) jo loop and inc mov fisub fistp sub sbb imul xor dec push pop lret imul sti adc lret je or sub add inc inc rorb js mov inc add dec lret movsl cmpsb xchg cs push cli loope inc dec sbb adc loopne push push ret pop xchg sbb (bad) cld ja shr sbb adc pop sub add jl jb jb adc and movsb lock (bad) mov mulb mov push and mov rorb jg jecxz dec mov je test rcrb push mov xor xchg xchg mov sbb mov nop cli movsb cld ds and mov mov jo or call icebp es push adc ret sub mov or lcall shr mov sub and cmp lret sbbl add mov xor and mov mov pop dec xchg cmp xor inc movsl dec in push aas adc (bad) cs push cltd add jp push popa push xor sub sub xchg cmp out in test xor shr push jne lahf and clc jne lret and in (bad) testl out dec insb mov mov dec sub push add push or jne sti orb inc (bad) sub (bad) shr shrb inc pop sbb inc sub in mov push dec lock clc sti sbb fstl in pop cld repz lods and pop cltd (bad) sub lahf call js mov je pop xor or inc lahf push xor arpl push dec (bad) into pusha sbb in mov dec rcl lods sbb cltd push jge cltd sub jmp push or add test push xchg jne dec add xchg dec mov push sbb mov cld faddp inc or mov dec sub movl nop xchg inc fiadd pop inc cld je cmp cmpsl jmp int push aaa fs dec test inc mov pop inc call adc stos mov lcall and push add int3 inc jnp fisubr add pop ret sub fcoms push jecxz and mov stos loopne and or sub int3 lods andb mov mov sarl test mov dec xor sbb lds pusha sub std cmp ret adc addl jo aam mov cmp dec rolb add cmpsb push inc push sbb jo push inc xor dec fwait add sbb mov and popf xor mov shrb sbb fmuls js jg mov int or repz orb daa je adc int inc mov test cmp mov push or mov pop jle pop gs fimull push or jmp mov dec adc cwtl adc adc stos mov xor mov or push sub jbe andb aam outsb push push ljmp pop pop es cmp loopne or mov imul dec inc add add loop sub lahf xchg add inc clc lret inc cmpb out sub ret pop in dec inc rolb sbb test jle mov movsb jecxz or or (bad) ja mov mov jge (bad) xor mov fbstp mov jmp mov jo test push gs sub xor push xor xchg push sahf test les mov das ret xchg mov adc pop outsb cmp imul add xchg xchg pusha xchg shl pop push loopne dec xchg push push rcl pusha cmp int3 or cs push push add mov shl sahf pop loop jnp mov push xor mov dec pop sbb sahf sub and test push sahf mov cmp xchg loop leave rolb std adc inc ja fmull sbb std es (bad) push sbb iret lods push add out je lods icebp and imul test or cmp mov shlb sbbb je mov data16 push sbb add mov pop xor js mov push imul xchg mov cmp mov lock int3 add repnz pop addl cmp xor lods dec push mov sub xchg dec push cmp pusha cmpxchg sbb cmpsl outsl orb sbb sbb jg push and push push cltd rclb into aam movsl out ljmp call arpl dec jl push hlt xor and cmpsl aam scas cwtl popf loopne sahf cmp mov out inc or sub scas add mov cwtl popa loop adc mov or jmp or sarb mov push inc dec dec jno add scas add lahf add mov popf cli movsb xor subl (bad) loopne xor pop pop dec add inc nop dec pop inc push jb mov add add push cld jbe push pop ffree jg sub mov mov ss cmp (bad) fsubrl inc sub repz rolb mov sbb (bad) jb jne mov xchg push or (bad) scas mov enter jne sub add push ret dec divb out mov arpl out add jmp in push in push pop nop mov add fisttpl sbb cmpsl xchg pop sbb xchg fadd mov push add call add scas mov mov mov pop (bad) stc sbb (bad) popf jo,pn or mov inc test movsb fdivl fs mov mov pop or xchg cltd cli jp jl inc test push adc add lahf sbb rcl pop jle cmp and into jl orl push stc sub and insl inc cmpsl inc xchg and (bad) lods mov push aaa popf and fcom (bad) (bad) mov xchg mov cli dec stos addl xchg and xor mov mov jo outsl cmpsb in adc push or jne (bad) stos (bad) pusha stos dec sub mov inc jns andl and pop mov subl xchg inc std nop mov idivb or je xor add decb dec sub popa je ds cmp (bad) mov pop mov mov mov jl push and inc sbb lods inc mov scas and jne mov mov fdivp or and sub push mov adc out sqrtps shl dec sbb mov sbb iret jl sub mov mov push dec or loop sbb cmp pop jbe sub adc out sub adc push add pop inc repnz aas jo cmp in mov fildll sub mov jne mov sub xchg jbe push push ret cmp jge ljmp sahf nop dec pop mov sub adc mov xchg or test mov jbe out adc dec cwtl push (bad) cmp inc push xchg push outsb shrb and pop test test rol (bad) je or mov js jmp mov je stos daa push xorl sbb sbb (bad) sarl or lock push jns push or and push dec arpl mov bound add lods ret or jle and mov sbb mov inc sbb and dec pop cmpsb sub cmp sub dec and add insb or dec mov into inc cld add or xchg jle hlt insl sub and mov xlat mov insb in jge dec and xchg test mov and xchg sub xchg xchg inc xor pop pop dec cmpsl lcall add aad sbb pop inc jo pop aas es movsb xchg rcrb scas imul inc dec mov bound xchg je dec sbb add pop stos bnd inc xchg pop cmp out add ss jge test push jl jle (bad) jge divb mov inc dec sbb sete cli inc aad adc push mov imul icebp xor subl add and test push aaa lock mov enter shl xor add dec sti test push push jecxz or imul cmpsb les fcoml mov and mov rclb inc jo sbb cmp push jle loopne das lods add sub and repnz aaa inc mov gs jg xchg cmp scas mov push or xchg sub mov or cmc divl mov add fildl cmc (bad) stos ret rcl jne mov mov insl or shlb test push mov or mov inc cmpsb push frstor cmpsb jo (bad) and mov cmp mov shrb nop push pushf pop movsb rcrb sbb add imul pop scas fsub into jle xchg je data16 shl nop and push inc inc push es push nop bound lret lock in mov iret push dec and push jp push mov or popf push add mov push and jno inc cmp sbb (bad) mov int cwtl dec pop mov push iret and mov scas jmp jb push push test dec cmp sahf lock add jmp loope (bad) mov fsubrl rcrb dec test popf cld push dec in inc repz shll test xor cmpsb sub bound xor adc das add jae mov sub clc iret shr cmc jno lock lock pop sbb push lock add sub insb push movsb (bad) ds push popf vmovss cmp dec mov mov sbb inc jns adc mov shlb xchg movsb test aad outsb pop mov rcrl sbbb stos addl out sub mov pop mov (bad) out mov mov dec jb sbb mov dec cltd mov push xchg add ret xor mov shlb pop and mov inc rclb jno stos mov loop xor xor dec in sub in imul pop jge mov inc cltd out sub loop (bad) fwait es pop setbe mov gs lret inc lea xor (bad) shr shl dec lret shr jle lret lcall jbe aas je jo ret out push inc pop pusha hlt and mulb cmp mov int3 (bad) (bad) fldl lods add scas cmp mov and inc xchg xor jo add aam add testl and imul add aad sbb pusha (bad) rorl pushf lret push adc pop (bad) sbb test mov sbb dec inc loopne mov ljmp dec jmp sbb xchg adc sub push and es inc pop push pop or pop imul mov (bad) jnp dec in ficomp sbb and sub inc cmp lea xor or jl xchg out cmp sbb and movswl xchg test mov in (bad) and pusha xor pushf lret ja or loopne rol call push scas dec xchg lcall pusha xchg cwtl push or push add push lea shl lcall jle inc (bad) ret jle insb lods add ret dec sub push add pop out push pusha (bad) lea dec clc test push sub xchg mov pusha pop out mov lcall cmpsb or ds in out xchg mov adc pusha and or cmp mov or rcll inc pop mov pop dec pop xor pop lahf sbb add push push sbb pop or push cs lcall outsb push mov ljmp sbb or mov sbb (bad) xor ret push rolb fs sub or or xchg daa adc fisttpll add (bad) or jmp call jo mov adc movups imul or fs inc jge mull xchg dec xor fistl loopne jp rclb pop cmpsb popa pusha push fcmovu push aaa inc pop jne stos inc in add int add adc jnp pop fsubrs rcll dec add dec loope in cmp std sbb enter inc aas sarb outsl mov fstpl sar inc mov mov inc push mov in loop mov sar dec cmp (bad) mov roll adc sysret and pop stc adc mov je pop clc or pop ljmp add add rcrb sbb pop xor sub xlat or sub push dec (bad) push inc movb add sub lcall add jge adc jmp fldt adc nop insl hlt enter mov mov cmp (bad) in clc mov sub jmp push sbb push push inc or xchg xor mov add sub loop inc cmp inc add nop out (bad) and lea mov xor xor or jbe in pop cmp adc xchg ja mov fdivs inc or xor push out xchg jo inc push call imul lea jmp insb mov adc pop sbb jecxz mov adc mov scas push pop lea (bad) push out jnp push loop adc out push add add sub (bad) mov sarl add add arpl push add cs loopne gs rclb add mov adc mov add je mov jo fistl add jbe lock ss sub out sbb mov cmp pop lock sub and push dec in and daa jl sti jle (bad) out mov pop pusha adc or push mov cmpsb jmp les mov and cmp out and subl mov cmpsl push mov rcr (bad) lock fdivs pop and (bad) mov add adc lret cltd jns sub sub mov sub sbb stos repnz mov pop push lea inc hlt cmp test mov movsl and push or mov mov push aas mov xor and aad ja mov or testb pusha addr16 testl xor lcall adc and pop jg sub add adc notb mov outsl repnz xor pop pop lods out lea adc jle jmp mov adc cwtl inc insl imul dec roll pop xor stos push or mov and mov pop push push sub sub daa insb cmc mov jecxz int3 out push sub jmp daa add push push sbb add push sbb cs and test jno cmp xchg sub push push push adc sarb xor add adc push adc je in xor nop ds xor roll add add repnz mov (bad) adc rcll jp (bad) jbe loopne mov or shl sar sub stos or dec inc pop clc add arpl gs fsts sbb xor add imul fnstcw push (bad) std or cwtl movsb shl ja lods pop mov sub lahf push sub adc jmp xchg sysenter and rcll add (bad) (bad) xor pusha stos and sbb mov imul out jnp arpl cmp pop pushf add dec mov sti stc add add repnz sub or push add ljmp std add dec cmp xor test je rolb fimull jo xor pop and add xor push imul cmp leave jae xor and and inc adc push or or divl lock imul adc push and pusha fsts (bad) xchg jb test xor mov mov and and xchg jo inc fmulp sbb xchg fnstcw or adc push xor rclb jp and jnp push xor rcr push xor loope std sti out xchg push xchg fadds fsubs cmp add adc lds les adc mov and fadd push pop inc inc and (bad) test inc pusha adc pop loopne neg xor mov adc cs sbb push push or shll xor fsubrp push or dec push or ds ficom sub adc fstps push fimul mov sub pusha sbb and test out push adc jbe in sbb and andb sahf push or rcrb loop dec (bad) pop pop pop sbb std movsl dec sub push and pushl je scas or or inc clc or fsubs cs adc in add sub adc ret adc lcall stos or xor jmp cld jae push ds sti mov imul and popa push mov and and test insb jo scas stos push popa lock and add adc sub pop sbb aaa lret aas or in (bad) mov add push mov mov mov cmp neg ficompl xor scas add and add repnz add enter jo mov mov sub mov lret movsb inc xor sub push loope iret fisubrl inc jge sub mov cmp loope or ljmp stc clc pop rolb pop rclb add dec adc test or sub adc sbb add fwait or push lock sub jne rcrb fs loopne xchg xor stc inc mov inc sar inc mov pusha xor lock mov dec inc cmp aaa scas sub add jecxz sub lcall and add (bad) mov inc dec clc push pop push cmpsb jge pushf pusha lret ljmp rcl mov mov cmpsb mov sub imul shrb sahf and sub js sahf pop pop add add cmc outsb dec xor dec mov imul or in rolb push mov imul test roll inc mov test adc addl xchg fisttp jns pushl sti sar inc and pop sbb call rcll add stos fs (bad) pavgw (bad) es (bad) xor push add jne adc test (bad) cmc test sbb add into mov xchg mov or fisttpl adc notl and xrelease and jo inc adc sbb pop and sbbb test sub aam or fidivl (bad) or lods mov ret dec test xchg int3 add adc and mov fidivrl jl loope xchg xchg arpl add or push dec and daa int3 loop call jp mov dec fucom inc sub fisttpl mov push enter mov and sbb jo push call jl adc add int3 enter mov cpuid push aam cmpsb cli push repz clc push (bad) sbb pop push cltd mov loope pop cli (bad) push add pop js imul dec xlat jns mov push mov pop aaa jb sbb cmpsl mov pop push repz orb dec adc or jp fldcw imul add pop pop jne hlt lret inc push push and fisttpl (bad) or adc or inc aad add and mov add loopne mov xor jne lods repnz (bad) adc pop add loopne iret rolb in aaa push pop mov dec or xchg test mov push sub jge adc and repnz mull stos pop aaa aad mov daa mov mov push loopne push fdivr cltd sub push adc lea pusha test or aam mov or rcrl xor or pop or fs xlat (bad) pop add (bad) aam dec push jecxz mov mov mov int3 add or sbb adc iret dec cs jo mov cli xor nop cmp sub cltd insl icebp sbb xor mov insb sbb sbb mov dec (bad) es popf je jmp into movsb adc fidivrl adc adc es popa jns pop fsubrs lcall pop test sub dec sub mov sub mov add test bound jp jl ds dec mov sbb repnz sbbb inc mov shlb xor imul sub or xlat inc sbb or xor cmp sbb js ret cmp mov in mov sub into or cmc inc movsl adc mov pop add or inc cmp loope sahf movsl cmpsl or and xchg into or dec iret and sahf pop fwait cli adc dec add ljmp and or xchg popf mov add jno jp add mov sbb bound rcrb lret inc inc setb mov and jns or xor add iret and cmp shr dec push outsl ljmp or inc cmp mov pusha sbbb pop repnz inc js add icebp pop loopne mov fldenv loopne into fbstp mov mov push inc sub jb outsb jmp insb pushf aam call xchg fwait mov push sub and add push pop jbe pop push jb aaa push xchg daa jnp out adc xor mov int3 inc push push xor or or sbbl mov nop add jl out add icebp mov jbe fidivrl lret cmp inc cmp adc sbb mov push cs movsb lahf (bad) jmp push or jg add cwtl add lret mov cli dec xor mov sbb in jecxz mov test inc mov adc and loope icebp out add or nop cmp leave fsubrs push mov push cld nop frstor test sbb add fiaddl sbb mov cs adc (bad) cmp mov mov or ds incl add xlat xchg fbld pop sub cmpsb xor rolb loop call es adc jle xchg movsl sahf nop adc sub ss jmp push cmp mov cld push jbe or mov mov xchg xchg push lcall add pusha loopne sarl scas jno addr16 repz pop and add or and wrmsr test (bad) imulb mov rol out outsb incb cmp clc mov cmp inc adc xchg add or lock pop push sbb or dec loop jge das push dec push dec sub loopne add repnz push pop sbb xchg xchg test in push push icebp test outsl pop sub cmp outsl push cmp cld cmpsl mov jp (bad) je adc cmp pop aam inc or add addr16 loope or mov mov mov sub adc lea addr16 inc or jo sahf pusha cmp cmpsl shrl sbb loop scas stc notb sbb push and sbb adc movaps jl push jbe fcoms popf push push fbstp imul and call mov jno cmpsb push mov repz rorl jge xorb inc rolb jge cmp and mov adc jl and mov dec ret adc mov mov lea lret lea mov mov inc ucomiss adc iret adc gs mov add jp in add add (bad) xor sub cmp mov lret adc push push dec pop leave and pop or add xor pop fnsave les jge push or test push lods or stos cmp mov add or scas or pop or or mov xor pop mov mov rcr xchg aas pop adc add xchg pusha push and jnp sub in incl push imul inc aas pop mov xor inc xstore-rng cmpsl (bad) xor adc push cmpsl je pusha or xchg mov roll add and or jge add das push or push sahf inc xor jb push push push adc jp inc das or out repnz xchg dec call pop sbb fs repz aad inc jne sbb jmp mov rcll roll outsb push fcoml aas mov orl mov jg ret sbb (bad) cmc sub cmpsl mov sbb add addr16 push and dec push and icebp add gs ret aas or mov imul xor adc add mov jle adc cltd dec in sub jae ror jns jb stc and cwtl adcb xor cmp adc out xchg dec or cmpsb (bad) sbb push loopne xor xchg or je rolb rclb inc rep lock or or xor dec mov pop or pop mov sbbl pop leave dec pop rorl or mov dec ss dec mov dec cmp into or push inc (bad) jl mov push (bad) ss cmp xor jo or clc movsl inc xchg aad xor dec or add inc mov cltd xchg test sbb and rolb fstl add sub adc push jmp add movsb imul add stos pop mov sbb mov test mov pop push dec call sub mov push lock push movb jp flds sub dec push inc pop cmp xor xchg xor mov sbb cmp sub inc mov leave dec fisttpl xor stc pop je sub pop add (bad) dec or xorb mov and adc mov js lods in cmp push dec cmpl addr16 lock push aam dec push and sbb cltd movsl rorb mov or xchg rcrl lock sbb dec push jbe mov arpl lahf leave or mov aas mov mov testl or mov mov dec outsb sub mov es pop incb xchg inc pop mov xor (bad) outsb shrl and jmp repnz in insl xor xchg dec mov mov mov pop dec and test arpl sub lret add dec pop cmp mov sbb dec push add cmp lret add and add cwtl inc xchg pusha or push push push insl sub js std jmp push dec (bad) bt aaa in push fimul sub nop adc adcb lods inc loop xchg clc pop enter and je push lea rcrl mov jmp jl add or or pop or adc pop mov and and ds decb paddb lock or or cmc inc sub fstl push fisttp or mov fnop xchg add push movl addr16 add or xor xchg fsubs and add push mov inc and jb imul mov inc cwtl sbb (bad) repnz adc mov push mov inc sbb cmpsl or cmp inc je add and test sahf pop outsb mov adc loopne movsl pop bound mov or rcrb xchg subl mov jns dec mov and stos subl fcoml push push mov inc push popa push cmp xor sbb mov lock loope add sub and scas pop or cmp lret pop inc aaa or xchg pop xor clc sub sbb aas dec shlb ret xchg xor pop adc and pushf loopne cld sbb sub fildll pop notb inc pop pop mov add addb and cmp dec (bad) outsl hlt adc push mov lods shrb add and xor and pop int notl lret mov mov shlb dec dec xorl cmp sub jmp cmpsl pop inc and pop mov mov xor inc xor (bad) mov mov pop icebp pop (bad) loope mov adc rcrb sbbb push or andb mov lcall and jecxz mov mov xchg insl add pusha andb jecxz xchg pusha mov ljmp sub ljmp ror adc add add out je (bad) hlt mov js dec push jp ljmp or lret and sbb push mov stc inc xor sbb mov lods jl les sbb mov jecxz mov add mov cmp (bad) jb cmpsl adc xchg add aas es ljmp mov xchg lcall pop rclb mov jp mov jp movsb mov xchg fisttpl sub call or lcall sbb or pop mov fiaddl js xchg and adc nop mov add xor int mov push pusha add xchg or or mov aad out inc sub lods popa mov ds add push je jp mov jl ror gs dec dec mov mov xor fdivl lods mov jae mov xchg jns cmp loopne mov xor push sbb push push inc xor mov sbb add cmp lret pop or mov pop push and inc scas inc lock pop shrb add dec adc mov test mov or jo cld loope movl fs aas lret mov or insl je rclb pop push adc pop sub jge stos jae je and mov push mov test rclb adc movsb dec add imul dec cs jle shl mov inc dec loope enter mov jge (bad) icebp fadds cmp push push adc mov xor test mov stos adc xlat sbb addl jl mov fldt pop pop sbb and test mov sbb lret das pop add or andl xchg shrb jne (bad) or xchg dec in iret gs sbb pop cwtl mov inc adc and add mov sarl xor sub repz jbe insb pop bound sbb mov rcl stos in add sbb mov pop push cmc push or and sbb mov sub adc add outsl pop mov jbe pop test push pop js cmc jno lods test jle add (bad) mov cmpxchg pop push iret inc add inc pop insb pop fstpt es push and les cmp pop clc ffreep or sahf fiadd inc xor or jnp lods push cmp fsubs pop aas sbb sbb cmpsb xchg inc es mov aas add loopne pop lock dec gs sbb lock xor pusha pop test push pop pop push and inc jmp mov ret pop nop push jnp insl add jno lahf sub mov jnp sbb (bad) mov adc and mov inc stc jecxz mov pusha sbb (bad) dec pop push pop xchg cli sub cmpb inc movsl test and pop inc loopne dec sbb outsl sbb (bad) or pop adc mov mov imul pop ss add insb inc mov push mov movsl inc xchg xor dec jae and lea or adc mov xor popf rcrb fmuls fsubrl xchg movsl fiaddl jne pop add iret mov iret inc (bad) lock mov movsl test or imul daa mov xor xlat test sti fnop jo sbb adc int3 pop xor je (bad) or cmpsb sub mov rolb ret pusha jl xor add push enter mov (bad) cmp push dec xchg into popa push add xchg sbb dec fbstp inc shll dec daa shlb and cld mov aad add clc mov cmpsb adc loope insb jne int fs xchg (bad) gs mov push in and and pop das pop jno dec push pop test inc dec data16 lea call popa sbb xor push push addr16 (bad) cli push cltd push dec add dec sbb and aam roll push cmp orl push fiadd in sub xor divb ret xor mov pop adc cmpsl in sub in inc out daa push inc sahf rcl push sbb mov adc andb popa dec mov push cmp sbb or lock adc fildl add xchg and dec inc fstps and or sub cwtl push mov ss dec les (bad) movsb add jl pop push imul mov faddl pop xor repz je sub sub add gs add ret add inc jmp movsb repnz cmp inc outsb les ds pop (bad) push push and xor inc xchg into xchg mov xchg insl xchg pop add ss pop inc decb mov cmp jne xor fimul add adc in lret ret ret cmp ret (bad) and xor push pusha int xor test add mov and add or clc mov lret cwtl or inc jl ret pushl dec add inc cmp dec rorb push mov inc or (bad) rcr push add cmp rcrb push inc dec fs lret addl sbb pop mov cs mov pop pop push adc das shrl pop push inc inc adc sub int (bad) push dec clc jne sub lock loop popa dec add pusha add dec outsl popl mov inc push cmpsb lcall push loop hlt dec inc or adc xchg push std pusha inc imul inc sahf imul and nop sub iret enter and sub jmp loope push leave push or ret or nop or add push das arpl and push sub je stc orl mov sub mov movsl xchg or and xchg pop cmpsl xor and loopne inc nop imul add das insl stos and add jo inc xor (bad) inc xorl dec cmp rcll dec js inc push mov jns fwait lods adc inc dec scas mov add dec or movsl pop inc into andb icebp xchg adcl push add jecxz dec inc push pop daa sub jae adc add sub orl or adc lcall sub pop sbb jecxz sub add rorl and scas or add outsl lahf testb adc push incb ss cmp ljmp int cmp mov xchg push xchg sub xchg nop loope inc bound add out ljmp (bad) xor jmp ror leave outsb adc pop push fdivrs cli mov mov pusha fs out xchg dec ljmp add xchg dec or fs xor xchg mov loop ret pop fcomps push pop rorl cmpsb sub stos xor das or sbb mov jo xor call pop add inc jns je nop les adc dec mov or jmp inc mov (bad) jecxz pause nop adc test loopne aam or push xchg sub and inc leave dec lahf or cld push sbb not (bad) call test ret test test fdiv cmp loop cmpsl add sub jne sbb sbb adc sbb mov add lock push jle repz pop ret and mov cmpsl repz pop sbb (bad) xor (bad) jge testb jne inc mov fsubrs les je dec or rorb inc or in xchg and xchg int3 roll wrmsr das mov add movsb lret and ret movsb sbb sbb imul addr16 sub add jae cmp sbb sti dec movups dec push jb xchg cmp or flds lds mov add icebp adc mov or fs adc dec stos mov push fs add scas mov stos neg lret ret or pop inc lahf lea shll (bad) mov outsb xor cmp rclb mov add sbb add jle dec sub adc or add cli pop stc or and sub adc enter adc sub or xchg mov inc mov lods jne push xor dec adc out (bad) sbb xchg mov xchg push adc adc pop in jb out dec mov sahf add cmp add push and loopne pop leave jbe and outsl jbe insb xor xchg inc sbb dec pushf xchg push xchg or pop push sahf push xchg and inc inc leave xor dec jae inc dec xor enter push ds add xor add and xchg adc imul jge jp,pt daa push cli addr16 sub out push mov xchg xchg pop sbb push and push push xchg and test addb pusha mov mov ror rcrl stos add test mov iret clc or (bad) dec push arpl pop sbb popa pusha push jo (bad) (bad) push sbb sbb lcall push orb mov (bad) push add push insl xor jno pop jns aam sarb cmc cld mov or xchg sub les std test out or fcmove push dec jl ret xchg fcmovb pusha mov adc iret dec or pop iret lods xor and pop popa pop adc int or call adcl mov push mov (bad) rorl push cmp dec sub push out pop xchg popa mov push xor xchg inc xchg mov or push mov inc xorl inc inc ror xor mov lahf imul add mov mov fist js or lock and xchg nop cltd or xor in les sbb stos and mov nop cld sbb nop popl dec pop lods adc mov (bad) mov add xchg sub lahf testb add ds xchg (bad) aas mov insb imul stos inc repz sarl pop dec aas inc xchg dec mov or adc pop adcl int3 js or and test sbb andl pop push dec mov das (bad) or pop push cmp cmp or sub daa (bad) rol sub test sub push cmp fs pushf jns jns cmp and dec mov sbbb sub sbb pop inc add jecxz (bad) aam and mov or jbe (bad) adc pop push test dec push repnz push dec inc repnz push leave add inc test daa xchg sbb enter mov inc mov ds or xor insl das inc dec push lahf add jp jp mov lea xchg daa xchg jne cmp xchg dec stos jg movsb cmp add mov mov nop test xchg pop aad fidivrl jp fcomps push push stc xchg adc repz hlt cmc mulb push idiv stc nop inc push sbb sti cld push push sbb incl mov dec inc dec inc addr16 xchg dec mov cmp es cmp ss push rcll pop inc jecxz adc cli ja mulb cs push pop or sbb (bad) fist inc add shlb call sub push add mov or pusha push aaa movsb dec adc xor or jmp ret rol add push test cmp inc add subl inc mov cmp adc jecxz ret test ret es (bad) dec (bad) push pop mov and or adcb sbb cmpsl and cmpsl and bound imull or adc psrld dec push and add and add sbb add mov xchg dec add mov stc push cltd mov (bad) (bad) jmp or outsl xchg in inc pop add lock inc test or outsl adc ret cmpsb sub dec dec dec orl sub and dec inc movl add sub dec mov push dec mov sub dec orl dec mov xor sbb inc scas js or push mov mov leave push xchg and inc dec mov and pop fild xor pop out int3 cli add data16 cmpsl stc push mov out sub lods xor cmpsl stc sub lret add cmpsl stc ficompl fist mov and xor out and cmp cli sbb subb dec lods mov sub add sbb xor cmpsb sbb sbb inc pop stc es cmp xor sub jmp scas inc (bad) shrb (bad) push fcmovb jbe add int xchg inc mov mov xor fwait mov movsb push xchg insb das jge loopne rolb inc push hlt pop test rclb jno gs mov dec add add test shlb add je fdivs and xorl dec popl push inc sarl dec sbb test xor popf fs and add cmp es cmp pushf adc pop sub dec pop sub ret inc lods ja dec push mov xchg addb aam mov sbb andb insb (bad) popa adc push jmp fnstcw push pop ds xor pop les aaa in movsl or xor fisttpll sbb xor and sahf add mov nop lcall mov mov bound jl arpl clc jnp add imul push mov call xor mov add shll dec sub xor or mov or sbb enter adc xor ss pop out dec pushf and sub das xchg adc mov jl insb test push ja add jg xor dec or lcall and stos xlat push mov test movsb xchg and adc xorb sti lahf dec mov jle jae xor das rclb add icebp adc dec sahf inc sbb (bad) sub sarl xor cmp dec test pop add call add ds into clc push test xchg clc pop rcrl push mov (bad) mov mov add add xchg push outsb xchg test lret sti mov out sub cmp push cmp pop or loop or lock lea in cmpb mov cmpb or add lahf pop add scas les fsubrp or (bad) test stos pop (bad) nop push pop lahf loopne sbb negb push rcrb pop nop add aam mov xchg and pcmpgtd imul imul (bad) add rcpps ficompl add lods sub rcr dec fistpl inc pop sarl jl push pop xor inc fisubl cli cmp or insl enter syscall mov jb and inc lods and dec add mov (bad) (bad) push adc xchg cs pop jb rolb das sub adc adc insl ret ret mov jle or jmp push dec arpl and mov addr16 sahf pop mov stc mov sbb inc dec jno out (bad) bound mov mov test push and xor pop jg mov xor mov or out add cmp jbe aas roll lret stos mov bound sub mov lahf add popa add sub mov dec or (bad) shlb add adc cli mov mov cmpl add bound mov repnz call mov adc jl sub mov mov pop or xor jns lods adc enter add orl fadds cmp inc cltd and sbb xor mov add mov mov jl rcrl sbb cmp mov dec push mov push push push cwtl xchg mov push jne xor adc dec sti cmc cmp test mov jmp sbb push pusha popa add cmp pop and sub and xchg popf mov in pop sub sub mov and mov mov outsl mov add (bad) jae pushf cmp or mov es pop adc inc xor adc addl push add pop pop out jmp clc and in or dec xor sbb je or or and and lods dec sbbl mov es ljmp add or push mov popa (bad) popf mov pop mov push lahf xchg and sahf into sbb push and test dec jecxz and ret xor pop jbe mov or mov sub push stc lods nop cs scas jecxz dec daa movb jne xor mov pop rclb and adc lods lret or adc into adc sarb adc pop enter and test test inc movsl test sahf sbb pop enter mov push pop and sbb lret int mov push outsl dec or addr16 sub cltd pop add or and adc or inc dec mov fsubs out jmp js sahf or or mov dec test (bad) js pop test lods (bad) icebp cmp ss fwait lock sbb jl or pusha shlb loop dec ja fstpl das pop or imul insb sarl repz adc cmp pop outsl pop inc (bad) xor and push ret es test fcomps jno inc ss lods in push sarb push push push aam sbb shlb cwtl outsb jb push lret sbb push push cwtl mov inc or inc or imul inc pusha pop (bad) xlat movsb sbb adc xchg nop cmp test in mov dec xchg fcom pop pop pop mov andb inc xchg cltd call xor das jns push xor imul jnp sbb adc jno mov add xor testl mov push out xor aad inc gs push pop rolb push icebp ja rcrb push add add sbb test sbb adc mov xchg dec out sub push or in mov inc out sbb jp shlb outsb jnp jbe pop mov mov or fsubrs or cld out add add out mov jae pop mov ds sti lret (bad) dec mov adc test imul jg push sub pop push push push int pop movsb sbb sbb fistl faddl sahf sahf test pop into jo push rcll js jnp ret or fs pop ret add and lcall popa sub pushf cmpsl loop xor pop pop mov andl push mov mov aam (bad) jge int3 xchg enter dec adc addb push xchg sarb adc inc pop inc jl mov pop dec fiaddl in sbb xchg jmp add mov inc jmpw xor push or adc mov les cs outsl xor (bad) (bad) lcall sub push insb fist call movsl lock push lea aam pop and popa inc je lret pop and divl (bad) pop push insl sub movsl sti jae jb sub das mov fstps mov je cmp push sub fisttpl in sub sarb inc cwtl loope xchg mov push sub mov adc and js mov push inc hlt adc pop sub dec test repz es and push (bad) or mov icebp lcall in push mov add jns sbb xchg jbe or adc out in mov add mov adc into cs cmp mov and cli push jl (bad) xor jl or pusha cld dec out push cld fsts stos cmpsl mov mov xor add movsl mov mov mov arpl jbe cmp pop push cli mov (bad) push repz lods dec push pop push sbb mov pop ret test lea (bad) or outsb adc dec add nop mov loopne inc jecxz es push popf mov fsubrs pop add movl mov and adc pop adc nop lea mov rol jmp stos or test adc jge add add adc fmull and add adc or adc push sbb add sub sbb xorl popa jno mov inc stos xor mov dec jae jns adc pop (bad) xchg and sarl sbb in (bad) mov ljmp mov sbb scas sbb dec lret cmp stc jae add add sar je movsbl lea mov (bad) mov inc mov inc push sub push jmp jecxz ds out xchg bound lods cmp mov (bad) jns push fadds imul xchg pop adc cs sti push xor push inc adc inc sbb stos push (bad) out push scas or xchg push imul or loopne pop jbe ljmp xlat xchg lea loopne push pop jno adc xchg (bad) scas pop stos fstps dec mov pop and outsw out push dec or sbb mov xor push push fcompl rclb arpl dec add push leave sbb add roll cli lret lret add mov jecxz add and push pop push mov icebp (bad) ss enter lock pop nop push decl cmp (bad) xchg rolb insl or dec imul std add adc add pop cmp adc sbb and mov cwtl pop pop outsb fdivrs push jle and fmull mov enter ror push inc loop in push dec sub mov and xchg mov insb sahf cmp xchg hlt fistl and lcall and cmp unpckhps lahf and dec subl add jae cmp pop popf push sbb mov mov mov inc mov add and sbb in cmp cmp arpl cmc sti icebp cwtl call push repz mov rorl bound xchg je push sbb adc icebp ficompl pop push pop insl xor int3 xor sbb inc add call add add repnz mov or mov mov mov pop cmp out xor fnsave mov cmp jecxz add cmp push xor sbb ds add push mov je lds add mov aas arpl dec jnp pop cmp adc sub mov push jae and jp sub cmp aam fwait lcall ret adc mov mov pop and add xchg nop inc mov push push enter push fmull push sbb mov and cmp rolb test and popa loop xchg xchg and mov mov mov xor or enter pop mov sarl pop cmpl je or xchg aam bound push rcrb clc test jae (bad) loopne outsb adc nop push xchg ret jo (bad) enter xor adc and and sub aaa nop and and push add inc xor cmp fdivs lods pop dec ds or inc cmp or adc mov mov aas or push out pop cmp add addr16 push add lret xchg or jb sub sbb lock xchg outsl add adc in scas test mov lea addl insl pop inc jle test add push jne mov aad push test (bad) mov sub call mov clc push cld es jp push jae fsub xor pop xchg movsl and push push push cmp jb stos and mov sahf xchg sub push jge jb inc pop jno push insl in out and imul xchg sarb add (bad) shr add sbb outsb sbb xchg icebp sub push jle test aas push xchg or dec ret incl cmp arpl or out shrl cs mov (bad) push xor fnsave sub sub push cmpsb iret es push lea sbb mov dec dec or jo pop out adcb insb int3 in lret enter imul jno cwtl mov pushf jg enter (bad) mov enter (bad) and xor push insl sbb mov add push dec pop insl fdivrl decb jge test or or xchg mov clc inc movsl cmp call mov xchg lods cmp lods and ljmp pop inc cs or push xchg inc add pop sbb adc fs push pop add bound arpl xlat xchg (bad) dec dec adc pop ds outsl mov pop and call inc insl cmp fs insl dec pop add push xor lea mov (bad) push cmp or test sahf in clc inc push and push jbe clc dec xchg loop jl push sbb orl pusha lods adc arpl sbb mov push mov call push jg push into (bad) push repnz adc lcall add icebp mov pusha and sti jge ret or shl call aaa mov mov aam cmp mov testb jo and push inc lods stc sbb lea in sbb inc test push idivl (bad) fdivs test push es jne addb jb pop stc mov pushf cmp in or leave add add pop daa xor pop add inc push fdiv push fs mul push push push push les pop adc cmp xchg sub aam js add mov into lret sbb rclb xchg ret dec pop rol rolb adc cmp shrl push push mov mov repnz jl cmp mov mov dec add cmp pop pop sbb push adc pop cmpsl out dec dec andb mov (bad) and and push mov fiaddl fiadd sub cltd push jle gs push ret or adc or jmp sbb (bad) aaa cmp inc xchg sub lea mov int sbb push xchg inc lock add inc negb test mov loopne jp rclb cltd push mov jmp enter imul cmpl icebp mov dec lods ret mov jae test je push mov dec xchg or push test rcll loopne add add dec jle (bad) dec inc sahf inc sahf push je fsubrs dec inc mov dec and dec xchg scas in push jne push je or test and push jbe add inc adc sbb sub mov inc or rclb pop adc or inc or and es add ds mov fbld pop pop loop,pt test push test dec mov (bad) ja in dec adc jp fmull sbb mov movsl dec add jo ficoml test inc (bad) cltd and and pop inc xlat (bad) outsb push sar push jle mov jmp push add sub cmp cmp sub dec rcl ja push rcll xchg lock popf outsb adc sbb push cmp and sub aas sarl test gs pop push cld roll xchg fild adc mov push jecxz jp push push test aad or push (bad) rcrl dec mov dec shrl pop mov mov fcomps mov repnz dec jmp lret imul inc inc dec add push jle cwtl ffree lock fs leave in sbb adc lahf inc add xchg subb pop mov ljmp sbb aas push fdivp push sbb inc cli inc dec fbstp inc or ss push inc js mov daa (bad) mov pushw push lds adc lcall sbb inc sub imul arpl xor mov mov mov (bad) les sbb or jno or mov mov xchg sub ljmp je dec dec test rcll cmpsb cli cmp xor xchg in add pop xchg add adc cmp test sbb xor jmp jp dec out cmpl inc std dec add and sbb inc adc cmp mov jb incb leave ret (bad) cmp push push cmp push cmp lahf jg pop add cmp jecxz dec dec add inc push pop cmp mov std sbb fistp push popf test aas or (bad) add loop sub xor add and push jp adc cmpsb jne scas addb mov movsl cmp push push movsb pop test mov pop push mov xchg push nop mov dec or inc jl add jg add jl pop fldt cmovbe cmpsl dec inc xor enter mov nop mov sub sub jne and pop daa or cs shr shrb (bad) les pop idivb js scas and cmp mov arpl pop lret and dec or repnz movsl cs lods xor les or push xor roll mov rcr mov mov dec adc (bad) xor pop mov (bad) mov sub cmpsb imul mov lcall push lea test push mov inc loopne ds mov and inc movsl ds movsb add cmp inc (bad) push lea xor mov stc mov jl pop pop aad loopne pop or mov push cmp pop jg pop mov arpl push jg jge rorb and rcl or ficoml sti or lea or iret pop movsb push in dec xor add dec in add test and pop dec xchg mov and decl xchg scas js or pop and adc mov mov xchg inc cmp xchg dec or adc mov ss mov pop xor mov outsb add divl (bad) pushf or aas or sbb std and ss and adc add cmp inc push inc imul (bad) pusha pop mov aaa pop add sub popa cmp aas pop sub je dec pop dec pusha inc dec adc rcrb or and fs mov icebp pop mov or sub or jle cli mov jl je dec adc dec inc ja loope pop xor mov xor in xchg cmp loope mov aaa mov jo daa fidivrl jne xor add sbb inc or (bad) jge sbb dec gs add add popa loope cltd cmp pop mov lcall push mov sub add xor mov add mov clc ss xor cmpl (bad) push xchg inc ss pop lea adc sub dec in mov jg mov mov sti mov icebp sub imul sub mov adc push jmp push push mov xchg xchg pop dec sbb sbb je and xor xor mov cltd sbb sbb pop pop sbb xor push or inc inc sbbl xorl and and cmp sub pushf jae lods add push pop inc sbbl jge nop xchg lods popa jno int lea cs movsl sbb pop test sbb adc jb (bad) inc pusha jns xchg inc imul pop insl or or in xchg and sbb pop adc and lds or daa sub or xor mov out push icebp inc sarb sahf jns cmp push fildll push ss js push sbb cmp outsb rclb bnd adc jns prefetchnta sbb imul pusha pusha sbb push loope add mov leave or add jns adc lods leave xchg dec pop out lea mov jmp push inc movsb inc jbe xchg rorb faddp push in push inc push jnp jo inc sysenter add out or pusha xor movsl and enter or pushf or xor adc leave and adcl sbb in roll mov push fidivr dec (bad) or in cwtl jo stc ds jp push inc mov imul jl sbb push lret adc mov xor cmp les add (bad) shl add mov pushf sbb loopne xchg add int3 movsb sbb (bad) inc fisubl cwtl sub jbe rorb adc gs ffree pop mov mov movb pop jnp movb jnp xchg cvttps2pi push xchg push sbbl dec or cmp call outsl mov push adc pusha cmpsl popa pop retw rcrb xor mov cmpsl ljmp add cvtps2pd clc cld das sbb pop addr16 pop test imul adc js add cmc adc jmp (bad) jge add sub dec jns adc push sbb add test and or add push cmp pop or movb jne (bad) ffree mov xchg inc sbb (bad) pushf call dec mov lea mov and sub mov ret xor js mov push test inc add call cmpb stos adc xor (bad) icebp faddl jmp je in mov mov mov jecxz call dec daa fildll or dec imul (bad) cmp cs inc add andl pop scas movsl xchg xor icebp and push cmp fcoms sbb push loopne push xchg xchg pop cmp adc lret sub mov movb cmpb ja dec adc cmc mov add mov inc aaa or sti push push xchg jmp dec bnd dec add xchg mov sbb lret shr inc pushf ss sahf ja jae imul push insl mov aad jbe ds lea bound sbb jne jo (bad) cmp and dec bts into xchg les inc mov pop dec xor ja xchg xor test jo pushfw cmp out int3 cmp int adc sub setg sbb fcomp pusha adc std imul imul inc xchg xchg xor scas addb xor push mov or push test sbb push movsb dec loop cmc (bad) fisubl (bad) je adc inc mov jne xor sbb sub imul mov adc repnz sub cli enter enter pop rcrl sbb jns shrb inc (bad) stos loope xor jne jnp inc out sbb sub dec add sbb (bad) fisub pop pop or or fstpl rorb int3 lea mov inc pop push cmp test je mov adc dec cld pop popf dec mov cli jb popw cmp or lea mov dec stos mov jmp inc jne sub inc add add fiaddl add mov in into push and fbld in dec mov imul cmp jg add dec sbb push mov loope fstpt rcll jle adc xor cmp into dec mov pop xchg scas mov add test (bad) js je rolb test push nop xor cmpsl xchg or test pop enter cwtl call xor ret loopne add cmp pop adc xchg jo pushf sbb adc mov xchg popa js addb push cmc cmp mov mov or pushl lods add pop or rcrl jne in adc add inc mov pop xchg push scas dec jne add lods jns cmp or inc cmp add popf push rolb adc inc arpl cmp jg call dec int (bad) aam lods sbb mov adc roll cli or pop sbb push (bad) enter cld nop stc fildll mov lcall dec repnz leave gs add scas or push incl lea cmp and (bad) lods and cmp dec daa xorl divl leave inc inc lds push cmpsl jg (bad) xor test iret jne lea and (bad) pop fwait nop subl in push jle mov pop push pop movsb dec jmp sbb jns sbb jmp loop xchg jmp lcall sub sub bound ret pop push xor lea into pop out adcb or ficom or pop je xchg xchg add (bad) sbb rorl loopne jnp mov rcll imul in or out fmull or daa cli ja mov data16 es pop (bad) adc sarb pop cwtl xor idiv xchg les jne movzwl push cltd pop idiv int cmpps mov (bad) outsb pop jge sbb dec shrb (bad) jmp andl mov push mov mov dec stos (bad) lea sub adc inc adc push add sbb mov in nop adc lcall insb mov in inc pop andl jp pop mov insl adc jmp jne dec movsb iret push cmp mov jl add inc adc sbb cmp sub (bad) xchg or sbb mov mov pop fildl pop and insl adc movsl mov sbb fcom xor and ss les fldl push js dec mov stos add mov popf les jbe push mov jmp push dec faddl lcall addr16 and pop push cwtl clc in fstl icebp insl or inc sarl ds pop fs je out shrb mov pop mov (bad) int xchg dec push inc mov cmp hlt mov idiv mov pop fldt inc jmp adc xor in in rol mov cmp cmp mov fs mov (bad) clc mov push mov popa lcall popa ret sbb hlt push insl mov rorb pop sbb sub cmp loop repz cmp movl pop jnp push pop (bad) in (bad) rcrb add mov inc adc rcrl sti popa add jle dec inc cli add (bad) cs test or push mov out inc (bad) dec jnp sub adc cmpsb movsl fwait mov or or add (bad) push jo jmp sbb mov sbb fildll lock mov or iret xchg in leave clc mull and sub sub mov adc fcmovne inc inc and adcl stc fsubl decb dec add pop adc aas adc mov fxam sub aaa and jmp and inc rcr inc dec mov outsl adc add or pop sahf add pop add pop dec or pop add bound ror es cmp xchg sub movsl xchg and xor add cmp pop ljmp add fcoml xchg sub pusha push lods dec lock mov in adc fidivr hlt dec push jo push add call jns out loopne fmull push sub outsb adc mov dec dec mov or aaa fsubp sub outsb xor lock loop push or or or or in or or fdiv push mov mov andl lcall add je data16 or or dec mov popa mov insb pop push jne imul pop dec (bad) fcomi add xchg js jbe in je pop clc fldl and sbb add jle nop jae push pushl add mov sbb adc xor addl lret inc jae outsl data16 adc adc cmp push clc dec andb cs loop or pop movsl sbb lahf adc cltd fwait dec sbb add fiaddl dec daa mov xchg inc jo notl xchg in sub cltd pushf inc jmp pop cltd and loope push mov xor adc insl lret cmc jae pop jno int3 shrb mov in push add add pop adc xor mov and inc xor dec and jmp or (bad) movsl mov adc outsb and inc (bad) sub imul jl push pop inc xchg sub sbb xchg (bad) icebp or and and lea adc daa (bad) bound push inc lcall mov insb dec in je outsb push rcl and push or in dec xor or xor (bad) clc mov sbb jg je push push jb cmp push and sbb (bad) jae lock or mov sbb xchg dec (bad) enter adc mov add or ret out popf mov push add gs mov sub outsb jle or add xchg sbb jge clc push inc add stos or sbb lock sub xor mov push scas les jp xchg xchg ficomp jle fsubs jge pop (bad) dec outsb mov lock daa fnop jb scas sahf (bad) out xor inc xor shrb or pop mov js fldenv aam cmpl jb mov and pushf inc push pop add mov or loop lea lcall movsl add movsl pop ret add jb sub in pusha lock adc ret and push (bad) js std cmpsb jo cmc stos xchg push pop or push int3 or ljmp les jb mov adc sub inc or loope cltd mov aaa add movl loopne in movsl mov cmc or pop sbb cwtl sub inc push test (bad) xor aaa cwtl and cmp add pop jmp or sub vmwrite lcall in aam adc dec flds shlb sbb movb ret xlat mov xor jo dec lcall loop mov add sub sbb nop (bad) out inc data16 pop and or adc push or (bad) or add loopne sbb aaa add jno lds add jge icebp fldcw push mov lock inc push sbbl add add test pushl popf mov sub (bad) jne sbb mov or sbb pop cmpsl xchg pushf js clc movsb mov pop fidiv cmp (bad) notb pop jne jle insl das push cmp jbe push add mov enter inc lock lock jp add hlt xchg aad sub das div cmpsb stos and aam andb popf push dec lods mov pop sbb add icebp push mov and rcrl ret push (bad) xor xchg test xor adc fs sbb les dec call mov decl cld mov pop rolb pop add push adc test xor mov or adc jg pushw cmp xchg adc lods (bad) test cmp or cs pop dec jbe cmp or fs xor mov mov pop sbb inc ucomiss sub shrb dec mov or lock dec lock adc mov inc loope into subb push xor leave mov mov jo or test aas das dec lock mov das ja adc fstl jb mov adc daa aam sbb es lea lods popa push pop adc and fnsave adc rorb sbb lea push push nop imul pop shrb inc mov pop js mov mov es cmp sub xlat cs xchg icebp mov addr16 aad or popf push xor or or in loopne sbb jae sbbl mov add sub add cmp push loope in jle fimull xor dec stos lea clc pusha lahf push mov jmp scas cmp outsb gs push ret push sbb mov icebp xor push and jno mov mov stos adc cmpsl sbb push roll adc mov fdivrl push stos in mov subl std sub lea push ja xor ss nop sub xor push adc add push add mov hlt shlb sub mov pop push jbe push xchg sbb push nop xor sub out fcmovnb sbb fmull push mov cmpsb dec rcrl pop mov mov nop add add inc sbb lret xchg mov ljmp movsb adc push add aaa or add pusha inc add imul mov (bad) mov mov push jno sbb push sub mov bound mov mov inc fldcw inc mov pop call (bad) push xchg mov or or inc inc and (bad) sarl nop mov adc sbb fldl xchg pop lahf mov add sbb add mul sub lods cmpsl loopne xchg cmp pop add popa mov sbb push or adcl movsb mov (bad) inc rolb push jecxz cld add jmp push pop mov insl jnp jno lahf mov push jge insb jl jne mov outsb adc mov mov cwtl add jo les xor mov mov sub cmpsl cmp lret into xor imul mov and mov loop enter jno sbb mov dec imull adc mov lods push jns sbb mov mov gs sub test mov outsb add pop icebp fcoms mov cmp addw inc call mov inc mov or int3 sahf negb mov rolb fcomi frstor dec fyl2x dec pop or and add (bad) pushf fs outsl enter lea cld sub cmp addr16 adc pop clc aas pop sbb or or inc jmp faddp pop repz jae and lock pop pop test push and mov mov pop dec imul mov and fnop and mov mov push in outsb cmp dec pop fsave adc inc add aas dec pop frstor fldl adc outsl loopne dec jmp stos adc xchg testl fldl mov cld loope cmp insb xor in pop imull pop mov fldt je in mov cmp and idivb jmp fld1 mov int daa dec or leave ljmp lods adc dec cmp rcr fcomp (bad) ss ljmp imul and inc sub fldenv add ret insb adc bound lock sbb sarl fs mov cmp aam xor fldl stos orl cmp in je pop fcom iret sbb pop jle jo push imulb inc cmpsb inc xor inc loopne adc push dec pusha imul jge mov scas scas sbb push push div or out lods add in loopne add imul xorl js lods inc or adc sbb mov sbb sbb xor mulb clc in es cmpsl pop cld cwtl mov xchg sub mov adc mov je aas in hlt add clc jmp sub out flds cmp inc push or ret push jno adc data16 fidivrl cmp ja lcall test pop pop pop leave xor lds ss pop shlb push daa push sub icebp test push add stc mov or jo xor pop jmp mov int jmp push fcompl lahf lcall and in push jge and xchg inc jno add sarb fwait inc bound sub in cmp adc inc (bad) (bad) jg adc enter rol mov xchg add jle ss pop dec pop je les loopne js xor aad mov cmc pop mov and gs fxch jne idivl sbb (bad) fldl repnz inc push (bad) sbb xor or loopne stc addr16 lods xor or or inc int mov out push les push push and mov js xor pop aam je outsb sbb xor push test lret enter test mov xchg dec adc jecxz fdivr mov add cmp pop cs cmp mov icebp (bad) ror or mov xor andl adc out adc inc ljmp stc mov sbb sub mov jmp pop scas int mov add sbb adc xor inc jne jmp rolb cld (bad) imul insl cltd inc push loop pop mov mov insl scas rorb sahf cld sahf mov sbb pop mov xor mov adc or fdivr dec push les ret (bad) repz adc mov xor dec adc cwtl inc in xchg loopne and rorl out mov cmp and sti jno cmp rcll sahf pop jo jo pop insl jo dec jo xor lock fsubl push xor sbb push dec fldt add hlt clc and lock cmp push inc int3 push loope or aam adc pushl and enter push push or jnp fsubs fcomps ret push addr16 mov loopne mov adc pusha sub rcr or ficoml adc mov xor adc jmp pop adc es scas push hlt mov scas imul pop add imul push (bad) ja pop fwait jp or jl incl jl dec push cmp dec lea cmp push std data16 add add imul dec push cld pop adc nop mov add inc or rcr popf and popl es jecxz cmp adc call mov scas imull xchg adc movsl add lods add push xor mov les outsl cmp sub sub ljmp mov add adc or pop mov loopne std loop sub push adc ret popl pushf fwait push jle jns (bad) jne aas nop xchg jp or push into xchg push push mov and jmp adc dec lods adc xor in pop loope pop or mov adc jle movzbl sub dec sub lret test lods inc (bad) add scas inc mov rolb test (bad) push (bad) ljmp or xor pop fstpt xchg or sub inc sub pushf mov jne pop xor xchg cmp add orl movsb icebp sub lea rcll ja jmp cmp ret jne aaa xchg (bad) lretw mov ret push sub xor xor in test lea stos and fwait insb lock push (bad) movsb repnz xchg push es stos lock adc xchg out insl mov shl fs or (bad) mov jmp adc insl mov pop rorl push xlat cs daa inc popa gs xchg sbb mov cmpsl (bad) adc out cmp pop xchg mov push add loope roll movsl sbb cmp add xor add cli push scas inc enter pop rorl dec dec int3 roll (bad) and add insb add push jbe (bad) arpl push gs jns mov xor mov or push ret repz push add sub xchg and inc mov mov push pop and mov sahf insl mov mov sub test daa pop and add push sar ret in (bad) cmp push mov mov add add push adc jmp (bad) testb cmpb (bad) jmp mov xor sbb dec sub mov sbb repz js cmp and mov jmp and jnp adc pop or jo mov or jmp movzwl mov lds xor or mov xchg fwait dec adcl andl push cmpb jmp hlt jnp lcall jl xor or jmp adc sub or mov adc (bad) repnz jo xchg lcall lock jle inc in sub and mov sub add add or sbb ds cmpsb les and inc ss adc jne mov pop jno pushf adc push rcrl or jl push daa pop cmp shr rcr or sbb lock mov add jle movsb out (bad) jb cmp or aaa xor jle jbe dec cwtl mov dec dec fsub sbb push (bad) xchg sbb pop or sbb mov and xchg adc icebp xor push pop sbb pop outsl dec mov ret jns jmp mov or (bad) stos iret inc popa enter pop mov addr16 or sbb xor or lcall pop aas jno popa dec les rorl add push add dec push or (bad) bound sbb sub adc addl (bad) and jmp jae shrb test cmp push nop push in lret lods push rcrb es and xchg imul or lods adc xchg lea dec add movsl imul fiadd inc jg dec or repz repz xor and adc lods mov mov sbb out sahf call hlt jle out hlt clc clc cld cld lea dec (bad) mov mov loope push jl xor lret mov sub fcmovnb push sbbl push lea jl adc jmp into mov out lock neg adc mov xchg stc sub lret pop or mov sub push fiaddl je and dec mov lods mov aas jmp out add add (bad) loop cs dec dec push jnp pushf cmpsb pop add mov mov iret jnp movsb or push mov (bad) iret mov repz aam int3 das sbb cmp repz sbb adc cmp repz or popf and iret add aas add inc sub scas or push sbb and pop shll push aas or cmp jg mov or lcall push adc mov shrb push je (bad) xor push sub mov xlat (bad) fucomip push push sub cmp xchg aas sbb sbb jl pop or adc decl push jmp add faddl fwait ror cmp add sub mov mov mov dec inc and clc sbb in in cmc (bad) aad adc cmp jae or jae shrd shr ret lock shr pop add decb add sbb push push push add into pop push pop pop imul mov inc loopne cmp (bad) outsb outsb push into jle and jle jae loop sbb ret aaa push push push rcrb rclb mov (bad) sbb cmp enter stos dec mov sar mov loope dec clc lcall jne mov jmp out sub xchg and scas sbb loopne test notl out jo sbb rcrb fstpt mov sbb lret sub (bad) mov push xchg (bad) dec fcmovnbe (bad) je xchg jne jmp clc inc dec inc dec les inc test aas jne pop cmp insb adc je inc cmp dec push test inc adc pop and into jae adc pop mov jne xor dec sub mov cwtl (bad) scas sbbl xor xchg or sub mov pushl fmuls sbb adc repnz jnp sahf in cmpsl fimull or rorl pusha jne add test pop adc and lods mov mov scas cmp out pop lret xchg out cmc inc test inc movsb scas push sbb push lods inc imul sahf aam arpl or or mov xchg jo rorl lods fs fmuls pop movsl rorl popa test cmp cwtl inc repz ss cmp or adc and mov lret andl pop push jne je sbb adc or adc sti loope pusha cmp or inc std pop mov sub sbb out insl jmp loopne and jae push inc pop lods mov arpl ja and pop or xor lahf ljmp lock jmp sub lock pop add and push jae lea ret cmp adcl out pop loopne and dec fcoms sbb dec mull aam sub inc ret inc pop add je (bad) in pop mov sbb dec push fldenv push test and aad or sbb jo mov sahf and (bad) push fnstenv cmp jl cmp lods xor (bad) shrb mov imul inc sahf push add in inc dec orl mov lock inc cmp jnp sbb cmp (bad) adc pop push aad cmpsb std outsb mov ja sub xlat rcrb pop stos mov inc sahf or xor enter mov cld sbb ja aam adc pop mov pop mov add fstl cmc jae push cmp repnz arpl test dec push in mov popa sub mov and movsl add dec add add out scas jne dec imul dec ret loop jmp (bad) jne push fdivl lock xor jg jle movsl hlt jb adc and or and pop sub mov xor je mov or push dec pushf adc xor adc lds fistpl jo dec xlat je adc outsl add adc ja cmp jp loopne mov call ljmp jge leave jge pop add loopne test test jmp daa adc or inc dec add add jo pop or sbb mov loopne dec out dec mov add xchg sbb push xor stos hlt test shrd jmp sbb push sub rcrl stos push jno inc mov bound imul mov inc cmp je xor inc adc push push or out push test lock lea mov test je sbb (bad) push cmp jne mov bound mov lahf std xor fucomip mov push pop rorl lea sbb (bad) or ret dec xchg (bad) loope (bad) dec push push sbb mov and outsb fcos aas testl je cmp ja push mov push in (bad) or call dec cmp call out les fnstcw sbb jmp push outsl add mov movsb and xor iret fs xchg rcr sub ss test lcall je iret lcall in or push pop dec cmp mul adc mov mov icebp mov lret jle xor dec xor out sub mov and or je xor mov pop cld ret add cld cmp je outsb insb fdivl iret repz ret and faddl out dec pusha aas aam xchg pop arpl outsb or (bad) push sub cld pop outsl and inc neg dec mov mov mov std adc pop je (bad) xor (bad) cld add xor in jmp (bad) push sub lock xchg push loope adc cli cltd (bad) mov xchg test jl jmp cli inc jne jb (bad) inc push or add data16 cltd (bad) dec enter or add add sub dec cmp or pop lea push (bad) aaa ret lea push rep test mov sub push and fcom mov mov add icebp add push xchg hlt mov push sbb jb push adc jecxz mov test setp inc jmp mov inc adc inc push mov pop shl dec (bad) jne andb inc xchg test sbb and ret je cmp xor daa setns dec pop iret sbb adc push mov dec je arpl lret jbe jb cmp sub or repnz xor notb xchg cmpsb xchg stos fwait xchg (bad) sub jp cld push and jmp sbb adcl cmp roll aaa xor mov mov mov cli cmp mov daa sti ja adc inc and xor or ret jbe sub mov in dec aad cmp repnz mov pop push dec jne adc jmp adc pop inc jl nop lcall sbb jbe mov dec xor mov pop pop sub pusha xchg dec (bad) cmp daa hlt adc mov (bad) sbb lea inc pop or or sbb or push call jle inc jl movsb imul add mov add adc mov jmp mov negb cltd sub (bad) fiaddl ret or adc lret pop inc clc ficoml xor jecxz push popa or mov xorl mov adc mov push dec jb add adc sbb inc cmp inc or inc enter sbb es and or ret ss scas movsb rolb cmp jb push adc dec call ja push sbb and out lahf jo mov fisubl ds mov ja cmpsl leave aaa mov fs adc adc pop inc add or jo test xor adc inc push sub (bad) and pop fdiv in jmp push or mov push mov (bad) xor inc ret xor les data16 and or fcomps rcrb push xchg or or jp,pn sbbb pop cmp imul subl inc mov xor out sbb sub inc or mov nop dec pop add test adc test data16 dec (bad) mov mov orb dec loopne lock notl es dec push call add adc (bad) jmp and outsl frstor adc les or xchg hlt and fsubr pop push push adc adc add sbb adc or icebp incl test xor pop adc and xor sbb imul je dec push in rdmsr pop mov jp pop jle add inc in jecxz mov add xchg adc test aas mov test push push sub or fs adc cs inc test push outsb dec and or rolb ret pusha fmuls inc push cmpsb dec and push adc pop enter loopne es add stos (bad) mov mov cmpsl mov inc enter aam fisubrl adc xor test xor rclb insl dec nop and sub inc es hlt push xor mov xor lahf les xchg inc xchg pop add cmp jl adc mov ret je mov push xor xchg call mulb push xchg mov jo sbb aam mov push jge subb mov (bad) call in iret ret mov idivl xchg cmp lods or mov aaa sub add icebp and stc jb dec ret aam push fiadd sub sub loop,pt push addb mov cmp jb or push and enter or pop push aaa gs shrb xchg ss sub fmuls (bad) mov jmp in das pop sub nop sbb repnz and rol dec arpl xor lcall mov fsts pop inc fsubs not dec dec jbe or loop repz sbb xchg out outsb dec cmpsb push mov push aam int outsb push (bad) loopne inc pop enter pop add mov jmp mov cmp xchg popa inc sbb cmp mov pop insb mov stos cmp inc jmp xchg rolb adc push dec out cmp xchg scas adc mov out (bad) and push push fbld push mov sub pop or adc (bad) jne bound push inc mov jp adc dec inc inc loope adc inc xchg roll xchg push orl fsubl in js nop inc mov clc sub mov std jb pop andb adc mov cmp roll cmp sbbb adc sub clc aaa enter repnz cmp (bad) pop (bad) sar add add xchg sbb sbb jle mov movsbl jmp lock add pushf inc dec fcomi jmp es (bad) popa and push (bad) nop into daa pop fcomps jnp inc or fnstcw adc int inc aad enter pop or or loope inc push dec sub inc into (bad) int3 rorl loopne mov ds rcl ljmp add scas ret or push jns cs and add jns adc add mov mov test push push sbb nop imul pop es mov mov out test pop push movsl rclb ljmp pushf dec div imul (bad) pusha inc enter sub cmp sbb push gs icebp mov enter orl (bad) pop and nop xor jp icebp inc push push sahf or xchg fcomps gs ja push (bad) jo stos enter fsubr cmp (bad) inc cld dec pop imul rcrb out mov fsubl movsl mov imul cmp jne ds pop scas xlat push jbe jge jmp lods and lahf adc aad shll mov sub fmul xor mov or cmp sub lock xchg mov insl (bad) push cmp pop add (bad) jbe xor jmp inc or repz int lods lret aam push push cwtl and mov pop rolb stos pop ret mov faddp jmp lock add push push mov inc js and aas xchg ljmp mov or int3 add cmp xchg shl sbb push mov xchg cmp push (bad) jmp mov scas pop or add xorl pop jecxz addl xor fisub mov dec or (bad) mov daa int3 push inc xor pop inc xor dec js xchg push cld dec cs xchg mov push les ss add mov dec rolb inc out (bad) insl out dec imul push push pop pop (bad) mov js inc jo icebp dec push in cmp add jbe insb cwtl push rcr adc movsl add outsb push les jbe pusha xor xor jmp mov mov rcr ret sub addb out mov sbb push sbb jmp cmc dec cmp cmp pop mov movhps hlt add add adc imul inc xor push push jmp loopne xor testb add push and inc bts jmp test nop inc mov sub mov jecxz sbb and pushf pop rorb mov push mov sti dec mov mov mov aam or ror xchg dec mov bswap sbb dec or push loopne es data16 aaa cwtl incb jne testb je outsb data16 xor push leave ret dec xor push lods leave addl test cmp aam add inc jl mov rcr mov sbb and or leave aam xor and xchg xchg loope cvtps2pd push inc mov test jge inc sub cmp inc or pop inc push push adc lret cmpsb daa cmc and xor inc pop mov dec jmp adc dec cmp and and mov pop repz lcall leave rorb call (bad) (bad) mov push or or or push jle or jbe jge push (bad) adc sub push adc or pusha lret adc and mov push dec pop (bad) test lret rcl add imul stos sub mov add pushf inc dec dec lea lcall push in xchg cmp mov jmp sbb lea mov sub (bad) bound xchg aam xchg int3 and gs or xchg flds add sub out imul (bad) nop lret cmp add xchg add add adc jbe add mov xchg sarb or mov jge or add and sbb sub dec or xchg cmp inc cmp adc mov push mov push popa int3 xchg cmc (bad) and sub stos aam test stos or rorl pop dec push push ret jmp push sbb or xor dec pop fwait push insb xor testb mov je inc inc xor sub adc nop lock nop adc push cvtps2pd jb scas dec xor addr16 or or pusha lea enter xchg push or push test or cmp sahf pop call pusha push rolb adc cmp mov push andb pop testb inc inc ficoml add and jbe cmpb push mov ret je mov mov push adc ss add push cmp xchg adc add pusha into mov cmpb (bad) jo inc push pop mov (bad) mov andl cmc cld sti and lahf pop and std add test and roll push dec jb and adc add inc sub sbb dec lock lods sti imul pop sub inc lcall sbb push addb shrb push loopne pop cmpl insl jg or push inc cmp outsb loope cmp and out pop xlat loopne add loope push push jno lahf mov sbb add mov or pop clc fimul nop sbb cmp pusha lock jb pop add add jns mov mov (bad) mov sahf out aam in lock add or sub pop sub and push push or imulb rcll dec imulb call jg loop mov lea push ret jge dec and imul adc xor (bad) cmp or repnz shlb sub in je jmp and cmp je inc jmp jmp and pop pushf jmp test (bad) cmp sbbb xor loopne mov add aad mov mov cli inc adc rorb je jg cs jne mov sbb adc cmp je xchg or lock dec rorl or mov fwait addl sbb (bad) xlat xor pop and lods adc cmp je inc xor xor sbb push jne subl dec cmp cwtl inc inc dec cmp lods cs sbb jne xchg lods xchg testl pop sub adc lds push add aam loopne or push and cmp mov inc mov and stos cmp std ret push cld jg movsl push xor inc mov outsl mov or xlat clc mov lods dec loope or push cmp jne inc inc jl rorl (bad) jne cmp and cmp (bad) and mov jne js or das xlat je repz adc push cld dec adc cmc sub enter ljmp dec jne pop inc push jge fimull cmp jne (bad) sbb out jne or sub fbld in outsb add push inc int mov xchg movsl push push push test test sbb mov insb lahf dec mov cmp dec push je push dec adc adc pop mov fnstsw push push inc insl lods jmp pop sbb pop inc (bad) push nop add subb mov (bad) adc xor mov dec dec pushf adc ds out call push js push cmp cmp jge sub xchg inc inc sbb mov add sahf add out sub insl lods sub pop push fnstenv push sub push out ret push int3 insl fnstcw ficomp mov scas mov inc add or dec repnz inc add add push add or push out (bad) ss pop inc or inc mov jbe jbe or pop cs add stos fcmovnbe add sub out rol add inc sbb add or sub in pop jge inc in pop pop pop test inc sahf jg add fsubrs dec ret ljmp ljmp xor pop in (bad) les out dec mov xchg pop mov test sub inc nop sub cmp jae xchg jmp cli fisubl mov cmp sbb test sbb and movq xchg mov push push aas testw decl push pop sbb xor mov push dec pop (bad) or cmp or pop psubsb lock mov jno adc lcall sbb push lds cmp lcall push shr mov movsb dec push jg (bad) mov enter jo (bad) std and scas mov lods call xor push mov cmp or mov and aas aam jno outsb aam lods add push xor mov nop outsl adc (bad) subl in sbb mov movb pop mov cltd dec xchg pop roll in or pusha push mov fwait cmp das je add xchg add xor push insb add add cwtl or dec nop fimul (bad) adc mulb insl in xchg dec lods js arpl mov inc jo test jmp sub mov push pop jmp mov adc jo and shrl incb cltd pop mov sbb or or push sbb inc lods push fwait mov xor nop insl adc xcrypt-ctr cmpsl pop sub popa adc or je lcall sub mov mov or cmp push jb (bad) data16 pop cmp movsb mov cmp add in aas cli ss dec pop cmp test dec xchg dec and nop cmp sub xor ljmp or xchg dec sub sti andb jb dec pop mov inc and xor or mov movsb sub punpckhbw ficompl add and movsb sti jmp sbb in inc cmp outsl imul stos mov cmp jl or mov das call roll add xchg xchg mov mov push test cmp mov out sbb (bad) add daa or negb mov xchg icebp (bad) cmp rcrb and adc or ret mov pushf rcrb decl add jne pop cli push sub adc sahf mov dec shr js (bad) add mov lea inc xchg jg adc sub jbe ret jne das in test lret add xor test nopl add or out push (bad) mov push or or cmp je inc (bad) je pop movsbl jo je gs and add adc add les je push jne je addl jg ret inc scas pop cld pusha (bad) push push inc call unpcklps push inc mov test orl mov mov add lods jns or scas lock jo (bad) or and cs sti mov (bad) cmp cmp inc cmp fisttp dec inc mov cld xchg push pop add sub adc pop nop js loope add sbb jle aas add push cmp je jge add bound xchg push pusha and push pusha mov fistpll in out or sarl dec adc ret cmp pop cs test mov in sub mov gs xchg (bad) pop jns mov dec dec xor jge xchg add mov movsl cltd mov push pop cmp andb push scas adc xchg push dec dec bnd jns pop shl daa jl jmp sbb jns add push jmp cmp sbb cwtl inc dec and in (bad) xchg mov mov inc xlat ret jl pop dec aaa push lds xor or movsl mov pop pop ja test mov mov sbb xchg push dec in push or bnd mov push xchg rolb nop dec cmp shlb or push hlt add rclb cmp pop cmp adc adc mov js lret mov mov mov add xor test sahf cld repnz (bad) or cmp ss push arpl pop push add jmp and push aas pop sahf test push loope sbb mov fsubs push movsl adc sbbl cmp dec rorl dec lret push loopne or lock pop inc mov gs push rclb (bad) adc in xchg jl cmpsl adc push jge fwait scas xor xor jp adc and push sbb push aaa rclb addl arpl inc cmp push in test pusha inc scas fmuls xor xchg sbb ret add loopne lret pop xchg add mov lret mov jmp sub xor pop dec data16 push or outsl jb and add jmp bnd push or xchg jae out or repz sbb xchg dec stos mov push xor movsl xor xor call movl or rol add fdiv push movsb push or push hlt or test sahf ja and xlat ret inc and xor sti dec adc rolb dec add dec adc sbb adc xor cmp and jb xchg rorb and adc xor mov xor je cmp stos adc and add gs jne aas add pop add mov mov adc shlb sbb dec (bad) or mov sub loopne or mov mov and dec ret adc out data16 cmp mov jne fidivrl hlt jb or push pop xchg push inc push cmp mov sbb push add popl mov test add gs push call add dec test mov mov mov add sarb or imul pop (bad) mov movl mov fnop mov fwait adc popa idivl mov push mov xor mov loope jbe push mov push jmp xor mov jne iret dec (bad) and sub xor bswap mov mov add call mov pop push add imul outsb pusha int3 pusha cmp and mov cmp sahf adc jge adc adc lock arpl lods jnp cmp sub loopne (bad) push cwtl push fs rcrb pop sbb jl mov inc cmp adcl (bad) sbb push test sbb and jo or loope add jmp ljmp fdivl jge add dec out mov test sub rolb push out lods out xchg mov xchg dec mov jmp xchg jns mov xor movsb icebp daa xor stos lea je xchg aam xchg and and mov jbe js xchg pop inc or or inc mov dec inc push aam jb rcrl les dec lock mov jbe mov movsl movsl pop mov mov incl fs (bad) mov arpl sbb das push push jno mov cmp sub fidivrl mov jmp push pop fwait pop xlat add pop loopne stc or neg push sbb pop pop loop or and mov pop jno in mov and pusha sarl imulb orb add xor pop dec adc and or cmp loopne adc or and jl jo lock aas mov pop jno pop jns add and cmp or jp js test sub hlt mov movb cmpsl inc lods push repz mov sbb lcall inc loopne adc inc mov xor add or xchg sbb push xor mov jl std cmp push xchg xchg das xchg jg cld jo (bad) mov iret pop adc jae inc adcb push pop adc xchg add sbb add std sub and cmp mov mov xor cmpsb jb fs ja add enter fistpl (bad) pop lcall in outsl cmp and loopne xchg mov cs int3 dec into pop icebp or std xor xor cmpl or dec inc daa adc pop std mov mov pop les push cltd xchg pop je add cmpl mov adc pop je inc sub or xor lret aad arpl ret das inc pop into (bad) (bad) and mov movsl (bad) pop fcmovnbe orl sub push and inc xchg inc push push pop popa je (bad) insl push and js mov inc cmp cld movsb pop pop jl mov test sub add dec inc popf xor add mov cmp insb orl adc inc add pop cs aas loopne adc push std or ret fwait iret mulps cmp mov ret xor cmp fidiv mov pop add xor sbb adc out add jne or inc dec mov adc mov hlt lock add mov mov pop fadds es push adc push add mov les mov mov cs movsb push std jo dec gs push push orl rorb std inc cmp or loopne stc dec outsb mov aam lea sbb or jo fs xchg push jne xor lea inc dec addr16 notl mov repnz push push mov cmp inc (bad) test sub (bad) or jmp mov test orl test sbb jecxz add aam inc jmp mov and jae in add mov fisubr push hlt aam mov dec jo (bad) (bad) or or xchg daa hlt push mov roll fs inc cmp sbb rorb and push xor sahf pop adc stos mov xchg popa pop orl push mov cs lret cmp xchg sbb test (bad) cmpsb stos xor ror lock pop and inc pop add push sbb inc push pusha shr jmp push lret aam test xor fldt cmp add jp adc lds cmp jne push or lods mov sbb xchg cmc or data16 mov fmull and je in and cmc sbb test jle jae inc insl mov inc or adc push push adc inc scas add jmp fsts int3 js mov jo decl push xchg push cmp cmp or mov xchg mov call dec push data16 outsb adc jo pop hlt pop push cmp fidivrl push push xchg call dec imul xchg and cmp pop push pop sbb aad pop jle rcr std outsb jne pop decl fisttpl loopne loopne add fs mov jnp jp jo pop adc push cs push inc inc mov pusha shlb mov pop push push add mov addb add pop (bad) pop repz or push fmul dec dec xchg imul cmp mov sub mov add aaa fcmovb dec lods jnp andl jg ja jb int mov test cmpb inc inc push jl cmp cli jl movsl add push lahf movsl pop clc push xor pop aad mov mov je cmpl or (bad) sbbl loop xor je shr stc lret or adc jne (bad) add push jle dec bound xchg test fisttpl jne scas mov push add add repz enter jo test add les inc pop jne inc inc jmp and sub and shrb mov daa xor dec mov (bad) xor or or mov shr loopne outsb insl pop je inc adc push pop inc sbb and dec dec cli xor inc add adc (bad) xlat shr cs sbb push ja xor jno dec push inc cmp cltd popa mov sbb daa sbb push sub pusha negb mov or idivb dec es fs arpl push cmp and or mulb jmp and add jbe daa aaa add dec pop fstpt fwait adc push sub fidivl stc or (bad) sbb hlt pushf sar sbb add push and lods pusha sub mov xor pusha mull mov inc sahf sahf hlt mov cmp adc pop add push cmp and movsl dec ds jl (bad) cmpsb push jo arpl mov ja (bad) xchg lcall lea popf ret or adc in outsb call popf or mov mov popa sbb into clc subb push cmp push fimul push incl mov inc insl fnop mov inc ret inc xchg adc sub and mov push cmp pushl les jge mov movsb cwtl daa cmpb pusha push out mov fwait mov add loopne or jl sub mov dec ret dec loopne loop and add cmp and push lahf lea loop mov cmp or int3 das ret enter mov mov or es inc inc fs aas stos ss or cmp push jne test sbb xchg lcall ret mov pushf pop pop cmc push js les push loope (bad) xchg addb pop orb jmp or push decl or jl pushl push xor xlat jl daa and dec test push push jp cmpb mov mov inc lcall jo or jmp pop push (bad) cwtl inc int push leave loope ss or pop ss loopne dec lea nop or and pusha push sbb adc push imul test inc es pushw add sub call cwtl push sbb rorl inc sbb add pusha mov test jmp (bad) femms fcmovu movb fdivrs mov cmpsl xor add insb scas mov in push sub mov fisttpll sbb pop lea sub fbld add jl cmp jg sub dec cmp insb cmp jne subl cmp cmpsb add dec push cmp fld decb jae mov stos xor int push mov xchg push cmp je (bad) enter cmp into mov aam fistp jmp repnz push inc repz sub clc mov sbb adc cmpb pop xchg push lea add not movsl popa add or mov mov push hlt clc add sbb jb mov xor test and outsb popa cwtl mov ret mov or or push bound mov add pop sbb sub sbb push push or lea cmp je cwtl cmp mov sub je sbb xchg xor xor fldcw loopne add and jmp mov pop add fisttpl pusha adc inc cmpsb cwtl loopne mov push sbb pop mov xor ds mov clc sbb sbb (bad) das adc sbb insb stos pusha jmp and sbb int3 cmp pushl (bad) adc xchg jmp adc lea xchg jmp les mov adc jns pop rcr or mov xchg jnp repz ret fldl pop movl inc lock fisubr faddl (bad) dec push fidivr push imul test lret push sbbw rcrb std ljmp mov popl shl clc gs jns push mov leave push mov data16 or inc mov and lcall add adc (bad) pop or lret ja fdiv and stc xor inc push in cltd dec jmp push cmpb je cmp test sub adc bound mov icebp jb and aas bound sahf fsubrs pop test adc mov jge cld lock fstl sbb les jo or dec rorb loop add test int3 (bad) pop aam sbb push mov sub push mov shll ret or stos inc or cmp (bad) or add mov pop pop cmp dec es pop jae daa mov jno,pt or xor mov pop sub fmull adc or rcl (bad) rclb loopne push xorl insl lcall mov add mov mov dec jns neg test es adc (bad) sub or inc cs add add inc hlt out push add in xor pop fidiv pop inc xchg inc arpl lcall in sbb loopne or cmp test ljmp fidivrl add inc mov push insl jnp test pop xor jmp mov jle das outsb xor or pop pop stos jbe inc inc sti outsl adc jge leave add fsubrp pop push cmp lret push or xor xchg xor hlt push push pop adc in xor sub add (bad) adc push ficoml loop and pusha movsl test pushf rorl mov call mov and inc add (bad) in mov add inc nop push sub jge pusha xor inc je inc fisttpl out cmp inc loopne je sub jmp and rorl iret sbb mov add adc popf add sti mov in jne fxch fyl2x jmp and in fldl2e ficom pushf (bad) call add push mov fdivp xchg ret xorb mov adc mov aas rorl jmp cmp or lock jge cmp add fldln2 inc in fnstsw mov loope jne es inc popa mov ret or push pop in xor cli mov inc mov mov push fldz push xchg rclb fstpt in ja mov aam add add add and scas daa adc lcall fcompp mov in aaa xchg cmp fisttpl daa and jbe lock loopne xchg addr16 sbb fmull (bad) sub je add pop shl clc mov add pop enter mov movsb jbe adc pushw (bad) and push je fs in decl push add popf pop ljmp mov iret add jmp mov mov sub pop loop ds in xchg mov xor loope stc rclb movsb pop mov insb and imul xchg sbb and push iret cmp insl das and rol mov mov cmpsb (bad) in adc or pop call add ret adc idivb jp or bound push loope jbe inc je pop pop add ja add add pop cmpsb dec or ds pushf and jge mov mov mov cld add add jge mov sbb or inc pop inc cld xchg push je cli dec in mov rcll dec loopne pop dec jo (bad) addr16 or js pop add insl scas or loope loopne jo mov or (bad) enter adc dec mov loopne (bad) inc mov push ret adc pop mov mov cs push arpl lret and or movsb jg push sbb or movsb enter push mov inc into fisttpl mov xchg or xor ret and pop outsb cmp pop pop sbb cmp and cmp or adcl dec fsts cmp xor mov test daa je xlat pop mov xor lret and cmp je jo in mov add xlat loope bound sbb mov add jae (bad) fsubl sbb inc (bad) mov loopne dec repz aam addr16 sub sbb mov dec jae sarb mov inc adc xor push adc mov push ja sbb xlat push loope in jo fstpl push cmp cmp and inc scas test sbb xor and dec es es outsb xchg mov sbb cmpsb add loopne gs or jne ss push inc movsb cmp test fidivl lahf fwait xor mov dec out adc dec (bad) inc call std fistp pop roll scas cmp test pop jne and or xor out fiadd push inc push ret test jl arpl dec xchg aad sub jb dec mov jo or aaa mov sub sbb pop cmp xor mov clc xor jo ljmp sub cmp sub das cld mov loopne push adc push adc dec mov jnp and into popa sbb sub cltd xchg lcall adc xor sahf adc cmpb xchg jp mov push test adc adc pop mov dec adc std add push or cld addr16 push and test sbb and mov sbb adc sbb lock loop ja xor dec adc pcmpgtd xor imull sub nop jbe sub shr and std cmp sub andl dec push cmpsb xchg mov adc (bad) stc inc add adc jns test adc inc popa inc pop pop push mov xor (bad) mov or punpckhwd test sub or jmp push das and sub enter mov jmp andl add out movsb pop and and jecxz sbb add leave add or jmp rol sbbl arpl adc andb in ja movsb or icebp dec and jecxz stc ds xchg push xchg dec add cmp jb mov inc and pop cmp and gs cltd mov loopne push cmp push cmp inc or repnz fimul xchg es adc sti add fist test fisttp push stos sar repz loope jmp cwtl je add dec push orb jmp mov and or or mull pop xor or push push stos xor push popw adc push push jbe sub and inc dec pop mov adc pop fldl fstpl xor pop jnp push push out bound pop je test pop sub cmp sub jmp (bad) lret mov enter xor out (bad) xor clc dec cmp sub pop add push inc mov xchg dec and mov mov popf (bad) iret pop push or or mov fldl lahf rolb add adc (bad) outsb aas stos dec mov or inc roll sub push fistp push leave sbb sbb dec sbb adc push xchg lret arpl loope (bad) push inc frstor adc xor push lea scas insl adcl jge lret fsubs sub push test shrl loop sbb mov cld in mov dec lcall pop cmp jge sub test inc xchg leave jp je insl hlt push inc mov add clc push mov or sub push mov pop je imul pop adc in or sub test or dec insl testb cmc test push je bound mov push add loope push lret push sbb mov and pop and cmp inc xchg ljmp add push mov or xor push (bad) mov and jle inc jg rorl pop and lret pop lods sub lods jl pop ja mov pusha mov inc push push push xor mov clc jmp test andb pop nop mov sbb adcl push sahf add jo scas outsb shll rcrl jo inc push jle divb sub sub data16 jmp pusha loopne pop mov pop loope popf inc pop push lods add pop ret xor shl fimull incb jns add sbb andb cmpsb jb dec push gs (bad) mov pop adc mov (bad) in shll adc and or sbb dec jmp mov gs out (bad) fwait jno hlt ret jnp fdivl fsubs inc push ss push pop cmp jp mov aam rorl mov ficoml (bad) ss sbb fnclex sbb (bad) cld loopne sbb ror mov dec cld or pusha cs inc cld fwait mov loop xchg mov or and adc and mov mov dec and mov icebp fstp sbb xchg out jmp mov dec les push xor cs adc inc jge mov lea cmp push push imulb mov insb xchg jp push push (bad) lcall sbb andb std cmpl cmp insb or dec sbb jno jmp lahf out mov (bad) fbstp mov lods cmpl sbb je cmp or sbb xor mov mov jne dec mov jp lods mov jnp daa ret push ss fistl sub mov push add enter repnz xor or pop dec cs add mov push movsb vcvtps2pd or cmp jne cld (bad) out mov andl jbe popf hlt lods mov sbb lret push scas rol mov orl xchg inc ss dec jmp aad push jle adc push data16 leave aad mov jne js decl xchg adc lock xor xchg movsb fmuls push dec add adc cmp add jge mov orl push outsl mov fdivrp ret pushf sbb mov mov pop sbb scas push addr16 push or mov push cmp sbb cmp pop bound fmuls inc mov movsb fstpl sub je mov cmp repnz sbb dec xor xor mov sub jb into push int sub aam jae add sub out and movsb loopne push (bad) idivl out push int aaa jnp fcmovu clc adc fisub scas lds fstpt adc xchg out jno or fimull pop adc scas insl mov lea push xchg fsubrs mov pop push nop lret or xchg bound rcl insl out xor and lret sbb lret lret fmuls pop adc (bad) jge imul jb inc adc lret fsubl pop mov int3 lret cmp xchg adc (bad) jge fisubl das pop enter int3 int3 outsb xchg add jnp dec adc (bad) jge in rclb out xor add int leave sbbl mov adc (bad) mov imul add into fnsetpm(287 inc cs into cmp or mov pop mov xor push push cmp aam stos cs push sub rcr into orb xor loopne cmp ja mov xor (bad) repnz mov adc mov or fmuls xchg sarl xchg imul add or mov add (bad) add mov inc add adc cmpl jl and enter test dec (bad) dec sbb sub mov xor pop fildl sbb jl popf pop ja pop dec or jbe inc fimull es cs jbe in sub test pop adc ja test jmp fdivs push enter or mov xor hlt push sub mov ss ret xor lret add mov add cmp clc loopne movsb subl fmull es xor stc ret mov cmp mov inc aas jbe add add cmc pop insb fcompp loope sub shll fadds mov fmull add scas sti dec loopne and fldt sub data16 xor je fchs jmp imul lock clc dec push fnsave push sub pop jg pop pop movsl (bad) pushf insb xor lods out add sbb iret fnstenv andl or fldenv cmp and pop xor xor push (bad) sbb (bad) jbe test ss enter ret mov xchg sbb or jns in cmp out add out sub and insl pop push rorb inc xchg sti sbb adc mov jmp jns je addr16 rcrl and sbb inc mov mov mov cmc inc xchg shlb ljmp sub pop jbe adc mov sub (bad) and add adc (bad) xor jb mov hlt inc in pop pop orb push sbbl pcmpeqw arpl xor mov ret or fist jae clc inc mov adc lea pop pushl xchg popl adc ljmp jp rcrb pop jae add mov addr16 stos push nop xor sbb or mov xchg add cmp (bad) fnsave icebp adc dec mov mov bound shll je insb xchg xchg ds das inc push push mov sahf cmp cmpsb push out xchg insb std int das jae pop push jne arpl or test mov or in inc mov mov loope divl cmp cmp notb ds cmp push pop mov fwait mov push xchg cmp adcl notb sti insb shrl jno fisttp xor cmp sub mov leave xor xor fs jmp push mov mov cmp push sbb add sub scas inc adc xchg jmp stos and xor test (bad) mov mov and mov jp dec fidiv ret ss inc popa int3 ret xor add push or andl sbb popa mov inc adc enter cs xchg pop pop push and orb ljmp rol mov xchg notb or fisubrl sub push push push jns movsb add jo movsl and dec push test mov sub testb outsl or pop hlt mov add xor mov xor adc adc xchg jecxz adc sbb shll mov pop mov adc imul jb lret xchg lcall jle pop cmp push push (bad) pushf jecxz push push (bad) add inc cs pop ret xor mov or jmp std jmp mov or sbb outsl bound add (bad) imul adc mov aad jo data16 inc mov adc fcomps incl maxps push mov xchg test je,pt cmp data16 sbb or lods mov es stc cmpl cmp js hlt aaa push cmpl jl adc daa xchg test inc jp and sbb push popf jno imul pop das ret pop xor scas xor stc sub lret mov sbb inc xchg (bad) outsl push stos (bad) jl sbb inc add push add pop inc cmp mov mov sti add jle jne adc mov cmpl es pop fs jo mov nop in jnp aam mov pop out mov stc add or xchg out mov fistl roll cmp mov jge push push pop loopne adc pop mov adc xchg in scas cld cmp mov popf fdivrs popa cmp cmp jg mov jo xchg jb dec mov sbb lods or js dec jae xor and jle jbe aaa jns mov jl movsb lahf sbb dec clc inc cmp loope pop add jo aas pop jg jmp xor push imul dec (bad) stos push out jle and add cmp fisttp dec lret int3 sub cli jo jge mov add bound xlat push jle rcrb lods addr16 sbb in imul cmp jl daa mov mov (bad) je cltd inc adc hlt xorb fwait and adc bound lock mov or outsl nop xlat rol adc test pop test sti cli cmpb je outsl add decl in xchg test in push push cmp test lock push js pop dec or out mov or or mov cmpsl or push add add into pop pusha add insb pop je mov xor dec jle mov adc add add movlps push or dec push jmp mov lahf out or cmp test jge xor mov cmpsb mov imul mov add mov jne and sbb push addr16 jge jne push add ds xchg dec into push sub out loopne xchg fstl popa cmp popf or popf (bad) xchg out jae cmp xchg aaa xor (bad) jne mov in xchg pop lock mov sub stos dec stos sbbl mov daa in insb adc jo pusha lods jp jp mov inc dec jo and jecxz lret push (bad) mov fcmovnb (bad) mov aam scas dec std mov xchg xor imul dec pop addl orb jmp push cmp in jmp clc or cmpl add add xchg and cmp pop dec insl adc aam lahf (bad) fildll ss adc push outsb sbb js cmpl dec test mov in xor dec mov or test pusha dec jl or and add inc mov jbe outsl loop pop das pop dec xor rcrb and push inc dec (bad) ret adc dec movsb xor mov sbb fisubr cmp jb add push adc out xchg icebp dec push inc cmpl inc dec xor sub insl push nop pop popf rclb xor add jne scas mov jnp fsubl mov mov jae push imul sbb mov or lea cmpsl (bad) push das fsubr pop xor mov sbb jl or and xor enter mov test xor iret popa mov push nop rol aas xchg jne cmp inc or int mov xorb push jge pop (bad) push and mov pushf or and or jbe pop xor push mov loope sar sahf sbb adc fcmovu rorb jmp addr16 popa sbb add pop rorb pop pop xor mov xchg or cmp je gs mov fwait pop pusha ss gs cmp jae mov inc popf test nop inc cmp pop and jmp stos lret sbb mov cld xor adc lods dec jecxz mov imul inc hlt fsubrp cs mov ds inc test gs ret dec rcrb iret popa sahf push addb adc jl pop enter movsl pop sub cmp or cmpsb iret inc inc mov inc jmp enter into out jo or sbb add mov mov push stc lret inc std std add add cmp push jecxz add int jne (bad) cmpsb inc or rolb flds inc jg add rolb sarb sbb shlb adc mov mov dec push dec addl push dec mov loopne (bad) mov pop dec ret dec jmp mov pusha test sbb enter (bad) pushf movsl sti add push std fidivrl mov dec ja inc pop aaa cwtl xchg addr16 repz cmp jle lea or inc adc cmp mov jp push xchg movsb loopne,pt xorl and inc data16 cs and xchg xchg addl add pushf add jo mov jnp les into inc por push loopne jo iret dec and data16 pop mulb lock push xor pop pusha mov testb inc mov mov jl xchg cmp inc dec mov rorb or lds data16 inc adc (bad) fbstp rcr mov enter pushf push pushw pop (bad) insl jne push jmp sbb and dec dec pop bts jg mov pushf test xlat jecxz adc inc push inc push (bad) enter adc or test rcr push sub push leave repz and adcl insl outsb int3 dec rcr push fnstsw rorl jmp xor or (bad) fnop repz popa int3 adc repz enter sbb adc or mov ret clc pop daa add lret and adc cli xor jne mov test pop xchg je jno ret jl jl sub and mov mov xor (bad) sub dec out mov jmp rolb lcall test jl (bad) pop jns adc imul adc (bad) sbb jle xchg push mov lea mov lock sub mov inc sbb and mov dec or aas pop jmp movsl xchg and dec push nop (bad) xchg jp jae mov jg lea and dec movsb cmc loopne jne add sbb cmp (bad) mov mov pop lret mov jmp rcpps test mov mov cs int3 (bad) outsb popa int3 jecxz pop hlt (bad) fistpl and xor dec pop cmp ja cmp (bad) mov roll outsl cmp and shlb add jp inc cmp lock ss lret shr not and cs adc xor inc in clc fimul cmp push jbe ljmp pop push push data16 lods pushf xchg imul clc loope cwtl in adc addr16 mov push orb ja jne mov mov sti dec paddd mov jae cmpb (bad) lock mov xchg xchg add sub int pop jl push stos push mov or dec sarl jbe cmpsb ret fadds (bad) testl sti mov jne sbbb insb mov add movsb and xor fstl aas popa jnp pop gs push or fs mov scas push decb xor adc and in pop (bad) and imul adc jmp adc (bad) jmp push mov cmp push lea pusha dec jl mov ja or jbe insl or ds pop movsl clc cmp fwait bound pop adc cmp push repnz and mov scas dec pop mov mov inc push xchg and mov ret enter loopne je pop aam shr sbb mov iret and xor addr16 and sbb ret adc pop cld xor push iret xorl adc pushl dec jae cmpl outsb jmp fisub xchg in es (bad) dec (bad) loopne push mulb fs push sbb or cmp inc push cmp idivl sub mov (bad) pop mov in jl inc adc mov add and push mov aam inc or xchg xchg or imul cmp xlat andb cwtl rcl loop lcall jl into lcall push shlb loope jmp mov stc scas mov bound mov add addl ljmp or cmpsb dec inc dec popa cmp sub aad shrb push cmp mov and mov decb jne dec push add mov in and jmp dec sub andb sub mov insb xor arpl movsb andl insb pusha or sbb jle hlt mov outsb xor icebp mov mov or cli imul sub ficompl (bad) sub add xor cmp push or das push or rcrb arpl or cs dec or cld pop mov and add inc add mov mov inc push or loopne jp cmp fildll nop jp inc loop jae cmpsl add add lods cs mov aam xchg and je xor xchg jnp push fldcw mov jmpw dec (bad) fdivs mov jns loop mov shrl xchg sbb or jbe repz test inc and incl sub add stc hlt jno xchg or inc mov ret outsb imul cmp lock (bad) xchg adc dec cmp or out add push shr sub dec dec lods lea pop cmpl pop mov psubsb inc cld lock insb inc jbe sbb pop ja popa loopne call adc lock (bad) scas sarb add mov add adc inc fs inc test (bad) stos mov or (bad) ficoml test hlt mov and inc mov xor not and pusha add cmp add xlat adc push clc lea sub loop ljmp or hlt dec cld dec cmp (bad) and dec add adc pop push jl out popl xor xlat lock pushf pop push mov pop dec xchg (bad) mov or pop cmpsl jns mov nop sub mov jo cs xchg jnp movsb call mov enter dec jg sub add jno mov add mov incl mov cs xor mov sbb xchg fldcw adc or dec (bad) xor dec pop dec pop pop pop in xor ss add xchg adc jae ret test iret ret mov jo and and jns dec test insl and xor inc xor or push pop rolb in mov sub dec mov fisttpl jge mov pop insl push inc dec insb pop xor and add add and jbe or divb icebp adc ret cld aaa xor dec insb xchg (bad) inc push xlat into je nop arpl xor push xlat dec cmp and in in repz or jno or sbbl cmp jnp aad add rclb dec xchg ret push pextrw test cmp seto sub lret ret jns xorb sub loop push pop inc rcl mov mov loop push jmp push and mov pop xor sub push fldl aad aad add mov push dec add je dec mov or push loop fisttpll (bad) cmp mov add adc mov adc or cmpsl mov lea jbe xor add sub adc leave (bad) xchg std adc jle push and dec inc cmp push rclb jecxz push dec inc adc push or push xchg push clc jae loopne in orb sbb push push lock xor sub daa clc xor add jg cmp push je add popf popa mov cmp mov int andb mov push mov sub xor push mov sbb pop adc test push orl insl cmp popa mov aas lods aas or adc add int mov mov xor int3 fs or or pusha sub mov jmp sub cmp push movsl cs lret mov je mov int3 or mov mov dec jnp clc loopne pop cmp or push or or leave mov or jbe or sbb push xchg fidiv out test jne lods jns and decl mov mov dec imul lret or ret adc jl sar or sub stc sbb adc clc jle mov scas and iret mov sub jne incl ret ret popf or mov repz push data16 lods outsl mov and add adc cs popa add cmp inc je adc out setp inc add push rcrb lret push mov xor iret jne sub movl or arpl sbb or fcomps ret jl cltd adc mov fnstcw addr16 es xorl jb mov rol (bad) cmp pop dec scas jge inc mov mov push mov rorl or or aas adc dec xchg fidivrl jmp mov push lock testl ja cmp adc adc (bad) jecxz cld ds out out test movsb movsb add or mov je mov stos aaa adc mov jle outsb pop fdivrl fstpl mov leave push sbb mov pop ss inc cmp adcl xor jne mov sub insb cwtl or jae dec mov jmp (bad) xchg jno cmp xor xchg push add mov (bad) insb aaa push jmp aaa je in jmp pop xor jmp sti sbb shll sbb sbb fs out int3 adc lea xor dec add (bad) aaa scas and adc test push in add sub xchg clc sub inc jecxz pushf and imul pusha add mov test gs and dec jbe add cmp inc inc jmp mov jae cmp add xchg insb mov (bad) cltd jmp lock sbb add jne mov jae adc push (bad) imul jbe xchg pop arpl inc mov inc inc lea push bound sub test mov xor test cmp dec ret sub jb ficom scas lods add jmp outsb push add inc mov or btr xor mul jecxz mov or sub mov jle add or lea (bad) (bad) test (bad) ja enter setle jmp jae aas insb xchg je dec lea or inc or mov hlt push jne jge and ja ds sbb jae xor xchg loope mov inc cmpb mov cmpsl inc inc push arpl sub sarb call aam cmp lret lock cmc sarb xor inc and cmp ja cmp sub push mov jo push mov (bad) cmpsb push adc imul cmp sub sub push mov inc mov inc inc push sub dec or adc stos cs loope or (bad) das sub je xor data16 push pop ljmp and xchg inc and push aad push dec pop (bad) ret mov cmp daa add mov inc pop insl insb cmp adc js adc mov lock leave push loopne push test js enter and scas ret xchg sub add das rorb push lar add aam mov push out pop lods xchg sahf je or je mov inc dec je sbb or int3 or inc lcall cmpb cmc xchg add sub mov andl jge sub sbb mov lret mov cmp inc inc shr jmp dec enter xorb aaa jne cmp dec push int dec jbe push adc cwtl stos inc xchg add ljmp adc arpl ss cmpb jne inc inc adc pop sub std orb les pusha adc jae movsb push jo jp sbb ficoml dec in mov inc push push mov clc andps sub adc lea in adc add das call mov in push insb and mov cmp and xor mov pushl sub pusha fild cmp adc xchg adc jne mov add je arpl add scas aam mov dec ficom add out inc jp shrb add sub rcl push scas lea xorb (bad) int enter repnz pop icebp enter punpckhbw mov cli outsl sub add inc pusha mov inc pop out mov and or cli add mov cmpsb mov sbbl lock mov icebp pushf push in inc dec push sub cs push fsubl call out jo addr16 sub sbb cwtl push rcrb sub ds mov adc add or mov add cmp call call test sbb adc clc dec mov inc xchg mov jmp mov call xchg loopne mov in cld xor pop repnz and sub fcoms aad lock test mov fiadd cmc inc push test push xchg out pop outsb inc mov push pop jo fld int3 daa cmp mov xorb imul cmp icebp ljmp fidivrl roll adc mov mov mov movb add and add push sbb inc or or cmpsb arpl and jecxz popf adc mov cltd jecxz or fsubrp ret ss je jne pop jmp jnp and inc xor or push inc mov jbe jmp pop mov jmp inc or loopne leave jb rdpmc (bad) xor pop shrb jg jl jae loop test sub xor leave call in push sbb divl or fsub into inc jge cmp notl cmp mov das and loopne inc in faddl call js pop popw lock add adc test mov aam imul mov sbb jle and sti cmp mov or jne pop int3 and mov lea in fsubrp scas lods sub add add into cmpb call fimul push in push mov data16 cs inc mov sub push inc sbb (bad) out jge pusha inc sub sub or xchg scas out je and fdivl sub add push (bad) mov xor jae (bad) inc rclb pop sbb (bad) in and ljmp push cmp out add pop sub push xor cmp add mov inc mov add lret xor jbe mov (bad) imul jb jmp mov hlt out sub sbb dec push int3 pusha (bad) shlb outsb or mov sbb push push sar fisubrl fs add arpl jmp fs shrl scas inc gs stos mov or js sbb add mov sbb sahf push push adc sub bound add mov mov jbe add jns and or dec loope mov loopne add jg and bound ret dec jo es arpl inc imul push push insl sbb ret dec loop ficompl loope add fisubl sbb cld cmp cmp adc cwtl pop push add or pop pop adc adc dec (bad) idivl popa lods push sbb or fist add call sub sub push and loope sbb shl sbb jbe xchg adc inc cmp lods or loop cld add push xor cs sub psubusb movsl sub adc lock xor subb jo jmp dec nop and out or cmpsl movb imul inc and (bad) push or ret aaa sbbb ret mov and push mov add imul cmp xchg mov outsb pop popa enter cmp push or jbe aad ss xchg fisttpl and or or add imul rolb popa lods dec push or push sub ss notb or pushf sub out outsb mov aas or mov cmp dec mov mov mov es mov addb inc inc cmp jb std mov ja add cmp adc (bad) cmp sahf dec jne cwtl inc xchg adc lods dec jmp ud1 lods jl adc fincstp (bad) push sbb lcall xor add insb mov std adc pop je or je out push adc jle imul je jmp add rorb push mov jge or adc ret adc add and out lcall js fidivr and mov jg roll xor add jno cmp pop stos push xchg xchg fwait iret mov iret std imul mov jae enter dec bound add xor or sub rcrb pop fildl movb sar sbb dec les push sub pop mov push pop adc andb push js push (bad) je cmovne outsb sbb mov andl ret in sbb mov popa add mov mov popa sbb adc push jb enter or sti xchg xor into add or xchg mov xchg pop test cmp test rorl test xor fistpll call sbb fmuls dec mov adc das or jmp sub adc mov jmp or jae adc adc and add mov or mov ljmp or inc orl cmp cmp xabort lcall sub lods into ds ffree rclb (bad) subb dec adcl xchg dec lret jge sbb pop cli nop mov mov mov pop jo into (bad) fdivrl cmp (bad) pop aas in mov aaa jne add push mov aaa mov jmp push sub sub mov mov inc push add mov lods push cmp cwtl sub push dec std rorb cmp sti jo adc cmpsb mov or pop or lds push or push add or push or addr16 inc les sub (bad) or sub arpl insl div xor or inc sbb adc rclb sbb fisubrl addb aaa sub es push sbb mov or push shlb test add mov test push divl xchg loope add fnstenv cmp push or cmp (bad) dec dec (bad) adc or dec add push sbb and mov jl dec sbb add and mov rclb xor push xchg xor push sbb jae cmp or je jl repnz decl and sub pop jmp or aam adc or jne sbb adc adc mov xchg pop les jb mov adc pop rcr fistp loope add and mov push ret es idivb adc and sub add arpl sbbb and adc dec outsb lea mov push xor cmp add inc and in cmp insb adc and xor out stc or lock (bad) push or repnz xor sbb push adc subb xor rorl mov adc movsl inc cld or xchg dec cmp cmpl mov rolb adc adc push js sbb push outsb int3 test jnp jp adc sbb cltd lret push push loop xor pop lret or and pusha data16 inc (bad) jl enter cmp (bad) mov cmpsb push ret add add jp xchg (bad) jmp jne jmp lea adc and xor ror or addl jne cs inc inc pop push or hlt sbb xor push pop mov xor jg mov jns pop pop inc dec or inc inc ret and nop xchg test xchg rcrb or dec mov mov (bad) adc add or inc cmp pop lea popa push das push sub add push inc jl mov dec xor push adc adc adc cmp pop test lahf pop inc fsubs repnz dec adc add (bad) ret jle popa inc dec cmp and mov shll enter rclb or or mov clc inc aam sbb mov jmp mov dec cmp sbb jae,pn dec nop aam add pop (bad) pop pop (bad) out add xchg push cmpsb ljmp fisubr adc cmpsl jno mov pop repz jns cmp mov pop mov mov sub push jge aam movb xor xor out jle lret and (bad) std loopne xchg mov inc enter sub pusha and mov test loopne push mov les gs fs jecxz push pusha dec xchg je push xor int3 call pushf imul rclb add ss push out push add xor dec jb bts add jmp and repz pop lret push call iret repnz push es inc dec mov es data16 rorb sarl push add jo sub jae std lahf push gs jg je or je or push ja jnp dec je dec jne inc jmp divb jne sub in outsl or xor inc add jp je stos rorb daa inc bnd insb (bad) xchg out je insb ja or jmp jbe push insb mov decb sti dec icebp mov dec adc sarb bound aam jge fmuls push cwtl cmp cmpsb push cwtl fcmovnu jbe rclb hlt xchg xor jne outsb add sub arpl xchg inc add and fistp or sbb dec mov loop or fsubl outsl jg push int3 jno adc push gs fs mov addr16 or loop or sbb xor and jg in or pushf push mov or jle push loopne jmp lea cmp xor push mov push aaa (bad) sahf and jne test mov addl push dec call add add icebp aam (bad) jle adc xchg arpl mov xchg inc jnp inc adc scas in jge lcall mov push pop pop addr16 inc mov fcmovnb or add loopne mov inc jle adc gs jne shrl rorb fwait shll push push es mov push and (bad) dec and or or mov inc fs and in add test fmull andb addr16 mov repz dec mov lret push je sbb jno mov and loopne jle ljmp test dec add js dec mov ret xchg mov (bad) xor and add dec cmp imul ret add fidivrl jne mov jle push pop sahf adc sbb (bad) lock cwtl push sbb xchg (bad) hlt data16 add adc imul (bad) xor add push fisubl push pop in (bad) js daa ds mov mov pop pusha ljmp (bad) (bad) push jmp pop or call subb sub mov mov aam pop insl jg pop jne mov inc push cmpsl and mov js cltd mov inc cmp xor mov bound pop xor ss cltd enter add push adc add cmp ja adc jp nop add sub inc cld ret or (bad) mov std sti inc sbb pushf or fsubr xor jmp inc push lods rclb sarl enter add add nop lret addb ret (bad) push test dec and push pop ss bound push xchg pop call add adc or (bad) je add mov popf jne or rcrb push fsubl mov pusha pop or popf pop sub ljmp gs ret pop ret mov dec es push add add cmp pop pop sbb or punpckhbw cmp and add push out or jb test xor loopne pusha lret and int add jne jmp sub (bad) out xchg dec gs xchg adc ret sub aas or lds adc add dec pop xchg pop push adc fwait pop push xlat outsb pop lods rcrb adc lahf add add int3 adc out fsubr mov and sbb leave add ficomp arpl xchg fsubr add stos andb fdivl add rol sbb aas dec adc js jbe and or add or push cmp shl jmp fwait sbb add and rol lea mov jo je neg push inc fs jmp into test clc js sub inc dec jno pop fcompl dec (bad) jmp ret push add add inc jmp or inc jns pop and (bad) nop cmp clc xor icebp adc dec daa sbb je sbb enter sbb inc sarb jne shrl sbb outsb ss data16 lock rclb shrl inc adc lcall dec fisubl pop das call daa and add cmp popa xchg or jo addl (bad) cmc shlb dec nop sbb rorb cmp cmp decl js mov ret sub or dec clc push lret pop and jno inc adc push jp xor out xchg (bad) sbb inc test jg test insb jns aas dec imul push popf pop push jle test imul outsb mov pop cmpb cmp add and je loopne ret or jne test xor add or sub mov dec bound mov adc enter xchg sbb ret add inc test inc sbb aam jecxz xchg les insl loop add mov adc adc or or lock loope xor mulb nop dec add out dec xor lahf mov or inc ja pop mov cmpsl cmp jno xlat (bad) xor aam add sbb fiadd test add inc pop ret sub add xorl (bad) sahf rcrb add mov addb and in enter sbb or les outsl xchg loope xchg adc (bad) push jl and or mov jo je cmpsb ud2 inc and lahf data16 and pop and adc xchg mov popf push out jmp push add daa mov fs cmp inc mov add ljmp les mov lret or xchg or dec sub push cmovb mov pop pop push ljmp lds sub xor pop push xor mov mov lods fs sbb add sbb sub xchg pop sbb or and xor sbb mov arpl xor lret add fdivrl xchg fcmove jns (bad) notb sub xchg mov call inc (bad) hlt int3 jmp jl pcmpeqd add adc pushf imul push clc js outsl aam sbb rolb jo cmp cli push pusha jae add push andb pop test pop adc loopne mov inc sbb sbb ja incl inc dec sarl insb jmp addr16 and lcall mulb addl out std push and sbb adc or or out and cmp cmpsl pop dec or mov (bad) or daa inc lret mov lds adc jp mov test cltd or pop mov lods pusha aas mov (bad) xor jae aas or and icebp adc add cmp outsb div adc test nop dec enter jge sbbl sub jns xchg xor faddl cmp pop adc cmc mov xchg xor or cmpsb pop loope and ret sub popf xchg addl push hlt les bnd sub inc inc ljmp imul mov lock je out sub ret jl cmp mov push aas add xchg (bad) dec add pop shlb xchg imul inc and push loope mov mov je jge adc lods adc or adc ret orl enter push or jp push pop loopne sbb dec and inc jnp call pop pop add push or rorb push mov sub push data16 sbb mov rcl jne adc xchg pop pushl fidivl insb jmp daa push sub add (bad) and in sahf je and movsb jae jne adc xor sbb mov inc cmp push aas push inc push jmp or xor push sti clc xor add adc jge mov jge xor jbe xorb mov lret push popa fsubl enter adc rcrl rclb les test pop fcmovb popf rorb imul imul mov push push stos je enter and mov or adc push sub dec in sbb or mov mov aam sub mov sub jo xor dec clc push js fwait inc xor and pushf xor notl sbb push ss push (bad) inc sbb mov cs stc jmp sbb sbb out pusha (bad) or push fadds and adc jmp or pop adc cmpsl add cmc hlt or int3 mov mov xchg pusha sub adc mov movups les imul jns xchg mov add mov push inc inc and sub mov or adc or outsb (bad) sub adcl xchg sbb mov imul mov or mov mov mov inc dec cmp sub adc fdivr scas ret jb adc mov loope lret jge das add adc test xchg xor insb push aam sahf (bad) push jle sbb btr pop adcl sub repnz xchg mov or aas mov loop push or vmovddup adc or divl scas test jne cmp adc cmpsb sub clc scas mov test scas adc in adc add pop mov or dec add mov movups sub rsqrtps movsb inc add sbb loop pop jle sub daa add test jne in shlb push inc sahf inc and (bad) dec sahf and pop mov enter mov rcl lods lods ja shrb ss je pushf and setb popa mov or pop pop or mov mov ja lock and cmpsb loope pop pop fwait push rclb imul mov stos xchg and inc test in outsb sub lock sub insl adc xor push cmpl mov and adc pop cmp or repz or add add jl adc add mov sarl or movsl (bad) mov iret jnp push adc push cmp sub out or sub xchg (bad) dec xor pop je popf ret out mov add insb pop pop test pop mov and rorl xchg dec adc or lcall test or bswap mov add shlb or (bad) or or or add pop mov or or cmpsl stos nop push or sahf add loop or adc or pop adc inc sbb mov sub cmp shrl adc outsb cmpl lea inc dec clc mov push pop push inc sbb bnd xchg xchg sub je iret out cltd adc cmp sub pop push (bad) mov push xor cmp dec js ss xor daa mov into mov ss push cld imul pop add ret pop cltd addr16 pop mov add cmp and and sub pop loop,pt mov popf hlt daa and sbb pop jo pop mov push add or sbb pusha clc hlt sbb jno hlt push cmp inc cmpsl mov dec popa fsts sub pop lret sub and add inc or mov xchg inc stc cmp mov push jno push push mov dec push (bad) pushf push sbb stos sub (bad) (bad) dec enter jge into mov call dec push in loopne mov xchg hlt push call push cli push sbb inc jb insb mov outsb call fadds dec mov push nop pop jns popf xchg push pop lods mov int rclb jb jo cmovo mov or add out insb jmp add jmp mov jmp sti add aad dec sbb pop cwtl xor int3 (bad) jo jmp and pushf mov es ja inc adcl push cltd jle enter loopne jge cmp aad or aas mov ja dec adc fildl repnz mov incl test testb movsl lea ds push pusha mov jbe xlat sub jg and add add aaa cmc inc mov movsb fdivs jg es xchg ds xchg movsb rcpps inc fsubrs clc out lock or and inc or ret mov xlat push jnp (bad) call ret imul aad or hlt je push push ficom test or jns or out dec or add push mov xchg lods xor (bad) jle rorb enter pop bound adc jne insb mov adc clc cmpb jl cwtl cmp add jmp (bad) jb push incl add xor adc or xlat notb adc push jl cmp adc push je adc fbstp cld movsl movsl movsw xor mov jge mov fimull add push inc mov sbb leave push and (bad) push mov xchg ret xor loopne add iret ss adc mov rorb inc loop mov pop sub or mov and dec push sub fildl mov dec add push jmp inc or loop loopne into ds les rcrb bound mov (bad) rorb fist iret orl mov dec or xor adc je dec and sbb push aam or xchg mov fsub mov bound inc (bad) ret insl cmp and mov xorb mov outsb int mov adc push je jno mov fwait movsb and hlt fnop loope stos xor repnz loopne je or and sbb add add adc dec mov push add je fiadd adc jns xchg adc add outsl and jne push mov mov cmp xor cmp out es add hlt jae xchg enter jecxz push call nop mov mov sub cs dec gs hlt jae das rorl xchg popa mov fisubrl sub mov push cmp or dec xor mov movsb jle,pt jne test mov push jecxz push push inc sub inc sub mov add lret lret rorl rorl sbb call jbe inc mov out movsl int leave xlat jnp popa movsl popf xchg sbb jbe imull cld mov push loopne mov sub in test add rorb adc xor cmpl xchg stc mov push mov xor add xchg out ljmp popa mov add mov cmp jno (bad) jmp mov xor or mov lds inc xchg adc or dec test cmp xorb lea repz sbb or cmp ret pop xchg shrb mull lea movsb or pop mov scas movsb (bad) mov rcrb call lock loopne arpl and les mov inc dec out lret stos fidiv mov pop insb insb ja ja or inc or in es jl or jg dec call mov cmp add adc insb push and aam mov push sub pop jmp xchg push sub pushf inc pop js inc pusha mov (bad) pop out mov or push in adc rolb xchg sbb mov arpl jg jp push sti dec push cmovnp fmull inc scas pop push lcall push push mov cli cmp add mov aad jmp inc and dec in mov movsl scas sbb push or cmp fisubl push jmp adc and sbbb xor repz rcr add lea inc cmpsb or cs dec mov lock outsb push lea sahf sub pop dec adc fs inc pop mov lods cmp mov cltd add sbb (bad) js cmovb or mov dec adc jmp jo,pt jle je mov (bad) mov push and test mov dec push pop pop pop (bad) dec pop sarl aam or inc mov inc jo mov sbb mov je rolb testl std lea outsl rorb sahf mov (bad) sbb push cld adc cmp adc jl incb jae cs hlt jbe inc dec adc lahf dec dec out sbb pop xor out ljmp cmp xchg mov xor fiaddl inc adc sub sbb fnop dec fsubrl inc sbb cmpl sub mov pop xchg mov cltd pop pop test add ret rorb movsl mov or in inc rol cmpsb mov mov cmp cmpb lcall mov mov jmp adc and add ret cvtps2pi ss pop mov push inc or fiaddl adc aad je fwait repz cmpsl push jnp add iret not pop popf inc adc cmp fbstp push pop sbb mov or inc cmc push sbb cmp mov xchg add inc add lods jbe mov add sub in orl mov fs ret ret pop test xor mov out lea popa add jmp inc xchg inc in adc xor divl insb mov pop lret mov pusha or pop jl dec or insb mov ss lea xor dec out cmc adc cltd (bad) loopne lcall test sbb xor mov jmp je or xchg negb scas adc mov call cmp insb je fcoml push rcrl ret bound movsb arpl flds shr adc pop adcb out or je xor and mov sbb push push sub mov rolb sti add mov icebp nop imul xor cmp xchg dec xchg in fiaddl loopne xchg dec adc sahf ds add out push or mov sti push sbb xchg xchg or pop lds mov daa movl pop add and outsb mov inc mov bound mulb lods xchg xchg (bad) ds and adc (bad) testl stos iret xor pusha mov sbb and add add xorl mov sarb movsb mov mull jno sbb fst js lock jmp pop inc xchg aam dec decb aas jecxz ret js or sti int ret pop xchg mov (bad) mov aad leave enter add adc mov jne loope inc paddq add (bad) loopne push and xchg scas jne jge cmp enter jb dec pop jns push mov adc ret pop cmp jne mov xchg lock rcr mov (bad) sbb idivb push add mov and push leave fadds push push inc test test (bad) fcoms in xor xor mov sahf orb add sub into adc in sbb dec les (bad) add test or sub dec mov mov jl xor lods and rcll clc jle fcoms cmpsl pop jne push jb popf mov xchg and xorl popf lahf cld jge push fdivrl cli dec adc leave sub movsl ret ret mov xor loop or inc cmp xchg fs or (bad) mov xor push jo fwait or xor repnz and mov mov pop adc push jbe,pn test mov ret and call out push lret icebp push in loope stos push gs xor jb test or cmp dec xor pop sbb les outsb (bad) push push ljmp stos sub push das or aas aaa cmpsb add negb xor mov push sbb xlat ret jo mov loope jne inc std pop push (bad) or push out jmp insl push shr or push mov outsl adc pusha mov insb mov loop and push or push aam jmp jge push or mov push or call ret int3 fisubr mov inc (bad) mov push sub (bad) pop cmp lods lock add jge (bad) adc add mov add pop or add jae adc cmp ljmp lods add jecxz or fmull mov mov std jmp (bad) cmp push in out jmp ljmp mov jmp mov jmp or push xchg sbb mov lock fwait push add add mov adc (bad) jp adc mov dec daa cmp das test mov jmp xor add add outsb push and adc out push ficompl dec rcrb ret (bad) outsb sbb sub movzwl and adcl dec mov and xor data16 les push cli imul mov lea cmp or cli xchg rcrb cmpl clc mov in inc xor sbb pushf xor xchg push std xchg xchg add add ljmp sbbb mov cli dec and cli les adc mov sbb rol inc (bad) jne adc neg jbe popa pop sbb cmp add xor inc scas jle or cmp jb add dec or js or mov mov jb (bad) mov push xor sbb mov cli cmpsb add and in mov lea jl sbb or out call xor incl (bad) (bad) cmpsb push push and icebp mov pop pop or jne pop hlt (bad) add andb rcl mov adc cwtl mov xchg stos fisubrl shr push in inc or mov push xor xor and cmpsl cmp adc test mov and lods cli std mov aas dec test mov mov fstps movb push enter mov fwait pop push mov out inc or cmp cmp cmp ljmp push dec cmp cmp or mov aam fbld inc dec bound rcrb xchg or call mov test movsb pop les inc sar sub (bad) xor inc adc add imul call adc icebp enter cwtl or rolb and mov orb in cmp or mov icebp jge (bad) sbb add pusha jmp fdivrs add dec (bad) mov xor loop xchg hlt ss fmull andb (bad) cwtl fcoml aaa gs inc fidiv fiadd adc mov loop push es or cs test inc adc loop (bad) and push jae mov cmpsb fimul (bad) sbb out pop test in sbb jmp mov add cmc pop lods push out andb dec inc call adc push mov lock jmp fsubl push mov mov es or adc mov inc inc fs es ret push xchg or pop nop mov not daa lea cmp rorb add insb hlt movsl add testb fldcw jl and mov and or xlat dec sti pop js shrl aaa xor iret test scas jbe jp inc jne lea xchg xchg int jo fs imul pop and in push push cli adc ret or and cmp shrb add inc mov xor cmp stos and add sahf mull dec movsb mov adc xchg call stos mov sub hlt ret and aaa adc sbb mov lods mov cmp and daa scas add adc ret lods xchg fidivl std mov and test jmp or or repnz nop xchg add sbb pushf rcrl orl add testl ljmp dec and or adc mov adc dec mov pop cmp mov mov (bad) mov jmp dec mov rolb ret inc push or push daa xor fbld (bad) jbe jmp jl pop orl mov adc in cmp in arpl cwtl or dec jmp sub cmpsl dec jmp pop add ret mov testb out pop orb adc sub mov mov jg andl enter test sbb mov lds (bad) aas and int3 jmp xlat xchg into in cmp xor or (bad) push pop in mov nop mov test xor out inc fs or jmp adc push mov (bad) das mov pop dec pop (bad) xchg mov push and (bad) rcrb xlat dec sub aad fcomi mov test mov frstor sbb mov test fldpi mov out and pop sbb xor fcomp cmc fs sbb and dec xor dec adc or and add jl adc out mov pop orl ffreep adc xchg shl nop popf ja add xchg dec sarb mov push clc jl call jmp cmp leave add (bad) notb add sahf mov adc imul (bad) mov or xor mov xor and lahf xchg dec lcall mov mov inc cmp mov add pushf dec lea or pop jle lods fwait pop pop push mov mov cmp xchg push call out clc jg and mov jne movsl fsubl mov dec inc push fsts or add sti sub pop add and std test insb push dec xchg dec and (bad) xor test rorb and adc push js cmp jg call movsb scas cld jmp cmp je (bad) and mov xor xchg (bad) les xorb mov mov sub xor rcll mov push mov pop mov shrb jne xchg loopne push jecxz mov fcomps push or xor pop push sbb ds mov mov jmp jmp mov inc mov inc je mov loopne sbb sbb sbb sub idivb pop add add add mov xchg jne test ja mov xor (bad) xchg sub and testb imul mov adc and dec or mov nop iret aad paddd and cmpsb call mov sbb pushf or add mov sub sub or adc sbb jno jge adc sub xchg mov cmp push push mov mov cmp sub lea cld dec fs jle cmp push mov mov dec das push ss push fldl sbb mov push mov sbb mov xor pop (bad) jmp js popa mov ret int3 and ds adc add push jmp outsl and fmuls loopne adc jl pushw xchg pop testb ja shrb add or sub pop jge push out cmpsb mov leave (bad) rol mov popf dec xchg popf dec sub lea add and test dec int3 scas or mov push mov rclb xchg cmp sbb push pushf jg push and scas fldcw xchg pop and pop repz push sbb and inc sbb push cmc adc sahf or sbb js lock add inc xchg pop dec sbb in dec cmpsl xor or add dec add dec pop ret (bad) aad js mov lods sbbl xchg add push mov and lods mov imul lock or addb pop xor pop shll cwtl cmpsl or or inc adc sahf hlt cli fdivl adc jl add pop mov adc outsl push outsb fs fdivrs push mov das or pop lock bound loop call jl lret ljmp jae int3 and fcoml bound push bswap inc adc shrb and (bad) push push and pop mov push ret mov mov pop sbb repnz dec or inc or sbb rorl jmp into rolb push inc dec pushl rorl ficoml push daa push add mov mov push jbe (bad) dec jmp push in mov sar adc or pusha call push jb fcompl testb add jae jmp push jnp cmpl in sahf add add or fiaddl mov xchg xor adc movd sbb lods (bad) dec insb inc sub xor arpl dec pop mov add cld cwtl push testb mov pop inc sbb xchg add push sub jge (bad) xor mov imul sub loopne push fs cli or aaa das mov xor popa mov ljmp mov (bad) adc adc repnz or notb ss dec mov popa or js js movb popf arpl jecxz mov mov mov jl push loop rcrl icebp sbb in (bad) fimull dec cltd push or repnz pop hlt sbbl divl sub cmp je cmp movsl push lret sub xchg push dec jmp xchg xchg lret imul add sbb adc inc cmp inc push outsl push xchg in scas xchg test sub pop jmp (bad) aam pop rcll mov shrl xchg pop movl rclb and stos jbe mov scas mov or out (bad) add jb sarl add push push bound outsl int3 cmp jo and sub test insb or push adc lret jmp cmpl call push jnp push js and sub nop daa (bad) mov adc scas sub cmpsl push push mov jmp cwtl rorl cld push lods sub inc fisubrl jnp test pop xor dec inc mov pop sub dec push jmp nop push cwtl ret dec in mov or sbb lods pop mov aam push out mov inc and push pop sub xor sbb cmp out dec les jmp movzwl push push or push stos je or push inc popf sbb dec or or loop js xchg pop mov inc clc xchg mov or clc cmp inc mov in leave xorl (bad) xor xor inc jo rolb and fsts pop sbb fsubl cwtl fild push out mov movsl xor inc loope pop jecxz cwtl lahf nop lods ds and repnz das pop repnz insb arpl lock je sahf je nop or sub sbb push fimul xor mov cmpsb xchg (bad) xor iret xchg dec mull add hlt lahf je inc sub in shrb xchg mov push push lock (bad) jo push js dec fnstsw cmp rolb or push adc add es mov mov xchg outsb mov popa dec cmp gs js fstl (bad) lret popa fwait sub jmp sub and push call andl pop dec jl mov cwtl inc xlat imul adc aam xchg push fisubrl dec jo jg mov test mov je or push push or fdivl or or lahf les subl lock int3 (bad) sub test jge in or popa cld data16 (bad) or push push out aaa lret push js xchg loopne or and fdivrl arpl aas inc pop cmc lea mov jb lret xchg or pop dec and cli (bad) and dec mov xorl push xchg (bad) mov pop adc fadd lock push adc xor hlt jl ficoml push adc lcall in dec rcll inc pop clc add ret xor adc loop lcall add mov mov aas inc xlat mov pop add inc jbe mov or push push inc dec mov out fsubs adc xchg xor data16 lods xorl aad sub adc test push nop (bad) clc mov in out shl je inc (bad) push bound adc add or adc push or das ret sub and call and aaa push lcall jl cmp fcoms jg add pop mov push or pusha xchg dec adcl insl stos push hlt imul in in and xor out xor mov pop mov inc insb jmp mov stc in xchg pop mov push sar xor push push pop adc inc sub xor sbb call pop pop jns sub dec lret xchg xor mov xchg imul or jae dec dec push fmuls dec xchg mov call rcrb loop xor lock adc cmp add (bad) (bad) imul push push pop cs test clc pop and lret negl pop xchg cmp pop je ja jae je ljmp jp cmp cmc or cmp imul jge addr16 out xor add sub or jge rep sub mov hlt jne xchg cli jmp xchg xor clc je fmuls sub clc ret sbb fwait mov inc push push cmp fwait aam jo aam push cmp push popa or stc xor add or jne ss ja mov mov xchg add dec push sbb push sbb arpl jne xchg jnp pop vorps cli pop or cmp jp mov fwait sub adc divl xor addl push clc pop unpcklps movsb inc add jbe adc mov and and pop sub push mov mov jl add xor push and inc mov call inc (bad) pop lret cli cmpsl pop inc mov add sub and or js adc outsb aad pop dec sbb xor in dec sbb pop inc mov (bad) mov adc xchg pop (bad) add in jno loopne (bad) cli lret push inc add fucomip push xorl or adc lods int xchg jg cmpsl jle adc fwait add subl es add (bad) (bad) or jl push fsubs push shrb in xor pop adc daa adcl and test jl push fcompl js jmp stos push dec test iret clc cmpl mov rorb (bad) in push and push or mov push cmp jg into sbb into in fnsave xor jge xchg fnstcw pop aam mov add je pop push sub mov and sarl mov push cmp jnp insl sbb mov mov (bad) cmp sub ljmp push push push jmp jle sub mov enter mov iret sub lock sbb sbb and sbb sub pushf push jns cmp fisubrl xor push or inc int3 cmpb lock cld sbb lret add jl pop sbb mov sub mov or enter in sub sub push mov sub (bad) lock mov jmp rclb mov or push or inc sub xchg jp cltd mov push cmovbe fmull jle push add fisubr inc inc cmp in jmp mov sbb inc cmp insb (bad) jno adc adc cld xchg sbb nop pop repnz (bad) or aad add adc mov fwait push mov push loop jmp stc mov adc xchg idiv out xor aas aaa fisubl sbb pop idivb push or scas sub push cs pop xchg lret xchg or mov or xchg insl inc mov xchg aam jge jb pushf inc mov loopne js inc add xchg lea add mov add shl inc and add push mov loopne jg push add shl std (bad) sub inc scas sbb lea nop and pop xchg mov or sbbb mov add mov inc fistl ret and push cmpl adc xor js xor cmpsb mov cmp and inc cmp inc add bnd ret pusha inc xchg lods mov bound cmp jo xor daa add or out push sub pop adc mov sub xchg cmovle jne adc icebp push add out adc call pop std inc aam jns movsb lds add adc enter sbbl mov pop fnop sub (bad) mov fst cld or dec dec aam hlt jl adc add cmp rolb sub and mov push or lods fsub sub sbb jno mov mov add (bad) push mov icebp gs sub mov call je pop test adc movsl movsb test cmp or inc pop pop push inc fnstcw xorl add xor sbb fist lret mov data16 nop lods or mov adc cmp push les xor cs adc sbb js push je hlt xor sbb and shlb addl cmp or adc and cmp pop sbb nop cmp sub push inc repz cmp jae dec cmpsb push jne pusha nop dec xor cmpsb rcrb rcrl dec mov (bad) mov mov (bad) pop adc sbb cmpsl sub test int add or and add jb out pop das pop jb ss addr16 movsl aam in cmp xor outsb or push adc cli test cmp (bad) in aas dec dec lods jns jmp inc cmp inc nop movsb (bad) xchg sub ret outsb inc adc jl mov adc pop adcb and leave dec leave (bad) movsl xor push in inc cmpsl test dec or imul repz (bad) dec add cs xor mov mov shlb rolb and inc ret mov out add ds pop mov loope inc inc mov push mov sub mov jle sub icebp lret je imul ja add or sbb pop inc daa addb or sbb or loope cltd lds inc or pushl mov lahf dec adc inc pop test (bad) or adc in push xor add lea push in loope cmpl clc data16 push or mov dec xor adc xchg cs push arpl inc in nop mov icebp scas add xor sbbl sti js add inc hlt push cmp ljmp pushl pop test dec mov or or test cmpsb fadd dec aaa push loop cmpsl rcll rclb pop mov push in mov xchg cmp lret adc pop or mov les les add cmp (bad) or rorl add push add cmpsl cmpsl and imull cs inc jmp ret pop push dec lcall add push push or inc hlt dec inc andb dec mov les sbb cs inc jbe iret ret cmp rcrl push shr cmp mov fdivrl pop ret xchg jmp hlt cmp punpckhdq xchg test xorl jg jmp inc lds pop rcr push push aad ds add sub jno xchg or dec ss aaa ret jle call aaa ret les (bad) clc add aaa (bad) lcall loop lea lcall jle xlat or out daa xchg out or xor xor push add stc cmp or sub add (bad) jmp lock mov push mov jecxz pop add mov and push je inc out daa imul ret outsb notb sbb and lock sbb popa push pop pop cmpsl mov mov mov cmpsl xor xor dec hlt mov push aam mov sbb aas add sbb out cmp or xor sti les ret jne and insb ret push sub adc mov mov imul sbb fcompl and (bad) daa cwtl loopne mov jno mov lret sbb insl lea dec inc xchg add pushf push and enter sub (bad) imul jp mov lods dec and cmp sub add ljmp test xor fldenv sarl xor pop mov dec or cltd mov dec jbe cs or fildll vmovaps push std dec pop mov cwtl dec mov sub mov les cmp jg ds push sub popa push dec mov mov dec add leave (bad) push aad cwtl pushf call pop ss mov out inc dec jnp lahf add or dec pop push dec xor or aam cmp dec iret push ret or imul jo cwtl test inc sbb test and lcall jns mov in inc rorb pop lret xor sbb test or xchg lret push push push test loop inc flds dec inc mov fiaddl clc push sbb xor out cltd js and pop adc xor andb fmul stos xor mov rcl or add loop mov jle pusha inc cmp pop or xor cli cld push lea inc cmp sub cld lea cmpb jmp cmp (bad) xchg icebp or lock adc insl sbb or lret jle cmpsb xor xchg test pop mov popa loop xchg lods inc ja jno out sbb add rolb xchg cli pop cmp mov jb (bad) (bad) repnz dec or rcrb push imul pop enter clc xlat sarl js and pusha add inc adc push xchg aaa or das rorb adc sub popa (bad) pop or xchg cli leave rclb mov and add add rcll rcrl je (bad) imul leave push bound pusha popa sbb aam or or leave pop inc inc adc or int3 jno movsb mov bound dec add adc test (bad) rolb hlt inc movsb out pop ss xor mov rorl or adc (bad) or inc jmp and jp inc push jo je int3 sbb inc inc nop adc add inc xchg fsubr mov xor icebp jg dec mov not shr and in xor or movsl add and xor (bad) cmp inc inc or push pop jl mov push hlt loopne mov sub mov pop and movsb or fisttpll ss aaa or sub inc pop jge cmp sub or imul ret or push and jns fnstenv jne jno pop inc add and jne popa jmp ds fmull aas jb xchg aam cwtl jl js push pop inc add mov inc and push sti adc dec and xchg sub mov or dec daa lea add xchg sub push test pop data16 dec outsb mov gs add and mov mov or xsha256 cmpsb push and xchg mov addr16 ds push pop dec sub and loope mov xchg sub push pop lods dec out push imul pop repnz in rcll and push aas or push pusha iret xor adc arpl add or rol and shrb pop inc push push rcl push push fnstenv add insl xchg (bad) xchg leave inc imul jne sub xrelease sbb pop sub roll sub movsb and test add sub jmp mov aam gs test loope pusha push pushf mov cmc (bad) push cmc adc mov xorb xchg or mov cmp adc mov mov jmp rorb inc adc mov movsb rolb or out pop pop mov or xor mov mov in add mul adc test out mov sbb or lock int cmpsl orb cmc in mov push or lods adcl add dec pop mov sub sub data16 push xchg dec inc lods insl sbb fiaddl pop xchg mov pop decl dec ret stc pop jo lock xchg js adc inc jmp insl cmpl dec jle sbb dec push pushl inc xor and inc hlt sbb mov dec dec dec bound notl (bad) jmp jne lock adc dec add add and add outsb lgs adc push pop push sbb and sub inc sahf stos jmp jge jnp push adc push test cmpsb aas adc les sbb xchg ret sbb xchg inc xchg popa pop sub aaa add add mov nop fwait clc aam jne jae lret pusha adc mov pop call or push mov mov dec insb int3 nop mov adc xchg (bad) lret aad and mov aaa fcoms xchg push into fdivl xchg mov mov mov out adc adc jle std xchg push push cmc sbb in or mov (bad) test push inc push adc jne dec add sub sub dec dec cmpsl jge and loopne (bad) (bad) or sub sub or sbb iret dec or jne gs sub loopne cmp (bad) push dec daa or bnd inc (bad) cwtl dec test pushf and xchg inc jmp aam lods fwait jp xor mov loop jb rcr (bad) lock lods sbb pop adc call cmp test xor testb divb and call pusha bound hlt adc bnd add dec push lcall add cmp pop inc mov cld flds inc push push push popa test sbb (bad) xchg icebp cltd clc xor mov inc and pop mov push ret xor mov and adc jnp xor jae add jbe push add pop push xor stc ret add mov sbb rcrl mov jle or pop fistpll or push sbb push or pusha mov jmp or js lret jb js mov mov test arpl jmp mov jmp push mov test push ret cwtl (bad) fbstp pop ret mov sti cmpsb dec enter push mov and push sbb xchg out cmp push ss cmp push sarl je push inc push add or jmp test pop (bad) in in out stc rorl cmpl (bad) sbb dec pop mov stc or mov or rcl decl inc sub pop or push inc inc sbb push je push push jp sbb xchg loop,pt dec adc xchg sarb inc inc jae mov pusha pop (bad) mov xlat out push dec ljmp push and aas or inc movsb xor add mov out xor pusha shll and mov xor orl arpl ret mov push js (bad) cmp push popf jns stos sbb xchg and adc outsb enter push (bad) push int mov inc cmp sub dec or pop enter jle and js pop add or mov or push (bad) mov adc mov pop or mov and dec jmp sbb xor outsl mov add xor ja inc inc aaa and push ss fbstp mov push or xchg js hlt pop je inc and hlt cmpw je inc jmp jbe cmp sub (bad) or (bad) cli roll jne inc push je cmp or add inc push mov xchg adc and pop popa and mov cwtl xor mov scas into mov adc jle sbb outsl ret fisub and and cltd xor cmpsb mov cwtl mov inc sarl adc adc fs inc xor push in add scas frstor add adc test jmp cld lret add jnp pusha push mov and jo or xor imul or sbb movsl adc or (bad) les cmp (bad) outsb add in aam mov or sbb enter cmp dec call iret jge or push push add nop pop pop xor (bad) adc inc push data16 in js scas scas push or pop or xchg jmp push push in cmpsl testb push xchg and inc pop out in sbb push ja pop std sub aas or inc hlt jne push or xchg cld jg aam mov scas int3 movsl clc pop lods sahf or mov loopne sbb cmp out jne sarl inc dec gs inc or push cmp push test sbb or test (bad) sbb pmuludq cwtl push sub jae (bad) sbb push lods fiadd ds in sub pop or ss xchg mov jo pusha mov ficom push imul xchg int ja (bad) xor loopne pop cmpsb dec loopne adcl or cltd mov jecxz les test lea sub rcrb or movsl and add loopne into and insl pusha add add jae adc (bad) int3 stos mov call pop outsb ret push mov sub je or pop sbb iret ss nop ss pop cmp inc push push xchg jmp addr16 mov ja dec adc xor in push insb ret jge jmp xchg rol or mov shlb insb mov jnp mov shlb sbb mov rolb inc inc (bad) movswl cmpsl lods enter sub mov push xor insl adc fimull add les jo ret and inc enter inc mov adc pop cmp out inc aam repz lods movb pop or cmovns nop and fimul clc hlt pop sbb dec push cwtl mov mov test call ret loop cmovbe sbb jae pusha push lret fadds pusha or (bad) xor and pop cmp sbb fucom jmp popf mov adc adc fsubs fdivrs mov loope push dec rolb pusha xchg xchg inc (bad) fnstenv mov mov fwait push out das in call je sub cmpsb pop leave push mov in sbb push or rcrl xor sbb jo xchg aas push fistpll loopne pop push pop push push adcl push jecxz jmp dec adc dec adc dec mov fisttpll (bad) sbb inc sbb adc pop (bad) jo inc lea xchg loope stos push sub rcrb mov loopne cltd insb inc loop xchg inc icebp movsb add push xor push js pushf lock lcall je push sbb stos cmpsb rclb or or mov pop pushl xchg jno fidiv pop mov daa jo int int scas pop (bad) hlt mov cs mov adc clc sbbb scas pop cmpsl loop sub xor in adc int3 dec or jo push xchg (bad) adc test sbb push adc inc and imul hlt adc out mov test cmp push shrd pusha pop and push test pop fcoml sub adc push (bad) mov adc add adc fnstsw xor notl push and fs addb cmpsb jo push popa dec pop jg lods lods cmp cmpl inc adc test pop dec movb or cmp adc sub push aad cmp movsb inc xchg add sub fucomip adc popf add mov flds testl add mov sbb inc inc lahf xchg push idivl cmpsb mov adc push and scas jp popf adc js and repnz in ljmp fnstenv subb push add jbe lods dec loope je and or cmp loop,pt push cmpl push inc imul test mov sbb mov mov adc clc (bad) push cmpb sub push mov and sub fstpt xchg clc dec push cltd movsb hlt in call test icebp sub mov xchg rcl sub lcall or rcrb repnz dec jae dec push push test sbb xchg loopne xor sbb daa movsb adc lods aam gs lock sub mov inc (bad) stos fcmovnb pusha push add inc mov jl xchg push xchg insb mov sub sbb and push push add push fiaddl mov in bound inc mov sbb scas test mov xor cmpsb push sbb loopne xor dec xor push xchg push push cmp and sub add lds stc or xorl insb sub xor aas fnstcw (bad) xor hlt clc imull jle or cmp jne inc cmp jne adc jmp cmp push stos ret mov insl cmpsl lcall and xor sub cmp je stos mov int jbe fsubr pop push and test xchg sub pop and cmpsl mov gs sbb push sub cmp test jg test imul sarl hlt pop fdivrs orb inc scas fiaddl das movsb push js pop push xor lds mov xor or push cmp gs setbe pusha pop jmp pop popf sbb push adc adc aam lods adc ret cmp aaa jmp or hlt lock mov xor sub inc popf ja xor aaa addr16 adc lea xor push test pop mov lea mov xorb inc xchg xor xchg adc lock cmpsb pop xlat daa xor jne xchg pop sub scas mov and adc fildl rolb and sbb orb or outsb flds mov mov and push loop sub lcall test sti xchg loopne cmc sahf sub pop xor push orl loopne jg pop push push sbb cmpl mov mov or sub jmp add enter jo push adc adc in mov jmp add out xor pop clc mov or enter xor ss bound sbb nop dec lods mov lods or inc xchg and sahf or add ret mov sbb es in cmp mov sti in ds adc ljmp cmc andb sub adc xor xbegin push ss jmp jne pusha pusha sub dec ficoml pop mov push xor jmp push loopne push ficom inc jb jl lret faddl dec adc lods int3 test sbb sbb cmp inc or inc inc mov adc lods adc dec push pop ss and stos xor xchg fcomi add jo fwait (bad) fsts or push add xor pop or mov mov lahf mov xor pop jno fwait and dec ret xor adc jge ficompl (bad) and (bad) pop (bad) xor jnp jne je dec sbb (bad) movsb mov sbb push push add fist push aaa hlt mov inc addr16 jno ret aad add ja mov sub mov mov mov pop test dec or mov lock sbb jns push je pop push addl cmp or jo cmp cmp push inc lods scas jl push xor jne call ret popa sub fild pop add adc jb jge lret push add pusha xor add mov adc outsb sbb xchg sub or dec push scas inc push inc cltd dec or sbbb sbb xor mov mov movsb out pop ret pop icebp sub sub add test (bad) mov sbb mov loopne inc add loopne or sbb and add push add testb dec or in mov xor test adc lcall jbe into pop cmpsb mov shrb push sub jno cld nop or xchg xor les lods orl sub popa sahf mov jge jns js push inc push or scas and aas pop adcb mov outsb push clc pop outsb xlat add test add loop and in cmp mov sub ret rolb push add jge mov mov or ficom enter cmp mov xor jmp add cmp rcl add push adc lret cmp jne in hlt fs push mov (bad) mov push cmp mov or mov je subb int3 movsb mov push mov imul in aad fisubrl inc mov fwait rclb sub je cmp sub jg push or adc int loope nop push loope jne lret cs mov push out pop pop sub adc dec mov (bad) icebp push es pop jns sbb lret sub add lock dec testb mov or cmp pop adc movsl loope icebp cmp scas loop fstpl jb fdivl push nop adc jne mov sbb jbe and dec or testb lea and sahf ficoml mov outsb das test mov idivb cmp push pop loopne cs aam mov loop jb int adc adc xorl divb andl mov fcomps jbe lock fcomp mov ja inc push aaa adc mov popa repz bnd call and (bad) sbb popa out les bound mov stc xchg sbb jmp xchg daa xor inc cmpsl cmpsl rcrb or add into stos fimul adc aas mov jmp add cltd sbb pop or jo imul and maxps dec sbb add scas (bad) shlb jmp push scas popa and jno lods icebp stos cmp dec add push dec mov test pop dec iret mov cmp iret jmp and and sbb adc pop out in repz in ds repz and ds sbb xor inc push in add dec add sahf out outsl pop ja pop pop fdivp mov ret int ds repnz sbb and ja es in insb jns shll testl fmull push add xchg push lcall movl call inc mov test inc sub sub rolb jb clc hlt xchg mov mov in outsl xor call faddl cld je fs test or dec mov xchg mov dec mov pop mov int cmpsb (bad) hlt xchg or lds sets mov lret mov ret iret or inc rcrb mov xor mov jl push aas sbb push cmpsb (bad) cld ss mov loopne cmc imul aas sbb push push push sbb push and mov adc (bad) int dec or xchg adc push lahf loope jb adc daa jmp push lds cmp cmp adc jbe imul hlt call push repnz push (bad) rorb push push xor push push hlt sti adc nop add inc aaa inc enter fsubs push mov bound mov pop dec loopne inc xor test xchg stos pop dec in adc loope inc js cs add cli ret cmp daa jne sub pop int3 pop sbb push xor aas pop les push sti jno arpl sbb imul and push fbld pop lock jo outsl dec (bad) mov inc data16 adc pop add aam cltd stc sbb adc je dec push fs ds jmp addl push sub pop xor xor mov aad add lods jb adc push loope or dec mov jo push sahf and lods sub mov sbb and adc or inc imul push les adc test inc cmpl cmp cmp or cmp in cmp pop mov add mov and xchg mov and push push fdivrs ret add xor inc lds xchg mov cli and or inc idivl imul fmuls push imul sbb fdivrs cs lea adc mov fimull cmp dec adc cmp cmp inc sub xchg stc arpl ja hlt cmp sbb test sub (bad) adc mov ficoml das jbe or je dec jne roll add fmull or and and mov inc movsb fs inc repnz into (bad) imulb xor mov mov into pop je cs cmp sbb cmp cmp (bad) jbe clc and pop jmp cmp (bad) xor or pop xchg std adc push loopne sbb cmpsl add cmp aaa pop jne mov data16 out rcll je adc push ud1 push mov adc add add or inc inc xchg dec daa push (bad) mov adc and xchg fnstsw sbb test fcom cmpsl cmp movsl adc add shll adc xor std lds sub adc lea mov pop or pop dec das cld lahf xchg lock sbb or or and mov in jo sub jo and pop add mov jmp adc xlat sbb mov sub adc and sbb xchg rcrb sbb cmp roll (bad) in pop dec jne inc or xor inc jge add inc mov sbb mov or and mov jmp and push in (bad) jge test repz sbb aaa push jmp mov leave push dec aaa mov sbb push int3 (bad) mov popf push cmp dec es sub lods mov faddl push mov lret nop loopne cli inc or rclb lds lods inc cmc adc lret pop js adc insb push int3 push adc pusha inc in dec push push xlat mov cmp dec pop adc cld pop lock or insl sub test shrb xor insl jge or mov mov (bad) pop in or movsb push aas mov (bad) mov inc clc ljmp in mov les or aam mov jmp mov push inc mov mov rclb sbb icebp dec add jecxz mov or imul sbb mulb cs inc incl jmp or mov pop add cmp and clc mov cmpsb sub (bad) lock or sbb push jmp push xor mov adc dec scas adcb mov push scas fnstenv cltd jno jecxz lahf dec mov sub mov popa xor jmp and mov adc inc adc add stos lcall test orl adc gs or sub mov or cld dec or xchg mov sub push aam stc ret inc pushf jo mov xlat lret (bad) sub cmp nop sarb inc add xchg stc std inc mov cmp jne xor jmp rcrl hlt jle sbb loopne in add inc pop push add mov add movsl icebp (bad) cmc cmpb xor aad push sbb mov je push or mov mov xchg inc (bad) icebp add inc jb add gs gs add test addb push or xor xorb mov movsl and addb sbb lret cli out faddl orl add add fisttpl push adc push or sbb add mov lods loop pop xchg jl and pop nop dec adc adc mov fs (bad) jb sub pop push addl mov xchg pop fs mov icebp sub icebp mov rorl adc pusha jecxz and pop jnp inc xchg orl rcrl add mov add mov cmp je inc push jne sub sahf ret xchg cmp and cmp (bad) (bad) mov call push xor sub mov push push ds sbb mov cwtl sbb test push inc cmp (bad) xor sarl jl ret sub in add cmp push mov ja push test adc sbb add adc or loope adc andl push dec or or pop mov mov xchg push por mov mov and pop dec jl add pop ret pop push idivb sbb push push fnstenv and xor cmp sti sbb push insb pop pop inc in inc adc stos push je jl mov adcl sub sub push xor pusha mov lods jo,pt movsb cmp mov daa pop and imul sbb sti rorb (bad) int3 jp jmp aaa or add xor hlt (bad) xchg inc sbb shlb sbb jnp inc inc or mov adc push cld xchg cmpsl dec mov (bad) fwait (bad) mov addb call mov or adc push add rolb and adcb hlt aam add fs fstl mov mov cmp xlat sarb and mov push or xlat mov iret dec add and xor jp mov mov sar dec add mov daa push (bad) negl movsl add sbb repz sbb popf iret rorl inc xchg or jmp or rolb push aas adc pop stc and addb jo lods es (bad) outsl sbb jbe clc xor adc out popf mull add pop ss cmp jns add fbld sbb cmp or and roll clc test add cmpsl cmp add mov rolb and cmp cmp adc add adc rolb sub sub pop jl test add add and dec mov fwait push sahf mov cmp notb xor loopne inc pop add jbe movsl push cmp lods ds push cmpsl hlt adc imul dec xor add dec mov and inc xor loop mov adc subb mov sub sbb push (bad) rolb inc push mov adc sbb arpl adc mov fnstenv pop or sarb mov jp xchg dec xor push and dec add fadds loope,pt clc xor (bad) pop scas mov push leave sbb adc pop cmp aam inc or jmp jae sbb add mov and pop clc ret inc bound cmp and in je cmp push and inc jbe fnstcw dec sub dec cmp jo sbb jnp add (bad) rcll cmp mov mov fidivrl xor sbb sbb repnz aaa mov xchg sub pushf sbb cwtl aam xchg test and or cmp loope cmp cmpl rorb jbe ficomp sub xor adc push dec xlat mov pop std push nop arpl push adc lds and xchg rcrb cli or mov leave mov sub sahf mov add stos push out and (bad) stos xchg push mov jb add pop rcrl jo sbb shlb in repnz sub ret idiv lds daa add add or dec lea mov ja push cltd xor mov subl adc lock mov pusha arpl jmp enter or jg push andb clc xor je sub sub mov out mov (bad) jmp orl and dec fiaddl and out xchg mov stos pop jl daa call xchg popa add dec inc scas xchg xor (bad) pop push mov xor adc and ja xchg cld movb push insb loopne cltd jno sbb pop sub jge popf (bad) je rclb mov xchg dec cmp add loopne mov insb push adc mov imul scas adc mov xchg jp orl push cmp in aas icebp cltd dec dec or mov jl push add les je add (bad) cmc xor jle scas jo sub xchg add xorb mov pop mov gs cld sbb inc dec aaa inc adc adc xor mov lds sbb jb (bad) xchg xchg pop lret aam sbb mov add xchg and ss push or lods into sbb dec inc in lock and push sbb in (bad) xchg addb in jge or orb mov nop into or sub jle pusha pop inc insb ret push mov (bad) lcall dec pop or lods inc pop pop cmc and (bad) push sub cwtl cmpsb xchg adc orl xchg insb xor lods add ja in push movsb sub dec popa or cmp xor into test iret test push xor adc test dec lods stos and jmp push xchg jmp sbb fdivrl je fisub add int call jae ljmp sbb xor test in mov jge jmp das jmp int out popf out ret data16 xchg addl adc lods add cmp mov sbb adc ret jno mov frstor clc push pop cmp loopne sbb xor dec scas inc sub cmp xchg mov cwtl je jmp popa jge stos test jecxz dec add xchg mov push push xorl push dec add fmuls cli and or sub adc popa sbb mov das jne lods mov jnp add or movsl push scas out ljmp dec pushf add add xor movsl ret sub xchg lret add dec or cltd inc js jo sub or les das or sub jno inc mov nop mov xlat cltd and sbb rcrl sbb jb aad mov es jl dec inc aas add std cli add ret dec push mov je and xchg push cltd push loope rolb jle jne movsb adc ja mov xchg adc mov or xchg test xor add (bad) (bad) add push add iret dec or sbb aad test js sub ss xlat mov out ret pop adc aas xor inc fdiv das push pop and loope mov cmp sbb cmp clc in or xor cmp enter mov xor adc push xor cmp stos (bad) cmp scas inc jo mov mov clc out jecxz cmp and or mov pushf ret mov aad push xchg push push hlt cmp popf xchg add add (bad) add push or mov push adcb add andb loope or adc sub adc test or sbb jne pop mov or and rcl sbb or pop lods decl jae or loopne sub xlat out fldenv adc push sbb fs add jmp pop pop test push push jmp mov inc sbb mov jb sbb insb clc js cmp jne cmp mov cmp je sub mov lock inc fs or je xchg xchg fmulp fnstcw mov or or mov sub jno fs adc cltd out icebp xorl cmpsl add mov pop outsb sbb xchg cmc cmc test jg cmp je je cmp xchg das push add sub jl aam xor mov xor mov jle push xchg loopne lods jbe jmp adc push or int3 or sbb adc xchg add lcall jo sbb and pop push subb sub cmp jae push push push cmp inc (bad) in dec insb xor mov push das je pop or inc add lds inc sub mov mov mov call pop or clc orb mov xchg pushf ror mov mov cmc leave and cmc pop pushl cmpsl adc out sub push add lods nop imul icebp gs adc bswap cmp in xor jge stos inc jecxz sti jo and shlb cs inc cmp sbb dec jo and adc sbb mov jmp jns ret cmpl mov pushf rorb xor push (bad) pop push adc push dec (bad) or test test sub add sub adc or or xchg jne xor pop aas or add ret pop fiaddl mov je lret test cmp xor sbb lock mov push pop jo rcr int jge cmp sbb jae lret push fcoml jae jmp lock lods mov (bad) ficomp je push repnz xlat fs cmp das push fadds push push mov movl insl push lcall lock loopne pop xchg icebp add pop scas adc push push pop adc cmp pop mov mov xorl push sub cmpl loop rol inc add mov loopne sbb (bad) sbb aas or js sbb fwait sbb xchg into adc add sub and sub dec or int3 or jno dec and mov or je pop in adc mov in (bad) adc sarb add xor or out mov mov add pop (bad) pop sub sub mov and movsl add lret or xchg andb cmp jecxz sub sub aaa leave sbb push mov or cmp aaa lock adcl movsl xorl pushf jo cltd xor jbe cmp push movsb dec inc adc pop add sbb jnp xor rcrl mov inc lahf orb push sub xchg lret ds add sub inc xchg lcall jae cwtl mov or pop fisubrl daa ja insb frstor ja je stos mov sahf test imul jo or jle sub jp and add push lods dec (bad) mov jns push push jmp add lock push cmp sub nop inc enter imul xchg jbe cmp xchg js add fmull loopne (bad) stos es xor jp xchg sbb push dec cmp pop lock cs fldenv jle mov mov insb jne insb je popa xchg lcall insb mov or dec push pop jnp outsl or popa in mov cmpsb sub mov aam cmp xchg adc or loope shrb pop bound je (bad) jne pop mov push pop sub jbe decl je dec int3 jp in icebp decb inc in jne push xchg sub pop or sbb push shlb xchg xchg subb push and out das pop pop out mov lods pop pop jle sub loopne in in jbe scas xchg xchg loopne mov jecxz scas mov incl mov sub and cltd icebp jle push sub loope fs jmp enter add sub or mov cmc rclb or and daa inc and mov or orl push add cmp cli dec adc icebp jecxz push jb fsubrs push fiadd jns mov imulb roll lock sub inc sub rclb cld inc jno lods or ds repnz mov xor (bad) push lea addb mov sub jle xor jo pop cmp test push das xor mov mov mov and int3 xlat xchg roll add dec mov enter cmc adc and mov rolb xchg mov adc lods push or or adc mov insb leave leave dec mov sbb clc sbb and js imul push dec pop popa pop inc loope mov repz cmp pop jae cmpl and push inc adc fdivrl pop pushl xor cmp sarl sub pushf cmp mov adc loopne push add dec std ss dec mov pop in jmp add shlb loop fcomip and or inc cs mov mov sbb cmc sub les sub loopne rcl jmp add fdivs and in mov xchg add cmp jge inc add int3 jmp (bad) sub jns push inc add xchg ljmp lcall lods pop sbb lcall cmp and aas jo rorb in or test adc pusha enter aas push xor push dec scas iret daa (bad) mov sub sbb dec test cmp cmp mov push push pusha add sarb jmp sub dec pop push xchg and loope sbb pop icebp inc dec or push rolb pop into call xor jge addb dec cmpw inc mov es sub mov push aam dec push add nop dec fstl xor sbb (bad) js pop jne lea xor xchg dec pusha or pop jne push or sbb sbb mov or ljmp and or push push pop stos jb sti icebp and and dec or dec addr16 xchg mov inc lea push jns insl pusha cld lea pop int3 lods dec and jnp xchg or mov pop aam inc inc roll (bad) adc and add inc pop shll or inc jmp add sbb insl xchg dec sarb mov xchg xchg icebp mov xchg inc icebp and push sbbl js add lock (bad) jae inc xchg cmpsb jno xor push dec sub idivb push pusha or test nop rcll adc adc and roll test xor pop addl cmp add fs or movsb lret xchg inc and mov add out mov cmp adc pop mov or xchg sahf push push std lea push or das (bad) fwait cmp in cmp fidiv aaa push (bad) dec inc mov xchg add inc adc inc fsts push cli add js fadds pop add shrb add sub adc (bad) push aad cmc shrb cmpsl je jne jge dec jo add jo nop dec shrb pop pop sbbb add or pop mov fs idivl push pcmpeqb adcl lret movsb push add ret xchg xchg mov pop clc xchg hlt shrb rolb push rcrb fsub fldenv test mov and (bad) mov lret nop or adc mov cmp pop xchg or sub xor xor in hlt dec es mov and mov xor push xlat pushf push (bad) iret pusha dec sbb arpl roll sbb rcr and pop push cli push (bad) inc popf sbb mov loope mov ret aaa dec sbb or cli cs xor inc lcall push sub sbbb pop cmc jmp adc sub dec loopne pop adc and mov mov xchg pop lods jo add xchg add push adc pop sbb cmp sbb or dec es jne ss lahf and lea adc mov rol call inc inc push es dec adc dec pop sub sbb add mov in or jge pop je push inc sub add mov add pusha fisubl (bad) repz mov insb roll sub xchg adc fnstenv push sbb or mov dec nop or sub nop mov je push cmc mov push ljmp arpl bound gs add mov jmp movsl les outsb ret mov adc jno jo push cmp fildll add xchg nop cmp jne inc sub pushf pop mov mov ret pop mov imul and rcll ret jb ret test jnp sub lods inc rcrl adcl leave andl insb xor xor jns imul xchg jo sub loopne and or and test adc enter adc (bad) sub adc fist push sbbb rcl add jae,pn push pop mov scas fs lcall xchg mov jae leave sbbl ja inc es xchg and fcoms (bad) ss jg int3 rorl push pop and out mov jbe sub je sub xor test jbe lods adc lcall (bad) nop jg inc movsb push repnz push adc pop sbb (bad) fs cmp push and into add or or repnz rorb out lds adc xchg cmp loope sbb pop aad sbb pushl or push push lock pop push adc mov xchg mov rolb jno,pn mov adc add in xchg jmp lock inc ljmp xchg or add fadd (bad) jle add rcrl or (bad) in jecxz mov adc add and in push jecxz dec or adc inc mov daa popa pop repnz test pop enter xor and test fcoms fs addr16 pop enter mov fadds jbe and sbb enter jg dec xor and pushf sbb inc pop xor xor dec mov xor xchg enter shrb push mov rorl pop and xor push and or or add push add or lock xchg xchg mov dec clc in or mov call cmp push and push add jmp sub add jns scas daa inc inc push jle loop push mov jbe push je jl add pop cmpsl or jmp cmc decl mov mov jmp das cld int add push mov jl mov mov clc inc add clc jmp es test cmp cld cmc adc sti cwtl pop and and xchg stos test or (bad) jmp mov call pop push jo rolb adc inc mov add es sub and andl or add hlt mov clc push push cltd xchg jae mov (bad) xchg test sahf or sub test (bad) loopne pop push sbb inc aad xchg fdivs add pop dec jle sbb aam sbb sarb xor cltd mov adc fdivrl fsts inc inc inc psrad push push or jns (bad) pop mov xchg pushw dec inc jns push cmp adc (bad) daa popa test fdiv add or test xor sub jge stos mov enter sub jo dec mov repnz pusha loope (bad) and stos rcl (bad) add stos (bad) ds cmova mov xlat add lcall fldt inc jle dec cmp iret and jnp (bad) dec xor and loop add clc in movsb push add cli add cs pop inc scas (bad) (bad) aaa es sub rcr in mov sti ficomp lret lea sub (bad) push cmpsb adc xorb mov cs sub testb ss sbb inc das xor add sub and jb js fildll pop clc insb push addl xchg mov push push xchg sbb fdivs sub add (bad) clc add xchg clc mov fiaddl fcoml lea repnz xchg and jmp bound and adc or inc xchg outsl popf dec sbb ficoml lock pop inc sbb les jb or into lahf adc and sbb mov dec fldt arpl movl inc push push sub (bad) mov imul sub out xchg addr16 inc data16 sti lret insb cmp push sub push ss xor pop les (bad) or fsubrp cli scas mov je push push mov call jmp and or add sub int das ss push pop daa mov sbb dec and pop xor add mov add mov stc add popf inc insb cmp pop incb dec mov inc sub or or or push popf push mov dec (bad) loop mov fcoms hlt mov (bad) jb daa inc sarb jo pop jo adc es repnz push shll push jle push push fsubs or imul ss into push mov leave lods adc adc jae pop shr cmp test push rsqrtps loopne jg inc (bad) loop sub adc fidivr cmp xchg pop jbe (bad) or inc enter and sub xchg adc or sbb or sbb test add fstl push test ret or in les cwtl (bad) xor enter push mov pop loopne and mov inc and or sbbb gs cwtl pop jecxz push pop push cmp push lahf orb je into (bad) xor adcl jmp xchg sbb ja stos and cmp push or addl and jo xor or mov out mov jae ret add push sub pop je fldl mov mov inc inc (bad) sbb lcall (bad) je (bad) les lret pop xor ds outsl mov fwait xor push and xor add push push clc data16 add dec rclb mov jl fimull sub sarl inc fbstp out adc jne pop adc ret lods pop test dec pop xchg cvtdq2ps pop loopne andb ja or outsb inc push or mov add sub mov adc adc push push cltd mov adcb xor testb popa lea mov xchg push xchg adc cmp xor and adc inc xchg clc mov lods dec arpl add and xlat adcl xor push adc in inc (bad) rcll sbb push add ljmp leave add cltd dec (bad) int3 sbb adc or call ds pop inc and xlat pop ss stc ret bound addl sub and inc aad pusha mov icebp and adc inc inc adc push cmp repz dec (bad) inc sub cmp insl cmp loopne and jbe insb rclb jae inc adc fist fs pusha mov cs mov sbb sub into rclb cmp and roll or dec out xorl and push or out fsubs arpl jne js dec push jbe test sub mov cmc ja mov dec jmp or cmp push add mov pop (bad) fdivl mov adc xorl into (bad) mov adc je pusha jne sub dec pop mov outsb movlps mov iret inc sbb adc call jo inc rcrb rclb pusha jo jmp enter in ficoml sub mov pop dec sbb or mov pop clts movb sub call movaps add addl add add cmpsl xchg cmp adc rclb jmp or loop pop rcrb mov jg push or mov jecxz xor sbb nop cs mov push mov fwait add (bad) fcmovne push fwait push lea pushf rorb repz pop add pop push or addl ret lock mov (bad) pop add mov push test mov ja xor jmp (bad) sub add lea cld mov mov fs mov xchg xorb loope sbb xchg (bad) mov push push or int test push xchg adc or imul and jns pop call stos sti adc mov mulb pop data16 clc (bad) inc movsb sub fwait mov lret (bad) je std xor cmp mov jne outsb inc bound push adcl cmp test push or and push jne mov mov lds ljmp mov fwait sahf cmp and scas lock cwtl or lahf mov in and mov stc shll les ret dec add mov outsb add xor inc dec (bad) into jmp incl aas in add inc dec fscale ss data16 andl cmp or and sub push add int cwtl rclb sub sbb add nop dec in mov pop les or or xor or outsl iret lea clc mov push inc mov mov loopne mov push movsl mov sti cwtl cmp mov jno rorb bts sbb inc imul clc or mov mov ja test out jne jp add pop jbe mov into inc or loop fimull popf enter jno lds sub xor push add sbb scas and (bad) clc xchg rcrb add fwait dec and lods push negl in imul inc sbb psrad xchg mov inc mov repz jg mov pop push and add cmp jl cmp sar ja cmp jl cmp jg push or loopne std hlt call xor cmp jge dec (bad) sarb adcl add inc xor pop sub jmp inc push inc pop loopne and and dec and out (bad) ss outsb mov fisttpll inc cmc pushf xchg addr16 cmp inc jl arpl jmp jmp adc push stc clc jmp mov cmpsb xchg xor inc rcr push add or lea cmp push add in ss decb adc or inc addr16 dec les dec and pop outsl dec push stos in (bad) xorl jne add nop mov les xor add sbb call mov jge xchg adc mov cs jo xchg cmp push pop nop or xchg jmp (bad) add inc dec dec xchg add adc jnp pushf xchg add rorb scas (bad) sbb rcll data16 leave dec and and adc xchg cmp repnz test adcl (bad) insb xchg add aas xchg pop mov jne mov mov insb adc add mov out xchg mov xor data16 in mov sub sub inc pop jecxz mov add lock or xor sub and pop jmp mov dec push inc add cmpl leave adc sarl je inc pushf bound daa rcrb pop push mov mov add xchg add cmpsb push push dec lods mov outsl adc dec and adc or push js xchg adc mov dec int3 lds dec mov dec (bad) pop mov or dec pop mov mov bound xor fidivrl mov sbb jg adc push cmp jne xor data16 xor and movsl mov nop hlt daa inc inc test sub rorl push inc clc dec test lock mov push stc clc bound add inc and dec adc subl es cwtl jmp mov inc pushf sbb inc aaa push cmp xor mov jecxz cmp and mov push movsb dec fdivr cmp loope fmull pop sbb xchg mov xchg adc divb mov or add ss add hlt insb inc mov popa lahf dec nop movsl cmp fwait outsl sbb in shl push xchg shlb lock mov push call lds or (bad) jge adc daa add test bound scas cmp fsts push push (bad) addr16 mov (bad) cld push push push mov aaa addr16 or pop mov shlb push xchg mov add mov gs add xchg fwait test xor push push push mov jae pop les add movlps inc aad test test xor xchg inc mov ficompl sub insl add into hlt ss adc xchg mov movsb mov sbb adc sbb sbb xchg mov les dec push xchg test jae cld add mov push ret imul jmp adc out mov das adc lret xchg loopne je jne push mov cmp test mov push push sbb or sbb xchg lock cmp push add inc jno jmp pop and push mov mov xor scas push (bad) cmp mov (bad) add push push andb sahf nop push dec push mov cmp test outsb add (bad) roll pop mov sub push adc lock std lcall shr cmpsb add out sbb xor pop iret rcrb es fldt xchg sbb or stos dec sub js mov je imul inc and add aam int or pop push add repz roll mov addl mov jmp lret mov xor xchg add cmp fildl into call daa out in mov push jmp xchg push mov xchg mov sbb inc mov sbb clc inc pop or fisub popf dec sub adc or cmpsb imul adc xchg sbb and in pop ffreep sub js loope jno into push mov mov rorl push add cmp jl xchg ret mov inc inc jl cmp mov adc loopne cmp xchg cli bound mov fnsave xor mov sub imul repnz push fdivl pop adc ror ficomp and and sbb js mov xor imul (bad) cmp push xchg push mov adc push and dec nop and pop (bad) jmp inc mov sub or jle fwait shrb sub repnz cmp test inc enter int3 mov and and cmp push fs iret or insl addr16 loopne (bad) arpl nop add and sub sbb imul cmc ret add xor sbb hlt loope pop cli je pop imul push sbb ds cwtl cmp add sahf mov push and test sahf cmp cmp inc (bad) mov cmp popa dec loope cld scas fsubs mov or inc cmp mov sub push out inc adc adc sbb shrb rorl xchg push xchg scas je sarl fwait ss add cmp mov or rcrl sub push adc jns pop or add adc aas xchg lret dec (bad) mov sbb enter loopne xchg jo mov push mov fs les imul jge dec adc add jl add adc or test sub inc inc fnstcw subb int in daa and call rolb fcoml (bad) out enter rclb and pusha sbb fs xor or sbb push daa adc in test mov pop mov mov fdivrl rcrl (bad) and sbb push das fadds pop jbe aad adc push test es loopne sbb fisttpl and cld test negl data16 out add mov mov and push push test outsl fwait mov xor sbb cmp mov or repnz adc mov lods sub ds push push dec mov mov addr16 idivl sbb mov adc xchg out cwtl adc imul sub clc (bad) sbb or mov lret test push pop or jl push pop dec in mov sbb mov push mov adc arpl scas scas sbbb push frstor lea imul mov lahf add xor fcomps inc or or sub xlat hlt cmpl mov popl push popf add jg in aas lahf pop pop or mov dec jg cmp sarb pop mov pop dec push push enter mov push lret bound sub lock adc sub pop jmp imul mov shlb (bad) push push pop push lock nop push adc and dec mov fs sbb dec bound subb xchg out test or das push mov shlb push xchg shrb sub mov roll adc aas add inc cwtl inc mov outsl orl lret or push mov pop aas inc lds sub sub addr16 std pop adc or rcrl call aad mov sub jbe pusha inc sbb jbe fnop jecxz pop int and fisubr sub in arpl cwtl lea hlt addb push popa mov into add dec adc dec push or mov xchg and (bad) jl sbb and jge push adc pop pop outsl xor addb mov dec pop addr16 nop inc adc or pop push xor adc je push fwait out sub lea sarb or pop jo mov xor enter add or mov lds sub roll pop push mov je fmull lret pop cmpl dec cmp adc pop sbb xor dec cs pop cld ret adc fcoml sarb jmp dec push jbe inc sbb in mov add sbb mov pop iret fildll std xor push xchg outsb dec call cmp or and xor fmuls add jmp outsb and es adc cmp mov fsub push and add jnp pop jmp pop mov roll sub pop mov mov xor pop xlat push adc adc rolb mov mov dec pusha pop cmp push inc and or add add das add outsb pop js mov cmp in aaa rcr xlat pop repz pop xchg add mov (bad) test and xchg and movb dec or and or add add test inc sbb jae push xor xchg mov push shrb push xchg fs sub pushf test js out jnp lods add lret in xor pop fistp add add les or or lods (bad) popa mov jecxz ret xlat ds pop adc and jge xchg sub add and add jle adc fdivrs dec jl loop inc jne fldl lds xchg push int3 lds arpl and and cmp mov mov cli jne push add pop add cmp insb lahf aam sbbl out aaa mov inc in sub mov add inc adc and dec inc adc cmp jl addr16 sbb push shlb inc divb scas pop mov dec xchg insb adc pusha cmp ds or sub adc jge mov xchg push insl scas lock adc sbb addl mov inc (bad) (bad) fdivrs sbbl lods les cli pop add mov adc adc sub xor clc add addr16 rorl loopne movsl adc sub imul mov mov mov push inc push stc add clc mov and xlat dec inc inc call pop lcall or mov rol mov mov sbbb gs bound ret subb or cmpb mov push cmp in add jge cmp scas bnd popa or out add les lea push adc gs push lea push or sbb inc (bad) dec adc sbb xor xchg adc inc dec sbb dec loopne pop mov dec cmc jmp add adc fsts xor jmp push repz (bad) jecxz sahf shrb mov sbb cld adc and add aas and and ret mov pushl add lcall or loopne push adc nop push cli loope jne add or std mov shll jo mov mov lods dec stos cmp or pop sub push sub mov jmp pop aad call mov xor xchg mov cmp and add or mov jge mov sbb sub ds adc pop hlt insb ret mov cmp or or and and sub dec mov xor xchg movb imul sti ljmp pop adc jo pop jbe inc int and and adc sub sarl add sub jle dec cmp add or in stc cs andb mov fbld lods mov jb pop cwtl mov test xchg jmp das and xchg xchg scas data16 xor sarb adc loope rclb mov push pushf cwtl xor add lea movsb imul push push movb sbb subl leave cmp mov sbb mov and xchg jnp adc or loop or mov and dec or push cwtl jl mov jmp xor xor das add shlb xor adc dec js sub pop out psrld push jl in xor cwtl imul cwtl fldenv sbb faddl cmp add fcmovu fcmovb jge inc jne push or repnz insl (bad) adc adc (bad) testl mov mov cmp xchg out fisub ret push mov xchg pop mov lods dec xchg or inc rolb xchg push pop enter pop in insl mov mov and (bad) in aas mov in js insl mov dec in out or cwtl mov xchg test popa adc fmuls pop mov add jle pop lea setns push pop push inc add sar adc sub in stos ss or inc pop cmpb sbb cmpsl xor jl push or mov and ds out sar mov sbbb inc pop (bad) xor add fwait sbb xor negl cmc out lret add shl es dec sbb repnz outsb or dec outsb aam push icebp push imul lock dec icebp sbb mov lock out dec mov add imul mov xchg cmpsb in ret pop jle add addr16 push sub fs push mov push push test enter jge xchg or jo dec dec popf in adc lcall leave js fsubrl push xchg sbb out add sub jmp xchg pop ds js jnp jb in jo pop push push fst mov inc push nop xor jne shrl enter add fbld cwtl sbb or leave stos sahf jl jnp or pop push and sahf jb push mov lods in popf or mov mov pop mov push adc das dec in sarb (bad) or push or ds add jbe lea sbb pop xchg and fisub jo je (bad) cwtl insb add add pop mov add or (bad) stos sbb inc push sbb daa xor pop push xlat inc push addl xchg in lods cld dec clc (bad) cmp rolb jge sbb adc adc xchg inc loop cld push or lock mov xor push push nop or sub js pop mov cmp aad cld cld mov adc pop andb mov push and push adc and sbb and mov das inc ret rcll fbstp and add mov adc ds sbb (bad) repnz inc lret mov push push dec mov loopne bound sbb mov pop lret loopne push lock adc dec lods pop dec pop mov (bad) mov dec jle pushf outsb pushf outsb popf ret push movsb test into lock scas je mov clc daa outsl fs push sub iret mov pushf aad rolb in dec add out movsl xor cld and dec mov out mov andl dec adc add xor leave dec loope push das dec push pop aam std mov pop sbb push sub xchg lods cmp pusha or nop rclb inc js imul loopne movb push ret addr16 ds sbb daa pop push xor xchg lret je push (bad) jbe pop push add cmpsb add adc jae cmp add mov rol jle pop sub jo xchg leave inc jo test or ret mov dec sbbl xor (bad) add out xor psraw sbb in repnz jmp adc fisttpll push push mov mov or mov sbb xor clc adc mov or add mov push pop push sti gs clc in das ja add pusha je xor push das cmp mov sbb push mov sarl mov add add fiaddl pop (bad) push push dec imul xchg xor jno adc cs inc arpl xor and pop loopne,pn enter test inc test cltd notb jge add cmpsb cmp (bad) aaa cmp lods mov inc or pop pop jae pop (bad) test shrl hlt pusha in inc or mov clc in into mov inc sbb push pop and cltd mov (bad) outsb mov xor ret jne movsl sub dec sub fs stos and rcll inc xchg adc fdivrl (bad) or scas aas dec loopne dec nop mov push sbb leave iret sbbb xor in pop pop es mov dec leave jb clc cli jnp sbb shrb mov push add nop out scas shrl test clc and add pop or xor lock (bad) jne lea fiadd inc or pop test ret cmpsb adc addb lds inc test rorl pop adc cmpsl jmp xor rol mov and jb adc jne xor dec or pop xor in (bad) adc pop add adcb or sbb add push pop lret push add js add or add shrb test xor (bad) out lock sub sub mov inc inc sub movsb and leave test jecxz int push add lret xor and stos mov mov into push mov ror (bad) pop mov sub movups lods cld (bad) ja jmp push in ret pop push popf jmp mov pop or sbbl jp push (bad) mov push cmp xor cmp and and or imul and jmp bound (bad) mov inc pop clc inc jl call pop sti sbb jmp mov adc aas call (bad) or fmul sbb decb pop add ret adc (bad) movsb movsl inc mov fdivrs in das or aas insl (bad) or xor cmp pop loopne,pt pop dec fs pop aas in rolb std imul ljmp sub inc jg leave and mov cmp and cmpl js push jb lcall push or pusha or adc lock adc js sbb xchg mov dec mov jl add rolb push push addr16 cmp in adc shlb fcmovnu insb sub jge cmp sub adc dec mov add mov mov xchg pusha movsb pop push fstps scas shll mov ret add cmp xor mov je cld mov std inc adc dec pop push (bad) lcall or aas loopne inc call jle out mov xchg fstpt enter mov enter ret push addb inc (bad) jecxz pop insb pushl xchg popa jo js adc bound and aas and dec leave mov jo mov pop and insl cwtl aas shr pop xor int3 lahf fmul cmc shll aam push aas adc mov jb mov fdivs enter insl sahf nop mov test out mov rorb cwtl mov out pop or nop js aas clc lret inc add in mov xchg out or js lcall incl out imul iret or inc das mov int3 aas or xchg cld dec repnz mov (bad) or adc pop repnz sbb fadds jb jb mov lock xchg lret xchg add icebp fsubl addr16 xor pop cmp mov mov sti int3 add rorl rcrb in outsl and jb sub adc in pop jb push outsl push nop movsb add xor mov repnz pop fwait sbb cwtl pop (bad) push pop mov mov sbb nop int inc dec and int push in out pop in in in inc push in in in in push in in in push in push in in in inc push in in in in push in in in push in push in in in inc push in in in in push in in in push in push in in in inc push in in in jl push in in sbb cmp sti adc mov sti pop or jb adc sub lods std inc ds ror (bad) pop cmp mov loope fcomip psubsb xor lahf or shr ret aas dec lahf fild pop loopne scas outsl push insb (bad) loopne das adc sarb movsb aas clc and mov mov lcall push imul stos jae sbb insb cmp cwtl (bad) pop imul mov jge (bad) dec pop push lods rolb adc adc rcrl add adc xchg push je sarb sub jl fstps fisubl push mov dec into dec aam inc sarl mov jmp add mov sbb mov pop and jbe mov lahf dec aas push or cmp push xchg shrb aam sub and test imul pop mov xor out movsb push rol aas lahf call jg movsb (bad) cli push jnp pop lfs mov mov mov push mov add aas mov test adc or outsl scas loopne or jb sub pop add andl lahf cmpb test mov ljmp out mov je bound arpl sub insl adc cmp stos ficomp jns pop mov xchg xchg dec jl push push mov push sub mov (bad) fcos xlat loope push sub outsb add adc pop lds aas and sbb sti lcall add mov inc icebp lods lret (bad) negb mov cld pop inc mov mov std add xchg test xor inc (bad) ficoml lret xor inc (bad) ljmp mov aas (bad) xor and inc pop fs testl mov cwtl pop mov dec push popf pavgb pop or jg pop adc pop xor mov bound (bad) popf jl mov lahf hlt dec sti rclb lahf adc add in sub adc (bad) dec in inc cmpl sbb fild inc xchg scas out sub push fistp inc mov loop or jg pop pop xchg insl stc cld lahf jno cmc aam pushf xadd lods in shlb stos pop enter (bad) xchg mov aas (bad) fsubrs xchg mov mov fnop lock out lods pop add cmp js jge movsb jbe (bad) and fbstp les ljmp sub out sub xor adcb adc and bound mov and mov push cmp outsb test les (bad) call (bad) jno fistpll rcrb fimul stos xchg nop rcrb (bad) push add loopne pop and lahf push loopne mov loopne mov pop sbb fnop jbe and js pop outsb xchg adc insb jl popa push inc dec mov sbb pop pop mov add loop ds mov movsb dec int3 js add test inc movsb mov faddl push jg jecxz and add cmp jb sub cmp jl aas aas fmuls call mov insb sar std test jl adc or rcrb (bad) xor (bad) dec or inc dec adc xor xchg shrb cwtl cld cmp je mov in dec jb dec sub mov fdivr pop sbb scas push (bad) xor mov sub punpckhwd sbbb xor add push test pop sbb cs add adc dec out mov cs inc pusha les outsl mov nop aaa cmp js sbb sbb orl and add pusha pop sbb pop add xchg aaa rcrb ss repnz dec add jbe push rcl out ss pop ds in pop fsubr sub fstps sbb or divb dec mov push xor insb sub repnz es ficom and lds pushl pushf mov loope cwtl dec jg call mov mov jmp aas inc push nop dec xor xchg test dec aas jnp dec dec xor sub fs out sar insb enter xchg sbb daa int mov sub mov in lret rorb lock and add add sbb clc sahf (bad) movsl sbb cltd sub adc cmp and std loopne test and push or fisttp jmp cmp lock pusha jmp mov in xchg aam and jg mov lcall int3 sbb mov add adc in mov inc fistp push push xlat (bad) xor sub sahf (bad) bound (bad) punpcklwd insb adc jg fmull xchg mov in fcmove inc ret inc in pop les or sbb aas test xchg and enter sbb rol dec or pop cs insl sub sub fcoms aas mov xor outsb hlt sbb mov pop cli jb mov out arpl sbbl dec push xchg jg out out inc cmp in out jmp adc sub loop insb adc in andl adcl jmp add ss xor add mov jnp fdivrs cmpb les mov dec xchg add sub jmp loope fisubr xlat adc inc dec jp repnz mov call cmpb rcll shrb pop pop mov push jae hlt jg pop leave inc jb jo cmp (bad) hlt fistp dec fwait mov inc adc pop call mov in inc inc inc jg arpl in cwtl aas addl in inc dec jp sub sub arpl cmp scas pusha fs imul test fisubr mov inc mov in fsubrl sbb in add sbb pop das inc push adc dec pop adc mov xchg data16 push dec mov add or push jl add andb pop aad mov push dec btcl cli fnstsw inc imul mov dec aas cmpb xor mov inc sub in aas loopne jae adc lea pop (bad) jp nop jg into lods cmc testl lods pushf pop adc add jbe lahf das mov add fiaddl pusha pop int3 clc jns or lock cwtl xchg fdivrl xor dec push jg mov dec lahf dec movsb or adc mov popa in nop mov mov jno add decl and in mov pusha std jg ss loop and lahf add mov mov in lret es pop jo (bad) xchg pop jno mov nop lahf adc test sar call sub cs xor bound add xchg addb push rorl (bad) cmp test add aam push fwait or (bad) jg in dec sbb test lods dec jg into insb push fsubrs pusha fisttpl mov shrl test nop in leave testl int in mov fnstcw in es in in in and push in call (bad) adc dec pop pusha aas in pop jo mov mov test mov aad popl int3 stc or lods inc dec pop and add mov jl add aas mov cs mov inc pop lock aas and in sub sub js xor push jle mov aas enter imul dec adc push cmp ljmp add mov push adc mov dec jecxz cmp cmpsb bound add push les lods pop and mov sbb sbb add ffreep add aam call push pop pop push pop test stc sahf adc pop dec andl inc ficom sub mov sbb jo dec cmpsb ficompl and or popa sub jb cltd das or in stc jo jb rclb stos pop (bad) and fwait test mov add sbb lahf in das mov adc jb inc adc adc xor and dec xor mov loopne lods lahf bsr in (bad) jg dec or fmuls ss jecxz das add call aas fsubl mov imul and (bad) (bad) iret sarb ret lcall aas and push mov pop xchg jbe cmp xchg ficoml insl xchg and inc adc cltd mov addl mov aaa xchg pusha xchg add or adc and mov lcall jmp lahf incl xor lock daa dec xchg lock or push push js aad sub xchg xchg pop fcoms push xchg mov mov rcrl or sbb or shlb aaa mov pop inc mov lock push ja fiaddl xchg out daa push nop mov loopne (bad) xor mov mov mov test sbb lcall push dec push xchg (bad) and aaa add popf mov push xor push mov xlat or clc aaa stos mov fcoml inc pop scas inc mov jg scas or jg or jl lahf clc fisubrl sbb pop and cwtl iret xchg (bad) xor rorb adc adc cmp mov sub fisubr push adc mov pushf (bad) mov addr16 pop adc cmp sub dec lods mov stos sub lahf data16 mov (bad) mov daa mov inc aam dec push cli push fcmovbe push dec xchg cmp (bad) pusha daa push xorb pop aas dec sahf add loopne adc dec mov scas out inc pop daa je mov daa nop into or push and inc mov shr pop aaa adc aaa or adc loopne shrb jb xchg mov out in nop vmread nop pop in bound pop daa ljmp sbb ficoml fcomps iret sbb sub insb dec push xor push sbb dec scas movsb pop daa mov in aas sbb ljmp xlat sbb mov (bad) lock dec rolb repz jbe ljmp dec lds dec and iret xlat roll jb adc sbb pop stos fadds jb clc addr16 pushf or xor mov mov js sbb inc dec fidivl leave mov sbbl mov add xchg dec pop fadds pop push pusha pop aas nop pop dec scas ss and or add iret repz add push sub pop dec inc push addr16 cmp adc sahf out mov pop fs push push push dec cmp imul cmp iret repz push push cs pop push cmp nop movsb mov out mov in push add sbb cs repz bound pushf iret repz push loopne mov cmp test jo sahf out test jns out into (bad) bnd ja cld push cmp push cs dec sarl pop push jo pop iret repz inc cmp push or out out cmp sahf push scas mov aam cmp ds inc mov cli cmp and cmp repz pop jo mov lods (bad) out jbe cld sahf out testl and push pusha jl out jb lcall sarl iret repz fs inc cmp push sahf out cmp add ds jns out mov cwtl mov jge out push cmp cs push mov sahf out mov repz out and imulb out (bad) mov repz jb dec xor cmp repz push add sub jns cmpsl loop (bad) mov sahf lcall sahf out sub or hlt sub sub (bad) mov xchg jns sarl jl push bound jge out sub cli sub aam sahf out lret xchg xor int jb aas loop (bad) out sahf out inc sbb ss sahf out sahf insb xchg jns jns add push push cmp pop push sahf out mov das mov mov pop ds pop lea sub fcmovb fnstenv xor call out adc and iret repz inc pusha jb xchg lods sahf out cmp lret cmpsb pushf jns out mov fs sti cmp repz xor repnz push xor mov push fs repz mov ds (bad) add adc repz xor and add shrl ss rol mov iret repz mov jns out stos lcall out inc sub add out repnz sahf push int3 mov sahf out je push inc iret repz mov jle pop dec ds cld xor jns out in les out mov lahf out sahf dec cmp add xor into pop ss jns out xchg cmp out or sbb dec mov insb adc out mov push mov (bad) cli jge roll push cmp inc out sahf cmpsl push sub dec push data16 out sahf jb nop scas mov jns (bad) adc es repz add push push in cmp repz mov mov out jo out sub divl out mov sub fidivrl lahf out sahf lret xchg or sub loope cmp (bad) sub mov iret adc adc iret repz adc adc cmpsb cmp mov data16 push adcb jbe mov outsl add pminub push jnp or dec es xlat pop cmp dec add pop push sahf out int xlat mov int3 (bad) repz sarl or cmp repz pop insb jge ds sti jmp jbe jo xor cs insb sbb gs (bad) (bad) fist je arpl imul gs sub iret fidiv dec popa jae dec push gs gs jae imul cmp sbb je sti pushl outsl jns inc gs push popa jb insl add jae jb js insl repz inc push mov inc flds aam fcmovbe cld imulb test push gs add mov add push sarb repnz fisttpll cmove repnz inc inc pop loopne jns stos js out pop add in adc push and enter add inc mov fldl add out in add xor pop push and cmp or iret adc add aas nop add and add and (bad) in (bad) jno push (bad) bnd call enter cmp xor cmp cmp cmp fcomip pushl ss popa data16 arpl gs add mov mov lret rol (bad) cmpsl mov add scas (bad) xor ss rorw pop add lock inc data16 dec jnp ss rorb rclb repz xorb and fidivr loopne dec es pushw adc popf in repz pusha pop xchg mov pusha fdivrp out mov push into jle push es aaa out jnp xchg pusha pop bound inc inc xor xor inc or (bad) fild xor xor xor xor add mov (bad) mov rol mov jns inc mov inc adc inc adc cmpsl (bad) xor xor and xor fisub jb mov and xor xor mov int mov mov cmpsb (bad) fcoml outsl outsl or inc aaa fdivs ss cmp inc xor mov mov xor fmul loop aaa inc fdivs dec testb xor dec push jle xor xchg cmp sarl or (bad) jbe repz or popa xor xor std mov push cmp xor data16 ss mov (bad) mov clc arpl inc aaa lds test and ss (bad) int3 inc jl add and dec cs push out in add inc andb inc mov mov cmp outsl ja add loopne inc scas in in jmp shrl lahf andb shrb cs mov dec hlt jmp push dec jmp sahf pop mov nop add dec daa rcll clc pop jmp add ja ljmp cmp mov (bad) mov jle push push nop push loopne int fldcw xor (bad) jg sub pusha push adc jae je insb cs add pop adc dec push xor add js pop jp js jg imul je data16 popa add (bad) cmp sub jo outsl jb push and pop ljmp cmp xor (bad) mov cmp xor sbb mov imul sub cmp aaa push cmp ds xor xor cmpsl dec xor ss fnstsw movsl fstpl mov loop and xor xchg mov rorl xchg cmp jge out or dec add scas mov (bad) aaa mov negl mov fisubl push mov mov gs stos loope fimull push out (bad) mov insb add sbb pop and cmp rorl repnz cmpsl xchg or stc aas xor clc cwtl cmp add pop in push (bad) in jo xor cli jno das cs sub xchg and jbe mov mov mov vpmaxsw xor and or out aaa cmc mov outsb in pop ja pop add mov dec (bad) mov xor mov out aad rorb mov fcmovnb dec sub adc dec add adc out inc cmp mov cmp mov xor pop fnstcw and mov cmp jmp sub loope mov loopne jns sub inc xor sub or xor adc xor sub xor xor push (bad) int orl dec push ja dec xor add sub mov xor or sbb jne mov repz roll push sbb cli dec xor gs faddp cmp (bad) (bad) xor cmpl pop inc add aaa xor mov andl nop xor mov pop xlat loop or sbb push cmp cmp out mov xor add inc nop or test stos jp,pn jo psubsw cmp rdpmc xor dec jb mov and sub sub repz mov mov mov jle leave js jb addr16 add (bad) arpl data16 outsb cltd add in in jmp das jae and outsb jne gs outsl and or push jae sub (bad) fistp and outsl insb gs jo and fidivrl jbe pop dec push cmp add incl add dec scas mov cmp inc cmovl lock push sbb mov mov pop inc jne outsb je (bad) jae pop ret dec pop inc xchg outsb mov gs dec imul add nop push inc cmp sub sub add inc xchg das pop sub mov push jl xor xchg jns sbb xor jbe lea pop xchg fisubr cmp adc xor ss imul fistpl and cmp xor leave sbb cmp xor mov mov pop push add loopne or sbb xorb jbe ss sti adc enter lcall neg aad js jbe xor mov and lock cmp cltd mov mov les lcall (bad) mov or adc imul mov ret sbb pop lods pop in xchg ss sub pop xor adc pop shrl sbb notb add inc cmp mov pop sbb add call aaa jno and dec sub add inc jae loopne and insl or mov add push dec xor push adc dec (bad) (bad) (bad) pushl aaa dec push dec xor insl jo xor push inc push jae push je push push push dec pop inc push jp add aaa pop cmc or pop ss dec xor xor arpl data16 xor std aas arpl data16 gs add pop add push lock mov and pop adc add lock xchg add jmp mov in push add cmp outsl int cltd es sahf pop add jae ja sub orb add cltd add rolb jns dec cld add push pop mov add mov or add addr16 add addr16 xlat sbb stos fiadd sbb cmc push ja adc scas jge fsubl gs jl test aam imul shrl aam push push jg ss fs push add es mov jbe (bad) jle mov repz enter inc add mov pusha cmpsl or add mov jg add adc xorb fstps add xor adc lret iret seto cmp cmp jg mov cmp addl addl lds or cmp or or or and or pop inc dec jnp popa loopne pop outsl and mov mov mov cwtl xchg push and dec (bad) out or jmp xchg xor inc fdivr jo pop mov xchg jbe test and inc int mov pop mov inc mov rcrl out rcrb addr16 and mov push mov pop jo mov mov mov cmpsl cmp mov push sbb inc xchg pusha xchg inc inc jno loopne pop adc or fadds jo (bad) aad rclb add (bad) and popf mov addb mov cmp sahf pop jns fisubrl pusha sahf iret call or mov test mov lcall add dec rcrb aas or andb pusha ficom or mov adc mov pusha outsl rolb dec enter and das in inc inc stc mov add mov mov in shrl movsb (bad) pop adc adc cmpsb aas rcl es pop push outsb scas or cmpsl das add sub stos outsb pop add incl xchg dec sahf or lods adc add dec push test add test nop cmpsl in ret or cmpsl das fmuls inc (bad) nop scas add add fsubrl add pop enter add das pop dec aaa cmpsl mov outsl sub es mov cs sbbl mov into add outsl out out xor mov push daa xchg add mov or lea mov outsl push es iret js add or int3 sub mov repnz add mov mov in dec clc lahf dec jb cmp scas xor loopne add ficompl add nop mov in jb mov mov mov and and nop mov add js lock cmp rorl mov lahf pop nop mov add add xchg xchg push (bad) mov jno loopne jg mov jo lock add out or add rorb adc mov add push les orl mov out shrl xchg mov rol jmp enter inc stos push pop leave add xor aas test in js iret cs mov and adcl (bad) adc adc das xor (bad) arpl fnstsw pushl (bad) loopne or lcall sbb inc out mov inc cs js test (bad) or mov loope add or add or loopne mov jno xorb add cmp pusha adc in and push in clc and add lock sbbl inc xor das inc in scas sub (bad) scas inc call out mov mov and lock adc shll dec nop call add mov jae mov shr mov or rclb scas es dec lds xchg js cwtl pop lock ds aas pop inc das lret inc negl add inc jbe inc mov jmp jle jg shlb insb mov int pusha pushf lock xchg push test ss adc popf je or (bad) jo insb lahf out nop rcl mov xchg int fistl sbb push enter into and mov (bad) push or dec ja stc sahf adc pop pusha dec fucomi and xchg aas sahf sub push and in imul push fildll sub push jne xchg and ss push in jne push push push or push test mov adc add dec icebp testl out add jle cmc push add push fsubr imul cld push and push stc ficomp mov testb popa inc add push lcall pop cs pop push dec push cmpsl or lds and add mov lds mov icebp push adc or out mov adcb xor es and xchg inc dec mov cs add jae das push mov inc in push push cltd push outsl sbb jae inc fwait mov add lods pop rolb nop adc xchg shrb mov inc test inc jne addl scas repz dec jnp subb add mov xchg out xor mov fs andl xor adcl nop push nop pop pop out jmp scas mov ror xchg and pusha adc repnz nop test outsb xchg cmp fnsave (bad) and repnz sbb or clc fcomip icebp push in pop aas addr16 aas daa push inc test popa lock mov add fimul add lods add jg mov add fimul xor cmpsl lcall dec iret inc fldenv aam popf xor sbb aas inc (bad) cmp mov sbb cmpb inc pusha cs or inc aas loopne leave sub loopne sbb add sbb inc popl xchg add cmp in sub cmp sbb pop adc inc iret sub stos (bad) pop scas pop adc out lcall xor add outsl xchg outsb cmp pop das push mov mov pusha push pop add in das cmp pop lahf xchg add repnz loop xchg in icebp and xor pushf jmp mov mov out jp ss inc cld xchg jmp jo push jb inc adc inc repnz shl pusha outsl inc cmp push add xor add out addr16 in or loopne rorl push push sbbb (bad) or mov (bad) inc push push inc movhps pop out addb (bad) push adc mov aaa fcmove jbe push dec push mov and pop clc imul enter cmp dec (bad) ss push mov jb outsl and (bad) xor jns rcrb je lahf mov jge pushf test mov iret mov add adc test in fidivr inc daa mov rorb inc mov push add iret pusha jmp aaa inc push loopne xor inc cs stos sbb jmp nop cmpsl xor inc xor add js pop repz out lock pusha (bad) testb cmpsb add jo mov or loope,pn stc add dec xchg decl xchg repnz inc lcall test aaa inc jno jno dec aas inc pop push adc jnp jge jg dec push adc sub pop fildl mov pop push outsl fsubs mov ds push rorb inc dec out lcall js adc xor add sbb cmp sahf fdivrp call adc pop inc pop nop add mov cs inc push cs stos add xchg shr das ja movsl jo mov inc ds ret lahf xor jb nop pop nop pop inc sub adc pop into push cmpsl push xorb movsb or push in or scas clc sub add out bound xchg ja iret pop pop popa pop popa dec repnz inc inc mov push repnz inc cs jo push repnz pop dec dec cs out sahf sub push dec xor xchg push pop es cmp dec inc cs and jns cmp push dec dec cmp cmp cmp dec dec loopne cmp cmp pop adc push pushf cmp pushf inc push push jo pushf cmp pop pop shlb in pushf cmp mov aaa dec lock inc nop pusha inc sbb movups pop inc sbbl addr16 nop insl inc lods jb and mov push pop aam fisttp jns inc mov mov test adc jmp pop adc cs adcl jbe and push repnz push xchg inc or aad xchg inc cmpsl (bad) xlat add cmpsl inc push cmp jbe lock cmpb push mov mov andb mov aaa clc shlb (bad) dec stc ja sub in mov inc gs divb jb inc jo push jns jne push insb push stos ljmp jne push gs arpl outsl jbe inc arpl sub cli call stos inc adc pop scas jp fsubrs test mov pop scas mov sub (bad) cs inc fnop fsubrl dec jae not add cltd (bad) call sub mov fidivr ljmp scas push repnz in inc js cmp or mov aaa incl leave cmp repz cmpsb mov (bad) mov xor jle xor imul std mov (bad) mov and js mov push xor int cltd and insl pop mov rolb xlat push mov rorb int add (bad) sti repz push movsl sbb cmp (bad) std cwtl add sahf repnz ret adc xchg add push jno rcrb add or and cmp push add mov stos add jmp (bad) (bad) incl push add add jge movsl add add add add add (bad) decl testb outsl add das push jae mov push incb inc pop xchg pop fldl sub jp lret or enter jns aad xor xchg (bad) jg imul and pop push int3 push cmp sub (bad) (bad) rclb xchg adc adc inc inc adc adcl adc mov (bad) (bad) call inc pop rcll data16 sbb sbb push sbb sbb sbb inc pop icebp pop mov and add mov and and and jmp mov jnp inc sub jecxz mov (bad) (bad) ljmp sub adc xor imul sbb adc call pop cmp inc adc inc and inc aas inc push aam (bad) mov xchg dec mov iret dec lock adc dec popa push mov push jmp push adc (bad) pop cmp pop or pusha sahf popa in (bad) (bad) (bad) jmp fs gs imul insl and lea jno jae je jbe ja (bad) jg (bad) jns jp jl jge jg loopne roll test push (bad) (bad) (bad) (bad) (bad) out mov xchg xchg xchg lcall jns cmp mov push stos and scas mov mov mov mov sarb movsl les xchg enter int3 xchg into cltd shlb (bad) int3 fsub (bad) fcoml fildll loope jecxz in out (bad) (bad) inc jmp dec lock repnz stc je (bad) ljmp test testb or movsb sbb and xchg (bad) fildll loope lret cs xor xor dec cmp cmp (bad) (bad) (bad) (bad) cmp lea inc icebp inc sbb inc pop inc jb xchg dec lahf dec movsl dec cmpsl dec movsl dec lahf (bad) mov push mov push gs dec push mov xlat push mov mov pop ss (bad) (bad) (bad) incl pop xlat pop movsb pop outsl pop cmp pop les popa dec bound arpl arpl lods popaw addr16 (bad) (bad) call imul imul fldcw sub outsb jne sbb jo jno jno (bad) (bad) lcall jae je jne jne jbe jbe ja js js jns jns jp jp jnp (bad) (bad) decl jl jl jge jge jle jle jg jg cmp xchg sbb mov (bad) (bad) ljmp test xchg mov mov xor (bad) (bad) decl lahf mov lea decb fs fistl cmp call or xchg rclb and xchg add dec (bad) (bad) (bad) lcall xchg lcall inc pushf mov sbb pop sahf ret lahf xchg lahf sti (bad) (bad) (bad) lcall xor mov xchg mov ret movsb daa movsl mov (bad) (bad) jmp jns (bad) (bad) test test subb stos cld stos pop (bad) (bad) (bad) ljmp lods shrl ljmp scas pop mov mov mov mov mov (bad) (bad) (bad) pushl xor cmp xchg mov mov mov mov mov mov mov mov mov (bad) call mov mov mov pop mov pop mov add lcall lods mov test sti mov hlt mov jmp cmp sar incl xchg ret mov ret addr16 mov pop les cmpsb (bad) test (bad) (bad) incl xchg (bad) xor add (bad) sbb movl enter leave mov xlat (bad) mov lret or push lret mov int3 clc (bad) (bad) incl data16 int int into xchg into fmul es jo mov rcrb mov (bad) je mov rclb sar (bad) (bad) pushl mov aam aam aam aad aad aad aad (bad) test lret (bad) adc pop xlat lahf xlat (bad) (bad) (bad) jmp xlat sub jb mov (bad) ficompl lahf (bad) fisubrl fldt mov neg (bad) (bad) (bad) (bad) cmp sbb fmull fisttpll xchg fst fstpl ficomp fsubp fisub fildll lods fcomip fbstp loopne (bad) (bad) pushl mov loope loope loope loop loop loop loop jecxz jecxz jecxz jecxz in in (bad) (bad) call in in in in out out out out out out out out call (bad) lcall jmp fucomi sbb pop ljmp push jmp jmp jmp in dec in (bad) (bad) (bad) decl in dec in xchg (bad) in add inc out jle mov out je mov out out sub loopne mov movsl lock jo icebp cwtl (bad) (bad) (bad) push aad adc dec repnz (bad) repnz aas repz mov repnz push cmpsb hlt loope sbb add cmc xchg cmc iret cmc or mov (bad) jg imull mul negl clc push clc nop clc lret clc add stc mov in stc daa cli popa cli fwait (bad) (bad) (bad) (bad) cli aam push sti dec sti cmp sub cld frndint adc dec std test mov push movsb (bad) (bad) data16 lahf (bad) xlat (bad) adc sub xchg (bad) out test leave sahf xorl inc inc cmp inc add jg cs daa daa es outsb jmp and and pop pop push add in jns sbb pop push adc adc adc pop enter femms and enter test sbb or adc and pop add jo das push fdivrp inc pop add and add test cmc imul scas mov aaa inc jae outsl loopne out jnp jg (bad) add bound inc add sahf add dec mov test jg inc inc push add dec push or inc ud2 lock lcall jno mov rclb (bad) js loopne test fdiv xor push inc cmpsl sub adc jbe cmp fistp aaa shll xchg in jl xor out cmpsl (bad) dec std dec in aaa fnstcw dec pop push lret mov inc mov in sahf cmp movsb aas add mov daa sarb sar mov and loope add adc inc loope test lahf enter call xor insl (bad) add inc dec lahf xchg addr16 fildll loopne pop pop and jo xor inc push jns or xor dec sahf dec pusha pusha mov mov (bad) leave outsb mov popl add leave xor xor mov ds xor lock add dec pusha (bad) cmp loopne lds enter cmp sub shrd adc jno (bad) loopne mov inc cmovs das adc inc cs lea sbb dec add ret js sub rorb xorb inc cs or and out mov inc jns push xorb mov inc mov and add inc popa faddl repnz and orb rorb lahf sahf inc stos loop (bad) jg add hlt call outsb add stc push and out sahf nop sbb mov iret adc push and mov pusha xchg loop (bad) out sbb fwait test scas outsl push add add xor arpl pushl inc inc inc inc inc inc daa and mov sub push out mov les (bad) hlt push xor xchg fs (bad) (bad) (bad) pushl mov push movsb mov aad mov rclb mov sub mov (bad) adc pop jno repz test ficompl jmp (bad) mov (bad) (bad) (bad) push movl imul std in leave mov add insb push arpl (bad) ljmp or adc in pusha aad jno mov inc aam (bad) (bad) incl std test movsl cli test xor (bad) leave mov lods jecxz fdivs jne mov iret or shrl add push xlat enter call popa sarb and mov cltd xchg mov mov or or (bad) (bad) (bad) jmp or adc stos sbb data16 inc fdivl jno add (bad) ljmp adc out mov mov movsl in lahf xor mov js stc adc (bad) (bad) jg test xchg sbb push sub insb fs add hlt push imul insb (bad) (bad) (bad) lcall xor dec add in xchg push insb jnp add (bad) hlt or (bad) fnstenv cld (bad) (bad) call ljmp cld fistp ficoml gs aam pop popa mov into jg pushl pop cmp mov inc movsl fisttp xchg fadd (bad) shll (bad) (bad) ljmp imul mov sarb add in add pop dec or (bad) (bad) (bad) (bad) cmp add daa adc or and test or mov popa into (bad) (bad) (bad) decl stc ficomp leave fldcw and xlat (bad) pop cmp mov cmp lods insb mov push in mov mov add (bad) (bad) (bad) cmp ljmp fildl push fdivl or test fs ds or (bad) (bad) (bad) decl iret push in decl xchg daa scas add mov pop jge xchg (bad) shlb add inc push imul (bad) (bad) lret xorb sbb push imul aam loopne (bad) ljmp pop jp adc dec frstor fistpll mov mov aad mov incl (bad) call xchg shll push repnz mov cmpsb fldl mov (bad) (bad) (bad) aas dec ss fisubrl or scas (bad) dec add pusha jp inc ret out pusha fist addr16 mov (bad) (bad) pushl jns imul andl shrb ss push xchg ja int3 add mov (bad) (bad) jmp das es lds or sub mov cmpsl call ret (bad) mov sahf fcos (bad) (bad) ljmp ret es pushf mov insl add ss jmp addr16 pop push push add mov (bad) (bad) (bad) (bad) jnp sbb xchg or out fdivrl fisttpl aam roll clc mov cmp (bad) ljmp sbb int mov mul ja outsl ja mov out cli jo incl push pop or adc sahf gs scas (bad) clc sar (bad) mov mov loop mov push addl mov cmp cmpsl (bad) (bad) (bad) push push pusha rorb imul push scas fcompl fldenv fild cmp aaa push scas mov inc sahf mov inc jmp repnz lret mov cmpsb mov sarb xchg push xlat int push ficom fldenv jp,pn mov dec popa les sbb xchg sub aaa mov lock fild sub js out adc add rcr push jp add xor into mov add add orb and xchg shrb or xchg lock popa into mov jno cmp mull cmp ret dec (bad) mov into scas cmpsl inc xchg aas lea mov add ret ja adc in test and aas sar cmpsl addb pusha loopne nop push (bad) xor mov test call js add inc les fs (bad) (bad) jmp adc push aam mov hlt or dec int3 sub insb in sbb pop fdivrl jl add (bad) (bad) (bad) (bad) jmp adc jb or push sbb jp push xchg cmpsb data16 (bad) (bad) jmp push xchg push (bad) ss (bad) push mov cs outsb out push sahf pop fidivr mov inc shll popa (bad) incl cld loope xchg push (bad) xor mov sub pop fnstcw mov (bad) stc add movsl gs xchg push aad mov cmc ficompl (bad) jg sub popf pop fnstsw addl mov (bad) xor (bad) (bad) pushl dec lret sub pop fstpt mov inc (bad) daa cmpsl addr16 xchg push xlat aaa (bad) ja jg outsl out pop lahf pop fistpll mov add mov and loopne jo lock (bad) mov push xchg aam movsb in je cli dec mov sbb fdivr (bad) (bad) ljmp push mov int3 sbb pushf fsubrl lods in cmp mov rcll xchg sar (bad) (bad) jmp popa mov icebp add push xchg aad movsl in jne cmc or leave sbb pushl add test or pop popf (bad) (bad) (bad) in cmp inc (bad) ret xchg shlb bound repnz inc xchg push push xchg (bad) data16 (bad) (bad) (bad) jmp ss (bad) or lret lcall jp cli push dec mov push pop sahf fisubr outsb scas std (bad) (bad) (bad) out jle,pt incb inc add push xchg shll arpl repz inc xchg pop push xchg xlat daa (bad) (bad) pushl cld out ja (bad) or lret sbb fldt imul cmovg incl outsl scas out aas jg (bad) adc xor pusha jo nop mov lock (bad) ljmp push popa jno xchg mov icebp add and inc push bound xchg mov inc shl repnz and inc push arpl xchg mov repz and inc push fs xchg movsb mov scas (bad) inc aam hlt add push gs xchg movsl mov mov ss push data16 (bad) (bad) pushl xchg cmpsb mov (bad) out pop pop daa aaa inc push addr16 xchg cmpsl mov xlat out or sub dec pop push js cwtl test enter or sub dec pop imul fldl2t stc or sub dec (bad) mov lcall sbb cmp imul stos (bad) (bad) (bad) (bad) mov or sub dec pop insb jl pushf lods mov or pop insl jge popf lods (bad) (bad) (bad) (bad) mov push push cs pop outsb jle sahf scas mov nopl aas dec pop outsl jg lahf scas movsb dec inc cli mov pop push (bad) (bad) jg imul jae jo inc dec outsb pop jae mov and push inc push stos mov (bad) scas je pop je sbb loope,pn xchg dec dec (bad) in in rcrb jo inc pop dec push and inc sbbb or inc mov outsl hlt adc rclb adc adc or push xchg (bad) xor and fild sbb or push push fs in adc add and jo (bad) ficom add push xor dec gs adcl and imul out push pop inc lods add push pusha pop pop add into outsb pop push mov cmp mov adc pop addb cmp popf and add adc ss cmp add jge or add xlat and mov sbb sahf xchg lea (bad) sbb jns out sub sub sbb push push push pop adc sbb sub cmp xor and push cmp repz pop push push and iret repz xor es repz pop daa cs repz das aaa ds xchg xchg jg mov xor xchg add testb fdivp inc add std push stc icebp push jns out roll iret cld clc lock xor push xor inc lds push inc dec push mov cld decl mov pop and jae push aad jle sbb push bound mov inc sub fcmovne push sbb push and mov in aaa xor push (bad) daa aaa sbb or int3 mov push sbb cmpsb fmul int3 mov ss add (bad) (bad) mov mov xor aas lret xchg scas out aas stos adc (bad) repnz aas out lcall cmp jmp jnp push loope pop stos jb push test jg or (bad) xor or cmp xor bswap aas incl inc mov mov addl (bad) dec mov shrb sbb and adc das out pop fbld pusha nop push lods insb pushf pop mov outsl lahf pop or cmp add xor or cmp pop (bad) aaa (bad) mov (bad) (bad) decl js inc mov mov jnp inc mov sub sbb and adc sub sbb daa out xlat test (bad) (bad) ljmp pop movsb fs push stos imul add xor push into incb (bad) xor or (bad) (bad) (bad) incl jb dec mov jno dec mov shrb out push fisub loope shrl (bad) (bad) (bad) jmp push scas outsb sahf pop mov insl popf pop or cmp push (bad) ss or cmp add (bad) (bad) (bad) decl jp inc mov mov jns inc mov sub sbb es (bad) sub sbb and jo (bad) ljmp pop cmpsb xchg push test gs push std add test cmc xchg jmp cmp and insb gs inc pcmpeqw pop push mov xchg dec or ja dec pop daa pop negl (bad) cmp inc push arpl out jae mov pop rclb add in add out cs add xchg jo jmp add sbb xor inc popa add addl push jns out or sbb movsb or (bad) mov and xchg pop pop daa daa daa daa or or xor or add out inc test aaa notl adc pop sar pop or or or (bad) sbb jns sub insb in out sahf out pushf pop fdivrl out sahf mov inc jns out ret (bad) out xchg push (bad) xor jb or jns sub sahf out lcall sahf mov inc jns out (bad) cmpsb data16 jns out xchg push (bad) ss out sahf mov (bad) push mov sahf out into cs outsb out out sahf out sahf pop fidivr sahf out sahf mov inc jns out shll popa loope jns out xchg push (bad) xor jno or jns sub sahf out cltd pop fnstcw sahf out sahf mov inc jns out lds jns out xchg push aad sahf out sahf mov cmc or out int lods insl in out sahf out popf pop fnstsw mov or cmp repz push rcl repz repz mov jae repz jae repz mov repz dec dec lret lret repz repz stos stos imul cmp imul sbb fwait cmp repz pop pop fcmovnu repz repz mov cmp jnp sti pop pop xchg repz inc inc mov daa daa cmpsl cmpsl addr16 repz addr16 pop pop xchg cmp repz push push xlat xlat repz repz aaa mov ja repz ja (bad) (bad) jg (bad) dec dec iret iret repz repz das scas scas outsl iret repz outsl out out pop pop lahf cmp repz pop pop (bad) repz repz aas mov cmp jg pushl inc push sahf out sahf and push xor sahf out or push out cmp inc sahf out sahf and adc xor out fidivr (bad) addl ret and dec add sahf cmp repz adc repz repz adc sbb repz push push push push add cmp repz sbb iret repz dec adc iret pop pop in jns cmpsl add add or inc cs or cs mov bndstx daa iret jnp adc adc adc pop jb sbb push jb pop sbb pusha push jb ret xchg xor mov adc push pop mov cs sbb mov pop aam sbb dec xchg cs outsl or or movsb cs xor adc and cmp inc push pusha and adc and and fisttp jbe sub jg xor fsubr sarb aam mov jne daa inc nop push push lcall in aas repz aas lahf dec pop js (bad) (bad) loopne inc pop adc (bad) mov inc pop mov loope fsubr shlb out orl inc iret leave pop int nop ds shlb nop cmp jo inc and mov sub pop lods (bad) push pop call insw (bad) imul insb (bad) insw out xlat pop push push and lret push call ret or add es pop js fadd es aas add repz clts pop aas jg jns out inc (bad) (bad) (bad) (bad) incl decl test movups out jae push pop das jo xor repz and sarb or and mov addb repz dec outsb aas pop sbb leave leave cmp rclb pushf pushf cmp push pushf pushf or popf pushf add unpcklps daa daa mov ljmp je enter daa or daa daa daa add inc call or pop sbb in in push push jl dec cs ljmp dec dec dec mov dec dec dec clc add dec dec dec dec mov dec dec dec les bound dec dec dec dec movsb add dec in pop sbb dec dec xchg inc jp dec dec dec dec aam push dec dec dec dec mov mov dec dec dec hlt add in rolb jbe in in int3 pcmpgtd in in lods push xchg in in in or in in pushf arpl in in fcompl aas outsb daa mov leave cs dec push pop push daa cld call adc jno leave leave test leave leave mov pushf pop enter xchg enter jns rcrb mov test and das incb add jb xor lret daa daa daa and and daa inc ljmp lcall fisubrl jb jb mov daa pop jb push adc jb jb jae (bad) daa daa daa pop arpl cmpsb add daa daa daa addl jb jb sbb daa cmp imul jb mov mov pop jb dec notb pushf pushf pop and into leave leave leave test scas enter pop xchg test pop enter aas fisubr jbe mov (bad) (bad) adc in (bad) inc xor and leave inc xchg rcll xchg dec mov adc inc xor test and fldenv stc xchg dec and lds in aad xchg dec and cmc leave inc xor lods xchg dec and in popf adc inc xor mov and xor and (bad) mov xor repz dec and leave stos jmp leave inc xor and xor and leave xchg xlat mov push xor leave inc scas out inc xor jo leave mov push fsubp push push fistp adc out sub push add repz inc pop inc jg cmp push jns pop add push sahf cmpsl test or sub rcll shlb and sbb xor enter pusha orl leave enter or mov dec bound add adc sub jne into and icebp xorl push inc add jae push outsl or outsb es (bad) mov mov add jle (bad) push mov loopne inc es sub (bad) out pop pop ljmp xchg mov mov insb inc mov pop add orl mov xor sbbb loopne mov fimull sbb add add pop mov sar das mov xor push into mov mov cmc inc pop fdivrs jl add mov ja and dec lahf rcrb add outsl es pushl jo outsl jb gs js gs xchg notb xor es dec gs push das jns mov push add pop or sub scas es ss jp clc xor inc lahf pusha mov enter subl dec adc add (bad) push mov es jbe nop xchg (bad) cmpsb stos inc neg (bad) add push xor add inc leave dec sbb rolb js,pt and decb push and dec dec jne jnp dec sub push push daa je mov jns addr16 dec push cmp repz clc xchg xchg pushw (bad) test loop imul sahf xchg push and shrl pusha inc (bad) test add mov enter call xorl inc imul jo (bad) aas inc inc int mov outsb xor inc jb jae push imul and dec jo lods popa sbb roll pop pop xchg pop rcl cwtl push lahf clc jo sbb and das dec and adc jbe push call mov adc pop dec outsl inc xor dec es xchg pop dec jae int push gs jne push mov jae inc ss aaa movsl push scas mov xor out ljmp cmp mov cmp insb mov lahf cmpsl push hlt inc cmp js inc add mov dec ds jns lock mov int inc mov mov jl mov pop cmp clc pop out pushf outsl add mov nopl iret pop shlb dec cmpsl popf mov and mov xor out call cs lods pop cwtl pop push hlt push xchg pop push push pusha imul fldt sbb xchg add lods inc cmpsl scas xchg lods inc dec in sbb cs repz das push add and xor adc (bad) cli or mov dec mov loope orb out test pop sub inc inc cmpsl in inc mull lret pop push jmp div add dec gs jne push and outsb jae ljmp pop push insb ds mov imul push outsb fs cmpb cwtl inc lock cmp cmp out das and enter add xor push enter push rcrb stc cs cli inc push xor add or (bad) jns in push pop and sbb iret nop cs sub add push cs dec (bad) pmaxub into add adc pop repz sbb outsb or repz dec push sub pop das sbb (bad) mov nop out cmc out jle mov xchg nop add add pop std and js insb fs xor xor xchg test push push (bad) mov popa jb daa dec inc dec inc idivb and sbb push imul (bad) (bad) imul into outsl jb outsb outsw inc out jne fwait insl ljmp imul dec adc and mov daa push sarb mov jns pop xchg jne sbb adc add lock inc push xor push push dec inc pop add mov and pop addr16 cmp jae out xchg hlt cmc fwait into lods jmp out imul imul mov and clc xor cmpb cs dec jnp loope test xchg inc jae push mov pop adc dec dec dec jnp sbb dec aaa push mov iret push push and xchg addr16 mov (bad) xor fist inc jb mov cmpsb mov fwait or ffreep ljmp cld and popaw mov mov icebp and cmp jne je les je je add sub push cmpsl bswap out adc cmpsl xorb dec adc js mov lods mov das inc inc mov push mov mov lahf add push and out lock lcall mov pop lcall xchg pop mov jle addb mov out lcall sarb inc and insb mov leave jae lcall sub add mov cld js fmuls pop cmp xor dec add adcl push add lea and pop mov popa mov cmpsb pop mov xchg (bad) dec push data16 sub repz and inc cltd call dec cmpsb cmp xor mov jl pusha sti test jbe leave outsb push arpl push inc push pop call movb jo clc enter inc aas loope sti xchg ficomp das outsb adc outsb in imul pop das xchg jns pop add push jb adc push popa addr16 pop lock mov jbe lock push stc mov dec sbbb push push add jbe push es push sbb dec pushf ja or jns cmp xchg mov dec insl mov dec mov pushl inc and pop setbe adc xor addr16 inc loopne sbb insb push pusha loope roll pop pop and push js and jl aaa mov enter jle ret mov repnz addr16 js add adc shrl add bound dec repnz jge es jg out pop dec dec in loop dec mov mov loop cmp add scas sarb (bad) out mov arpl dec arpl lds push sbb inc insl fs and out push sldt add test xorl fildl test popl faddp inc daa push pop cmp pop clc xchg outsb clc jle in cs inc cwtl cs test js mov lock lock cmpsl push jno loopne push repnz imul jp jns push leave test and andb arpl xchg jae adc aas jp nop lcall mov jne cmc fiaddl dec pop jp sub out inc enter mov cmp mov dec cmpl inc inc push outsl jb fidivl pop cmp cs lret inc mov push imul and lahf mov cltd js aas jecxz call xchg push outsl or push lahf mul mov xchg push add outsl insb push imul call aam jne out mov ds test iret loopne lds les shl and insb ret pop roll sub std int je je pop arpl jae dec pushf pop sbb xor ret mov xor cmp inc (bad) cwtl lahf push mov je outsl enter loopne mov sub jg add mov call iret jo bound inc imul sahf das push testl sahf mov shrl jnp sub divl out mov movsb mov jns dec repz or cli adc imul ds out mov das mov sahf ja push jle push cmp push loopne out sbb dec dec dec dec lods inc inc dec jl int3 les or out push push push inc inc inc xor dec push aaa xlat test pop out push imul push dec mov repz in cs dec cs dec push daa push (bad) mov pushl xor das jge les fs addr16 jbe add fidiv adc cmp shlb dec dec pop cmc dec mov (bad) lods push imul lahf das dec inc ret cmp gs pop sub jns mov scas into or enter es sub dec xchg mov and test shrb pusha outsb arpl sbb push sbb cmp enter jb stos mov sbbl jle or mov inc mov pop ss inc negb pop rorb into aas in cmpsl cmc xlat rclb push rcrl in das cltd js loopne loope cwtl xchg pushf das in out xchg ret add add dec cmp add and adc int loope jbe fs or push inc push into aaa cmp pop gs bound push push (bad) push push pop outsl or and cwtl sub jne jle or fldl rcrb popa push jae mov out jne inc dec adc into mov jae mov xchg addr16 jle out push out jb xor mov jae push hlt clc sbb jle loopne (bad) and jbe ja pop dec inc cmpsl adc jo or add jns mov pop lret jb in gs cli jg pop inc dec dec inc inc dec pop adc repnz cmc inc inc inc and dec push push inc push push lcall mov or jb rorb mov push push and inc and int pop dec dec inc and push sub insl imul adc insb cmp dec (bad) loop imul mov outsb in aaa cwtl test push arpl mov out imul dec ss mov ss jbe jb push scas add inc dec or and movsb jnp mov js and mov lds xor out outsl jo mov pop imul je fs push cmp adc mov jo out je fistp scas inc aaa insl test push push je push inc arpl arpl test imul add inc jb int3 sbb cmp inc xchg popf sbb dec pop xor push cmp mov lea push cmp mov jae push xor (bad) popa fiaddl or and outsl icebp sub jae push imul mov inc dec imul ret mov inc sbb test sarb add cmp dec xorb fcoms addb push int3 (bad) sub inc mov push jae int3 pop test sbb xor inc dec inc push dec push mull xor add (bad) aas and aas jg xor fimull leave ds call jg sets out divb inc pop jns add outsl mov xor data16 cmp outsl fs inc xlat jo push bound add push insb fs cmp sub loopne add and imul jb sub fidivr inc cmovs jnp orb paddq (bad) xor (bad) jo mov add push pop add insb inc pop jbe cmpsl (bad) fwait mov push jecxz dec xor (bad) dec mov dec xchg push pushf dec outsl js leave mov and push das into repnz jnp mov dec push dec push dec push sbb push add mov mov push add add add jmp push pop pop or xor and in popa (bad) out pusha push jo js inc inc call xor sbb pop icebp or les add aaa lcall sub dec outsb pop jecxz xor push dec xchg addr16 bound mov jno sbb and cmpsb add (bad) sub jae je inc xchg cltd outsl add cmc jmp scas jo gs and push sbb lock jb je mov jbe cmpsl push dec and jnp arpl sub xor add push outsl insl popa imul in fiaddl in jo jo push push cmp repnz movsb sub add daa add lea js add inc fs fmul jb dec (bad) pusha jns (bad) inc pop sti outsb popa jo cmpb adc dec loop add (bad) hlt jb adcl out or mov daa popw push outsb or pop xorl push jmp or addr16 push out pusha xor or jle mov xor push push add mov add fs xor imul xor and test inc xor cmp jns cs push fldt add int xlat cmp fdiv add add inc lock test inc je inc jmp or push xchg jp sbb dec imul ja jo je outsl push or es fisubl call xchg out pusha insb (bad) xor pop icebp sbb add (bad) jo insl ja inc je shrw and and mov ret ljmp mov adc adc testb dec cmp and clc mov popa add jo gs sub mov add dec imul mov adc mov jle pop cltd enter popf xor push dec inc dec add dec dec inc add lret inc push jecxz,pn out cli jg and jg dec sbb scas sub adc in xchg cmp sbb in inc es sbb jmp clc sub adc add add and lods lcall adc jbe sti loopne xchg clc daa cmpsl xchg pop in jo and mov xchg push daa cwtl mov js lahf add xchg aaa inc lock sahf loopne in mov daa nop int scas js xor dec rolb call push addr16 pusha pop nop daa cs mov cmpsl aas ror or (bad) xchg lahf sbb mov cltd nop push and enter pop jo mov and jg mov test lods pop enter call fadds mov fldt xchg daa mov mov pusha outsl dec jo in ret cwtl jg mov mov mov lahf xchg daa mov cmp pop call jne cltd mov mov das pop insb sub cmp pop enter inc nop daa iret test shlb xchg cmp subb and add sahf xchg pushf and ds xor xchg dec daa ja rclb mov ja cmp dec enter mov add test out fsubrs xchg or out adc mov call inc mov xor xor insb (bad) loopne outsb push das fsubrs inc lahf (bad) mov bound psubsb or daa pop xor and cmp pop and nop and iret test mov jb pop shr mov mov cmp daa adc pushl lahf xchg or inc iret (bad) mov lahf mov clc daa clc push add add push xor add xchg and dec jbe repnz mov jo or (bad) lock das cwtl mov repnz insb mov cmp pop nop push enter mov pop adc in mov out pusha mov add inc add daa mov daa loopne psubusb lock xchg mov daa xor sub inc mov and push enter and mov mov loopne enter insb and fist xchg mov fisubr dec push mov xor daa sub mov mov das in mov loopne cmpsl add cs inc fdivrl mov les pop mov lea cmpb (bad) push fsubrs mov out or jns add mov loopne pop add or insl or addl pop or (bad) mov or mov js mov mov sbb or dec in adc mov enter sbbb test xor mov add out cmc add pop and mov push xchg push sub mov lock xchg loopne frstor and mov mov add nop mov or test cltd nop sub (bad) call sarb lahf clc or inc lcall call dec rolb mov roll jmp lds nop cwtl ja daa pusha xor add shl push dec mov xchg daa shrb sbb in popa mov das sub js and add add ret outsb xchg aas ss sarl dec fsubs ss mov pop mov test add or inc cmpsl cmp int pop add mov push pop shrb cwtl (bad) sbb pop lock dec ret jl inc das push out cmp orb clc mov test add ret rorb test das js dec leave xchg ret cwtl ret add or cmp in call loopne les sub (bad) (bad) in cs insl inc (bad) cmp les inc xchg pusha push add push enter sub and leave sub xchg loopne add jo cwtl and pop lds scas lock jae orb cmp mov mov add jb leave aam out jb cmp repnz pop std mov cmp mov pushl dec jae test add cmp call js in js sub pop scas nop out dec or iret repz add add in jbe cmp jmp inc cmpsb loopne or mov xor push cmp jo out (bad) sub xor and pushf cmp test add js das iret leave adc enter and mov mov in in in push add cmp inc mov mov leave scas dec inc or in mov mov loopne inc dec repnz mov lret cmp mov mov mov outsb daa pusha popl js iret in in mov test loope pop mov sahf out add loopne jb rcr loopne call aas sbb fild mov mov dec lret dec jns push enter (bad) cwtl fucomi in pusha push mov nop pop cwtl rcrl jg test mov dec lock push lea nop xchg and sub fmulp inc lea add add outsb push jl mov jns out cwtl or sahf out ret or fimul in psubd cmp sarl adc adc cmp repz adc adc dec push pop pop push cmp repz sbb iret repz xchg pop iret mov mov xchg lods outsb lds iret or fcomps (bad) out and xchg and cmp inc (bad) push (bad) bound mov (bad) mov in xchg (bad) mov les sbb loopne out (bad) cld (bad) nop in xchg and nop es xor mov jb nop push nop pop nop insb nop enter jp mov jb movsb nop mov rclb (bad) fmull pop ljmp add mov jg (bad) mov js test sahf add push (bad) pop add adc testl lcall pop pop (bad) outsb fmul pop inc outsb les or inc in nop inc enter xchg cmp fildl push loope jmp js out lds scas call mov add add out or nop xlat dec sbb inc nop dec scas nop inc pusha push addb add shll push inc outsl nop xchg pop xorl (bad) rclb jae sbb rcl loopne inc ja jmp inc (bad) iret decb and cmc jnp pop xchg repz add or cmp sbb pop xchg pop sub xor outsl cmp fstpl xchg pop pop xchg arpl imul adc nop daa call adcl shrl add add add lds pop pusha (bad) xchg and adc cmp enter xchg inc xchg dec xchg jb mov xchg pop xchg mov mov dec ja scas and mov mov mov das leave pop aam inc aam pop dec adc dec push adc cmp xor xchg push xchg and dec jne pand in adcb out popf dec and rcr sarl mov (bad) adc jbe push aad xchg daa daa daa mov adc and xchg inc cmp scas test sub add int out jo js outsl or (bad) mov mov outsl test add nop dec shr fcomps js lock mov adc nop dec lock xchg data16 cmpsb call js out outsb push in pop scas dec pop mov pop ljmp mov das jmp xchg hlt decl or test dec clc xor fsubs jb pop dec xorb js mov repz push cwtl pop or sahf sbb iret add (bad) clc cwtl and mov stc add cltd iret adc sub and out out jne sub adc dec add out pop pop cmp lock push jbe inc ds cltd leave in or push popa cltd dec insb test ja iret add sub scas lds pop fidivrl dec sub lcall fisubl lcall xor cs jo iret test popl enter add rcl daa daa lret (bad) pop loope cmp mov xchg pop fwait dec pusha push enter mov push enter xchg fcomp fistp xchg fcompl fcompl xor loope fildl adc pusha fcompl cs fwait add call iret xor adc pushf dec call xor fisttpll aaa fwait loop pushf lcall fist push pop ror mov sbbb jb mov cmp loopne psubsw jb decb popf jg xchg push enter popf inc ficom sub pop fiadd jo mov fisubr inc cmp popf enter lds js (bad) xchg nop cwtl (bad) (bad) stos fs mov fist aaa inc mov sub push and cmp enter sub adc pop push jg loopne jns das inc loopne sahf es inc enter loopne call repnz loopne icebp or jbe dec mov sahf dec leave xchg push lahf fsub lock sahf notb inc inc mov cmp push loope mov add push jb cwtl mov test iret jo adc sub jb enter lahf dec outsl cmp jb adc outsb push in push outsl push mov jns jo mov pop enter test add bound xor leave jg pop jns pop mov mov andb inc cs in mov jecxz in pushf nop push andb cmp in loop test and repnz in mov test adc fwait xchg enter in outsb scas bswap mov mov in mov mov mov mov cmp pop mov mov xchg xchg mov mov adc mov xchg xchg popl icebp mov xchg mov push pop sbb and and and cmp repz dec and and pop es jne repz sub cmp repz mov cmp repz ret mov cmp in bswap adc mov mov mov mov and mov sbb jb addr16 andl mov mov leave mov repz add or enter movsb inc push decl iret pusha movsb imul andl mov test or and inc lock xchg sub mov mov xchg movsl push aas push or mov (bad) jb pop jb call pop adc sarb cs and and inc fcoms add or cmpsb sbbb mov cmpsb jb enter cmpsb shll cmp cmpsb loop in cmpsb clc cmpsb loopne xchg and cmpsl push cmpsl sbb pop and das cmpsl cmp push adc outsl data16 iret repz jno or pop cmp repz push popf add lock mov mov ror cmpsl dec xor dec dec repnz hlt pusha jb xor jmp inc cmpsb mov test out imul fcomip xlat adc scas nop test in mov scas mov out or fcomps loopne xor mov test jb mov rdpmc daa iret jae ds add pop dec sbb outsl test sub test insb jne test jg movsl sub test jb xor jb add pop jb and sbb cwtl cmp cltd inc dec add dec scas pusha push fwait pop sub nop jns outsb push mov adc dec call loopne adc scas stos xchg rorb push push adc and in into inc decb pop test sub add popf pop jo orb cmp (bad) jb lock shrl enter push adc js inc repnz into mov out or lods pop outsl iret testl inc adc into repz cmp xor lds icebp incl jo (bad) lock js add mov pop jg out repz push cwtl push mov test aas cwtl icebp nop xor fdiv mov out inc pop outsl clc jbe and and fdivrs push fbld sbb repnz repnz enter push xchg fucomip (bad) sahf and jb lock clc dec repnz fsubr inc mov iret sbb xor in jb adc and cmp xchg ja mov mov and cmp leave loopne daa fdivp dec mov cwtl sub cmpsb cmp push xchg and hlt push lods enter dec jo push enter mov and adc pop push or lods leave sub mov cmp adc pusha xor test mov jo pop call nop cwtl add daa push enter mov jecxz ret pop into scas outsl pop (bad) enter scas add push scas scas scas ljmp push insb outsl inc dec pop add pusha dec dec push and sub dec scas (bad) in leave mov iret js test rorb mov pop cmc clc scas aas add xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov xchg xchg xchg xchg mov mov mov mov cmp mov push mov inc mov mov mov mov jb enter mov mov mov mov mov lds in xchg and mov mov mov sbb jb mov mov mov mov xchg and mov mov mov cmp jnp mov leave adc mov add test rcr mov mov xor dec add and pop sub test pusha js test mov jae enter and sti mov dec or pop js sbb cmp push ljmp mov pop inc mov leave dec dec xor das jmp fist cld or pushf inc jg lds push pusha mov dec nop (bad) lock decl mov lods dec inc cld mov mov cld mov dec movsl xor lds mov mov dec scas nop addr16 (bad) xor sahf out dec inc sqrtps xor and sbb std xorb outsl mov out (bad) cmp xchg ret jo mov sub test fdivr jle insb inc call les jecxz (bad) pop shrb sar dec mov jo push cmc (bad) mov outsl lock dec adc jl mov es (bad) sub dec and nop (bad) pusha mov bound jg xchg xchg sub inc scas (bad) leave fistpll dec xchg jp pop mov or pushl adc add xchg and mov daa inc rcll scas fsubs push loopne adc mov in imul mov lahf or and sub (bad) mov enter pop push mov add in mov in mov (bad) lock and dec xor cmp and das pop ficoml jo dec in sub cwtl nop shrb xchg sub xchg rolb ficom add jb jb pop inc push xor test mov jbe pop xor in mov loopne or leave adc sahf adc mov cmpsl (bad) mov add jo daa iret mov push add sub xor out rclb and dec call cmpsb nop add dec scas mov shlb fnstsw add fldl iret jb stos pop mov outsl sub adc adc sub cltd bound mov mov pusha nop out jb imul leave repz scas orb adc or ret add loopne loop in (bad) or pop (bad) sub mov adc push sbb mov xor dec jg lods mov inc fbld mov sahf pop jl enter inc rolb mov mov jns pop out xlat outsl add fsubr in ror push out jb (bad) jmp xchg and pop add outsb mov enter (bad) inc dec dec push loope fisubr mov mov pop orb and or scas test pop sub jns and call lock enter cmp outsl movswl adc jmp xor add iret repz add push add cmp daa daa addr16 or jb mov cmp or or sahf ja ficom loopne ror in cmp rcrb inc sahf add inc dec rcr xchg adc push rcrb jg scas jo cmp rcr cmpsb fmuls fbld ficoml push (bad) pop cwtl xor xchg push or add enter adc leave leave adc xchg lock xor add pop dec xchg aas js adc mov push pushf lea cwtl push js pop add pop cmp fwait dec pop and or or enter nop or daa int3 pop scas rclb call repnz or cmp mov in mov mov pop fadds add jb pop xor pop push lods js pop jb shlb enter leave mov enter lock and cld ret pop sahf lret adc add test shrb inc sub das imul mov jg nop fwait rorl inc lock jnp repnz sbb scas fmul enter out adc pop enter xchg sub dec (bad) call dec test push add test icebp and and js adc dec adc jo enter (bad) out mov cwtl ret decl leave repz outsb add scas call mov enter adc pop jae pop clc (bad) rorb dec push sbb push dec (bad) push pushw nop imul and add loopne xchg sub and xchg sub xor sub xchg sub sub xchg push inc sahf add pop push (bad) enter call mov xor pop jb pop fadd or fild in scas mov lds shrl fsubs cmp scas jne dec add jb pop mov inc enter push mov es push in scas push je xchg sub add test lds xchg sub int3 mov pusha pop clc dec mov (bad) mov and leave and fdivrs mov xor sbb inc scas movsl dec xor inc cs mov pushf test enter out rcrb int3 test mov aam pop fdivs aaa (bad) les loopne pop add dec out dec sbb call icebp stc ljmp nop imul dec sarb enter clc dec and push enter dec je push enter enter cwtl pushf rclb push mov les jecxz adc iret fadd mov (bad) hlt (bad) dec dec and and sbb mov or jb inc mov enter sbb mov sbb adc dec pop pmulhuw mov js in mov sbb pop pop repnz sub call in iret sbb xchg mov enter in hlt mov enter leave and sub jb push add nop out push pop add or sub lcall dec xchg adc popf cmpsb mov in mov pop adc inc dec mov repnz inc outsl clc push jno leave adc sti leave push and in pop cmp push pop and inc fnsave lcall bound push sbb daa lret test dec fcoms cltd inc pop add fs fidivrl jb (bad) xor push daa dec cmp enter cmp es fs jbe cmpsl jbe daa xor ds cltd fisubrl dec es inc pop sub adc push test dec dec sub ficomp sbb push lidtl inc push push dec dec dec iret sbb cmpsl sub inc dec xor dec push adc inc pop add push jl aas mov mov adc (bad) push cli (bad) imul fwait int mov js jp jl push ja repz jle xlat fstps shlb push rcl (bad) aaa mov inc mov mov popf xor inc add jl int push push sbb and lahf outsl iret data16 jl push mov add cmp cmp xor jge inc add xor cmpsl dec sbb (bad) (bad) outsb inc outsl push sahf out int jle addb add ljmp pop push add sarb leave mov xchg or or pop cmp aaa mov add inc push or pop movsb pop push pop push mov stos push out pop push dec shlb negl push or add stos mov in in outsl mov (bad) cmpsl int psrld pop (bad) jg sub jecxz mov lret (bad) into in stc (bad) fcomip into aaa repz mov fcmovnb stos pcmpgtd (bad) mov mov enter into jmp mov mov pop mov (bad) fadd repz lret fcmovb out and das pop push mov push inc and inc and xlat je sbb inc push iret repz or mov mov push fstpl mov mov pop cs pusha cmp loopne jg add sbb add repz andb jbe xlat ficomp dec idiv daa push inc scas cmc pop jmp lods (bad) add dec push fisubr insl repnz ss ja daa xor pop or xchg mov add mov push sbb pop sbb ret cmp (bad) ljmp add xlat daa test and testl xor out push adc push or sub dec out or add cmp dec scas xchg pop div or lods and xor (bad) xor sub push cmc lahf inc sub push jmp outsb sbbb push jmp ret (bad) push lods xlat cmpsl test push (bad) xchg add dec test push mov pop mov inc inc lcall pop jmp rcll in dec daa add pop inc out outsl (bad) mov sbb pop dec addr16 daa pop (bad) imul inc sbb push or stc ja cmpsl xor mov shrb mov fistp push int pop add sub ljmp push jecxz (bad) popl push adc iret stos inc (bad) sub push lds bound incl add xchg sbb inc adc adc das adc (bad) mov and add inc pop (bad) ja adc shrb or ret (bad) jg mov or daa rorl add mov movl push lds push dec jmp inc mov pop adc xchg incl fisttp jns stc stc std add incb (bad) mov sub ja in popf cmp andnps or rorl or pop test xchg aam mov sub lgdtl scas idivb fimul out mov add add sbb pop cwtd jl pop xchg mov mov pop add or jecxz clc xor mov in and add stos bound mov cltd add pusha or out addr16 fild pop xchg lock outsb daa clts jg divl adc mov and dec push push pop jnp xchg sbb adc out fnstsw jnp cld cmp add cmp or jne push neg mov jge loope mov ja in cmp emms mov ja ss dec dec jbe push aas (bad) jbe arpl ja fsubs out add and flds (bad) jbe mov movswl add mov dec lds add sysret daa mov fiadd imul frstor jecxz sbbb adc pop adc push lds out adc and mov adc jmp xchg scas push xor add xor add sub add sti mov dec cmp add jne jae and repz add xor push mov mov mov xchg push and jno dec adcl or mov xor (bad) fcoml and es sub xchg push xchg push movsb repz mov fs or cmpsl imul mov jmp push fwait jbe add inc xor (bad) cmpsl pop outsb jp lret stc int3 loope test mov push mov inc loopne int mov shrb mov fdivs fistpll mov cld shr push into lods sub mov fcom (bad) inc call mov lret mov out push mov loopne out shll fldz push lret not outsb jnp mov test sbb adc mov mov into cmpsl jbe mov xor xchg push (bad) add mov negl fwait aas dec xlat rcl out mov out into mov mov fsubs aad pop scas mov lock cs add orl aas mov stos (bad) out sbb fcompl iret (bad) mov aad mov sti or (bad) repz pop xor movsl (bad) ret fwait loopne and jbe ret pop or pusha jmp ds inc es mulb es jbe stos xor (bad) jno pushf loope (bad) cmp mov (bad) shlb outsb jp ret shr shrb mov rol or cmp into push out mov inc cs push lods jnp xchg xor and pop jae pop cmp pop dec popa outsb fdivrl pop addb clc out sub je cmp lods mov cmp aam aas dec pop pop mov shll adc inc insb outsl adc push dec adc push lock adc je add push xor pusha enter repnz aam ds or rclb adc push and test mov test insb jo in (bad) mov sbb ss aaa mov leave rcrb imul out fimul (bad) hlt mov inc lret fmul mov shlb fistl into lret ror je cmp inc shll lret pop js adc and mov popf loopne call xlat (bad) mov fbld mov aaa popf rol iret mov cltd jae and mov ret lret rcl fcomip xor cmp jb addr16 stos push sbb add daa push call inc inc push dec push pop dec pop sbb lock dec dec add add inc sbb sar mov cmp mov sbbb into int3 in addr16 lret das dec repnz sbb mov (bad) cmc out das fcmovbe stos mov mov mov shrb and mov test jl nop sub mov fistpll out pop dec stc and in dec icebp ja scas in jbe dec jmp add jbe sahf add add repnz daa clc fiaddl add mov and sub mulb add pop movsl fldt jge aas and aas decl sbb cmp sub push aas fwait das stos push mov sub pop mov pusha or mov mov aas inc and xor or sbb int3 mov aas (bad) arpl push push pop push or adc jae mov push xor add int3 dec xchg push xor and fstpt mul adc stos cmp push or fstps pop and sub push and xorb pminub sub xor gs repnz inc and push mov jle sub pop mov cli jns sub or fbld hlt push push data16 mov test sbb fiadd insl jbe pusha (bad) push adc cmp and mov or adc pop dec mov push jb mov inc repnz dec loopne scas pop cmp ljmp mov loopne add es insl lods inc push cmc dec mov cwtl pop and out xor flds and sbb bound sbb sub pop and jo or out pushf xor repz or add fsts or outsl push js outsl push add cmp add and xlat mov arpl xchg decl jnp xchg das arpl out ja mov das pop repz repz jecxz in sahf xor (bad) jp or and jbe lahf push pop push int pop data16 cltd int mov or gs jbe and inc pop push push addr16 lret jnp xchg and scas test push addr16 into push pop xor in outsl push mov data16 es xor inc lret cmp stos pop jp mov ds inc sbb pop xchg jge popf xchg or add arpl or in jge xor mov mov jl aaa inc add loopne jmp les test pop xchg into into mov rcr int mov rcl mov test sarl or add push repz push add add iret repz add cmp repz (bad) test lret mov ucomiss add mov xor addr16 lret push mov ss mov push ret jmp ljmp enter push mov push adc iret repz push add repz repz iret repz inc or cmp cmp repz or xor cmp repz iret repz and and sbb cmp repz adc adc cmp repz out cmp add add cld fstps clc sbb sbb jns out sbb out sahf out and and sahf out sahf and and and jns out and out sahf out sub sahf sub sahf out sub out sahf out xor sahf xor sahf out xor (bad) jmp in je arpl push insl outsb jo jb mov sbb je jbe js jp adc pop or add or dec adc adc adc mov cmp (bad) outsl outsl push jb (bad) fisttp and and sbb sbb sub and mov push sub xor sub sub and push bound rorb (bad) jp outsl sbb sbb sbb push pop and and sahf add mov sbb sbbb mov add jbe add sbb push sbb sbb orb addb xlat jge add orb wbinvd or or pop sbb addb cs and add sub xchg dec dec dec das xor cltd jbe cmp jo pop pop aaa adc aaa add adc jb,pt pop sbb adcb adc insl inc push and and adcb sbb sbb sbb addb sbb sbb mov add sbb addb and xchg sbb addb and lret adc pop add and scas add pop sub sbb and (bad) aaa add repnz lret addb and addb stc add in xor dec mov adc sub lret test xor adc cmp push or sub sbbl pop and mov sbb daa in fidiv orb xor rdmsr xorb sub mov sub xor das in orb or enter aaa cmpb adc aaa roll fstpt adc cmp add dec in or cmpb inc orb xor inc orb (bad) mov or and out add and sbb je inc orb inc add leave add push cmp pop aaa inc cmpsb fimull push add out aad add sbb rcr orb add sbb in cmp dec orb add pop xor movsl dec dec subb pop add xchg and sub aaa push sbbb add add push orb enter sub inc ds aaa xor xor bnd in push orb sbb pop in push orb push push push push pop cmp rcr pop daa add push and pop sbb pop orb out inc enter pop xor dec imul add sub sub pusha sub mov push add fiaddl pop arpl and mov add xor dec cmp pop sub fildl ficoml pop xor push jmp imul xchg (bad) orb xchg int add outsl sbbb pshufw dec outsb fcomi push je sub das imul jbe sbb cmpb pop add xor (bad) mov das add mov jb aaa jnp and jl add jge movd add push sbbb and addl fimul add sbb enter test dec (bad) jbe add xchg cmp in xor sub cs sub lret mov add and in (bad) mov add pop cmp push (bad) in fwait pop sti nop adcb xchg or inc mov xor sub in mov add fcoms xor and xchg orb sub pop in push notb cltd sbb sub and and or add push and sbb stc and adc sbb mov xorb add in pop sbb sahf out push movsl push cmpsb adcb test pop in cmp sub orb add lret repnz cs and in cmp stos lods adc sbb (bad) ss aaa add and mov mov out or add or leave aas pop mov or pop or or mov or and sub add daa xchg jl or sub push aaa mov xor sbb xor mov sbb enter mov cmpb mov pop sbb or or mov leave in sub sub xor mov or mov paddsb rolb add add pop mov add movb enter frstor lret lret or mov or orb into insl jbe dec sbb shlb and cmp orb add sbbb roll aam add aad adc test enter inc jb cld aaa (bad) adcb sub fwait packssdw xor flds sahf lret and sbb pop scas in dec sbb adc sbb aaa sub outsl fiaddl sbb orb add jmp jb sbb faddl adc and fldt or sbb fild sbb sbb and add in inc loop add mov sbb pop sbb ja jbe in in pop ss orb sub test add dec and fsubr arpl les in andb sub repnz popw xor sub addb sub jl in xor addb adc lods repnz repz sub cmp pop sbb pop push nop out sub sub out lods testb orb dec and clc orb dec sbb add xchg fcmovnu cli orb or add sti orb sbb and sub mov sbb aaa sub cld orb std xor xor in fsubs pop and sbb xor orl addl and andl lea add add and push add push adcl adc ss orl cwtl stc imul push adc or insl ret fimull pop add fadds pop sub fwait jbe fstl orl das add dec adc xlat push leave xchg daa adc (bad) in add aaa push pop aaa or fadd dec pop add and add stc and sbb dec into (bad) pop add and sbb push sbb sbb nop sbb and sbbl pop subl dec and xor nop push and jbe mov adcl jb aaa and fcoms dec and jbe add subl and xor and sbbb sub push jae sub or and pop adc sub subl fidivl and add and jns addl sbb xor add pop leave pop sbb lods ss ss es mov cmp and mov push cmp sbb pusha pop xchg or cmp cmp cmp add nop shrd addl fsts inc inc cmpsb ss dec insb pusha add sub inc sbb sbb or sub lret sub (bad) roll jmp ss aaa or or mov add orl (bad) push jp add xor jle mov sub jbe orl (bad) dec push push adcl adc sbb xor add fisttpl add xor dec push push rcrb idiv pop (bad) or and fimull adc push xor or insb lock or sbb push aaa adc or jbe (bad) pop or fidivl or push push lods jbe xor push mov sbb sbbl sub sbb sub sub (bad) or pop inc or push mov sub pop sbb sub mov add xor sbb or rcrb adc push push stos or fbstp xor lock push add jp,pn sub sbb xor xchg ret jbe pusha mov or mov pushf sbb es jl mov push sbb or add pop (bad) push push dec push repnz adc dec xor loopne push daa push int mov das add sbb and jnp popa stos mov mov ja cld push orl adc aaa push or push (bad) xor adc notb in sub out and add mov adc push and sbb aad sub bound jbe mov inc into pop ljmp add push cs adc into or mov sub inc fistpl push push push sbb fiadd sbb es cs inc or xor add jp das push ljmp jp mov (bad) pop cmp add pop jo daa pop sbb sub sbb fcoms mov sbb adc or push pop ds push cs and add bound xor sbb push sbbl or and addl sub adc aam inc ds cli add fcom mov push jbe sbb adc data16 sbb cmp sbb mov inc or pop faddl pop ljmp or jbe into sbb sub adc and mov into pop (bad) push ds mov pop into adc adc sbb int3 sbb dec testb ss jp mov or add ss adc jne push push or out push mov pop sar push xor pusha andl stos aaa mov inc fwait push into add xor pop ljmp push jbe arpl push mov dec sahf ds adc sub adc add repnz push sbb mov sub push sub push inc andw addl xor jle jb dec add add cwtl cs push je dec popa bound sbb bound mov bound fwait mov or add cmp add movb cli adc rcrb inc pop mov add add sbb or or popa push adc sub repnz cs test pop out subl ds rol sub add mov cmpsb xchg mov scas push ficompl shll push dec cs cs incl sub (bad) mov insl orl aam (bad) push pop or scas sahf fidivr bound adc push ss or sbb add ficoml add lods cmp ds das mov add jb js and sub xchg insb xchg leave pusha add addl sbb bound sbb ss ficoml pusha (bad) pusha stos xor shrb imulb andl mov sub sbb jno xchg push adc add cmpsb add jb mov scas and adc sub mov sbbl xor enter jle xor daa or or ret loop xchg sbb xor rolb scas push mov or xor sbb (bad) dec push add (bad) mov add fimull (bad) sbb sub dec shlb adc bound and push sub add ja into add inc inc aaa scas add push jmp or (bad) xor cmpl xchg or dec out loopne loope cs ss xor push push fidivr lcall or dec cs xorl mov negb pop push adc bound adc shr loop add or mov adc push add jo aaa xor inc test bound pavgw daa xchg xchg sub loopne cmp scas or test bound push sub pop sbb mov sub adc or xor or icebp pushw sbb lret xchg push xchg test push sub sub (bad) ljmp mov sbb loopne and sbb ss dec add roll xlat jp mov andl lods xor push and mov adc bound adc and inc xor pop and inc add push and adc es (bad) cmp ss add mov and loop or out es sbb push or mov or in ljmp jb or into (bad) rsm xor xchg ljmp xor inc (bad) mov and push xchg sbb mov sbbb mov adc inc ss jle or addl enter sbb ds sbb fimull addl dec cmpsb mov sbb bound fimul imul rolb cwtl inc sbb or add call pop lea stos add addb cwtl out outsb or stos call loop aaa xchg jl,pn sbb ss adc jae lret add cmp (bad) push cmp or mov mov adc sbb popl push cmpsb (bad) pop mov nop xorl dec jbe,pn push stos test xchg fisubrl jb iret roll and sahf dec das cmp mov hlt clc xlat sbb and add push mov push sbbb sub mov es bnd shlb mov sub adc imulb ficoml scas xchg adc cli cli and mov in test sbb inc repnz out stos and xor call rolb daa jp push pop adc cwtl negb xchg jle mov sahf sbb jle jmp xor inc mov (bad) lcall jae or cmpsb pop lock jle,pn scas test xchg sub stos push loop (bad) mov dec (bad) jbe and (bad) xchg mov sbb cmp push mov mov adc outsb adc pshufw or jle into inc and push repnz pop cmp mov mov add in loop ss mov add push cmp adc ss mov mov pop or inc xlat jbe or (bad) repnz jbe or push or scas sar jmp jp into bound xchg and pop je ret add push or es or or (bad) sub (bad) xor adc push adc test repnz pop push xor sahf cltd mov bound ds jno adc adcl into push dec popf mull bound ds add rolb es (bad) or aaa fisub sub dec stos xchg sahf pop xchg shlb jo sbb into mov push mov jb sub negb xor sub sub adc ret jo jbe sbb jg sub sbb stos test add sbb or push mov mov aam mov add or ljmp mov xor dec es xchg pop xor xchg push scas xchg cs popa jo inc push xchg mov adc xchg out jecxz js sub jbe add or mov repnz add adcl mov adc mov push adc pop inc daa int3 push sbb lret adc bound add cwtl sbb ret sbb sub pop or addr16 push dec sahf ds test bound sbb push mov adc sub push or (bad) into adc xchg mov scas xor inc gs or mov test cmp lods sub add mov ret inc or ss daa into adc xchg or xor shlb jge adcl push insb pop mov stos ljmp fsts ficom pop mov adc mov or add mov sahf es adc sbb scas ret xor push or push rolb adc bound int3 push data16 loop sahf rclb mov and sub xor lcall inc leave repnz sbb sbb xchg inc in (bad) sbb xor mov xchg or or adc xchg xor jo fs or fisub es xor push xchg andps push push and fnsave scas addl push or (bad) shlb lea inc out bound inc push jle aaa popf add pop ss mov jmp andl mov push and push jne mov push mov ficom fimul rorb sub sub rolb (bad) or jbe cmpsb xor push mov push sbb add out mov jbe pop sbb add or insl push loopne sub sub fldenv aaa (bad) adc sub daa mov lret adc jp or adc add mov or lds (bad) sbb and mov fsubl push or add or test dec lcall xchg data16 mov xchg xor pop xchg sub add or mov and int3 add xchg (bad) push mov push sbb xor jp clc ret sbb jle fiaddl pop mov add lcall or cs inc aad (bad) adc notb mov es and ss cmp pop xchg xor or push shrb mov sbb fidiv mov xchg pop repnz xor mov adc sbb adc sbb mov test or bound inc adc xor sbb or pop push test xor sbb ret je pusha daa sahf sbb mov adc addl loopne stos sahf aaa fiaddl adc cmp (bad) fisubl pushf data16 or adc test or cmp test inc inc shrl add es into or mov cs cli rorl jo faddp push xchg and stos or pop mov sbb push or push enter ljmp pop push add or ret xchg push add add and push or sbb push xor or xchg pop int cmp mov (bad) pusha out mov (bad) mov add rorl sbb add sub dec mov mov add jp sub push adc stos loop aaa xor or and push xor or fimull dec out and dec or add out xor xor das dec jbe adc sub sbb test rol and xor push xchg sub fsubs sub sarb mov xorl pusha push and push mov pop xchg push add adc dec add mov jb jge and mov cli adc push adc cmp sub sbb pop sub cs repnz sub aaa cltd or add mov adc or mov push test (bad) mov inc xor push (bad) and sub push xor add ret lds (bad) repnz add sub (bad) sahf pushf push outsb lods jbe lret sbb mov add jle mov add (bad) iret (bad) lret or push sbb call jbe adc xchg or (bad) push cmp cmp push rclb push cmpsb adc xchg add push sbb repnz int (bad) cmp push cmpl adc and xlat add pop push lret adc fwait mov adc gs jp mov add adc inc mov and pop xchg cmpsb sbb sahf or cmp sub (bad) xchg push mulb outsb bnd add inc sub sbb adc push adc pop into pusha push xor das lcall xor xor push sub add xor push jg gs adc inc adc xorl or add into and dec test into pop add mov sbb pop arpl push jae and pop cmpsb out fiaddl shl inc adcb and cli enter mov scas mov lcall sbb loope sub mov push and insl and push push cli sub in or mov pop out es sbb cmc addb cli mov jp push fdivrs adc jp xor inc insb xchg sbb (bad) pop adc push sbb stos loop inc (bad) out mov dec sub addl dec or or push test or mov adc push or sbb ret mov inc jo les push pop (bad) ret xchg jp xor jb mov xor int3 push push add sub test or and (bad) add ret clc add fsubs outsb outsb adc adc cli sbb sbb sahf xor or xchg pop mov fadds mov add push jle jb xchg pop or stos leavew sbb (bad) jle adc sbb xchg into shlb mov add ljmp push cs mov (bad) push xchg push std jbe dec xchg adc jb das fiaddl addb or and sbb bound xor cwtl jge fildl add inc lock sahf mov mov pop or (bad) add loop outsb andnps add xor sbb push inc scas loop test mov mov push call or inc rolb push push lahf cmp shrb inc subl xor or fs out popf push or out pop test ficompl pop es adc movsb jo add sbb or divb or das pop sub cmpsl add xor pop stos sbb mov xchg adc addl mov mov cli jle and fcmove aad xchg mov into push and aad add and loopne xor sub negb insb and xor push (bad) or push sub add sbb imulb or inc loopne loop push inc in movsb test lret and imul sbb mov lea out push adc ret or pop xchg ss push cmp xor jp xor pop push add xchg pop enter ss xor orb pop add out sbb jbe push pop push push ss pop call cmp push add sbb jbe add cs jge in or push push (bad) fidivr sub and push (bad) mov ds pop aaa or into insb cmp xchg imul or fldcw add or sbb adc add add stc fldcw sub add out testb or add out add add or stc (bad) (bad) sbb cmpsb push xor loopne push or into into into mov out push mov or and data16 fidivl or sbb adc mov and sub sub fdiv aaa or fucomp sbb or pop inc or and xlat or and pop repz dec push or sbb repz stos inc sub mov sbb sbb or dec mov or push and or shrl ljmp and push addr16 mov sub addr16 push xor pop (bad) xor mov push or and sub cltd xor dec push cs iret or or mov push add xor dec cmpl aaa or jmp (bad) or setge pop or xor das add fwait das adc jmp out loopne jp push cmp or popf lahf lahf sbb push xor or or dec jecxz xchg or adc sbb daa push mov repz adc or in (bad) mov lret mov or xor loop pop xlat shlb and or sbb pop aaa push or int3 jae cmpsb xor loope cmp push or lret push es and and loop sbb daa rorb add repnz inc sub and and out jle out or ja out jae pop and xor pop sbb or std xchg les aaa or sbb sahf add push jle out or push and add int3 inc mov push mov aaa push and aaa imul test cmp push or das das cmp into push or scas adc mov add ds mov in out sbb xor jo xor and addr16 add inc add or and out sbb sbb sbb addr16 pop add sbb daa add cld mov push pop adc xor aaa add cmp rorl ljmp rolb or add inc sbb jle enter sbb sbb add scas sbb sbb push dec aas sub or add pop sbb lock xchg out push fmulp (bad) or add xor rolb lahf cmp push pop and push repz and in in or sti push test ret fsts push inc sahf or pop or inc push cmp fnstsw lds mov xor add or popf lahf cltd ss add mov jns push and fistpll pusha gs sbb adc test sahf pop and adc sbb ljmp push cmp add into and sub and jae out bound add add or sbbb xor adc sub jno jbe stos adc push adc sub loopne out push test outsl push outsb cs add ljmp inc push ret or mov cmp dec mov or xchg push out xor pop pop ret add scas pusha push sahf cmpsl bound push inc cmpsb mov push push xchg adc cs sub adc xor add inc sbb mov data16 pop lock xchg (bad) (bad) sbb and mov and loopne (bad) and ss lret outsb xor cs iret and bound adcl or aaa out (bad) sbb mov pusha mov ret inc xor xor mov pop sbb jl xor jae dec stos rcll xchg pop xlat or fiadd or fist ljmp xlat add dec (bad) es mov mov add push jb adc mov and ret sub mov cli mov add loope sbb rolb mov fildll xchg test cmp xlat icebp adc adc jmp mov lods sbb push xor ret or popa addr16 pop ret out out pop sbb dec es add pusha jae pop and adc (bad) dec mov xchg mov cmpsl jne mull cmpsl ficom les shl incb add jae adc rorb xor xor loope sub rorb das scas sbb and push dec mov jbe sbb stos cmp add xor je add xchg pop ret pop inc xchg push dec xchg in js dec (bad) out lock loope pop loop dec adc mov xlat push popf inc out add idivb push add or mov jns stos mov push popa popa push outsb xchg xlat popf out gs jne imul outsl dec outsb push and imul jne idivl jle outsb es xchg (bad) into jne popa es pop gs out dec dec jns jae jp sahf out jb jno push imul data16 dec (bad) je fs jge test push jg xchg test inc mov mov iret pop outsl mov (bad) rcl mov and add aas and xchg aad (bad) rcll sub std and wrmsr sbb outsl stos xchg adc in out fnstsw mov mov mov pop fwait jp orl or (bad) lcall push and jg sbb mov rol cmc mov cmc (bad) mov testb push inc (bad) outsb mov and fisubrl sbb out mov xor leave stc (bad) hlt aaa push mov cmp dec dec inc inc sbb (bad) xor gs sub fcmovnu scas sub mov push (bad) and jl cmp mov pop iret js repz push (bad) push push repz dec inc cmp sub ds repz adc add loopne sahf out lock jns out sarb sahf movsb mov jns out mov jns out jo pusha pop sahf out sahf push dec inc cmp and lahf out sbb hlt fucomip repz repz les iret mov pop cmp repz cmp sbb jns cmpsl stc cld fsubrp fmul mov mov ficom inc push inc inc inc sahf out sahf inc inc dec dec dec dec jns out dec dec dec dec push out sahf out push push push push stos out sahf push push pop pop pop cmp mov jnp fidivl scas cmp jns jnp pop or repz or or repz repz or or repz add add add cmp repz add add repz repz or or repz or or or mov or sub sub lret (bad) fisub sub imul sub push pop xor mov test aaa ss xor test jne mov xor add and aaa ss and mov xchg pop xor aas xchg or insl sbb das xor dec dec dec outsb (bad) ss xor xor jae mov aaa repz repz jb mov jb jb push push push push jb jb push push push push jb jb dec dec dec dec jb jb dec dec dec dec jb jb inc inc inc inc jle jb inc inc inc mov test stos or aas loopne add xchg in push push dec push inc cmp push dec inc dec push inc mov iret iret dec inc dec inc dec inc push push nop dec outsb fwait mov mov mov sub (bad) sub jbe mov mov mov sub and ljmp or lret (bad) mov add sahf pusha ret inc push nop inc (bad) mov push sub pop pop cs push arpl xor push push jns add jb or and jg cmc or xlat jae inc (bad) xor jae xchg int3 fsubl add xchg repz out je push cmp push push jp sub ss outsb push push dec je jbe mov pop jb add sbb push (bad) or insb nop push add jae jns fisubrl das add mov repz dec out fdivrp push adc out ds add hlt in sti in out sahf cli sar sar jns out negl jns out hlt push repz mov xor and fucomip imul out mov in out sahf out in fs mov cmp add (bad) jmp je rorl out out jmp sahf out sahf push in jecxz loop jns out push loope loopne ljmp fidiv cmp je jg ficompl fstps (bad) push xlat cmp sarl (bad) enter repz aam push rorl repz push cmp repz and adc jns iret int3 cld call out sahf movsb leave cwtl enter sahf out jo pop lds sahf les sbb scas sarl push roll out iret repz loopne int3 mov iret jae push mov mov push push out lcall mov sahf out enter mov mov jo out mov mov les mov ret fadd jmp xchg mov les lret cld rol adc jo cmp fstps (bad) mov das push mov (bad) fnstsw into lahf dec mov (bad) pop mov mov out and fdivl mov std xor cmc clc (bad) int3 ficom popf ds mov lret fistp jbe in lret int3 xchg mov daa inc push dec (bad) popa mov iret in (bad) mov xor loopne and rcl mov rcr sti mov aad rol rorl mov mov push lock or in iret add movb mov xorb sub add add lods sbb imull rorb xchg fadds call push lock mov cltd sti inc add lret push mov daa enter inc mov outsl std adc mov aaa ljmp adc arpl lcall mov xor scas movsl pusha add addr16 fistpl rcl sub xor mov sub mov pop mov lea push (bad) xlat jecxz aas xchg pusha (bad) xchg dec (bad) mov data16 dec push inc mov mov jg andl mov sub into gs daa pop daa rcll insb mov incl and xchg pop pop fcomps lods push out aad in inc push loopne sbb pop wbinvd push xor lahf inc arpl stos cmp xor sbb (bad) ja lock cmpsl int3 stos mov cmpsb cld cmp jmp sarl and daa pop fwait scas pop les lret lock repnz out mov and aas inc push out add lods inc xor mov xchg rclb aas pop add notb daa fstpt push lock lret inc mov mov mov dec pop dec aaa xchg pusha adcl mov sub les popa out jg fbstp mov or mov mov enter mov (bad) push or mov in sti xchg sbb pop mov pop inc lahf addr16 loop rclb fisttp int adc jmp std mov xor stos roll aaa icebp inc sbb fdivrs enter (bad) lahf pop jo mov inc pop aas (bad) or and (bad) fwait mov mov push pusha out xchg add ja rolb push cmp loop cs and cs stos cmovl ret mov (bad) dec jmp lds idivb sarb pop mov cli leave cli loop in mov das (bad) mov aaa lret cs sub mov add repnz mul jle mov push mov sub adc add das pop xor jecxz aas xchg sub mov ret mov testl daa (bad) stos add rcrb xchg add xor iret jg imul imul imul cld rcl leave stos fildl pop out mov push shll mov ss loope jo outsb sar daa sahf mov outsb repz idivb sahf jo outsb add aaa mov mov sbb call inc mov fild and les push notl (bad) pop into add (bad) repz (bad) rcl rolb iret ret ret fwait push out sub vmwrite (bad) out std lds loope clc adc cmp rcl mov in and lock pop das add jbe cs call push les ror ss pop push lock adc ja jb jnp (bad) scas push insw je orb push inc push inc push dec inc add in push sbb xor xor add daa cmpsb (bad) aad push test pushf pop pop das and fisttpll fistl inc (bad) xor jg pusha push mov jbe stos jg dec scas push cmp push idivl and outsl add push mov ffree test in call gs rolb push dec stos fs ja jo jg jo addr16 jp sbb sub bound push fs sbb aad icebp cmp je testb xor cmp xchg cmp xor or bound xor ss pop jp mov xchg lcall lds aaa addr16 faddp mov xor jae add jl shr in xor add adc imul jbe sti add jl pop and sbb inc inc jo mov fcoms cs dec adc mov cmpl scas insl xchg or mov int3 push loopne push jne and int3 fs rolb gs sbb add lods out push and mulb add or hlt loop insl cltd imul outsb and sbbl mov cmp imul or repz fiaddl (bad) pop fnstsw adc in cmpsb xchg les cmp add popf idivl movsb jne pop outsb jg sub jbe push outsb orb cmp sub daa push pop sub jo lods mov fiadd outsl outsl ret aaa repnz adc (bad) arpl cli (bad) ss adc imul add pop loopne fs jnp sub fs inc bound mov in cmp push popl lods add dec jb lahf inc jbe (bad) xor imul lods add popf pop push movsl test icebp es jae mov pop push jmp add gs fs adc sahf loop imul (bad) sbb pusha mov ss lods loop lock addr16 mov jg adc fcmovnu mov daa aas jae mov xchg popa aaa jo lea jbe adc cmp mov data16 imul mov add ljmp add leave shl xor shrl mov outsb fs add or xchg inc rorl add inc gs rcl push pop xchg xchg push xor outsb int daa lock sbb fiadd stos enter (bad) adc cmpsl aas dec cmp fidivl ss sbb jle imul repz lods cmpsl pop loopne or insb inc mov cmpps insb ret (bad) aam ja je cmp xor jo mov mov cmp or mov jo dec lret stos pop lea push adc jbe mov add test rcr bound loopne ja inc jnp sub sarb outsl pop adc add loope cmp pushf push push ret inc sti xor lahf dec inc inc push outsb xchg or mov mov cs or aaa or sbb fs jne jg cwtl hlt nop cmp xor rorb mov mov scas push jle add fdivrl arpl mov cltd orl inc sub inc es mov fs push addr16 fdivs and cmpl out add scas test fsts dec push dec dec dec cmpsl fimull xchg or pop inc pop xchg data16 xlat lods xchg pop push cmp pop dec dec inc add push movq and lss add test pop or cmp mov and or cmp inc inc adc mov sub pop cmp inc incl arpl jb sahf adc add jecxz xor mov dec fist arpl mov cs bound inc inc inc and movsb and push sbb cmp xchg push pop cmpsb loopne xor push int3 addb (bad) or bound dec inc insl add dec sub pop (bad) push in or add jns shlb sub mov xor and adc popa fwait popf faddl mov rorb mov rorb and das stos inc or outsb ret lea push or pop inc mov inc dec sub pop stos lods sub jg mov test pop pop push inc mov leave and scas jae sbb ja dec pop rcrb out push push sbbl push in pop or in cmp mov popa sti pusha das sub jae mov push or inc mov xor add pop lret ror mov xor pop bound sti push movsb pop add sbb adc sahf cmpsl stc cmp clc add call jns int mov (bad) enter jnp int mov mov repz adc add inc into bswap iret push movsb orl lret leave ror mov (bad) push fisttp addb add decb jne jo jo sahf push and rolb add mov lock sub push or cmp mov incl fcomps rorb jnp cmp and movups in mov pop xor add cmpsl push lcall nop test mov fdivs in in in add jo lret pop mov push pusha pusha shlb pop push (bad) adc cs ljmp mov ja mov (bad) mov mov mov aas mov pop xlat iret leave stos fsts clc mov (bad) (bad) das repnz jg,pt fcomp cmp jp pop shrd mov or rcr (bad) loopne int3 gs outsb mov pop rol mov loopne or jg cmp rcr mov mov sbb ss mov inc outsl mov inc add xchg push jmp or in aas int outsl sub popa cmpsb pop out sbb and fidiv mov xor aaa repnz dec pushl xor mov cltd cli cld dec fucomi mov dec das dec fsubr jne lcall and sbb scas lahf pusha or dec rorb sarb (bad) fnstcw push mov bound outsl iret insb or push pop and xchg xor jb sbb dec pop dec and jne inc testb or shlb negl jb es (bad) or outsb inc push inc dec dec and add outsb arpl jo inc pop pop ds inc fbstp add xor addr16 into push popa data16 sub fimull je dec push mov decl imul jo dec mov inc js and in outsl mull in movb fidivrl and imul clc fs mov inc lahf (bad) sbb (bad) js imul or and out sub push cwtl aad inc sub (bad) ficomp rol insl pop mov xchg fucomi andl inc xor lds fs loope dec cmc xor pusha add orb xor arpl or push iret mov test inc aaa fidivl dec push xor les fistl xchg push pop je,pt lods arpl and cmp cmp mov out sub mov mov dec imul scas test sbbb out pusha cmp subb out shll (bad) xor imull pop sbb aas mov and aaa ror push pop (bad) arpl jbe push and pop jne pop dec cmp jae cmp inc ret push ficompl fiadd pop sbb adc cltd insl into xchg mulb cmc dec movsl add sub mov lahf or mov rorb insb adc inc orb and add aaa sub dec xchg cld insb outsl imul lret inc jg xchg add sbb jns inc jo add cmc popa dec adc idiv jmp outsb cmp insb out cmp lcall push xor sub pusha in dec jo ss push push mov and aaa push mov lock cmp lea mov mov adc dec pusha sbb or sbb push add rorl pop loop stc pop je pop jno ss and add mov mov fwait ss lea dec sub test mov sbb add das mov add add pusha pop adc pop (bad) sti pop inc out and cmp pop mov add (bad) (bad) repz mov cmpl or mov xor add sbb mov mov rcrl lds jns lods pop add outsb aas rorb rorl pop in out adc add imul pop iret and lahf sbb xor bound dec stos sbb add add (bad) jae add fildll jl mov inc push popa aas xchg iret dec cmc ja or popaw cmp push xchg adc xchg sbb insb adc add and inc ss cmp imul add cltd jae cs jp pop cmp mov mov dec mov adc and in add pop pop dec inc sub mov lock loopne das jno mov push adc mov mov xlat jge test xor loopne fadds das and gs fadds pop or outsl mov sbb mov push pop test sbb adc ror jmp in push clc xlat stos mov adc and lock call fs inc dec inc dec cmpl cmpsl mov mov push fadd pushf fs jns bound cmpsl sub bound imul xor cmp popl scas jmp push pop push push cmp and jbe mov dec sbb and (bad) test aad xchg fwait xchg inc inc jnp in xor lds push xor pop (bad) fisttp cmpl das push cmp add stos xchg inc inc and movsl dec cmpsl push and in and or das jne add jne xchg bound arpl dec xchg mov sbb add sub ret lret sub ja push shrb jnp aas lods add cmpsb jne jp mov lcall (bad) pop mov mov scas jnp add mov pop adc jp inc mov scas and and inc push jae add insb cwtl add sbb mov add mov push cmp push xchg popa mov fstpt rcl adc mov cld incl rol fidivl in xor or push lods es out add movsb push pop cwtl dec pusha xchg pop mov ja pop and cli mov in mov jmp adc (bad) lret mov jb add push adc inc inc pop stos test pop add fdivl pop adc push push push cs std ffree in sbb jp popa das xor xor sub mov adc cmp dec push dec inc and sub ja adc push and cmp inc arpl sub lea loopne pop and dec cmc stos cmp push push push das xor xor fldcw and popa dec imul jo cmp call cld mov dec dec dec dec dec dec dec dec xchg clc push dec sbb pop adc or xor cmp sub mov pop cmp cmp add mov pop add push cltd mov mov sub and mov push mov insl mov js popa cmp or addr16 das xchg outsb cmp push loopne and data16 popa pop js push pop sbb push adc clc fistpll inc dec push dec inc inc push pop and jo push mov dec outsl push and mov and add lret pop daa push jne adc int3 mov push inc in aad inc arpl dec dec rcrl sub add pop dec (bad) out (bad) cmp sub xor inc push push dec push and push in popa push dec scas ror mov icebp (bad) notl icebp test stos daa mov mov std aas iret in das loop (bad) shll xor int ret dec push test aam es ficompl cli test cmp mov cmp xchg xor out mov repz xor push jmp fistp xchg pop (bad) dec pop (bad) lods pop in pop das push imul lds pop fwait mov aas (bad) aas inc inc roll pop leave inc aas aas mov xchg push ds insl outsl (bad) jne dec pusha mov inc inc pop pop add fwait inc cmp pop aam nop pop das inc test pusha mov (bad) fcmovu add xor add (bad) jnp or int xor (bad) push xlat scas xchg je and pushl leave add (bad) (bad) aas mov add daa pusha cmpb push outsb fs or sub prefetcht2 jae aaa stos call pop mov arpl aas pop inc sti popl inc pop pop fiaddl push inc push inc jg push add aaa mov daa pop mov jg fldt add or inc (bad) sub pop dec inc inc dec dec bound inc adc imull sbb aad pop dec iret cmp cs cld push dec push inc inc xor cmp dec dec inc push dec inc outsl aas mov aad iret inc inc push inc fwait jno inc xor xchg xchg inc loopne outsb dec jg xor icebp add push pop fdivs and cmp xchg lea test and stos inc pusha xor push ret lcall adc add mov arpl and lods push aas (bad) pusha or mov pop stos mov popl jnp cmp sbb push inc insl aas mov insb add cwtl push fistp xor xchg inc adc add in mov pusha rcl idivl ja scas or mov insl add mov scas jno loope dec xchg es mov mov jo outsl daa cmp lds inc outsl mov aas insl jne push jae mov mov or loopne push aas mov add add push mov sub ds (bad) and fldl sysenter pop insl pop xchg mov pop mov pop or mov clc jne or xchg dec and add add and or ds push add imul popf fsubl or in (bad) sub or fwait mov push adc and leave leave in xor addr16 das push xorps cmp jae insl push and jb cs orl mov xchg sub in in sahf mov in (bad) mov into aas xlat sbb movsb and push or test (bad) test pop cmp pop jg pop test add jg sbb es mov in call in fcom enter iret mov cwtl xchg jns out nop mov sahf out js jo out in sahf fs push dec inc push cmp repz and adc sahf out add mov xchg clc (bad) out add das add in enter jns and (bad) pop scas jl lahf loopne inc jle test shll das mov mov popf pop rcrb mov sbb out ja stc in call adc push (bad) cmpsl in pop fidivrl xor fcomp loopne jb cmpsl repz jle shrb sbb add lea cs nop xchg mov xchg dec xchg xchg xchg adc push je scas or inc adc int3 movsl dec mov push or jns or and hlt movsb cmp repz rclb movsb sbb cmp rep sbb out lcall js out sahf pushf jns jp cld mov out js push mov push (bad) decl xlat mov or out ret ss or sbb xchg std aas inc add scas add lcall push inc jno inc xor or pushl xor xlat or repz sbb cmp sbb cmp repz andb push repz repz push cmp adc push push dec cmp repz dec and cmp repz xor sub repz sbb sbb adc iret repz or add jns cmpsl stc cld cmpsb and and add pushf out lock adcl movsl popa fsub xor adc xor js adc add or ljmp mov call (bad) mov lds xchg lret (bad) jg xor iret repz fnop out lcall adc out sahf out dec pop outsb jle out sahf sahf mov cmp sarl and popa repz xrelease ds out add out sahf ds push (bad) out scas into loop push xor xor jb repz xchg in mov movb add and push aas mov test mov addb loopne daa pop add repnz dec pop xchg and pop and xchg sbb xchg adc and (bad) xor add fisubl add xor dec pop enter andl adc ss or and imul inc jno inc cmpsb inc sub push hlt stos in sahf out sahf mov test dec cmp out and cld stos lock cmp repz mov xchg xchg idivl test cmp sbb ja or push enter mov out mov inc and lahf out sub test sub push pop cmp xrelease push pop ja mov lcall das dec je cli out and sub push je flds push push cmpsl lcall and fs inc jmp lcall out ss inc add cld xor xchg inc add sbbl iret repz mov mov pop enter inc enter pushf or ret mov adc repnz adcb sbb leave sbb xor in int3 into sbb rorl and sahf mov sub inc rcrb and in mov jmp inc jno xlat xchg inc push add inc stc mov adc (bad) pushl cmpsb iret decl js inc outsl (bad) loopne jmp xchg test mov cmp (bad) (bad) decl inc mov popf sti jmp stos push inc mov repnz test (bad) (bad) (bad) call stos clc scas adc (bad) inc jmp aam imul loope jp iret inc gs (bad) xchg push cmpsb scas mov (bad) jmp or addl cmpsl xchg cmp xor dec cmpsl in cmp lcall mov cmpsb lock mov popa sar mov (bad) jmp bound stos xchg clc repz mov subb fwait xchg and add (bad) cli add int3 (bad) mov aas jno or mov pop fs dec lea aas (bad) (bad) (bad) inc shrl mov icebp aas rorb and cmpsl out aas inc cmpsb mov insb scas add pushl xchg aas xor aad mov std std into popa test ja stos in das dec pop loope (bad) (bad) decl mov aas xchg les jne int mov addr16 push mov xchg aas (bad) (bad) (bad) jmp (bad) loop mov jp popa push pop sarl jl mov das lea mov (bad) in adc movsl jmp jg sub jge mov inc rcr push arpl (bad) (bad) incl int3 and call cmp jp and cmp mov cmp push mov cmp mov sbb add movb pop mov jne fldt cmp jno shlb (bad) out dec nop pop cmp fisubl (bad) (bad) pushl adc mov sub dec in ss push scas into imul fdivrp (bad) (bad) inc jge call mov xchg cmp push andl dec dec gs std orl xlat lret clc mov ror add cmpsb fmuls add or adc dec or xchg dec es add loopne pop add dec adc (bad) fdivr cmp sti mov cltd pop dec add fwait dec add dec je popf dec add dec bound xor push push adc jbe push and ljmp push add loopne xchg push sub sbb fs adc js add jns add cmp mov jnp jl add jge add in adc add jg jl jno mov xorb sub js jp cmp mov or or (bad) hlt xchg push jno stc out lea cld ja push add add add jb push jbe test shrl push adc fild ss push notb (bad) imul dec mov cltd jo mov pop add pop jo andl sbb push sbb popa (bad) ja push (bad) xor mov icebp dec jecxz inc and inc push and inc pusha popa loope mov push pop clc push aaa and add jg ret add cmp daa and gs and pusha jmp (bad) jl jp adc pop sbbb sub add sub jno lods cs cmpsb pusha cld enter add xor dec or jg mov insl add sub cmp divb or cs mov arpl ja and push inc push imul cmp push sub sarl pushf inc sbb dec jo sub inc push sbb pop xor test test jo xchg or add test dec cmp lea test dec xor gs ss cmp push je dec xor pop sbb lea cltd push xor and xor decl add test xchg mov pop jle loopne adc mov mov mov cmp add sub inc test add subl inc add fs add nop push add add xorl and adc inc push add add add jg or add add dec mov out std mov inc and inc add dec cmp mov dec inc add or push insb jne pop popa inc sub popa data16 es roll jnp rorb and dec insl insl mov pop adc xor jg dec pop push inc push dec push push inc or jle cmp push push inc inc dec cmp fstpt push push dec push inc push pop inc dec imul into push sub pop call sub jl and push inc push inc sarb or push sub and fistp push xor sbb inc dec inc push inc inc inc and and movsl gs jo mov in or (bad) fdivl cmp imul popa lahf mov inc insb arpl insl insb ret xchg and add or xor shrl xchg or push and mov test add xor fnsave jb nop xchg movsl add out xor nopl aas enter iret repz je push data16 mov rolb outsb repnz jo add std int repz clc lock aas mov sbb fdivl mov cld ret das and divl (bad) adc sbb jl insb out dec mov nopl cmp rep das add add nopl xor repz push mov stos mov pop add iret repz incl addb or cmpsb mov cmp xor add add jns insb pusha add imul in add aas jmp sarb pop add pop js adc jg mov xchg (bad) cmp movsl stc xor loopne rclb sbbb outsb and shrb push nop cmpsb cwtl and sbb xor incb pop cmp (bad) xor add push dec push jl fwait lahf (bad) rcrb pop add add int movsb fchs aas lock add fisubl dec clc sar ret cmp cs (bad) iret inc ja repnz cmp insb mov add test push leave dec test jnp sbbl fs rcrb subl jp pushf mov nop jl sti xor xor pop js xchg sbb mov pop and fldenv sub add mov movl pusha adcl adc add and pop movsb incl and jb or (bad) fsubs and mov fldl (bad) cld jb fdivr jnp sbb sbb mov add (bad) mov mov sbb mov in leave jo cmpb addr16 outsb push jg pop or jg js leave or or jg mov sbb dec mov pop lds pop pop pop pop popf jnp in js nop lea jle movd (bad) fisttpl fldl wrmsr or smsw and aaa cwtl or faddl lcall pusha or lock push add (bad) in out fsubrl xchg (bad) daa adc xor clc jbe mov pop mov mov mov mov outsb push leave mov out jnp (bad) jnp xchg (bad) lahf daa out jmp fsubl js aas daa (bad) daa mov adc xchg push les jns xor sub popa xchg mov add js or inc push xchg xchg ja (bad) mov push pop (bad) aaa adc push jns add add ja sub sbb pop scas jnp pop cmp pop add pop pop in push sbb js lret xchg add int mulb vmwrite das push mov mov test pop stos mov sahf mov adc insb push adc inc adc (bad) xchg pop pop add mov pop mov adc inc stos add sub in cmovbe jl mov pop add in clc sbb dec mov js jp icebp notb pusha xchg pop sub inc pop in pop testl mov inc sbb imul addb xchg or minps mov add or fistp or or js jo or xchg lock add (bad) jg fisttpll jbe (bad) mov pop fadds add lcall or andl ret pop aas ret mov insl inc aaa stos add jmp or adc sbb mov imul or (bad) fwait scas mov push pop xchg sub subl ja js pop mov jmp mov or or and (bad) fdivl idiv inc jp jp dec cmpsb mov sbb dec scas xchg add clc (bad) pop arpl inc pop inc pop xor aam jnp or stc cmp ja or xchg xchg inc mov sbb mov or rcr or mov or insl mov loopne or cld decl mov mov pop sahf or sbb xchg add add ret out push nop (bad) enter push nop cmp add mov push loop dec subl xchg jo,pt push pop test or xor or sbb out ror sub push pop pmaxub repnz incl pop cmovns add add daa or add jae mov fs add push jnp or sbb add lfs dec add or sub adc dec or pop lahf out aas or jbe,pn fstl mov subb mov (bad) incl daa (bad) pusha and sbb sahf daa cmpsb es or mov daa push cmp out in pop loopne sbb lock (bad) adc xchg (bad) jb les (bad) iret addb add add mov sbb mov int3 mov cmp add mov sub push shr dec mov outsl ja jo push jnp (bad) into xchg mulb add pop sti dec pop or pop ja mov xor popf hlt mov pop lcall add test and pop push jo sti lea sbb mov addb das movsl fisttpll addb rorb test clc aas mov scas push rclb xor or js popl (bad) out fwait stc push xchg out pusha dec movq nopl dec xor jge sahf dec sahf stos pop add nopl mov adc inc add imul and adc enter nop inc add sub add aas add adc add mov pop or inc xor cltd daa or add lret insb add frstor int3 and scas repnz jo push dec ds mov add outsb pop push out nop cld jns or dec xchg and sub pop dec or jns push jne or or inc jo,pt out outsl pop arpl lods cld mov mov push orb push out pop dec mov ret or dec inc cli fs lcall push jo out push or push dec push bound mov sbb das xchg jl jl je jb or mov jae sarb xchg subb sub nop cmp movlps outsb and sti insl mov add jae fcoms fs mov add inc neg out dec or add or mov in cmp insb jmp xchg pop xchg (bad) ss repz fadd add pop push dec push push inc pop add add js jo add dec (bad) mov addl sbb aam ss addb out mov sbb aaa cs mov or out mov fist add mov add (bad) test add loop add fisubl adc lods sub sub lret dec gs pushf pop pop push bound fidiv (bad) add push push mov xor pop gs dec in jb pop add dec xchg out cmp xchg inc add jbe cltd jecxz pop pop rclb cmpsl fcoml push stc in (bad) push mov push inc jmp aaa or push jno add (bad) pop add (bad) sub xor out outsb (bad) jmp mov dec fs sbb mov sbb xchg add sarb add jg xchg cmpsb jecxz and sar add mov shrb movl jle adc outsb js mov xchg push decl dec sub adc push cld add or cmpsl mov adc out add xchg add or rorl add ss bound sarl dec (bad) stos loopne iret aas add aaa add insb adc xor xchg push or add pop (bad) pushl bound mov pop fisttpll sub cs or and pop cmp cmp and outsb mov inc jo dec aas testb cmc into test add xlat push rolb adc lock pop jb into inc dec iret xor gs dec cmp dec add cmpl adc add aaa fwait mov xor jbe sub dec xchg jne,pt mov xchg dec dec lret jae cmpsl add (bad) jae adc rorl xor mov fmul add ds inc add jae and push pop (bad) jo jnp in or jbe pop and dec cs or pop leave in ljmp mov out repnz mov add in in imul mov dec data16 pop test mov inc sahf (bad) jbe jg cmovne add cltd lcall mov aas inc mov add in dec add (bad) pop test push pop mov pop add popa ljmp mov pop movsl cmpsb das sbb in push pop out jle push push aam das in popa in xlat repnz cs pop and scas testl lret mov add hlt push dec out xchg add outsl inc xlat dec aas inc pop jbe mov inc loope xor or xlat in mov pop repz int3 xchg add xlat push insb enter inc push pop push repnz push dec mov in imul cmp mov mov inc neg cmpsl mov xchg scas movsb call add and sarb enter sarl addr16 push sub cs int3 push and incb fisttp add push cmp add sub cmpsb idiv dec jo inc repnz cmp roll xchg add inc sti add inc (bad) stos add jne add cmp jmp in and add xchg cltd (bad) pop loope xor iret xchg stos iret add mov negl pop (bad) test int or pop into and inc push push sbb repnz bound add add clc fisttp pushw push (bad) loopne or insl mov mov mov xor push lods sub dec sahf lahf or ja stc add pop mov jns xchg add add pop sbb sub mov add (bad) pop adc pop add fiaddl bnd data16 bound cmp adc jno daa fiadd pop and jle daa lahf push inc repz add adc pop test fwait inc (bad) dec addr16 jnp inc mov insl packsswb push roll das or (bad) mov jg repz push add mov sub (bad) push orb push sbb lcall mov or jae push sub xchg push es lock outsl call mov or sahf aaa enter movl and (bad) push add xchg sbb les add mov add cli pop dec xchg jnp mov insb push inc or mov push jb lahf outsl lock xchg or dec mov pop dec sub mov cmp cmp xchg inc aas sbb xchg pop xchg sub (bad) cs test dec (bad) or or cli hlt mov (bad) fisttpl aad xor mov pop or mov or popa mov adc pop jb sub lock imul test inc cmp pop inc scas insl cmp les js dec push xchg fs pop mov inc lock jg cltd dec (bad) xor ljmp and icebp cmpsl cmp mov dec repz xor or dec aaa or test pop data16 sub sub loopne pop push loopne aas dec sub push ret fsubrs ficom nop xchg iret test add call mov xchg pop or push sbb add or out clc mov push bound sti jl jle das add jbe fs dec add lds sbb outsb push aad insb xor push test push in ror mov push sahf xchg mov xchg in dec in roll out mov pop sahf dec gs fildl or push outsb pop pop sbb inc imul mov sbb dec pop jge xor cmp push sub xor movsb xor ficompl jp dec jp cmpsl xor jp pop daa pop (bad) inc scas cs mov pop das push (bad) aas (bad) cli pusha out pop aaa ja mov nop xchg push add jp pop and ftst dec aas repnz or push (bad) pop outsb jecxz das adc push (bad) push push call cwtl push stos or fs jbe adc clc jbe push aaa mov adc push xor incl (bad) fwait in push (bad) pop jp or pop dec fildl sbb shlb pop xchg (bad) adc push push bound std nop mov add xchg xor mov and fimul movsl arpl xor (bad) insl mov xchg (bad) fisubl pop pop cmp cmp out cmpsb subb (bad) repz mov addr16 ja pop shll inc je (bad) mov and inc sbb and pop insl or imul test fxtract xchg xchg imul pop cltd repnz prefetchw pop mov sub mov jnp or mov xchg add scas stos xor and or das push insb jle adc gs addr16 add mulb in push fstpt push jae lea pop das fnstenv mov outsb cwtl mov cmp push xor outsl addr16 xchg mov and out lea pop mov es sub inc and js jbe sbb jp fsubp outsb xchg pop pop (bad) xor mov mov fwait mov or push push (bad) xchg push fwait jmp pop pop cltd push pushf insl es or ljmp or jg neg cmp push pop jne pop mov or arpl movsb scas inc imul lahf push xchg or jns daa mov sbb shlb mov dec or mov scas nop mov das xchg arpl or add add pop pop inc mov cmp and dec push push ja cmpsl push jb scas add add sub push pop addr16 test addr16 pop das outsl lret stos push add das and xor xor outsb out cs sti jbe mov fucomi (bad) push xor (bad) fnstsw add pop and inc pinsrw push jb push push pop xor mov lret lock cmp aas ror out adc sbb and cli pop cmp xor jl mov cmp insb pusha or pop insb js pop add das xor bound pop (bad) seto out xchg stos dec fisttpll add cmp lea adc mov out jp out inc mov inc scas and fiadd mov ss or push repnz cmp adc and fs ds sbb adc xor cmp mull mov or xchg and pop (bad) jbe jmp add jge mov xchg inc or xor sbbl ljmp mov adc or push ret fcmovb enter adc sub mov (bad) add je dec cmp mov push nop xchg mov adcb (bad) fadd xchg stos and cmp or (bad) push inc sub sub out fcomi pop inc jns push outsl fs push movsb mov test push pop aaa dec jne mov aam das push add adc xchg dec xchg sub into xor push cmp int pop mov xor inc inc push dec cmp lret push insb jns mov scas jb insl jo adc jo outsb rcrl pop adc (bad) popa insb sbb push push jns inc mov mov pop and jno mov inc outsl jbe fimull inc fs and mov push adc sbb or inc icebp cmpl push insb popa addr16 fidivrl ret loopne andl lahf pop jne mov push gs out push add inc jl ror mov mov inc into sub imul je insl dec popa inc daa inc fs jmp pop mov addr16 add insb gs dec aad (bad) outsw push outsb mov pop dec adc jne adc sub adc roll imul push arpl xor xchg movsl test xor dec push cmpl popa jo mov js cmp sbb inc int3 inc rcrl pop les add jbe sub pusha mov out jge mov adc xor aam inc mov mov lock dec fstpl dec outsl int3 nop mov jnp add sbb leave fwait gs jo inc popa sbb movsl sbb ss fstps push movsb jmp dec lock js aas xchg mov push and adc loopne mov xor insb jp mov inc shll push insl inc mov cmp inc push loopne jbe sub arpl mov sub cs insb push pop add in je jg fistpl ss xchg sbb test and popfw push mov or ss aad insl inc mov sub insb jo mov jno aaa jmp lods pop lret insl cmp cmp or shll mov ja push (bad) fs addr16 fcom mov inc jbe,pn or mov mov les mov sub fmuls dec mov out bound sti inc cmp lea jb inc mov dec pop pop jbe pop fwait loopne push cmp push xchg mov jne arpl inc sarl dec mov mov dec sbb ror loopne jo sti je ja scas add mov jae arpl adc (bad) pop pusha cwtl mov fs and rcrb xchg xlat inc enter xor mov push ret das and mov or insl add imul sbb popa (bad) jmp notl lahf bound sbb out jge adc dec cmc sbb (bad) ss adc inc sbb inc mov movsb ja negl or pop mov (bad) jbe in jp pop push xlat inc (bad) fidiv std aad inc fs add insl adcb aad js or jns sbb inc fsubs insl pop aas inc mov xor inc cmp pop popf pop bndldx mov lcall repz adc ret push outsl fs push pop mov lahf mov add push sub jns sub popa in pop in mov scas push dec add xchg bound pop cltd add lods push adc sbb (bad) jb lock imul insb pop lcall adc inc notl roll pop rclb mov push push pop fs cmp loopne pop insb scas (bad) je sbb and fdivrl add inc outsb adc push dec jb cmp pop and mov fcompl inc imul leave movsb and xor cmc mulb insb aad inc cmpsb outsb mov pop ficom or pop mov jns xchg xchg xchg and fsub outsl popa dec xchg loopne mov sbb xor pop mov push dec repz outsl out scas pop leave inc outsl js bound mov test sbb arpl push cmp (bad) xlat sbb in xor bound lods add sahf jbe inc mov dec push push dec inc dec lock cmp in jae insb push inc fild inc sub es add fmull adc mov and dec adc nop jae or ret and gs inc adc test cs mov sbb data16 push and dec push (bad) jmp cmc sbb rcrl adc xchg arpl mov pop test adc inc inc lret rcl xchg and push lds sbb adc sbb push cmova scas out dec add jb (bad) cmpsl dec fabs imul pop aad outsb dec mov lret lods flds int3 ret mov cmpsl xor outsb popa stos xor jae mov test test sub push jo push or call push dec (bad) jo lods dec fmul mov daa push inc add pop xor dec arpl into js dec inc mov cmpsb push sbb jb adc mov cs cltd inc andl sbb lock call push ret movsb stos push dec push fxch xchg adc dec inc lret xchg inc stos or pop mov aad jbe sbb mov lods stos movsl mov inc jae adcl mov popa adcb das or les cltd test aad push and push loopne popf ret (bad) ja inc jae sbb ss sub mov arpl mov cltd push push cmc mov cli (bad) mov rclb inc and adc xchg ds xor (bad) popa xchg sbb fcompl outsl insl gs push nop lea adc inc loopne sbb pop (bad) push stos cmpl mov sbb mov pop sub cmpsl adc xor push jae push cwtl add sub xchg inc xchg mov rorl arpl sarl bound xor addr16 fnstenv jne mov sbb add and push pop sbb xor lock sbb sub rcrl fisttpll inc pop test or popf cmp mov pop (bad) pop add cmp pop dec or imul jae loope mov push loop adc insl sub ja test ret lcall (bad) jne fist inc lods inc das les adc (bad) push cmc ficoml pop out movsl loopne sub rclb and or inc loopne dec mov xchg mov in push jp push cmpsl push mov add pop cmp bound cmc jne clc lret sub sbb add jno adc xor scas imul jbe mov sbb loope add and mov lods dec xchg or mov mov or enter jg test add loope,pt add bound fs mov test sbb in add inc inc lcall add movl or test bound dec and out jae push inc jo fs shrb fisubrl rorb mov cmp nop je mov xchg das bound or dec inc (bad) lret lret ja xor insb mov adc sbb mov cwtl flds adc sbb jg movsb cmpsb inc push cmp jnp push cmp imul test imul or xchg test xor (bad) mov sub out push adc jo mov inc mov xchg lods pushf inc push mov adc dec repnz add adc sub mov scas fist inc inc sub xor dec sbb scas sub xor jg lret aam jo or cmp and aaa sub fistpll gs inc pop ffree xlat and bound push and fdivl jno jp (bad) ficom das sbb xor fsts movsb or mov pop out mov out and and pop lea mov daa mov sbb mov pop mov ret insl imul push divb xchg dec pop daa jae int3 jo sub xchg sub mov bnd out popf sbb ja cs sbb push sub inc popa inc sbb lods sbb aaa adc push pop gs subl cmp pop jge mov movsl insl andl ret lret aaa call or mov cltd mov in repnz inc jb clc jmp add xor adc adc xor (bad) xor add decl arpl add add jne or push inc cmc faddp movb sarb data16 dec test outsl movhps and lcall outsl add and sub nop push add add dec mov and add je push jae fwait loopne mov add jne jb,pn ljmp testl mov js cmp or cmovg jo shrb jae arpl out (bad) fidivl lahf push and mov test incl add add dec add call or pop inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 