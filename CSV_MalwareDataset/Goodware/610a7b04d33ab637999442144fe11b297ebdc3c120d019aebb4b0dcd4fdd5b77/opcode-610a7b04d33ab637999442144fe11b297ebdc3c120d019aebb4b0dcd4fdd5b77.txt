push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 mov pop fs jb xlat sbb push sub jae add std testb lahf fs es lods shlb mov nop sahf jae ret cvttps2pi clc and negb lea stc xor dec jge mov nop or mov jbe lods and andl jo inc dec or loop adcl fwait inc add mov mov test (bad) mov lea jns test ror cmc addr16 in sub in (bad) or adc jg add pop test jnp adc aas ds mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cwtl mov enter nop sub push jns mov or ljmp sbb add sub test js and xlat mov int imul inc push (bad) jae scas and mov call jnp fildll mov mov xor mov pop xchg sub inc sbb xchg mov pop fiaddl mov in mov mov sti imul cmc lahf scas outsl cmp cli inc pop ja cmp and fisttpll dec sbb mov or cmp jl push fbld xlat ror xchg pushf lahf es fldt adc pushl push inc and jmp mov into dec shlb mov jp mov ljmp scas mov and dec inc (bad) jecxz mov pop mov addr16 pusha movsb test call xchg enter dec xor mov stos mov fimull push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 mov cwtl or enter nop sub push jns mov or out inc cmp je xchg lcall int mov in pop xor dec (bad) xor xchg pusha daa pop shll dec push (bad) pop lahf and subl lret cmp arpl imul pop stos sarl in lret inc lea sub leave push out sub mov call dec adcl lahf add stc sarb clc loope ja pop nop cmpsb jp add dec jns mov in sbb jg movl or xlat fcoms loopne jl dec stos push sbb out pop in jnp mov cmp sub ficoml and add xchg test push and add mov nop add cltd pop pop lds pop cmp inc adc adc (bad) jmp jmp (bad) xchg pop cmpsb fist push lahf cli aam push subl sbb inc inc (bad) jnp hlt out rcll lods sarl rcll inc fstpt stc xor jl loop nop pop jle xor std xlat nop hlt add popf and sub mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov iret imul insb jp das (bad) out dec adc add es inc mov in movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl insl fcmovne mov add loop out ss and in adc adc es dec pop cmp orb outsl addr16 or jo js,pn scas addr16 pop jle cmp sbb cwtl mov mov mov mov rcrl cltd xor and add jp mov cmp aaa cmpsl xor mov and out movsb icebp insb sub notb mov add call push sahf ss sub (bad) xchg popf jb or or and insl mov cmp sbb repz dec call movsl adc xor ljmp cmpsl js in and dec dec push dec and in add and mov rolb pop or (bad) dec sbb xchg xor inc mov pop sti es adc jecxz,pn sbb xlat lea das pusha mov dec mov out mov jmp dec insb dec mov leave in fstpt dec inc adc mov mov adc mov fist sbb in xor xor ss rcrb push inc loopne movsl jp sarb mov popa sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp jb rcrl push imul pop add sub leave ja aas and imul lods aad or gs (bad) jmp sbb or in push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov arpl mov cmc add arpl in add sub cmp xchg mov cmp sub sbb mov push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jl jne jb rcrl push imul pop cmc stos sub inc ss ja sub lret clc popa push out popa pop and cmp mov out mov mov leave pop js jbe xchg mov xor test cld cmpsb ret lea pop mov stc cmp lods or mov jmp addr16 cmpsb push sti mull and mov add adc jno cli loopne jne cmp inc adc inc cmc rcrb scas xchg jbe xor add pop push jecxz scas enter push loop aas jge in pusha jne jbe xor mov jecxz xor or stos pop fmull outsb inc cmpsb in and xchg rcrl mov popa bound xor cmp inc xchg add out das push lret xlat mov test nop aaa add cltd mov (bad) mov fnstsw lret fmul fwait ja out xor push test fisttpll fnstenv cmp dec lret jge and and or mov insl das jns not sbb mov cmp cmp fnsave clc mov std in push cld pop inc mov enter dec les xlat cmpsl mov push push cmp cli sub adc cmc imul es adc xchg pop push sbb jmp dec in sbb xchg ret jnp cmp mov loope dec sar mov addr16 add mov nop int3 aaa ret jb mov fist push ficompl pop dec mov mov pop inc rcl aaa jp shlb fsubl mov mov add pushf out loopne adc cmp push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov pop push cmp cmp in push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret mov mov push pop shlb jo xor cmp sahf hlt cld (bad) xlat pop bnd in aam jg std push and cwtl xchg xchg mov xor mov push push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret mov repnz loop out inc push scas ss cmp lret shlb jge inc cmp or stos pop pop pop fadd pop mov jae push mov mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc inc mov es cs nop sub push jns mov or out inc ret aam adc fs mov cli adc call xor outsl mov xchg mov mov pop push jge mov jnp insb clc ljmp stos sbb gs test adc sub dec pusha push inc mov test std scas mov imul lock sbbl fcompl negb jae mov adc aad lea mov les in push adc sub dec pop xchg daa xchg jl (bad) mov dec das movsl jbe xor insl cmp lods in out add jbe or icebp sbb add jecxz cwtl cmp dec pop jns leave add and push xchg aam sar in popa es push out fs fstl loope lock out sub and dec adc ret scas setge loopne pop xor sub int sub add or (bad) cli pop inc ss shrl stc pop cmpsb push test (bad) jl loope sbb cwtl mov xor add pop (bad) pop jle movsl hlt lret mov insl fldenv cmp lret int3 adc cmpsb mov into inc jno push mov (bad) repnz jg push mov dec jmp incb sbb (bad) xor dec add push (bad) mov jns mov into sahf jl mov movsb test dec out and sub inc bound adc arpl fs xchg cmp je push dec mov jmp push push cmpl and dec call pop arpl (bad) aad fcompl loop test inc push xor leave mov pop dec add or out or inc add sub sbb xchg arpl and push sub repnz and enter ljmp lret repnz int3 dec rolb and mov dec cld loope dec xchg negb xor jno mov mov mov jns mov jns add add add mov dec lret push sub jnp jns (bad) jnp dec cmp jecxz dec add sahf mov fstpt stos jnp push inc scas mov mov cmp xchg mov push enter sub xchg pop and add and stos ja das jo jae jle add and loopne and jl aad add (bad) loopne mov mov ss pusha repz sarb (bad) xorl dec (bad) dec ds or sub data16 xchg mov xlat mov insl (bad) ja jmp dec setp iret xchg loop outsb mov hlt pushf pop les in inc fldl and sbb mov cmp loop pop ds jne jns stc mov jae (bad) int3 sbb or sbb mov xor loope dec loop push in test movsb movsb jecxz mov cmpsb les leave jnp sbb dec push sahf xor jg dec addr16 or add iret repnz aam adc gs cltd aam inc clc push xlat or repz add call fidiv lret es adcl jmp (bad) xor lahf into xor leave mov lahf es mov inc imul inc (bad) bound fwait (bad) adc xchg loope mov leave loop loopne mov dec xchg push in dec dec in and xchg mov aad xchg jl mov xchg fstl pop cmc fdivrp (bad) sti add pop imul add or cmpsb jne sarb jo (bad) lret repz mov dec and cmc xchg addr16 mov (bad) loop mov mov adc test or bound mov je and jmp xchg mov inc imul mov movsb lcall xor movsb inc mov jge sarb ret pop into mov frstor add inc and cmp dec cwtl sub inc outsl mov xor fwait jbe fcomip cmpsb xchg fcmovu jmp inc adc xorb mov (bad) repz xchg ljmp xor pop cs cmc add (bad) sbb xchg pop insl lcall aad repz lods push mov mov push add lret dec popaw or xor sbb jp xchg stos in push subl adc jns mov or sub pop xchg ret fistpl and imul mov das aas mov mov insb je sub cmp pop es test xchg add clc sub pop aam mov imul leave jo push jnp mov cs cmc sbbb sub mov out mov (bad) sbb xchg sub fwait inc and and mov loop mov or insb pop push cmp xchg sbb jbe cltd loopne jp jp add mov sarl dec in xchg push cld aad repnz push xchg mov emms adc cwtl sbb xchg or mov add mov sbb sti mov push sahf jl cmp in mov fs insl push pop cmp cmc movsl push sahf insb stos mov mov sbb outsb jp add xor (bad) (bad) lahf xchg pusha test cltd pop loope cmc mov arpl sub ficomp push lds jnp lods and cmp stos rol jge xor xchg xchg sahf mov dec popl ret sbb loopne in into aad (bad) ja jge repz test in inc mov or into lods dec pop iret stos negl mov daa cld ret pop lea in rcl ljmp or jae and push xchg jbe data16 int aas or pushf sub sti pop ficoml push pop add xchg dec push sti call mov sbb lahf lret stos scas jecxz inc ficoml add mov iret out mov imul or pop cld xor sub xchg das lock (bad) mov push mov mov mov or insb pop sub rcrb rorb mov hlt les jg out pop cs push xchg sub fsubrs and push jns mov push sbb inc dec mov (bad) loopne fldl and xchg push push dec sub inc shrl xor pusha sar jmp lea js jecxz mov push cltd xchg icebp daa repnz xchg mov inc dec or outsl js xchg rcrl std mov sub pop push lods pop or jle and xor addr16 inc imul jl daa mov je outsb dec rorb sub movsb jge mov ja (bad) lret mov (bad) out inc mov inc pop daa push clc and clc adcl popa xor daa loope,pn xlat push inc mov loopne sub mov out sbb popa imul pop es sub xor add push outsb mov icebp (bad) push test mov jl xor sub imul js add xor push xchg sti add and pop sub (bad) mov mov nop ss std xchg or xor scas dec out and and pop outsl out mov pop sub cmp cltd inc faddl or xor and xchg (bad) loop addl jbe xor adc push push je imul xor iret and ja mov inc setl stc icebp mov and pop or cmpsl dec push xchg jo roll decb push xchg jl push cs sbb test pusha mov insl dec jbe inc xor push rcrl push mov sub sub arpl fwait mov xor fwait ljmp imul cmpsb idivb sub fiaddl pop pop iret aaa ret jl sbb add repz (bad) sub cmpsb ljmp or lahf xor dec dec xor stos mov fcoml icebp loopne js outsl add lock mov sub xchg sub fcmovne (bad) dec lods rcl loopne repnz jae aas push js pop cmpsl inc stos imul sub push mov xchg dec bnd dec daa add or pop aas xchg adc dec jl adc stc mov (bad) dec xor jge aas das aam repnz sub and xchg pop jns mov push pop mov fsubrs cmpl mov rcrb adc jo jmp xor lods scas rorb inc aaa sbb out mov pop iret mov jmp or aad sub leave outsl fwait mov mov mov xchg or es sbb mov xchg mov in adc mov cmpsb int3 lock leave xchg lret int3 pusha adc lcall cli pop cs mov jg add mov les subps mov pop fucom ret adc daa out lds stc (bad) push out test loopne pop fildll mov cmpsl push inc js mov aas (bad) push out push pop add jns leave dec cmpsb repnz push loop std push adc loop cmc fcoml jo clc dec pop popa sahf lds add shlb test lret sbb inc jno adc adc xchg popf cli icebp les push aaa jmp stos in or (bad) pop lahf test sbb sbb cli cmc out out loop in inc int fsqrt insb in mov stos dec sbb pushf mov lret sbb inc dec into das call jmp adc xor xchg les test popf scas cmp xor push inc mov insl repnz int ja cmp loop mov cwtl or xor pop jne loop pushf inc fsub cltd stc cmp inc or cmpsl mov iret std sub into call add xchg pop and and loopne stos lock or cmp mov push (bad) sub xor and xchg inc xchg pop push lcall xchg pop push mov cmp in or rcrl (bad) jmp pop xor add sahf pop pop (bad) int cmp xchg dec sti (bad) xchg xor sub pop mov and adc cmp xor aad xchg jno,pn mov fstpl movsb cltd leave inc arpl mull adc inc push (bad) mov movsl ret push orl mov test mov xchg ret in add xchg xlat imul mov sub clc (bad) mov popf sbb dec or ret jne push (bad) into daa aad jle mov push (bad) mov pop push pop std cli xchg rcrl aam dec and subw pop sbb cwtl icebp jnp sbb ds mov inc dec dec enter jecxz dec lcall fmuls jecxz mov cmp dec les push jg inc out rcll push insl xchg push or dec dec push and out adc xchg mov into inc fisubrl push push fisttp pushf fadds cwtl mov cmp and negb xor in aam lret and add ljmp std dec popf stos pop loope orl add aad inc pmulhuw or leave push or and out stc add in push (bad) aad cmp insb sbb icebp pop inc cwtl adc shrb jb aam push pusha std push mov sub mov jmp hlt shl cmpsl mov push and dec jmp icebp ret dec mov pop fstp push (bad) lods pop imul xor aam leave and mov add fadds lods xchg shrl into imul out dec push movsb push xchg dec pusha scas lods sbb ficomp xchg les test inc cli pop mov std stc pop dec cmpsl xor inc add aad push and in mov cmpsl jmp mov (bad) jmp out mov sub insl push sub ret xchg insl movl mov mov sbb out in loope and fwait or cmovge test pop scas mov cmpl sbb in push inc mov or sbb or dec test push cmpl dec lahf inc movsl sbb int enter adc add test cmp enter adc xchg inc xor fcoms outsl fwait in mov xchg or dec pop sbb lahf push adc (bad) mov les ds std lock or adc pop mov dec aaa and test and outsl add daa pop mov cmp jbe fcompl ret push cld add and pushf (bad) jnp sub inc bound in insb int repz jns mov sbb mov mov aaa (bad) jne add or fsubrl aaa sbb nop lcall imul jns xchg bound movsl clc fnsave (bad) shll fadds xor (bad) mov lret jl dec out pop loopne jmp (bad) in inc mov mov add mov jae dec push in fadd dec inc xchg mov xchg dec add pop ljmp sbb xchg inc xlat lret xor in lock xchg out stc xor xchg loop shll cmpl das lcall bound fsubrl mov push insb sub addr16 cmpsb and mov cli inc xchg xor iret pop fmuls inc cmpsb lea int xlat xacquire stos in outsl push (bad) cmp or shll clc sub cltd mov pop mov les xchg hlt jb pop mov imul js jmp mov adc test mov and adc fmul or add loop or fisttp jl xchg jp inc ljmp pop vpackssdw (bad) mov stos int lahf xchg mov (bad) mov dec aaa pop or test mov lahf add mov or (bad) repz xchg push movsl (bad) adc sbb xor das sbb sbb loop mov dec aas test mov or leave add js cmp fstpt sarb or sbb dec ja adc and jbe mov mov les cmp insb aaa enter clc mov shlb stos mov daa loopne add jnp inc scas es jge mov add sub push add sbb push in or cmpsb sahf push call pop sbb lock push sub cmp mov jecxz movsb jno in adc hlt sbb out pushf fistpll daa dec xchg xchg ljmp das push jno cs cli mov sti lret loopne mov sbb inc pop pop ljmp mov fstpt mov arpl mov (bad) in dec test push sbb cmp jmp push mov add sbb test addr16 mov call jp push arpl (bad) stos xor cli js (bad) loope mov cmp (bad) jl mov icebp scas lock mov cmp jle push stos cmpsl sbb pop and sub mov sbbb idivb fs inc shrl jmp xchg test sbb push movsl jmp add sub pop stos ss jno or xor mov mov sbb cmp pushw jb jnp rorl (bad) popf cmp inc cmpsb ret add push stc and push add mov scas sub jle rcll dec repz (bad) in dec imul xchg mov cmp dec std fldt add sbb push mov jle fisubr sbb xchg out mov (bad) fs outsb into out and or ss xchg xor pop jns scas push jo push push mov fwait scas mov into lods lds push js imull out cmp or mov aad pop lods call ret jmp call fstpt fidiv rorb sbb pop mov dec hlt clc dec sub mov icebp mov mov xchg out inc xchg pop scas clc lahf xchg sub pop mov xor pop (bad) mov movsb sarl push or movsb jg (bad) adc push mov fwait out add hlt sbb mov push (bad) dec fstpt (bad) dec mov and jns sub test or sbb cmpl or int (bad) fnop adc cltd add stos or cltd je (bad) fadds and cmp inc mov loope out andw pop in in jge xlat adc in pushf add scas test adc and push jno fs (bad) lods fidivrl xlat ret dec xor (bad) jbe shr pusha xchg ss cmp cwtl stos loopne sub mov popa clc out dec stos bound popf jmp jns xor inc fucomip pop test jns jae and fmul add or xor imul testb sub ss cmp repnz rcrw enter imul jecxz lea jp clc icebp fmull inc cmp xor enter or or mov pop adc jbe xor lea ficom out and aaa sti rcr (bad) dec nop addl mov stos insl fwait addr16 mov cltd scas out and cmp out (bad) push jle jl mov and xor mov jo sahf cmp mov mov xchg movsb mov dec mov ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jnp mov cmc (bad) xchg and cmpb push inc jle (bad) ja sub sarb mov lods fsubs xchg inc addl data16 js add jp and (bad) std push and jne mov push mov fsubl imul pop stos sarl push into es cmp aas in out push sub enter jne cmp dec or into xor rcl or mov sub adc inc (bad) push fildll add (bad) ror outsb inc in shrb std cmp add andl and (bad) imul cmp inc and nop mov pusha xlat fimul in jecxz mov mov jp cwtl xor cmp jns pop cmp mov out movsl mov push not mov push lret (bad) push daa loop (bad) out jg decb test inc outsb call sbb sbb cli add push xchg mov imul outsl mov pop pushf nop add sahf mov sbb scas mov sub lea scas and ss cmc push jb enter daa out mov xchg (bad) icebp xchg mov and arpl push sub xor andl push push neg (bad) pushf out mov call out sub in aam pushf adc pminub and into lods and xor lock arpl cmp lods mov dec ficoml adc daa das push scas push pushf pop mov jecxz mov adc loopne fisub mov or jg mov push mov dec ss jno pop (bad) or decb and sti mov insl insl pop push mov fcoml fildll rorb lods and std sti ds fidiv xchg scas shl les jnp push push push imul add inc add sbb jb sub mov loope dec mov push orl and dec mov dec mov mov adc cmppd jle (bad) je jb sbb pop mov cmp cmp ss imul lahf enter icebp inc dec adc xor aad pop xor iret js cwtl jo mov mov cltd fsubs lods mov not hlt lcall in and jge fstpl dec adc and lahf or push rcrl popa arpl cmp pop pop jo (bad) call mov fisubl pop fnstcw stos sub or int fistp inc jp clc dec mov daa out sub xchg inc hlt add jne xchg cwtl adc sti mov push jns mov and lds push jnp loop lret adcl and and mov adc inc adc int shrl cwtl cmp jmp add mov xor xor inc sbb arpl into cmpsl pusha in dec cmp sub enter es scas sbb stc cmp rorl sbb inc push xchg rcl or mov fs repnz pop mov jo jg pushf out roll xor notb lods test dec jl jp fadd outsl push in cmp lahf shl push xchg inc or sub popf dec adc sarl sub lcall pop cs jns ds insb frstor add (bad) sbb or call (bad) icebp mov adcb sahf divl outsl or test mov cmp xor addr16 xor and jne lods mov dec inc xchg mov out ret xchg imul insb push shrb test pop (bad) jne call push pop repz imul ss push lock jl,pt push out pop loope jnp adc leave das add or xchg dec popf xor outsb lcall fisub rclb sub cld aaa xchg nop adc pop into call mov out pushf mov push xchg insb mov cmpsb movsb and adc sub icebp jecxz cwtl int out sti adc sahf stos cli jbe mov dec cltd xchg test rcr aad pop mov int stos cs stos add jecxz movsl call daa xor xor (bad) cmp cmpsb xchg dec jns dec pop jo fistpl (bad) pop push or divl mov and add cmp xchg or xlat pop dec lock xor test push pop lret adc aam dec sahf xchg jl pop clc mov loop repz ret cmpsb addr16 es add std hlt cmc mov sub in roll aas inc lods or int3 (bad) pop loopne sub out add (bad) ficomp imul test pop jnp pop pop dec mov cmpl mov arpl nop push inc pop cmovno (bad) je and (bad) mov aad cmp mov mov enter clc push xor push dec loopne es sahf in nop dec cltd and shlb test mov leave push pop flds mov jb mov pop jb es xchg icebp bswap je mov xor div fwait repz les sahf add mov mov push adc mov cld cld sbb or push pop lea jge pop test (bad) fdivrl push sbb or dec mov mov sbb mov movsb (bad) ja or or enter inc mov add lock mov aas xchg lahf je jnp cmp or adc ds or xor call lea xor jge repz fsubl or lods sub inc add dec sub cmpsb subl dec lea int3 dec or adc (bad) jle pusha fistl insb test adc lret and sub mov xor mov mov mov adc rclb rorl xchg aad pushf lods cs sbb mov adc push fwait out popa cmp sti push popf lcall pop out jb jns inc push sbb jmp sbb insl test push sarl xchg lahf jno out test add pushf adc dec lods icebp int int mov xchg popf scas movsl pop sbb pusha push dec stos sub add popa pop xor (bad) loope pushf jno fnsave mov mov imulw shrl shr pop mov pop inc pushl (bad) mov out jmp xchg jle mov movsb sub sarb xor insb mov jb sahf cmpl pop mov rol sbb (bad) push (bad) out and sub mov push das pop and loop int inc outsb mov sub pop lds pop adc cmp jmp lock cmovbe adc outsb or xor sub rcl repz pop ret mov and pushf pop repz dec and jo imul int3 das mov and mov js pop je sbb cmp jl xor enter fwait ja mov lods mov cli in inc and mov sbb jmp cltd out cltd lods inc push pop mov add fdivrs hlt (bad) pop rcr or arpl ret mov pop jle enter les lretw shll arpl fcmovnb stc mov ljmp inc movsb (bad) int3 dec mov push pusha sahf sbb jecxz dec daa pop mov es leave repnz mov subl imul popf enter push insl fwait xchg jecxz jg (bad) loop sbb ret and or movl adc sub and push andl xchg das aaa sub or sub out into sbb xchg (bad) push clc lds hlt ss into xor mov fwait (bad) rol fstpt inc or xchg insl daa lds adcb rclb paddusb pop test addr16 mov test mov push pop push sti imul out out jne imul aad push xor fldenv add adc sub out pushf mov bound sbb (bad) mov jb dec jl pop ja xor cmp (bad) jmp in dec std and jbe clc lcall dec mov lea dec dec cmp adc mov clc xor call ljmp data16 sub data16 (bad) js mov in xchg hlt out cltd rcl pop mov js dec rorb test inc out arpl mov pusha push lret dec inc sub mov sub aad or xchg inc mov std dec or and outsl leave (bad) (bad) push insl mov jecxz sbb pusha leave loope mov push subl xchg lods mov (bad) sub xchg mov cmp xlat insl add jp sub or xlat in cmpsl adc cld xchg mov int or inc dec xorb stos pop insl push bound lahf into push xor fs add stos cmpsb daa mov lret (bad) mov sbb imul mov leave adc nop pop lods inc jl in push mov mov mov sbb push fldt push pop xor fsubrs adc fmull jp lret into out arpl sub dec nop and jge mov pop adc mov sbb or adc fidivr add sahf inc push inc or dec mov sbb jb pop mov mov mov push in ljmp mov jne adc in int iret jge adc mov int3 pop pop les lods sub mov lods aaa xchg mov std cmpsb stos movsb outsl lret cmc test mov popf insb test or xor movsb and or sub aam pop push in daa shrb mov pop xchg (bad) iret cmpsl repz ret out pop add inc jp or imul adc fsubrs xor call inc lret adcb pushf dec movsb mov adc jecxz (bad) lock imul xor mov fnstcw sbb inc pop and sub scas repz sub sbb pop push jno mov cmp mov dec (bad) arpl lods addr16 mov ret mov xor outsb inc jp lcall dec imul dec mov xchg mov push pop out (bad) iret ja cli dec sub or pop aas xor mov dec cli addr16 out lret repz loop or rcrb (bad) jl mov dec add adc add and cmpsb repnz les shr adc adc shrb jg (bad) sbb xchg push dec mov mov xchg (bad) cmc aam cmpsb pop imul sti loop (bad) push fmul lods add and mov lret pop and (bad) in xlat and mov inc sub das adc lock int lds les mov rcll push (bad) xchg sub enter fs iret call lahf and inc cmpsb popl xchg mov lret repz movsb fwait inc pop lea inc and ljmp sahf cmp jg add out mov mov scas sbb dec cmpsb mov push cmp pop cmp inc cmp es mov imul sbb or and sub (bad) sub aam or gs mov (bad) das add je nop loop in inc add fcoms or fidiv adc ret loopne stc mov push cs xor push adc fscale add jmp xchg loopne fcomp cmpsl mov sub jecxz into cmpsl sub mov fs ret or fcompl insb (bad) jbe cmp scas je inc mov shrb xor jne inc sbb and fs sub mov std lea pop sete mov xor (bad) out lods sbb or test pop sbb leave pop mov incl loope fidivr stos and dec push repz int3 imul int3 ljmp dec js mov lea movsl adc fcmovnb mov mov or jb das or (bad) fisub jae addr16 fnstsw jmp adc cs adc ds leave push call out insl cmovb test rol mov sbb imul dec rclb das mov cltd imul jl mov fs (bad) movsl adc loop cmp adc aas aad jne cmp lea outsb mov mov fcoms xlat lret into push pop lret movsl fstpt pop push fwait cli pop jmp push fisttp sub pop or pushf imul sub lods (bad) and ja mov movsl or xor into mov jl hlt lahf jmp enter mov pop aaa mov cmpsb (bad) and pusha (bad) (bad) dec or push and lods outsl loopne jle mov cltd xchg das sub mov out (bad) add (bad) lea pop lods cmpsb (bad) repz inc mov pop sbb cmp mov stos rcl fcoml sahf js mov jbe xchg xor mov mov fwait cltd bound cs jb push test stc adc or ds mov and int3 mov (bad) push mov jg into adc xchg push pop scas out loope xchg movsl dec pushl push inc push sbb mov loopne das das adc clc insl repz pop fdivp cwtl sub or ds fmull (bad) ja fadds mov mov lea or test push or loop (bad) les or (bad) dec cwtl sti dec add mov xchg cmp lods adc inc add aad cmpsl pop inc test or sbb jp aaa push add (bad) aad mov ljmp imul push shr xchg fstpl sbb inc insb cmpsb sbb push scas and jbe add pop mov gs mov test or ds adc inc lahf xor mov pop (bad) std notb cs mov cmp mov sbb dec pop movsb stc add fs and or dec cli test sbb imul mov arpl pop mov push loope test test aas (bad) (bad) pop cs fisubr jae in adc lods mov adc les int enter push sub daa in sub xor addr16 mov xchg js sahf mov mov xchg std and test dec inc push mov mov xchg nop xor jb mov cmp je cltd xor ret cmp add ljmp dec fcomps jbe jmp inc lcall aad push pop xchg cld shrl cwtl add (bad) (bad) fstps inc push sub imul inc imul popa mov pop std push pop inc mov test sbbl xchg int cmp sub call stos xchg mov lods jg lds fs dec icebp cmp and jnp sub pop jmp call xor lds jno jge (bad) mov mov cltd imul daa lret pop shrl mov punpckldq js inc aas inc cmp insl ds (bad) rolb lods lret adc iret clc mov icebp cwtl popf cltd dec xlat notb out jo and and pop mov xorl fdivrl jae mov outsl mov dec rcr fsubl arpl fsubrs sahf mov or push lock mov add movsb aam stos dec push test mov repz aaa adc sub pop nop xor out js in insl leave add mov lahf lea mov jo aam push lret fstpt fidiv jnp or in xor (bad) (bad) in out daa xor mov int (bad) sti xor loopne sahf outsb scas and leave stos nop dec (bad) gs pop inc jmp in or mov movsl das movl sub stc mov xor push (bad) loop loope (bad) fnstsw idivb lret data16 (bad) sbb loope stos and dec inc std mov bnd xor imul ja dec xchg int3 stc inc enter mov movsl fwait dec addr16 mov inc mov cltd test ficompl stos pop sbb arpl cmp (bad) movsl cld les push jb push add (bad) scas sbb int lds inc push adc dec mov pop or mov cmp fiaddl sub or sti daa decl faddl sub inc mov and ss mov lret repnz clc cmc mov and mov dec jecxz push xchg adc scas and inc in and mov or fstpl sahf mov jecxz add xor mov pusha jns xor mov xchg mov lahf cmpsb mov les mov xor rcr mov sti iret lock xchg sub (bad) (bad) xor jmp push mov cmp mov push movl loop ret dec mov push lods lock aam mov test inc ja (bad) mov jno in mov mov cld (bad) stc cmpsb xor (bad) mov push push and fsubrs (bad) in clc add iret pop addr16 es ret xchg in in stos in ret subl add insb add mov movsb (bad) xor pop pop xor lea xchg (bad) test pop adc mov gs sub mov aad and ret in in test leave cmpsb push push aas shlb xor sub imul popa mov call ja push outsl faddp jb,pt push dec dec je divl stos cmpsl dec (bad) stos pusha lret mov imul sbb negb dec mov xor xchg subl in jne add es lods aam jl rolb jge inc mov sbbl jne cli sub push fdivs das mov dec fwait push in outsb loop jmp sbb ror hlt fcomi (bad) xchg pop lahf ds iret jae jecxz xchg push sub push mov mov add sub leave xor sbb shrb jne mov add imul rcll cmc rcrl cmc mov dec push mov test push mov adc and jbe dec lods adc or or push arpl inc push pushl sbb jg adc xor xlat mov mov sub sbb imul cmc loope je or push lock mov jb cli xor leave or jb lret nop arpl inc pop or rcll xchg sbb das aas push xor mov scas push or loope push cmp adc bound lret mov scas rclb das aaa rolb addb neg jnp int jecxz rcll pop in into out cld fistp sub and loopew jp dec call in xlat and jle movl lcall ror add inc adc cmc add outsb inc ss or inc adc out (bad) xchg ror lahf adc cmpsl cmp inc aad fs das pop or cmp pop stc lods push pop jmp aas jb mov cmp mov aad int or sub dec or mov mov or (bad) mov push pop lock push sar xor movsl cmp mov outsl mov arpl call cld mov lods jae inc or xor pop cmc loope into add sahf daa (bad) loope (bad) dec sbb cmc mov mov jge mov aas leave pushf nop rcll lret fcomps push sbb movsb pop sub jp mov dec ljmp aad lret lock mov mov push in fldcw lret xchg sub insb jo xor ret and inc xor dec repz jg mov (bad) xor dec daa xchg fnop loop or pop std xchg pop (bad) xor push pop dec lret aaa xor add movsl pop mov or (bad) or jg (bad) lea xor xchg loope insb out lods sub (bad) add xlat in push cmp mov inc inc add gs pushl cmovns pop test mov in hlt inc mov in sbb add pop adc js inc pop mov inc mov in mov jl jae add cltd pop out inc iret loop adcb into out adc scas aas (bad) sbb stos negl dec add je out or dec push xchg adc adc mull lret sub add inc xchg or imul xor mov mov scas mov mov add cs xor shr sbb clc xlat mov cmp push dec sub and mov sbb push in add mov popa cmp lds push xor cmpl std add adcl cmovp mov popf in fldenv pop pop inc mov jo xor rorb bnd test icebp fist inc (bad) repz mov sbbl movsb mov inc imul mov jl xchg aam stos push ljmp push sub adc and push (bad) sub gs mov mov outsl adc out js push xor es sar push xor sbb mov xchg push in add in (bad) jns push test sbb dec aam inc or in ja lcall jne test cmc outsb or pop les aam loope push dec pop inc pop cld mov popf xor jle sahf dec (bad) mov mov mov arpl mov clc push sub call fs in and lds icebp out pop shl in cmpsl jbe es int3 (bad) sbb mov lds or sub ret add js aaa add xor rcrb addr16 lret daa cld rorb sub fbld andl add xor (bad) push ja sbb adc mov cltd xchg sub push popa mov (bad) (bad) daa or jge jns test and and jmp sbbb jge fisttp mov nop (bad) xchg and and cmp sti in xchg pop jle cmp pop popf mov adc cltd fcompl xchg rol cmp mov jmp dec sarl cld inc bswap sub or (bad) fnop or fsts dec pop jle push inc hlt lahf xchg fwait mov es frstor push in adc add inc fwait out push cmc add arpl add push iret xor inc inc movsb mov and push add inc inc xchg mov sub insl or scas and or mov enter insl xchg imul out iret inc stc xlat lea cmp or (bad) ja out add outsl inc mov ss into fldt cltd es xchg add notl leave cmp push mov cmp ret mov add xchg out mov out jnp sbb xor mov leave sbb out icebp mull scas scas addr16 xor (bad) imulb mov movsl mov ret xor inc out out push dec int3 mov pop jg popl jo mov shl xor (bad) clc mov icebp (bad) (bad) xor mov push test mov mov out jge jae shll pop xor aas je loopne push in pop cmpsb test inc adc pop (bad) or push in lret jg dec adc mov fsubrs inc aad sbb rcrl pop (bad) test daa pop addr16 or dec xor fxch push or cmp insb mov rcrl icebp sbb sbb outsl push sbb rclb push dec lock int3 mov popa inc cmpsl std gs ja mov mov bound mov push lahf mov into push es lret int3 (bad) ss xchg xchg (bad) and xchg xchg jb push dec cwtl mov dec adc pusha imul imul mov int inc inc adc sbb and cmpsb fdivl stos inc cmp xor fs cld adc in mov push ret in bound inc inc in inc lods xchg mov inc bound add pop fucomip inc icebp lret fstpl dec fidiv test sbb test cmp (bad) or sub xchg (bad) xchg jne mov roll jae cmpsb adc cmp inc outsb in dec dec add sti fstpl insb jmp nop and xchg xor (bad) and jle jae add jmp pop sub ljmp icebp or mov jne scas sarb stos or dec sub cmp mov (bad) and xchg movsb or and orl test dec jb call mov push out test pop cltd lret test or lcall push das arpl cltd in or sarb jecxz jnp fsubr int fisubl add sub pop stc cmp repnz rolb cs (bad) (bad) cmp mov xor cmp shlb hlt xor cmpsl rcll data16 data16 mov dec cli adc lea out inc or adc iret ret or gs fisttp jo je pop das jmp (bad) cmpsb push into data16 jg mov ljmp lahf sarl jecxz mov sbb enter or add cmp add lret (bad) cld push xlat mov dec pop or inc stc subl or aam dec stc xor push loopne loopne das add mov jns hlt sbb add scas mov jge xor scas jnp sub jle jns gs pop push movsb and shr (bad) fsubrs add les sub fs mov loopne aad push jns ljmp jmp negl or cltd das inc inc adc inc adc push ljmp xlat cld mov or xchg cltd aam mov lock push cmp rcrl push idivb inc xor inc inc cmc sub jns mov clc xchg jne mov jmp xor xor fdivl pop jecxz dec cs fisttp arpl loopne push or popf popf ret jne in xor push rorb dec pop es imul push les loop mov mov mov lcall jmp jae cs cmp leave aad scas xchg inc and xchg sub xor nop (bad) jb add pusha cmp mov push adc sarl xor and dec divb aam mov ja xchg cmpsb add aad bound (bad) in xchg aas jo add adc ljmp fs test rol popa nop fild fnstsw lret push daa push jmp mov inc repnz jbe jb jbe sti das pop or and or sbb js or sub sbb cli jbe and sbb or push (bad) iret add push in xchg xor dec inc (bad) dec pop scas jns movsl out dec lahf add lret pop (bad) mov jecxz push stos and add (bad) or mov mov cmp imul out pop or fistp gs mov push xor call add pop rcr add jmp ss popf sbb and icebp (bad) das dec enter pop loopne mov es outsb adc stos push sub mov lret cs call (bad) cld ljmp adc xorb mov (bad) fidivr push adc jecxz xchg dec or jmp pusha mov aas sbb sbbb shll jecxz pusha push add inc scas icebp pushf adc idivb in int popf aaa cmp out mov das (bad) fnsave lods aad mov pop push mov std or cmp jge xor or cmovl mov dec jmp mov xchg or loope mov xor push push ror lock jns fcoml cmp jae xchg adc das add push fidivl mov or out xor pop add adc call sbb mov leave loop and mov repz cld cli pop add cmpsb ficompl sbb cmp (bad) adc cmpl sahf xor loopne cmp mov (bad) aas push cmp adc mov adc inc and jbe movsb jecxz mov div ficompl stos pushf lds cmpsl or xchg imul les sti sti sbb xchg sahf into cwtl inc adc adc mov int3 or rorb jb sub xchg je je cmpsl insl sub xchg jmp cmp cmc aaa (bad) loop or mov mov les (bad) fs cmp xlat mov (bad) or dec mov mov sarl add add add jmp dec add jmp mov hlt cld push jns inc ficoml dec sub loope lods push push out or test (bad) pop jp mov jecxz xchg lods call cmovs xlat dec sub adc add mov dec ret jae inc lods imul outsl insb add cmpsb lahf gs dec inc xor cmp ja test (bad) cld sbb xor push ret std inc and sti cmp movsb int3 mov addl jge xchg ret jmp mov pop ljmp and jnp insb push sbb das push mov jnp icebp int (bad) push into sti mov mov test xchg icebp jp mov sub insl jge sti bound or cmc jmp les cwtl not lahf nop pop or cmpl jo cs dec pop loope mov pop iret (bad) movb sbb inc rep jae sahf scas xchg outsl jecxz jmp lds outsl lret aad outsb out jle out push inc add cli jnp mov xor fwait cltd mov ds scas cld fidivr ret into jl scas xor adc popl stc mov negl dec fistl sbb xchg mov xor push test (bad) popa out jmp sbb sub ja (bad) call imul loope mov pop call mov pop mov rolb lods mov mov push lock and add out add cmp pop sub sbb cmp clc push jo out push pop repz cltd pop lea rcrb push pop inc mov xchg adc add out xchg lahf loop fiaddl lods fs div xchg adc and cmp mov push mov add inc pop dec jp adc into xchg shlb das xchg jge add nop movsb add jmp leave and xchg inc sbb mov cs jno test fild mov pushw xchg movsl push lcall (bad) aaa mov nop dec js mov xor mov stos in out ds xchg scas cmp push inc sbb xor fiadd adc dec xor nop in (bad) fdivl (bad) (bad) mov bound mov hlt sub ret or fisttp lods ret mov ret and xor lock sub (bad) aaa in lock mov fwait popf daa (bad) hlt aam mov loope les cmp ret int3 xor jnp stos hlt xorl cs icebp clc add jmp out data16 pop lahf jbe dec loop ss inc js gs xchg sbb (bad) mov fisttp or std pop cld cmpb inc dec test enter test addr16 (bad) out pop fnstcw cmp mov or push movsl in mov push out fisubl sub ljmp aad (bad) daa xor adc sbb adc (bad) mov int3 lea sbb in (bad) mov scas frstor mov push dec xchg mov scas repz loopne addr16 cmp pop jle pop repz ficomp mov les or popf add push fidivl cmpsb jecxz inc xchg or sub pop or xor (bad) aad dec add test xchg rclb mov out jno cmp sbb jge dec xorl add inc mov mov aam sbb notb and jl push ss pop lahf sbb imul cmp dec and rcr js sub jp aaa sub rclb jmp sub sub jp lea mov rolb sbb push gs dec sahf aam xchg sbb in mov in cli cmp pop scas rcrl enter jmp loop nop inc mov test in push loop (bad) repnz shl fsub fsubs mov loopne jb xchg sbb scas jae mov cmp out mov mov inc jg xchg sahf int3 iret fadds and insb lcall cmpsl (bad) (bad) dec cmp cmp sbb pusha xor push scas xchg hlt mov and sbbb in aaa mov fnstsw mov imul push cmp push cmp les outsl xchg lds (bad) hlt sub mull fiaddl xor movsb cld pop and sbb sbb and rorb loope dec (bad) into or inc cmp mov scas jg jns mov test int les jno imul ljmp pop mov adc iret inc fstl cwtl xchg andl pop dec or in cwtl stc lcall stc add out incb xor mov mov fmuls xor psrld imulb push int3 call repz xchg add mov jp lahf pop aas inc dec pop mov xchg dec dec push fsubrs and lock and jmp jmp (bad) fidivl mov scas jb gs and push xchg jmp mov jo mov or xor das cmp cmp cmpsb xor mov stos mov leave subl pusha aaa mov std jecxz jecxz (bad) pushf xchg add adc ljmp cli mov lcall mov test jge sahf inc fdivs push clc jmp pop cs and arpl aam imul popf rol mov mul enter mov stos add adc xchg ds test rcrl sbb lret cmp in das add dec mov xchg jns ss loopne cmp pop ret (bad) out fdivl add lcall je mov mov aad mov (bad) xlat inc mov pop popl test pop movsb adc xor push dec dec add in ja or pop jg nop jecxz seta repnz add out cmp inc pop inc or mov dec cltd sub repz xchg mov mov cmpb cmp mov out lret sbb xacquire rcl cmp ja or lea mov or in negb aaa mov mov jmpw add rcrb mov xchg stos mov lahf repnz (bad) jle cli jecxz out pop test ljmp xchg into pmullw hlt jno (bad) xor adc dec scas sti adc xchg icebp pop lret sbb dec sbb sbb sbbl jb aad pusha jno fisttp outsb and pushf repz xchg cmp xchg xchg lds add fsubl mov mov nop push lds shll sbbb dec data16 hlt out pusha add jp inc jl push (bad) and mov (bad) cmc jo cmp push inc inc jle cmpsl dec jo adc push lock adc (bad) in add cld (bad) or inc mov adc mov jecxz mov (bad) stos dec in fcmovnb dec xor inc repnz jne add arpl arpl ljmp dec es pusha repnz and add loop mov cmc loopne sbbl lds ret cmc frndint or in pop adc mov (bad) icebp stc into adc lods cmpsl mov adc out (bad) gs pop out imul in and sbb fadds push out rorb mov xchg sbb or addr16 jp jbe pusha das call or mov add mov add sub (bad) mov lods mov mov idivb push xchg insl mov (bad) (bad) pop es in push jmp mov mov hlt nop and mov dec into ret push fisttp (bad) (bad) aas jl jle inc psllw lock in aas lods ret sbb outsl cli dec int3 es add mov cltd dec clts (bad) hlt imul adc xchg add sti mov xchg jmp dec jns cltd inc mov xchg popa ret scas pop mov out stc in movsb push ficoml jnp,pt pop out adcl (bad) into int3 int3 jne and mov popl jl jl aad dec loope das jno xchg mov pop mov jns loope inc cmp jnp std jecxz imul cmp roll and lock call cmp icebp and mov nop cld aad jg mov cmp mulb mov sahf out (bad) movsl mov pop les pop arpl mov push sub and out pushl aaa aas mov sbb cmp mov mov andb mov pop cmc sbb loop or push cmpsl jmp sub push sub adc push fwait das add loopne push dec fcomi mov pop loope mov outsl insb cwtl fs adc xchg pusha mov push int3 daa cld mov dec rcr or adc add imul mov xchg in test cwtl popf xchg adc stos jbe enter mov xor inc (bad) addr16 scas add in imul imul add xchg sub push cmp sbb mov ja pop (bad) fcomi (bad) cmp or mov sbbl lret xor dec lock loope xor test cmc cld fwait lret out sub pop lds mov mov mov insb ds daa push inc jb enter movsb xchg xchg ss les in sbb xlat push mov cmp mov inc inc outsl lds outsb ljmp xchg lock bswap and fisttpll mov xchg es std sub push mov cmpl divb jbe mov mov mov sub jle icebp stc jo sbb dec pop enter pop repz cltd pop aam daa insb dec sub push iret xor and pusha mov insl mov mov push cmp xchg imul mov pop mov divl in mov adc fcmovnbe xchg or repz sbb repnz js push fbstp add icebp mov dec (bad) jge cmp iret xor xchg add aad scas mov repnz pop add inc lret mov and dec fcoms xor and push repnz insl movsb out jb imul shll scas sbb cli int mov popf inc sbb repz mov cs mov int3 push dec mov out push stos lea imul sbb sbb out dec flds jl jnp lods js mov pop cmpsl (bad) aas addb cmpsb xchg fsubp popf mov adc ss push mov fmull ficomp lahf mov xchg aam lret das add mov xchg fdivs cmpsb add and adc fldenv fcomps jnp cwtl cwtl (bad) lock pop xchg add into test call lret xchg sub clc jmp (bad) jp call sub adc cmc xchg xchg fsubs mov inc insb jge xchg push pop aas or (bad) int cmp mov sarb test in daa das adcl lsl lods idivl xor cmp adc and out cli fstpl (bad) adc xlat cmp dec (bad) cmp xor call fcoml sbb xor pop pop push (bad) hlt jno xchg scas test xchg jl push inc cmp cs (bad) jmp mov mov scas aas les pushf xchg add dec nop jg jmp iret (bad) or jno xor or sbbl decb shr (bad) lea mov fadds lock sahf xchg fsubl pop push cmpsb stos ret test sub fadds sub (bad) int fwait push xorb xor mov push inc mov test sbb jo cmp addr16 dec inc ds sti inc in push in nop or mov leave shrb or lret addr16 add xchg pop add jnp xchg test push outsl add call call mov sar lock (bad) mov inc out push push enter xchg bound mov mov xor pop xchg (bad) pop ja and pop addr16 lds je rorb add push ret rclb aad push adc imul out mov lret push mov je js jmp leave shr jg add rcrb jo cmp stos sahf and sbb lahf xchg rcll out pop mov dec leave mov cltd fiadd push aam das (bad) push fwait ret popf (bad) movsb ret fcomp cmp adc fdivr sub imull lea cmp add pop fistl push mov dec add and xorl loope icebp cs push out icebp jmp aam jle cmpsl and adc xor ret movsl sbb mov inc jle repz js ret cs xor clc jne iret popf adc rcrb lods and fildll pop (bad) nop xlat fdivr nop lret inc rorl ss pushf das xchg shlb jne lock movsl pop pop not sbb push xor ret ret jle sbb xor repz addr16 lods les cmp (bad) repz adc cltd ret imull inc (bad) mov mov cmc mov mov (bad) and dec push scas stos scas inc insb in in insl mov sbb jecxz adc pop mov and inc jno pop aam and fwait sbb inc adc test das rclb jnp loop mov xchg in fdivl sub clc lahf add inc dec test inc or dec push cmp fnop push cmp test xchg or inc fwait xchg jnp add lods mov jp mov lock stos fcmovnb leave sub mov in xchg out adc inc sbb out pop lret and jecxz call jge mov (bad) iret sub fildl adc sub movl test sbb push mov add nop clc push ja leave adc int3 mov and addl sub cmp loop gs clc sbb push jp mov enter movsl cwtl adc out std cmp mov lret jb or insl subl xchg test push scas icebp loop int3 aad mov cmc fdivrl mov adc cmc jge adc mov shrb sub push xor dec pop fldt dec lret push lahf es aad cmp jo push cmpsb inc (bad) xor push cmp mov jge pop in xchg sbb xor or jo lcall pop sbb pop adc sbb jecxz repnz movsl xchg mov xchg lcall and pop mov ds push js jae (bad) inc and in jns shl mov stc test mov lcall andl xor xchg int xchg (bad) divb dec sbb (bad) xor dec into pop das jl push bound lock rcl adc sub xchg jns pop push lret pusha sub push mov pop jbe dec mov xor test jno and mov aaa adc cltd mov jmp outsl add or (bad) aam and test in push xor push dec push add sub xchg and jb mov (bad) and push fwait gs jne imul push lods cmovbe lds add xchg jl cs insb adc xchg mov cmpsb fisttp pop inc fildll jbe cltd (bad) push xor inc jp jl out (bad) xlat mov sbb and or ljmp outsl mov xor pop inc repz and jmp push lods xchg sub lods pop pop mov outsb fwait ret fs adc out flds lret sbb lar sub (bad) or enter fidivl push jb jns mov dec ret in std push xchg nop mov pop pushf jae push std sti lods gs adc fist jne push and cs push xchg loop dec popa jp aad cmpsb mov mov mov jne cli mov xchg fndisi(8087 addr16 rolb std js lea ss hlt mov dec or jae pushl sub cli jge in push enter sahf std push jl push and pop or dec inc xor push stos aas (bad) je mov xor cld inc sub outsb repz rcll and sbb or leave cwtl sarb negb jge jae loope or fnstcw pop loopne xchg mov or shrb xchg popa out jae fisubr or dec lods xor pmuludq into sub sbb (bad) std stos jmp out push movq test iret jle xstore-rng cmpsl ret rcrl hlt jg rcrb or insb sarl ret pop out mov jbe hlt xor fldl mov lock scas pop mov cmp xor (bad) out add pop dec push (bad) shll pop es dec idivl addr16 andl (bad) mov and mov sbb adc outsb dec fstpt xor pop adc fdivrp mov mov in loopne push insb lcall mov movsb inc data16 jle pop cwtl pop bound or xchg imul mov or mov (bad) jmp jo mull cs mov inc je sbb push add roll pop ljmp popf out sbb sbb mov mov jecxz jle stos pop mov add (bad) mov lods jp movsb icebp out mov mov ss fsubrl mov inc mov clc lret dec mov hlt and js fsubr add mov xchg leave shrb ljmp jmp (bad) fbld cltd mov adc pop je mov cmp ret imul div lret mov inc rorl jne repnz lret je and stos lods mov ret dec cmc cwtl in es dec sti sbb sub int3 in lahf mov adc push pusha fmull and adc icebp in xchg pop xor xor xchg inc cmp mov xor out push mov xor in mov dec mov xchg or popa daa and xlat notb lds jae mov xabort jg test push addr16 mov cli sub dec notb and lret xor out add jecxz pushf push xchg iret dec inc mov ja mov push jg inc aaa mov movsl test mov fsub shlb loopne adc fs xchg add cmp push into js xor dec pop int3 test xchg rcll (bad) mov and outsb dec cmp add mov into cmp popf sbb hlt inc bound mov xor mov push xchg out jae aad and mov add fs repz repz cli add pop in add mov xchg and in into xchg cld sub lcall pop shrl or popa push cmpsb insb xor mov xchg ja int cli mov jp xchg lcall dec shrl xchg in in gs (bad) (bad) outsl cmp clc in pop mov das mov add pusha xlat pop movsb xchg loop das jne js (bad) es mov lcall nop jb mov jge jno mov xor jmp movsb push add adc sub movsl xchg ja sub (bad) inc jno ss addr16 in repz fcoms mov mov push sarl pop and ljmp sbbl sbb test (bad) jp bt mov jae push xor mov repnz jecxz das jo aas mov adc ja lcall movsb mov popf inc cmp popf push cmp clc and test mov adc dec loopne or (bad) jle adc or mov jge jge jb xchg pop xor add andl je cmpsl pusha cmp push fwait shlb sbb push xchg andb call movsb jne addl outsb cmc jne jnp stos (bad) inc out jbe dec sub pinsrw mov sub jle push jae pop hlt push xlat mov movsl mov rolb orl mov pop xlat xor repnz mov adc cli scas cmp loopne lods loope xchg sub mov jp out rclb cmp ret js mov aas aas and and push out sub roll mov sub mov dec sub in jle mov sti aad and mov cs inc out xlat dec jb das push adc fstpl sbb sarl pop test stc imul ja cmp insb in cs adc movsl lods cmp test adc imul pop orl bound mov loope xor rcll jp (bad) cld gs dec or pop imul cld push mov dec inc xchg adc mov xor andl jo frstor dec sarl adc mov test enter and in pusha push mov jae rcll pop (bad) testl (bad) ja pop mov aas aaa iret and movsb dec dec xor mov cmp fidivl xchg and les cs add dec cmc repz call sbb pop xor bnd push lock mov jns push sbb pop scas sub add xchg lock xor lcall add push sarb mull pop mov and add repz sbb push xchg mov mov sbb sub popa enter int3 mov mov jns je dec dec push (bad) xor adc inc sub jl fcoml out js popa push mov aad fbld lret jmp fdivrl add adc mov dec test icebp sub cmp faddl xchg movsl into test ljmp test dec fadds mov iret (bad) mov add or les xchg out push (bad) movsb mov push mov (bad) (bad) f2xm1 push dec jae leave push hlt clc test mov cmp stc and pop jge hlt pop push (bad) fisttp push lock scas push mov jo test lahf dec xor int out std jbe (bad) dec scas mov fimull mov dec loop xchg pop jge mov test adc mov loope push cmpsl jbe (bad) cmp cmc pop mov cmp push mov jae repnz stc cmp aaa xor outsl cld or scas inc and or and scas adc inc idivl mov popf ret jo (bad) mov sub scas sub enter cmp (bad) jbe xchg mov in pop mov pop or arpl aad jge fistpll imul in mov jmp (bad) dec stc pop rcll stos or mov les loop mov iret (bad) jae sarl pop or imul push sub call add arpl mov inc int3 pop es aas cmpb adc movsb loope jecxz mov xor icebp xchg aam xchg and popa scas jns mov ljmp mov sbb sub xor movsb ds stos and mov adc sbb xor gs pop fcmovne sti inc (bad) into psubb nop int3 testb xchg hlt sub int popa sbb test sahf movl push and clc jmp cwtl xor data16 je (bad) fmull cmpl xor dec inc (bad) divb cmp or and fistl into je in pop xor push or mov mov ficompl cli pop mov rcrb ret int stos mov mov or and pop iret cmp sarl pop xchg cmp cmp lock scas push adc (bad) (bad) dec mov rorl repnz sbb addb jge notl inc test push jge outsl dec stos sbb fstpt jb adc inc scas jmp fcom (bad) arpl out jmp sbb jg mov pop repz push cld xchg shrl sbb mov push sub and pop cmp test in (bad) mov repnz in enter in cmpsb pusha aaa and test jae nop in aas (bad) sarb sbb cmpsb cltd xchg push mov jl mov ret mov sub lods inc cmpsb mov pop push in lret scas int fwait pop and dec hlt or std sbb jae leave push add xchg pop imull mov cmc lods sub ret mov sub adc rorb imul mov out movsb push decl xor sar (bad) cmc in mov push movsb ret lahf mov in inc fs mov pop xor cld pavgb xor adc sub push daa aaa push add pop into lods ljmp sbb push and imul xchg fs xchg inc and es mov inc jp sbb xchg (bad) sub int3 or popl mov pop ret jg jl int add mov loope push sub or push in add sbb fildl xchg jecxz mov out aam dec movsb jne stc pop cli sub cmp lods add in mov cwtl add and and sub mov push je inc and add in adc dec cmp and cmpsl sahf (bad) out iret into dec sbb dec xor imul in out push mov push push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret mov iret xchg add in insb cs sub in imull test mov mov jns mov sbb lods adc jnp add pop ret mov sbb and sti sbb cld xchg mov es sub addr16 pop lods ds bound test cs pop lods adc call push call pop ret push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc or fdivl or stos dec out ret gs fnsave (bad) sbb lret outsb mov out xchg pop inc pop sbb pop scas cmpsl inc and fcomi jmp sbb or ja jb outsb mov stos arpl jo mov xlat movsb mov mov dec jge pop mov test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov or inc stos (bad) or push xchg xchg add or mov pop movsb clc leave push je sub outsb addr16 scas outsl jbe cs mov mov adc loopne insl rol int3 cmc adc jle push push jmp sbb push sub fsin test add insb cmpsb inc cltd subl xchg (bad) cwtl cli ljmp das mov loop sahf pop add jnp mov dec jo test loopne sub pop sub jp dec sbb sgdtl jns push mov and inc insb mov aam mov adc jge stos stos sub sub jae sub cltd cltd xor push mov fs add and add arpl mov cltd or aas lock scas dec sbbl movsl sub xor test es sbb jo cmc mov (bad) or mov cmp inc jg arpl mov fstl cmp xor test add (bad) push sbb lods jg sbb mov adc ss nop cld inc jnp push pop lock mul cmp pop jg bound dec hlt dec clc jg adc cs xchg jp fdivrl in test mov sti aas and lret dec jns inc orl xchg mov pusha notl test loope lret or test push addr16 mov into sahf cmc mov int3 decb mov mov data16 (bad) aad out fdivrs inc nop lods or shrb xor loop aad and jl xchg cmp cmpsb cmp pslld (bad) lret push js xchg pop cmpsl jae dec (bad) push jno loopne sub and ja push push stos push movsl (bad) jae add insl push xor xor (bad) fisttpll stc jecxz or mov out pop push js ljmp in stc or mov cmp sub or iret outsl out push lret pop icebp iret sub mov stos pop (bad) int3 push xchg mov dec popa jp je add lret and adc jne pop sbb in (bad) mov loopne xchg out scas inc sbb push stos in scas sti mov in test cmpsl inc add jbe push dec insb sub fadd mov ljmp (bad) mov in jecxz sti stos (bad) xchg mov cltd addr16 (bad) push sub xchg adc cmp mov out xor mov xchg dec pusha scas icebp sub sahf jo push and mov ret clc jb and lret add sbb enter fwait inc add mov imul clc lock push fistpl xor xchg (bad) pop pop aad mov push jno cwtl test xchg jo inc cmp clc cmpsl mov (bad) cmp sub cmp mov mov xchg sbb pop bound stos sub sub xor mov adc sub adc inc test fildll dec push mov movsb pushf sub sbb jmp pop cmp stos push adc jle int3 out insb test xchg fsubrs les add ds push inc mov lcall push int3 adc iret jnp fidivl lahf push aas sbb or push xlat pop sarb cld sbb icebp sti ljmp leave cmpsb stc aaa daa mov jmp cmp cmc and push mov push jp scas xchg sti xchg and (bad) mov mov popf int3 pop inc mov iret cmp loope mov aad or push jns sub dec jns test lahf jbe sbb dec sbb adc insl inc push fwait adc cmp stc insb xor int (bad) mov xchg pop push cs (bad) sub and push lret cmp jmp mov pop jns (bad) dec movsb iret repnz push or insl in push add adc dec sbb aas rolb mov xchg xlat dec lahf sbb sbb fimull ffreep call lret mov pop jle dec fnstenv rorb pushf int push pop sti inc mov add nop repz xchg add sub fs xor dec cmp call jns roll or cmp loop movl outsl mov sbb push sub fcomps (bad) or fistp imul ficomp shl xor shll mov arpl sbb cs mov and mov pop jae repz frstor dec jne mov cmpsb mov jno enter ja xor mov sub dec sbb mov mov aad icebp cs and add cli pusha pop cmp push jo fistpl adc fstps sbb pop push rclb dec push mov cmpsb arpl pusha add push sbb outsb cli mov cld adc jo fldenv and mov pop mov sub jl and stc insb or jl or and inc mov mov jmp aas fisub lock std fs xlat andl dec popf mov test dec divb pusha and cld and les push cmp push mov xor push hlt loopne xchg movsb add push mov and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 mov cwtl in out enter nop sub push jns mov or sbb lret dec enter jns pop test add sti add add xor mov in xchg xchg out mov lret jecxz cmp pop push cmp jmp and cli dec jge pop cmpl jne xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 mov cwtl mov jp sub push jns mov or setns ss or hlt cmp jmp out aam sub out jo je rol cld mulb fdivrs enter push (bad) adc mov and ja xchg or mov or ds stc test (bad) imul mov movsb out xchg cltd rol dec lea aas xchg dec dec pop rorb inc cmp in rcll add jp dec mov mov sbb adc outsb test lahf in repz pmulhw xchg notb pushf sub mov push fstpt xchg sub movsl popa add xor mov mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 mov or jnp add nop sub mov dec push add or sbb cmpsl into mov popa xchg sub sbb inc adc add add inc adc add add add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push adc pop cmp out or lret daa jae push stos xchg es mov imul sub dec sub xchg sbb (bad) add leave icebp negb fdivr enter mov imul mov loop fcmovnu cmpsb xor pop push push add test dec data16 imul loope sahf mov sti xchg cmovo pop push jnp (bad) dec into push mov sub and add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg sbb movb dec or sbb movsb mov jb (bad) sbb mov push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 mov or mov cld push cmpsb dec and adc sahf xchg mov sbb pop lds insl xor rol jg (bad) xor repz inc lret (bad) cmc cmp das add (bad) in (bad) mov ljmp mov stos arpl jo clc movsb push dec mov int3 sbb inc sub dec ret dec idivb mov or repnz iret mov and out jae mov repz jb push pop push dec cld mov push sub cmpsl sbb scas movsb leave mov pop sub xor je mov xor aad ret lods and (bad) (bad) sub xor dec sbb push jne cs mov or out je repnz sbb dec inc js lcall mov (bad) mov pop add mov pushf push xchg sahf mov sbb ljmp cltd loopne movsl xor mov dec add leave bound ret fbld insb sbb add aam out jne cmp push stc xor popf pop jle xor sar pop aas cmp or sub cmp (bad) pop add cld xchg inc ds cmp movsl inc inc les (bad) stc addr16 inc repnz int3 push repnz seta xchg add subl lahf pop jecxz addr16 fdivs inc outsl mov out sti xor mov jge fidivr push outsl (bad) adc inc int inc jge ss dec in incb and sbb std hlt std push jmp lret fidivr aas stc mov or mov aaa add int3 mov sub cmp leave sti mov ljmp mov mov xorl mov adc jge pop sahf lods mov xchg out jp pusha ret push pop test dec push inc sbb xor jbe addr16 inc sti sbb add ficoml push (bad) gs inc mov mov ret mov mov ret mov xor adc xor pop arpl pop out rcr sbb inc rclb popa mov mov xor fnstenv repnz cli mov push cmp dec mov flds int mov scas dec mov or push mov lcall mov inc add xor add and adc adc jae push stc push gs jecxz iret xchg cmpsl scas push xchg adc dec push mov mov sahf or (bad) mov aam inc mov ficoml stos cmp and loopne jno pushf sbb (bad) mov sub cmpsb cmpl (bad) clc xchg push and repz scas or pop fwait (bad) jmp inc cwtl fistp in stos sbb cltd jmp mov cmpsb cmpsl mov or adcl fimull xor lcall pusha scas movsl shl push jg insl pop sbbl mov dec test inc cmp fwait pop jle sub or ret push mov push mov and push nopl leave xchg pop (bad) je scas popa aam (bad) mov ror scas cmp dec inc (bad) int loop or xor push pop sbb hlt (bad) clc dec popa jp (bad) cmpsl pop xchg leave and test mov cmp xchg mov ret sti jg pop adc mov push dec hlt mov and dec sbb mov out mov loope orl sub aad icebp xchg icebp cltd sti ret enter movsl rolb push repnz add and pop xor fcmovnb xchg mov aad aaa sub ficom int3 push xchg dec pop cmp (bad) pusha decl int3 fidiv push xor mov cltd cs mov xchg mov mov jmp jcxz inc lahf xchg mov imul or aam daa outsl adc pop mov hlt hlt jp pusha lods mov arpl aaa xor inc push jbe pop bound dec or cmp inc fildll and lahf loope js push nop aas leave or insl sbb ret sub lahf ror cld push jno jle push dec mov or ret lcall pop inc dec inc push stos and sub rcrl mov cmp call aad popa mov cmpsl xchg cld xor mov idivb pop stos sub mov in cmp mov cmpsb adc adc iret es fcomps shrl (bad) mov mov rolb scas cmp xchg jnp inc fildll lods adc pop xchg jge pop jmp inc lret (bad) (bad) and add in jae (bad) dec test sahf repnz cmpsl in test ret push out mov fnstsw mov pushf lret out xor stos xor in or cmpsb dec mov btc les popf pop insl inc sbb adc dec push jle loope jle add mov xchg xor rorb pop pop sbb fistp push cltd popf scas push pop fxch aad (bad) add xchg and es out inc ja jp xchg pop js in sub dec add nopl scas cmp imul pop incl shl mov mov je add test insl sti mov xor pop sub jne and js inc pusha mov ss sbb movsl dec dec les cwtl (bad) push (bad) or push mov test add mov cmc ret dec add mov pop out xchg inc pop mov cmc mov push scas aam stc ds or rcr imul mov test mov jmp mov es addb add push int3 sbb sbb pushf ds popa repnz bound insl stos or insl das mov shrb shrb clc rol push fdivs mov or xchg fsubl mov or xchg mov add aad call adc fnstenv xchg clc (bad) or push inc mov push sbb sub movsb sub mov lds (bad) mov xor and or insb icebp inc lret pop mov add dec jnp xorl mov mov pop or ret shl add and leave jl jns stc push je enter add enter mov mov adc outsb xor mov es js mov test (bad) sbb cmc test sti in (bad) imul dec ret inc inc dec mov xchg sbb out call or jle call push ja xchg stos sbb (bad) adc pop lods jmp push aad jne sbb mov pop fs mov popa lods jl inc and jns outsb test cmc ds sub xor jle shlb jbe (bad) fmulp arpl loope and loope xchg mov cmp dec popf int lods jmp sub mov inc jo daa jb xchg ret lret mov mov push call push mov ljmp mov aas aaa xchg mov pop jecxz loopne gs sub testl movsb inc aam and les pop add and mov pusha adc push pop mov push cmp sbb aam xor xlat movsl aam test jg testl sbb inc mov imul cmp and lcall sub addr16 idiv lret ret sti push add sub pop into sub push adc or pop leave lea divl test cmc outsb movsl jbe hlt pop repz inc xlat lock adc lds and jns and shr sub cld xchg lods mov or movsb es aad push jp gs fcomi xor fcomp outsl pop insl pusha std aas sub roll mov imul sub mov sub lds (bad) out test cmp in imul sahf hlt cli sub shrl frstor xchg inc (bad) es rolb sbb rorl push and aad mov mov jl shlb mov and mov negb mov mov hlt stos aam adcl jo fwait cs int cld sbb aaa je jle push sbb cld mov inc mov dec dec jmp fmuls in jbe inc sbb xor pop inc adc sbb mov adc jo das notb push (bad) outsl aad out mov les sub iret arpl mov sbb shld outsb push test jecxz call lods push cli imul jp lret mov jns lods popf add rclb ljmp test push mov sub jmp fidivl rorl int adc arpl mov xchg jle or cmp add test mov xchg cmp lods shlb pop movsl pusha rep loope fwait inc out adc out jl (bad) out fisub and jge xor movsb dec jl lea daa aad cmc rcll std xchg lahf add jle jns outsl loop test bound pop clc fdecstp and add shrl mov test push fistp enter pop test (bad) jmp fdivrl aam add jge inc jl cmpsl ljmp test and test in sbb add adc mov jle xchg aam insl mov jg (bad) sti lahf pop sub (bad) outsl sti negl cmp je mov xlat adc pop cmp icebp sbb sbb enter test add addr16 push jecxz sbb mov inc sarb imul adc cmc lock daa ret sahf aas cmp sbb lds xchg test (bad) gs xchg mov movsl adc xchg and lcall nop push xor sbb push xchg mov jb sbb or cmp mov mov sub jmp sub in xchg jne loope cli repnz sahf push push dec lahf lds popf (bad) (bad) push sbb dec or pop (bad) in out cmpsb mov inc loop cwtl dec sub scas lcall mov addr16 and and adc xor push ror pushf mov iret loopne shrl int jae xchg mull enter cmp (bad) insb jmp test adc imul fsts clc dec mov cmp xchg dec fstps pushf xchg icebp cmpsb add xchg pop push xchg arpl mov (bad) mov sub jmp fwait sbb (bad) aad fldenv (bad) cli pop mov fwait push out ja sub cmc ds lock xchg les (bad) out cld and andb pop or xor insb and cvtpi2ps inc mov lcall hlt add clc sub mov inc pop jmp and jl (bad) jg rol jbe pushf scas push inc sbb (bad) jbe mov cmc iret mov adc test mov pminub cmpsl push dec xor push inc loope mov les out repnz and mov pop imul sbb sahf xchg inc push pusha int3 lods cmp call icebp jno and gs push fadds xchg and dec ret outsb or lcall push out cwtl lods fcoms cmp jge pushf sbb dec add es daa jmp push (bad) push mov sahf cmp adc in lods lods lds push adc mov mov mov mov push adc adc pop les adcl or cmp popf xchg inc cmp iret mov add xchg psllq insb xchg sub mov lods aam mov iret les sti pop sub fwait lgs fnsave pop mov mov xor movsl sub pop push test insb gs sarb stos bound xchg push xchg in nop sahf fcompl push jmp cmpsl jbe das sub push push pop cld mov sbb xor loop sbb loope idivb and sbb push mov out pop push xor out mov fsubs pop stos push mov lods lahf es or add ds mov ljmp stc sub dec into mov mov jo sbb fs lahf ja call push and mov inc sub mov dec stos xchg mov lret cld sub repnz mov mov mov mov (bad) jne pop inc sti xor or sub or fistpll pop xor pop (bad) idiv fistp mov xor fildl lretw or addr16 jmp sub dec mov lret mov adc mov lods sbb cmpsl push mov stos lds loop ljmp cmp pop or in xor aam sbb test sbb call inc jl movsl jmp xchg movsb adcb jecxz lcall aas adc das jae,pt sarl negb fnstenv rorb pop jecxz dec mov movsl addr16 or into add xor pushf cmp call adc ficompl popf push imul hlt mov test jo cwtl fcoml mov stc (bad) mov mov fstps fst mov mov ja xor mov gs fistl mov xchg int push inc sbb sahf outsl mov cwtl mov jno outsb sti mov fsubrs imul sub xor cs arpl sub mov and jne xchg imul jns dec cmp adc adc arpl pop push aad xchg sahf aaa pop xchg mov ds aaa sbb inc push dec dec out push adc jb sub push (bad) xlat aaa lea imul clc shr add ds adc int test nop xor popf jnp mov mov pop xchg jmp aad pushf repnz push fs daa push pop add cwtl aam lret and cwtl or push add inc adc mov push loop push jl mov mov cli das ficompl push push imul mov sub add jae xor mov lods xlat cld or xchg movsb dec sti repz sub add mov push or test jge clc cmpb scas sbb arpl add push fildll adc ret (bad) and mulb push jnp cmpsl mov pop xchg cs mov test nop ret adc xor popf push movsl cwtl or fucomi and or push cmp call in test repz push cltd fwait mov movsb sub (bad) push xchg int3 mov test notl nop sahf in push push push imul mov ret ja and sti in jo add or mov pop sbb frstor lods jge (bad) std lcall imul jmp jnp push rcll aaa xchg js mov adc jno stc add repnz in sub sub or fdivrl lods addb mov cmpsb sbb fldenv pop ret jo xor outsb sub aam (bad) adc and sbb cmpsb sar mov dec push mov popa in cmc data16 xchg clc inc mov xchg mov push shr fcompl rcrb adc sub test add insb inc sahf pop mov lds sti fcmovnb and mov fs call ret pop test xor test sbb dec int xor test xor rorl jns out xchg lds push cwtl xor or jno mov or pop call jg inc adc push (bad) fcmovnbe mov daa loope sbb pusha cltd mov cmp fidivrl jg ret push aad mov daa leave loopne and (bad) shrl xor fildl sarb (bad) faddp xchg xor jl cli int inc (bad) jmp mov adc or sti pushf cmpsb sahf nop sarl pop mov sti (bad) xor (bad) mov or leave mov add or js ljmp test mov push and movsb dec jge cmp aas rcr adc hlt and (bad) jle jecxz or testl mov mov dec (bad) jne dec add movsl push (bad) fs dec test add inc push add ss pop xchg mov fdivrs pop mov insb mov in or std js imul inc sahf pop (bad) mov jle lds aad adc sbb cmp pop cli jle dec dec movsb ss mov sbb repz cmovg sti js dec xlat gs lds fiaddl addr16 add pop in or mov mov movsl outsl add pop scas cmp dec mov test lods cmp mov loop mov rcrl xor shr rorb pop add sbbb adc (bad) mov dec and mov mov shrb sbb xchg push mov and lret cs cmp inc mov cwtl sub lea cwtl sbb xor push scas xchg sub inc js push adc shlb test int dec push std test mov cmc jg mov push and jecxz and dec gs movsb pop test xor sbb mov add lea movsl add mov nop dec xchg add mov ja rcrl adc inc mov ljmp scas dec adc add fistl jge rol xor mov add aad sbb aaa lods scas add (bad) push aas sti push mov mov push loope orw push dec fs loope push rcr mov push stos push aad imul jns inc mov adc sti popf mov push fdivr xchg mov mov insb sbb dec decb add xor mov mov inc mov xor and (bad) lods out ret inc push icebp (bad) lahf and jmp (bad) aam mov lods mov pop cmpsb test pop insb call mov arpl sbb jg dec and xchg sbb sub (bad) (bad) jne sbb ficoml xor add in iret insl test lods repnz mov push push dec stc cmp pusha push mov je jb mov out lods xchg pop pop push hlt in push push dec jp cmp inc dec pop (bad) or iret sbb stos test rcl cltd jg stos mov cmp in mov mov mov sbb ret jge pop ss mov xchg mov mov cmp (bad) in xchg pop mov jp xor repz pop daa push ja popa les fdivp cmp xlat sti jo jl add jno clc aam jbe inc jmp push or sbb (bad) iret xadd lods icebp add scas inc inc pusha cmpsl sub push ret adc loope je fcoms pushl gs push (bad) fdivrs lret mulb sbb and add lcall ljmp out subl sahf rclb (bad) mov mov lds pop (bad) xor mov call xlat je shr inc mov xlat repnz jbe repnz (bad) mov arpl add mov ljmp ficompl xor pop mov cmc in xchg sbb add stos mov or outsl pop lret xchg data16 sbb jecxz bound lret xchg (bad) adc addr16 jb mov mov cwtl stc add add sbb jg jg loopne outsb fwait scas xor (bad) movl (bad) mov xchg mov aad xor fstps stos push pushf jecxz sub in aaa outsl or andl xchg pop leave hlt test fs jb jl pop sub cwtl xchg lea inc sbb mov xchg es and cmp insb xor imul std rclb or insl pop pop sarb lret and add dec dec gs es pop sti das mov xchg mov int3 repz inc push xor mov fistpl punpckhdq mov lea adc repz cmp hlt sbb ds test sbb in popl lcall loop fs cwtl shlb test in je or jnp cmp xchg jbe arpl mov rcr or bound mov pop call nop repnz repnz incl inc inc (bad) jl data16 (bad) adc in cmp movsb jo lret ljmp in test cmp pop pushf (bad) mov ret ret fsubrs out (bad) mov dec pop jmp or sti pop ljmp add stos fwait sarb push pop addl enter sahf push jmp scas outsb pushl ljmp imul ret sbb dec sub cltd mov mov out lods mov jle rcr movsl push mov lret arpl cmp push sbb pop into inc (bad) rclb push cmpsb pop sub cltd mov jb lcall sbb sbb or push push nop mov fisub jg out (bad) iret mov xor call mov (bad) dec xchg mov and dec sbb test ss int3 test (bad) adc mov pop shll fisubrl and aad fwait ret cli adc adc jnp ja sahf dec and movsl cwtl fcomps xor ss imul repz mov jg (bad) (bad) adc dec mov jne (bad) pop test sbb scas in jb repz jg add fadds and mov lds cmp xor insl inc aam pop mov sar mov pop mov faddp cmc mov cmp pop add testl xlat inc or je cli xchg xchg stc fs push imul jp test xor lcall inc cmpsb push call int3 int3 int3 int3 int3 int3 mov mov push jecxz ljmp (bad) addr16 push callw daa (bad) mov pop xabort mov imul pop push sti pop das in mov cs sbb fisubr aam adc pop lahf push (bad) mov decl or outsl bound test adc fwait pop das popa jl cmp pushw jle push mov mov mov push (bad) aas fldcw and leave dec (bad) out xor mov or or jl (bad) pop and mov xchg jg or push fsubs stos rorl push out imul adc inc mov out add xchg iret leave jmp out sbb sahf push cwtl dec popf aaa (bad) xchg jge imul dec bound mov cmpsl test stos inc push (bad) fsubp cs xchg push sub push mov lret xlat sbb fwait cli aam jae dec and sub fsubl cmp je popf cmp pop dec fidiv cs (bad) mov adc out dec in dec mov adc das xor xchg mov imul adc mov stos ss inc jno mov dec xchg mov adc xchg sbb xchg fstpl sub xchg dec xchg mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 or xchg je cld daa hlt jmp mov fdivr enter inc repz clc pop push clc push mov ja gs ret ror shrb add push and pop das hlt out rcll inc adc and mov aam mov fsubl imul pop push xor cmp sbb (bad) clc cmp cmpsl mov push dec inc es mov fdivrs mov in xchg or or repz mov pop xlat sub cwtl jnp add lea loop mov rcll das jbe cmp push mull mov and mov das ljmp insl repz cmp mov push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec in lret jl inc dec aaa jb (bad) insl leave cmc aam fcomps dec jns je xchg int3 rcrb hlt jp and pop and fistpll pusha scas mov or sbb pop and cmp push xor lock repz insl sbb sbb out loopne adc mov mov inc lods dec (bad) das jno fwait cmpsb pop sub push int3 (bad) sbb loope divl (bad) mov mov push xor test jmp repnz inc sub leave cmp push mov repnz mov aad push sub xlat cmpl pop fistpll jmp mov mov jnp sbb pop jle fistl in data16 mov mov outsb or into jle add inc dec adc adc insl push popf rcrl or pop sub add pop arpl xorl add sbb lret lret mov jbe mov sti sbb insb or int sbb fcoms (bad) mov cmp adc push cmpb xchg xor fdivp push arpl and bound mov repz dec bound jne pop xor nop ljmp icebp fnstcw dec loop mov xchg jge inc subb xchg sbb push jae mov jnp adc xchg pop inc cwtl xchg mov ret addl and xor enter mov cmpsl lea dec loopne outsb mov mov stos sbb jns sub ret push mov lea arpl sub fist sub icebp and sbbb pop jp,pt ret repnz jae add push ret cwtl mov xchg adc jle gs daa loopne (bad) xor push insl jnp mov jg fs xchg xor push cmp popa sti divps pop (bad) sbb popa mov punpcklwd push movsl xchg sub gs int lods push jbe or xchg sub stos pop jecxz int3 mov ret or rolb or xchg dec rorb inc mov jnp test cmpsl inc push jo test data16 lcall faddp dec push getsec push out mov mov mov pushf mov mov mov lcall jg mov adc (bad) lock cmpsl jno adc (bad) cmp ret (bad) insl fildll in outsl stos popa in push xor dec and popa and dec and in cld imul xlat js adc mov mov sub pop jbe mov sbb jle or mov inc subl stc and jbe and adc pop mov in adc sbb jmp or mov (bad) fucomp mov repz insl arpl mov mov push divb jp mov or and jg sbb sub int ficoml or add sbb pop push cs and popa rclb or pop jne aam rcr lahf cs push push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov or popf aaa (bad) fucomip xchg movsl mov pushf add std and (bad) mulb mov mov or jmp data16 xchg mov fwait (bad) jmp sbb or mov ret in mov pop add int3 aaa xchg enter cmp jle rcr jp in js mov out (bad) inc xchg lods call push dec int or push jmp mov mov int3 inc idivb es jmp fsubrs ret pusha xlat addl push sub sub lods stc sbb (bad) idiv popa push xchg movsb les add jp into fiadd push insb cmpsl js add cli test add mov sub cli in idivb fdivl lcall movb clc push xchg xchg xchg enter mov jecxz pop pusha cs pop fildl nop inc xlat mov lahf adc add and cld or push gs into in jge xchg fs mov (bad) mov jnp pop add (bad) jbe mov aaa loopne and jle xor mov push lret gs and sub daa data16 xchg pushf inc and xchg inc js mov repnz mov mov std xchg stos xor call sub push xchg dec (bad) mov pusha pushf popf aas out sahf icebp jne cmp add in cmp (bad) lret cmp repz pop fs mov mov es fdivp (bad) push sbbb push inc inc xor mov outsl mov test fcomps lret mov js cld mov mov or cld pop pop cmc mov mov popa pusha pop sub jb xchg dec add rcrb adc pop ret fldcw pop daa gs sar or insl jp psrld loop xchg xor cmpsl xor fstpt stos push sbb popl ljmp out lods gs insb mov int adc insb push xor mov mov and lret or mov sub xor ja ficoml adc imul mov jo jns add idivl rol dec flds push into in lods mov mov stc inc pop jp xor mov pop add lds pop or mov out pop mov cmpsl aad scas daa int3 sub stc push fildl fistpl andl xchg or mov andl movb aaa fisub out in pop sbb lds sbb pushf pop pop dec push fidivl inc cltd adc hlt adc test dec aad arpl xor lcall sbb jge sar pushf sbb lret es inc fcompl fwait xlat imul xchg loope insl mulb push scas add or ljmp xor push push les ret mov lret idiv outsb cltd mov push shrl fidivl mov (bad) mov arpl cmpsb mov mov jl xlat sahf fs add push pop je jb je fcomps lods inc aad lret pop dec add aam adc icebp xor mov xor fnsave sub pop or jnp in add xchg jmp xchg and and negb cmp outsl fmul sbb mov (bad) mulb iret out adc sahf adcl insl xchg push adc gs enter movb mov sahf movsl dec cmp inc cmp xchg push xor adc out cmc xchg (bad) (bad) out (bad) dec cwtl and iret pop es cmp dec ljmp or sbb cmp lds imulb dec (bad) or out jp ja subl mov sti jl fild cmp xchg push cltd jp cmpsb int3 mov cmc std decl and ficom ds and loop sub xor mov imul addr16 push rclb addr16 fisttp push sbb mov mov sub js test mov and push roll (bad) cmpsb fadds and imul cmp fistpl iret (bad) add jge push sub pop pop (bad) cli lcall repz mov fs pop adc in cmp dec push lods call data16 scas add loop inc or lret xchg jmp imul int ss add xor hlt in and int jb stos and arpl adc cmc test jae xor push xchg add pop sbb adc sbb and fldenv pop adc hlt pop shrb push in push inc ljmp les adc mov repz push mov xor inc inc xor mov adc fidiv test dec and pop sbb mov loope push xor push cmp mov adc scas add nop paddusw and push mov dec fldl adc cwtl xchg subb test cmp cli insl or test sub pop xor arpl pop jg stos dec lret inc cmp (bad) cmp scas ljmp sti jnp mov sub jp insl xchg clc push push cmpsl mov ja inc idivb (bad) flds mov insb jb in sbb fistpl pop adc stos add xchg inc enter test mov cmpsb (bad) ffree adc pop fisttp jp mov (bad) mov jle mov xor mov nop movsl (bad) roll push das push fucom daa lret jle mulb add adc int3 neg daa sub push jne rorl xchg iret sbb cmp dec xlat inc aad int3 xor movsb xchg ja nop in imul cltd hlt xor in sar sbb in xor xor insb mov sbb in mov das lods or testb lret push sbb cli and (bad) (bad) stc mov cmc ja fs pop xacquire cmp lock iret jle sti loopne sahf test imul mov pop arpl and rcll mov cmp lock jne movsb out cmc aas push xor lret cmp or outsb cmp add lret es test cltd in in sbb data16 in (bad) icebp lods es movsl mov lret add and cmpsb pop jbe movsl in cmp bound pushf ret lods and xchg lcall push sbb scas mov mov js lret movsb outsl cmp sbb fsubrp std inc shl imul iret cli loope adc incb mov xor pop (bad) stos mov jp add cmovbe jmp sbb stos add dec lods xlat mov and push cmpsb jge popl xchg adc movq sbb sub and and insl sarl sbb and pushf jle pop pop mov loopne or pop lock pop mov aad fcmovbe dec cmpl addb cs sub rcrl inc and (bad) in mov inc leave dec pop pop mov loopne fistpll in adc or or rorl test adc mov inc or popa cltd xlat jmp xor sub fmuls sbb ss idivl cmpl xor xchg loopne jecxz jne inc insb in insb negb mov or add notb (bad) mov (bad) ret pop dec dec clc rcr shlb xchg dec movsl push jno push dec mov cmp loop js pop and pop aad fdivrs push xchg jns pop (bad) lds mov or mov sti adc shrb cmp cs leave scas fcmove daa ljmp aam shrl mov pushl das ficoml ja lcall pop (bad) mov cld cmp dec stos dec into cld push or push push fwait (bad) jne sbb movsb add test add es push test xor (bad) fcompl aam frstor int insb sarb push push data16 sbb jno jno inc and mov xor daa add pop mov or out sbb rorb sarb lea mov icebp xchg rorb add add pusha rol xchg cmp bnd jmp (bad) shr data16 inc jno outsl mov dec inc add mov (bad) lods push in adc xchg pop mov adc jne add or (bad) dec daa lock xor adc cli mov aas xchg cwtl leave mov xlat and mov mov fwait xchg test sbb sbb dec dec or push or mov mov repz rclb jl lock cwtl in lahf mov jp dec call ljmp sahf pop jbe jl cmp and dec enter aaa mov sbb cmpsb insb xor nop daa adcb xchg js ja sub ret sbb pop xchg cmp divb or (bad) stos subl cmpsl loop mov mov popa mov insl dec adc xor cmc jmp and (bad) mov inc cli insl mov inc int3 lea jle jl fadds in fcompl aad xchg mov pop pop aaa lock mov in push loop shlb mov add loopne adc rcrl mov push jbe or js pop mov push std pop push dec mov nop scas sarb push sbb and mov fistp outsl arpl inc sahf sbb jbe dec and or lret pop jno jbe mov jno mov stc cmp mov aad enter sti jne jg jne pop iret sbb stos mov sub iret cli sub bound cld add pop sbb pop and mov xchg and xchg outsl mov mov data16 cwtl mov lahf clc outsl mov iret stos nop addl ds lcall imul push int3 sub fstps insl (bad) mov sti dec adc in sub inc push mov cmp xor mov and aad dec pop gs loop or outsb and mov lret cltd imull pop inc push sbb ret stos or addb push les xchg into mov push and lret sub clc loop mov hlt jae add orl aad bound jno push xchg frstor xor std cmp nop push mov jbe add add lahf imul pop mov lea add bound sub pop adc loope mov aas sbb out in out ds cmpsb pop jae roll aaa ds imul ret mov (bad) mov call push dec jns cli lods inc mov push test pop adc mov ret rcrb adc into sub xor fdivrp lcall aad dec sbb and out push popf mov dec jge mov pop and xchg xchg or push out arpl into dec std inc pop dec rclb mov fidivrl jmp test (bad) inc jmp loopne mov xor std stos sbb out sub movsl mov out roll cltd hlt inc inc loope lret pop and test ss mov aam dec aas sti push daa cmp fwait imul cmp jp stc adc in sti mov enter mov xchg fadds sbb push scas cmp into jnp and in pop es xlat or inc js sub cmp shlb jp sar clc lahf jmp xchg imul sbb or call mov (bad) clc mov sti faddl lods inc idiv mov movsl xlat push push scas sahf and inc adc (bad) dec out push cmc (bad) adc cmp mov push (bad) movsb jns dec mov pop jle fs lds jbe outsl ret dec scas outsl pop mov (bad) je push ffree (bad) dec xchg push lcall aas inc xchg jb fisttpll icebp unpckhps popl pop test out mov aas fbld je lea arpl sbb mov (bad) mov stos lret dec mov adc push fcmovnu mov xor loopne and push xchg mov mov jl pop xlat lret fmull xor es add push or stc int3 lods mov (bad) out bnd fsubp xor cs adc ds xor jae and scas adc test push sub xor cli sbb inc ds sub xchg fsubr sub pop ret sub mov jge jno adc mov (bad) int3 aad cmp aaa sbb out cltd mov bnd add je pop je xor dec repnz in out fistpl push cmp jne mov dec and pop mov sarb xor fisttpl clc and add movsl adcl sbb add lret add jle pavgb test jb stc and mov sub mov mov mov or mov lock xchg xchg sub sbb inc popf cmp ljmp out sub add mov int rorb loop adc insl in sbb mov into cmp jns inc and push adc gs call in (bad) cwtl pop xchg fs repnz (bad) lods ds xor popf add inc stos aam cmc cmp into mov outsl xor or movsl ds push xchg dec cld jbe jo,pt xor dec hlt and andb iret jne (bad) mov lock push xchg lea inc rorb dec (bad) mov mov aam test pusha mov in add add push test dec sub push inc sub dec pop inc gs in jns lods inc (bad) out dec mov test int3 xor add out or scas rcll imul addl aam loop adc cmp add lea dec sbb sbb sbb dec dec (bad) xchg arpl arpl add stos int3 pop shlb mov mov adc mov decl les cmp fsubrl in lods enter mov mov in lret cmp xchg cmpsl call push (bad) sub arpl add push iret sub and mov (bad) and hlt and jnp mov insl pop xchg cs test jmp dec (bad) adc adc sbb mov test lret dec push fs sahf (bad) mov xchg jmp sub xchg fimul arpl jle xor lcall and outsb mov iret aas push mov arpl shrb out repz stc test cmp xchg out mov jg xchg inc pop out dec cmpsb xor das arpl cmp (bad) mov jl xchg pop outsb xlat sbb pushf in inc jl sub mov ja mov pop lock xchg aas orl pop cmpb add jo sbbb xchg addr16 ljmp (bad) popw pop cmp xchg add add jne mov imul mull data16 in mov add arpl or insb push xchg mov ds in jl pop fwait push mov cmpsb imul cmp push lret jmp sbb xor lret fwait mov ja insl mov mov outsl (bad) dec stos inc jle xchg cmp (bad) dec ds xchg rcrl mov popf out push xchg daa cmp les bound cmp lea add dec aaa jbe pop scas and je xchg jp sub jmp push mov add hlt and icebp outsb xor aam ret out jo rolb or pop jl (bad) mov in xor sbb adc jbe xor std stos xchg mov lahf sbb outsb loop cltd inc nop popf or clc pop mov add cmp mov loope out xor int test inc sarl mov sub xor std repnz pushf cmpsb sahf nop test sbb fsubp lods pop dec and mov xchg add outsl loope out js mov adc inc dec push out lods into dec mov pop and clc add xor push xchg out rcll gs jnp in ret nop cwtl dec enter mov test fmuls inc popa jp xor test xor pop inc dec ret sbb enter and int (bad) icebp inc push and jge,pn add jbe fwait pop in mov push or imul out out adc les lret push ret push cltd rcr cwtl js jne dec inc jg xchg test punpcklbw dec iret mov xchg and (bad) add push leave scas bswap mov push adc call lds ffreep (bad) lret pop int3 (bad) xchg dec insb test jl (bad) and xchg inc std hlt ss xor and (bad) mov sub (bad) fsubrp sti dec add xor cld loopne js (bad) sbb loop ficoml and int and jae sbb sub or or jb out loope nop jg movsl xor cld jbe mov fs xchg out mov iret stos cli (bad) mov (bad) jb cmpsl ret jno cli stos xchg inc ss enter xchg fistpll xchg addl mov int3 sbb cmp out and out push out mov shl leave and jp xor ja in icebp stos mov pop mov in iret ds xor in mov mov stos xchg ret cmc pushf and mov aam fcoms mov movsl dec xor or xor imul mov xchg fdivrs fucomp aas mov int3 push sub lahf push popf pusha test imul push push icebp int3 jp loope lods hlt lock sub xor and mov xor loope js das test mov test add outsl dec cmp push push iret adc imul inc xchg ret sbb jle sbb hlt mov cmc fcompp sahf es ficompl enter stc out gs mov xchg arpl lcall negb pusha adc push sbb movnti shrl outsl rclb sub aaa (bad) xchg xor sahf ret inc inc dec mov shrb push iret jb pop sub adc fimull popf ljmp bound inc xchg into in pop adc test xchg insl cs xor inc fs xor cmc fcoms addl pop lock inc lock in (bad) (bad) stos mov xlat jl jae mov psubd dec cmpsb outsb and jno jno push arpl fildl js clc adc mov mov in bound dec in cwtl inc sub hlt lahf inc shrl cmp mov clc iret jle aam add sbb mov mov jb insb imul loopew lods insb jmp pop xor mov (bad) jnp ret scas (bad) ja pusha mov imul mov sub mov xchg inc pop lahf enter (bad) mov fstl cmp and push pusha (bad) jbe jge jns,pn mov adc sbb or xchg and ds int3 test int mov ja (bad) mov xchg lds adc dec xor pop les xchg inc pushw mov fisub aad or sub leavew fwait mov test jl lret add test stc test adc cwtl mov rorb cld pop andl cmc or leave pop ret mov and mov (bad) aam insl insl mov (bad) (bad) (bad) loop or lods mov test pusha pop xchg inc mov jne mov adc ds mov jle sub jne mov push enter push mov test push mov js dec inc pop bound xor mov push cmp mov loop jo cs jae out push cld ja dec stc pop mov jl lds in repnz fbstp inc jge iret dec sub and cmp xchg mov lods and dec ja (bad) sti push sbb add aad adc pusha icebp hlt imul ljmp or cmp test pop lods popa int3 xor fist icebp dec loop xorl hlt adc jmp mov (bad) mov sub dec outsl mov shll flds push setg dec leave (bad) jle add jge das mov push shll aaa xor sahf xor add push fs push movsl test sub cmp push or enter fsubrp push ret cli cltd stos imul and ja pusha rorb push andb je lds out cs jmp fisubr jbe movsl mov rcrl or dec fistl mov cs or pop pop gs push dec sub adcl and jae cmp jp aaa fwait push adc xchg lret mov lcall push mov (bad) iret mov es shlb push fimull push sbb mov push mov lcall mov rorb mov in cmp cs mov sbb cmp pop pop mov fmull into push xor push scas mov sbb (bad) mov push jmp out push push cmpl insl gs mov push mov (bad) jmp push rcrl ds dec cs negb into imul inc and xor mov pop pop xor imul scas out jmp roll mov mov repnz mov (bad) lock cmp daa push adc mov dec pop dec jo pop icebp lcall popf sbb adc adc sarb std out cmp fnop aas out cli add xchg sub call mov adc cmp sub lods and lahf es inc mov es or xor pslld cltd popl xchg nop xor fisub fstpl xchg and mov dec repz jae (bad) xchg mov sbb movsl inc mov jb insl in mov shr lea test xchg loopne mov xor pusha addr16 xchg insl and push cmp xchg gs xchg fisttpl rorb jae cmp fldt ds cmpl xor and movl xor add insb or aas pop xor (bad) mov ret xchg adc es sub cwtl mov (bad) lods jl data16 rol dec jecxz inc sub mov test ds lea (bad) repz jnp test mov (bad) loopne test jo push pop push cmp push and xchg mov cmp test push cmp pop movsl xor dec fldcw les and in jg mov adc mov inc js sbb idivl xchg xorl xchg int insl sub push call sbb iret cwtl add jl (bad) aaa or and outsb sub push iret inc xor ror nop fisttpl lcall (bad) sbb imul les inc inc repnz sti cmpb (bad) out mov scas mov inc outsl lret jp stos jl inc pop xor fsub dec movsb clc sbb mov lcall jmp jne cwtl jae,pn movsb mov das aad xor mov cmp gs xor pop xor jne add mov test sub nop sbb int3 bound lahf hlt jle inc out lahf aas pop or jns aad cmp sbb xor arpl aad cwtl push lret cmc lret pop pushf repnz pop dec popf fs std xchg pop fsts cmpsb pop mov push push sbb rorb sub adc cmpsb ds push xchg orl jnp fildll jo or jge sti jae (bad) xlat sarl sti aam sub (bad) sbb sbb push sub mov and pop lret push push and jbe or inc push sar lahf cmp ja out clc pop aad add jl fs popf fstpl add pop sub dec cmp sub mov and push push std negb out xor in inc xchg int3 (bad) icebp mov ret add cwtl add lods inc or cli cli push pop mov push bnd sbb scas (bad) imul (bad) fsubs movsb in push les push in sub das push or jp fwait or jo xchg add out movsb dec xchg imul cmp fwait jnp and and xor inc movsl or cmp add xor xor jnp jns movsb and leave arpl repnz xorl (bad) or and push repz sahf popf mov dec lret loop cli cmpsl int3 add lds push es mov sub push pushf adc scas lahf js (bad) scas xor bound push mov loope add das punpckhbw pop push fsubl decb dec repz pop fiadd jge lock test sub loope mov mov or xor loope sub adc imul ret sti push cmp adc call and jmp push add dec icebp loope dec push mov imul ret je jge push (bad) into icebp dec pop andb xor mov int xchg dec xchg or xchg fimull fs push mov inc outsb cmp hlt xchg push and int3 ljmp jnp jbe fcoms loop sbb test pushw inc lret mov push popa jg adc lods les mov pop jbe insl cmp xor repz add sub mov inc pop jne lds adc (bad) repz mov or mov pop add jno adc push aaa adc jns ss sbb mov mov xchg je and fwait (bad) xchg jecxz lods icebp leave ja rclb xor dec lds popa fmuls (bad) or add sub dec jge or cwtl sub add jns dec popa adc or rcll jnp jo dec pushf into ret cmp popa sbb int3 dec popa cmpsl add mov call and imul mov cwtl dec cmp push sti cli cwtl pop and hlt mov pop push out sbb push mov sbb dec pushf ljmp fisubl xor and outsb (bad) outsb adc aad mov cmp jae push cli inc aas test pop cli jns aaa dec shr cmpsl insl add or and jecxz sub shrb scas (bad) pushf arpl mulb jae loopne lret and (bad) hlt es imul popf push mov scas dec or cmp lret inc cmp inc (bad) push inc push and das stos sbbl jecxz aam and iret and inc mov lahf fcomi push adc in aas mov lahf cltd repz jae mov cmp in int3 sbb sarl ljmp jle scas fwait bound lods add jg (bad) adc or sbb push nop mull je mov fisttpll xchg xchg sarl (bad) scas pop xchg cmp int3 sub addl leave pop test fildl cltd pop or rcl in jbe cmpsl sub ljmp notl mov ficom dec data16 mov lret add lcall pop test pop stos bound hlt dec aaa adc lret aad pop loope cmp xchg dec int3 sbb push test inc xor push sub sub fbld dec in and insb push cld push jg push lds outsb pop xor push mov aaa lcall addr16 lret pop xorl cld or mov mov xchg adc sbb fnstenv out mov push xor (bad) xor mov repnz scas xchg (bad) (bad) ljmp ds mov in jnp push sub mov push sub jo es and mov inc nop push jns sbb push cmp pusha mov mov icebp int lock mov dec adc sti mov je loope movsb aas ret out mov mov mov dec sbb push data16 dec adc mov adc leave pop lock dec add sub outsl dec (bad) add int3 xor dec in or scas cmp pop jmp mov (bad) xlat jp push gs inc jnp mov sub adc mov inc in xor in enter jnp pop mov enter popf sub iret xor jae mov test int3 pop arpl mov xor mov sti sub pop iret jnp xchg outsb mov add (bad) jmp rolb inc or cmp or cltd int3 sbb or clc stc shlb sti sbb lcall push rorl (bad) lds xor jge popa mov xchg sub outsb and dec jb jno out imul pop mov mov enter mov sub jge xchg xchg inc rol aam out lea inc dec repz cmp gs sub dec cmp and or test incb cmp aaa or repnz shrl insl aad and add cmpsb mov lret pop mov movsb adc mov or inc mov adc adc daa and jno xor ficoml cmp (bad) scas rclb push inc inc pop out lret pop sub rorl mov clc and mov (bad) (bad) stc mov movzbl out add jl (bad) mov xor in pop adc dec (bad) cmpsl sbb leave cmpsl lahf adc sbb negb (bad) popa lds mov in mov imul mov fs xor mov imul sbb cmp mov (bad) or (bad) pop popf mov jno pop fistp inc add xor add pusha (bad) js inc lret lret xor pop stos mov add or in fmull dec cmpsb (bad) jecxz push add in fstps test push sbb mov jo mov outsb lcall arpl cmp pop movsb and clc mov dec sub or lret scas movsb mov les rol add ljmp aad js icebp sub in repz pusha mov lds jbe jmp (bad) fadds mov and push xor (bad) in xchg xor mov stos push popf idivl dec xchg lods (bad) lock add lods enter push fisttpl leave out xlat mov mov fdivrp aaa (bad) leave aam xchg in xchg out lods mov mov addr16 xchg or ja pop sub sub xor add mov jecxz cmp clc je imul rcrl (bad) cmp inc insl rorl and fist call mov lods popa hlt mov xchg or adc xchg insl int3 in es inc cmpsl test dec cmp xor jmp xchg ret adc lret mov out jo mov aas orl cli push jae pop mov adc or sahf or inc jns dec jle (bad) xor lods cmpsb (bad) mov xor cmc stc push inc xchg mov and clc adc mov push repnz lret repz xchg mov pop jae jg lret adc jge adc and adc negb inc jmp cli inc iret cmpsl mov mov pop add push jecxz (bad) mov (bad) lea adc in andl fwait daa mov dec imul xchg scas insl call inc aas push imul or testl std iret pop xchg push xor mov stos mov fcomp add mov outsl stos add pusha ja xchg lea insl sbb cmp loope push (bad) leave lods lcall outsb jno sub call sub pop movsl pop dec bound xchg pop xor and mov sub repnz andl xchg fwait pop scas aam xchg hlt enter pushf (bad) sbb movsl xchg dec pop ljmp xchg push jno mov out stos or test mov or (bad) mov std cmp push add orb xchg rorb test or xchg out in mov scas les pop fs loopne scas jmp xrelease cmpsl mov lcall and cmp insb or cmpl sahf or cld sub popa bound add sahf cmp inc int xchg dec cmpsl push pop shll pop ds xor mov cmc sub dec push adc mov imul insl xor pop mov rolb scas aam inc mov roll sub pop lahf mov cmp sbb ds repz jmp xchg orl jb aas pushl out enter mov adc imul xchg xor sbb mov adc pop test mov and insb add xchg js in popf call ja (bad) out pop les jno push jmp das and pop adc jecxz push inc loope xchg and gs loope insb jnp loop fldcw mov inc adc push cmp jnp jp insl mov push inc mov imul hlt pop dec aas sbb cmp dec cmp std pop xchg in in movsb mov inc outsl sub add inc lods push ds scas push inc or pop mov mov int3 scas popa cmp dec inc inc inc adc pop pop lods pop mov in outsb jnp int scas les mov jl inc repnz out int3 mov fcomps sbb pusha lret fs mov rcrl adc int pop leave mov jmp orl lahf xchg in xor iret cmp test ret xchg cmpsl leave aad and aam cwtl les lds repnz int int3 xor xor imul dec cli sbb outsb add aas add into xor xorb mov (bad) mov jg into fs xchg mov je int3 push inc lret sub pmuludq fstpt inc icebp je ja cmpsb das lahf call sbb leave cmp push jb mov movsb out mov cmp cltd xlat cmp outsl xor xor cli inc leave cmpsl out fwait mov rorl inc jo outsb sti (bad) mov xchg mov jno (bad) dec stos pop inc push jne mov aam std lds (bad) inc pop mov add xchg (bad) repz pop test mov fbld sbb fdivr clc sarl lcall pop test mov add sbb out sbb cld xlat fildll int or test dec stos mov test (bad) (bad) xor xchg test ja xchg call or push call test or repnz repz imul jmp jmp into push ror rolb and push rcl ja out push outsb les lahf or or mov pop inc jo sti sbb push aas and pop xor cli inc sbb mov push addr16 mov push int3 and out inc fstps xchg mov sbbb iret push insl loop aad mov cwtl mov ret fildll mov add std pop inc lcall mov lods in pop jae test data16 push iret sbb ffree and sbb mov dec in mov xchg xlat push bound bound add add lcall lret xor dec pop mov push (bad) jl jbe paddsw js aam jb pushf repz jle or out jmp push xchg mov xchg call xorl jp mov push rcl clc add jne sbbl sub jmp aad hlt lods and mov mov cmp adcb mov pop fsubs mov push jge xlat iret out adc sub (bad) and xor push icebp test shlb sbb sarl (bad) or inc mov fsubr fnsave mov dec inc mov mov imul fisttpll inc sahf cmpsl shll loopne xlat loop shlb mov mov inc dec push jne push ss push movsl dec cs push mov pop rclb cmp add cmp mov ja out cwtl subb mov dec adc ret and cmp rcrb sbb or test into shrb sbb dec lret cwtl nop ja ret dec mov mov adc inc mov enter inc inc test mov pop and xchg loopne mov test add xchg dec add enter or mov xchg cli lret mov out fisttpl ss jge dec push out lods sub sbb or rcl push cmp shr mov and divb pop mov push fmuls mov xchg pushf mov and mov loope int3 cmp shrb addr16 pop jp ficompl mov test add mov int adc jae xchg cltd in cld repz arpl inc fwait cltd cmp out lret test js sub or jmp push mov fiadd xor adcb in daa movsb movsl inc cmpsl outsb xor test mov addr16 loop xlat test mov out mov je test lret xor mov mov pushl call push fistpll push cmp inc (bad) mov in mov mov les push xor mov cmpsb data16 int aad insl jae adc (bad) lods sub xchg or cmp mov dec es outsl imul xchg insl ljmp pop dec push out inc jle (bad) cli fdivr sbb mov xor adc adcl pop xor mov jbe lret addr16 aad add dec movsb mov insb and push xlat int jle es add pushf mov fsubr sub sub xchg test adc ja pop call leave orb imul push and or addr16 lea stos mov cltd repz lock pop test jnp xchg addr16 fimull ja loopne out fcomps jmp mov sub mov fadds mov sbb xchg mov movsl enter (bad) stc test fcoml jb jno out push pop aas inc rcll push sbb sub xorl sub mov popa ret mov dec orl (bad) xchg mov clc jnp into and and in lcall (bad) std fwait jnp arpl out icebp add cmpsb mov jae fisubr fs lret lods lds lret out test add repnz icebp sub mov or (bad) push and pushf jle mov iret test xor repz add adc sub addl jl popl inc insl push and addr16 out xchg fcmovne sub movsb sbb and popf lods scas mov push xchg sbb mov xor pop pop xchg cmp outsl enter inc sub loop sub push loopne mov sub pop or nop lods xor push and push jb fwait jg or hlt xchg in mov jne inc jle xor test cltd ja test fsubl adc fcoml repz mov repnz ficompl sbb cwtl cld xchg xchg mov push pop rcll cmpsb scas or adc psllq jo push out adc jb enter test cli mov rolb cmpsl or jne fild nop dec jmp sub push xchg push outsl mov adc and jmp push clc mov enter (bad) iret test push mov xchg movsb xchg jmp insl cmp cltd jmp jne and xor scas sbb xor pop test sub inc aas or adc into enter cmc inc in loopne or mov xchg ret xchg loopne jl,pn gs cltd (bad) les ljmp sbb inc aaa mov decb sbb insb jle pusha in sbb testb test jle rolb daa (bad) fisubl movsb jmp scas int3 std sahf out cli and pop xchg fucom into cli sbb push lods adc test pop xlat mov into test cmp shl (bad) insb cmp push adc push mov call jb sub xchg cmp mov scas add lahf imul xor adc mov (bad) push push sub out insb imul into lds fistpl add ret out std push test aaa sbb xchg inc mov or leave pop (bad) shrl ret pop mov insl pop mov cmp and pop sarb or inc sbb cmpsb and sub sbb push daa xchg push mov push sub inc fstl dec add in sub call mov jne fstl cmp xchg lahf addr16 mov es mov lds nop xchg push aam add mov jo adc pusha gs test push dec pop enter inc movsl int3 call xchg adc ret je aas and cmc jmp imul ficompl mov out jg jnp bnd and xchg xor jecxz jp cmp or ss (bad) xor mov pushf cmp sbb mov lret adc dec cld cmpl xchg inc dec cmc pop pushf fnstenv xchg push adc or test jns psrad or pop rolb xlat repz fwait jae pop enter arpl cmpsb pop imul dec (bad) fldcw int addr16 ds shlb jbe jmp sub cmp push xor hlt sarb xchg cld and inc loop or addr16 repnz or iret mov inc ja mov jmp iret loopne xor sbb mulb fidivrl ja dec jbe cwtl pop mov sbb cs ret push add mov in cld mov (bad) repz sub sub icebp sbb xor mov in add ror xor add jge dec insb xor addr16 inc jno push fsubl sarl div push add and or fwait xchg dec (bad) mov xchg icebp adc sti xchg sbb jae mov and or es js pop aaa dec sub lods mov and js movsl lret and sub mov leave (bad) dec lock in cmp pop pop scas push dec cs sti mov sub jmp or scas dec mov call aaa jno mov mov xchg int3 push xor lcall testb scas adc ss cmp xor xor jl pop mov pop jp jnp lret dec xchg mov add xchg (bad) or push sbb xchg (bad) bound in jecxz xor sti jo or aas mov pusha clc test dec push lods push cmp and fsubrs push sub hlt cmp mov add movsb xchg pop mov fiadd xchg push inc je pusha jmp ja pcmpeqb and lret inc (bad) rorl imul shlb xor out stos sbb das cmpsl push (bad) fstl xor adc (bad) mov inc clc lret sahf movsb pop xchg lock cmp dec jg outsb fcmovb lock ds rolb mov int test dec sub loope xchg int popf pop cli shrb mov iret push xchg aam mov mov xor xchg xor mov sbb adc or sbb mov lret scas mov jl jmp sti and in push dec lcall outsl out and arpl negb push mov inc outsl idivl xchg jb mov push cmp dec popl mov dec je sub push aaa test addr16 jb popa sub sub outsl xor cli bound ret adc call lock sbb jno leave scas jmp outsb in sbb xor sub sbb (bad) inc and outsb loop xor jno cmp mov ja dec test pop icebp jae xchg adc sub movsl and movlps test xchg popf sub pop test xchg mov pop inc sbb (bad) dec test loop sbb mov jnp mov loope jnp xchg hlt icebp jae bnd cmpsl lcall xlat bound mov mov xchg popa sub adc jae mov in repz sbb xor xor or xchg push sbb ds mov adc cmp je (bad) test gs push push inc sbb nop xchg (bad) mov cli hlt dec xorl or dec pop and add jno or xchg (bad) mov xor cmp rcrb popf jbe dec int push rcll adc (bad) fsubr cld pop out cmp lahf outsb in arpl lcall (bad) ljmp pushf lahf clc out sbb (bad) movsb xchg imul lock lds adc pusha shrb int3 push xlat sub repz or mov mov test test pop pop adc loop cmp (bad) mov or rclb jae (bad) mov adc jp ret lock xchg (bad) push pop lds adc cld add xor pop or xchg adc (bad) out fistl (bad) out pop inc mov fs mov fbstp dec xor xchg jmp sub lcall dec and jmp and lods (bad) mov addb in std sub leave lcall dec jae mov lock icebp fdivl xchg test out (bad) jbe mov fiaddl lret std mov push or leave or sub pop xor sub insl and ret push loopne mov or add dec xchg out cmp pusha cwtl pop jmp xchg xchg push in mov scas addl xchg (bad) sub fistl cs jl out ret insb rcrb mov incb jg cmp jnp popa cmpsb xchg xor or add push mov imull and sub dec or sub xor bound sub mov popf push test mov sbb jno addr16 lcall mov pop cmp lds (bad) stos xor lock rolb add sbb imul sub lods in dec sbb add (bad) pop and xchg sub push std ror xchg xor (bad) popf jb dec push movsl pop cld cs pop loop or sub push aas xchg arpl cmp sub sti xlat xor push dec adc mov jg arpl xchg lock cmp sbb adc repnz mov add ss jecxz test pop xor push dec inc mov adc fcmovnbe sub lcall pop mov xorb or lahf mov sub xor mov jp cmp test or pop sahf add add jo dec mov fisttpl dec sbb arpl stc pop in popa cltd inc faddl loop clc stos cwtl dec call lods mov push jnp cmpsl cmpsb pop xchg icebp outsb mov push or (bad) jl ja cmp mov sbb rorl dec (bad) aad ret call outsl loopne mov add and push test pop hlt imul pushf hlt popa sti ds aam xor repnz fstpt mov push sub jae push add cmp (bad) mov fcoms outsl loope mov vmulpd or idivb mov mov stos lcall pushf xchg cmp sbb dec adc lret jnp test je mov out outsb inc xor jo xchg insb je andl mov xchg xlat sbb call ret mov cmpsl xchg dec iret adc add mov sbbb push add mov repz aad sub fisttpl lods xchg pop sbb lods cli inc shr imul mov out daa pop push inc xchg push cmpsb stc lods sub pop sub fstps imul pop jmp out and add js mov inc lret inc pop out and hlt mov cwtl xchg pop test icebp out inc rcrl xchg out dec xor xchg gs inc je lods sahf xor xor stos add lods adc add xchg iret sub rol push into cmp aad jnp push jg pop jp mov enter jmp int3 cmc stos mov jae cmp dec add jbe jnp fsubr push cmp femms pop push test adcb push jecxz shlb inc sbb or adc sub mov push cmc sti mov mov jl xchg pushf loopnew pop xor mov sub sub fwait mov (bad) xor mov cwtl dec pop mov mov push out (bad) push test push outsl and mov shrl xchg jle leave insb inc pop fstpt xlat ret add (bad) ficompl push jmp test aas std mov outsl pusha inc (bad) movsl dec mov push int andl or idivb ds (bad) scas xchg ret jp cltd sti push xchg lcall xchg add repnz mov mov sub imull bound cmp lcall push jns adc lret inc cmp mov xchg sub and pop xchg jns and xor dec dec jmp es test jo cmc push testb adc adc jg push gs rcll jecxz stos add and pusha mov push std loopne data16 inc daa stos std jg xor out xor mov rorl jno jno dec mov push pop xor test pop jecxz ds (bad) loopne pop int int3 jns xchg sub mov mov mov pop js sbb popf out pop dec pop rcrl test cmc cld xchg jo cmp mov loop xor inc adc aam addr16 sbb mov popa mov arpl in out mov mov mov movsb or cmp js clc clc xor push outsb sub adc fidivrl cli mov mov xlat sbb xor loopne adc jae push xor mov mov mov xchg sbb xchg mov sub push insb ret or jae fbstp mov xchg add jne idivb inc adc call jmp mov ret sub outsb out je dec enter (bad) test or pushl fs imul data16 repz xor cmp bound mov dec int pop pop arpl sub cmpsb pop out inc pushf jnp add add pushf xchg outsl and and (bad) sub sti cwtl std (bad) cmp jg inc jns (bad) push cmp (bad) int3 mov fadds insl loop mov lods jo out add aaa add push fistpl (bad) cmp pop fistl or mov fs jmp xchg bound enter ljmp pop iret push cwtl fcoms cmpsb jle stos loop outsl loopne xor fild dec es shlb dec out test lock mov arpl sbb sub mov cld cmc outsl mov mov fcmovnb jno mov shr sbb stc outsb pop push mov mov pop push lahf mov dec xor mov mov cmpsl mov test out jno jp or cwtl popl pop stos xchg and cbtw xlat xchg imull mov lock fmull fldt add jecxz scas push aad sbb add in mov dec jle leave popa imul and push clc psrad dec into fildll mov in mov mov jae adc enter aas cwtl (bad) sub mov jp pop stc arpl cmpsl popf jb lock clc pusha sbb or in lea add cli sub inc add loop mov mov stos out dec cmp aas mov pop or out dec and push push add add aam jae ret dec jle jmp arpl add in xlat in mov cmp xchg inc ficompl gs aam lods fistp (bad) in fucom sub cmp or xorb pop sub jecxz xchg nop imul add push scas gs xlat mov pop cmpsl mov mov jl sahf push (bad) divb or aam pusha in loope icebp aad mov ds adc xchg clc mov push mov les push test inc sub andl popa es js insl (bad) pop dec aaa cld ret pop jle gs xor inc sub lret add add mov mov xchg icebp push inc jae cwtl mov call inc push fist dec and push test cmpsb (bad) (bad) sbb and int3 mov or xchg leave pop jle stos push lods mov lret dec and pop sbb add scas fnsave dec test inc enter (bad) sbb fisubr repnz pop jge or imul xchg rclb and jg mov es jp fisubr push aam hlt subl jno (bad) stos aaa pop (bad) sub xchg mov pop (bad) xlat dec jno pop dec outsl call and aaa mov pop sub xor (bad) js and dec xor sub xchg sub jne (bad) cli fstpl in xor pop pop out push cld fcomip clc imul sbb test dec (bad) lea dec mov push cmp dec push fs enter popf loop int in push mov lock insb jmp push and js jno or scas mov ret sub incb sub jbe std sbb bound inc neg das cs lcall sub and test fs es (bad) push add or out inc fs scas popf rcrb in lds ret cltd fwait push out fnsave hlt inc fbld xor push ret xchg sbb dec mov fild ljmp fdivs or and or sbb rcrb arpl jns mov ss pop ret add (bad) pusha jbe js xchg pop in ja mov loopne scas sbb test fs jns aad lds bound pmaxsw xlat ss xchg ss sti and jns mov jnp jns subl ljmp pushf jno das neg fucomi movsb cltd pop xchg pop mov and pop dec xor push fdivl inc jge les aam mov xor sti outsl outsb mov add lahf dec shl (bad) hlt dec pusha test in and inc je mov add loopne jae pop les mov aaa mov (bad) dec lcall xchg and push pop mov (bad) loop cmp cmp cld neg test mov outsl mov push jnp adc push outsl popa insb jo cmc mov mov mov cld repz and mov leave lds (bad) pop insb lcall pop jnp (bad) loop (bad) or jmp mov xor fcoms movsb dec fistl rolb cmpsb mov lea (bad) ret dec jb push jbe mov fstpl call mov rcrb inc (bad) lock lahf xlat sub cmp fadds sarb fmull cmpsb aaa add mov cli in ds push scas push ret int inc cmp mov push sub aaa dec xor cld jle mov test sub test jge pop pop dec lods mov xlat loopne je fildl insl jge leave cwtl fstpl xchg mov jno mov cmp (bad) (bad) hlt das movl or aam jae mov mov loopne mov (bad) dec hlt xor and cli rcr sahf mov or nop mov add xchg sahf roll call mov js popf icebp pop out insl test xchg sbb push aam call pop addr16 adcl loope adc (bad) pop (bad) out call repnz xlat cmp pop (bad) push inc mov push inc outsl stc loopne xchg sub stos xor cmp push xor or xchg jmp clc pop (bad) dec xchg dec xor sbb and jne or out add insl gs das repz sarb mov loopne je mov insb ds mov inc subl or mov cmp sti mov scas ss sub aad inc mov push push imul movsl ret and stos xchg fwait xor shrb jecxz mov js adc mov imul in das or mov mov add ja imul adc mov inc lcall test jbe loopne sub push xlat push imul mov lds fimull sub dec ljmp xchg adcl inc nop dec jp stc xchg add mov ficom jmp and leave mov test add push and add sub arpl mov test cmp pop mov xor jb cmpsb dec movsb sub mov (bad) pop dec movsb push xchg mov in mov push xor push dec (bad) mov and pop sahf cwtl iret cs (bad) and sbb xchg push or out pop ds das sbb dec inc outsl std repnz cltd mov xchg insb jnp mov sub lods cltd in aad mov (bad) push push push push push iret add and loop jl jo fstl es mov xlat xchg add sti nop xor scas loop push add shlb arpl cmp movsb jb aas or xchg icebp jne lock loope lret pop mov dec lret pop push mov lret stos icebp fidiv rclb hlt jmp pop mov cmc cs mov cld mov lock lret jl jb ret mov sti addr16 jne test push mov add sbb fistp adc cmp or xor les sub std mov sti or call xchg ss xchg push add in lock and jb sbb icebp push and rolb mov and aam les aad xor mov inc inc pop movsl and mov rorb push xchg xchg ljmp mov mov mov push data16 adc push mov mov pop dec outsb dec or adc addr16 incl out test xor daa pop iret jg xchg pop clc iret mov sub loope inc sub or dec ljmp xchg push mov inc jl jl push pop adc pushf and inc out cs inc push dec xlat (bad) out lds mov and sbb (bad) or or sub push adc pop (bad) cs fwait mov inc dec lahf inc je or fisubrl mov jno or add rcll and xorl fcomps dec inc in or mov push enter fildl ja rcr mov adc cltd mov mov push pushf xor sub adc inc mov ss dec in aas sti xor inc lds sub jl xchg xor sub in lods jle mov pop repz sbb (bad) push cmpsl insl ljmp dec or mov in dec movsl js and nop mov daa popf mov jbe mov pusha out cmp xor (bad) (bad) in popa in out dec jbe push movsb fdivl inc and inc aad gs rcrl mov xchg mov int3 ja and test mov icebp loopne fs jl and push or addl jg pop leave les pop outsb repnz push lods inc movsb cmp out lods push lods lret mov xor sti fwait push mov sahf inc outsl hlt mov jns rolb xor pop push insl data16 or and jge xchg xor int faddl jns (bad) sbb push and jb sub rep (bad) stc aam aaa mov loopne add jg fnstcw insb mov cmpsb call mov push mov sarb xor mov cmp mov cld nop push push jnp xor inc sbb fistl add mov jnp push adc dec (bad) stc mov xchg xchg pusha fdivl push and mov ret cmp ret push inc sbb imul lods sub push ljmp rorl jmp jo sbb shrl xor stos and jbe pop xchg mov cmpsl xchg mov aam jmp sub cmpsb push dec pushf mov enter sti mov push mov add (bad) fcoml mov or cmp (bad) and dec inc jle lds sub inc and in (bad) scas xor fnstcw cltd fistl dec adc or (bad) into mov cmpb sub in insl fmull pusha cmp movsb jae and pusha mov (bad) jl fdivl cmp gs mov in mov (bad) cwtl imul imul bound leave xchg push xchg int and fstps push jnp scas jp sub ret xchg cmp or push out sbb xchg add adcl loop inc ljmp jne cmp mov cwtl movsb into mov outsl xor popa or sub push (bad) sbb cli test les bound xchg or mov pop jns sub (bad) iret pop xor scas xor xchg jg xchg fcoms lret push lea or xor in mov std mov loop fptan mov push cwtl incb pop insl mov ret inc cmp loop out xor pop push pop mov outsb add jae jmp mov enter sub (bad) pop sti mov push mov ljmp mov mov in push out rol jp stos inc ss inc push in inc xor mov pop cmp jbe and mov pop mov sub jno,pt scas jno jns or aaa jns push cmp sbb das fbld es and les add in lods frstor or bound xor jl sub cld bound test nop sub pop bound pop add imul add sbb push ja out scas clc (bad) add sarl cmc sub push pop cmpl (bad) sub push les pop mov fcom mov insl gs enter rcl (bad) mov fcompl pushf xchg jg xchg gs aad (bad) jae mov (bad) mov (bad) sub mov sub mov dec sub push mov adc movsb jb lret jae dec out sbb inc jl in lret push xor fucomi ja or test shr dec cmp mov add cwtl lods inc insl aad pop sti fistpll js cmp jb cwtl xor cwtl (bad) jno test pusha out leave cli fldenv sbbb inc mov cmp shlb rol mov mov mov arpl insb jge in jmp and mov mov into pop mov addr16 out mov xor (bad) in cmp js sub mov lcall int scas fbstp sahf mov or loope cmp call sub lret mov inc sti mov push push push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 fisttpll adc jmp add inc jo xchg (bad) push stos jno frstor (bad) popa fsubrp daa cmp sub sbb add cmp adc fs negb sbb pusha icebp jb cmp repz out and lret jmp push cmp or push mov push stos jecxz add xor xor in pop inc jmp out mov cmp lods add imul cmp mov scas dec cmp sti ja in rorw or dec pushf fstpt sbb sub outsb mov fbld and adc xor mov roll mov sahf daa movsl push fsubrp out test loop mov repz enter leave fmulp hlt dec cwtl aam inc mov jmp in lahf jbe pop repz mov (bad) pop (bad) ss outsb outsl mov push sahf ljmp cld hlt test lret scas leave into cmp dec cmp fyl2xp1 pushf sbb lret (bad) leave cs insb sbb test aaa bound cmp jmp shr xchg leave adc xor test add mov and mov aas xlat fcom pop or cmpsb xchg js jp cmp xchg ret lock add daa xchg xor add xor inc popa out pop cmp xor mov cmp jl jbe cwtl or or jmp adc lahf in sahf cmc jbe cmp out test and (bad) cli sub ret pop (bad) jno rolb ret or dec in cmc std push or fnstsw or mov shll fidivrl push jnp fcomps in ja or in sub cmpsb hlt jnp add add addr16 cltd sbb push add shrb cld jb jge mov xor js and or outsl rcrl sahf cmp mov mov jae arpl push push in sub (bad) lods mov out ljmp xor cmp imul repnz mov mov and sbb dec xor xchg leave xlat inc sti cmp ficoml push in push ret test (bad) xchg mov je call mov add mov cmpsl cmp flds lret xor fist xor iret jnp rdtsc and mov inc add sub mov es sbb mov jne sub iret enter bound xchg andl xchg mov sahf or leave jmp daa (bad) cli jmp data16 cwtl fcoms addr16 pop push out insb stc jmp jp mov jo imul mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc or sub mov daa fdivr enter fildl hlt test and mov inc cmp sbb mov fldenv js or xchg (bad) xor (bad) cmp jae mov xchg (bad) xor icebp jno js sahf push fldt sbb in (bad) jae or in and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 fisttpll adc incl ret inc jo xchg (bad) push stos jno frstor (bad) popa fsubrp daa cmp sub sbb add lods adc int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 fisttpll adc (bad) in add inc jo xchg (bad) push stos jno frstor (bad) popa fsubrp daa cmp sub sbb fiaddl loope sbb or icebp call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 inc xor jo inc and (bad) incl out ret gs fnsave (bad) sbb lret push mov mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or cmp add xchg cmp dec (bad) push inc lret out in inc js pop and push cli xchg add stos add jle sbb lock push sbb ret add xchg push lods insb jbe int3 test and push mov cmp stos push pusha ficompl js dec jge jno xlat leave push bound inc and dec or aad (bad) xor pop sbb jl add mov add loop fidivl lods inc mov sbb pop cmp insb test dec popa lods sahf xchg mov adc ret ljmp cmpsb js aad repnz mov add xchg out mov imulb lea or jge xchg push mov inc mov popa mov cmp ja mov sti out addl call mov aad cs push pop mov mov inc movsl pop and jne imul lcall jmp inc movsb ret cltd push ds rcrl movsl add mov dec mov packuswb add ret cmpsl cmp mov fs inc mov mov cmp jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp sub push cmpsl out fnstenv jb jecxz int adc inc sub loopne sbb mov pop mov std adc ss sub sub add dec mov andl ds outsb mov stos arpl jo dec or sub int3 int3 int3 int3 int3 inc or sub mov daa fdivr enter test and adcb adc cmc or or outsb addr16 sub or js add add add movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc mov and mov and cld mov xor lret cmp pop sbb xor inc jecxz push fadds (bad) movsl and xlat aam xlat mov dec cmp sbb (bad) negl sbb or mov mov int3 adc inc (bad) adcb or mov dec popf arpl call lret mov movsl jge cmp (bad) (bad) dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or popf sub lods adc or cmp push sub roll cmp sub sbb add repz sub cmp xchg xor lret pusha (bad) xlat notl push mov xor stos arpl jo clc movsb test std mov cmc or ret mov fwait adc mov insb (bad) stc icebp clc js mov xchg pop test scas ss in rclw add jp dec movsl mov jb mov sbb mov fisub stos std jge popa lret xor and inc clc or insb sub lcall mov xchg dec movb jmp daa mov mov pushf add sbb cmpsl inc lcall sbb cmp test cmpsl pushf sti mov arpl add pop adc xlat push jbe xor jae cmp push rorl xlat mov mov rcll daa pop mull mov clc (bad) arpl adc (bad) out jb add cmc das cmc push mov mov loope dec pop negl push add pop add push push sbb mov inc repnz xor jo jo andl stos fdivs cmpsb fcmovb pop adc shl pop pop push arpl shll push dec fidivrl repz add mov (bad) mov cmpsb jmp dec (bad) fdivs popa jns jne xchg xor stos aad lds stos arpl or lods daa sahf lea pop inc rcr movsl enter (bad) out mul jge mov loope test pop sbb xor xchg jp dec jno adcl insl iret insb pop aad inc out lahf adc mov lods xlat mov jmp (bad) paddusw jge push (bad) (bad) aam mov dec stc push int std pop enter pop push xchg jbe in sub out sbb push mov mov paddd rorl mov arpl dec and pusha popf lahf ljmp jmp sahf dec mov cmc xor jle pop hlt xchg sar lret test int3 mov mov loop mov xchg push iret cs inc and sbb xor out inc ffreep int3 js repz cs ljmp push xor cmp icebp lret mov popf mov push xorl gs fiadd in (bad) call xor adc xchg and out (bad) jns shrl aad call push jge mov loopne lret sti rcrb rorl stos pop outsl es mov shll pop xlat insb sub sub out inc xor stc pushf mov addr16 inc pop push test mov fwait jle pusha inc les xchg lods push sbbl or dec imul and xor mov in lret cmp in ficoml or xchg (bad) and cmp clc loopne in jne data16 push add sub jmp test ss dec gs lahf inc js xchg dec inc xor fprem1 aaa jp push out mov lods xor icebp popa xor fidivl push js inc jb pop lock aas mov or (bad) and mov jle xor push cmpsb cmp int3 inc xor mov in clc xor pop cld leave shrb mov (bad) (bad) dec dec cli dec rolb add in leave in arpl sbb add fisttpl sub push (bad) pop out scas (bad) repz push mov (bad) fwait xchg bound cmp push les andl adc push or addl repnz fwait pop jle push out inc or (bad) xorb (bad) stc inc mov inc repz dec sbbb sbb fist movsl jecxz imul psubq xor enter mov mov jns mov insl loop imul rcrl sbb mov add pop enter out out test jns and scas arpl push cmp and icebp jno sub imul mov in add movsb in popaw mov cmp std das repnz test dec and push ljmp daa cld dec out pop ffree mov mov push loop xlat arpl cld and sub jg lcall add lods jmp daa aaa ss cmpsl adc popa ja insb in notl pop outsl popf sbb enter lods lock icebp mov ret fwait inc cmp pop fsts aad jns lcall and lret lock and jb mov xchg adcl and test push lds mov lea mov mov mov sub fwait add mov andnps jle push mov sbb shrb fistp push sbb fsubrl cmp in cs adc (bad) ss shll inc jns aas mov jmp sbb jns scas sbb sarb sub adc fdivl test xchg dec arpl inc cmpsb sbb sbb bound pushf movsl fst cmp (bad) and aad pop pop sbb scas and mov mov cwtl ret out inc xchg and lret fbstp jnp ss xchg imul pop jge scas fildll jmp pop xchg out xlat fcmovnu pop inc ret (bad) and ror jnp jo xchg insb push sub scas inc xchg push imul pop xor xor mov (bad) sbb dec jp sbb movsb jmp xchg scas (bad) jae dec fadds mov jns fstps es push ljmp xor pop push push cmp sub sub xchg lds mov add fmull fidivl out pop adc lds lods arpl mov mov push shrb sub mov inc add frstor or (bad) popf nop or jmp mov xchg or mov or (bad) xchg leave and clc out xor or (bad) es (bad) xor scas in inc sti scas ss dec cltd adc mov test test pop lods (bad) call sub mov (bad) repnz xchg nop push add pop mov sub pop std xor and icebp pop aad jno ss aaa bound fs movsl icebp jp mov movsb mov int3 movb and out (bad) push fstp mov cwtl mov mov jmp dec push jo jne iret inc popa rcrl icebp sub jbe push fs xor fcmovnu imul pushf jg (bad) mov inc push jecxz mov push push jo lds addl jnp mov adc jns xchg adcb lret int or inc in frstor scas loope testb rcrb movsl dec dec or mov test or (bad) popf fwait cmp (bad) inc jb lds lock pushf and mov shll call stos push movl fcmovnbe jp mov push cmpsl mov sub jecxz xchg pop loope xchg ljmp (bad) mov popf cmp dec enter and imulb dec outsb scas mov and push xor jns fldt (bad) lock pop cmpsb mov jb ds insb ja mov rcll jo xor push sub inc in (bad) rclb jecxz pop pop cmp xchg or dec push (bad) incl in mov hlt fidivl xor jmp int3 int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 dec in lret jl mov imul push cmpsb movsl bound fiaddl cmovge sub roll clc sub inc jb enter xchg add sbb lret xlat lcall mov or pop mov cmp ret (bad) test jl loope es sub or ljmp mov mov xchg mov fldl add negb (bad) inc and xchg sbb into fs cmp jne push ret jnp lods test push pusha pop inc jle or mov push or cli mov or arpl pop xor (bad) jl sbb insl xchg push movsl jp and mov and int and inc mov pop mov cmp sbb jl mov popf mov inc mov and (bad) gs rcl push ffree adc into mov enter pop or mov int or cmc jg or mov lcall cmp mov and cmp and sahf sahf test pop jbe jnp jp sarb add cmpsb (bad) icebp fcmove leave xor adc xchg pusha xchg jno daa out xchg repnz xchg sbb xchg push aaa add fldcw pop les dec je xlat sbb and and hlt fwait movsl bound mov mov add pop fnop jl inc into je dec jge jb or fnop iret loop fldenv xchg rclb inc nop or xor xchg jo xor stos jns fsubrs test pop sbb fs inc popa cmpl or mov cmp cmpsl (bad) popa dec hlt loop push insb (bad) std jbe sub xor jmp enter jmp xchg mov dec cltd ret jnp push and movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 inc or int3 jmp xchg lods push movsb sar cli dec out std es hlt sahf popa mov lds inc mov mov jns pop divl shrb popf xchg (bad) mov jbe (bad) in insb in ret push push bound call je jne xlat xchg popa mov mov (bad) insl in cmp sub and or push or cmc lea test xchg cmp sbb lahf xchg add mov mov aaa pusha (bad) icebp or inc setle or cmp mov in inc mov jnp,pt mov sub insl lods aas jo dec mov pop movsb push sbb in pop xor gs incl pop pop mov cmp pop lret push stc dec cwtl int3 fld cs pop sbb push push xchg aas ljmp sub sub lods pushf (bad) (bad) push roll xchg push mov pop push lahf (bad) jnp inc push stos add iret int3 fdivr pushf out arpl push mov add and lret mov xor add lods shrb fldl xor imul popf fldl out pop xchg in dec push dec cmp movsb lahf xor mov dec cmp mov adc mov pop jg and mov push jne cmp (bad) cmp fimull test dec icebp sbb es lret imul sar or adc mov out xor jno push mov lret es mov fdivrs pop fstp sbb push or sbb jae or push (bad) test and push jp (bad) xlat cltd int3 add or xorl push xor push subb mov xchg fs push insb rcl jne push js outsb mov shlb (bad) jno lds and jge rcrb cmpsb and movsl bnd ret clc and movsb sub sbbl lock xchg andl mov jp loop sub add dec cmp sbb test or adc and pop lret sbb mov and das cmp fmull pop mov pop sub inc cld sbb aaa mov mov push mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 fisttpll adc ljmp add inc jo xchg (bad) push stos jno frstor (bad) popa fsubrp daa cmp sub sbb push and push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or sub mov push dec pop mov sahf dec daa dec ja insl and pop jae cld rcl push inc lret aaa mov mov mov int daa lea sti or popa sub sub push scas push ja aad dec dec sbb jge arpl imul pop movsb cmpsb ror rcl mov cmp cmp jb not cmpsb (bad) lcall stc out jbe sti scas stos out insb sbb cmpl pop pusha fcmovnu pop sbb repnz arpl repz mov fbstp and negl clc or cmp int leave and jno ss cmp mov sub adc fsts stos in pop xlat push sbb dec (bad) out push xchg pop push sub fmuls sub mov or (bad) cs xchg fildll push xchg sahf push mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov push push cmp enter mov sbb les xchg (bad) ja lahf push lret add xchg or sbb pop sub jne mov rcrl outsb pop push lret (bad) jae cli push stos mov push cmp iret mov jg in inc mov pushf stos out mov and cmp sbb aad push inc movsb jge (bad) repnz add loop push dec mov outsb in rcr outsl out data16 and add mov jne xchg pop inc in shrb stc rcpps adc jge jne and mov push and adc or loope bound cmp sbb lock icebp clc ljmp popf ret pop cmp jl fimul jno pop scas fsts and rcll jae roll movsl ret jnp (bad) fs lret push adc out jb push stos cmpsb xor shrb pop nop push mov push imul (bad) out in adcl imul mov ds call mov adc xchg rorl mov dec mov cmp pop gs cld cmpsb sub mov dec adc xchg inc jns (bad) mov les mov test fwait ret pop cmpsb pop (bad) aad mov in popaw es js fnstsw int3 fidivrl repz outsl sub sbb int ficompl popa outsb enter in and bound loope dec idiv popf pop sti fcoms iret test das mov and mov fimul xchg sahf cmp icebp fisub mov pop ja insb inc fmuls ja aam mov mov dec mov test cmp (bad) xchg mov popf sub adc adc adc mov daa loopne mov ror cld xchg rcll or sbb lahf not fstpt lods push dec lea fldpi xchg cmp mov rol xchg sbb xchg and sub push mov push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 mov popf xor mov dec bound (bad) iret sub cmp pop (bad) xor ja js ret iret bnd fsubrs ljmp popf push sbb xor add popf mov int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 mov and pushf inc jmp call xor or mov sbb popf sub daa cmp sub sbb mov and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec in xor mov sub jns aas hlt jns and mov inc out xchg daa mov and sub mov inc stos (bad) jnp outsb xchg xlat cmp test out pop pushf fstpt (bad) inc jl sbb sbb xchg push mov nop fisttpll cltd aas mulb faddl data16 inc sub pop cmp js mov mov jb mov sub xor jno (bad) jne and push mov sbb ds inc sub cld push lea shrl cmp push mov ret fnstsw int xchg mov mov pop dec aaa imul ret subl mov pop jecxz fnstcw push scas test mov ljmp popf notl testl imul pop in mov inc pop js push and daa jbe inc push or push fdivr sub and mov nop adc inc xlat ja sub cmp mov jne jecxz test xor sahf dec outsl and imul repnz fcoms and xchg js ret xor pop call jno fdivr data16 mov sub stos mov arpl push mov mov pusha jb mov shrl (bad) popa in dec popa or into sahf stc or stc cwtl or das fimul daa sbb cmp xchg adc sbb dec outsb in addr16 jo mov test jmp test jno mov fcomp jno cmp add jno xchg jge js inc test pop cmp xchg cmpsb xor add xchg or fisubl mov outsb shll mov lahf into push in cmp sarb pop add repz sub and or and enter push (bad) iret fisttp xchg pop dec pop and fwait xchg and inc and sub test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 lret test mov push fmuls in inc cmp lock lds jb sbb lret sub push mov push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or sub dec loopne (bad) or mov rcrl xchg mov ret inc daa bnd mov mov stc loope inc add insb mov sub dec pop sbb outsl jns call icebp int push jno ljmp push dec sub scas mov mov call inc cmp int3 scas ret mov add inc (bad) fidivr call pushf xchg mov jns or mov (bad) push arpl push hlt mov push cmp jecxz inc xchg (bad) jnp scas sahf add inc xchg popa pushf mov push dec sahf mov add (bad) idiv fwait jmp cmp fstpl and jmp mov mov cmp stc push xlat (bad) gs pop out ficompl fdivrl pop or jl inc jbe fwait call xlat jbe in in push test in dec mov shl loopne adcl pusha jle fmul ret repnz and dec xor sub ja or jmp ljmp (bad) push mov and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add stc push fldt jno jb (bad) push mov (bad) inc daa decb cltd lahf ljmp out (bad) add into imul push nop in dec push add negb popl xchg pop mov ret mov enter repz in cmpsb leave aad adcl add pop inc pop sbb test inc cli cltd out outsl dec push fs xor xlat push in cmp push fildl jle sahf mov das dec pop fstl mov pusha xor jge pop insl add dec nop test stos xchg xchg adc ret ljmp es push push jne into arpl mov in outsl js lods lock or inc add or stos dec insl sbb imul xor push lret fiaddl mov push aam jecxz sbb inc and movsb xor repz imul or (bad) cmp rorl jmp mov decl or xchg inc mov pop ja xor loopne mov popf arpl test jl or cltd js (bad) ss sub jp pop push jbe arpl sar orl nop andb ljmp xor xchg push mov ret sub cs push int3 adc push cmp lcall or sbb or and cmp out xor cld iret cltd or arpl call repz sbb (bad) push jnp stos mov test fstpt mov sti loope dec pop cmpsl imul pop and mov or jecxz jle mov mov lea mov mov jne xor nop xchg jl adc sbb into and jl mov mulb jecxz sub out cmp and enter fadds call sbb mov mov (bad) in push movsl out (bad) mov adc xchg mov shrb or push movsb mov push lds test push jle shrb pop jmp add out xchg into mov mov into adc push pop aaa lahf mov repz pop add pop push mov cmp mov fcmovnu pop or test in and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 mov add xchg scas std adc ja dec movsl test arpl inc inc jns inc jmp clc (bad) xlat pop lods pop ljmp jne mov dec mov sbb mov push (bad) jg jae push call repnz jecxz addl xchg daa cmpl insl and mov jno mov sbb enter dec adc add push fwait and (bad) (bad) es push mov pop sti xor call movsb mov jb xchg lahf push stc adc (bad) clc cmp push es lahf xchg mov pop daa out xor and (bad) imul lret inc fdivl nop fsubl iret add clc cltd cli ret test fcompl add mov jno pop jns mov gs scas out lcall dec or dec cmp ss and sbb rolb in scas fs imul aaa sahf sub inc jns rclb xchg xchg mov inc sub push fcomps mov lods xchg fiaddl and and cltd mov fisttpll or clc push sbb xchg pusha sbb xor adc pop int3 movsb icebp fimul sbb pop aad jnp xchg fimul push (bad) lcall movsb pop inc dec jb mov out negb pop cmp push pusha push lret fimull repz add mov (bad) fs jnp jp in mov add adc insb out movsb (bad) adc mov sbb xor minps (bad) pop bound mov xor (bad) rol js mov add ffree push popa movsl lcall dec movl shll and fs arpl add imul ret push jo fimul dec shrl shlb mov cmpsb mov out push cli fbld dec inc mov out insl (bad) xchg insl outsl cmpsl dec lahf test sub test or (bad) insl sbbl cmc jle lahf cmp frstor dec xor stc jl data16 inc sbb (bad) pop mov push aam and mov cmpsl jae pop out out mov add add in ss push int adc pop xchg lahf aad repz cmc cwtl adc xor xor push popf mov mov aas jb (bad) mov lret icebp data16 ret (bad) (bad) jecxz jl sub xor (bad) mov cwtl fdivs xchg stos sub sbb punpcklbw mov mov nop shrl fnstsw adc mov enter push mov bound sub bound push movsl clc std leave fsubrs cmpsl sub add xor mov lods add dec jg jnp adc inc mov daa popa add (bad) pop hlt sbb pop xlat xor inc push shrb mov push pop xorl mov imul mov jecxz adc mov dec cli pusha and jae je or js adc outsb xchg inc jl aam pop cmpsb inc sbb outsl adc dec into lock scas cmp and push das mov xor jmp mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov add stc push (bad) mov sahf sub sub lret dec daa mov (bad) sbb inc arpl outsl rorb xchg arpl insb daa mov dec test mov ss xor mov stos and fs xor cmpsl mov mov pop loope lret loop jge mov lods mov jmp out movsb jl int3 cmp xchg cmp fmuls inc sub popf scas ss cli ffree movsb dec test inc jl lock cwtl scas or lret (bad) adc subb sbb out mov xor push xchg out inc jmp sti push call in popf movb sbb mov xchg popa adc inc lret icebp mov xor mov cmc dec push into cmp dec lods addr16 (bad) pop mov and or mov adc repz push pop xchg pop sbb (bad) cli loopne fnsave (bad) es std test jmp int cmpsb imul add popf adcb loope sbb ret mov inc scas or sub push cmp daa leave out repz cmc mov jae dec xchg inc mov loopne (bad) icebp js or fldt shr out movsb jecxz adc mov xor dec cli ljmpw (bad) enter pop test icebp pop cmp pop pop xchg outsl xchg xchg mov iret mov fsub push subl scas push orl (bad) inc lret add jns loope lret (bad) inc test mov push pop fsubr loope jb sarl inc xor fcmovnu pop add ret arpl frstor data16 repz xchg (bad) xor jb dec sub jb jp fidivrl xchg or inc pusha add and rcll dec rcll in sarb repnz xor das mov xchg (bad) stos push push aam jns push stos pop or decb mov sub or (bad) int add (bad) mov xor insb mov sub inc (bad) test rcll adc addr16 clc mov nop push or mov jae clc push push adc pop mov faddp dec jae pop cmp xor sub pop repz xor mov aad add xchg and jmp sub pop pop cmp (bad) scas xchg adc add add mov sbbl sti imul mov push sbb xor insb or outsl (bad) out sahf jne mov stos stos mov dec jno into aas dec lahf jle icebp cmp cmp es push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov or pop scas leave xchg xchg inc mov (bad) sbb movsl and fwait jo pop push inc loop cwtl sub xlat insl lock pop pop pop pop xlat sbb xor or adc xchg mov movsb out mov sub xchg xchg mov adc mov (bad) mov scas dec jmp jnp sbb loopne push out push xor movsl or mov add mov jnp mov out andb mov sbb insl bound sbb sbb push add daa fbstp lahf or loope dec and push dec jge jbe outsl pop push push sahf scas mov popa mov pop roll lods rorl push int test shrb cmpsb rolb xor aam cmpl je mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 inc sbb sti mov popf xchg daa fdivr enter (bad) hlt mov sbb and add test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 add dec cwtl sub (bad) xchg testl mov mov inc cmp inc jg lret xchg outsl das jg and pop cmp jg pmulhw mov cld negb roll aam adc mov setnp movsl ja frstor cli test mov enter scas sub call loope in or mov push push push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov (bad) fnstenv dec pushf push sub or daa mov cmp stos fstpl xchg das in inc pop mov mov (bad) stc out cmp mov dec loopne sub int3 pop es bnd sbb mov sbb jns sub ds movsl xlat (bad) mov sbb js out fyl2x jbe inc and push push aad inc in out pop (bad) repnz cmc mov mov stos mov push or or and popf jb mov (bad) or push addb shrb std jge mov ret ljmp pusha fs add outsl rorb js scas mov mov ret and (bad) pop pop mov ljmp push mov imul cs jecxz out add jl arpl int3 or pop ret xchg (bad) push push cmpsb inc hlt lods jge outsb fstl pusha add pop aad shrl dec mov scas mov jle stos mov mov aaa ss fdivrs xor loop cwtl sub xor jle in dec imul not mov push test add add js dec aas scas imul xor pop movsb cmp dec jl test enter (bad) mov xchg sti fldt int data16 outsb pop mov adc mov movaps xor cmc sub (bad) sub cmp sbb jp cmp and ja or mov (bad) lods outsb out xchg or imul jno cmp lcall add call aaa orb (bad) (bad) inc notl call insl hlt sti dec ljmp add cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 mov or xor xlat mov nop push sarl das cmp sub vmptrld or inc jae fsubrl js and inc out mov shlb out aam adc dec stos push dec fdivrs out (bad) shrl jecxz int xlat adc stos add out push cmpsb dec inc bound in ret jl clc test mov lret lret and inc pop ss ja in xchg xchg xor jno imul pop ja sub sbb pop or je test mov cmp sarb imul xor popa sbb or mov mov xlat fiadd push leave push jnp dec cwtl dec out repz lret (bad) sbb or lret mov xchg fcmovnb mov jne pop lods cli fucomi adc dec sub mov out fidivrl jp loope adc in and jmp stos and jle mov insb or call jne cmp pop jge sub add mov xchg adc pop or lcall sbb pop (bad) cwtl cld dec adc lahf ja sbb or inc fmulp mov (bad) xor dec adc or sub sbb rcll sbb xchg push cmpsl lea cld dec daa push xchg jge (bad) mov jge lret ret mov cld movsl out into cmp ja pushf (bad) ja fidivl fs pop aaa test cwtl add sbb out fdivrs jns mov adc test push lcall add hlt loopne xchg es sub push mov movsl or pop ja mov xchg mov jns call lret aam lret add cs daa ljmp jnp mov push in loope jecxz xchg and sbb fstpt repz adc mov (bad) dec addb jl ja mov xor add jg test sub (bad) xor in fisttpl mov xchg rcr push sub mov imul clc idivb clc mov jo cmpl mov cmp add push mov xor sbb mov in (bad) xchg mov cmp aas mov xchg int3 jl sbb stos test out push pop stc push fs (bad) popa lods sbb or je loop mov mov nop test jae in cltd outsl rol or test xor rorb scas mov adc mov adc lea adc lea adc mov adc lea adc mov adc mov adc inc and cmp je cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc fdivrs ds cmp push lock adc and push into pop sarb and cld adc pop mov imul dec cmp mov xor test int3 fldt and mov adc in and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov pop pusha pop sub out ficoml push scas xor je or mov xchg popf (bad) cmpsl ja sub xchg xchg add pop and divl mov xchg loop lods sub aam adc icebp lahf push (bad) bound test or xchg popf das and mov (bad) iret (bad) jge ja pop or (bad) fildll cmp scas push push test imul jo push rclb mov add adc scas in and adc loopne mov xchg in inc xchg mov cli outsl or mov sbb jg jb dec je mov xchg aad cmc xor add jbe xchg and subl repnz (bad) jl repnz cmp popf dec dec sbb inc push jecxz sbb mov nop std fimul test jmp push out xor cmpsl pop imul pop cmc loopne xlat push jbe mov cmp dec dec js icebp xlat insb fyl2xp1 adc push lret popf (bad) adc in in push mov rclb je lock mov fbld out sub xchg orl ret test hlt fnstsw push push ret pop ja lds and pop pusha inc jne push pop adc aaa xlat jecxz jns out dec mov ret les or pop dec lods push sti push fcomps fcmovu dec push add movsb shl repz jne fcomps into pop push movsl pop (bad) in xchg push mov into cmp jbe inc push outsl fistp addr16 stos lret mov dec mulb lret gs addl jge popf push add je mov sub cs fisubr mov and mov scas pop inc jb dec xor xor sub mov sbb out push adc xor repnz lret hlt mov int3 mov (bad) lods xchg in stos lods outsl push or shlb pop cmp aad push fdivp arpl shl mov aas int mov imul fnstcw mov pop in or add push pop scas in push cld sub ljmp and rcrl xchg repnz sbb clc xor sub mov or mov xor ss sarl dec and ror je xor xchg nop icebp add rorl les sub (bad) cmp ret cmc and inc jno xchg dec mov in in dec dec rcrl cmpsb stos dec jge (bad) loope mov mov data16 (bad) jl add xor test test not xor fidivr cs clc pop (bad) mov or adc mov adc sbb fwait js out push je mov nop or (bad) lock imul scas dec pop stos aad pop mov dec mov jne pop fs sbb add hlt xor sub or pop stos (bad) mov gs cmp ret adc in push cmp and cmp mov pop sub and add (bad) dec xlat xor addb andb es sub call push cltd cltd std mov pop lcall lods pop mov sar clc movsb addr16 xchg fild dec jb js mov lods fdivs sub ret dec adc push mov mov arpl fsubl leave insb pop cwtl aam or jno sbb es sub adc xchg mov inc inc outsb sahf mov test inc push or cmp or inc fidivl imul mov dec (bad) test data16 decl cmpsb je push push cmp or dec loope mov test mov in xor hlt mov movsb daa xchg cmc inc fwait mov test iret in popf (bad) pop imul std jns or (bad) inc cs mov xor imul cmp mov xchg cmp sbb sbb ret jmp aad dec rorl ret call into pop ljmp fwait imul jge fucomp and das push mov and xchg js xor and inc push cs sarl sub add outsb sti scas leave aaa jmp loop cmp pop mov mov outsl push mov and or xor cmpsl push scas (bad) sub loop repz stc cmpsb sbb cmp dec inc fstps jmp repz xchg jno lcall inc cmc jbe jecxz ret jmp push xor imul mov mov inc cmpsb ret int sub jg fldenv xchg add mov gs (bad) dec mov mov addr16 rclb cmp add dec test sbb adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 mov push pop arpl dec or xchg ret lds push rcrl rolb mov pop mov mov test imul loopne or or rclb ret mov aaa clc cmp xchg adc add pop test push xor sbb mov xchg xchg dec jecxz pop loopne xor call mov cmp je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl stos scas lret mov sbb out or daa sbb sbbl add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 inc sbb dec dec sub and xchg jae popa mov rorb jle jl dec ja sub dec shlb or jmp mov shlb test cmp push adc cmp fildll repnz xchg mov cmpsl sub call loope std popf pop shr fwait movsb lea and popa xchg mov pop les imul mov xor ja das jmp inc lea mov push stos es add inc mov test sbb jns call pop sbb cmp movsl cmp sub mov decl xchg je enter outsb fisttp xchg jmp ficomp scas or dec loopne cmp out (bad) or insl cmp push and push cmp sub in aaa xorl lds addl cmc inc cmp pop xor xchg repz mov popf repz pop lds mov adc adc bound out mov mov nop pop add push push push loope popa jp arpl std gs outsl sahf cmp inc lcall pop popf fnstcw and and repnz lods pop inc ds bound jne mov push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push jmp or pop xchg dec jo lods or and lock out lret out lods (bad) test sub aam push arpl xchg cmpsl mov pop mov shll mov mov add (bad) sbb pop lods sbb data16 rcr sub cmc cmc or out sbb adc lods and fstpl xchg ljmp (bad) xor pop lock inc inc es int3 dec add jp leave cwtl pushf mov xchg inc in inc or adc adc outsl push lods push sbb loopne mov popf push ret jge aad pop loop jns sbb cmp lret push jle in or push or leave xchg imul cmp or test ret cmpsb rcl xor aam mov test jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov mov add nop das insl sub fmull push mov call fwait push (bad) mov adc imul xor sbb or mov js rol sahf and repnz iret pop mov ficoml pop jge iret add mov pop dec sbb jp xor cmp cmp lds mov mov pop lret or or and in pop lret inc xchg add mov ret loope cmp test add or sti popf xchg dec aam mov or or int and je ror mov xchg loop int3 cld sub icebp (bad) add (bad) mov sbb push popf ret fcompl pop pop pop pop push mov mov in and (bad) jle jae pop std dec ret mov hlt xor sar inc xchg imul cmpsb mov add ds sti stos inc js into pop fldenv mov out add lret jbe stc xor out add in movsl push pop sarb icebp lahf sub cmc les and mov shlb mov inc mov pushf adc lret xor fcoms into mov cmp and pop cmpsl ds test rorl (bad) and js imul jge and pop pop sti insb sbb cs lcall pop push lock fisttpl popa add xchg push add into mov inc rep (bad) sub sbb and dec jnp,pn or jg adc mov fnstenv lods mov sub sub dec mov jnp fsubrl fldcw sub mov cmp lahf dec lods into stc mov std xchg (bad) mov movsb push inc das mov arpl pop shl scas sbb in xor out add and sub sub push push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 mov push jmp adc fs movsl int3 pop mov mov sub nop add cmc sbb arpl int push cli xchg add jmp add aas ss mov inc pop or mov cmp dec push dec mov out arpl fidivr enter (bad) (bad) pop popf sub fucomi rorl lahf xchg mov mov xor dec mov pop pop in xchg sbb aad mov cmp inc mov scas sarb dec adc (bad) inc cs (bad) movsb add cmp dec sub cmp push cmp lods or jge adc lahf cmp das jp lahf je dec mov sub nop mov scas xchg mov out mov sti dec movups fwait dec repz cmp das push ja aam sub testl mov cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 mov fsubr fstps stc push fldt repnz arpl jo repnz leave pop and ds jnp outsl addr16 adc in jno jbe xor mov jmp arpl dec jle (bad) pop add push jb mov xchg dec cli mov or xchg or push in es movsb mov leave mov mov mov lret sub adc cwtl scas mov jp leave test push mov dec add lahf mov addr16 (bad) aaa cmp dec aam cmp daa (bad) sbb add lret loop lahf add in pop icebp movsb mov out mov sub and subb mov mov push (bad) hlt in je pop sbb int3 std xor jno inc fsubrl adc push pop (bad) cld sub (bad) (bad) xlat mov fstp rcr jecxz cltd call hlt sbb mov and sti pop sub mov lret push add add mov xchg in pop int3 ja inc fcomps dec xchg loop cs lahf jmp xchg push ret fwait cmpl insb fs inc push mov and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jp pusha sub jg nop sub mov lcall daa and (bad) pop jo push xchg pop shlb jg add mov dec cmp addr16 repz xchg sub clc pusha dec cmpsb outsl enter (bad) call ret ret dec data16 aas push pop pop imul test jmp and jb jg fnstenv (bad) out xlat lahf xchg je cmpsb mov insb mov sbb fnsave dec lds loopne movsb jecxz sti pop jno push out aaa xchg test inc jp (bad) fisub sbb dec sbbl in push or xchg cmpsb je lret and andl xor xchg ljmp repz push movsb sub add mov vandps ss and int3 xchg rorl mov and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 mov push push cmp in add lods or or mov jbe pop add mov inc push imul pop test pop pop or jne push sbb sbb out mov cmp push mov fidivrl sub je xchg in or push xchg lea cs sbbl cmpsl inc rcrb sti mov add lods in mov mov jns sahf fisubrl js push cmp jnp into repz inc xor mov test stos xchg adc outsb mov lea imul mov xor les adcl mov and mov or les mov repz pop stos lcall jle popa fwait cmp and or jne xchg or mov sub in popa add push mov sti and je jo push pop dec pop sub pop mov mov inc (bad) cmp and (bad) outsb cwtl sub test shrb fnstenv jns call rclb cmp sbb loop fdivs jl xor das fistpll aad push pop push xor xchg jno fbstp mov sub adc fstpl out arpl lods leave jecxz and scas outsl cmp lods xchg es bnd (bad) mulb das ret or test cmp pushf imul mov mov mov iret aam dec (bad) sbb scas and imul xlat inc add or pop sbb daa mov mov mov out mov sub push push mov jne mov and out lret repz sahf jnp in into sub lea push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 inc (bad) adc loopne in loopne pop and int icebp or pop in jge daa mov jno sub cltd mov pop pop clc (bad) jae and push lcall shlb pop push loopne ss xchg (bad) (bad) hlt cs in dec imul jge xor cmpsl xor xchg xchg pop jmp xchg stos jl mov push add clc fistp jmp xchg insb cmpsb cs es and cltd xchg mov dec adc (bad) push mov and es pop dec imul or in loopne cmp popf es outsl sub rorl std xchg popl dec jecxz sub out sub mov dec popf (bad) cli dec fimul xchg pop mov fistpl adc xlat pushf push outsl arpl pop mov sub repz cs lret cli sarb shl shrb test movsb inc adc inc fyl2xp1 xchg sbb sbb cmp ret mov sub inc mov or mov out clc loopne xchg xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 mov cmp popf daa (bad) aas cmp nop in ret gs fnsave (bad) sbb lret aam or shrb push lcall mov lods push fdivrs (bad) sbb jno fstl xor push add mov pop sbb fdiv or stos mov stc cmc outsb rol push sub inc sub xchg lahf out adcl flds xlat test dec mov xchg aad push jnp (bad) dec into sub stc stos xchg fcmovnu fbstp mov iret lahf mov add or adc ljmp mov and adc sbb lock mov fisubrl (bad) xor inc call loop mov pop out jmp repz push cltd aas mov outsl fwait sub je lcall pop mov jg lret push add aam ljmp and cli push jns lahf sbb stos dec add arpl jne and push les (bad) repnz aas orl movsl dec pop (bad) jl test into test push call or lea pop mov or sub cmp mov add sti xchg (bad) jns inc outsb xor aam pop pusha inc jne mov out call aam pusha fsubrs cs ret arpl push mov lea dec lret mov inc mov sbb sti and dec and lret jmp ljmp mov cmp (bad) dec inc fisttpll xchg cmp orb mov loopne mov shll inc inc push mov fstp sbb lret ret ja (bad) sbb pushf push add idiv add das xchg xor (bad) cltd mov popf jb or sbb push leave adc pop daa loopne cmp add xor sub and ja test adc cmp push test jmp xchg mov std cmp cmp and cmp adc pop cmpsl cmpsb and mov or sbb sbb das in ret lods mov imul xchg (bad) dec pop inc sbb jp clc add aad pop adc jno mov mull insl in ret pop mov mov xor push sub xor mov cs push jo pop popa sti adc jmp and test std fcomps pop inc stos movsb xchg adc test imul stos xchg sbbl ret jo outsb sub ljmp jge and push push mov cmpsl and sub fwait test push cmp fisubr repnz enter mov clc insl stc xchg loop pop sar xchg xchg aad in cld adc jno push outsb cmp sub add fstl dec dec je jo in sarb inc imul mov roll call hlt mov stos arpl push xor loop cmp adc mov lods out (bad) lcall sub inc js pop sub push jae cmpsb into xchg ret std das mov fsubl or push cltd mov je lds adc mov pop adc adc sbb (bad) or pop sti mov push mov (bad) int dec aaa xchg test sbb lret sarb sub mov sub (bad) xor xor push aaa sbb mov cwtl aad or lret daa dec sbb dec fiaddl (bad) xchg call sub aam push mov push stos mov orb test push mov mov sbb pop adc mov push cmp add sub movsb pop (bad) lret sbb dec fwait mov dec and cli test sbb dec mov mov mov arpl push xchg sbb sbb sti ss aaa sbb in add out (bad) mov sub mov push icebp pop sub cmp or mov pop jmp jl lea xor push test jbe sbb (bad) out outsl cmp lds pextrw xor jge cld push push dec insl sti pop inc jne repz jge push sahf je pop les and jns nop lods ret jo mov sub jbe push push das xor sub fldcw fucomi mov and stos xchg pop clc mov cwtl stos icebp loop adc jne ret cwtl mov gs js and insl or xchg lcall cmp xchg xchg fstl pop push stos add loop mov push lcall enter popa sbb outsb imul nop or add addr16 outsl (bad) xchg cwtl pusha jmp aas hlt (bad) les test aas test cmp jo mov data16 int sub loop sti popa mov outsb lock loope inc sbb mov mov mov mov shll pusha mov arpl arpl mov add mov das inc push lcall cmp test xor mov rcl (bad) jne insb xor pop add cmp mov jmp dec inc inc push aas jns and scas jmp negb or fnstenv mov xchg pop or add movsb push icebp sbb mov xor test mov and cmc (bad) lret cltd rcrl rcl xor inc in inc push fstl jno mov enter adc jg xor xor and test cmc lods (bad) sub mov loop xchg push outsb jbe mov call enter dec test sti mov mov sbb sub cmp fwait mov sti mov dec rclb clc fmuls jns fdivp ret (bad) test push ficoml jae dec and xchg add mov rcrb loop imul sub xchg dec mov cmp shlb or xchg rol jg adc test jae jae outsb add lcall insl push (bad) mov cmc xchg mov aas scas stos and mov jmp xor dec stos jecxz or je ljmp repnz jo mov test xor nop xchg int iret push fs movsl cwtl xchg ffree jne cmp (bad) int3 mov pop or popa mov enter xlat mov inc push mov jno ljmp fwait loopne (bad) or insb (bad) negl data16 pop inc dec or (bad) mov in adc push popa push and ljmp stos pop or fcmove xchg ret cli jae les or ljmp inc mov (bad) inc jne das pop decb push dec pop and xor cmp cmp imul xor bound xchg or sub mov gs out xor lock outsb aad (bad) mov arpl loope xor loopne mov (bad) idivl stos push movsl in icebp lock popa xchg mov mov xor out inc and adc pushf jnp or les xchg adc out cmp fs lds test movsb mov pop inc fs jp fsubs scas divb stc xchg lods sub in xor (bad) mov push push adc xchg and pop sahf and scas addl push pop ret pop into fstl js pop out aad pop cmp inc cmp (bad) pop xchg lcall xchg (bad) mov jmp dec movsl lds xchg mov push sbb cmp cmp jae xchg iret int3 jp,pt (bad) insl mov outsb pusha jecxz (bad) lds dec subl shlb mov cmp popa in movsb inc jmp sahf les dec pop ror inc std cs sbb repz mov and lret push mov int cmp mov imul inc int ficom negl adc movsl jecxz lock fiadd and jb push pop mov sbb pop je (bad) in and fwait adc mov inc add daa mov shr adc sti leave jge push xor xchg stc push and (bad) hlt inc jl imul decb (bad) dec lret sbb sub fnop xor push xor ret les adc inc push xor ljmp mov jp mov lcall scas int3 fcomps sbb rcll push sub in mov mov adc in insb inc into cmp clts inc out mov sub pop test popf mov mov out out ficoml pop sti repnz pop push sub (bad) mov add dec jne xor and addl jb cmpsl xchg lahf ret xchg (bad) cld outsl stos (bad) popf inc test repnz stc bnd add sbb imul push push cwtl sbb repz adc xorl xchg and mov inc fstpl outsb hlt shl add shrb add jae test jmp adc or ror xor imul test and test scas insb mov xlat hlt lds mov cmp inc mov in icebp pop (bad) test lds xchg push enter (bad) mov inc adc icebp iret (bad) fisttpl pop nop or fisubrl xor pause dec dec loope (bad) pop test imul jge sbb cmp fldl2t cmp cmp pusha cmp aas jo push mov pop adc cmp movsb mov cli sbb mov mov lods imul iret dec es xchg sbb xor aaa inc mov cmc jbe imul add mov int3 out call pop sub shl cltd xor sbb and push popa shrl int3 cli into std nop aam loopne data16 mov xor cmp outsl and test push ja or xchg xchg mov and xlat and push adc iret sbb mov push mov sti dec cmp mov mov jae add cmp sbb xchg mov (bad) mov inc fs sbb push sti xorb fistp inc add push or sbb add adc mov test insl mov loopne stos push lret pop inc insb mov sbb les add in stos enter adc inc sbb xor or cs xchg testb ds sub cmc loope fst data16 ljmp jae je add insb pop sbb mul push lods xor mov add push jae rolb lds mov and sti in imul lret mov sbb or adc ficom mov (bad) sbb shl in xor dec sub aam loopne (bad) repnz add je nop fcmovu fwait lcall hlt int3 ljmp and mov sub sbb add or push or ja sub cltd xor mov fucom mov mov sub jne xor sub xchg jmp test (bad) sbb cli mov sub or stos pop jne insl sub sbb test mov push xchg sub lock pop add push jnp mov pop iret sbb and dec (bad) pop in aad aas lods (bad) repz adc int mov xchg lods test insb adc les movsl pop xchg and f2xm1 mov mov js cmp hlt cmp sbb (bad) and pop push jg in rclb mov lahf test push enter dec mov sbb pop sbb inc into sub or arpl sbb lea loopne bound cli push mov outsl inc or imul in in sub movsb fsubrs loop repz jne bound ret dec loope adc jns jns lods mov pop or nop xchg xchg and adc sbb ffree jmp mov dec sbb lea add pop xchg lock mov out mov cli fist and xchg cmp movsb push aaa (bad) push sbb out loopne xchg stos pop xor mov push dec sahf (bad) rol push push jne sti lret and out mov xchg repz es int pop aaa dec xchg setbe xchg mov add mov mov push add repnz fidivl into xor dec or lds cmovle mov xlat mov add pop xchg mov and mov jle mov (bad) pop jne mulps ret mov js std mov dec cltd cmp and lret sbb mov sub push mov inc data16 inc ror lods sub ss or jp jbe scas push les sbb aad xorb mov inc notl adcl lret repnz ds dec mov adc fwait adc je sub rolb ficomp in fdivl mov push or push mov cwtl rorl in arpl loope lret mov js mov push sub call aam sbb rclb or lcall pop addr16 push xlat dec xchg fidivr fsubr movb cmp scas mov adc dec imull xchg push lods into xchg int3 testl jle sahf std dec add inc pop insb push (bad) out sub adc hlt idivl shlb xchg stc test dec inc mov pop dec mov aas je hlt jb inc fcompl je xchg movsb popf cmp adc lahf jecxz push movsl pop fimull (bad) jge or inc mov adcl sbb nop and pusha js dec ficomp add adc in mov mov push pop and mov jp aaa push or mov scas xchg lea arpl pop mov push mov icebp (bad) adc inc push leave mov pop pop mov push out push dec fdivs xchg xchg jbe adc or inc (bad) and push lret add out push push pop icebp jmp imul mov aaa mov dec js (bad) pop imul rorl loopne and arpl and xchg scas sbb pushf mov fisttp arpl ret add cmpsl push imul call push sub xor std int pop mov rcrl fs out aad lret push sti pop fneni(8087 cmpsl mov (bad) dec sti push sbb fbld push dec movsl ja out mov push pop inc jae enter sarb mov movsl ja mov push xor int fistp dec jne pop dec dec sub int3 or sbb adc sbb fldenv jnp bound cld dec out sub addr16 dec mov sbb xchg jo std and enter jl stos xor cli cmpl lea not add and test (bad) scas cmpsl adc jmp adc sub xchg movsb fnsave in fist add in fstl in push (bad) lahf fadds cmp in dec or es cmp mov stos fwait stc mov int3 insb jge fwait push imul jo cmp pop ss call (bad) std mov dec cmp push clc fdivs lods inc aaa push (bad) hlt loopne (bad) push xlat inc or aam sub push xchg pop mov mov ret jne pop cmp in nop int push cmp aad push pop (bad) jp and mov je or jmp push cwtl xchg and mov mov cs xor xlat cmpsb add cmp aaa popa stos mov mov stos sub inc data16 pop mov mov popf push inc add into and cmp jo mov stos jnp adc shrl mov aas mov ss mov cmp mov int shll cs jo mov test xchg xchg in sahf add sahf nop fstps jns xor pop out (bad) icebp addr16 sbbb icebp add leave sub and outsb mov out call push out mov push out lea jmp test sub test std cmc mov xor push mov sbb (bad) outsb sub add ljmp imul js fs push fs xchg ja das add cwtl clc and fmul mov xchg pop or dec in in cld inc cld push mov add jne push das (bad) sbb cld pop jp mov mov (bad) xlat movsb test cmp lret fwait push in xchg movsb loop cmp shr out idivl aas sbb push xor out sahf inc hlt inc call pop sbb in jp lods dec xor sbb push mov ret sbb or std inc xor (bad) mov jne sbb push jnp and loop fcmove mov rorb subl (bad) pop arpl xchg sbb dec mov imul (bad) (bad) push push imul xor sbb loope jl icebp fwait push imulb mov push pushf fdivp add jb cmp or sahf bound mov in test in lret out test loope and out in ret inc loopne loopne test sbb cmp sub (bad) ja pushl mov dec fnstsw mov lret push pop xor stos idiv test adc sub in inc inc into ljmp (bad) xor add add push pop cmp xchg jbe dec jecxz bound std lock push lahf addb ror in push out rol adc insl (bad) data16 xor cld out push push xchg pushf (bad) xchg sub pop jp outsl jae or sti mov outsl fdivrp inc xchg add stc adc (bad) icebp push int3 fnsave dec sbb pop test sbbl out sub (bad) (bad) popa xchg push push ret ss sahf sbb jp insl mov test cs push cmpsb and mov gs popf loope add bnd inc inc ret (bad) xchg lods stos scas inc arpl dec push mov pop lahf (bad) sub ret lret aaa adc dec inc xor mov adc (bad) push sub test mov dec sti or and adc scas or std mov or stos mov aad bound mov sub sbb leave push (bad) or mov lods jns leave ret xor xorb mov lock lret lods xchg xlat xor ficom cmp (bad) mov outsl loopne jp movntdq xchg shl mov xchg mov fs mov imul stc mov test jg icebp mov pop mov in or mov insb mov adc hlt cld push mov push ret mov arpl xchg (bad) mov sub movsl jmp outsb movsl jmp nop bnd (bad) mov aad push nop xchg fmull ljmp adc (bad) jns cld popf cmp loope jns loope and je inc xchg mov mov les pop inc hlt cli pop dec xchg xchg (bad) push pushf fcomp mov push jmp (bad) push dec add fs mov data16 jp ret lods imulb or arpl insl in jecxz mov std jecxz xchg addr16 cmp arpl pop mov mov lock mov xchg jmp stos xchg lea ss cld iret or pop and rcll mov dec push pop cld (bad) sahf mov mov mov fisttpll push mov jl mov fcomi andl jo sti dec cld or dec ror adc inc or out dec outsb gs jns inc test jae adc js aaa xchg dec ljmp loop mov leave add xor xchg stos dec jnp jg sub sti addl mov sti call add pop push and mov (bad) int mov inc mov (bad) stos in pusha loop inc mov or loope movsl mov add (bad) push mov mov je cwtl frstor andl jmp cmp in sti popf cmc dec mov mov mov xchg inc outsb adc add mov jb ret mov adc inc les in sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov jl jne jb cmp jne xchg fs mov std mov adc loopne inc ret out pop insb push jp rcrb push xchg push pusha push bound sar dec lahf dec dec sbb adc in lea and and incl mov imul cmp insb push clc outsl int3 xlat push or es xchg mov lock lea hlt leave inc rorl push cmp push mov aad loopne sar imul xchg scas push data16 or fs push test dec pop sti adc xchg mov jno jge out or pusha inc (bad) ficom js insb ja dec and xchg mov cmpsl adc sbb jns push cltd int3 fxch xlat movsb ficom in das rcrl lds mov in movsl lret bnd daa xchg sub pop sarb mov dec mov out test sahf cmpsb repz or lret xor adcl ret mov inc mov cmp xchg xchg jp mov je lahf out sub (bad) cmp add pusha loope sahf pusha jnp xor mov and push icebp mov popa insl xor cltd leave loopne or adc pop jae adc mov xchg push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret mov cwtl or enter nop sub push jns mov or (bad) inc cmp mov shlb mov enter cmp add lahf jb sbb (bad) insb inc bound push dec cli cmc jle (bad) pop call arpl aaa sbb pop test mov fistp ja pop imul xcrypt-ofb cmpsl sub sahf dec fdivrs inc mov push lock adcb (bad) aaa popl (bad) fsts rolb js mov jp les add in adc lock movd bound sub pop test xchg in cmpsl js dec repnz sub xor mov push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov arpl mov icebp add arpl lds push sub in aad or notb xor out sbb mov scas popa xchg sub sbb push rorb add inc add jl adc add jl adc int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 mov mov xor fs mov and aad and (bad) and loope cltd pop cmp jmp fs xor fcmovnb dec mov sbbb cmp cmp sbb mov mov xor cmp stos arpl jo mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 mov cwtl or enter nop sub push jns mov or cmp cmp fcmovnbe jbe sbb sub decb jl push jbe fwait add xchg mov mul push or imul adc mov sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 dec mov sub stc push fistl ret gs fnsave (bad) sbb lret push mov sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc bnd mov cmp push push mov mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 mov cmp jb xlat sbb mov mov fstps andb outsl shlb rclb insb lcall mov inc cld jnp das and mov adc lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov xchg out icebp scas leave dec cwtl push (bad) pop or push out test cmp insb in gs lahf stos xchg pop pop call call jae or adc jnp imul ds outsb mov stos arpl jo mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 mov cmp ficompl movsb xchg daa fdivr enter add sarb leave cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 mov cwtl inc cld enter nop sub push jns mov or xor pop repnz xchg inc cmp inc shl mov mov add mov sub jl lahf pop adc sbb xchg lods enter in jmp pop insb sbb pmovmskb into dec sbb or call add push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp mov pusha data16 (bad) ss sub xchg inc and icebp or pop add push bound cmp or lods pop pop push fcmovnb sub test cvttps2pi popa rcrb and mov adc in sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 mov cmp jb xlat pop jne xchg insb movsl insl hlt mov fnsave (bad) sbb lret push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 mov inc fs jb out mov out inc inc or cmp cmc mov sbb cmp shl mov mov (bad) lds mov fnstcw cli sbb xchg mov data16 in jge xchg nop or mov je mov not mov insb (bad) stos into addl or adc out or xor insl lock pop mov (bad) jge jno stos jne sub cmp or es add xchg pop inc in shrb push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret mov push fs jb xlat pop jne xchg insb mov cmc lods lock cli inc cmp popa fistl sbb and xor adc ljmp rorl sub push rcl scas push or xor in or dec cld cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp sub test frstor xor push pop pop pop clc (bad) fldl outsb sbb std vpunpcklbw jl cs pop sbb mov test mov leave fisttpl sbb adc imul sbb or push jmp sub je jg mov jp stc test (bad) scas sub arpl sub push ss or dec inc rorl mov mov sbb sbb push and or cltd je (bad) nop (bad) arpl push cmp outsl inc mov adc xchg jne sbb aad in cmpsl mov fdivrp in insl xor mov fcomp inc xorb mov and ret and in cs pop cvtps2pd pop (bad) (bad) daa daa lcall das ja and andb ret or mov and stos sbb mov lahf cli pop sub mov lret mov mov adc icebp push dec aas rolb mov movsl lods nop daa mov cmp xchg push mov loop aad imul xlat mov pop sub rclb jns cld push mov push in mov xorb clc (bad) (bad) mov inc mov inc jne mov out movsb outsl pop in int in sbb push mov mov cmp bound test arpl inc mov jns xchg cltd std iret push movl inc and jo inc stc pop imulb sahf or sahf pop cmpl and push mov lea flds rcll in out test cmp dec mov inc das icebp pop sbb hlt ja ljmp xor repz in pop and xchg call sahf orb icebp insb test pop dec sar ret push imulb and stos test rorl push (bad) xchg jle,pn or xor push notb sar inc push orl xor lods add and add cmp dec adc pop jmp lods ja addl cmp lods bound push cmp sub pusha push mov jae fisubrl add xor mov clc dec out andl dec dec adc adc xor stc test js adc scas and shrb iret test jae add sub jge insb xchg shrb fs leave mov mov mov push dec or test or (bad) fcompl dec jbe,pn inc fbstp mov sbb pop push pop sbb add pop mov push dec cmc pusha xchg add mov ret xchg mov in shlb mov jl scas push cs pop pop insl jge dec ja int3 push ret or dec das in lret cmp cwtl (bad) push sub lcall cmpsl into mov mov cmp repz jge mov movsl dec adc repnz sub (bad) push in mov insb fucomip (bad) (bad) inc mov and or inc jb (bad) dec dec push scas and stos mull mov (bad) lcall call lock jne shrb imul jmp sbb repz xchg (bad) ficoml push in out and mov mov add (bad) and in and jle xor adc cltd pop fldl (bad) das push repnz (bad) test sti xchg (bad) xchg cmpsl dec fbld imul dec sub clc lea fmuls adc and fs fld1 fcoms mov jge out cmpsl inc (bad) xchg (bad) (bad) lea int3 in mov enter into push push cmp dec xor push fisubrl pop pushf cmp mov fs dec in pusha lods clc cmpl bound paddw xchg add ret gs inc mov pusha push stos gs rorb je aad jmp xor fisubl movl pushf mov (bad) mov sbb out add in out shl (bad) mov mov loope and enter rcrb call imul insb or mov nop sub and and fist cwtl and mov rclb xchg fstpl push jl fwait es call cmp clc push gs loope xor arpl push pusha pop jae dec ret lcall hlt lods push xchg outsb or dec jne (bad) ret dec sbb in js stos jb or jge xor stc sbb push insl int3 mul ret lods push (bad) xchg sbb sti lret je xchg or xchg xchg adc or pop dec and mov pushw divb mov insb push sbb push sbb xchg and inc jb cli xor pushf or test insb testb mov lods (bad) jns psadbw sub jg and out (bad) push scas sub sbbl fist inc rcr std jno xchg xchg stc or push cltd dec fsubr hlt add out idivb sahf and jb dec push repnz mov imul fcomps shrb sbb fsubs jo test mov es mov int insb mov outsb xor shlb pop jbe bound inc mov nop inc in mov xor mov or ds test (bad) pop out jb movsb (bad) push gs movsb fmulp adc pushf xchg mov pop mov in dec aad sarl (bad) lahf (bad) dec pop pop sub into dec int test pop push mov cmp inc dec (bad) push imul mov fisub xchg push and hlt sarl fwait outsl test and sbb adc mov or or (bad) sbb dec dec test pop mov lods push inc repz test bound pushf mov (bad) out test pop add pop pop mov sahf pop lahf mov and mov add imul mov inc aam mov sub ljmp sub xchg adc mov mov sbbl movsl ss pop call paddusb iret add xor daa push cmc ret addr16 mov xchg aas lea aaa mov inc pop sub ret dec (bad) pop outsl insb inc out push (bad) aad adc (bad) rorl or inc adc mov aas bound and mov loope rcr mov dec movsb jo xor or cld sbb jo scas push xor js rcrb repz scas sub int3 popf mov aas loopne out into adc scas and fsts fs or xchg mov icebp ljmp rclb sbb bnd cld jge movl arpl jno mov inc into jp aaa imul pushf mov nop cltd mov mov sub je cmp cmp shlb call mov rcll leave cmp xchg push or insb scas push add mov fildll pop arpl lods xor mov push xchg adc pop jg adc push dec jb (bad) cmp pop or fisttpll sbb xor aaa (bad) mov (bad) mull jle jns dec jl jb (bad) jge mov data16 clc (bad) arpl inc test cmpsl or dec imul pop shl (bad) popa fcoms mov xchg add inc in xchg pop pop push mov sbb mov pop xor mov in in lods sbb jl roll push add push push or scas cwtl inc dec jle sub scas js jnp rorl mov jp mov (bad) jl mov cmc push sbb nop cli jecxz jbe in xchg sub ja ja sti cltd mov sbb jmp aam insl stos repnz xchg or cs add setae es ja adc ljmp stc mov cmp in ret test fiaddl subl into or add xor dec rorl cmpl jno cs add mov adc dec xor dec dec or mov push lods xchg js adc cltd lods pop xchg shll jl cld aas jp insl push stos push fcmovnu mov lahf and in in xchg inc icebp pop in jae xor cld mov (bad) lret dec je imul mov cmp fwait sub out add cmp cmc mov adc test repz sbb fs shrb into jp clc in adc clc dec js push add mov aad pop mov mov xor push xor ss sub daa inc mov mov fdivl add inc aas (bad) lock roll pop (bad) sbb outsb and rcll inc adc mulb pushf jle add rcrb dec lds bnd lods push out inc fstps mov fmuls push dec dec pop jp pop loopne mov mov cmp jg push (bad) ljmp shrl inc inc xchg (bad) mov or mov add js inc enter xor or mov popf pop bound cmp clc adc inc jge iret stos repz dec outsb ficomp dec xor adc jb fcmovnb inc fistp (bad) sti and mov or out mov mov test daa (bad) aaa call mov ficoml jae mov adc ret sbb push and dec dec scas cmp mull and ret push rolb aad adc aas mov sti inc jo jo jle and daa inc mov (bad) cmp pushf subl (bad) aaa cmp in jge into (bad) or xchg aad dec fstpt or sbb enter (bad) movsl ljmp stos pop sub xor mov or and inc push cmp nop dec or movsl lods cmp sarb mov lret sbb ret add nop lcall aas mov inc fistpll jp mov inc lods pushf push xchg stc jae cmp outsl je dec (bad) adc addr16 lock xchg daa leave adc imul (bad) ffree jl ja xor pop sbb push push xor aad (bad) jb cltd jmp movsl and add into xor adc and and adc push cmp cwtl (bad) notl in popf mov push jmp sbb cmc mov imul add mov test jb lods xchg and adc dec mov add or and jg cmp stos cmp les ja bound stos push imul rcll ret sbb mov mov mov add jbe cld pusha pop sub in insl sub in out insb mov addr16 lahf and jl dec and fmull fwait shlb mov cmpsl call rcll out mov jg or cmp inc insb xchg xchg mov adc shlb or shlb jo sbb jl inc mov push push mov and push hlt add dec fldt xchg cwtl jb in cmpsb ja add adc stos in cmp outsb xor pusha cmp out rolb lret or mov add mov imul (bad) jge xchg and daa fnstcw fldenv push or lahf xor ljmp div cwtl push inc push adc sbb cmc fwait in pop xor or add stc cmp jmp and or mov mov adcl ja dec or sub dec cli sbb mov jb daa pavgb fmuls jl dec test roll fdivr add cld inc adc bound or pop mov stc push sbb fsubl or xor xchg push repz enter xchg mov ljmp popf pop iret ds cmc push xor push push fsubrl fadds push adc or or mov or mov dec inc inc pop cltd int3 movsl out pop movsl and dec adc mov jmp push dec adc lcall jg fstps stc xchg fisttpl sbb imul pop aas or (bad) (bad) lahf aaa inc ja (bad) mov loop nop aas dec daa popf iret mov sahf mov push jbe jmp sti and insl lret in test out cmp ja sbb dec loop mov sbb (bad) mov movaps js lock dec fmull dec stc fisubrl cmp idivb sti outsl rorl ss push jno and icebp cmc sbb sub (bad) fidivrl cmp add mov stos or cltd lahf sarl (bad) dec adc fst arpl addr16 addb jne adc push push mov (bad) sub jecxz int3 fwait pop jno out cmpsl mov fisubrl out dec outsb call push push ret movsb adc cltd push clc ljmp or arpl pushf pop xor adc movsl sbb pop int ss pop je pop aas loop jmp sub pushl hlt mov push cwtl loopne xor imul (bad) ret adc adc subl cmpsb gs rcll lret mov add xlat cli ror mov mov lahf mov icebp test (bad) add pop jnp add or psadbw xor mov mov and push mov popf nop xchg mov bound add outsb addl dec stos fbstp mov repz bound (bad) rcl mov mov loopne loop lret in mov icebp xchg mov jo pop cmp lods sarl cmpsl out test push push imul sub in jnp cs lods sti sbb les dec push stos xor mov int and mov xchg movsb pop push (bad) jae jp pushf cli inc pop add enter dec stos sbb lods adc pusha cs loopne xchg repnz lret test xor fcmovu sbb dec cltd xchg mov or leave mov ret and mov scas scas pop stc mov push dec xor push pop and insb cs fwait cld jns xchg push es lahf jl push push mov xor bound pop push gs mov or mov xchg aam jno addr16 ficompl scas xor imul or sub imulb push sub stos and fstps imul aam stc mov jle mov jp out in aas mov fcoms aaa cs xor shlb enter enter pop add aad mov int push call sbb scas sahf frstor xchg xchg xchg add (bad) jae aad or xor fs mov dec mov push sbb (bad) dec test in aas aas ja stos pop mov jp adc adc xchg lahf jne pop orb lret stos dec out iret loope cmpsl pop in arpl xor inc sub fistpl addl add sbb fwait cmp in lods dec jecxz cltd out sbb test in daa leave jge jl xor mov mov sbb jo inc movsb inc repnz mov jg mov nop inc sub ret jmp adc inc in and fnsave cmp test add daa popa cmp mov es fmul (bad) roll mov in xchg (bad) lods ss out jo test into sub mov or sbb popa cmp call movsl int inc cwtl cld and daa xor cli push test lret aam inc movsl pop jns xlat jecxz (bad) out pop aad and mov dec jne mov mov pop bound imul jl pop rclb push (bad) fcmove dec je mov repnz in call sub and mov mov mov dec pusha cli mov ss gs aad lods ficomp inc mulb cmp fild pop mov jnp scas jle dec loope pop mov mov cmp push cmpsb outsb ja popf sbb mov fstpt cld push sbb cmp push gs in cli push xor test jb mov inc clc loop or xor adc jb mov xchg jns rol xchg fbstp mov or xor test inc pop cmc mov faddl std add test lret cmpb push xorl mov push push or mov (bad) test sub sti pushw add add mov pop pop into jno push push dec pop push std cmpsb fs adc add dec pop push cld ret mov outsl js add into es mov cmpsl arpl push push cmp jae out ret (bad) out pusha lret hlt imul sub cmp lcall mov pushf dec nop aas shr inc pop jl int3 push jg fldl jo or sbb fcomps out cld cmp mov addr16 sub sub mov pop es jecxz mov mov fidiv fidiv ja in xor (bad) out addr16 cld adc jl decb inc fild int3 cmpsb sub sbb push sub sub mov (bad) cmp icebp xchg jmp adc fldcw jne jns cmp dec std dec adc inc mov pop xor out jecxz and xchg out mov inc xlat daa fildll cmc pushf fisub mov or or pusha cmp sti gs data16 fwait adc jne (bad) in push jl ret pop insl in jecxz mov cmp sahf or inc ret inc or adc aas mov (bad) xlat mov movsl push movsl (bad) outsl fs jb pushf cli movsl lret cltd das sub add sub rolb sti std xor push les and sbb (bad) mov jecxz rclb lods dec or inc cmpsb aam sbb xor fidiv or cmpsb xorl push jbe (bad) xchg push inc (bad) push pop add jb sbb loopne xchg mov aam dec out lock or (bad) std push call andb or ret shll es or test add jg adc rcrl dec divl mov es mov data16 ret fsubs ret adc (bad) xor scas jnp jno fisub out int es enter inc adc dec jo mov cmp (bad) cmp loop cmp xchg mov jb pop sub push leave push (bad) ret mov call add call test lret jns cmp and inc (bad) jg mov (bad) imul mov pop push cmp out xlat pop xchg pop cmp jmp test outsb pop lret popa js or and jns dec fwait adc orl pop movl xor testb cmpsb dec jle xchg mov pop scas cmp inc lods xor mull imul mov jno iret adc pop mov mov bound into lcall inc push sbb adc sti jo cli iret imul mov adc mov in out in enter fcomps (bad) mov cmp jg or push xor mov cld sbb outsb mov test loope daa aaa or sbb or xchg adc mov leave adc lock notb repnz dec xchg int3 (bad) mov shlb or dec and dec mov movsb clc sbb sbb je call xor mov out test cmpsb inc xor iret mov lods leave (bad) rclb stos insb lea xor xchg lret jnp and mov xchg add cltd jns in and cld shrl jno pop sbb int3 xchg mov push jge push iret je xchg mov jbe dec or sub pushf lcall inc xchg test aaa repnz fwait es nop xor (bad) outsb movsl jne js,pn (bad) cmp mov dec hlt jle mov cmp in xchg pushf pop pop dec clc outsl adcb jg stos js aaa cmpl inc lods mov out cmp pop pop lret dec fnsave sub icebp divb daa fisub mov push call mov sub or bound (bad) mov mov icebp mov mov add les adc xlat in mov jecxz insl jmp je xchg (bad) lods bound adc or lea cmp gs das cmp fiadd and mov leave lret sbb test push mov add jo fistp mov js push lods inc jae xchg (bad) (bad) push frstor sarb (bad) lods push lods ljmp loop pop pop aas mov ljmp addr16 dec and dec js push jg inc pop cwtl test mov jl fstpt pop or leave or (bad) nop nop stos xor xchg test and xchg in or lock lcall stos jmp dec sbb adc cmp mov test dec call jbe mov jle pop pop xchg int3 mov dec add out movsb jge sbb hlt dec jmp les xchg mov enter mov pop loop (bad) cmpsb adc loop adc call (bad) mov adc sbb mov pushf lret (bad) (bad) dec or lock lods (bad) in or lods mov lahf subl andl and ss pushf fstps cltd jp in pop cs inc repnz bnd rcr mov add or adc inc repnz jo and (bad) out popf ljmp addb xor mov dec or data16 loopne fs pushl jg mov jnp pop insl adc shl insb mov fs lods or xor adc inc or sbb xchg add insb into aas (bad) stos jae out cmp jno dec pop dec gs mov (bad) sbb scas and (bad) mov jg (bad) dec std inc aad xor jb pop jecxz pusha dec aam adc add mov xor movq push hlt cmp mov cs daa and and rcrb jg add movsl jns nop cmp xor mov subb in sub push add loopne nop ret or nop gs daa lahf jmp mov xor mov (bad) (bad) je and pop fistl sub and cmp into lret pop fstpt in dec inc jnp gs lea ds push insb lods xchg add mov mov cmpsb aas pushf fsts push adc inc jecxz cli lea adc cmpsb leave in mov jne cmp inc lods push (bad) lret sti fsubs push cld xlat in pop outsb fildll dec cmpsb xor mov mov xor mov xchg cmpsb js in daa add jmp xlat out out push push ja pop and imul shrl dec movsb rcrb sti nop aas push imul (bad) imull mov in add jno lds ret dec or jl adc xchg add cmc cmpsb les push call cmp mov pop pop pushf repnz loop lods loope mov popl mov xchg xchg push popa dec test pop and xchg cmp dec sbb sub loop stos sub in outsl or inc sbb data16 push xchg adc fmull into and adc mov jl mov mov xchg and sahf repnz sbb xchg cltd dec adc imul xchg or mov imul fbld mov aas jnp fdivrs aaa adc nop aam dec scas mov jp xor out lods movsb xchg gs lahf pop xlat insb dec adc xor cld jb mov fdivs icebp cltd ret inc jl hlt pop pop mov mov jo outsb test scas sbb das jb pushf xor cmpsl adc es jae or rorl rcrl in push dec cmp sub mov pop popa adc data16 sbb or movl sbb mov dec xchg mov push inc fimull sbb pop jne rorb add cmp jno ret fxch loop inc jmp aaa jl cmp pop (bad) xor jne ljmp adc sub dec int3 add or mov sub lahf ror and push arpl jns push push arpl jle mov inc mov out jecxz das dec jl xor movsb sub pop outsl mulb pop jle (bad) loope frstor leave sbb rorl mov int xchg jo in add aaa pusha lock pop cmp outsb lock mov adcb mov pop jle xor jl jne inc xchg sbb sbbb add jge dec aad inc fs dec roll flds repz dec inc sub sti mov jle push jae pop mov cs pusha (bad) flds mov (bad) je sbb jb insl jl pop loopne shlb and push (bad) cmp cmpl jl,pt movsb fwait into xchg adc daa fsubrs dec inc imul enter adc cs jge xchg adc adc sar mov and ret xlat aaa cmp in aad stc inc inc push stc pcmpeqb jne scas (bad) stos add push xchg fnstcw mov push jmp int rorl pop and into jo xlat faddl sbb daa sahf cmp mov inc lcall imul pop aas outsb dec push or outsb ljmp xor dec push adc lcall cmp pop xchg and bound js les loopne (bad) pop xlat fs push gs push xor mov in in mov or push scas or dec add call ds ret pop cli xor sbb cld jge into jne mov ja lock (bad) dec cmp lahf in adc cmpsl test test and jmp pusha fwait inc push cli inc cmp test (bad) adc insl add dec pop daa addr16 aas sti or and call dec movb dec jl,pn xorb mov cmp mov cmp or or hlt dec lcall sahf or cmpl sub or test sub jo mov mov jmp jmp cmpsb dec or sbb negl fs lea ret mov jge cli outsl jg sub hlt sbb bswap fistp es das xor jmp int3 mov iret (bad) sub inc xchg xor push mov sbb add push push dec bound outsb sub xchg pop mov push int inc push sub pop pop cld cs jne fwait cwtl js lds imul out inc and (bad) leave or add pop fisttp (bad) clc ret fs jg loop loop in rcl jmp mov jbe nop pop out sahf out aad stc lock xor enter xchg cmpsl out mov rcrb lcall or mov or imul dec lret fistpl test adc jbe mov or mov test cwtl mov adc movb stos push cmp enter aas imul adc pop xchg stos xchg scas cwtl (bad) test pop mov int xchg call loop jecxz imul das pop out mov mov daa cmp int ret mov addr16 dec pop dec adc (bad) in fs xchg cmp je fisttpll xchg sub orb mov sub mov aaa mov xor add daa lods stc jp push xor mov and mov and (bad) pop and lds mov cltd fneni(8087 mov mov inc outsl sub fwait mov (bad) std push pop je pop xor fist pop aas sbb iret in adc push ljmp pop dec mov push mov popa and add out push rcrb dec inc int rcl mov cmp arpl cmc (bad) mov jns test or add inc push push movsl jp pop sub mov sub hlt cmp sbb jae pop mov and (bad) xor orb lods jl lock out (bad) sbb ficompl dec lret leave insl into rcrb or inc sbb mov xchg (bad) imul pusha pop movsl cmpsl ficom mov sbb lods loope fild pop aam cmp mov test leave loop mov inc fwait or icebp mov cmp mov ljmp mov xor xchg mov adc lods test bound inc mov mulb arpl mov xor mov out or repz ja (bad) repz cmp push loopne test adc push bndstx pop or scas dec adc add xor int jne cmc xor cmp lahf popa mov dec pop sub mov jnp adc jbe sbb cltd pop jmp sub adc (bad) cli cltd lret enter out or mov orl mov jo aas rcrb push cmc fwait xor mov push push outsl mov push mov jbe (bad) dec arpl aad mov int3 sbb sti push iret xor aam xchg pop push addl test pop add pop insb mov xor add scas mov fnop xlat and cmc ret inc push aad lock xchg lret lods pop jl mov lods mov xor mov mov into mov jb sbb cs add push adcl repz or popa outsl mov fsubl outsl addr16 incb in in out lea fnstenv adc xor out repz adc xor sti nop ret cmp sar adc lods mov add cs sub and std inc or (bad) cmc mov mov (bad) idiv insb repz inc lret mov pop stos mov push xor xchg jnp mov cltd addb xchg mov gs mov pop push lcall dec dec cld ljmp push sbb xchg mov xor mov (bad) jb into icebp dec ret ss addl loopne xchg mov xor incb sbb mov xchg push mov cwtl ror jbe inc cmp mov sub lods jae xor stos pop popf sbb jle ret and jae test into je pushf popf push repnz xor jae push mov sub jmp pushf add outsl (bad) mov pop mov popf stos xchg or (bad) rclb popa std popa insl jne xor stos jg js dec push xchg push inc mov cmpsb cli dec jp cmp dec sbb pop jl dec insl cmp lods call (bad) jno ljmp jmp data16 push ss ret mov or dec pop (bad) jne aad iret out jl push pusha sub xor jge lock mov inc or mov lahf pop jbe xchg xchg or jg dec push mov pop lcall mov repz lahf fwait pop jnp sub jp xchg xchg add fcomps test mov jo adc popf mov sahf out lods les push test loope ja mov cltd ja cli scas jp mov push bound mov pop out xchg pop into (bad) cmp mov xchg call dec inc fldenv out test or (bad) dec push xchg push (bad) icebp int sahf fistl cwtl (bad) iret mov xchg mov pop push insl es int3 in sti (bad) xlat (bad) dec jnp scas pop ret je sub sbb and xchg mov out push push incl and sub sub fidivl cmp xchg loopne dec add cmpsl addr16 adcl inc inc sub (bad) enter jne je jecxz xor lahf cmc jle sub bound jb pop scas jle (bad) push pop push sub (bad) int3 adc data16 xor mov lea lret cwtl mov popaw mov fwait ja fbstp insl inc (bad) daa mov std cltd jge push ror dec and jl inc xlat mov cld cmp int3 and loope push lahf int3 roll loopne xlat out mov cltd and sub push jge pshufw leave imul or mov enter cmp loop imul sbb cmp add mov dec leave test jns cmp adc stos fisttp test lds addr16 or mov xchg and and cmp insb or cmpl sahf or mov mov xchg push mov fnstenv fnstsw jmp into out enter aad push mov inc adc sbb (bad) ss (bad) lea jecxz aad hlt aad mov jmp movsl dec out jecxz in rorl aam mov push inc mov popf std cli stos jno sbb sub (bad) (bad) jae sub data16 negb adc enter mov and ljmp or cwtl mov add and sbb inc sub push outsb sub mov mov sub loope outsb dec sub fwait out stos jnp (bad) jle add stc mov cld cmc es int3 xchg push mov into xchg push sub leave in adc fxch (bad) leave popa pop or dec mov fs out adc add push cmp add inc dec inc stos xor mov xor push add or jb loope and inc and test mov out cmpsl fdivs pop ds push mov adc jge les mov inc scas inc gs test (bad) out and jno pop adc shrl aad es test fwait push cltd jecxz int3 cmpl sbb and stc std inc mov push in add push inc movsl mov mov movsb dec shrl jno imul test hlt or in mov push mov fcmovbe or lcall push testb push adc xor lea loope push inc stos repnz dec fiadd or insl mov push fdivrl leave test (bad) mov push inc fistp jecxz pop fstpl roll sub xchg daa mov inc ja cmp mov dec and inc imul xchg cmpb clc or mov dec adc xor fisttpll pop mov popa outsb mov cli fstl mov enter divl imul imul cli mov test hlt dec mov cli inc xchg aaa mov jno ffree jo gs lods or mov xor sub inc add mov push scas adc les xchg sbb dec xchg mov dec inc cmpl (bad) nop jp mov (bad) insb add dec mov xor inc mov sbb inc xchg int jg subb sbbl sti addr16 subb xchg push mov mov es lea popa iret mov xor idivb lret call test leave jnp icebp arpl aad jns jmp les stos rolb xchg dec jae (bad) rcr leave cmp adc lods gs push jl stos mov ds cmp mov cwtl add sub xor (bad) dec fidivl rep sti int loopne mov in enter ljmp icebp cmpsl iret sbb bound sar jl jg iret mov mov mov ljmp imul repnz ljmp sbb mov jp and xchg xchg xor adc mov fnstenv jbe jo push std pop ror addr16 dec (bad) jae fisub ficompl or aas mov cld mov addl xor or arpl fldenv pop mov mov inc push dec repnz (bad) cmc cmc push repz mov mov sub addl dec int3 rcl or sti mov add lods lahf xlat fmull add adc cmp (bad) insl int3 hlt xor nop xchg lret aaa xor xor (bad) xor cmp insl add inc fucomp mov pop fistp test pop cmp cwtl sbb mov data16 aad dec sub dec popa mov (bad) into icebp repz push push xor stc jmp pop mov mov or pop sub scas mov outsb sbb aam outsb sbb stos mov test jno mov xor sub cs push jl sbb cmpsl xchg jns dec adc inc add into imul pushf cmpsl (bad) ja stos test jno dec pusha xchg dec or fcomps xor jne sbb dec inc jns mov mov lock jmp iret mov push data16 push (bad) ret inc push mov sbb nop mov sbb xchg mov in rcr jl mov add push mov mov cmp and shr outsl loope aad dec mov push dec jl ds ss imul pop jge test inc and pop fimul push test jle ds add mov je stc mov mov mov nop negl (bad) icebp fs out clc inc cmp push movl pop pushf cld sub and push fisttpll sti push pusha movsb jb push mov adc dec and rcrl aas mov test push add jmp add jmp fildll sub in nop dec movsl sub pusha push adc lcall xor out xchg je sbb pop out jbe mov inc loop cwtl pop arpl out mov js test out ss push pop and (bad) pushf inc jl fwait dec dec (bad) mov movsb nop and mov in int3 or rcll les mov sub clc xor inc or jae push push or adcl das add sti mov dec out cltd inc push or cmp fucomp sbb push in adc mov int3 add xchg push in lcall dec xor lret cmp imul inc rorl mov fildll orl sbb cmp lret ja scas fstl in ss idivl dec mov push jnp pop call and xor (bad) fnop aas ljmp cmp loop jne mov inc or jl pop sbb insb outsl ds mov dec mov mov (bad) and addl inc jno rcll inc mov lret xor mov mov stos cmc sub mov movsl jb mov aam adc popf lods mov push addr16 mov mov stos cmp mov inc mov orb jmp (bad) dec xchg arpl stos mov jp push cltd add sti pop pushf ja sahf lea push dec mov cmp test imul cmp adc xchg insb mov lahf xchg loop cli and mov cmp cmp or aas je repnz cs cs movsl loopne mov mov xchg scas out cld loop or mov and push repz cmp loop jne cmp enter iret mov nop je aam or fwait and xor roll sub jmp dec xchg sbb into (bad) cmpsl data16 pop xchg subb inc dec into mov (bad) jp adc xchg sbb sbb nop in pop fldenv in mov jno (bad) test xorb repnz push fdivrl addl outsl repz imul dec loopne dec pop xor pop xchg mov bound jp xor jmp pop xchg ss ret int3 inc lcall push data16 std mov mov mov std jmp scas out xor pop sub jo into mov cmp cs cmp xchg es arpl inc jmp int push in or nop mov rcl out jg mov addl push jno fcoml jmp sub mov mov push mov inc jle js jno add addr16 fild pop cli js or or in test dec xor cmp jne scas stc test cmc cmp pop and push cld jle leave push andl in dec in fs (bad) jb cmp pop daa out mov mov xchg cmc mul imul xchg add int xor push add mov movsb mov cmp aam pusha stc cmp mov (bad) adc mov dec frstor pop mov sbb adc nop je enter cmp (bad) xor fcompl call mov arpl and int stc stos pushf inc test mov sub ret push aam pop test lods adc sub pop xor dec in inc mov mov std test inc ljmp pop hlt rcrl daa iret add xor ja (bad) dec mov daa jmp daa lock and mov sahf (bad) xlat lds iret xchg (bad) out sahf in and ficomp jae or jle rorb mov sub push leave fisubl mov mov addr16 repnz pop xor lret cwtl jg adc repnz cld out ljmp dec out fsubrs jmp mov xchg inc and cmp (bad) push rolb mov add push in loopne inc xchg and mov test push ffree fistpl push out movsl dec ficom or adc andb sbb mov mov test (bad) xor iret aam sbb mov dec rorl dec out jge jmp test fcompl inc lds sub fiadd sub or in (bad) cld dec mov and xor pop jbe rcrb push movsb inc data16 fidivr rol jmp jno pop cli sbbb mov xchg ja in push call push (bad) out or (bad) shrb inc repnz adc out jae jmp xor dec cmpsl dec imul mov adc (bad) sub fstpl or adc repz jmp jge lds add fisubrl sbb test data16 cmp push fst jns stos mov test push sub mov pop loope inc and enter test pop ret sbb jmp cli add jns hlt (bad) xchg adc (bad) and push push mov jge push mov pop orl xchg movsb pop mul dec and in mov jl cmc mov mov in cmp aam cmp jae mov xchg xchg xor mov out addr16 (bad) push lock adc sub lods lret push xor lret xchg mov push mov sub cmp pop cmp stc or push dec lock dec cmp pushl rolb inc das mov repz outsl inc addr16 inc xchg sub jg cmp mov fprem1 (bad) sbb add add rorb stc movsb outsl lea xchg fild pop ja or scas xchg lock mov jl cld movsb call test movsl lock jmp add arpl push (bad) ficom adc jns push jecxz xchg mov or test lock push inc fstl adc xchg xor pop jp in inc xor pop cmp shll dec ror outsl rclb jo mov loopne mov and mov scas test mov sbb fistp cltd sahf popf or xchg pop lock gs test inc repz lods ja cmpb test call inc cmp sti push xor popf lcall and sahf inc lds mov mov (bad) or rolb fs mov lock jbe les sub push lods ror das (bad) mov push enter push mov (bad) in cli xchg data16 sbb aas inc pusha sbb iret mov loopne and iret push dec in (bad) mov je dec mov test xor mov push mov addr16 mov adc sbb outsb xor mov repz xchg and push add outsl popa lret and shl push add mov mov in jne mov pop fwait aaa bnd addr16 xchg inc pop jnp and jle inc or jg test iret inc hlt jae out fcomps lea fcomps xchg cmp not pusha inc jle,pn jmp push int3 dec push test ss mov cld pop cmpsb xor ja xchg pop (bad) mov test xchg mov jb aad inc push dec test popf in fild stc mov (bad) mov daa lahf popa push call xchg push mov cltd dec jge cmp mov mov inc mov dec sbb hlt test pop jb nop add lds ja jno and popa movsb push cmp in test (bad) push out ficompl mov cmp adc (bad) out push fs aad ja je (bad) jnp inc call and imul mov imul or push push pop idivb mov or sbb inc cli out (bad) mov insl popa cmp or dec cmpsl clc imul cwtl inc es (bad) mov and ret push push fisubl push and int sub adc xor cmpsl mov outsb pop xor int3 repnz ret xchg mov fcmovnu xchg call (bad) mov sub dec mov dec xchg hlt adc cmp fbld and test idivb pop xchg jl mov repnz sbb shrl ret sahf and push cltd push mov fildll lods xor cmpsb in sbb cmp int3 repz cltd test sub pop jmp icebp (bad) jmp mov and out lods cmp xchg fild (bad) sbb out (bad) aaa das js in ror stc ret in roll sbb or cmp inc in ss nop icebp mov sbb (bad) xchg adc loope je leave adc enter aad cmp mov or inc pusha jo xchg cmpsb sbb mov xchg (bad) xchg (bad) mov ret jge ljmp lods add sub insb pop bound gs out add or test and adc mov out mov lret add cli jmp or mov in jbe cmc inc scas jp test push sti or adc sub out dec bnd pushf int3 inc or js fnstsw jae inc or lahf jns in mov jnp test in cmp daa xlat lret lcall inc pushf push loope frstor ja stos or sub push lea (bad) movsb lcall scas mov dec (bad) mov enter xor iret xchg fstpl mov xchg daa cld dec fisttpll aas pop mov cmp outsb out cmp jae daa jecxz mov inc popf popf inc hlt jns pop pusha sbb imul mov jl and push sub pop (bad) jae cld jge stc aaa fs mov xchg (bad) repnz movsb adc sti in mov (bad) pop jno imul or inc inc ret orl adc out into push pushf imul adc jo int3 rolb out add inc test mov push mov sarl inc and dec ret push dec cmp sub iret outsb ret sbb insl cs loopne add sub pop lock fdivrs (bad) clc jmp xor andl scas mov xor push int and push sti les pop sbb outsl rorl movsb add adc fs pop add pop push aas cmpsl jl lods repz sub mov adc mov fldl sbb in mov (bad) dec mov push push clc or jne bound inc lea shll ss adc divb in mov push mov insb in xor lods sbb mov sahf xor mov pop imul jmp xlat (bad) es loop (bad) loopne pushf fstpt xchg xor movsl push outsl push dec mov or fs scas aaa stos imul out js inc dec lahf fnstsw test sbbl mov inc pop add ds (bad) lahf out cli sbb push pop or inc xchg sub aaa jmp pop pop insl mov mov je decl test data16 cmc clc pop sub ret loope icebp mov pop mov xor imul mov or arpl pop lahf xor inc sub sbb adc sti inc jmp pop gs lcall jbe dec jo loopne dec lret ss test pop and jb jbe jg sahf push cmc or sub mov mov mov inc fdivrl pop ret dec sbbb xchg outsl jns mov (bad) sarl xor shrl add inc pop xchg inc insb fwait jle push mov jl fimul pop jmp pop mov nop das test in enter mov scas jl (bad) fdivl test sahf jg pop cli adc aam repnz add pop push sti icebp add rorl iret leave fsubrl jnp lea cmpsb fwait pushl aas sbbl mov ret stos jmp and int3 int3 jmp adc sbb mov xchg mov in stc subl and xor cwtl xchg mov movsl jns mov clc mov and add mov rep adc sbb push in adc pop sbb xchg add lret aad mov flds lahf fdivl out xchg and push sti cmpsb and pop pop fsubp xchg jns (bad) loopne icebp bound movb or sub rol cmp mov in cmp in or and (bad) adc imul or out loopne jbe cmp or fmuls js fs and sub fistpll (bad) std cmp push insb pushf cld push and sti pop icebp jle sub mov jne cmp xchg sbb and aam adc jge outsl mov push pop sahf cli jp push mov outsb push in aaa (bad) popf (bad) fcompl test or mov js mov xchg test xchg or and push mov push cwtl negb cmp cwtl cmp rclb add mov jmp and mov ljmp stc jae xor jg movsl (bad) ret mov dec sti xchg add pop cmp cltd adc scas ret sbb (bad) jmp xchg fcoms or pop std (bad) (bad) cli arpl and push lods jnp call push in lods and rclb pop inc in jno popa ret push sub fucomp mov mov leave add dec aad scas inc (bad) cmpsl inc loope fist iret lret ds mov mov mov jp jnp sub dec mov sbb or pop jns sbb sub mov mov popl xchg and sub jg ss xchg cmp (bad) fwait insl and jno out stos mov cmp xchg insb mov xor mov xchg out jge out ljmp inc pop pop je lock cmp call (bad) sbb arpl lcall dec aad xchg fildl rcll andps loopne push pop or and and sub jne push loopne jmp mov mov lods jecxz arpl (bad) sbb pop jle daa dec out psubsb cli es ja test push xchg adc mov add shrl pop xlat out (bad) push push mov lods mov orl jmp stos inc test adc iret mov outsb jge push inc add enter xchg lods mov sti adc insl aam sbb add pop test adc jns xor enter shrb stc mov out fstl mov mov cwtl sbb pop inc ficoml movsl xchg add scas loopne sbb jo pop push push xchg out enter cmp jmp rcrl inc inc and lods (bad) mov pushf xor lret cmp mov jbe das fnstenv xchg pop jle daa mov subl shlb add lea cwtl test mov in push xchg sub push pop sub dec adc push ja lret mov cltd pop xchg call je cmp add fsubrs mov adc out xchg jae dec repz inc mov mov je sub add pop lret popf mov jg mov mov inc cli lock push sbb pop lahf arpl fidivrl jae jae xor xchg jb test ror xor nop add xchg int shrl je jae or mov or lahf test dec iret pop cmc nop incb sbb push (bad) sbb out or sub sub lods sub mov ret addr16 xchg test dec rcr popa add xchg lret cmc adc jae ffreep inc xchg int adc dec jno xor fldz add cltd inc ret jbe xchg dec mov sbb nop adc add mov mov mov call jle lahf lahf fdivr add adc (bad) stos iret or inc mov push sbb and ret clc fwait clc xor mov mov outsl xchg sahf lahf into notb mov mov lret push inc cmp scas mov inc xchg pushf push xor ss js cltd fldt add fcmovu xchg dec loopne mov fldl jmp jnp cmp stos jno add into mov add ljmp std stc pop sbb outsb (bad) sbb rorl icebp cmp add cs cmpsb test and sub jnp test enter push out (bad) mov push or xchg mov fdivrs xchg int adc cs dec add fldt movsl mov les inc add mov or cmp sbb mov shrl mov loope in out inc jg jb mov sbb adc push ljmp and (bad) stos aas mov mov sarl mov loop das jmp lea add test fsubl mov add pusha test sbb cmp hlt and mov xor les mov xor xchg test mov or sahf addl cmp popf pop push or add xchg loop inc cmp push fldcw mov inc (bad) mov imul lods jae cmp push lret imul or mov lock xor fisttpll lret adc fildll mov lods (bad) mov stos add add sti in mov scas xchg jo xor inc scas stos clc aaa mov jle fwait add cwtl sub add test sub mov (bad) or mov imul pusha (bad) mov fcom xchg clc jmp jbe out fdivr xor lock inc mov mov roll fcom jmp daa insl bound inc std (bad) ret cmp mov fisttpl cmc lcall aaa lods dec (bad) mov repnz dec sti sti lds pop dec pop mov ret or jecxz mov and mov or subl jae adc sub sub jg in inc int mov test aam xchg pop or push jl cmpsl leave cwtl fcompl inc mov fldenv jge (bad) or in adc ret jno mov rep mov nop sub subl scas cmc jno ficompl rclb sti jbe xlat dec lret sub add pop inc xchg outsl xor mov pop or inc inc inc jae push (bad) repz mov aas or gs mov cmp lahf xchg andl (bad) push jae jbe push sbb je movsl jno xor jle xor icebp sub imul sbb movsb loope jle fidiv mov scas cwtl sarl cmp sub sub mov mov add mov sub lock inc sub inc es jl inc lret int3 and xchg xor ljmp inc jbe or sub cld pop sbb xlat mov sbb fs fisubrl and bound out inc lcallw movsl and outsb sahf test jmp pop outsl aam and scas add push cwtl (bad) imul jmp nop jecxz add decb cs notl cmpsb stc scas dec bound inc mov imul rol (bad) or jb repz aaa insb mov scas mov imul push sti mul push xor push adc ljmp mov les jge imul mov js xor pop into arpl int fucompp lods xchg aas je xchg int3 push pop int3 ljmp cmp or adc pop lcall xor pop rorl lds pop mov mov xchg nop into jae push xchg pop sbb adc adc mov push pop mov pop or std lret mov mov rcl (bad) into jle mov push pop (bad) or and (bad) sub out std fdivrl je inc (bad) cld xor push mov repnz xlat push (bad) cmp cwtl rorb mov jae sbb lcall cltd jae fistp (bad) testb add mov mov mov in mov inc icebp xor fimull sbb xchg mov inc gs sbb stos loop cmp js inc add aam lock mov mov add decb fnstcw mov stos mov add adc cmp inc rorl lods mov inc movsl pop cs adc xlat add pop push mov dec test lcall in scas cmpsb inc sbb in or cwtd mov mov int3 std in int imul addr16 mov jo push sub and ret add sti ret mov sub clc (bad) mov dec ficompl jg or xchg push aad out popa pop xchg adc movsb add imul push dec xor or mov pop sbb dec inc loop dec inc jne push fsubr xchg xchg cmpsb outsb lods int rorl sub and sbb sti stos adc dec (bad) mov mov push out xchg jle pop push in jl inc mov push pop insb pop mov mov push ds (bad) andl pop sarb xor hlt cmc sbb inc push (bad) scas xor sbb imul (bad) ds add repnz xchg adc cwtl das xor popl cmp mov adc jnp and pop popa xchg popa and cmc or and mov loop xchg pop nop (bad) jne inc shl jbe jp (bad) imulb xchg stos adc cmpsb ret sub lahf int3 std sub adc scas lcall adc mov xor jae xor cmp out fdivp sub test (bad) in jg hlt jo jg pop add clc (bad) or insb inc insl sahf movb les imul sub stos insl cmpsb xchg ret loop mov jbe and aam insl and arpl loop popf test jbe stos sbb lea out xor test popf popf xchg mov sti out test icebp lret sbbl fistp dec das aam mov jle es pop mov sub out in or adc std xchg add fs add jae and popf mov rorl xchg and cmp loopne int3 adc sbb jmp negb dec sbb xlat jecxz bound jmp jge mov lods mov sti inc ss ret sti pop jle adc pop insl cs imulb mov (bad) cmp (bad) call (bad) dec cmp mov movsl mov and cwtl push xchg mov or movsb adc sbb test push icebp pop int cmc jno lds fsubrs sub cmp jmp sub notb fisubl cmpsl loope xchg jno xchg xchg push xor shrb int3 in push xchg data16 push fadds popf sbb mov jle mov sub or test inc and setb outsl sbb cmpsl stos ljmp (bad) out lds xor fsubrs mov cwtl add mov cmp push in pop gs fsubl and xchg cwtl cmp aaa mov inc dec (bad) ds ja push arpl push sti das ret cmp jns jg mov pop pop sti cwtl jbe imul (bad) bound mov movsl (bad) sbb ds (bad) outsb push pop das inc pushf add add sbb dec nop mov movsb loop nop jno dec xchg (bad) in xchg repnz mov pop stc inc lea add mov sbb (bad) sbb xor xlat (bad) xor aad dec pop je and and std roll cmp outsl movsb mov test cmpsb std loop or push pop inc out push bound das pop xchg ret std ljmp enter xchg inc sahf sbbl call aas mov mov sub mov push int pop cmp stc dec add mov and dec push dec idivb leave lret subl cld cmpsb fwait sbb pushf jo dec outsl inc icebp push jno xor push mov loope adc dec xchg loop sbbb push pop mov sahf inc or cmp jg stos jge outsl aas clc pop cmp xlat dec xchg iret pop push fmuls sbb sub das (bad) jge out paddusw movsb popf cmp jae adcb (bad) fnop test mov (bad) cli cmp mov les icebp xchg sbb or mov mov and mov loope inc stc or adc lcall add pop cmpps leave mov push ret stc cltd mov push inc or movsb add stc xchg jne ds or mov insb mov ljmp shl xchg pushf adc cmp or test mov out in push xor lea or nop (bad) and or inc hlt test inc inc icebp daa jnp subl xor jge push fwait pop adc push add cltd outsb stos ds hlt iret (bad) push rorl (bad) (bad) adc xor addb in loop in dec enter out data16 pop outsl xchg sub jmp mov lcall lods fiaddl aam in xor xchg popl ljmp inc jg out pop mov inc xlat lret addr16 jno dec stos lcall adc xchg jns push add gs mov mov (bad) sub aam in lret xorb add push xor in inc scas je daa inc adc test mov pop fwait bound movsl and es cmp (bad) aas daa lods cmp and ret mov lods roll outsb sub or jne je imul dec arpl mov adc adc clc xor pop sub mov (bad) push mov popa mov pavgw fistl std dec adc sbb and mov cld sbb popa jb sti (bad) jo dec add and int3 xchg inc cmp outsb loop outsl sahf add fisttpl jo cmpl mov xchg stos dec cs mov cmp sarl ljmp mov xor mov cltd adc movsl jp inc add pop scas add test push test and in pushf test ret jbe out xchg idivb in xor mov sbb mov cld pop sbb out xchg mov (bad) cmp outsl jl push pop js and jnp out or in jbe js cmpsb add sub movsl lret popa aam fldt add or dec sbb xchg hlt lcall pop xchg jmp (bad) gs sub cmp jmp cld push cmp (bad) xor scas popa lahf push mov loop jecxz cmpsb insl push (bad) xor dec xor cmp movsl jecxz pop out xlat les or push ret das add adc test leave inc xor cmp xchg scas mov push insb dec cmpsb pushf pop cmp mov jl out cmpsl outsl shrb pop ffree cli jg insb inc movsl sldt insl pop or ret pop jmp jl sub lret mov enter nop sahf sbb jg mov (bad) fs aas stos test arpl insb mov test sbb aas fistpl out and mov in notl mov and sub out add pop test fstpl imul rolb and dec mov mov push pop sbb jmp dec test inc push repnz push cmp lcall stc mov inc pop or jge pop cmc xor pop dec cmp pop adc cmpsb (bad) inc mov dec cmp ret in out out jmp lret push pop in sub or xchg and jno setb mov fcmovnu ss leave fisub rcrl test adc mov push (bad) mov add fwait es mov push ds push lods mov je xchg cmp mov fiaddl add bound xor push adc fwait mov repz lods aas aad scas and stos arpl cwtl jg test rclb xor sti mov mov cmp aam rcrb pop cmp push rol xor daa push out pushf mov xchg push pop xor pop xchg gs inc cmp mov ret dec cmp movsb test push es (bad) (bad) mov ficomp clc adc cmp cs in loop jnp adc outsl xchg jbe fdivrs stos (bad) adcl clc or xchg add stos cmpsb fsubrl lret mov icebp fsubs xor iret mov ret repnz (bad) mov cmpsl dec push pop mov or les outsb leave inc xlat (bad) notb push mov clc and int3 xlat js jl ja sub mov inc push jae xchg pushf ja xor out sbb or (bad) scas push or dec (bad) aaa leave ret sti push pop cmp xor jmp jne mov cmc jb repz test fs dec xchg data16 xor xchg enter call dec arpl popf mov lcall lret daa rcrl cld pop fnsave repnz cli imul out jle and mov cmpsl mov xchg adc std ja mov adc sbb out enter xlat inc sub inc imull adc mov or xor test jns dec push outsb out pop ret pop dec or sub mov (bad) fs jns and ficompl push mov aas cmp mov cwtl xchg mov fcomi inc jp lcallw jae sbb mov xchg or sbb push dec adc add push hlt int push add xchg mov pop lods push imul xlat mov and loope mov ret push sbb pusha mov mov cmp popl shlb mov mov and in sbb test int3 (bad) rol cmp cli aad enter sbb es cmp cltd insb sti pop fiadd pop ret scas and dec fmull pop mov pusha push and gs sub sbbb cmp xlat movntq out mov cmp jp mov mov add movsb add mov dec and cli mov jle ss cmc repz cmp das ds pushf mov jmp sub mov or stos popa addr16 dec xchg lock lds dec mov movsl bound pop cltd mov (bad) mov in in test inc (bad) nop and cld sub push pop or dec mov lds or or les inc je mov mov dec lahf jb push adc inc notb add and outsl pop call (bad) adc adc iret adc adc ret shlb sub push scas ds sbb rolb aam mov in into mov mov mov pop loopne jb aaa mov mov push xchg push mov idivl gs jmp (bad) dec fcomps and mov mov inc into inc inc popf stc in addr16 dec fnop lcall cli push sub add fildll and sub (bad) push mov jge push popa mov pop adc adcl (bad) jmp in dec pop icebp mov dec (bad) mov xchg (bad) fidivr mov mov cmpsb and adc sbb repnz pop xchg in pop add pop in inc adc push pop cmpsb pop outsl addr16 dec loop rorl or insb (bad) in lcall xchg xor mov aas sub jno pop jecxz ret out pop and push mov inc add mov inc mov fildl push test jb insl mov das xchg push fsub add jo lea sbb pop (bad) dec mov mov or add pop cs mov insb xchg xchg aas xchg mov lea mov arpl in add mov fdivrs (bad) loop pop push ss aam shr pop mov and adc pop adcl leave sub lret dec jmp jne stc hlt into mov pop cld fisub cmpsb mov mov clc fs (bad) xchg ljmp fist cmp push (bad) mov lock loop jle aaa pushf mov aas mov jns push aad pop sub test popf (bad) stc sti add pop lods mov rcrl repz cmpsl andl jmp negl fnsave aam (bad) js lret lods (bad) in fprem1 inc push (bad) hlt cmp (bad) push ja mov jecxz and dec dec js mov adc ss repnz jmp mov rcrl inc sub sbb daa or pushl stos je inc mov jge push ficomp push insl inc and push (bad) loop pop ja fidivl lods mov movsl scas cs cwtl jmp insl push and xchg ficompl out or mov inc cmpsl sub addr16 enter aas mov ljmp pushf stos jp add ljmp das mov inc repz nop add and cs adc xor mov sbb popa jb stos fcmovnu mov fst inc (bad) repz sub adc sahf add push nop les pusha cmp mov mov (bad) sub daa stos pop ljmp mov dec das jle jb xor add sbb xchg lods jnp sub nop imul mov or test cwtl xor cmp hlt hlt adc sub ja aam jno mov test sub arpl insb ss loop (bad) mov repnz das xchg inc mov jmp in mov mov ss imul pop lds cwtl sub in mov mov adc call arpl pop mov sbb push movsb push stos push xchg adc sub push sbb sbb and mov mov xor pop shll es ljmp pop pop xchg out jne mov shr das jae popf pusha cltd ficoml fisttpl testb mov pushf fadds imul das mov lret inc dec popf inc jmp dec and imul and lret addb ret fwait mov sbb call xchg int hlt fldl add mov dec in test push cwtl push push out mov mov cmp xlat das and and clc rcll push jp dec mov loope mov leave mov and jge push cmp test bnd out sbb adc test insl imul jb pop lcall xchg cmp das mov xchg adc mov divl or fs inc push dec mov mov inc push fucompp jo mov cmp mov out clc les cmp jns (bad) imul rcrl mov mov jbe jbe addr16 sub mov xor add jns jg aas mov les hlt push loop cmc fimul mov xchg push ficoml cmp (bad) lods jns in js mov xor xchg shrl jae lcall mov test xchg jecxz adc (bad) inc enter and ja dec call mov notl in jecxz cmp mov xor jbe mov pop and bound mov loop into into emms lock adc enter mov pop stos cmpsb mov push popf imul mov mov push popa xchg out mov in enter push ja ss dec cmp popf mov xchg (bad) rol jp mov push bound icebp pop pop inc daa cmp stos push sub mov adc pop sub add popf mov xlat jmp test mov xor insb inc adc (bad) mov sub stos inc nop mov push popf sub dec and xor cld mulb mov pop stc inc cmp sbb add (bad) push or push adc cmpsl jmp mov test cs insb cmp lret pop movsb dec push sub jmp iret sub push mov ljmp andl ja,pt sbb pusha dec lods sub xor cmpsl pushf xchg popa jnp adc push sbb inc mov in push aaa mov and inc movsl lea inc inc jle mov test rcll jecxz fisubrl fidivl adc mov mov add push fildll jp and ljmp mov pop push scas dec sbb jmp test aad mov test testb lds sbb mov popa cli scas adc pop stc sbb add int cli aas outsl xchg ja adc aas fidiv not std fisttpll lods pop cmp movsb xchg loope pop lret rdmsr adc imul add xor sub pop in xor sub test out xorl and xor ljmp push sub cmp push lret cmpsl sub mov and test int (bad) or inc (bad) lret fldcw sub movsb lods or lret mov xor stos (bad) ret sbb jb mov inc cmp stos adc jne imull lret inc jge pop ja jl dec cmp mov jnp sbb mov int3 (bad) adc xor out xor push mov cmp jnp mov in push pop mov cmpb fistpll or cmc loopne and xchg push xchg mov mov push push or sarb outsl in inc and hlt fwait cld enter sub popa and cltd stos xchg outsl cmpl push movsl xchg ja xor cmc adc lds adc roll and (bad) mov int3 xor and int3 je mov add in push jle out push leave mov sub and xor ss inc xchg shrb lahf mov jg or mov clc loope jns sub js dec (bad) fdivrs mov mov xchg (bad) jne add shlb jo push cmp push frstor test cmp xor jo (bad) or mov ss test aam cltd or adc mov jae inc sbb cmp lret lock addr16 out push fstps jnp out jp adc pusha sub or sub gs add insl lcall xorb repnz jnp push xchg sbb stc jb push (bad) jmp pop aam mov shrb sarb adc test pop addl icebp mov mov rcr mov pop mov popf jnp adc insb loop test or mov push and push imul pop (bad) adc pop mov out or mov cmp push mov ret push add sarl sahf outsb pop (bad) xor mov dec lret out das fnstcw mov rcrl repnz sti in imul xchg jecxz jp es ret sbb cmc pop ds dec jbe mov and mov jae mov dec and je jo pop jecxz movsl lcall inc add ret fimul (bad) std cmpsb (bad) test fdivrs pop jbe xor pop movsb jecxz aad and ret mov push or test mov ret push fnstenv mov lds lods ja sub pushf sub xor jno xor and into rcrb pop cmp (bad) ss es mov shlb add jge mov xchg mov fidivl test push rep (bad) pop nop jnp call cli or lahf jle loopne daa push iret inc and dec (bad) inc xor stos test out jp pusha xchg push and out imul or stos mov sbb push in sbb das aad adc mov xchg lock into push lds ss (bad) sti jo lods or sti outsl pop add test xchg hlt or inc mov (bad) push bound xor es popl push nop adc mov xchg jb cmpsb or sbb and fisttpl arpl pop and add adc inc fxch scas mov mov bound pop andl jne test and jbe loop (bad) adc push std jne pop pop pop call push in sbb js mov into xor and les int sbb cmp pop movl adc push enter pop loop loop pop sub add or add popf mov in jne es and out cmp push dec dec and pop imul inc ds arpl push push adc test dec sbb fwait mov push pop (bad) (bad) add xchg adc push pop or cmpl out inc mull sbb mov aam (bad) int3 sbb pop mov fnstenv sbb cmp adc xchg loop jmp clc and mov jmp out rcr add lds lea mov movsl into mov cmc (bad) gs loopne in cmp mov pop fwait mov lds lret mov jp or loope hlt lds cmpsb das jnp fwait loop in in es cmp sbb sbb fdivp cld sub out push and fmull push pop ret mov or dec call xor shl mov arpl nop pop sahf (bad) mov inc cwtl cs adc xlat addr16 test pop xchg cltd or inc cmp add outsb fwait sub and and xchg mov add gs bound iret test dec jo push and jl in fdivrs mov inc cmp pop push adc int cli adc rolb inc inc xchg fdivs mov test test xlat add addr16 mov push popf mov popf (bad) lret dec mov jne cmp fstl inc je enter add addr16 mov lock fcmovnu andb clc pop cld test mov cltd push out xor pop (bad) jb mov rcl xor mov fmul (bad) jmp xchg mov jne bnd adc (bad) mov push pop popa es push fidiv jo and add loop sbb jmp rcl js cmp lods inc mov xchg push sub cmp pop xchg gs mov sbb pop aaa cmp fcomp and mov dec outsb imul sub jne in movsb bound sub out clc adc pop jecxz test sbb rcrl push outsl mov mov scas jg fldt dec sbb cltd frstor stc cmpsb and xchg gs (bad) add js mov jp xor xchg mov sahf lods jmp mov adc xchg mov push scas mov loope cmc cs scas sbb or cmpsb inc bnd sub mov fcomip or jp cmp mov mov rcrb fxch xor fldenv scas cmp fmul out dec mov test movsl es mov xor (bad) or nop sbbb jp push push or jnp test add pushf adc add mov jg push loopne cs std mov mov dec adc sahf jmp mov sbb out xor jg xchg xchg mov (bad) mov pop ss inc cld sub dec test cld or jge jecxz mov lock push psllq (bad) clc js xor cli test and out shll push out mov adc or loope fsubrl or (bad) sarl ret mov inc outsl pop fs mov lock dec dec inc cltd fnop (bad) xor cmpsl mov cli cmp sti sti xchg jo jbe loopne loope std jle fcmovb cmp addr16 or pop divl mov test stc pop and hlt ds (bad) (bad) sub sarb or lods outsl int add push mov (bad) pop lret pop and addl jno push sbb stos mov cmp pop jo mov push push mov adc fidivr push and jle or inc mov movsl fistp pop clc cmpsb inc adc jecxz jae pop inc jb adc fild sub lahf adc insb std cwtl mov ret iret jae sub rcrl jmp push loopne inc mov cmp push fdivp and xor pushl inc sahf (bad) lea inc les cs jmp xor sub rcll outsb int3 fdivrl push pusha sbb dec or sbb xchg std dec pop test sub adc pushf adc or adc add cwtl into jae xchg push rol mov repz dec mov mov fs and xor mov pop out xor call cmp sub les mov rolb inc popf enter dec jle mov inc out add xor dec mov jno xchg xlat xchg cmp mov cmp clc sub xor jb jmp test dec mov xor sbb mov cwtl outsl lcall inc sub clc sbbb dec fs xlat mov fwait jmp jecxz popa fnop loop iret insl dec leave ja into sbb xchg int3 sub bound sbb mov mov inc (bad) sub roll je cmpsb inc sub pop or xchg xchg test jns mov push ret test stos sbb mov nop push jne fmul cs aaa in stc imul imul xor dec cmp xor outsb sbb sbb in push xchg pop aas mov pusha ds xor notl jge cmp pop in fisubl rcr xor inc lcall out lds (bad) loopne push into (bad) mov dec enter sub adc ds jae es pusha xlat fldt sbbl mov jmp sbb sub jns sti adc movsl inc xor fstpl mov xchg jo push daa ret test fldenv dec test jb movsb pop popf xchg adc xchg jle fiadd mov lcall pop jnp dec enter stos stc mov xor xchg jmp pop adc test repz idivl push into cmp push jg xchg iret or mov fisttpl or mov cmpsl rclb sbb out daa scas dec push push test out movsb mov outsl xchg xchg ret xchg aad cmpsl inc mov lds imul out mov (bad) int3 int3 pop push sti ljmp notl dec add mov pop xchg je (bad) test mov mov mov pop and enter jnp push add mov add sbb jbe outsb test xlat ffree scas scas insl pop or jmp (bad) sub jl int cmp push popa dec xchg mov and inc jp cmp jbe jae mov or das cltd and xchg jae je dec pop and icebp scas cmovns pop imul outsb fildl dec xor xorb lahf dec mov or mov jns cmpsb push insb loopne fidiv sbb lcall aad iret cmpsb push into push inc or sahf shl das sub js push sti xor jne cmp push (bad) ljmp or mov inc cli xchg xor inc mov stc adc add adc cwtl punpcklbw xchg xchg pop push sahf jle jp mov std stos in (bad) (bad) mov adc xchg int icebp (bad) push mov std fs mov pop inc (bad) ljmp pop jl imul mov jnp lea cmp pop mov ss add dec jmp mov and cltd and fdiv cmc mov data16 cs ds and dec or (bad) cmp push jae andl push cmp movsb adc push dec pop pop stos push cmc fldenv jnp fidivrl gs and push lods lcall sub jg cmpsb cs dec in or xchg adcl mov (bad) es jno les xor clc adc xor pop rorb inc xchg fidivl jne (bad) xor mov jg mov mov pop add sbb fimull fcompl or int3 int3 int3 int3 int3 int3 int3 int3 int3 dec in mov test xor sub or cmp (bad) test cmp outsl xchg pop inc insb int3 fistpl js,pn mov xchg sahf jns ret cvttps2pi pop ljmp xlat lahf mov push ficomp push fucomi stc int push push jl pusha (bad) rorb add pop push xchg std pop jge xchg mov cmpsl xor sub xchg out movsb jl mov (bad) ss sahf fdivrs sbb stos ss cli pop jno rcl mov movsl mov aas and adc cmp fbstp mov sub mov jecxz xchg mov xor out imul std rolb push ficoml or outsl jle ljmp fidivl push popf ret mov sbb mov and mov loop lods sub inc stos icebp scas movsl ret xor mov test addr16 cli pop push mov data16 movsl mov daa loope cmc sub sbb push xchg mov pop mull cld push mov add cmpsl into sbb sahf cmp cmp scas je insl cltd fistpll ljmp cmp jmp mov mov xrelease cmp ds call mov subb gs outsl (bad) mov xchg push inc jecxz popa es jns adc jl fnstcw sbb pop fdivr outsl sub fnstsw ficompl sbb add in and mov fimull cld push dec mov test das mov and inc xchg std inc mov inc sub fbld incl mov sbbb int3 mov add or sbb aad nop or fwait mov jns jnp sbb cs jno sbb aas repz fisubr scas bound push cmp cmpsl jo ljmp stos push push negl movsl movsl dec inc add mov mov dec or mov jbe lods push (bad) pusha sbb add in sbb je and je and insb std (bad) incl int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret dec in mov mov sub out es push and mov mov jmp ds jno pop les dec test xor jg inc imul and pop out aam dec test cmp add lahf enter fildll repnz imul sbb and cmp push in pop cltd mul xor rorl inc or mov push mov add sahf xchg dec jl enter inc push daa sahf jmp rcll (bad) test pop sub lea into std jne ljmp push loop test bound iret outsl sti xchg xchg xor push lcall (bad) aam push inc and rorb shl scas mov aas imul movsl and sbbb pop mov push mov sub cmpsb mov shlb (bad) push mov lret xlat push jbe xor sbb cmp sbb mov fincstp pushf sbb push lret sbb shrl and mov sbb test pop stc xor xor xor cmp or and add cld scas jp pop mov push movsl sub inc xor jbe aas inc into iret je test xchg mov mov mov jp pop cmpsb pop add xchg ror xor mov ret fsubrp jge jno stos out stc aam shlb pop cld and mov loope popf sbb xchg inc outsb sbb adc sahf in adc mov mov lret sub les and and push aad xor mov adc outsl (bad) lret imul push mov mul pop jbe iret movsl push or mov push push shll in popf jb rclb repnz lds xchg push jnp ret (bad) int adc and jno inc sbb xor js (bad) rolb adc dec sahf aas (bad) mov lret mov fldcw fucom imul jb insb xchg mov ljmp pop data16 in sub stos (bad) je xabort xor fdivrl sub cmp inc mov mov sahf mov xchg cmp scas xor and push adc add (bad) fcoml sbb xor sbb and popa add mov mov pop sub lret jp fildl mov dec loope adc nop cmp mov inc push or insw sub inc pop (bad) fdivs lea lahf jmp mov inc push or jp xchg ds pusha jge pop ficom jnp pushf pop xchg xchg out lods push loope movsb enter lahf push cmp xor aad sahf fadds push sahf jb stos mov loopne dec lods push negl xor push (bad) ss fstps xor inc insl and cmp xchg outsl ss cld and inc fildll mov jp call int stos ret pop out mov jmp mov and push test sarl sub pop inc push pop fadds jecxz dec mov ror adc mov test shr int jne out out xor rcr rclb pop test jae arpl jp loopne and pop or mov xor mov mov and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 dec in lret mov (bad) cmp sub mov mov ljmp sarl je cmp aad push scas outsb icebp jp out sbb fiadd sbb ds cmp mulb loopne pop popa jge mov fldenv ja dec daa jg xchg cmp xchg cmc jmp stos and xor mov mov cld mov mov insl repnz fmuls mov divl fdivl pusha (bad) repz rcrb icebp or adc stos mov (bad) mov sbb cmpsb xor clc or push or lea std inc lcall dec cmpsl stos mov (bad) outsb dec mov or rorl rorb cmp mov xor and sub adc addl (bad) int xchg add fsubrl xor xchg jno mov sbb stos dec push mov test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp mov xor pop jg ficoml sbb sbbb bound shlb cmpsl mov (bad) pop xor inc js push mov mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret mov cmp movsl sbb push mov jmp push in mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp mov pop and lods icebp mov daa pop jle call in mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret mov sub and push cmp push lods into fmull or push daa push inc add leave idiv xchg jb xchg cmpb jno scas pop mov mov or pusha loopne sti incb fiadd jp cld popa add inc sar cwtl movsb jno and iret outsb insb loope pop (bad) ds cmp aaa or pop pop stc roll sub aad sbb lret les stc sub dec mov cltd mov test (bad) in push xor loopne push inc outsb push xchg or adc push jns js xor cmpsb (bad) nop outsb daa repz cmp loop cmpsl lret inc nop sub lret adc imul xchg (bad) popa push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret mov mov mov rcrl xchg das (bad) or xchg test push fs andl mov andl movl movl ret int3 int3 inc xor aam test cld loope push mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret mov sbb ja stc sti sbb push mov add or dec add mov (bad) decl add js mov mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret mov xor test lret dec mov inc pop sub mov fldl pop (bad) popa push cmpsl (bad) xchg sbb cs pop sarb pop and scas mov test sbb fcmovnbe bound or dec or adc add inc pop mov xor cmc or stc inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret mov mov cltd out clc mov and daa or fst ss pop cmp push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret mov cmp stc add push bound push (bad) jmp or into cmp fnop testb aas ds pop sarb cmpb mov push mov ljmp add (bad) lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret mov fucomp or int fstpt or add lcall dec daa mov test mov sbb out hlt imul cmc pop (bad) mov in ljmp lret scas pop pop call in fsubrl into dec adc cli jne sti fnstenv aaa in je and mov adc mov push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret mov cmp inc stc loopne sbb mov pop jg popf lods jge (bad) nop into int3 out mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret mov cmp jo adc lea mov in pop add push push mov push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret mov movnti pop push add sbb loope xchg and into in mov xchg test shl jae (bad) mov andb cmc loope sub dec setae in clc jb fsubl in adc xchg or inc cld push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret mov nop pop cmp push mov push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret mov push mov sbb dec pop or std and pushf sub or push cmp add cmpsl loopne ja (bad) shl inc push inc nop minps cmp (bad) sub popa (bad) icebp mov jecxz and mov push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret mov cmp cmp jae push mov sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret mov dec dec or and cmp sub (bad) mov shlb outsb adc add in push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp mov dec sti or and cmp popf sbb std cmp or (bad) or sub cmp outsl lods enter pop mov jae data16 dec cld int sbb xlat aam xorl rorb je and stos jno fdivr pop stos mov or call cmp xor mov adc sbb cltd out xchg jne cmp int3 movsl popf pushf popf pop push std xchg push mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov dec pop or and cmp popf push pop pop divb (bad) je push cmp insb in inc pop push push xor and divb add das (bad) cmc mov xchg jecxz jmp push shl push mov mov mov roll push add add sbb negb sbb mov mov mov sbb sar ret loope inc or cmc cmc mov sahf cs xchg cli and iret clc adc push imul (bad) fild and dec add add movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 mov and rcpps cmp std and and pushl addr16 fneni(8087 out cltd pop stos add cmp sub sbb push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop outsl cmp mov dec add xlat mov sbb pop rcrl mov dec (bad) jnp gs mov mov xchg hlt sub mov or sbbb push je repz ljmp stc sub repnz jl pusha cmpsb data16 push mov pop emms mov mov cmp sub mov jns jbe xor push cmp or push or popl mov or fs insl lods dec in push (bad) insl mov cmp test pop cmp adc cmp or pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc leave or inc ret lahf aas push fcomps mov cmpl into ljmp lret mov add push stos mov ja dec push xor pop lds mov loop inc cli fwait push insl and cs loop or fidivrl test sub int cmp (bad) jb sub mov (bad) scas mov or packssdw inc push scas xor mov mov dec or push or ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret mov push popf sub dec adc dec pop or lcall sub and insl (bad) ss in nop pop scas mov cmp inc xchg add cltd xor push mov sub sbb and sbb jge in int3 cmpsb sbb insb sub cmp push lcall and push and in push push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret mov cmp sahf mov (bad) jns sub push incl dec nop or ljmp cli sti jnp sbb mov enter mov clc mov or inc and push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret inc fisubr push loop jl add fsubrs jge push call mov test je mov call call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret mov mov mov cwtl das mov xlat imul or push dec mov inc pop cmpl jb movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret and mov js pop stc insb insl test cld mov mov hlt mov mov les ret adc or test push pop test push call pop mov ret push mov cmpb jne call call push call pop mov pop ret and sub fsubr jmp mov fdivr enter push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp mov cmp jmp jecxz xchg cmpl xchg cltd push ror dec push mov out and sub xor fs sub xchg (bad) cli cmc push jg out inc xchg adc stc push push jmp aas add mov mov testb (bad) out cltd scas jecxz jp adc lds into ret data16 fbld mov lods adc lods shrb adc add data16 (bad) decl test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret mov sbb sbb mov sahf jecxz loope ss sub int3 (bad) mov cmp insb sub mov loop sub pop pop arpl push lcall cmp je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call stos pop out inc test imul mov or cmc popf cltd xor call sbb in push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret mov je insl sub xchg cmp xchg sbb mov dec daa decb sahf in jl or and inc (bad) es mov cltd xlat xor xor mulb xor loope hlt cmc adc pop lahf sub outsl fs sub mov les cwtl lret push fiadd or jno jmp ror ss cmp inc lea (bad) clc js xchg sti clc flds cmp arpl scas ss outsb loopne mov (bad) (bad) ja xor and icebp data16 push add nop jl fwait inc adcl sub jo inc lods mov clc jne xchg jmp jae jo dec lods jg subb mov cmp or popa mov jns scas icebp sbb dec scas mov xchg ret jp gs mov dec in pop push push mov cmp mov movsb aas sub lock pop sbb cmp mov icebp pop adc aaa inc mov sub jg decb lods into in aam add push lods lret pop int3 sbb cli imul rclb movsl or mov inc and inc jecxz xor outsl cmpsl inc mov js inc dec and (bad) dec lret std fidivl push mov push nop cmp mov pop nop loopne stos adc and (bad) xor xor ss arpl icebp das mov ficoml ljmp sub jl push cmc (bad) adc (bad) mov popa (bad) sbb xchg inc popa mov fstl or jp push push push inc sub cs aas xor and push jp or xchg (bad) (bad) xchg popf inc fsubs inc movsb sbb movsb ljmp rorl push mov mov out sub push negb std in cmp mov pop imul pop cmpl movb sub adcb ja xor scas xchg rolb cmp or inc jge push repz cli inc in cmc into mov cltd nop sbb mov xor dec mov cli adc push xor mov jmp xchg pop pop dec stc pop orb cmpsl fldenv jns mov leave push in dec out jnp in in xchg js,pn mov pop mov fisubrl aad sub sub sbb insb push sarb dec xchg add adc test sub fimul and jp (bad) ja cmpsb push les sub push (bad) dec cmp mov test (bad) jle mov or pushf das push mov fdivl lret sub dec cltd data16 sbb jnp xchg add sahf or cli test adc hlt clc lahf arpl adc scas pop or not add adc jge fwait push stc mov or add xor mov push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 mov and daa (bad) jmp jae mov jl inc ja les pop es (bad) sbb or sbb adc fwait test decl or cmp jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 inc lock adc stc push jp xor sbb mov add push scas pop es rcrl cmp mov lea push mov (bad) (bad) xor pop aas lods repz sbb cmpsl mov int es pushf push pop push xor loope or jo int imul xor stos fdivrs or mov mov enter lret cmp popf (bad) cmp mov mov cmpsb loope (bad) cmc pushf in dec and jmp nop (bad) mov jns les movsl cmpsl ret cmpsl sub or test jl arpl popf (bad) sbb jmp sbb jnp push enter lods addr16 jg add sub movl and insl dec testb mov stc push shrb cmp xorl pop lret mov jg xchg dec add xor loop jne mov mov test in pop movsl add js or jmp mov sub in pushl mov call pop ret inc lock adc add (bad) add sub xchg leave lcall ja xor sbbb dec mov mov cmc dec and test mov aam add sbb daa sti add push sub push rcl hlt push and lcall xchg sbb cmpb add out (bad) std lcall (bad) cvtps2pd arpl movsb jl xor push push push push push call add ret inc lock pop push jp scas insb inc xchg das decl incl (bad) dec jnp pop call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret inc lock adc dec inc stos addr16 pop pushf add std and hlt push cmpsb mov lds cmpsl ja xchg aam loopne dec rolb push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp inc lock adc stc push jp xor sbb mov adc cmp repnz sbb mov (bad) pop pop pop js and les (bad) rcrl sbb sbb pop sar push movb and mov sub clc fs inc lret mov and ljmp mov or jge jle mov or inc nop adc icebp lock imul cmp mov nop stc lret mov outsl test add lahf sub lea pop xchg fwait cmpps xchg jecxz addr16 aam push insl push mul scas repz dec jnp rolb hlt jno mov mov xor add iret pop xchg lret in fildll jle stos rclb sbb fs sub in int or mov outsb push cmpsb (bad) leave pop negb adc dec cmp (bad) rolb mov inc bound add loopne int into fdivs bnd sub xchg gs mov sub add mov popf sub (bad) mov jne call in sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp inc lock adc dec aas ret mov jo lock mov jg xchg mov xchg adc imul jg ret cwtl imul add mov lahf dec pop int adc (bad) nop insl shll dec mov push xchg test pop das mov or jb popa ret xor pop les les mov push mov cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret dec mov fistpl nop sub xchg test sub sub push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret inc lock adc jb mov jle xchg rorb sub sub je cmp and clc lret push sub inc and cmp sbb subl mov xchg mov scas in rcr xchg clc nop pop xor aam pop sbb xor outsl inc out push jnp add das lret js push movl jno adc std xchg cmp call in push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret inc lock adc mov (bad) pop jmp cmp test xor pop sbb (bad) mov loop pusha xlat jnp in xlat stos lahf and das neg fbstp mov push mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret inc lock adc mov pop (bad) cmp xchg dec jle push lds es loope scas out jl cmp adc sbbb mov push mov push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret inc lock adc enter xchg js (bad) inc mov cmp push xor mov pop and push (bad) adc sub pop (bad) xchg sahf ljmp and inc pushf lahf (bad) stos inc ret mov mov mov call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc mov jmp dec jp faddl add mov pcmpeqw xor inc nop sbb andl inc mov addr16 arpl ret sbb inc (bad) dec divl mov xor sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret inc add push push add sub cli push push mov mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret dec jp xchg popf ds pop mov decl dec cmp mov test or cmpsl sbbl js cmpw je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret cli mov mov pop lock dec sub or in sbb lods sub add xor shrb pop jb ret btc lods pop jns sbb fisub aam adc (bad) push rorl ja xor mov in or pop push std or enter inc loope idivb push andl mov mov lea xchg outsb adcb ror cmc mov ss rorl or loopne pop jb mov gs outsb gs push es pop mov pushf sub outsl mov cmp clc ds cmpsl mov and and pop stc adc jns inc repz pusha jge dec fs test insl sbb jecxz pop idiv popw lahf xor xlat clc pop (bad) xchg les les lret out mov push xchg and (bad) cli sub xor adc orl aaa sub dec and lret lods inc pop sbb test movsb push or adc push xchg ds fwait xor mov aaa pusha lods icebp mov inc mov sbbl cmp stos inc stc mov jns bound push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret inc lock adc enter insb std mov sub out les nop sub jb mov cmp insb sub pop (bad) adc into mov dec cmp adc popf jmp in (bad) in call cli (bad) fcmovnu or pushf into push in dec (bad) jo dec addr16 sub jle xor fs mov lea push mov cld add fistpl inc fist aad ja mov call in push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret mov ja sub stc push and mov sub inc inc push decl push mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret dec cmp sbbb (bad) fldt (bad) insl ja and (bad) push mov lds mov adc pop pop ds pop and (bad) xor mov mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret inc lock adc jb mov scas mov mov jne mov cmp decl dec dec sub out lods cli jg,pn das push pop lret test outsb aad sarb out push xchg sub inc ljmp lds mov mov dec cmp xchg and outsl sub cmp push out cmpsl out adc stc js imul sbb push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret inc lock adc jb out sbb cmpl or repnz mov imul adc xchg or sub inc pop jbe inc aaa sub into push outsl xchg ret in scas nop add dec push pushf xchg je je dec loope jl pushf and push cmp push popf insb gs cmpsl jge mov push rolb pop out xchg jp in push (bad) iret in or push lock pop add into aam popa pop mov in ds ja mov test add movl push mov pushf mov jge sub or mov and sub pop out push popa cld ja add mov out aaa faddp dec push cltd aam (bad) jmp sbb (bad) xchg mul lahf mov fldl sub in sub dec xchg cmp in fdivp or mov inc movsb dec mov cli inc in or xchg popa movsb push in sub insb mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret inc lock adc dec cmp or std cmp sbb cltd mov lret push cltd sub pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret inc lock adc icebp (bad) or popf jmp and sahf lock push movsb (bad) je stos daa sub sub push pop cs std xor mov call in xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret inc lock adc pusha (bad) or pop call hlt pop adc jg mov and jnp add pop cs push adc add cmp or mov jmp mov cmpsl mov imul mov jae movsl xlat pop rorl xor mov push (bad) cmp mov pop and pop hlt cmp mov in sti jns or add aam sahf cwtl es jae cmp dec add jns loopne mov push mov sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret inc lock adc cmc lret sahf mov fisttp xor or inc nop addb call in push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret inc lock adc rorl sar sub mov daa and dec nop or test cmp (bad) mov inc push and mov sti cmp sbb sub sub leave scas xchg sbb js and mov andb mov pop push fs inc jmp dec push sub mov and jnp cmpsb adc and mov adc xor aas scas mov pushf mov nop arpl or arpl in mov movsl cmc sbb add mov bound je mov and fsubrs ljmp lods add jmp outsl (bad) jmp iret test adc iret test adc iret test adc iret test adc iret test adc call in mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret inc lock adc xlat (bad) sahf mov outsb lea cltd clc mov and outsl shrl mov outsl movsl jg vcomisd sbb jecxz add mov shll pusha xlat inc mov inc ret dec push dec sub out fsubp sbb or stos xor js mov push mov sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret inc lock adc pop inc fistl shld mov adc in inc cmp das jmp xchg lods pop ljmp popf sub mov loop dec xchg lahf in xor jae es and push ljmp (bad) xchg sbb xor mov fwait add popa test push lods ret lahf mull mov mov movzbl push call mov movb mov mov pushl pushl call pop ret inc lock into mov mov push cmpsl dec dec cltd pop cmp and sub ss add fisttp mov inc ds (bad) (bad) mov sub rclb iret sbb lea adc bound cmpsl frstor ja shrb jae clc inc scas repz or pop imul clc pop xchg jp jne jne outsl movsb jl mov stc clc sub enter mov adc ret fwait movsl or enter imul mov pop dec cmp inc add xor test push stos std enter cmp inc sub cmpsb or mov scas mov xchg or ja pop xlat cmc icebp adc bound cmp lock insb je sbb pop inc sub (bad) lea sub sbb adc xchg and (bad) test ds lahf cli sub cmpb je mov ret push push push push push call int3 dec jp mov loopne push inc cmp cld push orl in out sarl loopne cmp cs push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret inc lock adc scas leave dec pushf pop fcmovnu cmpsb mov mov daa mov push ss mov outsl cmpsl js and pop mov fs dec xor inc pop cmp push popa adc xchg jp xor lcall insb inc adc sbb cmp in fisubrl mov xor test loope add mov or repnz dec cmp xchg pop popa mov aaa mov push dec shlb sub or addb mov cmp or ds xchg jmp stos rcrl rclb jmp and loopne mov cmc push sub pop icebp in repz push je cmp lahf into (bad) mov out and bound pushw cmpl inc dec mov sub pop xor (bad) dec push pop les (bad) lods push inc nop mov cwtl jge insb pop ficompl fmul adc xadd and adc ja clc pop stos or mov fs ss inc rcrl aad es add pop cmp cmp pop scas out lock jecxz push xchg push stc cmpsl subl stos xchg movsl notl out dec xor lea aas or mov int xchg jno add mov dec mov cmc jbe fs stc cli push add cltd lret sbb push jno push and sub mov dec in cs mov pop sti int3 (bad) xorb push scas ljmp mov and jg into scas es mov pop adc or dec jo inc or fcoms aaa (bad) (bad) jne clc (bad) and push inc fstp sbb cmpl fmul out in inc fmuls add or rcrl lds add sbb mov (bad) in fnsave jae nop pop sub jge stos and xchg arpl xlat push and jo out fistpl add ds xchg dec mov es pop push push sub mov in ja push iret ds insb jecxz je sub inc add sbb hlt xor inc subb xchg adc ds xchg idiv mov jp scas fisttp push out ret inc (bad) std xor leave mov andl or mov pop dec mov mov (bad) pop pop pushf ljmp cmp ret outsl arpl or pop mov (bad) out bound sub (bad) hlt jbe sbb popa lods imul test lahf and in out or sub jle js sahf add jnp andb mov cmp sarb sarl mov add add and (bad) aas xchg inc push add test sbb lea movsl in sub cmpsb adc mov (bad) push popf movsl repnz aas outsl adc mov push outsb call addl sbb dec inc ds mov inc pop cmp pushf mov mov aam stos and sbb dec ss (bad) dec pop push jne pop jmp inc pop lods (bad) jmp xor push sbb mov pop dec test push mov rorl int xor push inc fnsave mov and rcll outsl jp cld cmc dec je insb (bad) and jbe outsb cmp xchg mov adc cmp push cmp aaa mov adc aaa push mov movsl mov push int3 sub dec sbb test cmc fsubrl jmp mov adc xor dec aam dec shll (bad) dec cmp test push mov inc jg rorl jae and aam in cltd xor push sbb sahf xchg cmp bound sahf push pop pop add xchg je cmp xchg je sbb out nop in sub lahf sahf sbb jno pop and test add cmp rcrl sbb sbbl pop push (bad) inc pop pop inc icebp loope int or data16 scas sbb push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret inc lock adc cmc and sbb jns lahf sbb fwait ja in pop inc mov bound cmp mulb pushf call sbb (bad) xor cmp sub repz mov aam fbld push fdivr addb inc mov dec xchg push or pop loope push push lret sub pop mov sbb push jmp add faddl mov js mov or add or nop or push (bad) mov cwtl (bad) and sbb cli jl pushf outsl int3 je inc ljmp xchg sub movsl popa into push add pop out jbe and aam sub mov xchg pop loope add sub xor xor dec ss imul dec xor mov repz sbb pop les sub shlb or sbb dec or insl or (bad) push inc (bad) push xchg add dec mov xchg fild pop loopne cmp cli xor pop mov sbb fwait jns sarb icebp lret sub cmc test pop or in jg rorb or xor bound imul fcom rorl rcrl cmpsb pop (bad) mov pop jbe and int3 pop mov cmc mov dec repnz mov fsts xchg ffreep dec popf push inc loope xchg aaa sahf and cwtl popa dec lcall inc add (bad) std (bad) pop pop cmp and adc mov pop imul sbb and mov test es mov mov mov sti hlt rolb es jbe add (bad) fldl2e push rcrl loope idivl inc mov xor sar loop (bad) mov jle jae dec cmp (bad) xchg in ljmp stos movsb jbe shrb inc xor xchg lock or imul cmpsb lock dec cmpsl mov (bad) mov repnz je and or or enter xchg pop mov xor jno iret in aas int3 pop test inc out mov xor or daa fmuls arpl pop mov (bad) std inc pop dec push xchg add dec addb push mov jmp xchg fsubr xor or xchg loop push call in and pusha jns xchg in mov jo stos jnp out adcl scas inc push sbb inc jnp in aam pop lock ds fistp sub and sbb jg xchg push aad adc sahf icebp test sbb xchg (bad) arpl fdivs in movsl jae or xchg xchg jg cmp mov cld jbe mov js sbb mov xor pop and lods sbb aas iret daa pop mov xor push in push pop push fadds xor jecxz (bad) sub ljmp sub jne test jg imul adcb and pusha add aad lock (bad) out xor pop mov pop pop out scas cmc andl adcb sub (bad) fs cli in fiadd pop pop lods jle push mov add push xor jmp and (bad) pushf test imul scas out xchg sub insl faddl es xchg sbb push add call out test mov popf ficomp jne out cmpl xor pushf xchg pusha add (bad) enter cltd pop (bad) cmp out in mov (bad) stc push jae jl sbb jne (bad) jb sti mov jns cmp push inc movsb out movsb cmp jns sbb cs orl fistp adc ficomp jge scas or in (bad) mov jnp pushf ret xor lret test dec mov ret fidivr cwtl stos mov xchg jp (bad) push (bad) cmp cmc btr gs scas sbb cld sub repz jecxz xchg mov stos cmp push xor sbb push adc pop icebp pop call cmpsl mov shrb (bad) lcall mov push push sub adc gs mov add cmp out rcrb inc sub scas sub mov add or hlt dec push addl mov mov adcl push mov or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret inc add jmp mov dec cmp sub (bad) dec pop rorl mov inc je lahf or jnp mov push pop add sub call add jno push xchg stc aad xchg mov in jle jp mov mov mov cmpsb dec pop pusha mov or inc sub clc add cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret inc int mov std stos out ss sbb or adc outsl repnz es lcall rorl call icebp call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret inc lock adc mov inc adc cmp sub cmp popa dec sub dec (bad) jecxz mov push push mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret inc lock adc rorl das mov pop ret hlt fs imul mov ss or push mov jecxz test cmp mov add cwtl push nop icebp push mov xor ret cli dec xchg jno call in addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret dec cmp xor stc (bad) fldt call int3 (bad) stos sub dec xchg xlat jns and in dec mov insb pop pop pop js and les mov in lret aaa bound mov push mov push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret inc lock adc clc push dec cwtl adc clc sub in data16 lret mov push mov pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret inc lock adc jl dec cmpsl mov adc sbb sbb or lock sub loopne lock into pop push fildl sbbb push sarl mov fsts (bad) (bad) aad dec xchg xor icebp inc mov mov mov mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret inc lock adc scas and imul jo lock insb cs mov (bad) jle popa sub jmp outsl addr16 or push out pop and out xor inc mov xchg out movsb mov jg mov and ja andb movsl stc out push orl jns push jns clc jo and lods das xor jmp xchg (bad) vprotw bound lds sbb loope mov xchg mov loopne fsubrs out or sub mulb cmp in lret lcall xchg decl adc xlat imul lock data16 inc xchg in jmp das into or (bad) fsub fimull mov ret ficom pop pop add xor test push push call xor mov test setne test jne call movl call xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp inc lock adc (bad) push mov push mov mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp inc lock adc cmc push dec cwtl adc or sbb mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret inc lock adc stc push daa fdivr enter or test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret xor ret and mov lods leave (bad) sbb jno or lcall data16 or jle mov ret andl mov mov arpl and in jmp jle mov sbb mov push call mov push mov call pop mov call mov pop pop ret and mov and inc ret mov sbb jle add test jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret inc lock adc dec inc fmuls cmp std and sti ja call mov push mov push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret inc lock adc xor cmp cmc or into sbb dec in arpl push dec xor test xchg dec decl mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret inc lock adc icebp inc aam cld push jo push (bad) decb cltd dec mov and (bad) clc jnp mov xchg sub out mov ud1 xor sbb xchg loop push jge push ljmp jae pop inc pop mov mov fnstenv popf fnsave scas addr16 xchg in push andb mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret inc lock adc stc insb lret ljmp sbb push pop mov cmpsl sbb or cmp dec cmp repz pop (bad) int3 inc adc jae cmc icebp jae jg push cmc fildll das xor dec outsl repz pop pop inc in sub xor xor test clc aas add (bad) mov mov jp mov std hlt dec xor (bad) inc push stos pushf or mov sbb incl sub fiadd movsb movsl (bad) nop xorl pushf sub sub fstl fs js in outsb push (bad) shlb or subb mov or fnstcw push scas into fdivrs movsb movl push inc jecxz cs jb dec push cmp inc das aam xchg xchg daa hlt xor xlat pop pop sub cwtl outsb mov xlat add adc mov mov (bad) decl (bad) jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret inc lock adc insl dec adc pop rcll dec pop icebp clc cmp add lods in outsb push xchg jle fwait (bad) xchg pop pop test in and in std lods std cmc ficomp lods arpl aam mov ds mov fsubl mov mov fsub addl xor add cs out push jb cmp push mov movsl (bad) mov outsb mov (bad) lcall mov data16 or js or lret iret mov xchg add aam std popa out mov sub sbb in inc push cli jl loopne bound int push jns enter sbb lods cli out in scas push dec and divb and fidivr sbb shll cld dec popf ret sub jbe inc loope mov pop lret mov xor cli jg imul movsb cli call jo mov rcl inc pushf mov push sub add vhaddps inc dec lret imul xor inc cmpsl add xchg mov test jge int jp scas pop fisub dec mov popl xlat cmp sub ror push jae mov leave out dec xor (bad) adc bound jo dec xchg dec dec fistp or xor and movsb fwait adc flds lretw mov lds jo ljmp adc pushl in mov enter adc pop ja pop (bad) notb fsub and js push mov mov gs mov sbb dec xor xor aas add (bad) mov or add mov push mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 inc lock adc jl dec mov mov or push mov and pop out insb dec cmpsl cmp cmpsl pop fcompl pop and jb cmc mov mov (bad) out push xchg xchg jmp push jmp add fildll xor xchg mov and push push testb inc popa (bad) xchg stos adc outsb jo and fs enter in jnp sub mov call in push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret inc lock adc add (bad) push jo lock stc test popa roll fisttpl movsl repnz jecxz sahf add ss push mov lds mov push push call andl push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret inc lock adc icebp icebp dec add (bad) lcall sbb scas adc stos out add jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret inc lock adc js fcoms jns imul fisubl cmp ror inc mov push nop je mov outsl sbb push and xchg adc es push add arpl cmp dec popf pushf mov xlat mov aam mov mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret dec ss push loop fistpl xchg out push sub pop jne je xor dec sbb pop pusha sub mov sub sbb cmp or cld (bad) dec sbb iret lret mov cmp add lret push fs aam adc clc mov fisttpl jp (bad) mov inc cmpsb lock jecxz mov (bad) lret das sbb ja imull xchg mov outsb jb dec pop ja test cli loopne inc iret pop bound (bad) and xchg add dec lea mov inc stos sbb push dec pushf xchg xchg xchg jle test and xor cmp add popf or adcl or retw ret imul dec in mov xchg test push cwtl aam fcmovb cmpsb sub movsl dec imul scas js pop xchg (bad) call cwtl into lcall shlb and push xor popf xchg lods mov and imul jle jge pusha xor xchg out xchg mov cli cmpb sub jle sub fabs cmp push push shrb mov lret bound jmp cmpsb mov je lds fmuls fcom movsl jns mov rcll movsl sub dec inc out in inc (bad) jns mov dec gs jg adc ljmp xor pushf aam insb enter pop mov outsl or int3 add adc push sub cmp pop fs dec repnz and adc (bad) cltd sbb daa lock jo rorb xor push adc in xchg pop fnop (bad) ss xor lock and aam test fmuls cmp xor dec loopne mov mov mov pop xor mov mov fsubs mov rorl push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret inc lock adc mov add jl xor push fneni(8087 loop pop sbb cmp insl add shrb dec mov test cmp adc xchg xchg jecxz mov push rcrl imul adc loopne push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret inc lock adc jo xlat and (bad) xchg inc jae decl stos bound push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret mov sbb sbb (bad) fbstp (bad) ja jmp and (bad) pushl ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret inc lock adc jb jecxz mov mov insl pop xor fs jmp push enter cmp mov cmp mov shll (bad) js cld pop lcall adc movsl jp lahf push fistpl xor int3 stos leave jmp sar jae cmc or xor ret xor push sub pop out movsb call fidivrl fucomp jp ljmp dec jo jp mov cltd adc pop pop adc (bad) shlb insb mov int jnp cmpsb (bad) adc (bad) mov in addr16 sti shl jbe neg jae lods xor fildl or jnp dec imul repnz cmpsl lds and jmp lods ret push cwtl inc fadd or push popa es pop inc push gs int3 jns pop (bad) repz mov fmul dec stos dec (bad) mov popf inc lock xlat xor mov adc jbe pop imul sahf scas fndisi(8087 xchg in xchg sbb sbb jns cwtl cwtl cmp ds cmp into mov push xor sub sbb cmpsl loope sbb mov pop int3 mov in (bad) pusha lahf xchg shrl mov cmpsb mov cli daa cmc daa stc outsl ds lods aaa lea add repz mov cmpsl dec jne les inc cmp sbb or inc dec adc push pop cmp scas push pop ljmp pop fldcw stc xor fcomi orb subl push pop mov jo adc adc xor add cmp sti mov daa stos push xchg addr16 xchg pop hlt fisub mov mov call in mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret inc lock adc aad mov mov sarl addb xor imul loope xor dec ds adc test mov addr16 pop call lcall jge jg fisubl push xor insl sbb xchg jl int mov in sub adc roll xor test jle cli mov or jns mov push fnsave jmp lahf (bad) inc sbb jp je hlt pop mov sbb scas aam call in push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret inc lock adc jl dec pushf xchg fdivrl call jle xor cmc mov jno ljmp pop mov es shll cltd or dec and fsubs xchg pusha cld jl scas bound dec or imul mov (bad) cli dec cmp aad xor dec pop int3 fwait jge inc push bound jbe out xor js repz movl mov (bad) xor inc mov push fmull rcrb (bad) cmp loopne in dec dec aad dec add push mov push call mov mov lea push push call mov pop pop add mov pop ret inc lock adc insl dec adc pop rcll gs add fwait mov jne pop sbb adc lea cwtl push pop xor xor cmp rol cld inc pop add fidivr or push stos negb clc sub movsb mov jmp imul dec (bad) jo xlat pop push loope pushf gs cmp cmc lods lcall and mov pop shrb add hlt adc sbb sbb aaa punpckldq pop aam and cmp cmc jecxz dec sti xchg (bad) sub (bad) cmp sbb daa test xlat sti jl sub loopw xor js decl adc jecxz imul scas lahf add cmpsb sub xchg arpl dec cwtl dec push and fnstenv xchg loop dec dec movsb fistpl cmp add cmp frstor mov out in in (bad) icebp pop adc mov push dec or cmp mov test test popf sbb sbb cli imul xchg mov out jne lahf cwtl les (bad) cmp add pop jle std insl sarl cmp xchg and jp bound sub sarb mov jg movsl sub out adc push into dec jno jmp jae subl gs insb cli loope (bad) jp sbb adc push mov push fmull lods out pop popl fneni(8087 xchg pop lock mov daa (bad) sub xchg cmp jno mov pop jp in iret mov aaa xor sub std flds pop xchg mov dec mov insl ret ret xchg cld aas test vmread call gs test pop and jnp jge lar rorl cs mov sti or sti pop sbb loope dec sahf cmc pop cmp pop sub ret jo loope rorb rcrb jecxz xchg xor or stc les jp fwait int negl xor stos sbb cmp insb cld (bad) mov shrl add add shll push sti mov xchg imul inc mov test push ret nop push or cli mov mov mov sahf inc sbb cmp out rol dec dec add jp xor mov es std cmpb xchg mov jl sub xchg and scas dec jbe loopne scas stos repz mov xchg out ret jmp sbb mov inc xor sub mul cmp lahf jle mov gs jmp icebp add fdivs mov cmp dec mov out push fnstenv vpunpckhqdq dec pop sub sbb jge out es adc add out insl adc sub xchg ret les js jp stc pop pop pop sbb in inc add mov mov es in out in add cmp and fistp cmp lock cltd es cltd dec inc mov sub test cmp in push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 mov ret mov push fcoms push (bad) push std or xor ljmp xchg mov pop enter and ss mov dec je adc cmp sti out int (bad) mov stc and test pop lret xor sub lds push xor lods cmpsb cmp popf add add add mov push popl in sbb rcl mov stc sbb jnp je enter out mov and sub lods scas mov lods push dec pushw mov insl std pushl cmpsb imul test adc xor sbb mov inc cwtl jl decb inc adc xlat je loop mov daa cld das pusha (bad) fiaddl aas xchg out aam popa mov pop lcall add ljmp movsl sar inc pop lods das iret mov out push call and fbld in xor nop nop leave xchg repz movsl aas stc icebp jg and out loop push xchg mov bound push xchg push mov cmp movsb pop jg jae call in mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret inc lock adc dec daa fmuls xor sub addr16 les push mov ret sbb pop mov mov dec inc popf (bad) mov call in push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret inc sbb dec and jb stos sub (bad) adc (bad) repnz mov daa jge ja cmp ss lods pop dec xchg stc and ret (bad) jno mov xchg out sbb in and movsb jnp or cs xchg pop or pop inc mov pop ljmp cmp and jge mov out cmp dec adc mov in jmp mov aas inc sub mov (bad) stos adc lods or sbb add (bad) outsb incl and dec sbb and dec movsl push or outsb std or mov inc cwtl sbb aaa push xchg das fcoms xor mov arpl dec jl dec roll jle (bad) jne imul insb pop imul mov mov fistpl mov scas mov and mov inc ret int3 sar push xor push xchg inc (bad) jae stc jnp cwtl xchg or add ljmp dec lret lahf add leave icebp pop push mov clc mov lea push fimull add xchg mov cmc mov pushf or sub jle sbb or sbb add adc (bad) mov add mov dec pop mov jno stos movsl xor cwtl mov lret in ja insb popaw add inc daa adc out (bad) clc cmp mov xchg push or xchg jne ficompl bound xchg dec out mov jmp adc ret cmpsb clc jno sub push repnz or add add ss (bad) xor adc sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret inc lock adc mov add jl xor push fneni(8087 loop pop lea cmp insl add mov push mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret inc lock adc jp cmpsl nop movsb movsb pop xchg inc inc mov call (bad) es mov xchg push mov lds cmc inc repz xor pop clc mov fdivs cmpsl mov sbb add adc clc pushl push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 inc lock into jle lock adc fldt stos clc or dec xor leave subb pop stos xchg mov pop cltd push sub add push loop push jg mov test dec fwait movsb lahf push push fs adc dec adc sbb mov (bad) shld in push cmp jl mov mov inc dec cmp or mov (bad) pop inc push (bad) push push push call mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret inc lock adc insl dec adc pop rcll rcrb pop fsubr je popf jg fildll mov adc ljmp cwtl das sbb cmp or arpl into mov mov ret sub (bad) out sub cwtl jg (bad) cmp shl shlb jge mov and and dec cmpsb dec push pop xchg movsb mov mov jge (bad) es mov aad jnp pop movsb mov (bad) sahf dec dec ja outsl mov adc ljmp mov cmp clc cs or jecxz lret inc test pop std loope sub in and mov jmp test (bad) jo ret jp call in push mov mov cmp je mov mov test jne call mov pop pop ret inc lock adc jb xchg fwait pusha xchg inc cmp enter push ret movsb dec into ja mov ret (bad) mov and push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret inc lock adc scas in adc adcl mov cltd inc popf incb jns xor sbb mov mov push addl gs jmp inc pop or cmpsb fistp add jno rcr lock (bad) add sbb mov add shrb ret xchg xor mov fs gs bound mov push bnd lock sti sahf dec jne sahf inc in cmp cmp in rclw pop lea dec jmp lcall rcr jbe mov and ds pop movsb push into and insl mov movsb sub insl outsb sub and or stos lods push add push mov addb sbb adc and in int pop push mov cwtl jg adc es imul fistp mov push aam adc es inc sbb bound push in and xchg or aaa sarb xchg pusha mov lret jp dec in pop cmpsl into sbb popa rol scas cmp mov push mov cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 inc lock adc stc push jp xor sbb mov sbb aaa inc inc repnz mov data16 mov in xor leave sti cmp (bad) gs test pop inc pop adc sub sub sbb pop call push in and jge xor mov push out push stc xor aaa (bad) cmp popa adc and add loop dec data16 int3 cmp clc dec add lcall push mov inc pop xlat push inc sub mov sub push xchg outsb das jnp nop in cmpsl in lret sub push mov lods ret subb mov test incl mov imulb lock inc cld xchg sbb fistpl jle mov sti cmp shll xchg pop arpl dec adc xchg iret in xlat divb ret (bad) mov sbb cwtl xlat insb dec cmp sbb sbb rcrl mov adc repnz cmpsl cmp movsb iret sahf (bad) ja lods mov mov fistpll xor repnz sub cmp in aam gs add push cmpb mov dec fucomi push sbb inc dec gs or dec ss xchg xchg push popf jle and adc pop int3 fsubrs nop loope add push mov and movsb xor aaa sub fdivr and sub fwait lods mov push jo js sbb push fiaddl cs into cmp out mov fdivl pop mov hlt or jbe lahf bound pop jno fmull fisttp stc mov leave xchg mov adc mov pop adc call xchg pop cmpl push pop mov sti clc lahf pop xchg xor sub (bad) push jae mov dec or in aaa pop daa cmp inc fstpt jne es test hlt xor sub int mov es out pop adc pusha cwtl mov inc add (bad) mov cmp je icebp clc std sub mov aad test and inc mov mov mov xchg test and dec (bad) xchg inc out negb sarb lods gs (bad) cmp int3 and mov sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret inc lock adc mov add jl xor push fneni(8087 loop pop leave sub aam add xor inc or fcompl (bad) fs and les xchg and xlat leave (bad) dec js scas mov and cmpsl stos sub jne mov mov testb std dec insl push (bad) jns xor cmpb push mov or jns jns lock test sahf jg orb push lret jae nop inc push xor mov cmp push jle xor sub cmpsl scas xchg xchg orl shll stos xchg mov lock or cltd sub movsl je outsb mov shrb in mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret inc lock adc add (bad) mov je and mov sti and xor insb data16 movsl or cwtl sbbl cmpsl test sbb sub push repnz imul icebp lret jecxz mov jne dec dec sbb jge mov push mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret inc lock adc add (bad) pushf je les pop push mov sti sbb push insb data16 movsl add sbb sbbb scas ja test pop sbb in jmp fnstcw fldenv sub in push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret inc lock adc add (bad) add les pop push mov sti adc add dec sub jae out sbbb dec aaa sub ficoml repnz push inc jp mov jle scas shrb push mov pop clc dec xor cld pop mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret push imul push sbb sbb pusha mov sub or jb int3 ljmp mov mov xchg dec data16 pushf mov mov rorb cltd mov push insl adc stos jmp (bad) push add pop fildl add mov pop popf inc pusha xchg mov cmp mov cltd icebp sub xor push cltd sti inc cmpb pushf cmc jae loopne inc stos sti inc (bad) push pusha test xor or out mov pop les pop xchg pop mov push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret inc lock adc jb out mov push lods rcr inc lods incl ret addr16 into clc subl bnd es roll add popf (bad) xor sub xor xchg stc ror and adc fsubrl into xor movsl mov or lock not jl stc cmp clc jno sbb or sub adc mov mov (bad) mov inc ja cmpsl cmp ss loop cs xchg jae jmp add rcl dec add cmp ret mov jecxz add lahf sub pop xor sbb popf mov shl mov gs loop jae sbb test jbe jns cmp mov dec jno ret bound in addl xlat cmovbe fnop xchg enter aad data16 dec ljmp andb cmp jb mov push mov push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret inc lock adc scas leave push mov andl mov cmp pop fimul add push push das addl stc add rcrl in out fwait push xchg and js mov lods repnz push shrb lret xor fsubr xor stos adc sub std scas push pop pop ficom mov sti jns dec dec pop xchg xchg cmp stos (bad) jp mov xchg dec mov sub sbb mov aad lea xchg popa ljmp clc sub insb cmp movsb ret in addr16 sub jmp mov fdiv add jg mov xchg dec in out add dec cli int3 xor adc cmpsb inc jne cwtl repz push mov inc cs xor push pop outsb cs (bad) jecxz in and push fistp mov and imul push and adc dec mov xchg lods int3 dec aas dec int rcrl dec xchg popf mov push jg adc mov push mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret inc lock pop mov inc pop shlb ja jae rcll push dec mov jnp sub jmp mov or add ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret inc lock adc test incl sub lret dec sbb mov pushl mov call pushl mov call pushl mov call pushl mov call pop ret and movsl cmpsl es sub push sub dec sbb dec mov addb enter cmpsl pop adc fisub lea cmpsl pop jnp add je mov add or ret adc adc shrb cmc push xor push push dec sub aad xlat dec xchg mov jl (bad) mov xchg dec jmp mov and movsb jge mov cmc jns mov lret push lods dec pushf js dec bound mov mov add or pusha cmc roll xor aad mov jno test inc xor add inc inc mov and xchg or mov sarb jg cmp loope (bad) imul rcl pop mov sub ret mov imul sub jmp pop aad mov cmp ret imul jge lock aam cmpsb cmp push mov add xchg cwtl sbb and pop nop mov inc cmpsl in xor mov out jne lods inc mov fistp nop push xchg dec sub lahf inc push jnp imul (bad) fbld test mov sti cli fs and ss push out out mov test cmp (bad) jle and xchg in jmp fsubl xchg jne xchg arpl call out cmp in lret (bad) int3 pop cmpsl sub pop rcrl hlt xchg mov (bad) jbe mov test mov gs notb pushf jecxz int shrb jb pop pop jae cmp xchg lock adc or and daa lods inc pusha in mov mov inc add or data16 int call in sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret mov iret (bad) adc in insb mov negl xchg (bad) hlt and mov mov sub or out dec mov lods xchg push (bad) mov xor add and push sbb (bad) std dec sub pop lahf push ficompl inc sub or pop xchg xchg jb es cmp cmc or jg aas or jl imul mov sbb loopne sub pop push rolb push add in adc lcall xchg cmpsb fcomip xor add stos std jge shrb sbb lret add sbb and mov mov decb dec and pop add sub fsub cs orl sub jb dec mov sti push mov add call in push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret inc lock adc jb jmp add pop into inc inc sub or mov (bad) cmp loopne addr16 dec dec pop push out pop and out xor fdivrl std jnp loopne out (bad) xlat cmp and jle faddp (bad) push ficompl mov gs sbb mov xor movb or stc and xor jbe pusha call out cmpsl out mov call sti add in sarb icebp pop loopne hlt sbb icebp leave rol fdivrs mov dec call mov push jmp popf mov pop (bad) movsl xchg add ror and scas xchg out xlat (bad) aam out das into jl cmp jmp dec push cmpsb adc int3 add fbstp insl mov xchg bound pop pop push repz push pop cmp outsl add scas pushf das aam jecxz shlb mov nop sub lret inc pop sub aaa cmp bound sahf push je mov push mov mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret inc lock adc jl dec lahf xchg lds push sub mov jno jmp cmpsl in or push push push hlt jae arpl mov shlb inc lcall call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret push cmc and push add mov or dec daa (bad) es in mov fnstsw movsl cmpb and pop xchg fstpl call rolb (bad) push push rcr mov pushf outsb fldt insb ja aaa adc stc fs andl push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret inc lock adc aad mov call lods ja push imul lret rcll fcoms and negl popf cmp add pop cmpsl les ds fistpll out mov in or ret mov and insl add mov in jge jp and ret cltd (bad) aam mov call orl or roll stos loopne enter mov sub in sbb scas enter leave sarb inc std xchg jne adc fisubr dec push jecxz in jle in clc mov jmp insl clc push sub xor faddl subl int3 adc cltd cmc cmp scas lds and pop in dec lcall or scas mov push movsb dec pop push sub pop jecxz xchg fidivr cmp push fmulp mov gs les sub inc lods inc hlt adc cmp insb fistpl jl cwtl mov ror dec cwtl ljmp int outsl (bad) jl stos jb and test mov ficom push mov add pop sub mov dec lock bound (bad) or loopne rolb cmp in clc inc jnp jg mov pop push dec adcb push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret inc lock sbb mov add mov push mov cmp sbb and lret sub mov and ret pop test mov inc (bad) int3 dec pop add das (bad) push xor push rcrl stc (bad) jae sti out push clc push mov xor sbb sbb push ret add cmpsl stos jp sub cmpsl mov sahf (bad) mov stos movsl jns addr16 ret jp aad aad pop shll push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret inc lock sbb push fs jo (bad) sub les mov mov adc clc jge pop and xchg cli scas sbb and scas mov mov roll ficoml test dec mov sub or xchg mov fnstcw stos pop fdivs stc test sub pop cmpsb sbb mov dec rorb cltd stc nop jecxz jne inc mov cmp clc and rorb mov (bad) and inc hlt fistpl xchg pop js jae test fbstp dec dec daa imul adc jb ficoml pop iret mov push mov mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret inc lock adc scas std inc xchg sub push pop or (bad) dec mov mov jae xorb inc and sbb fst shlb mov xchg push out pop jae data16 and ja fildll iret repz sbb inc jne mov call in sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret inc lock adc insl dec adc pop rcll gs cltd mov lret push mov lahf popa xchg pop pop lods arpl xlat mov mov mov push mov outsb adc adcl fcomp xchg mov add push sbb or pop push data16 jnp push sub enter rorb xchg loope cmp mov sub mov or (bad) (bad) or and jbe mov jo add xchg mov cmp cmpsb (bad) dec pop mov mov jns push jo cmpsl or xor pop and leave adc and pop adc dec pop stc cmp jbe popa and sbb js fbld inc mov jg or stos rorl sbb push insl mov and dec je dec dec jnp lock xlat mov outsl jmp loop iret mov mov add xlat loope cli mov int3 sbb xlat dec leave push xchg jnp inc (bad) mov mov sub jns cs aad pop xor push sbb stc popf xlat mov int pop jnp subb movlps in pop paddb mov loope cli ljmp pop cmp dec jb xlat inc jo push push repz lods sti lret mov pop cmpl int3 rol fisubl es inc or test cmc jbe cmp sbbl fwait mov lcall xor out and fwait xor fnstsw dec notb inc incb ja push fwait jae sbb lods push sbb rorb mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret inc lock adc add (bad) pop fsubl mov outsl sub mov out and or outsl push movsl add jno mov negb pop idiv cmp jp pop mov jae push or in fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret inc lock adc and (bad) jne xchg or insl mov push mov push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret inc lock adc insl dec adc pop rcll incl and ret sbb cwtl sbb popf jg cmc dec mov xchg mov mov dec stos sbb xor sbb stc mov mov daa xor add (bad) stc fistpl movsl xor adc insb test movsb jl lds repz jecxz mov inc xchg mov cmp rorl inc insl es add dec (bad) popf cwtl ss insl scas xor push lds dec mov sub mov push jbe or sbbl and addr16 jae repz les in test leave jne (bad) xor nop gs aaa push leave and xchg lock mov push mov sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret mov xor iret mov call fs mov fnsave (bad) sbb lret in sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop or xor or fild in jae movb xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp xor fstp fldt movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp xor mov fstp fldz test je fchs ret fstp fstp fld1 ret ss cmpsl xor aad (bad) push fmuls or xchg jns mov dec bound cmp bound fxch fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg or xor ss fstp fstp fldt or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret lods jb pushf cmpsb ss das notb mov cmp je and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret inc lock adc dec dec mov mov push sub scas xor insb dec and push mov mov mov push sub and roll js,pn arpl mov imul cmp cmc push rcrb arpl aam dec cmp jle scas rclb bnd push ss gs mov (bad) (bad) push xchg push in sbb stc cmp push xor lods pop bound movsb jl adc jno loopne fwait sidtl fmuls inc pushf dec (bad) in outsb jp aaa inc push rorl or enter nop add out jl sbb insl jle jae,pt add iret jmp jns js inc jg push (bad) js je pushf in and addl rorb decb movb ljmp jns jge pop pushf lret in negl (bad) xor outsb shr dec sbb scas and fs aad cwtl jb cmp mul cmp jp add mov and jbe adc popa leave int mov mov out loop insw (bad) call in mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret inc lock adc jb jecxz icebp push fbld call cltd cld daa dec ljmp sub inc aam es mov lcall sbb (bad) (bad) xchg jnp pushf sub xor dec das xlat sti stc aas push sub pop or ret call jecxz add sub in inc inc gs jle cmpsl mov fnsave or add mov sarl fistpll jp adc inc notb mov add and je jo jl ja (bad) loopne pop ljmp xor in insl (bad) lock insl popf push dec mov loop cltd jl mov or and imul jns xor xchg push push dec push mov mov add jae adc push iret jmp mov out js ror (bad) aam out test stos jle (bad) hlt jns sub fwait leave in jo dec mov test popf mov add dec mov movsb iret cwtl and jne insl in inc aad or loope and icebp frstor je je cmc outsl insl (bad) shrb adc or inc loopne fwait mov dec dec loopne adc enter aad or fcmove jo mov push mov (bad) jns sub push and or lea pop insl insb dec rcll adc jecxz in sub (bad) xchg push mov repnz lods lea out push mov movsb or aad cmp jnp ja push xor cmp jns fiadd enter pop lods mov shll (bad) dec loop rolb (bad) jg push jnp lret or pop xlat stc hlt fcomps dec in pop dec test mov lret ja and (bad) fdivs (bad) rol outsl cld xchg (bad) (bad) and dec sbb repz push data16 dec inc cli mov jnp mov jbe xor scas jae,pt std in dec fcompl repz notb lds insb mov mov jg test xchg stos dec dec cmp push cmp jl fs leave mov into cwtl dec lods stc aas js push sub xlat mov cli sbb int3 jae mov mov int3 hlt cmp add mov jo aam pop xchg mov loopne rcrb sbb mov push xchg push cmpsl lahf pop sbb dec inc cld cmp jge dec clc cmp leave adc out sub arpl popa jae add lock mov pop gs aaa jg adc push ss jae adc inc dec in fldl or fistp adc mov push stc frstor mov push fs aad xchg mov jae dec push mov mov dec aas in aas call or adc mov icebp loopne into push adc lea or adc clc aaa or mov inc movsb push pop rcll add mov mov pop sbb sbb out xor cs dec push jno loope call in push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret inc lock adc jb jecxz call inc leave in in inc xchg and pop lock cmp jl scas shl inc pop pop pop mov adc lahf xlat xor cmc lcall xchg or pop mov push dec push call ja dec jnp jmp and mov or movsl mov fstpl pop cs call aad mov popa mov adc sbb mov jne fisttpl dec add popf mov jecxz mov inc outsl jae repz sbb sub test stos pusha jns pop pop push inc mov call inc inc push push (bad) jo pusha xor popa jmp and (bad) outsl jns lret adc (bad) cmc rol push inc sbb jg sub in cmpsl inc jno leave ret inc push movl (bad) imul xadd mov xchg enter (bad) roll dec rcrl cli popf xchg mov inc jns movsl push sbb lret mov out into pop cmc out movsb push (bad) pop inc cmp mov scas mov mov mov aad mov inc xchg movsl fcmovnu or test xor hlt add (bad) repz cmc lret or shr ret add pusha dec adc and sub jmp daa fdiv std iret add iret lahf sub (bad) jmp inc (bad) pop ja pop or inc notb xchg insb or imul sbb push or out or stos dec xor and and ret add pop ret and sarb test leave mov outsb push push aaa pop add sbb sub dec mov ljmp mov cltd daa xor mov rcrl cmc and push push insl fstpt faddl push mov sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret inc lock adc stc push jp xor sbb mov sahf mov dec xorb push sbb sbb shrb je (bad) fsubl mov shlb mov (bad) xlat stc push vsqrtss scas popf mov frstor mov clc fs push push fimull sbb jl push scas addr16 or mov fcoml jge mov xor call nop call jmp rolb dec test (bad) ret loopne mov push repnz fisub add rcrb imul adc jecxz mov adc xchg dec scas fidivrl mov push repz push cltd mov shlb test out data16 ds js and xchg cmp xor jg fiaddl (bad) mov jl loop push cs inc sub testb (bad) mov jne lds bound scas jg fs xor dec aas lock push gs inc pushf mov xchg mov cmpsl insb shrl insl push clc xor gs lds (bad) push cmp or out push inc ja push xchg jno sbb and xchg xor dec out mov repz in (bad) jbe pop pop mov sbb sub pop (bad) ror iret mov xchg into sbb movsb fidivrl movb iret movsb mov cmp sahf or push pop mov fstpl or pop mov pop fbstp mov adc mov adc out cs add xchg adc fistp (bad) outsb ja mov mov jbe arpl pop mov scas jb or aaa out ret iret xchg ficoml mov jecxz xchg dec inc and push pop mov inc sbbb jge ud2 sbb addr16 (bad) test xor scas pushf js (bad) insl les xorl scas cmp pop add cwtl pusha cltd fdivs pusha insl (bad) ficomp movsl lea xor mov inc and cmp mov (bad) mov fsubl mov xchg push or sarb sbb or jge stc vandnpd fimull loop mov mov mov sbb les jp lock imul inc jo mov xchg fcoml pop insb das sbb mov push mov sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 inc lock adc scas std pop fistpll add imul (bad) daa decb aaa pushf std push pusha sub add imul enter mov mov push jae pop js inc sti mov icebp and jo or xchg and xor fisttpll xchg cltd add das cmp cld (bad) jmp divl or mov cli adc mov arpl mull scas adc js aad mov push dec sahf arpl int mov cwtl bound cmp sbb ss pop adc (bad) sub test jge pop mov lock xlat mov add sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret inc lock adc scas std pop fistpll add push inc or xor aaa pushf std push pusha sub add imul enter mov mov push jae pop js inc sti mov icebp and jo or xchg and xor fisttpll xchg cltd add das cmp cld (bad) jmp divl or mov cli adc mov arpl mull scas (bad) or cmovl or sub movsl cmpsl inc xor pushf inc sbb mov scas (bad) enter adc jecxz shrl cmp mov fimull mov mov bound insb jb popa gs lcall call in mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp inc lock adc insl dec adc pop rcll add mov inc inc cmp popa pop sbb sub rorb insb nop arpl jp dec push or dec lahf push mov xlat aam cmpb mov mov test nop cmc xchg pop push mov push sub pusha lea movsb xor mov fstpl cmp mov xchg outsl jmp xor (bad) div loop fdivl cmp dec add int3 dec hlt ljmp push lahf stc mov lret mov roll sbb push pop decb (bad) cmp outsb fmul int3 mov jnp lcall jno add popa and xor nop lahf dec pushf cmp lods or or xchg hlt mov dec (bad) cs mov push iret fsub mov adc push push push mov aam cwtl out incb mov out add dec (bad) adc pop pushf inc cmp inc jnp fldcw paddd (bad) data16 cmp ljmp lods adc mov js dec hlt xor out loop or lcall or xchg cmpsl push int push pop push fidivr lock shrl fchs (bad) scas xchg bound pop add jecxz pop push pusha es sub mov int std adc out repz repnz cmp lcall push dec sar in in and sub xorb shr dec mov push mov sti mov mov fimul cld ds pop outsb arpl icebp ficomp clc rcl fimul mov sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret inc lock adc scas std pop fistpll add push lock and ja mov push (bad) mov jmp fs (bad) aaa lock movsl push mov add inc xchg scas cld cli or jb rcl stos (bad) test and popf push lds or mov push pop xchg outsb mov push ja (bad) lcall inc stos addr16 cmp loope lds xchg pop loope inc fdivrp mov pop mov push mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret inc lock adc stc push jp xor sbb mov insb cmp int lahf mov scas pop lods aam andl pop or popf (bad) xor dec cmp pop jo xchg sbb xchg loop and (bad) pop icebp add and scas jae fildll test andl jb (bad) fld xor sub cli sbb cmp pop cwtl std outsb cmp gs inc int3 add loope add pop imul icebp stc push str stc cmp loopne mov sti lea add or (bad) adc lcall and sub xlat xor or mov negl sub (bad) jb sub dec loop (bad) addr16 lock les mov and ljmp add daa dec scas in in fwait cmp jb pop mov arpl faddl lahf jecxz loopne jbe cmc inc pop pop adc lahf ljmp test pop les insb sbb rcrl and jmp or addr16 loopne mov stc mov mov pop jg mov xchg aaa ffreep cmp (bad) fisttp inc push shrl mov sub sub pop mov adc mov inc andl roll fsubrp sub inc cmpsb xchg addr16 dec xor rcrb inc xchg adc lock jecxz insb and leave xchg inc push fistpl faddp push call sub and xlat in mov test push cmpsb push and lret sti lock and or or mov push push jne imul add (bad) add jo subb mov mov and and test mov or and pushf pop sbb loop push aam aad sub cmpsb pop test jp lods add notb inc fcompl popl lret push xchg shll pop pop loop jmp dec aad lcall mov inc pop mov inc fcmovnb stos bound cs movsb arpl mov sbb lods xchg test scas test mov sbb mov xchg insl xor jle rorl sub repz cmp or incb mov fwait mov adc pop (bad) pop adc movsb lcall out out popa cld adc mov fildll push add jle mov mov mov jno pop adc adc outsb pop cli push shll sbb xchg aaa (bad) jnp push insl cmp pop jbe test cmpb or call in icebp pushf je hlt pop jg movsb fisubrl mov scas mov sbb mov add icebp clc lahf or pop jno sbb loopne or xor and lret leave nop mov jno das pop sub pop xor sbb mov rcr stos dec imul (bad) xor sbb jle stc insb and stos inc cmp ds int es pop fcmovb sbb and sbb pop dec pop pop inc mov lods insl fsubr jbe pop out jmp bound sbb in or sar cmp lahf sub sub xchg repnz aad push test inc and jmp in popa aad dec adc mov add imulb cmpsb gs pop in je rcr and mov jl sub jle push and cltd dec sbb repnz es and push jnp nop cltd mov sbb cli xchg pop hlt sbb int3 push cli call add xor ret mov fbld ret jmp inc mov rcrl mov mov mov or add sub notl add lret mov fcoml mov mov inc bound jge fldpi stos push push or jge pop or cmp jns outsl cmp popa mov fsubs sbb sbb pushf adc add fcmovb out add popf sbb push and hlt sub add mov notb repnz or or adc xor mov jle fstpt roll dec sbb cmpsb cmpsb xorb add pop je add das imul sub aaa movsl jne fldl add popa or cmpsb cmpsl adc repnz pop dec or fisubr sub pushf nop xor add fsub mov jo push pop mov daa xchg jno and jg sub lret pop pop jl test imul inc ret int3 fnop je roll pop lcall stc imul xchg cmp std ds (bad) and cld xor adc and jnp adc jl jg add sbb pop jns icebp les mov jnp cs (bad) dec js sub inc cmp push (bad) push fnstsw xchg paddw ljmp mov js sub scas fcomip aad pusha iret inc aas mov inc xor sbb das pop jbe ret cmp and and lret mov sbb js fs pushf add loopne outsl mov mov sete xor add popf lea cmp mov dec loop dec adc and push mov fsubrs add jae xchg and fidivl (bad) xchg jno dec incb inc out cmp out sbb pop (bad) or xor dec mov jge and xchg fildl push sbb jmp sub add into fxch and cmp or or mov jmp jmp push stc cmc add jns (bad) lcall fnstsw add clc leave repz jne test dec (bad) mov (bad) xchg xchg loope lahf incb push adc xchg add xor nop jns,pn clc ss sbb mov enter mov repz scas out mov out popa out sub test mov mov add iret add sub sub push int3 loop jae sub lods lods xor ret dec pop push mov pop fs pop inc loope rorl mov mov repz sub fnsave (bad) sbb xor test pop fsubl xor mov jae outsb lret aas fs xor cmpsl inc stc cmp cmp lds int3 lret iret sub push pop jae shlb push push mov call sahf jo cmp pop bound mov and sbb cli mov xor mov push push pop (bad) lods pop or mov stos test push scas loopne lods lods add and push ja rorb ja dec xor pop pop and sbb or pop and xor lock fdivr push add mov call orl jns ss dec or pop xchg mov mov inc dec js pop or scas decb mov fs mov jge jp dec xchg push jg icebp hlt jg notb (bad) lret or inc or lods out inc mov xchg dec mov mov mov (bad) loopne call mov inc movsl mov into dec lds cmp xlat sbb mov sbb xchg ljmp or (bad) cmp mov push and and or pusha add xchg popf leave jb aam pop ret inc jmp cmp adc xchg xchg xchg pop out enter cld mov hlt out in (bad) cmp sbb inc negl jns outsl and add adc (bad) sub aam incb mov xor out cmpsb inc insl sbb mov (bad) ds push dec push (bad) loop jae insb adc fcmovu sub fs xor push negl aas cmp add lds mulb call out mov mov inc leave das cmc mov daa push dec xor icebp (bad) popa add pop or adc (bad) jl (bad) fisttpll stos dec paddd scas or rorl fadd out dec cmp frstor iret push inc mov dec pop fcoms repnz imul scas jne aas lcall movsl movsb mov lcall in sub je or (bad) mov mov xchg mov insl sbb sub and mov pop shrl cmp mov dec dec inc lret bound or add out or adc test adc sbb addb inc inc test outsl cmpsb adc jecxz add xor cmp xchg and (bad) ficom int3 mov xchg pop sbb mov int3 pop sbb movsb lret xchg cmovns les jmp and mov adc jno sub fsub add int push xchg cmp cmp test insl cld lds out sahf sbb das xor negl pop xchg add daa pop sti scas mov cmp xor jne push sbb mov fisub mov jecxz xchg mov jp add dec mov outsb mov cmp (bad) jge pusha add dec jb out cli ljmp adc push insl sbb iret cs xchg push pop imull pop bound mov jl add and mov bound add fisttpll adc imul int3 fs jbe (bad) call popa and xor fildl loop sub sbb xor and mov mov cwtl and jo or in and (bad) int3 jl inc xchg xchg pusha frstor lret insl sbb and jmp in js adc (bad) mov inc or cmp test mov int mov sbb cmc cmp jge cmc adc xor fwait daa add pop into jmp push mov add mov daa out call fsts xchg lahf (bad) shlb mov (bad) xor jp frstor stos push dec lahf call jo enter inc in sarl mov sub pop imul daa sbb outsb mov pop mov sub pop sar pop mov pop xlat lahf xchg jno pop clc sub cwtl hlt rorl pop lock mov leave fcompl jmp xor push fmuls cld jge mov pop or inc pop (bad) push xor frstor les jg push cmp add (bad) test (bad) xor lcall mov movsl addr16 mov sub sub (bad) inc add out mov jmp pushf lock (bad) mov and xor pusha mov push pop cs jg sbb cmp mov jo (bad) mov mov inc (bad) fidiv fcoml (bad) aas es mov movl push insl push dec pushf rcll aas je test andl inc adc sbb cmpsb add ja sbbl dec jnp adc subl imul mov iret and add lods ljmp lret xchg call mov lea jb mov loope andl (bad) imul mov in cmc insl jl loop leave aad jne bound adc cmpsl jbe lods jae gs pop movsl inc (bad) in scas addb push jno aam pop lock in add rcl add imul xorl dec movsl mov ljmp and pop arpl cmp out mov inc adc and dec aad pop mov outsl and mov pusha push xchg or add fwait inc lret (bad) das dec mov setle xor addr16 pop inc cmp popa rcr iret adc jp and adc mov sub push aad aad sbb pop cli jb popf dec adc xchg pop and stos cmp popf pop stos scas icebp mov sbb jnp bound stos arpl rolb push fucom and pop xchg cli mov in jmp push mov adc fcoml mov xchg fmull xchg cwtl aaa add int scas cmc idivl sahf (bad) xor cmpsb stos adc adc loope popa andb scas lcall je push insb outsb std sbb xchg or mov dec dec sahf inc and cmc inc rorl sbb hlt push ja dec cmpsb out mov jp pop cmp data16 sub or xchg (bad) testb es movsl sub sbb iret mov dec (bad) enter les cmpsl adcl cltd test popa push pop dec cmp push mov sub jecxz insb push lods dec adc add jbe xchg lret dec pop adcl lods sub adcl in add mov push push add cltd leave arpl jb aas push jp test xchg dec mov or pop sbb scas jge dec pop adc jl lock sub pushf mov loop mov sbb mov or mov lods es adc jle add jecxz adc pop loop into and xchg sbb push cmpl mov adc push cld popf adc mov and xor jl mov dec jno jge clc cld jno mov push out in sbb adc cltd popf pop (bad) pop stos rorb mov sub inc sub (bad) (bad) push repnz sub (bad) jmp dec jle imul cmp cmc xor fadds jl inc outsl js xchg in mov divb add pop in loop mov js fldt popa arpl aad xchg mov bound repz xor cmpsl (bad) icebp ja les xor fadd sarb sbb loope (bad) inc jl xchg mov movsl icebp in push mov mov add xor adc jb test loop aas cmp lods cmp jl sub mov mov int3 cmp xchg add or xor adc pop mov mov push out (bad) push adc sbb cli and fnstcw sbb push (bad) mov rcrl sti rolb push xchg jbe adc jno adc fdivrl addl fwait pop rcll imul scas add movsl push mov or pop js xor test xor mov xor add sti clc mov shr stos dec es lods gs sub aad mov add cltd dec addr16 adc leave lea pop cmpsb xchg pop mov test inc addb sbb push xchg cld adc lock je sbb xchg xchg jg adc aad insb jo mov dec cmp lret cmp pop out out inc hlt xor pop stos xchg mov out fadds adc dec xor mov pop imul dec out iret scas dec or in adc dec xor lock loope jl cmp outsl fidivrl shlb dec movsl imul sti and mov outsl jo,pn outsl jle sub jae (bad) xlat je movsb jmp or mov push or xor das js aad lds lahf adc (bad) lods push mov pop xorl fdiv hlt bound loope push cld or in lcall gs mov popf jae push and data16 imul pop pusha mov ficomp jl rcrl push jbe mov inc push test add sub ja rcrb mov (bad) lock insl jle clts mov xchg fcomi mov mov push mov push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret inc lock adc jl pop mov es inc push jmp mov cltd or or lcall inc pop lods and andb test push (bad) jae shrl sbb xchg xchg pusha pop fdivs xor mov and (bad) scas or sub sub jno add pop push in js mov push mov push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret inc lock adc cmc push dec cwtl adc or sbb mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret inc lock adc mov lods push fistl xor rorl popa mov arpl adc push cli push lea test ss pop adc jno sbb sub scas icebp sub lcall jmp addb sahf push jecxz das (bad) cmp cli sti push in loope shrl add cwtl fs fcomps xor (bad) push repz adc sar mov push mov mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop dec ss scas loop fistpl ficomp sub aad mov mov enter ljmp jnp xor (bad) jo mov mov and cmc rolb call call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp mov cmp cmp jae push mov cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 mov cmp fs insb orl jmp cmpsl add inc fs jmp lahf mov jo sbb push jnp out outsb fnstenv add imul sub mov adc mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret mov add mov add sbb subl xor dec cmpsb push inc shrb popa out mov divl aam sub int mov sbb (bad) in fldt and cmp add test add add pop and mov and cmp jne fnstcw mov and cmp lea jne jmp faddp adc dec xor xor fs inc popw inc (bad) into inc add jb fwait test ss fstpl fimull insb xchg scas mov add and xchg cmc shlb insb es jb mov xchg jae clc call ljmp jecxz mov pop les lock cmp out mov call mov mov inc cltd addb sub lds xchg test lds cmp lcall xchg call lret fisubrl int3 and fs mov mov iret (bad) jno pusha into adc in push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cwtl cs enter nop sub push jns mov or in bnd and pop jae mov movsb shrb popw push aaa xchg or stc mov sub in jmp pop lahf push fldt xchg adcb rol cmc or push shrl in (bad) in xor cmp insb mov mov jmp es hlt mov (bad) clc js mov add sahf fmuls push sbb jp cld pop in rorw aam loopne mov pop cltd cmp (bad) outsb mov fbld and jge pushf fistl xor popa mov decl xchg xor imul dec and subl pop dec or leave adcl ret push rorb xchg lret shll xor mov adc pop cmp addb (bad) push mov imul sub mov test ja cli aam or cmp push movsl xor js rcl insb fldl2e pushf sbb push enter push xchg inc inc xchg fldcw in in into xor add bound loopne into pop lret stc xor popf pop jle xor cmp or sub cmp push pop add cld xchg inc aas sub nop mov mov or ja sbb sub push xchg andl ret pop cmpsb xchg add xchg mov push mov es js adc and jge fidivrl mov and lret popa fistpl popa testl repz fimull std push andl dec out pop std and and inc xchg xor sbb lcall and mov mov es pop jg rorl or dec aas (bad) xchg mov sub aas lret or (bad) xor icebp xchg and jb imul xchg mov push xor mov push sbb mov inc addr16 ds insb out test adc cmp push imul inc stos mov outsb add icebp inc push sub (bad) jno mov and and pop push inc and mov xor sahf and hlt and rorb aam jo mov fcoml xor lods xchg jmp jge push jae fcoml mov add stos stos mov lret push jo sar andl cwtl out mov sbb (bad) ljmp nop cmp fisubl push leave jmp test out icebp fildl pop aam add mov iret cmpsb stos lret fldl fnstcw mov (bad) adc mov aas or cmp dec out sub ja dec xor aas in lret test lcall and xchg stos or and mov mov mov es gs jb pop xor jb mov ret or xor mov mov shlb nop pushf fsubrl mov inc scas pcmpeqw cwtl mov arpl out xor movsl dec dec cmc mov loope loopne in iret fsubl test daa mov dec pop push lcall incl pop iret pop cmp xchg leave repnz outsb mov das test mov in mov pop sub adc out aad inc mov (bad) mov stc imul out and and dec adc ja adc movsb push jle aas push out arpl cmp imul sbb inc cmpsl xor pop cmp cwtl push jmp loopne jmp mov sbb pushf push jne test int3 inc out sti and insb xchg int aam lock cmp enter push cmp dec xchg rolb out xchg jle,pn or xchg (bad) or cmp xchg xchg sub mov imul imul addr16 outsw push jnp xchg mov add inc inc adc xlat cvtpi2ps lret inc sub out add xor scas push mov or insl and push imul adc mov fcmovb push xor js xor lods cli lds push inc xchg fisttpl gs add imul xchg jbe in adc popf or out sbb into enter xor pop lahf out jo or bound andb lods or lahf sub loope jl in (bad) mull out and jl jge adc or sub insb (bad) aam or scas pusha fiadd mov cli test fldcw out cld cmp fwait and aam fdivp sbb mov popf push pusha test inc aad in int3 call int jbe push cmpsl daa dec scas mov into adc insl push add push adc and insb mov inc subb int xor or ljmp pop push xor das mov push sub mov stos inc std xchg ret mov pop js and jg adc lock and leave inc fcomi push pop xchg xor lahf xchg (bad) cmp push xchg inc cmp or jmp ret stos inc outsl jne adcb jno in jae (bad) stos insl inc pop ret mov add int adc lods or out arpl imul sbb mov dec mov xchg ds aaa push push sti test pop in pop leave std call cmp add sbb inc xchg fcompl inc sbb mov inc lea mov insb xor fldenv test (bad) lret addr16 or mov cli jo jb add ret sbb fs pushf sub inc mov (bad) mov xlat or sbb sbb cmp pusha xchg test fidivl and fsubl aas add stos jl or (bad) cwtl in nop stos scas (bad) jae inc xor test test push adc popa jo fmuls daa mov scas arpl fs imul pop adc ret test jg insb (bad) icebp cmp inc lahf sbb rclb xor inc pop sbb sub sti shrl xchg mov inc pop (bad) lods pop iret push dec cld sub adc add adc (bad) jmp fisttpl dec xchg xchg and inc int3 data16 adc mov (bad) (bad) sbb and push addr16 push add cmc ja jg std jb pop push add xchg sti mov stos lcall pusha mov jmp cs out mov mov aas xchg or cmp pop lock inc pop push pop leave fidiv les mov lods popa repz cli std fsubp xchg cmp mov negb sbb daa mov (bad) ffreep ret fimull stos mov fdivp jns mov cwtl mov mov loopne cmpsl cmp jo test adc pop add test inc ret outsl mov loopne xor mov outsl repz jp add (bad) loop,pn imul jne (bad) outsl sbb cmp fwait inc sar mov add inc push lahf adc mov mov fwait or out or add (bad) mov push mov in movsl mov shrl and bnd das iret divb and mov sarl aaa pop dec push inc lock inc xor push mov out daa ljmp frstor mov sbb add test roll fimull jb sahf sbb mov fistl add pop hlt in or cmp imul and pop xor movsb mov and arpl xchg dec pop out (bad) mov loopne flds call pop pop je cltd insb arpl adc mov shrb mov inc pop xor add rorb insl pop aas imul jno mov jno repnz lret jbe jae sub cmc lcall inc sbb int3 int3 subl (bad) mov xchg mov inc jecxz and icebp insl xchg mov test out cs sub enter test mov sbb push aad mov ret adc scas cmp xchg push lods in pop cmp jp stc cld hlt sub mov mov sbb dec imul adc sub fstpl sbb mov stos mov jnp push pop push dec fdivrs cld and cmp (bad) sti imulb xchg mov les sahf xor sub lret pop jl sub lods nop mov and (bad) mov push in popa push leave shll mov lret pop (bad) pop pop test (bad) es or mov imul les (bad) fsub mov iret fs daa div shlb dec (bad) cld dec xchg gs sub nop push mov jl arpl repz cmp bound mov mov test jae fnstsw xor (bad) and imul jnp movl mov fisubrl add test sbb out pushf dec mov and xchg imul mov pop das outsb push bound lcall sub movsl repz push test mov test push cltd daa jp dec mov in jle fcompl pop into and jmp sub xor cmp jo sub xlat and push std pop into leave pop sbb gs mov cli jg imul lret pop ja mov dec cli pushf scas hlt add dec sbb jg push je cli and mov stos fdivl in cmpsb (bad) aaa cmp fldt mov sahf xchg out pop mov (bad) leave mov call imull ret mov xor pop push mov int3 sub inc lret (bad) jae lods mov sub aad popa stos jnp fwait mov and sub dec call sub scas mov cmpsl movsl jnp add sub sub in pop loope enter imul rcrb pop lods mov dec jo add test loop sbb test out cmp pop sub adc mov dec push push xlat mov mov outsb inc cmp clc (bad) xchg xor or out pusha jg mov mov pop loopne andl adc ljmp jae clc xchg leave inc lret fwait dec xchg dec andl decb rcrb and push pop cmp jb dec pop ja push fwait and inc enter ret insl sahf xchg jge cld mov mov and sub inc inc adc movsl lock pop je js mov (bad) lret inc cmc mov sub and or popa jbe push and jle add aaa inc cmpsl xchg pop ds pop fnsave inc inc nop or jl fcomps inc movsl int3 nop and push addb sub lret and xchg xchg push scas repz mov aas xor sarb call idiv inc pop mov gs outsb and pop adc pop dec push dec jge lahf cltd mov lret lock push mov xchg mov mov add pop jbe insb inc cmp lds mov push lahf into insl pop cmp cmp popf pop fwait popa xchg lods cmp mov and inc mov outsb rcrb xchg and icebp sub dec pop pushw insl sub movsb gs cld xor and es mov test jnp inc mov pop jmp jmp push and dec xor push test push lret daa or imull jmp cltd rolb leave insl jae and dec adc rorl add movsl loop adc pusha jne mov fs aad push jecxz adc pop sub push add push out pop pusha and inc ret inc sar dec pop mov stc xchg fidivr stc pop push test mov mov sbb cmp daa push or fwait cltd repz mov pushf mov int lods and cmc (bad) repz aaa les dec scas push pop push mov out (bad) loopne inc jle cltd (bad) xlat pop lds cwtl cmpl test pop scas jne call data16 out sub xor and scas jecxz push fild xor adc inc pop or inc inc lods bound fwait mov push scas aad js test mov lret dec mov xchg xchg lods mov insl mov mov mull mov push mov mov mov pop xchg mov add shr stos stc jne subl pop xchg mov mov mov cmp idivl into mov mov cmc int mov cltd popa pop inc cmp dec mov mov mov push nop clc sti fldl outsl cmp aad in (bad) pushl adc and dec cmpsb sbb xlat push jnp (bad) mov cwtl repnz mov or test das xchg int3 pop pop push mov mov mov cmpsl out cmp scas mov adc loop hlt mov jns jno add sarb xchg cwtl test xchg popa push in ljmp in ret int3 inc mov cmp xor and call add imul in xchg clc or sub cld jecxz lret mov cmp repnz sbb mov fiaddl test dec hlt rcll or cmp fisttpl (bad) push insl shr out mov divl or lcall loopne outsl hlt je pop (bad) loopne call out mov pop pop pop jg sub lods mov xchg or sbb lret (bad) mov add xor dec dec xor xorl daa fnsave icebp test movsb insb mov mov jb mov inc sbb cmp xchg jae rolb sub mulb hlt push dec adc in xchg xlat xor sbb push je dec jle lahf mov pop or and mov (bad) fsubl push adc fbld (bad) test lods test and mov gs xchg fbstp fwait push xchg cmp in jp or pop (bad) daa ds jle,pn pushf pop mov loop xlat mov or notb push movsb daa sub sub addr16 notl cmc mov rcrb or and popl dec outsl xchg xor jle daa sbb fldl2e xor push les fistpl cmpsl and push mov push shrl iret mov jnp mov repz sbb imul mov scas xchg push out out mov lods sub sub je add cld retw fisttpll shll lret sti or aam or (bad) sbb inc push imul add (bad) popf addr16 sub movsb jle push pushaw push jle hlt jg xor ret dec cmp add mov adc movsl lds cmp sub stc push cmpl mov (bad) sub dec jp lcall push pop pop mov add sub lret mov das out dec xor cmp pop mov mov mov imul jno jne in aam adc sar sahf movsb push cltd ret xor lds mov popf popf hlt jecxz rolb lea adc call cmp lcall push ljmp test sbb int3 cmp (bad) adc fmull jle in lods mov mov sti mov sub mov jbe movb js sub sti sbb popa es fincstp add ret jnp movb add mov arpl and adc adc rclb in fidivl jns fs fldcw inc jo outsb push cmp std inc mov xchg inc mov push and int3 jl jnp adc ret imul and and cltd addr16 xchg aaa xor pop cmc int3 fcmovnbe (bad) leave hlt cmp fcmovb lods mov fisttpl aad pop cmp popfw fidivl jl or inc imul xchg imul lods cmp push mov bndldx and cmp cmp das aad es sbb ficoml jecxz jno scas negb xor fs xchg jns fsubrl cmp add xor pop pop mov pop in popf jnp,pt cwtl and in add (bad) lods outsb push lahf cmp (bad) (bad) (bad) jecxz adc ror adc or hlt in pop mov jmp mov stos jle push sbb cmpl add leave paddusw pop inc dec pop push add int ret add and xor ss lds lds aas subps repz xchg lods dec xchg cmc nop and clc mov pop bound adc ja in mov pop lret rdmsr imul sub iret xlat or pop mov (bad) dec jno loop add inc or mov mov scas sub (bad) repz rolb inc sarl jle add (bad) outsl dec (bad) out addr16 fwait sbb insl or or into inc jae ds sbb dec push inc das add cmpsb ret aas ficoml out mov lahf ja pop in pop xchg wbinvd add jle mov jnp jne mov decb int3 inc jmp imul lds add push hlt jns dec enter dec add fcmovne (bad) jo es adc adc or nop and and mov nop cli lods lock lds andl fistl push scas aas jo fdivl inc ret fwait (bad) mov mov in mov cld lret adc push pop notb sbb jg sub out add daa push lret mov test data16 add movl ds fldenv push ja,pt jo or jmp fdivrp scas jecxz add fidiv inc sub jo js (bad) jae,pn mov out or mov aam mov lds mov gs hlt and enter xchg iret jne sbb shrb divb ficoml or cmpsb pop pushf sub cmc sbb cwtl add loopne mov xchg cmc pmaxsw fcmovnbe cmp adc jns push jge nop sarl insl mov mov stos or cmpsb and xchg mov das ret movsb in cmp sti sub sub cmp mov and mov mov bound sti cld cmpsb adc test scas pop cmp lret rorb add cwtl lea lds fiaddl (bad) jl std mov jg pop adc lods push inc xor or mov inc ljmp repnz pop cltd (bad) xchg outsb mov in sub (bad) mov mov std xor mov outsl adc movsl movsb push mov adc ljmp sbb movsl add lds repz insb xchg gs push fisttpl dec inc test mov je inc cltd clc push data16 xor aam lret (bad) repz jmp sarb add (bad) cmp lock lock push shl xchg es inc cmp scas loop divl jnp add xlat sub out or (bad) lock int daa aaa push push (bad) cmp dec mov mov sahf ds movsl or frstor xlat cmpsl addps push mov jmp out pop mov or jmp data16 mov adc inc cmp sub fist jecxz lret cmc scas push sti sbb inc imul jl push mov push arpl (bad) fldl int out lea int3 mov sub and call pusha jae cmp rorb add cs pop push hlt adc orb imulb push rcll int sbb sub cmc cmp adc mov cltd sbb xchg push mov adc and repnz push outsb sti xlat mov push (bad) adc push mov ljmp pop cmc cli or pop cwtl mov adc mov shrb push jge mov sbb out inc in xor push push or or je adc out jb jno pop inc jae sub push xor inc orb (bad) das clc fidiv mov pop mov cmpsb test in mov xor or jg xorl pop mov aaa xchg nop pop add fnsave movsl (bad) push jge daa call dec pop pop add inc mov gs ljmp jb rcll (bad) notb add sub jno enter inc push loopne imul outsl cli dec int3 inc lods sbb popf xchg mov mov or add sbb repz cmp ret (bad) dec push adcl sub and mov mov adc xchg dec inc das inc mov xor fsubrs ret add jp dec push mov add loope cmpsl pushf add jbe xchg dec aad pop push notl mov dec mov ret lret popf push (bad) repnz aas sahf (bad) cmp fnstsw cmp cld addr16 pop and lret ljmp enter mov (bad) clc mov icebp jb mov jge push icebp (bad) pop add out dec subl movsb xor popa pop fcomi andb loop mov mov mov out cwtl call hlt mov or jmp mov dec mov jg cmp in add mov and push gs pushf push push lea (bad) nop cli in enter xchg inc call imul push adc lahf movsb xchg aad shr add (bad) push push adc repnz or mov aas or push sarb rcr sti testb sub adc mov cmp ds xchg das insl stc scas insl adc loopne mov pushf out mov (bad) xchg dec incb (bad) rep inc (bad) sub jno dec insl push push out inc cld loop or iret mov test out mov pop inc rolb into idivb popa test push dec jle faddp scas loop (bad) (bad) gs call aaa cmc jp pop icebp jmp xor aaa mov stc xchg pslld mov mov addr16 sub fstl mov adc lods lea icebp gs push pop test adc sarl adc sub pusha mov movsl sub popf or mov and jb inc dec in out pop xchg cmp enter fs add enter cmp enter xor xor int3 sbb xor (bad) jno xchg hlt movsl (bad) xor sar dec add push pop mov fwait mov push gs out fwait cld adc popf rcr pusha lea test adc in pop jecxz xchg push loop push outsl sbb lret (bad) call sbb stc push dec pop jae adc or or xchg ds jecxz xor pop sub incl xor add mov xor mov cmp sbb pop xor in mov mov scas sbb and adc (bad) repz divb orl xchg add jmp cmc or orb icebp aaa mov cmpsb das sti pop pop pushf xchg inc aad push shr push jae test aam push pop xchg lods ja je adc pop lock mov pop sub sbb in loopne movsb mov dec sub jno (bad) std leave into out mov adc inc jmp jecxz mov sarl dec cld movsb dec ret or inc (bad) and (bad) mov jge push loop jae negb sbb js sub adc jno (bad) and jnp and jecxz loopne andb cli sbb rcll enter xor lods imul mov pop xor insb pop mov sahf jmp jb dec popf loop testb lds push (bad) ror push fs jae or dec jmp fwait xor addps jp es mov sbb pop sar jle lds stos cli vpsllw nop or outsl sub add jecxz fnstsw mov sbb movsb in push dec mov test in stos jecxz pop cli or mov mov jp ja test ficomp mov je lock push (bad) notl push push cmpsb loop sbb adc xacquire insl aam subb bound lret mov (bad) push shlb enter shll and cmpsl bound sbb dec fstpt push mov xchg jle (bad) xor inc pop cmp inc jmp lock fadds xor lods pop adc pusha addl sub enter pusha sub ljmp and sub imul mov mov cmp ret les add xchg inc prefetchw sbb (bad) movsl pusha mul shrb pop add insb cld jle stos dec clc cs jg push daa iret jne aas rcrb negb or in adc mov or clc xchg enter mov dec lret xor inc stos mov movsl jno xor or sub fiaddl fcomps cmp mov ss or lcall insb push cmc insl jp push fldt push sti nop (bad) es es add dec leave loope or jmp js jnp sub aam pop dec mov jbe les scas rolb or sub push notl je pop mov or (bad) jo mov inc sub mov add dec fwait sti adc pushf into stc jo ret icebp aad cmp pop (bad) push in (bad) hlt daa cmc aad mov push or int3 cmpsl nop cwtl mov add movsl jns int3 pop repnz fwait gs lock lock xlat pop sti dec cli xchg nop dec xor std and mov cmc fdivl inc xchg add mov fwait loop xorl mov mov pop cld pop push mov pop cmpl pop sbb sub push insb adcb (bad) (bad) inc xor push mov cmp dec (bad) sti inc sub roll movl lods xchg mov popf in mov pop (bad) mov outsl add imul pop inc js push adc mov cmp loopne jle mov mov pusha leave dec sbb or pop cmp push dec jg xor and lods jmp mov add in adc rcl mul and addr16 (bad) mov out sbb fsubp push insb xchg xor pop pushf pop test jae jb clc outsl outsb outsl andb jecxz lret notb fsubr mov cmp std fsubrp inc jne outsl stos sub pop cmp jmp andl jb dec subl dec test test aaa xchg inc push int fcoml or lahf inc or lahf inc sbb jecxz add pusha jg dec aas leave mov jmp loope in bound add mov sub or fcmovu and jb jg xchg pop push or lahf or les cs or cwtl sub mov rorb inc and arpl dec movsb into mov jg mov out mov (bad) repnz scas or nop mov sub pop mov cmp mov lahf (bad) jg dec lret out dec pushf xor ds push je push jae push sti aam scas fbld push mov inc aam push adc jns xchg pop adc mov cmp leave lret mov and mov adc xlat and mov pusha adc movsl push sti leave pusha xor dec pushf cmpl mov test repz xchg inc jecxz popa dec mov jecxz sub and shlb aad and mov je inc out daa cmp fldenv dec sbb adc mov fisttp sbb xchg add jns adc aas add sbb xor imul lret xchg add xchg push or mov mov (bad) cltd push xor leave outsb sub popa adc xchg ljmp ds int3 ss loopne inc mov pushf in or sub lret mov pop jmp ljmp aas pop xor mov outsb xchg mov shrl mov lahf lret jnp sahf imul mov aad jg (bad) cld out lods loope adc in das test mov add sub outsl dec sahf jge mov stc mov int scas mov test out mov clc adc in xor push das incl xchg jg sub pop imul xchg jb inc (bad) aam out leave popa or cmp lret inc mov (bad) fnsave imul test xor outsb push mov out mov (bad) mov xchg pop or shlb add xchg (bad) in jge add scas ficom dec orl jmp push pop scas imul out outsb cmp pop mov negl sbb xchg or mov cwtl sbb pop push pop add adc pop std les jns sub stc into push push add iretw cmp out lock movsb push mov imul jbe imul call mov mov push add mov add push imul mov lret xchg pop gs repz mov mov fnstcw dec sbb movsl ljmp xchg xchg rcrl data16 pop mov out add or test mov sub cmp adc push rorb test or fisub cwtl out mov roll into mov dec loope jmp push das xchg xchg inc dec (bad) pushl repnz dec mov sbb fs cmp or and lods or pop imul xor les xchg adc and adc sub sub push out mov adc movsb jne lret lret pop out mov xor ret int pop in mov bound jns pop les pop pusha xchg (bad) cs rcrb and lret test inc push hlt js mov xchg pop (bad) pop sub inc je xchg leave pop inc lret xor mov pop lret enter rcrl (bad) mov cmp add jge and push mov jae mov xor xor add xchg xchg fucomip add or xor pop mov scas fiaddl (bad) (bad) dec (bad) or fiadd cmp mov pop push mov xor mov pop dec mov jae and rorl xchg daa and adc jecxz lahf pop hlt loop (bad) mov jno jge icebp pusha jp (bad) xchg xor xchg (bad) add sub aaa mov or in jnp ret inc mov and lea jno sub imul subl mov sbb cmp ja sbb out mov mov into pop dec mov sub movsl push sbb loope rclb into outsl jge sbb or lds scas jo adc test xchg inc adc lahf push mov sub in mov lret xor cltd sti ljmp adc xlat xchg and mov or cmpsb lahf leave lods dec cmpsl popa dec mov fldl pop mov xor xor jle xchg aas add fdivrs or jecxz leave xchg jl mov mov pop imul xor xor xchg movsb and fcompl cmp mov sub or outsb cwtl cmp inc or add fs dec mov mov adc das (bad) and fadds cltd pop sub aas cwtl jno push test sbb stc call sti fbstp test scas dec mov jmp sub popa xchg cmc enter or lods pop mov mov stc dec stos scas push xchg sbb and out mov sub incl or and inc xchg push enter xchg ljmp jp cmc cmpsl test fidivr out (bad) divl (bad) adc add fnstsw mov and ret sbb imul (bad) mov or rorl xor imul shrl ljmp xchg cmp add mov sarl es add lret and dec or daa xchg push leave xor dec push call int addr16 pop push (bad) add dec ret jmp cmp mov inc rcrl push xchg hlt scas ja js cmp repnz adc out jno notb or lret dec addb adc and sahf mov repz fcompl stc mov jle in jnp mov incb fidivrl jne mov lahf sbb fbstp sbb fcoms aas std inc pop orl sbb mov xchg sub inc or mov sub adc ret lea les in push push and test loop mov sbb mov xchg scas cmpb lds je daa in out mov jbe addr16 out pop xchg lods repz push scas bswap xor cmpsl jbe push or sub sub sub fnop insl xchg add push mov jmp dec arpl das lret dec mov sub cld mov pop sub pop add lds add sub cmp cmpsb (bad) aam jb or fidivl xor (bad) hlt jmp out ljmp stos xor cmpsl lret aas ljmp dec ljmp faddl mov xchg xor xor mov mov jbe enter add js es fimull push mov inc inc push add mov fsts cmc adc cmpsl test bound pusha jae scas jnp inc sub (bad) push jae test sbb fstl and ds sbb mov xchg jnp clc xchg or imul in xor notb add test in (bad) dec jae or mov lods idivb and les and xchg call inc sbb leave push adc xchg ds rol js or or leave push push fwait test idivl dec pop cld sbb and cwtl popf (bad) mov and mov data16 je mov xlat pop mov and add inc fstps mov push int adc xchg fs sbb adc mov iret dec dec dec cmp dec inc jno mov xchg outsl ds ss and mov shrl imul adc loopne jp jg ret xor add xlat js xor das mov je cs xor ret pop push out push push cmp enter mov add ret sbb addr16 jo iret ret push hlt jle test popa ljmp and fist std adc test or jb xchg push ret sub ret clc sub xchg inc nop adc jp xchg imul jl leave xor aad adc mov lds adc outsl add js cltd xchg int3 mov movl cs pop push adc mov in rcr add adc add mov pop mov out sarb jmp rorb lahf hlt jae mov and mov cmp outsl or fidivrl call mov sahf pop test push fldcw cltd inc icebp xor cs xor sbb mov sbb fs push mov sbb inc ret add lds jno xor test sbb mov lea insl dec test jmp call ja mov or mov mov lret dec mov in push js test push outsb xchg push lahf adcb test add cmp jle push ret movsl push mov les lds mov sub add imulb lds or jns push adcl push arpl bnd dec iret xchg add movsb sub arpl push (bad) lret test pop mov pop mov inc (bad) jb fidivl mov js jle inc hlt mov xchg mov movsb cltd jge sti xchg xor into call jle ret jb xchg cmp int3 inc push jae add sub adc xchg mov popf or test and inc inc fisttp test mov data16 pop lret mov mov clc cli js in cmc cmp stos xor loop popf push jmp jb push mov dec mov sub sahf cmc xchg xchg les movsb push jo push mov dec mov mov sub cmp lds xor popa fs lods mov cmpsl jne inc ss imul outsb or pop shrb scas (bad) pop outsb sbb push (bad) mov insl and movzwl cs fisttpll mov mov or push jle pushf cs (bad) jnp mov dec aad mov in adc mov test pop cmp mov ss jecxz jnp cmpsl (bad) sub scas das jnp (bad) (bad) movsl push jb push and dec test ja psubb movsb stc pop pop xchg pop or mov imulb sti call cwtl (bad) adc test inc mov jp (bad) cmp mov xor add mov popa rorb mov mov enter and add sub mov lcall das repnz cwtl mov in and push pop gs pop inc mov mov adc cmp pusha jb es sub and and imulb cwtl mov push push lods insl fsub dec xor aas lds push cmp push inc mov push repnz movsl push fcompl cmp in aad cli jo push fwait cmp pusha repnz mov xor add pop scas ljmp dec xchg push rcr push push lds call das outsl int fildll push sbb cwtl mov loop imul mov jle movsb daa dec test push or add iret dec aaa lret loope repz xor pop (bad) (bad) lods mov pop dec dec sub loope out jne mov xchg mov pop in pop sbb shrl push push push inc sbb mov repnz pop aas push lods ret jecxz fildll cld aaa sbb iret mov (bad) jo xor nop mov test lods xor fistpl jl js movsb xchg inc lock scas repnz jne movsb and sti nop jl xchg in pop (bad) push or sub push test inc inc clc arpl jecxz adc xchg (bad) lret imul or testl xchg add dec imul fimull cmp imul sarb lock or mov sub jae and call pop add outsb roll loopne ja pushl pop lret inc lds mov out mov inc roll mov pop cwtl mov loop mov jae sub dec lock jnp mov test fmulp dec cmc cmp fdivs scas dec jnp aad lods mov rorl sbb and sahf repnz adc and cltd sbb sub dec leave cmp mov dec push in call (bad) popa push or pop lea inc push mov sbb fisttpl movsb ss mov rcl jg adc in (bad) js arpl push (bad) call lret add adc cmpsb call add ljmp imul pop pusha pushw add scas push or ljmp jg lds inc pop cwtl mov or stos enter pop aam es and pop andl sub call leave rorl (bad) (bad) test sub cli les pop push das loopne dec xor mov imul movl jmp arpl inc js ret mov test sub jae jg sub xchg lds imul loope xor or outsb xor hlt scas idivb sbb daa mov pop lret in mov pop push jp xor gs sbb mov (bad) mov or jle je mov outsl inc fldl push ds adc (bad) xor js in mov sbbl jge sbb rclb push mov jnp mov test mov jp inc pop test aam push or adc test and jle xchg mov aas xchg notl lea adc mov add sub push xchg xor movsl fadd mov jbe mov sti clc and ret cmp mull jl test xor (bad) mov xchg dec aaa cwtl add jg xchg lods mov clc movsl and dec subl nop jp addr16 lret je xchg adc insb out lock addr16 gs test lea sbbb xor (bad) shlb push hlt repz mov into lock int dec iret inc inc pop or das push pop pusha mov sub push out xor inc lds pop sbb xchg lock mov push and movsl mov (bad) dec mov or mov and lock insl and addr16 ss mov mov (bad) idivl repnz movsb bound add mov and xorl and cwtl jnp (bad) sbb pop sub insb es div xchg jle jo adc jnp icebp (bad) stc andl sub imul inc scas popa in add mov push movsl and sbb shr fcomps xchg or or mov cltd xchg pcmpgtb or inc enter fsubrl ret (bad) jbe dec fildl inc mov aam ss repz dec mov cmp mov pop je in popf addr16 and scas mov ja xor cmpsb test push mov xchg stos arpl mov outsl ja mov test sub mov cmp pop xor (bad) out xor loopne push jp scas loope mov int mov ficoml sbb ret cmc ds ds push ss cmp sbb mov jmp xor popa ds inc out in jge out mov clc scas pop xor in mov push out xor xchg andl out push pop out dec jne fimull scas fs test out jae cmp test test mov lds mov xchg add repz fisttpl in enter mov test mov incl xor push lahf jp je and xchg ficoml jecxz movsl lret movsb cmp (bad) sti (bad) push lods jecxz or jmp outsb sbb pop out adc sub outsl bound jmp lock sub mov push lods push fadds push out ljmp shll (bad) hlt ret (bad) dec mov pop in inc pop test in out fadds mov ds push inc shr repz jge fmul mov inc sub xlat mov dec in enter andl (bad) in cltd xchg jge outsb mov enter (bad) in jge adc ret incl es mov pop push jnp in and loope sub sbb fidivl outsb inc test pop incl rcr and ret shrb fs inc xchg imul mov fimul aaa (bad) pop xchg inc test sub push xchg mov jo aam lea mov (bad) lea adc cmp cmp inc xor sbb outsb fcmovb or loopne dec pop lea xor cld cmp nop leave rcll call lahf pop je insb (bad) xor (bad) loop jmp dec adc stos rcr or gs mov fcomp mov aaa frstor cld cwtl sub dec mov sbb fadds orb bound sbb (bad) jmp sub dec lea jmp clc imul std std or icebp (bad) es mov mov cltd mov jp inc dec negl popa mov sub push sbb int3 out sub icebp adc inc test das push loop xchg daa mov dec xor dec stos fs lcall lret sbb pop push std mov mov gs shrb adc sbb dec ds xor pop xchg cmp xchg fstpt push xchg mov mov sub outsl xor rcll pop mov inc rcll mov mov out stos push ss dec fwait imul pop pop mov (bad) stos cmpsb out adc cs icebp shl jp (bad) mov or jo inc ret shrb mov data16 popa out out jae mov add ss jle sub mov pop divl pop add cmpsb pop ja aam add dec test xor in aad stos addr16 mov testb add in movsb sarb push add in add mov xor (bad) and mov fcomip arpl push mov stos fmuls stos gs push cli xchg dec ret push in dec imul scas or sahf pop jg jecxz sbb jns out pop jnp jne movsl je ljmp xchg scas mov shlb dec xor cmp or xlat rcrl cmp mov das andl push mov mov sbb or pop cmp cld adc add jg sbb out pop xlat sub in lret movsl mov or (bad) add cs pop push or dec bound mov mov push or sarl sbb add pop movl push mulb mov mov mov pop fbstp testb sub or out daa out mov inc arpl fbld sub out mov sti sti mov dec jl test hlt outsl dec leave push aad inc fs xchg ficom clc movsb test mov cmpsl add mov loopne stos das call and scas int mov lods stc mulb out cmp sti rcrl out xchg adc dec pop cmpl fwait aas insl ficomp int3 dec je std inc inc pop std mov dec shrb jae aas cli test ret lods enter ds scas lahf ds (bad) aam or cmpsb in pusha cmp inc add sub mov mov pop lods cli roll std xchg test enter or xchg cmp adc mov sarl sti repnz cmp (bad) ljmp (bad) cmp (bad) into xor imulb dec rep in or xchg adc pop cmpsb jo adc cltd fucom jns pop sar push ret mov mov mov test jno (bad) insb pop (bad) jne pop rcrb jbe dec pop mul mov push loop push repz sahf ret jle outsl rclb or fisttp xor adc pop cmp es les dec mov addr16 stos call in mov (bad) pop imul test pop dec sbb xor mov mov mov xor enter adc inc mov sarb push es xor (bad) movsb mov lds dec data16 mov xchg mov sbb xor pusha cwtl imul and mov or ds push out jecxz or cmp hlt gs xchg and adc lds cmp mov iret in leave ljmp lret sub and das enter outsl dec add lcall push and nop dec mov xchg sbb insl std es inc repz insl mov fbstp inc (bad) mov dec aam jge mov mov push dec sub xor jb push jle mov jne adc js mov cmp xchg xchg xchg sahf xor dec cmc out fdivp sub cmp mov test (bad) hlt in popa or mov aad (bad) add frstor in xchg xchg inc cmp (bad) pop popf lods (bad) sub xchg rorb inc cli pop adc add sub adc in outsb dec push adc jge xchg mov jp mov in roll fistpll aad (bad) mov mov mov out fwait sub mov loope adc (bad) dec pop call aad fcmovnbe stos out das aam ja pusha pop test test imul (bad) sbb inc mov mov int lcall jne pop sar mov (bad) dec in cwtl sbbl les push add andl push scas push std ret pop jbe add add xchg jb xor sbb in das cmpb mov mov push imul les aad stc sarb icebp imulb cmpsb xor test xchg das pusha sub sub xor cld mov inc mov fnstenv xchg dec pop sbb aaa scas push loop leave ljmp sbb imul push xor mov and iret mov stc mov jg push bound xchg xchg nop mov mov fisttpll mov repz pop ljmp stos movsb xchg cmp mov imul in mov aas pop push mov ja cs sbb insb cmpsb xchg cli bound fbstp cmp push das scas out sub sbb ret fwait fwait cmp xchg pop xor push cltd mov shrl mov sub xchg cmp mov pop push (bad) cli inc js jbe aad cmp scas inc loopne int fndisi(8087 scas loope test aam adc (bad) cmp mov outsl (bad) xor and mov xchg and adc pop les insb std addr16 iret jns jns dec aaa fildll je sbb and mov repnz fstpt out fs js push xchg movsl jns pushf fidivr adc push mov xchg cli xor mov pop out sbb mov fistp xor push aad mov lods pop xchg jo bound call xor sbbl or or (bad) mov dec sbb fimull dec add cmp mov std xor pop jns fs mov or jns mov jg lahf lods sahf pop sbb mov jge pop add dec pop popa push or loope repz (bad) sti shrb ficoml (bad) pop dec hlt aaa lahf adc mov sbb rorb and xor jl adc out adc outsb push xor fldt push jg jns pushf stos cmp sbb push dec into ljmp int3 mov aaa jno inc xchg push sbb sbb mov shlb inc adc inc leave push xchg bound pusha add pop jg rcrl jp insb inc xor enter enter int3 mov cmpsb inc cmp mov xor sarb push nop mov leave lahf xchg push sub in ds pop aaa adc or adc xor mov andl and xor fcompl sti and ss shrb dec fmuls verw mov js mov sbb ret ret test fadds dec aas xchg cmp sub scas pop adc or inc (bad) stos fiaddl pop adc das pushf mov pop jo pop mov clc stos fildll repz dec fs es icebp push jecxz imull aaa and adcl pop sub sub fucomi neg addr16 cmp inc inc sub in repnz in lock pop aas mov stos lret jecxz mov mov bsr push add out mov inc mov pusha in lods adc ret adc (bad) call mov dec shrb testl push xor test je (bad) gs or sub jmp xor jno movsb scas fildll dec rcrl fstpl enter testl lds push xor add mov pop or sti cmp sti dec daa test xchg aam adc cmp inc sub xor ds mov dec movsl lret movsb cmp jo push inc mov rcrb mov add jle jmp jecxz pop fldt lcall xor jns leave ljmp aas xor dec jns inc inc sbb pop sub xchg inc sbb popf cmp sub arpl mov jns ret xor mov sti ja sbb inc push adc pop or pop cmpsl pop test fs lret rorb cwtl ficomp in iret out jae lret dec inc add (bad) mov cwtl rclb bound lock xor popaw es std js xchg faddp sub test or pop pop xchg std inc inc ds adcb jge jge adc mov arpl and inc popl and mov inc xchg addr16 into push mov inc xchg scas repnz and int3 lret jns and or test pop mov xchg imul push mov les fcomps mov sub ds stos imul cmp push pop test stos push arpl mov popf adc test cld push sub sub das stos addr16 dec lret cmp insl dec jecxz lcall icebp or xor xor jb or stc jnp or mov push je inc pop lock out mov mov inc xor in push mov cmp mov imul and or sub shrl cmp out aad enter aaa jle lds cmp cli jmp dec jno add push ljmp (bad) jne inc mov in pop hlt pop lret push sub mov dec adc pop dec mov and gs (bad) dec fisubr (bad) dec jns mov lock jo rcr dec pop mov loop out roll std lds (bad) fsubs mov mov fs pop loop and loope mov push lock call pushf jo cmp sub fsubl jno fwait lret inc jo (bad) aam (bad) clc xchg cmp sbbb out (bad) sbb rcl idivl int3 aaa fisub or leave sahf and ljmp add int3 je lcall pop mov inc cmp jae into lds jl sbb sbb sub adc pop loop std pop mov ss out cmp std cs sub test xlat addr16 scas popf ds mov xor dec fs movsb xlat xchg add aaa xchg add xor fdivl arpl cmpsl rorb enter aaa dec ja icebp popl mov dec scas outsl (bad) sub cmp push cmpsl out out out cmp pop cmpsb push inc adc cli into sbb jmp cs inc addr16 nop add sbb mov mov shll shrb dec mov xchg stos outsl pushf mov lods (bad) mov dec inc sbb push jle stos addr16 icebp sbb push or ficomp mov mov sbb mov sub jmp mov adcb movsb rcrb mov sub daa mov push aad fimull xor mov in inc inc xchg (bad) or inc in call mov das jl movzwl ror or adc push push and jns sbb ret jg int3 sub repnz ret (bad) jmp orl sbbl popf and push jbe mov xlat aas or jne (bad) jae mov arpl or adc mov cmpl xchg jnp int3 pusha mov shrb adc pop mov and cmp cmp jecxz les pop fimull xor addr16 mov fnstcw xor cs cmpsb mov jnp xchg pusha std dec cs sahf push (bad) and mov ja sub jae lahf dec (bad) int push mov mov pop popf inc inc out fwait dec adcl cmp push (bad) daa sbb das bound scas les push and repnz add push shlb and ret jns call and aaa mov enter add or (bad) sub out cwtl dec jne insl js mov pop ret lret mov xchg cmpsl xchg add jno les jb popf pop cmp pop int fild mulb xchg xor sbb pop inc jmp aam adcb adc xor sbb mov mov and fisttpll inc imul scas xchg rolb xor leave es mov lcallw outsb and ljmp imul scas ret inc das cmp or popa sarb pushf jb jnp in mov stos subl inc mov xor mov add sbb int mov and or dec sub fisub scas jg imul mov mov pcmpeqb inc mov push xchg dec iret (bad) xor pop test mov mov push jmp cmp and clc (bad) ljmp (bad) push sbb xchg test stos cltd mov xchg (bad) lret arpl (bad) xlat and xchg dec dec pop cltd xor sub fcmovnb dec out dec ss imul lods mov aam xchg lcall stc cld cli push jb mov adc xchg ljmp mov pop jl out jne cli xchg dec scas out mov sti imul adc inc jnp push (bad) jo sub jecxz add (bad) push inc inc inc jns out jge aam ja scas test stc lock ret in or pusha pop (bad) out xor lock pop pop aaa mov sbb divl push jae sub sub iret cmp inc aaa inc (bad) je lret mov in ja jo inc mov stos rol mov sarl dec dec fwait cmp push mov hlt insb ret fbstp inc xor mov in jl mov js adc xchg fwait cmp lahf imul test and mov out add lock mov add add cmp and sbb push lds movsb mov mov pop inc fisub std cli xor cs dec sub xor dec mov mov stos call pop call popa test mov mov repz rolb decb mov sbb xchg xor sbb sbbl gs or (bad) and inc ds mov fdiv jge add cmp cmpsl sbb mov rcr (bad) xor mov xor aad dec jl jmp enter xor aam data16 xor push or out iret mov in xchg xchg or cmpsl xchg add enter sbb call (bad) (bad) lock push decb adc and lahf fwait movsb or cmpsl push hlt cltd leave inc cli fstpt mov cwtl insl sbb mov inc sub sub xor icebp imul cmp ficom rcl inc or ljmp push add imul stc mov aad test sbb dec inc mov mov iret loopne sbb out mov (bad) or xchg adc xchg and jecxz iret xchg sub lock dec xor jo sbb aad push int aad aad adc mov idivl push insb xchg outsb inc rcll repnz adcl aad in out push and test jmp enter stos es pop lea int mov stc dec jge xchg movsl insl fucom mov xlat lret mov ss sub ficom pop jmp hlt insb add fiaddl or add sub enter jle adcl or mov sbb mov push mov mov adc or loopne mov pop adc jl es test add insl outsb scas fnstenv (bad) jbe push push cmp and (bad) into outsb or and cli nop pop cli ds (bad) je mov fnop pop inc sahf movsb (bad) mov push rorb cld dec dec pop jle adc mov sarb cmc cs sbb mov inc (bad) out sbb sarb sub daa sbb push fsubs das ret jmp push dec mov aaa inc movsl out sub bound fs sub les push sahf xlat (bad) popf out adc jno fidivl addr16 repz cmpsl lahf lds push pop es test cmp xchg scas cmpsl mov xchg setl jbe jns sub cmp loop push bound xor rcrb imul mov xlat add or jo scas negb dec mov lret xchg inc pop xchg mov pop movsb (bad) add scas pop sahf xchg gs repz or cs jbe mov inc mov ss mov nop mov out in jne ret outsb adc insb sub test push sbb push sti lods lahf sahf mov push stos mov push jo aas cmc stos leave ret push add jp nop nop ficompl movsb ds in adc pop mov jno loope popa pop pop adc adc int3 jp ja adc dec pushf in movsb dec out jae loopne jg lods das push push mov or ds cmc cltd in aaa repnz jae push or dec nopl lods in icebp sbb enter mov cmp xlat test xor mov mov mov jb push loop daa call xor loope jl mov leave cs mov jne cwtl xchg xchg sbb sbb sub xchg and arpl cwtl jno data16 sahf mov jbe xchg sub jge dec push pop xor jns cmpsb jg das inc mov jge lcall jae (bad) or jne lret adc hlt test in popf fcmovu movsb lods sub sbb mov movsl movsb andl cmp push mov mov push mov fwait mov cmc aaa psllw clc lods pushf js stos jl sub aas mov addr16 outsl cmp in out mov es frstor mov dec rorb lds fs add mov loop xchg xchg mov fwait mov gs cmpsb push inc arpl leave push inc das mov stos cmp push out test outsl rolb ljmp rorb push cmp sbb shlb jmp shrb mov jle out adc aam push aam xor inc fsubrs dec imul pop aaa addl mov jb adc cmp outsl movsb sbb xor mov jmp jl jge out inc lods repnz ret dec enter sub adc fstpl push mov lock or xchg hlt mov add push xorl or test dec lods jle pop cld faddl iret add stc pop cmovae sub inc call adc fstl or es ljmp and cmpsb push mov pop dec in fisub pop adc pop pop sahf cmp in stos mov nop and xchg mov add xchg xchg pop jg pop loope imul pop rorl push mov ret add pop stos lcall mov fisubl xchg (bad) jb sbbl or js cld sub dec jb mov andl movsb lret push in adc add cwtl aaa jmp cmp or and pop cmp fiaddl ret jae repz addl jmp (bad) (bad) push jp sbb inc and jp stos loop pop xchg or cld cmpsl leave pop xchg pop pop les or and cltd aas test ret or imul loope push pusha loopne,pt and cwtl dec (bad) data16 imul mov je out push fwait xchg push inc fs inc imul mov outsl cmp scas js jmp push jne in jns mov push shlb dec jo int3 cmc sahf mov test outsl loope fnstsw das in push inc popw je pop subl dec add xor ret insb (bad) push int3 xor cmpl lahf jb mul dec fs test xor stos cmpsl or out lahf lcall push ss jbe inc cld push mov dec or xor fild or add sarb mov add aad pusha inc xchg jbe fdivl pop mov leave or out adc jns movsb scas xor lock jo insb xor sub or pop ja push lea (bad) sbb movsl mov (bad) jb (bad) mov ja jne mov sbb xor cmp jl aad nop icebp dec add mov push test rclb xorb fcom gs sbbl ljmp jno shlb pop aam and jnp mov mov or sarb xor sahf sub xchg pop enter outsl xor fsubrs jae andb mov fwait sbb xchg xchg mov mov jne push in xor movsl mov xor (bad) das clc outsl in iret sti aaa ja cmpsb repnz (bad) adc int3 imul pusha lds outsb xor shll add xchg es sub mov xlat sarb push cmpsl popa xchg bound sbb leave insb popa fs cmp or ss sbb out push hlt mov sub or mov aas inc int3 jp pusha stos adcl pop sti jns mov inc xchg sub nop lea dec dec dec fisub jo lcall movsb xlat push jge jecxz push in stos mov pop inc add xchg in insl lret (bad) repz sub or sub and movsb loop ja mov mov movsl roll adc jecxz (bad) jae dec cs cmp pop push jo adc and add push mov mov adc sbb scas cld int dec add loope xor adc mov pushf in push add push rolb xchg fwait lock dec or clc and call push fildl xor pop ljmp flds cmp jecxz int jle pop fs push das and insl mov pop jge mov (bad) fcoms xor sti int3 mov rep loopne loop aam stos es (bad) mov enter mov inc (bad) sbb push dec mov jge sub fistpll mov mov push mov cmpb (bad) sarl pop inc and xrelease inc pop aas xchg je pop aad ret daa shlb test out add mov jp lods or je and pop cwtl xchg cwtl jbe add cs js mov out scas roll stos das pop pop sub es popl mov and mov jmp stc (bad) cmp cwtl mul jge xor fcmovne cli or out (bad) jmp ljmp test clc negl stos cld repnz xchg outsb adc sub inc fmuls jmp push out pop xor imul test outsl jb icebp rclb mov cmpsl (bad) xor pushf and (bad) lret stos clc int outsb pop cmpsb cmp mov imulb fimul push mov mov xchg lret adc push lret jecxz mov mov mov push (bad) in pop fild sub pop notl mov int enter inc leave mov push xor imul fisubrl add adc aas hlt push sbb pushl adc xchg dec push dec pop loopne inc jl mov lcall xchg xor sbb pusha lods roll jbe mov pop mov lods es sbb push clc outsl adc call fistpll daa adc fbld pop fistpll pop push inc mov shl add cmp pop stos jbe stos jecxz sub mov (bad) jne test aam cld sbb mov fistp leave pop jb xchg nop mov jo rclb mov gs fs in negl sub jae hlt int xchg dec sbb add sbb inc mov dec roll add loope lret aas and stos sbb rcll rol mov mov sub inc adc inc insl push push xchg dec je mov repnz cmp and sbb cs (bad) pop fs ret enter cmp xor sbb sub aam loop sbb and jne xchg pop dec push (bad) cmp das out push sub hlt sub or fmul je mov or test push popa ret mov stos (bad) call or (bad) into arpl test mov or scas rcr or mov scas sub aam jecxz je fistpll and jmp mov std mov div lret add xor ret ficompl jb sbb push fnstcw push loope (bad) imul pop or mov and add adc and cmp pop dec jnp gs and pusha fidiv lahf fsubl iret push lock jae scas in sub push and or mov loopne (bad) pop adcl imulb paddusw rorl jne xlat out scas or mov addr16 lds js pop mov popa mov lock mov xor mov sub sbb mov dec out es dec dec pop dec loopne lock insl cld pop je pushf xchg arpl mov xchg jne push lahf nop sbb pop fldl xor xor loopne xchg pop arpl popf jp lret ss int3 push int out jge stc or adc popf movsb push leave adc add cmp divb call push dec ds mov pop fbld xor push ret mov add dec dec mov sbb les fldt movsl int3 pop pop pmaddwd les cwtl fwait (bad) jg andnps lods fistl decl rcl test push jecxz fimull sbb ret les mov iret dec scas pusha xor adc jl and inc or (bad) sbb inc push cmpl sbb push insl inc pop fnop lcall and call push and ret enter mov lods (bad) mov or maskmovq testl or jae mov xor push adc cli jecxz sub mov (bad) mov dec (bad) ficomp into fucomip or cs insl addr16 int add xchg sbb iret or or lods (bad) mov aas push iret mov inc rcrl aam out inc mov scas iret movsb push inc push loop je stos sub (bad) adc jae out mov fwait sub and mov and jecxz les leave sbb inc (bad) push aaa pop pushw inc test push setae aad aam jecxz sub cmpsb lods sbb lahf (bad) pop loope fcomi mov add xchg or push pushf push and test xchg sbb dec fsubrl and ds sub and adc fldenv dec scas push jecxz (bad) insb add xchg popa pop data16 movsb jmp lods or inc or push leave sub mov loope jp loop bound subl push adc xchg adc xor stc mov xor jne xchg add adc mov xchg pop ds xor addr16 cld push inc mull mov push sub les jecxz frstor fmuls sti inc fldcw shl mov jle test xchg roll pop outsb mov cmc xchg rcll jno leave pop or js push jb test add pop (bad) (bad) xor adc in xor adc lock adc push sbb lods sbb mov insl scas dec aas push cld jo cmp popa cwtl sbb cmpsb mov adc mov adcl add ljmp sahf sub loop cmpsl ja scas and push ljmp jbe mov lods fstpl int3 adc push daa pop mov jne icebp imul mov push cmpsb andl mov scas outsb ljmp rorb sub (bad) push sub scas add dec fsts in jge addr16 adc mov xchg ss and arpl outsl mov mov ret lods (bad) lods dec mov inc mov addr16 adc aam mov jb adc mov bound cld and add sub xchg xchg fldcw cmpsl xchg out mov loop jbe aaa and in fidivl fdivrl xor sbb ficoml cwtl testl decl jo cli mov pop movsl lea mul pop nop cli sub mov cmpsb js jnp mov cmp mov sub pushf xchg push int3 (bad) sub mul subb sti pop out repz xor sbb cmp add notb popf repz int3 (bad) mov sbb aas xor daa sarl icebp and mov adc enter inc add dec add fwait pop xchg fstps sbb movb push xchg ret xchg sahf xor cld sbb sbb std outsl jecxz loop dec add shlb push xorl sub lock mov gs stos adc dec es add jo das fldenv shll repnz push jg add fwait push int in mov (bad) sub pusha push xchg pop lret adc clc mov add mov inc movsl popf and inc mov orl outsl shll or insb add ds gs stc sar sahf sub inc lods ret sbb inc xchg adc (bad) daa cmp jno xor xchg ja mov mov sbb jo cmp inc inc in adc sarb les mov pop mov dec pop out pop mov or addb (bad) xor xchg movsb jp call xlat push addr16 sbb pop fbstp sbb jo movsl push dec sbb mov xlat cld pop (bad) pop aam sub xchg mov xor fdivl loopne cltd xchg xchg adc jge pusha std mov cmp aad ljmp xor cmp mov sbb sub dec pop fwait idivb or push or push push inc push push lret loope jg arpl insb cmpsl and gs imul or cmp pop inc mov sahf pop call rcrb inc sbb add ss and sbb push sbb add sbbb adc adc (bad) xor cmp and and mov add inc imul pop dec jmp iret xchg push pop adc inc push inc fwait inc popf add scas cli popa mov iret or nop add push testb pushfw cwtl sub nop xor pop insl movsb stc notl je mov stos (bad) or fldcw mov dec add jae les push (bad) jo sahf mov aaa enter cmp insb es out mov dec push push cmp lea cmp mov mov sub xlat pusha loope (bad) xor fistpl int3 stos cmc push leave (bad) and outsl cltd sub sub (bad) mov cmp dec mov cmp pop dec (bad) push pop fucom jne (bad) add xor outsb sub adc icebp inc fistpl lahf out idiv mov xchg ror cmp pop mov adc and (bad) lret mov adc jl rcrl (bad) loope push std in push mov aaa les mov inc sbb mov sbb fdiv cmp xor outsb sub and out and push inc jl sti sub mov lds inc jmp and ja pop jp fimull pushf mov mov push cmp sub leave pop out and xchg ret gs pop lea pop mov and mov sbb mov mov xchg jecxz add or xchg das adc inc and or aas adc adc add outsb xlat and mov sti sahf and xor mov xor mov test lcall push shrl test call xchg movsb pop add lahf fdiv cmp pop les stc push pop inc mov repz repnz stos sbb pop mov ret lods or inc jge (bad) push outsl rolb push repnz ret push push jae xor repz and pop or movsb fistl adcl mov aaa scas or lods dec rcrl imul loopne or xchg notl out pop loope dec aaa (bad) inc and lea pusha repz call lods roll ret cs push add popa push mov cmp mov in pop popa (bad) pop mov js test jmp or adc pop add (bad) sahf xor xor stos mov xor adc movsb jle test pop shll xor lahf dec mov pop push scas and cmp sbb add das pop pop repz inc inc test pop mov test (bad) cmp pushf je call jl jl fildl mov faddl (bad) xor and sti inc aas arpl test and push movsb add hlt icebp test jbe hlt inc out imul mov iret gs sub das or pop xor inc push (bad) int3 add add xchg push into pop jle fsubl arpl pop pop or (bad) test int3 dec fstps loope dec pop mov sub adc bound out sbb cmc loope ret negl dec outsb push sbb sbb test cmpsl add shrl repz icebp mov dec mulb popa jl (bad) mov cmp jns shll sub and lret xor adc jecxz cmp xchg inc adc xor lock jg repz addr16 adc test sub pop cli cmp clc lods cmpsb rcl jb pop dec pop jnp lret sub lret test test inc jmp sbb ret sti test jp xchg inc mov mull mov aaa cmp pop mov push jecxz (bad) mov aas inc pushf jle dec adc and xchg dec fistl push xor mov mov jns in cmpsb ljmp jno pop iret xchg jl sahf dec sub (bad) jl je (bad) mov adc out idivl test mov orl out mov mov out test pushf jb sarb mov ret xor mov clc cmpsl mov pusha xchg outsb (bad) (bad) fnstenv dec mov mov and aad or adc (bad) mov cmp xor sub ljmp movsb dec mov je sbb pop cmpsl push mov aaa jo imul cmpsl pop mov add lret jo ret cltd dec leave cld movl iret call and lea scas xor inc in ds adc int mov ret push (bad) lods sbb rcrb stos mov out mov jnp cmpb mov mov ja movsl scas pop mov and mov jmp push dec jne or lret cld out (bad) jg adc xchg into sub cltd pop imul popa stos (bad) leave shlb into mov sub fiadd iret mov adc sbb stos lcall jle,pn nop out leave mov cltd pop shrl loopne jbe gs lret pop inc outsb gs cmc popf adc pop popf shlb pop (bad) cmp xor aas out loope in inc ljmp pushf jno fs jns push lcall mov pop (bad) and (bad) pushf sub ljmp out cmpsb and cmpsb jne mov push jl lret pusha (bad) cmc stos sbb sbb into jb cmp mov call or adc cltd dec rorb xchg scas outsb scas stos outsb scas add shlb jl mov mov sub mov xchg jg test ljmp fistpl adc pop jg mov test add mov mov mov jl dec cmp sub pop movsl clc pop jbe mov ret dec sti xchg idiv fwait lret cli (bad) xor loope cwtl shlb pop pop inc jnp mov mov xor push add mov adc jnp mov sbb cltd sub mov dec lcall inc loope fldt das mov push fimull arpl (bad) xchg push fwait adc dec (bad) adc inc imul insb outsb pop popw push push cld fimul push pushf cli rolb in push inc add test mov repz outsl flds inc into stc dec cmpl icebp popa xchg je test jbe add jns mov jo dec adc push outsb xor sub mov xor lock mov or cmpb fldl jnp add imul pop int3 std (bad) xchg daa hlt ds (bad) adc pop sbb xchg loop dec dec (bad) mov repz call sbb cmpsl fwait outsb mov sub int3 gs popa jae arpl pop stos addr16 add jl or dec add inc lods in lods fisub cmpsb loop notl (bad) dec mov add cmpsl int3 int3 test mov fs imul lar mov mov sti rcr jp sbb xchg int idivl enter dec scas popa adc sbb sbb icebp and fdivrl ret jae js sahf sbb rcl push inc int add adc (bad) lret xor sub cmp (bad) mull ljmp push and jmp scas hlt jae or jbe push arpl jo fdivs jle or loopne std xor xchg sbb ja adc ljmp cmc je sub push jo je mov pop lock jp fist div lret ss fild aaa inc inc loope mov mov xlat mov lahf in adc les idivb mov jno das jg push jae pop add push es mov fiaddl rorl insb dec sub adc dec cli bound sub push lds xor xchg roll fwait sbb adc ljmp les pop fidiv cmc push lret int3 lods xchg inc aad pop mov jmp mov lock lods add repz outsb push fistl sub dec xor nop mov push mov mov pop mov loopne outsb ret mov insl repnz jmp and mov ja in add and pop icebp mov jnp sub popa mov repnz jl or pop out jnp lcall jnp mov or shrl sub (bad) add mov in cltd xchg cmp cmp pop sub dec inc and popa iret xchg call pop xchg xchg cmp cmp leave je,pt jb shrb fxch ret fs leave scas dec xor sbb lock sahf (bad) and fsts (bad) (bad) aam orb mov test pop mov mov cmp add jb mov fwait scas push lea jl jno pusha jge (bad) dec push int mov add js ror xor mov sub fist jecxz cmp dec (bad) addb pop cmp sub cld sub add sub nop jg jp dec lret lods les jecxz sti dec cmpsb xor sbb mov ucomiss lret into xor outsb lods cltd in push sarb mov inc sub lods mov inc aaa icebp inc pop orb loop nop inc aas pusha jecxz inc sbb and push shrl in aad cmp rcrb and movsl xchg insb dec cwtl mov add sahf int3 popa pop out and cwtl aam and cmpsl lds out and movb or test leave jne pop xchg movsl call pop inc mov jp mov xor mov insb dec lret (bad) out and xor mov add aad jns lret mov js cvtdq2ps fs mov pop inc adc mov mov mov push ds dec pop xor pop js in mov mov bound ss pop cmp cmc or xchg lods test movb mov arpl (bad) mov cmp cmp sbb ja push dec mov jg cmp dec bound push (bad) adc dec mov mov mov fisttpll cld or sbb pop rcrb jl fistpll jmp cmpb mov or (bad) inc rclb adc add cmp add scas iret mov jmp mov daa orl cmp sbb push mov insl xchg mov js out cmp stc jnp mov shufps mov add dec sub pop or mov mov jecxz push je out adc test xabort and ja pusha dec dec xlat inc es into test lock movsl xchg cmp xchg dec movsl mov rcrl in (bad) adc dec adcl mov cmpsb rol aam inc cwtl mov xchg std inc mov loopne sahf xchg icebp int inc in pop test xor addr16 sbb cwtl xor iret jno scas insb push int3 mov jno repz popa pop test imul jp cltd stos aad cmpsl xor add test lret cmp sbb icebp inc ljmp repnz (bad) stc push dec dec adc inc inc push gs push mov and insl mov (bad) scas xor mov push xchg (bad) lock xchg imul add out lods jg jo sbb push out scas mov cmc mov test sub ret fisttp leave push jp fimul imul mov leave inc sbb mov mov out jl xor jecxz mov mov in mov mov xchg xor psubd xchg out or mov std add (bad) and mov es hlt pusha clc fstl xchg enter pushf mov jle ret into imul add aaa in pop xor jnp cli push dec sarb sub shll mov int3 (bad) xor adc test cmp (bad) dec repnz mov lret xchg or sub jnp neg fisub mov and sahf imul mov add inc mov mov dec dec jg bnd fstpt (bad) xor sbb mov sub mov xor mov gs sub mov aam mov nop (bad) dec cmp mov outsl mov xor (bad) add cmp lea jge push mov xchg cmp aaa (bad) cmp jmp ljmp push cld int or gs cmp enter in int cmp negl andb stos push test rcrl cmp cwtl mov inc ret popf (bad) cld dec in into fprem1 fiadd mov scas insb pop rorb jae push mov daa lea (bad) nop mov imul or push jo mov add mov hlt or add movsb mov adc stc ret (bad) cld adc lds jle pop lret cmp xor (bad) push lret push (bad) cmp push pop jg fdiv test mov cmc mov clc push (bad) fstl cmc push mov mov daa or dec jb pushf fidivr cmp sub (bad) push out xchg and fidiv or ret sbb popl subb pop add xor dec inc imul add jecxz dec add lret mov test pop pop jo test js inc dec cli xlat or int3 (bad) sub insl adc in pop pop push sub jp add jnp js pop popf bound jne jle popf (bad) dec push xlat (bad) mov add imul push scas cli fdivl pop pop ret es popa aas stos (bad) sarb out (bad) dec jge scas scas push (bad) jne cmp mov lods (bad) (bad) (bad) cmp andl pop roll mov and cmp lock xchg sti mov xchg clc mov dec push lea arpl loopne pusha mov jmp xor mov call xchg fisubr imul push ret or in cmpsl mov push jp mov cmp nop jp and fcmovnu push outsb (bad) (bad) dec jecxz mov mov and subl lahf out in inc xor xchg int3 pop hlt cmp hlt (bad) cltd push inc jno sbb clc add cli fistpl inc mov and pop dec iret subb cmc pop into test out cmp jmp pop pop movsl ljmp scas out mov clc jo jb adc xchg or lds lea jns pop pop test adc inc ficom rcll add icebp repz and loop js push dec and or push out adc cmpsl lods arpl mov out iret jns mov mov inc inc push add pop mov xchg aad and jl das pushf lahf push dec sahf std enter mov sub push je ja xor fcmovnu push jg dec lds sub cmp jl out and (bad) stos mov jp loopne bound cld scas sub hlt sbb sbbl inc jbe in out jmp mov into push cli out clc out test mov out dec es or cli jle pop icebp push stc inc jo jns mov dec das add sub sbb lods push fwait cmp dec lea jns and in sbb cmp add sub scas std scas (bad) lods clc repz sbb jmp lods mov pop leavew sbb repz xchg jns xor imul sbb add cli out and mov ficomp push inc pop add xchg inc pop push popa or mov jp push adc cmp xor push std adc lret fptan fistpll nop pop imul cmp sub lods dec add add pop out pop rcrb mov add (bad) lret push cmpsb fnstcw fistl push xor shld cmp push fistpl ret mov leave push and fbld mov jp push sti bound push mov lods and sub out mov inc fs push push mov adc popa xchg push fild in and scas dec push xchg mov add cli pop mov sub jbe jnp jae adc in aas mov push fwait jmp xorl add mov inc mov xor inc pop test push xchg rcr dec push in je or fdivs and addr16 xchg pushf aas dec outsb bound sbb lahf imul shr ljmp dec inc insb mov (bad) mov dec push rsqrtps mov inc mov pop scas jecxz push cmp popa popl lcall inc push insl pop jbe add push xchg in xchg fidivr in gs mov (bad) stos pop xchg mov adc mov (bad) cmp push sub fadd dec sub mov push sbb dec js and out push sbb xor add add mov push popf scas shll lcall lahf dec repz ret das dec out pop push ror call mov xor insl sahf push dec fist cmp rolb xchg mov push (bad) cmp sahf jmp insl and movsl scas repnz loopne jno jb push repnz mov fsts jae xchg mov mov xchg mov sbbl lods sahf iret xchg test cmp insl xchg lods sbb mov pop sub jnp push add push mov out loopne aad lods mov adc jp divl icebp imul inc push add sti stos push push dec rcll js jmp cmp xchg inc push mov mov sub cmp in outsb mov outsb push div jo mov add out (bad) daa int3 in dec int3 sub cmpsl lahf cmpsb dec call mov (bad) iret (bad) mov ljmp jle aam inc adc mov jbe push adc faddp or or rcll sub jne xchg inc fistl roll sbb mov cmc outsb imul add ljmp outsb adc cmpsl out xor movsb xchg xor outsb dec lret ljmp pop add push inc adc xchg fstps addr16 jmp mov sub test out inc pop xchg add mov adc inc out mov std jnp inc pop xor jle adc popl inc cmpsb and cwtl push jne mov iret jb test mov jg jo outsb inc stc clc jns jnp dec lods ret xor je mov xor inc jge cli sub in pop pop mov inc in fstl sahf add jb jle loope rcrl sbb popa add or nop jp xchg push jns pop mov xor ret dec lea out jg,pn into lods lahf jl and pop outsb (bad) dec nop adc in cmp xchg movsb mov popa inc das mov cmp sahf lea sbb mov leave push jecxz flds push repz mov test push (bad) lods orb popa push (bad) pop ret dec xchg cvtdq2ps mov icebp aam dec in lea fdivp in in mov ds sub sbb iret pop xlat test jne (bad) push test mov out fiadd mov int3 add mov add or mov inc cmp popf jg mov mov loope lds push push in sub xor jmp mov xor jae or mov js in and xor inc or and fsubr out mov insb addr16 push sbbb pop push loope das ret lret push repz jp mov adcl pop test movsb lret sub inc lcall jnp popf test loop popa mov dec pop push insb daa repz imul daa gs aas dec sub in fistl sahf loop ja es inc in fwait pop outsl movsb repnz push lahf sbb repz (bad) adc xlat xchg loope jnp mov in xchg bound lahf cmp jo insb push sbb fs mov fs dec pop xchg mov stos and cli sub cmc mov dec jo sarl xlat xchg push jg repz mov sbbb sbb push ror and fdivrl rol inc cmp adc fmuls (bad) lods js xor mov js pop push frstor push outsb xlat enter and or push jne (bad) adc rolb pop sbb nop aaa dec pop lret clc loope loopne inc inc mov xchg mov test push mov cld icebp mov push sarl xchg mov xorb inc mov sub lds es jns sbb les mov xor xor jno in mov sub fwait cmovs insb fcoml lret stc inc or imul mov or xchg popf mov insb cmp push (bad) stos mov repz inc or ror cs adc jns sbb shll shl mov xorl sub push popf incl in pushf fildll rcrl pop mov ds jnp push cltd hlt xchg cmpsl push pop inc pop loopne cmpsb and and xor insb fld aad pop push js into and in out mov cmpsb lea cmp lds mov mov aam add icebp adc add gs dec cmp mov movsl in rorl adc inc pop sub xor sub jl cmp sbb rolb das adc pop in imul adc push lret inc repz dec les rcrl dec loop,pn (bad) and push orb jae pop cmp sbb or ret data16 xor push xlat (bad) lock add xchg jp xchg (bad) imul mov divl outsl mov das mov mov adc cmpsl push sub mov imul je mov popf inc adc outsl dec xchg inc daa adc dec cwtl xor mov pop shll js sbb xchg xor test aaa cld jbe scas mov (bad) jae std int3 xchg in pop dec (bad) mov jge sbb pop mov in push mov aaa js fcmovne inc jbe push sub out mov mov or idiv movsl sbb dec pop loope pop push aaa mov inc shlb movsl imulb jle inc and push imul and pop sub enter xor fcompl sbb add pop xchg push popa adc repz adc out jns jns pop jnp dec inc sti sbb and cmpsb lods push movsb and inc cli hlt rcrl push mov xor xchg test insb movsb jp xchg mov sbb test sbb inc cmp pusha add sbb sub or mov xchg xlat lock push sti enter xor inc push jmp repz daa incl push gs xor fadds or fdivrl aas xchg das insl pop into rcrb push stos and sub xlat jae mov xchg inc sbb addr16 aad jecxz and insb xor push adc add inc xchg ljmp push imul pop imul ret ds dec mov rclb in push pop jo mov mov inc out cmc enter imul mov fmuls xor and (bad) sti sti das (bad) jb inc push pop into add xor mov (bad) xor add cltd and es nop cmp sti sbb je push mov fiadd lods jnp mov push lret jns scas sbb scas mov inc stc stos ret dec pop sub mov call add cld xor mov sti mov xchg rorb jg test xlat pop fistpl adc mov mov xchg popl fcomps lds scas imul jnp cltd and mov or pop inc push pop je xchg (bad) pushf mov mov add iret (bad) mov scas xor xchg je mov pushf push cmpsb and mov in je lahf pop jg mov add popf pop insb jmp cmc test jl pop jp pop sahf sub aad iret push mov aad add notl jmp sub sbb loop and jne call in mov mov ds dec imul in cmpsb xor push je mov dec pushf jge sbb scas cmc stc sub sub xchg (bad) jo mov dec xchg fs mov (bad) adc xor nop add imul test popa sahf mov aam in sbb adc rcll js stos and and inc (bad) das inc jge aad push (bad) int3 in dec push mov adc (bad) jno push push jnp iret lahf push pop add sub js push adc scas inc in dec jle inc cmpsl cld stos jp (bad) lahf dec jle ret cwtl aad aad mov jne pop mov cmp push jbe (bad) mov aam xchg sub mov mov adc push js jmp inc ds je (bad) ja or mov jne pop cmp in jg mov (bad) push mov loope adc es sub jle pop jecxz or mov push insb sbb mov mov outsl idivl jmp dec imul or (bad) and sbb aad lods call shr fdiv dec (bad) cmp fwait stc jbe test rorl out xlat (bad) int3 jmp jae dec mov ja mov inc xchg stos enter push aaa std sub push sbb daa (bad) popf stc add pop lahf push dec mov pop test hlt and cmp bound inc cmp leave jmp (bad) lahf push (bad) inc (bad) std push dec icebp adc inc mov xchg hlt ljmp pop ja push sub pop outsb sbb jecxz dec outsl fiadd cmp add inc dec ljmp jo jmp mov pop adc add inc jne movl add pop andl mov adc or inc insl cmp rclb (bad) imull sahf xchg scas dec in adc dec inc mov lret in insl sub jecxz adc mov pop pop bound lret pop and pop daa subb sahf add xadd bound enter scas sti and in inc mov fsub xor aad das fsubr xor mov orb xor and jmp popa jbe shrb adc add adc push cmp or fsubs mov sub inc push push dec pop mov or mov nop clc push add inc mov movsb scas cmp mov jl lods and xlat push (bad) int push rol sbb (bad) add movsl add test inc shl fsubl scas add xchg and inc arpl cmp pop fmull mov add jmp add sub jmp jno push adc pushf mov xchg test and popf fwait sub pcmpeqw inc xchg mov pop in jecxz mov (bad) (bad) push mov and mov pushf aad (bad) dec or pop and mov jl das cmp (bad) mov sub mov mul mov push adc into je vcvtsd2si mov mov add mov or adc jo movsl inc outsl imul inc mov fistpl mov ds sbb pop inc stos push arpl lret out nop mov in sbb jp jge imul nop jge sahf out cli xlat lcall jbe push adc mov pop push in imul pop push mov fnstcw pop fiadd (bad) inc (bad) hlt add cmp pop (bad) mov sbb xchg push stos sbb iret xor ret (bad) xchg mov andl pop jne adcl or bnd cmc xchg or rclb add and add sahf call inc pop test mov mov daa sahf aas js lock xor lret mov outsb outsb sub js xchg dec push or int3 or or (bad) scas addr16 jb in (bad) lods imul outsb cmc sub jnp or outsb sbb test fwait push dec sub notb mov mov cmp mov mov lods and decl icebp roll neg push mov dec pop icebp mov sub out push movl adc in (bad) into bound xchg lods js aas arpl aaa mov sbb mov (bad) movq popf pop xor xchg adc inc insb pop xor mov imul (bad) mov pusha cmp clc jno jbe js,pn xor xchg mov bound xchg adc out pop mov push in add xchg fnop into aas inc sti aas out inc insl imull cmp fwait out icebp ds aad cli mull and outsl rcrl ss and pusha add dec xor xor jge into cltd push xor in adc fdivrs and (bad) xchg sbb aaa push mov movsbl gs sti addl lods ljmp addr16 cmpsb rcl mov xchg sbb adc lock push xor stos add jl in pop insb out inc jl popf mov mov jno cmp xor mov mov add inc mov xchg cmp mov adc dec mov pop jge push mov cmp inc inc (bad) mov add out dec pop movd xchg push jge adc into es dec test data16 incb fwait and push enter (bad) cmpsl arpl push ficomp stos inc data16 out stos fnstsw nop dec out dec outsl in aaa nop outsb out jnp sbb pop fwait scas mov aam in fsub dec imul aad cmc cmc mov cmp and divb cmpsb mov mov add xor (bad) and adc xchg mov in xor cmp xchg lcall push imul (bad) adc imul pushf and and shlb adc shrl aaa mov jge mov cmpsb lcall aas cmp (bad) fsubr push lock mov cmp sbb cmp mov fildll mov jge push ret and repz dec or mov lds pop mov cmp push or or out sub cmp in in das cmp (bad) and icebp addr16 rorb lock cmp cltd ficomp mov xchg xchg xchg sarb inc fmuls cld add and push or aam test data16 mov mov sbb cmp add enter mov mov pop add push aaa cmp test (bad) aas add and scas add int pop cmp movsb jge aaa xlat arpl add leave jo push mov insl xchg mov std mov mul movl xor lret cmp cmp jge fnstenv add and adc add and cld out sub sbb push mov mov ds cmp scas cltd sub mov cmp movups std xchg and add sub mov jge lods xchg rolb fldenv pushf fwait sub add insb fistl ja xor movsl cmp gs mov leave mov push push movsb fdiv push daa int stos sarb mov add hlt (bad) aam js jmp cmpsl xchg stc jb mov or dec and lret daa lcall and jge loop xor cmpsl dec int dec into or cmp stc out repz ss cmc nop stos subl daa les (bad) popf iret repnz into cwtl dec jmp es xor xchg inc sub jae mov int in lock jns and mov xchg cmpsl ficom xor vpshufd jmp mov (bad) xor nop in mov scas sbb lahf test sbb cmp lcall pusha mov mov shrb adc jae cwtl inc cmp jle in lods rcll cwtl mov (bad) scas jp dec out pop mov xlat negb sub cmp int3 (bad) repnz mov mov pop mov pop sbb xchg or pop xchg aad ss mov fiadd mov popa mov mov popf mov push out xchg xchg adc (bad) (bad) mov mov add sub lea add sub movsl add xor inc jmp push inc cmp std rorb and out lods ds xor push lret (bad) int pop cmp in jp neg dec or sbb rcr out jl stos mov xor popf mov insb ss fwait arpl fwait movsl mov lret lcall cmc sbb add and jp jo or loopne mov inc iret adc mov jo sbb dec leave mov out test call nop add das mov cmp push test outsb jp push xchg outsb int cmpl fdivrs fldenv add leave adc rclb xchg ljmp sbb das lcall jae mov add pop push xor test imul movsl mov jnp clc mov inc out or fmuls inc mov pop lahf pop in push and and jns adc xchg add inc xchg mov sub or mov xchg push popf shll jne mov stos xchg scas xor insb cmp cmp jmp (bad) mov sahf cltd cmp and movsb mov sahf pusha pusha gs (bad) jp cli jae fisubl push (bad) out test or lcall wbinvd mov call (bad) aad or icebp jns pop pop arpl cmc popa popa inc stc jl mov lcall jmp xchg jb pop in push sbb jg or pop adcb pushf scas and push push jbe int3 insb hlt rclb ljmp (bad) and mov sbb push dec mov jne fidivr jmp push xchg scas and aas (bad) (bad) dec fildl nop popf pop test cmpsb ficom lock test popa fldl rolb ret imul sbb sub cs xor scas test xor xchg xchg lock push insb inc ljmp imul fdivrl aas mov aad cmp sbb (bad) mov or ljmp (bad) into and add jecxz lahf inc sahf out stos je lods movsb (bad) cld push frstor mov (bad) aad ss pop enter ret jmp mov lods mov lock sbb scas jb mov vpsubusb inc dec mov bound inc dec (bad) mov or jl push pop cltd or mov stc lods mov push (bad) mov add fadds pop mov (bad) fld mov jnp in (bad) sbb lods das pop add testl test add adc jns in xchg fsts mov ds mov popa ja adc outsb sbb clc xchg push call es xor xchg cwtl push sub es push pop cs lods test push decl lahf inc loop xlat int3 lret lds mov xlat or loopne sub mov test inc mov cs fcmovne pop pop lret jns xlat cmp push add test clc ffree add out int push cli hlt cmp mov insl sub adc jnp adc leave or les cmp sbb addl mov jp fdivl push sub jns cltd dec ret xor pop shll sbbl negl divl ficomp inc jne cmp fwait adc popa mov xchg in sub xchg dec cmp cmp outsl (bad) cltd xchg je jp sub dec cmp jl (bad) sbb xchg jl (bad) sub cmp jmp pop jns sub (bad) cli and popa movl xchg jecxz ds test lods push inc pop push cmp notl sbb lods pop imulb mov mov test inc jns dec dec cmp push loopne fmul push nop sbb mov int3 or loop pop push pusha rorl mov sbb ljmp add stos daa push add mov xchg pop mov xchg cmp nop inc (bad) mov jl insl dec (bad) push or push xor ljmp out dec mov mov mov dec call mov mov insl jge xchg sahf mov (bad) arpl stos loop dec push mov xchg out popf scas test jns iret mov cmp xchg cwtl cmpsb cmp loop (bad) out iret pop cmc fs ret insl addl rcrb insl int gs sar sarl test aad xchg ds inc sbb movsb cli in arpl (bad) rcl inc mov jno cmp dec mov jmp xchg loopne aam shrb sub add push dec stc mov jnp lock mov inc into jbe mov outsb xchg ja add sbb ficoml mov arpl nop pop lds fwait push pop adc or pop jg loop jno sub xor sbb pop pop xor rcll mov lea push add push aas inc les jb dec cmc bound aaa xchg inc and fsubr sbb movsl mov ljmp into cmp aad adc cmp and out push mov leave nop adc or cmc mov pop pushl icebp or push push xor add fwait dec xor fs push adc dec xorl (bad) les inc jns inc rcrl orl pop cmp shrb (bad) pop push lea sarb xor fs loop cmp rclb popf sbb fnstsw scas push or push lds stos (bad) imul or out cmovns push push in push negb repz xlat notb and int3 outsb push aaa enter add cmp dec mov sbb repz and arpl add pop push pop dec adc or sbb or xchg dec fild pop and sub (bad) cmp cmpsb cmp andb iret add dec out or inc sub pop and (bad) lods int3 mov jg adc jp mov in daa push lock pop push movl pop inc mov movl xchg jle pop inc fistpll sub mov push data16 (bad) dec mov mov test dec mulb cmp arpl pop sbb push mov fwait cmpsl xchg xor icebp xchg sub pop mov data16 sbb sub je dec (bad) sub pusha mov sbb mov jl fcmove gs push mov mov sub test cmpl or ja dec dec jnp call out mov data16 popf cmp fs and jmp xor jo xchg clc or push imul pop cmp dec mov int3 outsb (bad) pop dec inc mov adc xor shl jbe jle adc pushf jmp adc icebp mov xchg add mov push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret adc push mov fdivr lea jmp lea jmp inc push ret sbb and sub or gs fnsave (bad) sbb mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp adc mov daa fdivr enter inc repz lods and or aam sbb mov scas popa xchg sub sbb push pusha (bad) xor (bad) aaa mov (bad) pop (bad) jbe bound jae adcl dec loope (bad) xchg mov nop sbb xor inc pop (bad) imul loope mov test xor notl sbb add (bad) std loop sub mov dec (bad) jae adc xor lcall add and push fisttpll cmp pop fidiv jnp jl imul loop jmp mov push add xor lock jp cli sbb mov pop dec ds lret push int pop repnz mov mov push sbb inc cmp data16 inc adc push nop push mov push test leave int3 mov fnstenv cmp dec add sub mov popf mov cmpsw jp push fldenv mov push loop sar dec dec (bad) mov cmp adc ret adc adc cmpl int3 adc cmpsw inc xor mov pop adc divl jne push push data16 cmp scas icebp mov jp dec icebp lods pop arpl xchg jp daa (bad) sbb int movsl mov mov mov xor out iret or xchg cli test aam sbb and xor add or cmp aas fs pop pop aaa test test pop and test popf fs mov ss (bad) or dec xchg jp sub jg loop and xchg or cmp pop xchg xor (bad) xor lods push arpl test inc adc pushf cld (bad) sub ljmp jnp in into stc inc sbb push add movsb dec and js clc mov cli adc out gs xor call xchg out mov add idivl push into lahf (bad) sub jmp push lods fstpt ja movb jo jg push dec orl aam push aas xchg (bad) add icebp clc pop ret sarl or cmp push rorl (bad) jnp es adc pop pop mov xor mov mov jg popa pop mov out mov scas dec jne xchg cs movsb stos cs imul sub push out mov cmpsb fldl cmpsb push adc dec cltd cmp or lret and (bad) jae jo push mov insl pop jl lea push sbb xor aaa les add ret dec pop orl stos pop outsl es fs inc jno xchg je push (bad) mov (bad) cmc sub inc sbb sbb push add (bad) je xchg sti jp insb sbb cwtl jae inc pop hlt and leave (bad) push std mov sub add xchg dec popa xor (bad) push fidivrl jno fistpl push mov orl inc sbb mov aas (bad) repnz lods pushf xor xchg or test pop mov xchg mov adc daa push fisubl or xlat pop ss mov lahf dec mov lret jb (bad) mov (bad) xor aam into je mov add mov sti jl xchg loopne jp je push out ds cmp xor aaa sbb test inc mov cmp sub call shrb sbb hlt lret mov (bad) shlb or negl xchg iret loop icebp test jb stc int nop fisubrl dec push (bad) lret dec xorb cmpsl push adc loop rcr stos jg mov imull inc mov div jae in das or jo xchg pop dec or test jns sarb arpl pop xchg push mov pusha pop inc cmp sarl cs push dec rorb add jo aad xchg xchg sbb or jnp jmp lods push and jge scas dec xor data16 mov push mov sbb dec xor mov outsb sub lret ds add dec sbb inc push outsb addb adc xchg ljmp adc fisubr movsl and and data16 cltd mov mov popa aam dec aad cmpsb dec cli lahf xchg mov cli imul and mov gs js and fidivr jp dec in xchg lcall and or bound sarl mov cltd adc xchg mov push (bad) iret fnstsw outsl in mov insl sbb cmp (bad) (bad) sub repnz sbb xlat inc inc sbb or shll cmpsb and or xor nop mov rcrl sub or dec fsubr fsubrs decl add or dec faddl cmc stc ljmp mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov pusha ret cs les aam ret xchg fs xor jmp cltd fwait pop aad stc imul mov fdivrs inc pop cmp dec or insl (bad) cli sarl call xchg std dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc push mov jo or push out sub fdecstp popf sbbb decl cltd out imul dec sahf push sbb mov test mov jbe (bad) in sbb push push xor shrb inc pop addr16 (bad) ds sub jno rcr inc pusha cmpl fadds xor imul add sub bound xor clc js neg in lahf dec je cwtl dec jno ss (bad) push mov stc xchg jg or jp je jg jno rcrl enter outsb cmp add lds movsb std jge add fcmovbe loope or push sub loope outsw mov bound ficoml enter nop mov (bad) rorb test xor daa (bad) or pop push cmp jmp mov mov and jecxz mov push cmpsb setae lret outsl mov mov add sbb fsubrs lods lods cwtl mov dec aas dec loope icebp (bad) mov mov fsubl sbb jg iret pop add fsubrl mov cmp insb mov or shll sbb push add add mov stc mov mov add adc adc arpl rorl dec cmp cmp arpl cmpsl sarb sti test mov or adc pop or xor ret cmp push push fdivp (bad) iret or and cmp xor mov hlt aam inc pop jl and lods fstpt add sbb jp inc sbb and push imul jnp inc xchg sub fidiv rcl aas test pop xchg adc pushf das mov xor mov mov xchg ljmp push pop sbb out loop add test sub push sbb adcl clc adc or add xchg push loope ret orl jecxz stos cmp cmp shr gs xor andl and into xchg and sub jle jno pop sbb shr xor mov pop xchg sbb mov mov (bad) outsb lds movsb fildl mov out clc pop xchg loop cli leave or adc cmp xor cmp adc insl aad into frstor lret js iret addl mov mov mov scas sbb adc and jno les int fistl push pusha dec or sub icebp popa jl jle dec loope icebp sbb pop dec inc xorb loop inc xchg sahf lods insb pop mov leave sbb arpl aaa cltd jns sbb pop sti call lea into fs inc shll mov (bad) cmc sub mov add sub in mov daa mov xchg repnz ret dec (bad) clc enter addr16 xchg jmp sarl popa addr16 pop insl mov push fidivrl jno (bad) sub jae sbb sarb push xchg jp aad mov inc fiadd sbb xchg sbb jge push fisubl fstps loopne dec fwait outsb lods mov orb ficoml addr16 jle sbb sbb das js jl jl mov loopne adc sub or mov xor jo cmp and dec (bad) and xchg dec jp (bad) or or sbb lds mov mov (bad) ja xchg leave lret stc or and hlt dec pop es xchg jge outsl mov or pushf fstl add jbe iret nop jae push sub call xor sahf push sbb cmpsb movsl mov inc and or iret jae clc push adc je mov data16 or xor or xchg mov sub sub mov xchg jle sbb stc into fsts xor in jg dec cmpsl jl call out stos in std mov cld xor pop adcb pop jb insb xchg (bad) int mov adc pop outsb mov dec xchg adc lods stc push fldcw push sbb ret mov and lods cli push dec jne adc xlat add mov push adc and mov incb dec push mov xor jmp push push mov jl adc add inc adc mov adc aaa add imul mov loop lods pusha pop scas bound div jmp push adc xchg and idivb stos mov fwait adc mov fnstsw outsl in mov insl sbb cmp fdivr (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp inc push (bad) cmp and movsl das lds dec lock jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 inc push mov and jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov pusha ret (bad) push les aam ret lea jmp lea jmp lea jmp lea jmp lea jmp inc push scas push pop dec xlat and ss (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 adc cwtl adc sbb mov fdivr enter cwtl imul les je dec cwtl jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc push rclb dec xlat and xor hlt lods adc movsl mov dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp inc push (bad) push sbb aam lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp inc push out push leave out aam stos mov ret cmc pop mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 inc push mov and add pop mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 inc push (bad) enter jo push rclb mov jmp int3 int3 int3 int3 int3 lea jmp lea jmp adc test sbb mov fdivr enter xor mov dec in nop cmp decl fdivr decl fdivr incl push shr and jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret inc push (bad) push push dec aam xlat cmp call add mov fnsave (bad) sbb lret or xor std incl adc fs incl (bad) imull std dec int3 int3 int3 int3 int3 int3 int3 mov pusha ret cs les aam ret mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp adc adc sbb mov fdivr enter fs mov fnstsw jmp int3 int3 int3 int3 int3 int3 adc loopne sbb mov fdivr enter cli lods adc cmc test dec int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp inc push adc dec aam stos mov ret clc pop mov jmp int3 int3 int3 push mov push call add ret adc popa lods sbb (bad) data16 incl add movsb std lods adc jno std incl push xchg inc xlat and jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp inc push (bad) enter jo mov rorb (bad) int3 dec xchg divl jnp add mov mov addb inc outsb add xchg xorl ja in shlb cmc lcall mov ret pop stos arpl jo mov (bad) mov push jecxz ret dec xorl (bad) mov and lret add or mov test xor push and sti push push jecxz sti push or mov mov ds xor mov dec add popf dec jle jne sbb outsl mov add subl jbe popf pop cltd das xor jmp xchg js adc scas adc push dec mov dec (bad) mov inc sahf mov mov in and add mov (bad) jae sub xor adc hlt push xchg push cmp and and add pop stos inc rcll adc adc mov cwtl sti pop and pop cmpsb inc push int out fsubrs lods mov inc cmp jb xor stos add imul bswap lret xchg scas iret push cmp mov mov mov inc sbb cmp pop mov outsb das or dec inc push das pusha ret mov mov jmp sbb adc adc push jmp xorl sub mov xchg or mov dec sarl sub or xor ret cmp push xor cld sub insb pop vpmacssww or test ret and adcl daa mov jns popa rolb inc (bad) mov xor iret sbb mov add lods push sbbl dec addr16 stos fadd fldenv (bad) pop inc pushf mov sbb fsubl inc sbb fldl mov test and xchg pushf mov push outsl sti mov dec int dec sbb stos add stos or mov xchg inc int3 xchg lods and cmpsb inc mov fwait mov sbb hlt inc mov mulb or mov dec mov std push lcall out inc fiaddl adcl adcl xchg rorb mov dec mov mov pop or (bad) pop (bad) lcall add pop mov lahf and adc leave test lods jae lock sbb cmpsl xchg aam cwtl xlat adc push enter insl jecxz pop sub fidivl and dec lds stos je fadds xchg xchg movsb add dec mov mov cmp in (bad) popa xchg enter loop xchg fnstcw (bad) jbe ljmp faddl pusha loope add shrb mov bswap test fcompl inc arpl lret les or push dec add jnp mov (bad) scas lds inc ficompl fwait mov adc jp sahf out pop xchg fsubrl mov jmp movsb int cmpl test mov pop sbb add cmp mov roll cs inc psubw fs mov dec negl jne lahf pop adc jl pop and aad fsts adc inc dec lcall sub dec int cmp ds enter hlt sub ret mov adcl xor cmc xor pushf sub fldl xor push mov je cmp mov outsl es xchg sbb les and and int3 std sbb mov mov sahf pop mov icebp shlb jge dec sbb das inc jp iret loop cmc test dec xchg fisubrl jge jbe out fnstcw sbb jg add shlb test flds dec rorb insl (bad) repnz or popf jae in sbb sbb in xor mov mov add push add adc jnp in push inc repz insl fmuls jne je cmp mov pushf outsl pop movsb int3 sub mov divl dec push cmc mov sub push mov nop mov cmp bound aaa scas push test xchg mov fnstcw mov pop mov lods cli jl movb jl dec lret out lods xor stc mov adc fistl push and inc in sub imull jecxz jb movsb inc bound aaa mov movsl add in pop adcl cmp pop or ss in xchg loopne cmp push add cmc or dec inc ds adc in js stos mov fwait adc mov (bad) loopne in mov insl sbb cmp int3 shrl pop inc imul and dec aaa into mov cld das (bad) pop ljmp mov adc shr xchg (bad) pavgb stc rcrb (bad) int3 dec fdivrp xor pop sub add in scas dec cmc xchg ret dec popa push stc xchg imul push mov (bad) clc mov pop ret mov inc add pushf ret mov fldenv mov rorl movsb lret and subb cs pop int3 imul ss xor movsl mov xor push pop movsl loopne xor xchg fsubrl scas insb test cmp out xchg jecxz cmp sub inc aaa adc lds mov icebp iret push add aaa jmp dec or mov push inc insb leave popa cli jl (bad) or mov sub cmp test inc xchg mov (bad) fs test sub cltd add jl and in inc pop test fcoml (bad) fs xor cmpsl mov jno out scas and loop ja rclb pop lahf sbb lds mov sbb mov lcall sbbb or mov adc jae cld and sbb sub int (bad) pop mov add lret adc subl test xor (bad) nop popf sub cmp mov inc in mov lret test xchg jle jb jb sub push rorl bound cmp jb shrl sub pushf dec inc dec int adc dec cmp adc clc inc xor ljmp cld xor cwtl movl and leave nop (bad) mov aas (bad) sbb xor lds push (bad) sub aad mov daa sbb pusha and dec scas or adcl in mov aas push daa inc in mov jne pusha mov cmp or in push sbb test cmp cmpsb das pop daa sbb daa xchg mov add fsubr dec dec sti jp push sbb stos cmpsl jg xchg lret mov std mov test cli cli jb test ret stos fsubp push mov pop mov scas xchg inc mov sub repz mov jnp les repz aas xchg sbb pushf and (bad) jp xchg pop cwtl xchg add clc cmpsl loop cltd or jl enter aad xchg sbb mov ja jl lds jmp jle jl xor push cmp xchg add add add cmpl xchg jp push push sti sbb nop rolb cmp stos mov fcompl lock movsb aam mov push cmp imul dec cmpsb dec sub lock and loop cmp inc cmp mov pop orl adc adc imul cmp scas push std (bad) jo mov jmp je cmp fwait mov xchg pop push add jae in jle add cmpsb jbe hlt cmp aaa and mov es or mov push xchg sub mov adc push bound nop sbb xor fiaddl lods push popf sub sbb jb jp mov aaa mov leave rcrb sub cmp fwait sahf cmpsl cli add (bad) xor cs icebp xchg js adc cltd lods arpl ficomp add imul jl int mov mov cmp mov scas dec cmp mov out insl push sub dec or arpl leave or mov pop adc int3 jle mov es dec push data16 insl je idiv jl or cmp test loopne xchg and js out (bad) or adc movsl and ds rcrb (bad) jg cmp imul or insl lods mov ss int3 mov stc clc fs dec das ficompl mov ds sarl push setle lds mov mov add dec adc sub and (bad) repz cli sbb jb fstpt mov cld fcmovne pop and jmp inc (bad) testl add pop pop push aad push jle push jae sahf pushf sbb xlat leave std mov and and das pop dec sub mov fstpl outsb hlt shl dec imul (bad) in sahf sti loopne xor adc rcl imulb push loopne sub and xlat cwtl cmp dec test xchg jbe mov mov and and xlat dec sbb mov mov push add add popl iret mov out dec fcomps sbb lock cmc jno cmp or insl movsb dec repnz dec cli pop test sbb push push sub gs hlt mov outsb pop cltd xchg test loopne aad fistpll ds ret push jge sbb or pop mov push insb int iret loop jmp mov pop pop sub leave push sti cli fwait jle mov xor add hlt dec xchg sbb loopne sahf mov (bad) insb push int es or movsb and fnsave inc js sub (bad) sbb mov pop stos pop jae jbe test push cld rorb adc dec and cmpsl push lahf jns les lea xchg test loop dec iret add rorl (bad) into jge popf inc ja push ja scas (bad) leave sub add push dec je andl xor mov sbb fcmovu xchg inc rorl jg aas xor mov ss jge notb fwait inc push push mov cmp sbb daa into out sahf rorb test ds fldt es test cld mov mov fsubs addl in jb in addr16 clc xchg mov add not test fwait int3 mov mov jns xor insb movsb movsb adc (bad) ds mov data16 and mov or sub pop mov sub mov cmpsl xor dec mov popf or bound xor rclb loopne (bad) test mov out stc sub adc push cmp incl aaa mov cwtl int3 out pop ss push jno push xor jge mov mov es mov test imul lret add jecxz sbb mov stos mov xor adc (bad) out adc mov xchg jae jae movsb jbe (bad) add in push xor mov stos lods fldcw arpl insl sub fwait inc inc ret pop ret cmpsb outsl dec popa in es mov inc xchg pop push outsb pop ja in inc mov mov inc movsl mov stos sbb inc xor lock roll sbb pop adc (bad) push outsl aam mov dec adc xchg mov add shrb leave push mov in es cwtl or (bad) pop lock adc lahf jne push ja mov cltd and sub sarl push mov jno xor jecxz dec lahf subb and push es fcomip push mov mov jb ret pop and call cwtl dec fs lcall cwtl mov jo mov jmp mov cmp pop scas push dec repz pop and and rcl cmc (bad) jbe jle mov xchg cwtl sbbl inc lahf mov or adc mov imul mov fisubl or cmp leave repnz sbb daa adc pusha mov call fwait xchg push inc mov or sti int pop incl add mov rolb icebp (bad) mov xor lds pop sub mov push xchg aad push test pop add out lods inc aam (bad) push add aas nop imul and in fs ds cld mov lret lods cmp fsubl mov xchg out xor in sub and push add and fs sti pop std push mov or pop ss adc sbb push cld arpl mov sub data16 push mov in loopne push or mov (bad) lock icebp mov (bad) xchg mov icebp fidiv or data16 into repz xchg mov jae je loope mov hlt fist adc xor pop add pop arpl dec mov test loop cli push jle jbe stc icebp push inc xor cmp scas loope (bad) lret outsl insl sti das dec outsb rcrl mov fimull loope repz add (bad) jl pop js sub sbb outsl mov int3 or sarb and lods test fldenv or sar mov aam cltd or push lret jns mov imul arpl xchg in call pop out inc cmp inc aam jne arpl inc div xchg xor push std jae mov and lds or or mov (bad) mov sub movsl add dec or sbb ret imul movl out aas aas aad mov in and jp iret sbb push jge test addl ret fucomp test incl fisttp icebp (bad) sbb fstl cmp ja cli xchg fucomi inc mov movsb mov dec mov outsb fucom pop rorb inc lods scas iret add into xor cmpsl push fmull test push inc sbb rcll movsl mov ret or orl mov sbb fwait adc decb insl mov jnp sub add js into scas std sar ljmp std cmpsl mov insb xchg cs (bad) nop xchg ret outsb (bad) mov xor pop hlt xchg leave icebp test rclb imul pop insl enter jo dec xchg iret mov sub pop popf and int xor adc andl out fmuls add out cmp mov xchg jg dec adc (bad) mov stc inc (bad) int cs dec inc sub jo mov pop mov (bad) inc sbb sti in call cli inc dec test push bound push in loop into mov xchg xchg xor mov into xchg cmp add cmc scas push out push or mov or outsl xor adc add test std push enter mov sbb daa xor ss pusha xlat sub add sahf (bad) push and pop sbb rolb cmp and mov (bad) sbb je dec xor sbb shrb mov aam aas pop or xchg repz push mov mov sbb (bad) mov mov call sbb out mov movsl sub fmull mov js dec or add jg mov cmpsb cmpsl cwtl push mov mov sbb cli (bad) cli ret jge mov or cmp imul mov loopne addr16 jecxz aaa int jae xchg lea jmp inc sbb out imul cwtl add xchg idiv xchg test lea jmp mov lea mov xor call mov jmp inc sbb out imul cwtl add test idivl push and lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp psrlq inc push push mov cltd and lea sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov and jb rcrl bt push and dec es jne gs jmp xchg jne js int or popf (bad) xor shll hlt lcall sbb jle (bad) aad push stos pop cmp mov fistpll jne bswap inc xlat stos fisttp pusha insl xor cmp sub jmp fstpt jl push xor xor cltd call pop sub and sub loop leave mov push lea mov mov fiadd jo cmp dec push add scas fisub dec adc add mov cmpsl jns inc stos cmpsb mov xchg in adc jmp pop mov sub in sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 mov cmp jne jb rcrl inc adc xchg mov fucom out aas fstps cli cli xchg imul cli xchg rorb leave push jno addr16 pop cli mov sub mov ficoml test pop sti inc imul fldenv jno stos aas xor cmp mov jmp out mov cmp ret jle arpl mov add push cmpl xor adc (bad) imul xor lds xchg pop inc in shrb push lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp adc jno sbb fild movaps or test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cwtl xchg add in lock sub push jns mov or mov or jp lods pop pop pop ffree inc push in xor (bad) mov or sbb gs fadds iret stos cmpsw arpl loopne dec hlt stos lret or cltd xlat mov pop jae,pt cmpsl xor sub enter mov lret mov xor ja dec jbe pop inc sbb xorl rcr mov or movsl std push pop mov xlat loopne cmpsb mov nop test lods push inc jp ret jge sbb leave cmpsb outsb repz imul mov and add test or sbbl aam stos mov adc dec insl (bad) adc jns fisubl leave orb ja popa pop push in movsb mov repz cmp pop lahf cli aam mov jbe inc and and aad sbb sbb mov dec shrl stc loopne add icebp inc ljmp push xchg push and mov popf stos and rolb ja mov and (bad) aam pop inc adc std and pushf (bad) repnz cmpsl jp int arpl add push xchg dec subl fs mov (bad) cmpsb (bad) stc push fmul (bad) out mov adc out pop lods int3 xchg cli addl andb xchg inc repz (bad) dec jmp (bad) and out jbe sbb aas inc push xchg push mov sbb pop xchg xor xchg cld mov mov sub or dec rorb sbb push xor inc add insl hlt sti dec ljmp xchg js pop (bad) repnz rorl dec daa fiadd or or insb pop cmp ljmp cmp xor mov mov jg inc jle sahf sbb xchg and sub mov mov insb stos sub popa or inc icebp inc fisttpl dec (bad) mov lahf (bad) xor xlat adc sbb test cmp mov sub arpl xor sti scas xor popa in jle jb mov mov mov mov jl sub xchg jno imul and das clc mov xor stc jmp mov int fistl (bad) int fimull adc jge push pop cli or leave push hlt xchg and mov xchg jae loopne insl sub sbb ret dec lcall in sti fidivr pop (bad) inc cwtl out lds cs clc push gs cmp xchg pop cmc jno (bad) xor flds ficoml fwait mov jmp popf popf pop xchg push fwait xchg lahf notb dec mov cmp cmp out in xor or xor movsl shl ficompl sub fldt adc inc cmp push hlt test mov sbb sub cmp js rorb je jbe (bad) mov inc sub sbb outsl adc aaa stc lock (bad) iret xor lahf (bad) xor les out cmp mov subl mov mov add dec in adc into std lahf or pusha push in lock cld cld (bad) sti cmp js iret out adc push jg cmc (bad) in fistpll stc adc or shl dec dec int3 dec jo push xor xchg dec test inc shrl (bad) repz xchg enter mov js xor stc add into nop jns adc test or xchg outsb mov movsl clc cmp imulb xchg push jne,pt (bad) js push insb mov ja test or adc mov scas rorl mov push mov imul das frstor repnz (bad) lock (bad) mov inc cmp in loopne mov sbb or jge mov pop jp sub (bad) mov xchg or mov jl xchg add dec les aaa cmp or popa ja cli lock out push xchg inc pop sub (bad) xor pop divl daa xchg mov insl mov cmpsl xor inc fcmovne rol mov gs jle inc jle or xor xchg ret mov (bad) and lods sbb call lahf icebp stos in mov call inc xor mov push or shlb adc mov jecxz jmp test loopne stos sahf aas adc jbe sub pop das mov cwtl sub daa pop push je in jg (bad) rcl lret repnz test mov (bad) repnz jns dec int3 test dec add pop adc mov lea xchg or sbb xor imulb and pop pop out jae enter push pop imul and (bad) dec mov and fadds sahf cmp sbb xchg into and pop and cltd insl inc inc lock push push cmp add out test lods mov sti inc cmp outsb rorl push push sub add xchg xor mov xor es mov (bad) mov mov out pop pop cmp shll inc jbe dec inc imul or inc adc push das bound (bad) jns sbb mov rcll fnop movb stc xchg stc dec xchg roll dec test inc scas out ficoml popa xor into cld mov dec repz push ljmp xorl fdivrl cld xchg cwtl aaa lods movsl push loop jg or inc cmp pop in xlat aas mov pop or mov xchg adc imull pop jp inc in ja pop mov loop pop rcll xchg push fnsave pop jno in sub les pop add sahf aam sarb sti add pop xor jne sbbl sbb es in xor adc pusha daa testl movsb xchg mov add leave or or mov (bad) xchg std inc (bad) sti mov sbb fwait jno sub insl pop scas shrl pop inc mov aas icebp in cmp or test rcll inc adc idivl dec adc cmpsb jo pop fistp mov int3 orl xor sub lret and ja jne mov and pop and cmp mov mov dec and pop and push pop cmc insl xlat lods adc adc push fstp enter fldenv mov cmp in push sbb imul test pop xchg push push (bad) nop mov (bad) mul lahf sub cwtl popa xor dec xor push scas xor (bad) sti or jns cmp mov lock mov pushl ds jecxz or jmp (bad) mov (bad) mov inc sub leave jae loopne fadds mov outsb in mov sub hlt inc mov jge mov lods mov es jl xor jl mov xchg pop mov inc jbe,pt and mov aas ret mov mov or (bad) and xorb add jns fidivr xlat and out js repnz inc pop cmc mov add mov or lods mov adc sar adc or mov imul mov inc pop shr dec xchg or cmp insb sub jbe jg add lret add clc push pop (bad) int3 loopne out inc push push jno (bad) mov add dec gs lret jae sbb js jns and enter out outsl inc mov inc es pop cmp stos pop adc dec jb mov mov into push cmpsb repz ljmp imul test or jo in into sbb mov inc adc dec jmp jns fwait mov rcl or cmp adc aam inc aad dec and arpl lock pop mov jg test frstor js add insb or jp ficom loopne pop (bad) lcall test xor movsl cmp jnp adc push adc mov mov or mov jp mov add enter test mov (bad) adc pop sbb insb arpl fisttpl clc lahf dec dec mov unpckhps shrb ror mov jnp (bad) sti pop jns sub mov adc mov mov mov and cwtl inc fisubrl and dec aam pop adc or (bad) push (bad) mov ret mov lods sub inc ret aam fldenv aas sub push arpl jb sub jg xchg mov pop lds sub (bad) adc push mov insb cmp sub fistpll pusha lcall mov jmp push push adc aam xchg outsl adc mov sbb add mov inc lret arpl jl dec std (bad) xor dec (bad) lock test or and loope mov stc arpl pop es addr16 mov and into push mov insb push push jle sub fiaddl jle mov add je mov test pop sbb add lds lahf test inc test (bad) jle and mov cli xchg cmp daa sbb repnz insl jo add out dec pop inc in scas (bad) mov sub sbb adc test rcrl fstp dec ja pop iret (bad) jge movl fs inc rolb jno imulb cmp cwtl or pop movsb and jle adc push inc add leave inc jns popa mov sbb pop loope insl mov enter adc cmp scas test (bad) adc or mov mov lods sub gs outsl inc mov cmp push or pop pop add (bad) jb arpl ja sub fcmovbe dec sbb aam lock fs inc bswap hlt sarl stos cmpsb aaa push adc adc pop (bad) aas ljmp leave fdivl inc dec sti sbb (bad) leave pop mov xchg or out adc imul pop pop or mov xor rcr (bad) pop sbb ds sbb push mov insb cmpsl js pop jg pop push addr16 fild xor dec push loopne fsubl xchg shr clc outsl inc int xor and push jbe iret dec sub push imul es cmp pop mov push jae inc push loop aas mov (bad) push in out sahf mov cmp out ja enter mov push inc add nop mov and rol inc pushf xor sarl dec jle and mov or scas test adc out adc push cmp and adc sbb lret xor sbb enter adc lods stos aad adc add add aas dec mov inc test movl xchg (bad) jl fcomi cmp pop or loope jp (bad) es fadds mov fmull gs fnstsw inc jl jle pusha lock sahf cmc add std roll push (bad) lds xorl fadds (bad) mov loop dec sub imul imul xchg push (bad) insb les lret (bad) loopne mov arpl test inc mov stc adc and addr16 out dec xchg cli or into shrb ds lahf inc lds fbld nop movsl rcrb adc inc jbe rorb inc rol stos mov test mov push pop pop mov mov (bad) push push inc pushf xchg (bad) stc mov loope inc icebp jmp jae in mov fidiv mov cmp test inc pushf sub push daa mov adc clc xchg push sub push push mov pop add ficoml mov jo (bad) mov push ret loopne pop adc mov xor add add pop sbb adc fmull aaa arpl adc aas jo sahf into mov push les sbb push js fucomp push xor jl lods add out jae fcmovnb outsl dec shrl stos arpl sbb jae test push dec xchg dec or inc roll (bad) repz pop lock sub sbb cmp dec nopl leave mov sbb cmp and icebp jle leave sub (bad) es mov mov dec sbb inc jno sub add enter loop pop lods push hlt push andl push dec aaa bound inc xchg out test push repnz adc outsl add mov idivb (bad) mov push (bad) (bad) xor cmp cmp sbb shrb mov arpl or adc roll test dec push aaa rol clc bound sub jae pop xchg pop rep lahf loopne lods cmp mov faddl test (bad) jp add js les and scas loope jp cld xor sarl enter mov pusha (bad) xor (bad) aam dec repnz dec push (bad) addl mov sub cmp lods fcmovnb insb sub es gs and rolb outsl dec inc sub std clc in mov push dec and xor cltd out mov arpl shll xorl jb mov arpl xor mov repnz cwtl in dec std lcall shrb mov les pop or inc cmp imul fnstcw dec adc movsl add pop xor cwtl ds cli push mov mov sub lods jae xlat imull cmp fsub mov lods rorl out fsubl sbb inc sbb pop psadbw (bad) dec mov pop enter mov cwtl push cmpsl je imul pop or aas xchg pop adc push and mov std xchg leave (bad) bound mov or inc loopne fs jmp or lret push daa push adc idivb (bad) jecxz fisubl push aaa in sarl out jae or out nop (bad) loopne insl hlt or dec add dec stc mov xchg mov dec fwait xlat dec test mov add loop pop xchg cltd xchg incl repz mov imul mov lds xor dec stc lods stc add cs stc jno push cs jge mov les cmp cmpsl jb mov fild xlat or jae in push sbbl rorb enter xchg xchg pop pusha pop sbb xchg ficomp xor lods mov push mov fildll xchg arpl pushf mov sub mov aaa into scas dec cmp pop scas mov xlat dec cmp (bad) lods or stos in fsubl sbb icebp push jg adc cmp ds push es push (bad) push int3 (bad) hlt stc cs out cmp and sub pop bnd mov pop nop sbb and imul les insl ja mov fsubs hlt test sub jo stc inc push je jno xchg sub mov mov sbb jecxz inc (bad) lock aad xor or mov (bad) rcll (bad) hlt sbb jmp shlb jns sahf sbb maxps mov and xchg mov mov mov lcall int lock imul into dec jle in xchg xor faddl xchg and repz jno adc shrl fnstsw jo push xlat inc repz (bad) in add xor bound jmp pop outsl mov (bad) rcrb push pop fistpll mov add data16 jmp sbb pusha or (bad) into in sbb inc pop hlt cmp pop cltd loopne xchg in je hlt push cmpsb sbb lods cmp movsb ds fnstsw aaa sub jg push std std fcoml jnp,pt sbb (bad) pop mov xor and fnstcw xor push inc shl jp fs stos or aam xchg inc mov pop pop into or jae aad sahf rcrb outsb or mov int3 add push repnz in daa int mov adc or pusha mov cld sbb xchg dec or cld addl scas stos add xchg mov xorl daa hlt jb sbb mov repnz stos ljmp add daa mov fs (bad) rolb and movsb pusha inc push pop pop ret inc rcl push inc rcrl and dec push roll ja stos clc pop cwtl xor push iret rcl dec fldcw fs lret aas pop jne cmp in aas cmp and call pushl pop pop sub mov (bad) lahf mov pop add inc lahf pop ja imul inc cmp das clc outsb popa adc cmp enter fdivrl das outsl fisttp jl pop popf imul sbb cltd jns mov mov cmp loop dec mov mov jo mov sbb movsb in dec outsl ret mov icebp in rorl (bad) sub cmp ret pop sub push addb push sub loope nop adc imul jno jbe mov js sbb loope add fsubrl jg jmp pop in pop dec mov push inc es inc add enter or mov sbb sub pandn push les adc xor imul rorl push xchg jns adc jo int3 and sti iret xchg js das xchg int outsb mov fs add push loope into xor adc sbb lret in pop pop or daa jle imul or icebp push cmp mov xchg aam mov stc mov push pop (bad) sbb sub test (bad) ja loope or orps dec mov popf cmpsl daa add loopne subb mov sbb dec inc or sub push (bad) bound xchg aaa sbb stc (bad) push push outsl fldt xchg xchg (bad) push push pop jmp dec addr16 inc inc cmp xchg push popf rcr jp imul and jae and dec push xor shrl dec stos addb inc rclb jge inc jae add sti adc pusha out lods cmp repnz fisubr jg sub jnp ljmp inc and ja les ss mov jecxz (bad) jns mov jge inc (bad) lods addr16 sbb stc fcmove mov aaa xchg or jl cmc movsb push pop dec into jge mov push mov mov test test les mov std dec popf (bad) cmp push add and and or sub inc cld and pop mov pop stc cmp sub xchg hlt dec dec xor mov lcall loop fildll or imul xor out inc pusha cmp es aaa mov dec pop ds inc gs pop scas dec rcrl mov adc or cwtl mov jg add fwait push nop cwtl rcrl push in dec notb cmp pop pop jle pop mov enter xchg jne fsub lahf lea imul cmp mov and (bad) lea and and or push inc adc push mov adc ja push mov add nop lea je jge (bad) pop lcall push add push cmp ret cmpsl mov mov aad mov (bad) xor jp aad je sub in inc arpl add into lods mov dec sub stc test adc dec mov mov popf add mov test outsw insb sub xchg cld fcomps stos loope jle (bad) or incb jge mov popf aam mov inc das stos sar popf push mov sbb mov fsubl lahf mov fisttp enter xchg das jne add or (bad) jo test out dec (bad) (bad) jo pop dec push mov dec dec jb xchg mov aas fdivl inc mov xor mov jbe mov xchg sub aaa nop mov and adc dec call clc ret dec js mov mov repz iret fildll pushf xchg (bad) or mov rorb (bad) in dec xor out mov icebp pop pop into mov (bad) cli mov add mov and dec iret sbb sub scas sahf cmp imul sub shlb inc mov out jns mov test dec adc lret cwtl or repnz xor mov push add mov cmp das paddusw sbb aaa pop popa (bad) and cmpsl (bad) sub gs and cld jno cmp add das pop xchg pop (bad) (bad) sti imul cltd jl mov les mov bound jne jmp dec inc icebp in (bad) movsl ss xchg inc stos pop add xchg add insl inc jb pop inc mov je rcr mov mov insb jmp sarl mov (bad) dec jecxz sbb sbb (bad) xor notl jbe inc mov leave xchg lret mov lcall xchg clc or iret mov es shlb push in jns cli jo mov inc and flds jbe pushl inc mov or sub pop es jo pop rorb out addr16 adc or and add fistpll jl adc ret and lods out stos sbb mov add js lock dec and pop mov sub sub sti mov pop dec push push rcrl cli cld inc dec add enter sarl adc xchg rcrb inc movsl in jecxz rcll rclb jbe add out xor pop cmp stos out testb inc xchg mov dec out mov pop cmpsb iret test scas lods mov pop ja iret add push gs jns fnop xchg push je andl xchg lods or sti (bad) fsubrs mov (bad) jge xor add cmc jp xchg jmp insb jne mov jg push push and add out xchg (bad) hlt add and int3 xchg fwait sbb stos cmp jg data16 jl mov mov fldcw push mov ja mov mov dec stos lcall stc pop xchg and (bad) lret in or lcall rolb mov clc add lds dec sti jb cltd inc nop cltd nop (bad) test pop dec mov push xor movsb gs test mov jl sub into push mov js sub mov sub adc bound data16 push les jb sbb push outsl jmp test cmp mov out cmpsb xor and clc jecxz xchg mov push sub lret sub pop cmc sbb (bad) das out push xlat aad les rorb es jmp ds shrb movsl out in mov pop ror fistpl div mov or je cli sbb cmp xor mov jge mov and lcall xchg movsl fldt xchg mov aam push pop mov lret mov and xchg xor sub mov mov pop in xchg js (bad) and std jno cwtl lea and fistpll lea (bad) sbb or lds jae lods push shrl fisubl xor push lcall mov inc sub mov negl xchg clc or sub mov cmpsb pop in push lods scas stos lods test xchg jge outsl mulb pop mov (bad) xor mov stos outsb jb or xor pop lahf sub add loop in pextrw push mov mov xor icebp jmp sbb outsl or je lds jae cmpsb and push in mov (bad) or xor and rcl out xchg push into mov cli lds out jae lea pop or inc sahf mov add sub in data16 mov sbb jnp xchg mov adc pop xor adc (bad) lret int3 add loope sbb cltd mov stos lcall aas ja rcrl sub pop jbe mov push (bad) pop push xor sbbl test mov lcall mov or xor push cmp sbbl inc in jecxz xchg repz out aam dec and add sub stos sub lock fcompl popa xor dec js jmp and fstpl mov dec push incl xchg repnz push add lahf daa mov mov cmc mov (bad) (bad) std mov dec lret inc pop fbstp lds notl pop xor push dec lods nop repz add or fldl movsl pusha int3 (bad) in aas mov mov pusha bound dec popf stc out rcrl loopne nop ret inc pop rcrl jg lds mov xchg rcll lods xchg mov int3 dec je cs add enter clc mov or pop ret mov test pop (bad) jo mov jno jge packsswb mov mov mov imull into sub mov test sub dec insb test movsb je incl mov inc clc add out or adc into cmpsb (bad) jmp cld lods ljmp jmp enter inc (bad) shrb fsubs and (bad) mov enter and adc out fnop pop ss dec dec adc stos sub inc enter ja pop ret js stos mov jb lahf xchg std and loopne add xor out mov out add push mov lret pop mov push push xchg jae xchg je mov call xchg add (bad) ja loop sbb aam (bad) je cs stc lret jmp movsl lahf out clc push or mov jmp test jge loopne sub jbe orl adc (bad) popl and xchg test ret aaa int3 push aaa pop pop les jno inc cmp in xlat and xchg test and push ret bsf or jle test loop or js ss adc je int3 mov sub pushl imulb sbb pop sahf hlt or sbb sbb test fnsave loopne inc jp aaa lret test cmpsb jae add daa fldcw mov mov imul xlat jno movswl pop rorb or (bad) mov mov dec jns xor aas (bad) into stos std push add es cltd loope lret in fistpl lret and sar cs stos inc cmp mov mov cmp cmp les cmp lock sbb pop hlt imul mov fcmovu out (bad) adc add inc push push and or nop sub pop pop out push out test ret xchg xor fucom imul xchg movsb sar cmpsb pop and aas aaa popa mov xchg flds mov xchg (bad) dec or nop jmp jo jnp fyl2x cli push daa inc les xchg les sti push jbe dec dec out inc push or lahf pop jb roll or dec pop or mov lods aam fimull jae lret scas popf xchg push xchg xor push sbb jns mov sti mov arpl cmc lock pushf insb hlt ror xor popf add xchg fadds mov xor leave fmull pushf sub xchg inc cltd pop and and fisub xchg es pop imul adc add mov lahf icebp or jl fdiv sub dec lock mov and cmc ror fs or sub insb mov cmp xlat fwait xchg ss sbb (bad) xlat pop lods lret cmp cmp jmp cs fs lahf push ljmp in sbb xchg push fldt stos pop cmp push out loop sbb and mov sbb out loope jp xchg and je inc stos (bad) ds (bad) push icebp ljmp in stc pushf cmpsb ret ret push das dec pop mov sub push pop movsb pop imul icebp outsb inc add xchg sub xchg sub arpl xor adc jg push popa push and mov mulb adcl (bad) push jb push sub push and dec test add gs xor push jle or jno out jmp (bad) bound cli pop and cmp dec imul inc lea out int cmpsl in cmp fdivrl jb mov lock daa lods clc enter aaa sbb iret test adc xor in xchg loop test stos cmpsb (bad) loopne jns insb lahf fiadd cmp push fcoml (bad) fdivrl mov sbb push or xor insl lods les mov stos adc inc dec mov add adc inc aad jmp aam outsl (bad) jb (bad) scas push and out push xchg sarl mov inc idivb pop mov (bad) mov lea mov push dec cmp ret stos cld (bad) aas mov and push (bad) mov sub pop and dec insl in xchg addr16 inc (bad) mov mov inc les adc push je lret xchg mov mov addl sbb rep xlat shll mov mov cmp lea mov cmp lret push (bad) push pop (bad) repnz (bad) hlt dec lods mov push (bad) cmc xor mov inc push jo adc out aaa pop ss addr16 (bad) mov (bad) and rcrb pop sub aad aam cmp mov cmp fsubrl cli ja pop in sbb push clc mov out xchg and inc pop div and inc jle push jle out push inc or sar adc lods add popf pop mov pop ss inc or (bad) cmc mov lcall fidivr jl inc mov mov sub iret add mov cwtl pop cmp sub and icebp outsl fcomps and (bad) insl mov cmp cld add dec or out cmc cmpsb scas inc pop add sti stos (bad) dec cmp or jb in (bad) mov mov addr16 dec cld icebp out test push movsb les dec xchg xchg pusha (bad) push scas arpl push divl in push fimul mov dec mov cmp xor push dec jg jmp sub mov cmp pushf icebp loop nop (bad) cli mov test xchg or mov cmpsb xor xchg icebp xchg push pop outsl addr16 fdivr inc dec pop adc lcall in jne jg sbb cmp cli or cwtl mov mov out sub jae jp mov pop in push lahf pop (bad) cmp jo mov jb or fs or cmpsl jb xchg inc mov inc imul les and adcb pop lock mov fdivr out inc cmp outsl or or jecxz gs outsb leave notb lahf arpl lock fidivr in push loop mov pop mov into sub clc (bad) jbe add (bad) ja jne mov (bad) jbe xorl stos pop jns sbb in aaa pop ds les xchg jg add lahf mov movsb add lea xchg add dec mov sahf pop sub adc sbb ret xor dec jg mov jne inc fs out test aas rorl adc leave add fiaddl fcmovnbe es and faddl bound jne and push or add pop fbstp dec jecxz mov pop std cmovnp es cmp jbe stc dec stos stos sahf inc add loop shll mov out das (bad) clc push bound cmp add push push sub push mov push push ret cld mov jl and out adc cwtl mov pop sub mov aam fs sbb repz movsb frstor xor subl push repz and mov inc (bad) push xchg movsb pop mov xchg push jns fs jecxz sub push cmp cmp dec loope daa rorl data16 push popf push ja sbb mov sbbl cmpsb mov pop sbbb pop int cmp cld (bad) and fidivl into hlt out sbb scas sbb out shll add mov sbb fwait (bad) add popa and mov das dec ljmp into xchg into inc incb inc push or mov test (bad) (bad) cmc jne lret adc jne fwait rclb mov inc daa dec imul stos sbb mov je es jno lret push xchg std add jns ficoml push jecxz test fidivr lods lret sahf outsl push and ljmpw xor dec repnz push lea stos pushf sbb cld cli fdivrl aad xchg pop mov mov adc cmp jp jns pop js popf mov gs mov cmp jno inc mov imul or xchg sbb add repnz mov popa ds and xchg sahf or adc add loopne mov lcall cmp or mov addr16 inc out mov addl leave lcall es aad push rclb ret loopne test jp outsb lea dec (bad) cmpsl push fldt or shlb pushf movsb call subl push rorb inc add push jg adc ret dec jg enter pop ret loop mov (bad) and stos fist rorb or jno into aam push add das push mov push sarb ret pop sub (bad) inc scas xchg imul xor sub out dec (bad) push and inc rcrl cmp outsl clc pushf (bad) gs xchg and dec nop sahf lret add push insl pop cmp loop lock in ss sub jp int3 sub cmp mov lods dec mov mov (bad) mov pushf mov push daa cmp add test dec add or lret bound mov cmpsl push lods dec fisttp cmpl aaa mov sbb push xchg ljmp in cmpsb xor dec scas stos and jnp xor xlat xchg out mov xor jmp insb stos cltd mov fldt decb add sbb jb xchg lock sbb push jge stos cmp shrl xchg ret push (bad) jo ljmp fistl mov lret xor aad outsb sbbl and mov icebp pop rol dec mov mov cmp prefetch sub and dec mov outsl rorl loope enter pop jae push dec xchg loope or pusha xchg or cmp push cld inc mov mov stos and repz lea sub lods mov xlat adc xor cmp jmp cmp cmp dec dec pop mov xor aaa fwait cmc cltd (bad) cmp xchg push ja rcrl sub outsl xchg or adc push outsl xchg cltd ret into js call nop inc insb dec jg sbb test mov stos repnz out dec cmpsb pop loop mov jp call movsb push cmp or ja mov jmp add and ficomp pop inc jmp loop in and mov mov clc pop and scas stc fidivr pop xor lret add fimul mov push loop dec lret mov mov outsb gs aas adc jge dec mov push mov pushf add pushl lock dec (bad) dec pop test shrb movsl and imul mov mov sbb sarl mov adc mov int3 mov add movsb (bad) jo inc sub int mov xor test ficomp pusha call push sti pop leave cltd int3 jne fnstenv (bad) fisttpll scas fmul sbb inc setns test shrl les das sbb dec xor movsl inc pop arpl std push in addr16 jl,pt inc fistpll fnstcw sbb mov mov outsb lret mov les xchg mov mov popa cmp pop ja mov ret pop add (bad) lods adc (bad) loopne add cltd int3 inc jecxz lods mov js mov movsl inc sub inc repz int data16 sub cmp insl push jns fwait movsb mov jecxz sar dec cmc cld jns imul and mov std dec xchg push ret repz jg rolb (bad) in adc inc stos daa (bad) mov adc xor shlb add lods push enter mov sbb cmp fs or xchg push xchg sub jo add (bad) xor data16 popa mov adc in adc into in scas repz arpl repnz mov lods ss icebp (bad) cmp xlat loop mov jle (bad) fstps push inc inc xchg clc lock sbb addr16 loopne or add addr16 sbb mov mov pop mov and shll mov lahf sbb stc push data16 (bad) mov idivb ja mov pusha rcrb mov aad mov sub pop push cmovs cltd div sub adc xlat es adc in mov xchg pop sub stc cli rcl cli fisubrl pop (bad) aad adc or or es dec sbb mov push fsubrl in out xor aaa dec jb jge ret xor add add stos dec or cli push fisub leave (bad) fild dec or pop cmp sar add arpl or insl insl xor adc enter jno out and outsb sbb jbe sbb rcll pushf adc adc je (bad) inc xchg test adc xor dec inc enter cs popf dec xor pushw mov ljmp fstl add insb mov les pop lcall jl mov or inc gs mov (bad) mov xchg (bad) fcmove cmp dec or shrb add sub fimul inc push pop push inc rcll or int hlt xchg addr16 inc aam mov les imul mov psrlw or xorb add outsb das sti jmp xchg dec inc cmp cwtl (bad) cmc jb xor push outsb (bad) lret xor andl push fldl and mov mov cmp push cmpsb (bad) mov je and addr16 lret (bad) push jbe mov outsb push mov stc imul arpl test mov xor add js or xor push lcall jb jmp inc pop fcmovb out mov pop or fucomi push mov mov xor divl fist dec out popf sahf or cmp (bad) orl sub cmp addr16 sbb inc xor mov adc (bad) adc mov out lds or imul jp pop out icebp (bad) jb mov cmp adc mov pop mov mov cmpsl pop lcall inc ja xor cltd jnp dec pop ror add dec fnop add int3 int dec out sarb (bad) sub cmp nop push mov lods popl dec sbb pop inc mov fisttp mov das inc inc inc test push sbb fbld cs fnstcw stc test ljmp mov xor adc mov aas fimul iret lret cmc scas add pop and xlat iret shrl mov dec cmp and jp xchg mov out movsb fimul fmuls (bad) (bad) stc xor jmp push in pop push dec inc (bad) (bad) mov loope push test sub hlt or cmp mov inc imul cmp sub iret mov adc leave cmp sbb sarb (bad) notb xchg cmpl fisttp push ret sbb cmp mov sub mov cmc hlt xor mov mov call sub push aam fnstcw inc in mov (bad) int3 push mov add aaa repnz outsl fwait xor imul xchg jo cmp mov mov stos mov cmp xor test hlt jmp xchg cmpsb or loop data16 and sub adcl sub dec mov test aam ret (bad) mov dec out inc push dec test fsts jns inc add leave in sub cmp sub lods jo jno mov pusha pop pushf pushf fmuls jb (bad) xor jge cli lcall pop xor mov in mov mov dec or cmp cld xchg pop stc mov add mov pop cmc lahf cmp mov popf cmp add out adc pop out or repz sbb adc pop test mov jns das popa (bad) lock push fiaddl sti cs iret xchg adc xchg dec inc sbb ds pop or idivb out cs mov and fnstcw out (bad) add push mov pop loope outsl mov pop dec adc lcall mov pop xchg pusha pusha sub imul lret or leave fdivrs jnp in fnstenv xchg push into adc loopne into mov adc ret cmc out mov insb es add (bad) mov and (bad) in sub daa xor out addr16 inc dec jae or inc in movsl in or and rorb cld push sti jecxz pop jb out xchg rorl bound imul pop jecxz pop nop jbe xchg and push loop imul out sbb jl inc clc jns sbb cmp repnz jbe ja ljmp dec xchg rorb pop out add and mov subb adc (bad) jle insl or mov test and or test outsb xor out lahf pop in cld add cmp mov jg and push cmc (bad) pop (bad) leave mov xor and orb mov pop xor in into mov xor cltd movsb nop inc in xchg sub lock ret xchg mov fs ret rcrl pushf orl in cs xchg (bad) mov insb cmp pop hlt sub addb (bad) cli dec cld cmp enter in pop movups aam adc (bad) jl out pusha fwait (bad) xlat dec rorl sbb mov push fcmove and fidiv add push or (bad) mov inc push push orb jno sbb push in in aam cwtl mov test fwait ss jo iret mov lods (bad) dec push mov fwait icebp stos adc xchg sahf lock test outsl (bad) pusha in xor jae loopne or push push cmpl jo mov mov add sbb mov addr16 lock push int cs xchg add call and pop sbb cmpsl xchg stos mov jno in xchg or addl mov mov push shl mov xor and icebp mov lods cmp outsb fcmovb imul xor ss mov and repz fs loope push jp add into (bad) mov push pop push stc sub xor and lock mov mov test lods adc test push xor cmpsb push xlat mov push push fwait lds xorl mov inc (bad) jmp sahf aad dec stos jo inc (bad) push dec jbe iret cmpsb in popf outsb cmp mov xchg outsb jg bound dec cs add aad (bad) aam lods dec call loope jmp sti xchg (bad) idivl (bad) mov insl push lock icebp mov call lret cmc xchg popf jecxz test mov xchg lods push dec lret addb pop xchg pop das push mov mov push sub ss mov mov ret out push popa mov and dec cli stos mov out pop jo push lret out (bad) xor mov dec or es sub lods push sbb imul aad mov push jbe and out push fnsave cmpsl xor in aas (bad) or mov xor xor imul shrl movsb mov jbe jno xor andl xor nop in mulb dec fisttpll fs add and sbb repz pop sti mov mov repnz and fsubr aad cmpsl addr16 mov xorl pop cmp (bad) mov mov push cltd fimul fisttpl push aam addr16 stc iret or mov imul adc and gs sub cmc rorl (bad) das push movsl stc scas dec cltd rcrl insl in inc arpl negl jmp xor pusha sub inc aam test mov push mov xor int3 xchg rclb mov or (bad) fst iret sub mov ds sub nop in mov out or xchg js pop call aaa cmp scas xor scas repnz mov (bad) jno bnd xlat and pop fcmovb dec adc (bad) in (bad) cwtl insb out sbb fdivs xchg xchg (bad) mov mov jae inc in and icebp mov out pop and int mov dec jecxz sbb out out (bad) iret outsb cmpsl movb mov fidivl cmp mov xchg xor popf outsb popf push bound fild or push ret cltd fcmovu sbbl push push xchg pop cli xchg xlat repz bound xlat cmpsl dec sub jle ja sub push sbb andb in fistp sub popf pop mov out sahf fwait insl mov inc xchg pop lods lock push push subl outsl mov cmpsl jg imul outsl jns pop test add jne dec cli add gs push test cwtl push fstpl push aam adc test loop push orl mov inc pop bound stos ss pop push ficom sub xchg das test lret ljmp popf dec jnp rcrb jns (bad) dec movsb negb je aam jp inc mov clc sti inc jmp push pop or je or in test fwait clc mov cmp xor add addb imul rcl imul out cwtl inc sub and mov into out enter push sub lock negl jae xchg adc xor or in push cmpsb and (bad) mov out mov pop jge in mov jne pop jp jmp mov stc cmc adc mov cmpsl lods mov pop add lds inc and xor dec popf into xor sub xor mov pop fwait push insl xchg out packssdw and pop imul push jo (bad) mov xchg jnp cli in fs mov sub js cmpsb and and add fcomip cmp pop shrb pop xchg aas and xchg cmp pop xchg leave push popf fiaddl lret sub int3 lods dec fs adc lock jnp inc sub mov pop out xchg cmp push push mov xlat hlt rclb mov stos outsb lret shrb dec mov aas xchg and xchg jo or push dec gs sub ljmp xchg or hlt (bad) jne pop in pop and scas xor stc ficom jb addr16 cmpsl fsubs out (bad) insb loopne or iret loope scas addr16 adc and push dec mov inc (bad) icebp and stc mov (bad) jns ret cltd outsl pop cld or lret add dec xchg pop imul xchg and mov popf inc fsubs mov sbb shl add fsubs xor inc mov cli add jbe fnsave mov or cmp setle sub add loop fcomps pop in sbb out xlat (bad) stos pushl enter add mov sahf popl inc loopne insb push ficoml cltd iret lahf and aaa (bad) dec sahf popa out shlb enter (bad) jb cli push in aaa sbbl jbe inc xchg push lcall add or lea mov stos je dec mov xor xlat and fnstsw sti (bad) cs lcall insb xor shll adc and jb out movsl mov std push dec sbb stc or mov flds (bad) aaa push (bad) add cmp popa and push jne adcb (bad) mov and popf pop ljmp mov pop push mov push enter sub lcall or mov out xor mov push scas cmovno xchg jge push lock sarl outsb jne push ret scas push jge jg pusha test pop push imul mov iret dec fisubrl mov jns movsl ret repnz jle xor inc pop xchg adcl mov fsubl sub cli inc push (bad) xchg mov imul push out loop sbb insb (bad) enter call test jbe and and ds nop and stos xchg loop pushf push jns jne outsl pop and shlb std jnp (bad) and pop fidivl (bad) cmp mov ret sub mov (bad) xchg cmpl jmp mov xchg roll aas movsb lods std insl in fwait adc jb mov clc loope test pop jmp jge mov lcallw aas popf pop dec mov (bad) mov lret enter lret movsb out (bad) in cli das sub adc out into xor or scas sub icebp in shll imul dec inc stos gs cmp sbb cmp xchg push cmpl jmp inc aas fisttpl adcb (bad) fs sbb push mov sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 mov arpl mov ds nop sub push loop enter aad cs dec es add cmp push scas ja xchg ljmp in mov xlat xor sbb or ret xor rol iret outsl cmp inc repnz adc popf fwait push cld push push test xor cwtl in mov test mov (bad) out add inc js pop les decb call (bad) adc ss popa sub mov cmp and shrb std cmp xor xchg or ret ljmp sub and lcall jmp outsl xor xchg mov in and lcall jns inc sbb jp push bound jecxz sbb mov mov mov sub in jg jecxz dec adc lret pop fwait mov mov sub lea lcall sbb aas xchg or or sbb fisubr loope cmc jnp or push insl dec pop ret (bad) cmp add jnp out cmp add sub jno roll xchg fdivs in push xchg add popf stc dec loop push adc xchg or mov dec xchg xorl movsl jbe adc mov inc xor fbstp xor je ret and or fildll inc les inc and subb lods pop addr16 pop jnp lods (bad) fisttpll (bad) xlat in (bad) push cmc and inc mov in push mov xchg out inc inc jbe stos inc mov sti mov shrb (bad) adc sub jnp aaa mov mov int sti push cmp xchg mov xchg cli test stos pusha scas xchg inc int loop cli xor inc fs mov or shll xor addr16 loope ret fcomi shlb dec shr fwait xchg jmp insb negb mov sub aam xchg adc push mov scas cmpsb (bad) pop nop pushf pop xor fcmovbe loope in je vhaddpd pop push decl lds cld jp mov cltd (bad) dec sahf cli push pop sti enter cmc arpl roll mov test out xor and sbb aaa mov mov push std xor orl fisubl xor push iret adc dec push cmp sub adc jp pop cmp shlb popf cli mov movsb mov mov movsb inc pop arpl punpckldq inc push test test sti pop sbb outsb mov or lds shlw xor aad or xchg movsl inc into adc pop mov sahf in adc inc mov mov jmp outsb xor (bad) daa js icebp iret mov or popf push ret incl es gs jb jbe cmp pusha cmp adc data16 and shlb mov cli and pop lods aas fs pop push movsb movsb xchg xchg insb or and xlat dec lods pop (bad) mov jl inc cltd dec jg bound or xchg pop jge mov in int mov imul mov push ljmp outsl mov fdivr dec dec cmc jl or (bad) dec xchg (bad) xor adc cmp ds pusha aam fldcw pop jg and ds test shll mov mov adc or add mov push inc push and out jecxz fidivrl or outsl add adc fwait adc rclb mov outsl inc call lret in mov or dec movsb inc cltd in jecxz das cmc out repz jecxz and dec xchg das mov push hlt fildl xlat ret popa test mov jmp xchg sub incb and pop lock push cwtl add cmp add push cwtl inc add loope pop add cld add clc or lea jecxz clc das inc cmp repz or fistl mov mov lret push cmp sub lret ds adc xchg push sbb lock in jl enter aam pop js arpl cmp lods cmpsb fwait out iret pop in inc dec (bad) hlt cmp push mov push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 