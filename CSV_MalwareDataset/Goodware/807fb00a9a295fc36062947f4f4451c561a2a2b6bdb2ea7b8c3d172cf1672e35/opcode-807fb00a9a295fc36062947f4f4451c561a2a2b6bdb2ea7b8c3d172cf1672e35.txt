push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop push dec and pop test mov (bad) loope pop pop sbb xor (bad) fucomp inc lods pushf sbbl push mov shrb pop call nop mov fsubs cmp fdivl jnp insl mov and inc inc arpl lods cli push loop mov ds es rclb cmp nop mov cwtl into inc jae ljmp (bad) push and fcomps outsb push jge xor xchg mov mov xor imull pop sbb jg rcrl push call jecxz scas sbb sub (bad) mov push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es or xchg cmpsb test pop mov (bad) repz jmp and lret iret (bad) fstpl fdiv xchg add cs fstl movsb leave mov mov jge or or mov out cmp sbb inc hlt call jns ss fwait adc cs shrb test aad lcall mov and jae es lods xor lcall mov test (bad) mov dec test pop out push push push ret rcl xchg xor add imul mov lret mov movl mov negb cltd fwait inc sarl dec xchg xor inc push xor (bad) in test xor jge rcll popf cmp push pop push clc jnp aam dec pop in mov loope and movsb sbb sbb push push (bad) shr repz shl push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 es or xchg daa mov out enter jmp and fisubl out (bad) (bad) jle xchg pushf aaa inc jne push nopl mov mov das mov repz mov pop push jmp inc jmp mov dec insl jno adc ret movsb push xor push mov loopne jbe cs inc lock mov loopne mov pop and jg mov shlb add lods pushf scas inc aas insl xor push mov add jecxz test std rcll push call jg fsts cmp xchg inc lcall mov mov or aad sub mov (bad) lock push jns jecxz cmp pop test push and xchg mov dec in leave cmp sbb jnp pop pop into sbb (bad) ljmp cltd and cmp std lds push jle (bad) mov test mov ss das mov jl mov push mov and cli mov sbb (bad) loop adc scas and (bad) lret imul pop jns push in or sub sbb add push mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 es or ret mov cmp cld cmp cmp cli (bad) jne push cmp movsb xchg push mov push mov movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl testl out (bad) mov addr16 jne mov jbe fwait testb lea add mov xchg movsb enter mov mov aam dec ss sbb jo sub or mov add es inc fcomps xchg daa fidivl jns push outsb jb ja xchg xor mov mov (bad) lock in in out pop loop lods iret dec sbb out test add or leave pop mov cmpsb jae cmp rcll shll cmp or (bad) jo fs mull gs inc mov mov lahf xchg and loope outsl sub cli cmp pop inc or sub adc pop rolb cmp inc mov pop fldt adc cmc (bad) scas add fmul lds xchg mov push dec lahf repnz js loopne dec mov jle sbb mov or xchg das mov andb jae aas shl cmpsb sbb int arpl lret fsubl xchg pop scas (bad) xor repnz cwtl sbb in sub stos mov mov lods (bad) push subl sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop xor pop subb sahf (bad) stc and sbb sbb or push int mov mov sahf mov in dec cmp ljmp push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 es adc sti loop inc push aaa adc loope test mov hlt push pop pop repz inc outsl insb cmp dec nop pushf push mov push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop jno and pop subb sahf (bad) stc and and sub enter outsl rcrl and cmp mov mov sbb fdivs lods (bad) clc pop and into in jae outsl orl xchg pop enter fs inc out cld test out xor out pop out pop iret mov fiadd add sbb stos fs imul js adc push inc in pop mulb cltd fstl aad or (bad) pop (bad) and xchg cltd daa dec cmpsl stos mov mov xchg add push mov inc mov mov jne push inc jmp pusha dec notb pop scas mov clc or aas jae xchg sbb xor bnd notl jmp cltd adc push lods jle sahf pop xchg push loope (bad) push mov sbb leave cli dec sti data16 movsl jge jg jp aas mov mov lock jmp pop add fwait cmp xchg aaa imul cld movd xor dec push lods fisttpl cmpsb aam loopne sub in ja pop or xchg aas xlat xor or aam ficomp sub sbbb mov cs out fstpl dec jnp lds dec dec sub insl insb xchg cmp sub fildll inc mov adc xchg jp lods notb test and gs popf lahf sahf sub in mov sbb ret mov mov aaa and sub dec sti or cmp pop aam shl add push (bad) mov ds pop mov mov dec lahf cmp and push (bad) pop out repnz mov ret adc push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 es mov adc push mov push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret es adc mov or out ljmp or push cmp or sbb rcrl adc loopne sub xchg and push mov push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret es adc decl xlat std jne and inc fbstp movsb mulb lods jno mov fstpt fs lock pop sbb int rsm imul in mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc fcomi or xchg add pop mov (bad) repz jmp and sahf and lret (bad) and movlps xchg (bad) cmovb scas enter popa outsb and fnop sbb sarb rol enter mov xor cmc and iret mov insl cld jnp dec jecxz cmp xchg dec ss xchg fwait adc es loopne int out xchg adc scas std cmc daa or pop imul lcall pop ljmp sahf sub dec lret xchg std repz jbe dec popa int push cmp add insl dec std sub outsb pop xchg loopne mov imul jnp jns out and sbb (bad) stos stos sbb mov fadd stos arpl mov scas mov and sub negl inc rcll movsb daa push cmp int loope pop stos jno test xchg cmp fsts jno shrl das (bad) sbb dec xchg mov (bad) div hlt mov ret sbb jecxz inc dec and hlt mov rorb movsl and jnp jmp xor dec mov mov addr16 dec outsl jno addb push jge sbb imul sbb sub das imul pop hlt mov (bad) mov out (bad) mov mov mov in push or aaa xorl mov sub mov and push ljmp aas aas jns test ret dec mov adc dec (bad) (bad) inc addl mov dec inc es jne ret mov jp jmp xchg sub (bad) stc lods (bad) and lcall pop sahf cmp ret ror mov push sub pop rorb out mov jno icebp xchg lret gs bound mov mov shrb imul ss fwait mov mov cmp fnstsw out sahf das push es fstl push mov (bad) lahf xor imul xchg mov movb fmuls sarl test pop sbb add jne mov inc ja adc call inc jmp addl sti bound cmp cmpsb inc jnp popa loope sarb ds loop mov push inc adc and cld adc mov xor xor lret test mov mov rcl xchg sub (bad) mov mov outsl ja fisubr push je in pop pop arpl in push lds or push xor (bad) fsubl icebp sti repz pop sub mov (bad) and xor dec xchg dec je sub por pusha jo inc bnd out xchg imul and sub xor (bad) enter adc cmpsl movsl sub imul lock mov or hlt fcmovbe (bad) xor adc fnsave (bad) sub sub mov mov subl repnz push sbb cli call adc lea fildll mov ret xchg mov hlt dec dec sub bnd inc xchg xchg cwtl mov ds shlb xor incb and arpl jne cli test pop sbb mov iret sbb mov sbb (bad) push push scas xchg stos mov test popa xchg mov in aas mov (bad) fnstcw movsl loopne cmpsl mov pop jle mov imul jno lret rclb divb xor sub inc mov insl mov ret cs mov push in mov cmp movsb std pop sahf ljmp ljmp cmpsl push push imul xchg push (bad) pop andl adc mov pop mov iret repnz (bad) push loop mulw xor mov roll push adc in and pop xchg and pop out out outsl cltd xchg mov inc test movsb dec mov sbbl cmp jo adc lock inc ja (bad) push sub (bad) dec mov outsb push jae or xor aam dec imul inc jmp stos push inc mov cmc and push cmp fcoml adc push or jo jno pop push lret mov push pop test popf or sub lret (bad) mov lods test sbb pop in sahf jmp nop shrl subl sarb movsb cs fcmovne mov lcall and (bad) in add pop mov mov test xor or lock pop add leave gs bound xchg push xchg loopne cmp or aad mov mov hlt js jo pop rcrb stc ljmp mov jmp mov xlat popf xchg dec cmpsl std jl popl fmulp aas in mov xchg dec cltd cmp push aas add pop shlb movsl pop imul inc mov pop sub fcmovnb mov sarb aam jmp dec test mov clc xchg cmpsl mov lock (bad) cltd push cmpsl inc fwait rcl and mov inc andl xchg push ror cmp fstps push into sub out sbb fiaddl into out loop push imul dec mov lret sbb test mov ret push (bad) fstl cwtl insb inc (bad) fidivl out (bad) hlt inc lahf (bad) in mov out pusha aam outsb lods into fstps cmpb ret adc sbb fstpl loop sub jle xchg mov cmp call jg mov xor or aaa mov inc xchg lods xor cmpl jp inc es std fsts movsb lcall outsb pop pushf dec push movsb outsl mov mov lods mov mov xor mov dec daa cmp mov jnp loop mov mov inc int cltd andl dec (bad) out add pop aas adc push sub or mov test pusha jb rol loope cmp sbbl adc dec dec jns or sub and leave or dec out mov roll test or inc inc cmp push lds mov xchg inc and sub imul push (bad) fcmovnu xchg xchg inc add add sahf cs pop xchg and and out pusha (bad) jg jnp adc bts negb jb xor xchg push pusha outsl xchg lock adc inc push sahf add cmp xchg loop mov test jbe sbb and jb and mov int3 fmull xchg inc stos and arpl pop push and push xchg sub testb mov gs pushf (bad) pop (bad) inc push or adc outsl jge xlat popa jp pop nop test repz enter jnp lcall (bad) push pushf jns or aas ret movsl xor insb dec lret jno (bad) sahf data16 in adc insl cmp ret aas cmp movsl leave insl repnz push xchg mov fs orl arpl enter aaa dec mov mov sub mov fdivrs push or fcmovnb xchg xlat dec es test mov cmpsb bnd aam outsl imul decl dec daa cmp sbbl std js inc and ret xchg aaa frstor push xor mov fninit mov push lods ret cli sahf ret data16 inc ret cs xor push push addr16 fwait and sub outsl jmp out aaa ficoml scas adc xchg ret enter xchg (bad) push js lret mov adc ret hlt mov (bad) jg pop add pop push orl sub push stos add out or mov push mov hlt imul dec cld subl ficomp inc push adc test std mov imul push (bad) enter fwait sbb sbbb (bad) add adc dec jle dec ja adc pop fidivrl dec enter cmpsl xor mov mov dec add repz hlt push push mov mov and xor jmp loop pop mov mov dec or xchg sub add lods jle int push dec mov lods sbb icebp cld adc cmpl fimull daa fdivs arpl xchg jb stos cmpsl imul mov jecxz fcomps mov es (bad) jnp arpl push xchg imul arpl popf add fstps out xor xchg xor cmpb add sbb loopne iret orl push es roll stos cwtl or movsb jo lret and mov adc out loope adc jae and or sub sub xchg mov fsubr push mov xor es gs mov mov xchg xchg pop sbb imul outsb in int lret jle arpl aas mov fidiv jl adc dec lods jno bound decl jnp adc nop sbb fistl push sub lock xor sub jae call loope arpl fdivl outsl imul rcll imul sbb popf ret imul pop push dec mov (bad) mov dec addr16 jbe arpl mov rorb xor add inc outsb jp ds pop mov cmp push mov loope fwait dec loope fisub (bad) push rorl jecxz mov or in test push aaa and mov aaa loopne jle mov add pop ja outsb stc add push or inc jne test pop push in jno cs out push stc lock outsb jmp cmpsl test push or inc xchg movsb push jbe or mov mov daa sbb sub cmp mov xchg test (bad) scas lock dec pop and and dec jp call adc cmpb xchg out in cltd fsubl mov mov pop mov inc sub sti pop cmp push push inc xchg mov sti daa lea mov dec cmp movsl (bad) mov (bad) (bad) (bad) mov jns fs sub int3 gs jp jge cmp pop sub stc xor mov negl xor ss out ror out xor jns jl out out jne rcrl add imul fs and mov repz adc add pop sbb lret jge lret mov dec sbb js repnz je fs adcb push dec xchg mov test push mov bound sbb dec and cwtl out add jle int3 mov out ret fst jno scas pop cmp inc lods notb jg xor (bad) xlat repz fwait sub out mov aad jnp ror fldcw or pop xchg xchg (bad) data16 cmp lods cltd adc and cmpsl mov enter xchg ffreep mov cmp push pusha jecxz pop adc mov jle pop and sub sbb sub enter jp mov rcrb out mov jl (bad) lock in cmp push fsubl rcrb (bad) ret notb popf mov jecxz stos inc lcall adc imul jmp push divb lret jnp mov (bad) ret test imul outsb push cwtl divb js dec insl fnstenv mov ss cmp add hlt shlb mov sbb sahf test jne inc and xchg popf daa in loop inc pop mov fs shlb jno jmp lcall rclb movups mov lock dec and je pop fsts add xchg fcomps jmp mov mov pop aam ja jns jg sub sbb and push insl movsb sbb xor pusha and xchg mov jno push dec pop jnp aam fwait mov jg cli and mov push jp aas data16 (bad) repz pause or dec mov std pop bound inc imul jmp jnp out jge pop inc cmp cmp (bad) icebp dec aad mov std jge (bad) mov jmp adc cmpsb xchg lds fisttp scas push pop push in mov mov push andl ja cs mov outsl sbb shrb test jbe add (bad) lahf testl pop add xchg mov jp out mov adc fbld fidivl mov pop push (bad) lret jmp lock gs sub sbb mov leave js xor xor and add or data16 pop dec sub ja ljmp cmp leave (bad) imul lret push and lock jbe push cmc (bad) ret stos lods outsb inc and and push lea (bad) cmp aaa xor mov leave xchg dec adc adc pop pop xchg out in add rorb lea pop inc cld dec sbbl or adc inc mov fiadd repnz mov dec test pop popa mov adc stc fs ret push int addl hlt ds adc cmp test idiv adc pop mov test cmp mov xor pushf inc lret pusha roll or cmp lods inc fbld inc mov hlt shll mov (bad) pop out out in fsts or or les jnp stc mov leave sbb xor je insb (bad) in cmpl aaa mov mov in xchg fwait sarl outsl pop jns fcomp xor mov push in pop cmpsl int3 testl lcall fsubrs int3 pushf jle push xor add imul loopne mov mov push stc jge ds icebp mov dec fmuls mov xor cmc pushf fs dec push lret int mov das add mov (bad) ljmp movsl test adc mov imul and movsb shlb in cli mov sbb loop push mov inc (bad) int3 dec jo hlt mov push (bad) (bad) iret pop or add rep push push push xor inc es ss shrb fcoml (bad) xor pop or imul cmc jecxz and scas iret lds stos or and and mov xchg out xor cmp inc add stc hlt scas or imul jle in mov mov imul add lret xor pusha mov pop mov push jae push repz sbb push int lcall pop dec sbb sbb jnp pop inc push fldl2t rorl imulb lds push or mov inc aaa sub stc aaa imul fwait imul push out pushf push dec ficomp cld xchg movsb imul inc xchg jbe leave popa push or xchg in and in mov xchg jg movsb jae movsl notb sbb pop cs mov mov out xchg mov cmp and mov cmc clc cmp rol add fnstenv and rcl sbbl dec insl add insl neg mov dec mov dec dec inc or mov aas jmp subl push js mov cmp sarb dec enter std out lret outsb pop xor add mov out mov sbbl inc mov sbb xchg adc mov out fs mov and xor push frstor fldenv call dec pusha dec outsl pop adc and stc aad sub pusha mov pop xor in repnz es pusha je mov test cmp jmp dec sbb jecxz test dec movsl stos and es cmpsl sbb mov lods lcall cmp outsl and xlat pop test lea leave movsl addr16 movsb scas jns,pn mov push lcall sub dec adc push std sub movsb (bad) xchg jmp aad ficompl in adc sub imul adc gs adc or sub xchg pop pop xchg jmp mov data16 adc push xor or out insl out push or rol ret jg add fildll mov notl cs lcall dec movsl jecxz lds rorl push inc cmp xor pop and pop or inc fwait das fldt push and xchg stc nop cli in loope mov popf sub js dec sub movsb adc jns fdivrs ljmp insl aad and cmpsb out cmp rclb sbb dec add (bad) pop and insb xlat mov lds lods pop jns mov aas in sub cmp mov push cmp cmp adc add aad xchg into sub push fiadd sub std call cmp inc imul test mov sbb (bad) cs mov ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 es outsb xor inc scas aaa icebp mov insl and popf xchg mov out hlt push lret pop leave push mov std adc test jo sub or xchg inc jns (bad) fst scas push push or (bad) out xchg stos test fcoml push mov loopne jbe cwtl mov cpuid xchg inc lcall mov sbb sub cmpsl adc lahf imul mov mov in enter xor out sarl jb popa ss jmp or mov (bad) jo call ja imul mov xor mov insb sbb ret push cmp pop ffreep and ss mov pop lods jle push loope pop add jnp pop (bad) arpl movsb cmpsl push hlt mov sbb fldenv mov xor iret and push repnz lods mov adc lock add outsb aad dec cs mov in sub js sub gs jmp cmpsb ds enter jge push dec fimul in ds das sarl (bad) in mov push out adc pop repz pop out test xchg pusha test cmp cmp push into xchg sbb mov sub repz adc in (bad) cld and dec test fs adc test add push lea xlat stc mov lea mov leave push mov jmp in inc flds push jmp xor stc stos sbbl loope mov popa push popf aas mov dec adc inc jbe subl loope fiadd sarb cmp mov mov xorb xor mov sahf mov cmc jecxz lret xor mov push inc inc pop inc out mov mov aam xchg ja sbb std inc inc xor sbb clc dec xchg xchg das fstl loop mov and (bad) mov dec popa (bad) adc inc ljmp cmp inc mov ficoml xchg inc pop leave scas push push dec imul jae sti inc daa fisttp outsl push sub pop lock mov es jmp movsb sarl lret inc inc jnp outsb insb and push adc mov test mov xor sbb int3 mov mov mov movsl out push (bad) enter fcmovne pop inc inc adc inc cmp and lea add negb insl jmp adc (bad) popf imul aaa test mov and mov mov dec ret addr16 sahf ficompl in popa dec sbb push cmp or inc and popa aam adc jmp push les cli addr16 pushf fwait jmp pop pop cmp mov call adc pop divl movsl test jnp repz dec mov (bad) or cli mov sbb inc push mov xor mov inc inc stc pop (bad) mov sbb lahf iret cltd test out mov xor fiaddl jae or (bad) loopne (bad) pop pop js jno xor jp sub jne mov sbb negb jnp andl mov ja add arpl ds das aam jb push dec iret push or std inc aaa push mov loope test push sbb cmp inc aas imul cmp das int3 mov (bad) cltd mov loope cli stos popa push dec jp loop fs (bad) in xor or fistpl or mov mov int3 or daa pushf pop mov dec or and out xchg cmc or xor pushf leave mov pop mov scas xchg call mov dec call test sub xchg insb mov ds lcall movb (bad) repz mov jecxz mov sub adc popf jae,pn jnp ret ljmp js and pop mov lods lods imul adc push adc or push mov adc outsl addr16 push sub jo test sbb jne or fs ss jge in ds push lods mov xchg popf jmp jnp or mov adc hlt rclb jns lcall or aad mov sub sub cmp cmpsb movsb stos xor mov push xor (bad) xchg adc or stos sarl fisttpll clc sbb pusha mov stos fistl jl push sub popa xor xor test mov pop iret add jne idivl cwtl mov xchg stos mov ljmp adc (bad) (bad) cli (bad) jb outsl mov shlb call lds push cmpb stos sarl cld fistpll jbe repnz pop mov push lds mov int3 call adc lret mov inc and push ja mov (bad) or mov jge ja data16 mov test and pop repz push cmpsl xlat mov sbb enter dec (bad) jg pop into nop jp and lods xchg in icebp mov nop sbbl lock mov fcompp fldl push je stos aad mov dec popf sbb push mov idivb sbb jmp inc mov leave and inc cwtl int or (bad) and sub mov push mov mov push push fcoms pop je dec mov add shrb mov or aaa jp jo jne and mov mov pop (bad) jno sti cmp cltd popf mov sub ret fstp ret outsb cmp xchg pop mov mov stc icebp xlat dec mov bound add hlt fldenv flds (bad) adc xchg mov and lret push and jne das fidiv xor and sub mov mov lds cwtl inc or outsl push pop sub ret fs sub inc jnp cli mov or inc mov sub std int cli sbb cmp jge inc test aaa adc push xchg outsl or outsl xchg push add cmpl or (bad) les pop sarl mov mov mov stos cmp xlat push dec cmp sahf repz and repz jecxz sbb outsl dec sbb aas popf mov loopne lock xor xchg daa and xchg out testl or movsb push or scas push std test ret adc jg push rcr jge push adc int ret aam sbb gs sub sbb les xor (bad) push cmp dec shrl pop (bad) fstpt push cltd cmp and mov std pusha xchg lods jno xor sub leave push xlat push pop xchg loopne data16 adc sti pushf xchg or repnz rcrl notl dec jmp sub or or cltd push xchg std movsb mov inc jg das clc imul push sub pop jecxz adc inc sub outsl call or movsb jne popa dec jb sahf or cmp clc in mov fs fstpt test jo inc into (bad) out sbb (bad) negl cmp nop fsub push cli addr16 shlb ja mov mov (bad) cmp loope fdivrs fldenv loope push aam (bad) cmp icebp mov hlt pop push loope or push icebp adc loope pop (bad) fstpt pop xchg (bad) int pop cmpsl adc sub rcrb aaa add test insl pop sbb xchg jnp stos pop inc xchg ret jp mov adc test xchg imul mov push mov jl les std jmp and mov or fsubs addr16 xor lcall push inc test push dec leave rol or das fdivp mov push cwtl dec push xchg xchg imul xchg pop dec int fsts jno inc mov imul jnp adc inc dec outsl inc xchg loope dec mov mov inc mov push push pop mov arpl ja and sbb mov lea add iret mov jp cmp mov (bad) or sub xor js gs jnp push and xchg daa add mov fdecstp add xchg mov sbb push in add sub jecxz mov adc sti xchg jmp sub inc jecxz or clc mov loop sahf mov inc fcomip pop sub pop jge dec rcrl dec f2xm1 mov les cmp out adcl xchg mov (bad) hlt xor loope xor cmc int jnp bswap data16 decb (bad) fwait imul cmp ficoml lods lcall sbb pop pcmpgtb test fistl mov cwtl push add push and jl scas lret lret push sub mov jp cmp movsl iret lock jg cs (bad) add (bad) or movsl fnstsw jmp les fistpl scas or xchg aas xor cwtl mov andl mov aam mov les mov insl mov fidivrl data16 mov cli push enter jno out sarb push push int3 inc jno add clc or dec insl cmpsb or adcb stos std fnsave dec push pop cmp enter xchg dec cmp or ja adc clc sub jg jnp std lcall adc add jo lret or or mov jne ja data16 int mov dec repnz and fs pop dec push mov sub and scas divb icebp cmp xor (bad) loope (bad) pop and (bad) movl lock mov js or fadds rcr out fsubrs (bad) dec pop inc adcl movsb fstl pop stos aaa icebp nop mov inc add add pop aas cld rcrl daa xchg sbb jp in mov dec stc pop inc lods xchg push jbe popa sbb dec dec lock cmp lods cltd dec mov daa je push push stos dec aas xor data16 imul sti xor jg sub and or into or sbbb aam and test int3 lret sub nop fs mov in rclb rolb xor test lcall int test mov lock gs dec mov jnp cmp enter dec mov call add adc lret lret dec icebp dec xor outsl pop cmpsb (bad) sbb std loop roll shrb dec mov mov sbb push sahf push ffreep nop in cltd mov adc jb call sbb and mov fwait int3 pushf test mov inc into je mov dec insb adc lods rorb test jmp lea ret mov pop sub aaa pop test push mov add lods imul push out in jne call stos mov ss aaa inc ss sub cmc mov inc cmpsb pusha lahf jmp stos pop jae cltd into cmpsl mov dec inc rcll (bad) icebp call pusha aaa lahf jecxz push xchg test pop or inc mov xor insl imul jl jb aas mov cltd inc mov push test popl and icebp sub fisub aas push cld xchg xchg fbld xor add scas into aaa jmp and pop mov pop int3 jo fildl fdivs cmpsb mov shrl and js jmp (bad) inc enter mov sbb pop sbb mov lea jmp xchg dec dec sub adc add mov dec push mov lret or xlat jmp push (bad) lock push stos mov mov inc es mov or or gs (bad) mov outsb repz xor mov daa out sahf pop aaa lcall int3 ret jle nop loop (bad) scas pop push out mov fisub mov sbb (bad) sub dec push xchg dec sub xchg xchg sub pusha push icebp mov icebp les sbb pop in arpl or xor rcrb push jbe sub gs mov in fsubr cmp test mov insb aaa imul clc stc iret xchg jl repnz ret inc aam mov std rolb push repz add shrl pop sahf clc inc (bad) cwtl repnz jmp sbb cmp repz mov mov pop fstpt sarb jle inc test popf mov pop mov rcrl fstpl xor pusha jb jp lods out repnz subb xor xchg and inc cld jecxz dec cmp pushf cmc cmp mov sbb mov push pop out sub jmp mov orb mov fbstp idivb inc mov (bad) dec xchg lock imul clc loop and nop push les xchg and add sbb scas or js nop or sbb lret out cmp sbb fxsave dec pop and daa xorl fisub dec nop push mov or clc mov stos cmc loopne or push imul arpl adc adc adc mov popf sub cmp (bad) or ljmp push and or sub mov int pop xchg adc icebp xor loope insb jae mov shrl ds icebp stos lods insl cmp das inc push stc or stos aas fistp je mov push xor stos ss test sti rorb daa sub fidivl je sbb leave fimul mov dec fistpll repz jg xor jae rol aam mov jnp test jl cmp cmp out sarl fisubrl dec push pop inc test cmc cmpsl mov test xchg fsubs es jge,pt gs pop jno pop or sbb in xchg push stos push or pop and push mov cs arpl push shl jle jae aad aaa mov int cmc jb jns adc or lahf pop dec dec or bound push fsubl pushf movb mov daa xadd lods cmpsl mov test sahf add mov leave cli cmp push mov inc pop fimul adc adc cmpsl push cmpsb sbb stc sub cmpsl popa out adc cmp in aad (bad) or aam cli mov dec (bad) data16 ror mov sbb dec cmp jbe pop icebp iret lcall test fstl jmp jae scas mov push push push daa or (bad) pop adc fwait pop sub mov stos sti mov xor xchg call cmp int3 cwtl mov sub pusha outsl or mov xor fdiv and jecxz pop mov nop aas fdivp push and jne (bad) sbb cmp dec push loopne mov cld cmc in xchg cmpl js arpl and inc add add nop lahf mov mov add add rolb pushf into out pop ljmp or push lahf xchg roll leave insl inc je rol push (bad) mov adc jne sbb cltd add in xchg push sar adc movsb pop xor (bad) mov xchg mov lds or cld jb add add (bad) pushf cmp jmp jg inc (bad) jno cmp push sbb ss xchg aad pop stos mov es dec test (bad) mov jmp aad cli sbb enter cmp scas gs stos mov pop push stos ret sub xor repnz mov lds inc ret pop (bad) stos xor mov mov add mov (bad) xor loop cs sahf (bad) clc dec loop fcomi jmp sbb lods aam mov ror icebp xor (bad) fisub jbe loop dec xor mov aad add jl ljmp xor shll inc ret dec (bad) jge orl leave adc pop xchg lahf mov cmp addr16 int stos fdivs fnstsw (bad) icebp (bad) jno jecxz mov cs xchg lret pop pop sbb ss sub js push xchg or jne ja or jp fs xor sbb scas xchg lods pop push fsubrl cmpsb into xchg dec dec int3 insl xchg pop data16 in outsl daa sahf cmp cli add mov mov jno mov push cmp subps cmp xchg (bad) xchg stos sarb psraw jmp ds dec or cltd and sub dec pop js dec arpl les mov addr16 jns jl ffree cmp out or inc int imul fwait add cmpsb fistl imul lcall outsb mov jecxz jge sbb add cmp cli js lods pusha ds inc pushf or loope (bad) and cmc aad adc outsb (bad) inc nop xchg rclb jecxz fdivrl cmpsb enter imul push pop pop and xlat sahf lock std xlat (bad) mov rcll xchg pop (bad) in and aam add ja outsl into imul inc cli cmp xchg cmpl sub mov pop and sti cltd mov pop push rolb daa and mov fwait out rorb inc out ret add aaa in addl jbe push into lcall lahf aas lahf or insb imul jne outsl in fistpll jno add jg outsl sahf and icebp sub lods lcall fistp pop sbb adc pop fcom stos and rclb imul div fwait push out ljmp outsl enter push xchg fisubr (bad) sbb and push pop push jmp stos mov (bad) jns lock rcrb and mov cltd movsb pop es mov mov adc lods xor repnz sahf pop cs loope pusha je fiaddl push sbb aam pop popf sbb xor sbb hlt sahf call mov cmp xor and dec push mov sbb repz divb iret add lds dec push cmp or cmp out inc and loopne fist pop aad mov (bad) out into push repz or fmuls fs xlat cmp (bad) aaa mov arpl jmp jns int push lret (bad) mov jo cmp aas loope adc fistl xchg fdivs ret xabort xor aaa lds mov pop clc mov mov dec jmp call js js lock sbb in (bad) notl push ljmp jo lcall (bad) outsb pop mov push pop fsubr lahf pop jbe push cmpl mov lcall adc sti cld lret cmp nop jmp jnp mov or or and dec cli jp (bad) push cmpsl or xor push imul mov mov out jo xchg hlt xchg jne or rolb xchg fcmovu (bad) mov or push imull lea push and jl stos iret in mov ds dec sbb loop add les xor mov lahf pop movsl ja adc es push (bad) cmp imul mov dec jbe es sub jecxz rcl mov inc dec mov pop lds data16 cmpsl dec loop jge ljmp and dec jne sbb insl mov adc jecxz or dec push insl lea adc cld add into jmp (bad) sub popa mov push xchg ror repnz test popf (bad) jbe in dec popa lods xchg jg test dec lea cmp rcll push mov imul neg jno dec stos cmpsl cwtl mov mov lahf in mov push dec mov mov jns lods mov ds fwait les test ret push lcall push repnz xchg lock or cmp cwtl xor lock xchg cmpsb jbe ds xchg mov and subl mov inc loopne cmpl (bad) lea add int3 je jmp sub pop lods repz aam inc jge iret aad push aam es idivb sub rorb lret cmp sub pop in lods test mov negb dec and jle sub repnz fwait cltd push xor adc mov inc shlb mov mov pop aas jge leave (bad) pop ficompl sbb dec adc loop mov xor or mov (bad) mov test pop ret fidivr xorl pop mov push mov addr16 scas sub idivl push mov mov add add nop dec divl int add and mov jle dec pop cmp lahf loop fistpl in or add cmpsl cmp pop xchg adc arpl mov mov loop or push sub imul sub insb add and mov mov scas (bad) icebp push fnop sub or cld and inc xchg in loope push in push pop sbb popa shlb test add adc xchg lods data16 or cmp sbb jae out dec aam test push lods jno mov sub jecxz dec dec gs pop push add imul aas inc stc sbb or pop xchg push ljmp hlt (bad) dec rcrl je popf jle push ds orb fsubs jmp lahf lock shrb test or jp lock jl lahf inc sti mov inc cli in call daa arpl test scas sbb xor lea ljmp push movsl or or mov push rcrb out (bad) adc hlt push test push cmpsl cmc jecxz test andl in mov mov sahf dec cmc lock dec jb cmc data16 int or notb addr16 (bad) xchg pop (bad) jo scas sbb lahf in aad sti mov and push adc (bad) les xchg push mov fsub xor sbb aad mov push (bad) inc mov stc mov aas dec mov rclb and (bad) lods imull imull mov add lcall adc mov int in push test and mov add lock sbb outsl loope bound mov and (bad) enter mov dec mov fsts ja push mov dec imul das int3 sub push int3 lods adc arpl loope xor int3 kandnw and pop jb std insb ret jecxz lcall dec cmpsb call scas inc decl lret xlat mov aad mov incl mov aas cltd pop add pop xchg and neg dec xchg scas mov push mov dec pop add jae cltd lret jne pop stos jmp js add mov rcr (bad) adc push push pusha add inc call inc lea xchg in adc dec push adc (bad) inc pushf inc loope pop mov cmp popf or jl,pn adc xchg lret arpl es (bad) push push fildl pushf pop pop in enter or xor sub adc adc aad pop outsb notb lret bound xor add lret daa jge imul outsb pop movsl xor mov sub arpl dec push icebp shlb push jne xchg out cmp shr sbb loopne xchg enter adc mov pop into out sub xchg ss cmp inc lea repz push xchg cld out sbb adc push fwait dec cwtl cmpsb mov dec push jg cmp jmp fisub and in add enter cli and iret lret (bad) out aas or mov outsl in in loop adc shrb dec pop push pop unpcklps cmc hlt xchg idivb pop push add add aas lds adc cmp pop add pushf dec mov jne and dec fdiv jge pop add or mov push inc mov xor mov mov icebp lods fnop lret mov sub out rcrb mov push imulb inc cltd xchg push cmp imul ss sub cmpsb es xchg insb push and dec or jbe xor mov imul dec mov mov dec or (bad) pop in mov jecxz repz mov add xchg sbb mov pop fs movl cwtl mov out stos dec pop shrb dec pop add dec xor jae cmpsb rorl les mov cld sahf xchg or jg out loopne add sbb jecxz stc and adc into iret test std push adc adc int aaa test rcl fsubs (bad) xchg (bad) mov sbb mov cmpsb mov outsl mov xchg cmpsl jb add rclb daa pop add inc cltd fucomp aam cmp or shll (bad) mulb adc insl out push sbb test sub cli fwait add test movsl test movsb ja out pop mov call fwait or fwait xor push shlb ret pop cltd pop nop int sbb iret inc push sbb inc mov cmp xchg out xor clc cmp or jmp xor sbb lahf icebp fimull jbe jns lock adc fildll mov clc out (bad) neg sbb fidivr adc or mov jne inc mov adc and jl in mov (bad) sbb popa std (bad) rcrl xchg or jle adc popa mov xor xor mov hlt fidiv mov pop and pop add inc call cmp xor jnp adc lcall (bad) xchg inc les jae or push andnps (bad) sbb cmp jb insl dec movsl aas outsb ret sbb enter sub movl xor and pop pop jmp jo scas stos lods (bad) sti pop aam adc leave jge push mov movsl mov push mov cmp lahf out mov cmc adc mov fmul xchg mov jle inc out je mov push rorl shll xor mov enter leave fimull jnp mov xor stc sar sbb cmp ljmp lahf xor es test or jg sub aam data16 lea mov push movsb xor mov mov test jb int (bad) out jge push movsb decl fwait data16 data16 fisttpll pop leave xor mov ja push rorb movsb adc xchg icebp outsb jae or mov aas sti outsb mov dec sahf push fdivrl inc dec ljmp push mov or je (bad) sub mov inc dec rol iret ljmp out in cmpsb add jns mov push inc loop inc movsl xchg stos mov mov jbe int3 popa icebp cmp inc mov int3 sub cmp jnp idivl push mov stos andl adc int clc push stc inc mov (bad) mov popa pop mov call mov out mov mov inc adc cmp and mov ret or (bad) fnsave sub sahf mov gs fldl out add mov xor mov dec sbb sub sbb push dec in outsb jge fsubs rolb inc movsl mov jns mov mov mov dec or lcall leave pop mov jbe jae push and adc jmp mulb xchg mov jb xor sub dec bound pushf in and (bad) push out (bad) mov cmp adc (bad) add fisubr xchg iret push imul lret and inc (bad) mov xchg data16 add test fwait inc inc idivb out mov xchg mov xchg lret sbb lods jmp hlt cmp int in cmp jns pop addr16 adc fisubrl ds mov cmp loopne push mov sti lcall pop inc lods int3 sarb pop adc sbb call es sub loopne lret aas orb sbb roll out in mov or pop sahf or orl jmp dec cmp cmpsl shl (bad) xor xchg ret jle or mov rcr dec xchg scas adc and lret loopne sub gs outsl inc jge stc lret pop lods push je loopne add rcrb out ja sbb mov push jnp mov cmpb push sub outsl sub dec pop sbb fiaddl rorl dec pop mov je inc cltd sbb in xor nop sub aas fisttpll mov sahf test mull cmp les and loope (bad) mov loope movsb dec cwtl psadbw jnp insb sahf test arpl or cmp adc mov lods xchg subl push lcall push mov pop add daa or (bad) aaa xchg lret jns fldenv jns mov xchg add out pop adc cmp clc test adc push cmp inc or jmp loop mov je (bad) adc push dec mov hlt pushl aad scas or movsl loope stos jo xchg sti push sub sti and fildl clc leave push cmpsl lods stos pop adc cmpsb mov cs lret popf or push in (bad) enter mov outsb sub es les out lahf sub addr16 dec out lcall push stos jl cmp inc sbb movsl sti pop cwtl add mov or sub fadd and adc repnz test push xchg pop cmp adc pop mov out rolb popa rolb mov jns lock sarb cmp pop adc push and sbb movsb (bad) (bad) loope jb pop cmp adc (bad) (bad) call pop hlt lret push mov icebp lcall inc jne push mov sbb add mov inc dec daa mov push sbb ror or xchg mov into lds outsb sbb faddl inc sbb daa mov lock cmp ja mov and je cmc push addr16 sarb call push and int3 pop xchg mov ss sbb pop mov inc (bad) repz loopne sub fldt jmp xlat inc push adc dec inc pop leave into xchg push mov mov bound push sub out cmp push aad (bad) cld sbbl movsb jo pop mov push jg cmp (bad) mov sub xorb pop repz add mov pop mov rolb mov cmc xchg xor adc out das dec flds loope movsb and xlat jl int3 xchg mov and mov xor cwtl leave out cmp pop insl mov jp and sbb inc mov mov mov mov xchg out xchg hlt pop jbe sbb mov lock jge int and ficompl shrl ja (bad) rorb adc mov iret pop jp xlat fwait dec fcom sub adc fdivr shrl fldenv in xor inc mov pop mov xor mov (bad) popa lret push popf js push mov aaa pop or nop xchg jbe js sub fisttp sub pop xor add inc ljmp cmp outsb stos ds es lret sahf xchg push jge sub mov dec jb and fadds mov hlt pop testb scas ret scas arpl dec in les movsl movsl out sahf xchg bound das or mov mov pop jbe mov and daa insb jmp dec dec sub jno mov mov mov repnz (bad) (bad) aas inc (bad) adc ficom xchg or mov or or xchg fdivr (bad) jne inc push scas int3 and imul or jl xchg sub push mov gs iret lock jb rolb cmpl adc jp adc pop (bad) xlat add stos ss in es pop aaa pop push xchg insl xchg cmpsl fs cmc popa and sub mov sbb cld (bad) pop jbe ret test mov lret pop mov sti xchg mov sub mov jge sub out and imull sub mov pop jne test adc or add sahf dec sarb adc loop data16 cmp out fs cmpsb or push mov xor das arpl es mov xor inc out shll (bad) aaa (bad) pushf add sub sub jns cmpsb scas sbb inc xor lret (bad) xchg mov jne scas gs mov or pop (bad) or hlt es imul jnp ss fs (bad) faddp decl mov xor ljmp lods pop sarb jg ret sub jns push cmpsl push in mov dec (bad) ds cmc pusha outsl jmp mov push out cmp hlt jp jbe cwtl cmp push aad dec pop in repz enter imul ss and je jbe push xchg mov jnp sub dec pop out nop dec mov and fwait lahf lcall pop inc data16 push call adc hlt xor (bad) pop (bad) enter jmp cmp xor lock mov insl push xchg mov pushf sbb flds into fs test (bad) jne mull out or push mov sbb shrl push inc add aas pushf adc call push ret data16 push cltd pusha test pop clc sub fnop lds and xor (bad) movl inc out mov shr int stos fiaddl scas ss out and cmpsl inc pop imul test sub push (bad) or das inc sub mov cmpsb adc mov ljmp and push or xor push clc ja mov pushf sbb and mov addr16 jg es fsubrl ja fsub jns push insl xor adc xor inc push jecxz xor or fsts adc imul lods and xlat ljmp imul lahf insb mov cld nop pop aam xchg pusha aaa loope mov outsl or ljmp cltd loopne lods outsb fcmove pop xchg inc int nop adc mov mov add int pushf lods and mov adc jp xchg or xchg jp sub dec sbb iret add insb jno int3 jo fistp and cmpsb stos lret insb cmp int3 mov scas push xlat and fdivr stos sarb ret (bad) jg inc inc jnp pop popa jg mov test iret or (bad) aaa xor enter dec shrb mov repnz repnz lret test inc sub fldt jo test pop mov clc clc xor ret aad fadds inc repnz gs loope push pop sbb mov push push mov dec cltd inc jmp jns jne fxch outsb sub cli adc cmpsl cmp jp pop jl fs pop cmc sub cmc ja int and lds inc inc pop or hlt xchg ja lock jns dec hlt (bad) pop jmp aas (bad) push fisub mov add clc sti cmpsl out dec dec lcall pushf lret inc rcll fidivr psubsw jns in and ret stos aaa dec minps insl dec mov (bad) out adc mov les lret in out sub ljmp inc and fstpl cs mov js push fwait neg les pop mov shll rcrl outsb mov cmp pop in sbb outsl iret sub ja dec mov sbb sbb mov in fist sub sbb es jo push sbb or lcall int int adc mov out pop pop sbbl aaa imul and xlat mov push add mov (bad) and fidivr (bad) into jge or dec cwtl jns cli cs sbb pop mov inc jb sbb sbbb imulb pusha push jge push xchg xlat push xchg loop push push xchg sbbl xor scas adc jl iret lods inc mov push sub pop sahf push push fisub repz insl lahf pop pushl shlb mov nop jecxz sub inc iret bound dec leave loop pop jae scas popa add adc mov lret call jae cli xchg xor xchg xchg arpl mov inc repz mov push rcrb lock dec test jbe rorl push pop bnd dec adc mov faddl jb idivb das cmpsl inc sahf insl or testb stos (bad) insb inc xchg push and aam outsb sub cmp push fwait jecxz mov ret cmp push movsb inc aaa jb cltd xchg mov lock pop mov (bad) xor cmp sbb repnz sbb dec pop sub (bad) scas jmp popf ret push lcall cwtl int3 fisttp or pop jle es push push xlat iret ret sarl insl (bad) jnp (bad) jo push pop insb loope iret dec or sub add sarl idiv stos lods cmp jle mov call call mov jl sbb test cmp xor xchg dec sbb inc sub fucomip mov popl xorl clc test das xchg and sbb push arpl in clc mov xor lea and scas push clc aam pushf test jne mov mov dec (bad) mov pusha cmp out jns rcrl aaa jp sbb popa xchg sbb adc pop fwait xor mov aas or jecxz dec sbb mov or sub (bad) cld dec jge dec jae push mov adc mov push daa les lods (bad) mov dec and mov ret dec and mov sub pop (bad) sahf jbe (bad) pop or lret fist popf lods mov out jecxz push (bad) sti adc jge loopne cmp pop fldenv rcl add int3 out mov fsubrs aaa inc out ds xlat idivb aaa sub push mov or test jmp andps shrl lea lret insl test lods ret out jae mov scas movsl push aad test or or (bad) or aaa mov in xchg cmp pop repz push mov dec imull lods (bad) cmp mov out jg mov (bad) dec and inc mov test mov ss jbe jecxz inc push fcmovne decl cmp inc in cltd inc adc cli les adc les jae add or xchg push repz ja addl shr fbstp repnz xchg mov sbb mov aad not xchg or wbinvd inc mov and and repnz and jle jnp enter fcomps inc jp lods popa ljmp sub adc inc cmp lcall inc scas xlat lods jle jae (bad) xchg mov cmp add mov sbb lcall or nop enter xlat jmp movsb push dec (bad) adc mov dec cmp lret inc mov int3 orb xchg rorb ret in lds cmp mov insb test mov or fwait cmp mov mov rcr cltd cmpl jecxz or xor push mov fnstcw lock pop adc sub mov andb mov cs dec cltd mov cltd stos lcall mov scas fbstp les aad push push movsl ss inc pop cltd xchg pop jb icebp (bad) mov add pop push shlb fs test mov xchg or inc std flds or add jge pop inc int push repz jmp sbb add ror sub mov stos pop mov pop out insb pop mov or jg jle jl outsl aaa and (bad) test xor movb or rcrl xchg xor lret movsl ret enter cli movsb push jo cmp pop repnz leave test cmp xchg pop stc inc and fisttpl fild mov lcall xor scas clc cmp mov or mov bound mov sbb cs sub (bad) pop and test cmc shrb test ja cli mov jae dec jmp cs fcmovb sbb dec mov sub sub xchg xor int add jecxz jae mov adc dec mulps pop xchg sbb shrb pslld jle jae movsb jge cmpsl mov mov (bad) push push insb clc inc jge xchg cmpsl cmc xorb mov iret ret mov xor dec in clc mov in mov or and nop jle mov and mov loopne stos jl scas divl jle lods in sbb pushf xchg lea cmp out sbb leave lret cmc cld cmp push push cmp sbb insb repz pop xchg test and adc mov pop bound fs ror cs call lret or flds xchg xor mov enter sub or inc xlat jnp lods or push cmp push or mov (bad) dec xchg xchg xchg inc or or mov add fadd dec xchg cmpsb and addr16 pop xor jl sub mov dec push or jns mov (bad) mov xchg or xchg xlat fldt pop mov fist fsubp ljmp jecxz ret repz lret inc mov sarb inc and lock fmuls inc idivw fucomp and sarl inc imul sub orb and std jg into jmp jge or lods jo stos jmp xchg mov push js jno dec xor mov mov lret ss pusha rcrb add test mov add ret sub pop xor add aad cli test pushl inc aas xchg xchg divl cli shll sahf pop es xor ss shlb js sub xchg sbb fisub cmp (bad) push mov dec mov adc push int pop (bad) ds push jecxz (bad) sbb shll les ss arpl xor add push jnp shrb pop xchg mov fcomp sarb iret sub adc or aaa adc fwait fs mov sub mov push mov pushf sahf out imul into fwait mov out hlt xor dec mov out or in add cmp sbb scas mov inc xchg (bad) cmp loope push jle xchg popa cli fiaddl push sarl neg pusha sbb cmp push (bad) mov xchg jmp jb int3 xchg addr16 cld insl jl das insb pop dec js push test mov push (bad) nop cmp mov fsubr lods es int fiaddl jl mov lahf into xchg call fld push cmp jmp sbb stc out adcl mov or push rcrl lds or push xchg pop inc addb ret xchg in add sub (bad) rep dec jae fistpl test mov sub push dec fisubrl mov mov mov xlat lods cmp lcall hlt cltd pusha pop sahf iret cwtl (bad) popf scas mov dec mov (bad) jge dec out out add (bad) cmp sbb mov imul mov mov mov push push shr call push mov sbbl xor mov push fstenv imul and xor rcrl mov lret adc lret movsb push in dec bound push xchg fcmovne jl xor mov inc or cwtl jp ljmp and (bad) or (bad) cmp repz sbb int mov ja lods push mov inc xor jb dec sub push mov push lods pop lahf mov mov mov push mov push out iret cwtl jno pop fidivl imul pop add dec ficomp cli push xor fild dec xchg push pop out inc daa jl mov loope push jmp push cs jecxz sub out arpl and daa scas cld stos rorb mov enter and cmp in sbb xlat fdivp cmp or mov (bad) and inc in test pop and inc mov pop adc jo rorl test sub cmp mov sbb in or mov in sbb iret pusha bnd jge cmp test jae test xchg push jae adc mov ffree push add pop or lods push push pop or jno cs aaa cmpsl push mov add mov rcll fisubl dec int inc aas mov dec cmp push jl ret pushf icebp jmp shr and data16 mov out push cld inc aad smsw adc mov dec inc xor and lock jl mov addr16 out dec cmpsb mull jecxz mov hlt adc adc enter inc call mov test icebp cmpsb scas insb movsl cmp xchg push movsl (bad) repz cmp loope daa xor imul scas testb cmp out pop xchg mov out lcall ljmp rcrb mov rcll jle (bad) mov mov cmp mov push xor adc cs mov adc test loope xchg push push pusha and sbb sub cltd loopne popf orl ret mov lahf lea push fistpl and push push inc loop jp aam sti xchg or stc adc in jnp push xor jle nop aas ds ficompl jmp jecxz pop jnp test mov mov fcompl or sahf sahf orl mov sbb std mov popf mov ja pop outsl adcl jne mov int3 mov push out inc repz fisubr pop bound gs in fstl sub fcmovnb jle sbb or and outsb jo add and popa int ja xor sbb jbe (bad) pop push ret dec dec pushf sbb lock mov adc callw adc fwait dec inc pop fsubrs ds cmp in xchg inc add cld push adc xor mov test nop mov push popa push cmp pandn out test std push mov jne jne popf push lcall js (bad) (bad) sahf xchg adc sbb loopne cmpsl adc daa sub decl or loope test movl dec adc sub mov pop inc push repnz popa (bad) push out pop jge bound pop or xlat xchg xchg lcall jecxz inc in insl (bad) jne mov jo cmp push xlat cmp and in clc test xchg push and orb bound inc adc fwait stos mov mov pop je pop jo pop imul sub sub cmp cmc lret nop jecxz (bad) inc mov cmp push sub in aad jae js popf shlb xor inc and inc pop inc jb fcmovbe fimul stos push push inc ror into aas push jnp pop ret lds push inc xchg pop icebp or mov push mov pop loopne in (bad) and cli mov xor (bad) imulb jbe fsubrl aaa push lret jmp nop xchg pushf aas push fldz call movsl and jp jbe pop scas xor sbb lcall push out dec lds int3 and mov outsl ja ja sbb dec sbb js mov movsl or out outsb insb mov addr16 repz pmaddwd pop jecxz and lret test iret xor lods jmp pusha push fidivl mov scas xor stc push in les dec push dec inc dec cmp pusha inc inc das loope sbb pop sub test dec arpl xlat push rclb xchg sbb aas negl into inc call ret adc (bad) (bad) ja loop pop lods les sbb cmp test mov mov inc sarb popf cwtl inc adc icebp adc push insl iret dec es push jge cmp add mov xchg in mov insl fldenv je xchg cwtl push in addr16 cld pop jno ja dec or pop inc dec test les push (bad) mov das mov xchg std inc mov mov mov aas pop mov mov stos jo lock lahf scas sahf lea cmpl xchg sbbl bound lock push sahf mov push sti sti outsb mov in cmp add jno mov or aaa (bad) fdivrl (bad) or add dec je or cvtpi2ps bound insb sti out and push lds lret dec sti enter mov xlat cmp pop mov jb into and js test dec push mov xchg adc xchg cmpsb dec outsl dec out in movsl dec mov dec pop adc rcrl loopne es lcall pusha push pop ja dec in test xchg mov aad pusha mov pop aam xor jnp adc push es xorb and inc call dec sub inc jle inc loop dec sub addr16 nop mov (bad) and mov imul das fdivl jns inc fimul aam outsb outsb ljmp adc or iret (bad) or push lret adc push cli or jno cmc sbb fisttp cmp sbb adc dec ret sbb push scas adc jecxz adcl jns in and jg hlt mov pop mov adc or aas xchg ficom push gs (bad) scas loope sbb mov or shll fidivr sti sub dec sub (bad) mov in xchg and cmp sbb cmp xorb adc add insb fild add adc jno push pusha neg pop lods aad mov inc and cmp aad cmpsl mov gs inc scas inc ds (bad) iret data16 sub das mov cs cmc dec ret roll jne sub push mov imul and or add in arpl sub pop pop mov pop movsl or lea les fsubrl xchg dec inc dec movb fnop lods mov in jl pop mov xor pop inc jmp add adcl shlb insl subb pop pushf clc popf aas stos scas das pop mov cmpsl lcall xchg sbb data16 jae pop test xor lods cwtl shll mov int test xchg mov insl stc call outsb js pop imul adc cmp aad xchg jp sbb push insb rorl mov data16 dec test cmpsl call push scas mov mov js (bad) lock inc sbb cmp push and add jb lea pop xor mov mov pop repz imul imul repnz cmc gs pop out faddp lret mov sub aaa jo push push xor sbb sub pop push ja fistpll imull (bad) ss sbb or and mov pop push loope daa (bad) stos mov push inc loope mov jmp xor scas add push mov mov gs cmpsl (bad) loopne sub pop inc mov test jmp inc mov mov jp mov xor int mov xor leave adc add les out xor div xchg push icebp cmc mov mov and lahf pop add jmp (bad) mov mov data16 imul sub test data16 movsb mov int3 sbb data16 cmp int xlat stos pop dec outsb stc push test dec xor js mov push push shr clc (bad) in imul (bad) incb jg mov or cmpsl fdivs sbb xchg xor insl xchg cmc pop iret insl sub shrl and mov fistl jg dec jo icebp mov es pop pop nop sbb dec aas push or or sbb xchg loope cmp icebp or cld mov mov mov out mov ret movsl pop mov in mov push inc movsb movsl sahf imul push les outsl cmp aas mov test and jmp hlt inc imul loope sar pusha imul xchg sbb js outsl stos cmp mov inc sbb ljmp (bad) aaa loopne add and lret push in mov xor (bad) stos std adc mov push movsb insl sbb mov fucomip or inc mov mov in pop adcb ljmp clc xchg fwait enter shlb mov pop test cmp or push test imul or andl daa pop repz lods stos ja pop lret fsubs in std mov mov fs addr16 enter lds push xchg fldl add jo mov mov cwtl lods data16 aam fxch loope lock cs std ja jno or int shrb push cli mov call xor jae ss in xchg lcall loop push repnz push xchg inc sub push dec lock leave subb (bad) decb xor lret xchg rorb sub lahf js sar cli xchg sub je mov arpl mov popf push ljmp xor dec aad rcl jae dec cmpsl fisub das push fidivl mov (bad) jmp pop fimul and pop cli jb rcrb out mov stc enter lods jl or fisttpll xor mov cli in clc scas push into rcrl mov je rcll sub fldenv iret fmul inc pusha movl mov push push pop fsubl jp xchg cmp (bad) (bad) push jmp jne ss arpl bound repnz pop lea ja popa fdivrs xchg js subl dec mov fisubl sub sbb jmp fdivrs gs decl pop ljmp push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret es or ret mov cmp es xor cmp adc pop inc and jnp add pushw lods adc jnp add pop ret cmp int adc stos dec push out mov (bad) and (bad) repnz repz inc cli cmpsb xchg jo cmpsl or out adc xor push lods adc aaa ja add push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fcoml lock or lahf fs in lock jecxz out shll xchg cli jnp mov and in dec cmp ljmp ficompl cli sub mov mov cld bound sub loope dec and test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 es loop add scas aaa jge arpl out sub imul mov cld jecxz ret adc subl hlt jbe std jl mov jge frstor cli (bad) (bad) jne mov clc aam xor xor jmp lock decb dec xchg lcall xacquire jg dec into int inc test xorl xchg add (bad) fistl adc cmp mov mov leave mov das lock mov insl xchg lods ret daa mov and pop cmp mov dec pusha xchg in inc movsl add cld mov mov push fstpl jae jge xor cmp fbld xchg sbb xchg stc int3 fstpt and fisubrl les clc (bad) mov cmp cmp xchg cld addr16 dec xchg loope jbe push lock pop pop jl sbb sub jo dec sti das xlat sbb js lahf jb dec dec sub xchg stos daa shl in js divb test pushf cs hlt push pop in movsl dec xchg hlt mov test pop fstp cli jnp andb dec mov jns add ds aam add inc (bad) lret test sub imul movsb sbb jecxz xor and sub push adc or mov outsl lods lret ror and (bad) jnp negl sbbb jle xor dec sti mov sub jbe ret mov pop xchg js and nop cmp and inc jae inc loop push call xchg push add jp fbstp out adc mov mov push fnstsw fpatan into repnz push xchg cltd mov jno lcall insl popa cli (bad) shrl sti lcall movsl ss sbb roll dec divb fidivr mov ret out sub xor fwait ret mov leave loope scas aad push sarl cmc mov jge dec adc je repnz add clc push dec and mov inc roll (bad) in cli cmp add fsts in (bad) jb repz outsb sbb pop fstl mov xchg push mov jp mov lods das fwait roll push imulb dec lods test mov push out push and ret mov dec popa ss push push repnz mov mov jp jae pop mov mov imul add ljmp in inc mov loopne lock mov in cmp hlt push jecxz hlt jle adc ljmp inc pop inc and int3 pop clc clc or sahf fwait ret inc nop inc mov pushl push aaa repnz push adc and out xchg xor lods arpl lods shrl adc out ds (bad) cmp sub insb int3 ud1 inc movsl mov stos scas sub lcall push cmpsb sbb dec jmp (bad) ds adc js adc sub cmp jo lahf test xchg hlt ja int3 sbb mov leave sub and jns inc dec mov out shl or inc mov fisttpll mov test aam fnstsw sub es movsl pop lret stc jbe imul ss and or sbb xchg call insl pop mov and mov test movsl ds ret ja cmpsb mov xor mov fwait pop push stos jns mov adc jl bound cmpsb jge popw data16 leave sarl xchg mov fstps out jnp jne mov pop stos stc xor jp enter (bad) cmp loop xlat (bad) dec adc jge int3 jb cmp mov lods out es xchg stos js mov (bad) xor test (bad) mov pop cmp out mov or jmp push rol out aaa call out imul push xor test pop xchg aad jns (bad) enter pusha xchg xchg cwtl jo mov jmp andb dec sub hlt stc adc or mov (bad) or inc (bad) xchg sar cmp pop jno mov loope lret jbe inc jns pop test mov lahf xor push in sub in lds mov jg lods jno push mov sbb enter adcl ja adc fsubs mov cmp shrl sbb arpl loop cmp mov test pop test adc and (bad) paddsw outsl repz inc cmp leave xor dec shll jnp lods xor test jae mov mov pop mov cmpsl lods pop js repnz add mov add mov out or mov pop cmp popf cmp or cltd in js jg aad fwait pop cmp pop sub push push push xchg stos mov (bad) jp (bad) mov mov pop enter idiv add fs fwait (bad) stc loopne mov outsb test mov mov shll call nop dec xchg stos es jae call adc int3 xchg xchg into xchg orb push mov and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 es or xchg sarl cmp (bad) repz jmp and inc enter in and movsl pop leave adc jnp xchg mov and sub adc inc dec cmpsl cmpsl push mov xchg cmp xchg mov cli scas jo cmp sub (bad) in out jae into or mov cmpl jne xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 es or xchg xchg mov out enter jmp and pop enter sbb xchg mov and jg adc mov loopne push mov leave adc mov mov add fimull jae into inc mov mov outsl ss push fmuls aad push cmpsb cs add (bad) out push jnp jl out das hlt or jmp xlat insl mov mov enter je (bad) pushf shl gs aas push hlt mov mov xchg dec add xchg fnstsw push xchg imul jno (bad) pop lods je xchg adc outsl push mov mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 es loop add pop mov cmp cwtl sub push fisubl (bad) das test movsl pop mov ficom nop pushf movl movl movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 and inc inc (bad) inc int3 xchg (bad) mov dec or sbb sub out mov mov xchg dec aad ret xchg cmpsb and rcll mov int push subl decb and rcl xor imul fistp insl adc mov flds fwait movsl bound mov add scas push cld insl sbb inc aaa adc xchg repnz stc mov enter lahf lock arpl sub pop repnz faddl clc add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg xchg sub daa mov adc jne iret (bad) jbe fcoms jecxz mov push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 es loop add mov shrl push std adc pop in jl addr16 test sub in (bad) aaa adc xchg scas fstl or call jecxz,pn mov and xchg dec xor pop xor jnp inc lock icebp int3 aas jmp movsl push xor loopne sbb mov mov sub jmp rorb movsb loopne inc lret aas sbb mov jmp sbb fwait xchg enter fnsave aad mov xor loopne or lcall in mov xchg rclb xchg arpl add fstpl leave or inc movsb cmpsb int3 movsb xchg xchg dec push std jmp outsb inc xchg movsl repnz aad aam cli inc sub jnp fisubl inc cmp pushf fcompl sbb cmc pop iret push outsb gs cmc leave cli dec rorb push mov cld (bad) stos mov adc mov xchg or mov daa add and cltd pop add jl pop cmpsl pop add and lods in shrl rcrb fistpll push pop shll pop ret jb jl das (bad) insb mov negb fwait pop ja mov inc aam mov fidivrl and test pop (bad) and loop lcall bound adc adc inc enter fs mov stos lret jnp mov hlt in lret sub mov outsl adc sbb int call fldl cmc or mov je mov sub es in (bad) sbb mov pop mov mov cmp das (bad) stos pop lds pop lds mov push jne dec push mov mov jp sub sbb dec lcall jecxz dec xor pop ja xorl mov mov pop or and dec vmovaps dec jl jecxz aam sub mov push xchg lods cltd mov pop xor inc outsl rclb sbb movsb mov xchg mov cltd test test aam push jae add bound mov xor pop jne das or dec loop dec int mov pop xlat push js test jle mov jno lods mov es lcall ljmp jge jge lock jb stos push iret dec mov icebp cmp mov mov out (bad) push jg push push ret sub sbb adc mov sub subl adc and test stc daa (bad) mov adc cmp popl fsub mov scas adc sbb xor cli ja enter insb mov jge cwtl cmp pop test mov in inc pop xchg in hlt cmpsb or sbb sub cmc jne aad (bad) sbb pop cmp adc stc loop jmp fbstp jl mov popf sub mov test movsl sub ja inc inc popf js lods pop (bad) push rcrb push sub mov pop or repnz pop or push rclb das or mov stos dec js mov push sub sbb das lcall inc pop mov push mov idiv jge xchg ficomp lcall data16 pop lret xor xchg loope or push push outsl cmp test xor add out add lret adc cwtl gs adc inc negb push pop insb xor stos and popl pop test lods fimul mov mov push popa into add dec jge mov jecxz mov mov insl je ds mov xchg or mov jns sub lea repnz (bad) and out mov rorl xor cmp lea xchg into xchg adc cmpsl mov popf in stos sub fcoms outsl je leave add mov inc jne inc jae pop and xchg add jge push fnstcw gs mov fistl movsb in shlb push aaa stc pop jns in roll daa std xor (bad) imulb inc fsubrl and test cmpl inc sub (bad) xchg out inc jno jne cmp mov gs mov aam mov movsl inc or xchg fnstsw mov lods popf ret loopne adc loopne add inc inc arpl xchg push sarb sbb (bad) roll test decb mov iret orb sti pop dec xchg dec lret mov out adc stos enter mov jge xchg sub movl cmp adc mov mov push sub pop js repnz je xor adc pushf fmul cli pop stc add pop sub insb pop lock push in or es xchg inc mov adc es adc popa dec fnstcw out mov fild in inc jge call adcb pop add xor loope inc test push and push cld imul test ds mov pop push (bad) leave ja mov scas inc addr16 (bad) push jg cmpl scas out xchg sub icebp aad ret (bad) lock out xchg sti (bad) leave xchg push je adc xor (bad) sarb cli jge sarl nop inc and sbb pop int call pushf or adc loop rcll inc pop aam and cli mov mov dec cmp add adc daa aam inc jns lcall in out imul inc daa sub sbb and nop adcb sub mov dec adc push ja mov and add in sub pop lahf or or cwtl sub mov test xchg idivl mov dec hlt int adc sbb dec outsl fnsave push pop test xchg mov and mov cld xor cmp lods sarb jl jecxz push insl mov jecxz out stos pop dec aad inc ja gs fcmove dec (bad) or jo div pop jnp jge (bad) into pop sarl mov out pop sbb lahf cmp pusha xor popa outsb mov in cmp mov pop sahf pop xchg adc inc cmp jle mov or mov ret notl outsl mov adc inc insb (bad) ss (bad) add into insb dec arpl movsb dec into icebp sti in lock xor subl jmp inc and lea mov sbb popa out sahf dec dec dec sub call xchg outsl push adc mov call lahf lock inc std jns loop test jl xchg xor dec cmp sub fisubl jns dec fbstp addr16 movsl and arpl (bad) sarb lds or fwait jle fs inc mov push lds rclb adc iret adc ljmp mov jle in jp jae insl or inc mov add and iret test dec push mov push hlt rol repnz int dec cli (bad) popa das ret daa push fnstenv add xchg mov cwtl pop test xchg das cmpsb (bad) imul xor mov inc xchg ds mov jno rcrl fmul (bad) dec cmp dec mov push test jmp cmp idiv divb or in les (bad) mov jle lods (bad) je in call imul sbb cmpsl jns xchg cmp push dec fyl2xp1 sbb mov add lea ret jmp and push cmp fistl sahf pusha cmpsl pusha jg pop and cmp ljmp lods popf mov jmp and psrlw (bad) jmp pop fcoms pop dec mov cmp test mov call pop pop fisubrl jbe mov push jae sub and dec push jmp pop rol sti pop xchg clc fisttp cltd fstpl test (bad) negl mov ljmp mov notl lahf fs shrb mov push imul xchg xor push adc test ret xchg je cwtl mov mov inc sub in das (bad) dec test repnz mov dec dec mov xchg sarb out push lds mov fnstcw (bad) roll das push and popa nop inc in pop out cmp adc out add lods xor mov inc inc (bad) aad sbb loop inc (bad) jmp inc repz add sub pop or inc xchg outsb mov out fdivs mov or xchg loope xor adc xor (bad) out push mov pop sub dec push inc lret test iret mov (bad) jo dec adc push adc lods mov mov mov pop inc sahf (bad) loopne nop mov (bad) push add rorb dec call out xlat fiadd rdtsc mov test pushf cltd lcall insl push mov (bad) xor xchg push cwtl fdivrs xor dec cmp lret adc push addl inc es ljmp loope es mov mov sub pop or ljmp jp dec int3 sti (bad) out xchg sbb js lahf xlat mov movb inc adcl jge addr16 in out sub cmp in push cltd fnstsw pop dec xor into scas (bad) mov cmpsb jo mov das adc fisubr shlb add insb cli xor push xchg mov dec sbb sti jp stos push adc lret and movsl test push xor js sub add push jnp xchg test cmpsb adc fucomip push popf mov mov adcl and fs insb sbb mov dec or dec outsl mov sub dec sbb pusha lea faddl jae into jmp jnp fimul out xor push insl mov out shlb jb pushf cltd lods mov leave lea sub popf aad lret lock test mov movsb jge scas (bad) js adc xor xchg ret loopne insl cmpsb repnz popf cltd dec push xlat lahf pop xor nop xchg ret dec les push add xchg bound push outsb pop out or lds and cmp dec and mov mov inc jns mov mov sub rcll push mov push aam call ss lcall mov fcmovnb sub rcpps jb mov gs sbb mov jo lret cmp sub popa dec les loope xor inc lods inc pop insl test rorb jle pop imul montmul cmpsb and pusha or mov les sar rcl (bad) jp pop stos sbb (bad) int pop test (bad) mov pop cmp inc jp (bad) int fs data16 jge or (bad) xchg orl popf rorl iret pop sub push es pop cmpl pop outsb fldcw sub jb add iret int mov addr16 mov pop pushf adc inc mov dec xchg ds mov inc and mov movsl movsl call adcb lods (bad) sbb cld subl jnp mov dec dec jnp inc aas popa rol int3 clc insb jns add mov mov das jl psrlw (bad) xchg inc shl cmp sti or jo cmp sbb fisttp dec or xchg hlt pop das or adcl sbb rorl jmp (bad) jge xchg fdivrl xchg repz enter mov rcrb fucom fwait mov (bad) repz sub adc inc fsts out ficomp std sarb repz stos xchg loopne (bad) out pusha xchg lahf dec cmp aaa pop (bad) addr16 call cwtl xor aam mov shr mov cwtl mov and cs and push jp xchg sbb add mov mov xchg fisubrl popa xchg ja push iret mov les cmp lock fdivl mov ret jmp mov aam ljmp push add daa rorb add or or xor xchg add fsts popa insb jbe cli popf lret xor jnp mov inc inc outsl add rcrl out icebp jbe mov shll jnp aad cld stos (bad) jo xchg mov das mov cltd (bad) adc jg adcb outsl pop shll scas test sbb aad enter lods xlat adc pop lods test add fcompl lret arpl gs and fwait inc mov repnz insl arpl and (bad) je push pop stos inc xor int3 subl inc sbb rclb pop in lods ds jmp hlt popf into dec sub ds nop pushl inc push push outsb jno pop stos fcoms enter and xchg lret mov dec lfs mov aam mov lods orl (bad) or shrl lahf lret mov andl aam lret int3 xchg jge mov xchg aaa outsb inc lcall jecxz loopne add sbb ds dec sub icebp leave (bad) cld in mov pusha dec add push fstpl pop int3 xchg jbe imull lea dec jge xlat es pop jnp outsl or int3 and mov sub mov js xchg jnp adcl pop sbb sahf js into add mov in mov jb inc and cmp push lods icebp (bad) push cmp jge or pop sbb xor cmpsb mov in (bad) popa adc jmp ss adc imul ds repz cld xor int xlat mov inc jge fisttpll bound sahf jl mov xor pop outsl mov stc xchg stos movsl push jmp push in xchg fsubr dec stos mov mov mov pop dec pushf int3 and mov pop arpl add sbb dec repnz jno and lds shlb lds mov movsb scas cmc mov movsb mov xlat cltd dec and dec push xchg int3 xor inc sub sbb in xchg aaa pop or shll out imul mov sahf add movsl test xor pop aam sub stos pop out fwait popa and cmp ret stc jbe dec data16 jmp and xchg dec sahf mov jl stc shll add inc (bad) pop or daa lock or gs push loope or (bad) sbb xchg xchg mov xchg sbb inc test loope call inc nop (bad) jle in leave push or mov jb pop push lods pop popa mov inc xchg enter push xchg (bad) imul or bound arpl sbb mulb xlat mov pusha jb in andl jae jle xor jb push leave jmp mov pushf popf test sahf dec jnp sbb xchg dec ss mov jmp adc or data16 push jns dec and jo or sysret and mov adc repz leave pusha imul sbb mov lods sbb mov cmpsb adc les ficom lcall push mov aam lcall mov cltd xor push aaa or ss xchg lahf loope pop sub dec sbb lea mov or (bad) stos (bad) ja add cmp and adc cli sahf jb xlat or inc push inc add loopne dec stos movsb jle jmp xchg pop ret xchg or je scas add jbe in jl mov movsb fwait in xor sbb jns in enter pop mov rolb test xchg enter ljmp jle rol sqrtps mov sbb std fistl fimul xor je addr16 (bad) cmp test cltd ret push push mov dec loop orb arpl lret mov in in xchg ficoml or and es test mov sbb (bad) push repnz or les sub cmc lcall out repnz adc sbb fs mov xlat out test cmp and dec bound pop leave mov sti xchg dec in and pop in xlat adcb adc mov push icebp cmc inc mov les mov mov adc aam or cmc (bad) (bad) out cmp inc addr16 mov mov in loopne arpl sbb (bad) lret cmp dec push imul and dec ds jns jl shrl push xor inc sbb lds jge addr16 pop xchg mov push sarl lcall stos xchg dec sbb jle mov stos cwtl lods inc lea jmp inc pusha lahf aad in jo xchg xor push pop inc fcoms cltd cli or push loopne jbe sbb fucomip aad xchg cmpsl pop cmp jge xchg and adc inc out ljmp cmpsb (bad) lock pop jae insl cmp mov test add out pushf jmp pop jns outsl data16 repz push lret jbe les cmp dec and mov insl sbb out and arpl xor mov mov mov fistl sbb mov mov jecxz repz cmpsb xor aam pop sahf mov cld jnp xchg pop mov inc (bad) out mov lahf inc mov lods xor pop imul rcrl and lcall mov jmp push iret lahf lcall mov sbb pusha cmp inc mov push dec stc pop icebp and stc pushf test out mov mov fsubl negl (bad) push and cmpsl push adc ficomp inc stos dec imul push sub clc jmp clc (bad) mov or inc jae ds insb mov sbb rorl lahf stos add dec xor aad arpl je sahf jg,pt in and lods imul shr mov push cmp sarb lret (bad) scas aad mov mov jecxz xchg out pop (bad) dec or (bad) mov mov pop push aad pop insl jge xor imul lea clc mov fs test (bad) arpl insl loope xchg xor mov mov add lock out imul loop add pop sub dec sbb mov mov rorl mov cltd movsb fidivr xchg aas iret test sub push subl dec shlb icebp hlt ret mov xchg aas lock sub js push sub movsb notw dec (bad) mov test sbb je cmp mov sbb pop call test push mov ror push pop add std cmpsb insl push and inc popf shr ret outsl jne dec cwtl adc push les inc sbb jae es daa push or in into fldl pop cmp mov lock (bad) fistpll rorb dec push add std xor jbe mov jo aam divl aad addr16 add mov mov mov mov pop das lock adc out sbb cmp not dec mov xor xchg mov mov addr16 adc insl pop jb test ja int (bad) ret adc fist push push xor es mov dec in stos inc testl xchg cmp jp cmpsl outsb mov ret imul jle xor iret sbb cmp jecxz sub add call pushf rclb sbb mov repnz and insb sbb inc cmpsb cmp dec mov xchg sahf loope lret arpl cmp loop aaa and sti stc andl xor aam test es cli xchg pop ret aad add js (bad) notb rolb push sub outsl mov inc sub mov lret outsb pop sbb xchg mov popa lods lds push cmpl dec mov pop and fmuls push push (bad) mov cld cmp loope sub rcll daa out insb mov adc test add jb scas or sbb pop andb mov jl inc (bad) jae sahf pop movl jb test add loope outsb sahf mov out mov push pushf cltd adc add sti call enter mov nop out or push xor jne lahf mov dec and imul push cmp dec adc std mov fs pop lods jl sbb and rclb sbb pop jmp adc xchg aam mov or outsl (bad) daa dec cmp adc jp mov lret lods and sbb ret std xchg pusha dec mov dec icebp push fs push int3 inc cmpsb imul mov iret cmc scas xor (bad) add add dec into add out xlat mov arpl pushf daa cmp bound push ljmp je out lock adc pop add push (bad) mov pop cmp sub enter adc pop movsl push arpl aad and xchg pop (bad) popa push addr16 daa xchg cmc push pop xor add push je lea lods adc in aas sbb xor clc sbb imul stc (bad) mov dec xchg loopne fcmovne mov sub hlt rorb cmc inc add adc cmp jne push inc push add sahf adc push les xor pop mov adc out (bad) push and icebp rcll scas cmp pop fwait xchg mov data16 push cmp imul and addl jl mov sbb jmp cmp std pop xchg mov sub int3 hlt loope rcll push lds out cmp xchg adc mov int (bad) cld xchg pop inc jb jl lods stc dec loop movsb es pushf mov popf lods iret insb lea fwait lods adc jle add int3 int3 int3 int3 int3 int3 daa (bad) ljmp pop mov stc stc test fmull gs loop cmp jnp icebp xor pop xchg fcomps into mov ret xchg call pop adc xchg pusha mov and mov dec insl add mov inc cmp call pusha add (bad) mov push popa ds test pushf xor inc lcall loopne push jge std outsl stc mov or aam sub ljmp ret scas mov push adcl call xchg je jge cwtl (bad) out lea pop add pop and cmp push mov (bad) mov xchg icebp or inc fisttpll lret mov xchg push test or mov dec popf cmp mov fistp xchg shr andl pop sbb loope mov (bad) insb das mov mov xchg cli call test mov mov push in mov cmp fistp div mov pop xor into jl and hlt add pop fild pop sbb mov fsub pop (bad) xlat push sti dec adc pusha jae mov and mov ds push imul mov aam mov sbb outsl int3 adc addr16 push dec push mov pusha idivb int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 xchg push ljmp test je out cld test outsb or inc xchg arpl fcoms or pop fadds (bad) fsubrs pop hlt fistl or add push movsl inc dec sub (bad) xchg dec (bad) fistl cmpsb es sub (bad) lds push mov push leave sbb mov mov aad int3 inc xchg and out sub cld outsl ljmp adc fs dec mov dec insb pushf out mov sbb adc (bad) sub daa scas scas stos in mov sahf and js loopne popf push out aaa icebp push dec movl or push mov push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aam push adc ret sub lods mov and mov push push sub mov xchg iret xchg stc pop jno cmpsl enter movsb mulb lods cmpsl (bad) mov dec jge sub fstp test mov pop add or clc add adc or stos cld sbb jb xorl ret daa pop jae mov bound pusha test adc (bad) dec mov es data16 sbb mov push pop xor xlat xchg xor popa test push in aam movsb sbb push ret negl imul gs mov and adc (bad) jecxz mov shrb jl xchg push mov dec int3 pop inc in xchg aad xor ds sub je mov jecxz movsl int test bnd ja inc faddp leave test adc mov push dec xchg or mov xchg inc add jbe clc rorb xchg pop sahf mov bound ficompl fiadd jmp xchg inc movsb stos sbb xchg cltd xor xchg into rorb push pop in dec test (bad) mov cli daa jl xor lret (bad) fsubl dec rorb call shrb jg inc xchg inc mov sbb insl out orl mov cmp cmp push in inc ds mov gs sahf dec jbe and or xchg enter push pop mov xchg arpl add sub jg pushf rclb inc jmp cmp or stos es xchg ljmp lret mov jp push add pop icebp pop inc xchg jne pusha loope sbb cli dec xor or (bad) mov jmp iret cmp mov lds iret cltd mov sub (bad) icebp inc jp jae int3 stc cmp mov ja jmp xchg not cmp cmpsl (bad) mov dec movsl (bad) mov mov out dec ljmp and out push inc inc mov pop sbb pop sahf aas sbb or push or pop test mov cmc inc adc xchg rcrl in mov xchg stc mov xlat ja fdivs pop stc push insb mov dec out sub push je jmp insl lcall hlt ss mov jbe and sub insl iret jmp xor nop stc xchg rcrb lods mov mov sahf les leave adc hlt push mov xor xchg (bad) hlt mov mov insb insl pusha rcr xchg outsl add imul repz mov xor test rol loop sub push dec ret pushf sub sbb ror adc rorb xor dec nop fs in xorl sbb ds jne cmp pop je roll (bad) xchg iret scas push mov ss ffreep adc fisubl and leave imul (bad) in shrl (bad) jge (bad) iret dec mov mov push push push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 es loop add (bad) mov push in popa aam cmpl cmp adc mov ljmp mov in dec cmp ljmp in call push cli dec icebp fcomps mov push sbb pop je dec inc enter mov loopne jbe or add mov mov fsubs jecxz iret jmp jmp cmpsl push adcl ret mull mov jge sbb shl sub push pop fnop sarl lods jne xor insl sbb pop adc outsb int3 enter mov mov cmpsl push lods lret mov cwtl push cmp pusha aam orb cmp sti pop (bad) shlb mov sbb rcll lods sbb push push lcall ret sti xchg adc aas ret cltd ret outsb sbbb sub cmp mov fcoms xchg pop cltd cmpsb loope movl and lcall push or iret fcompl stos jle icebp and sbb cltd bnd lahf cmpsb stc sub sbb add lods jle,pn gs mov pushf adc xchg shrb std cmpsb mov push insl out movsb xor add lods ss push sbb fstl cmpsb mov add lds in and lea inc dec scas cltd inc push arpl in push pop das cmc in clc or xchg push dec (bad) sarl sbb fsubr sbb push jne dec je js pop jns push inc mov add ja inc popf ds (bad) sbb inc ja (bad) cmp imull (bad) dec enter repnz dec push out movsl lock (bad) mov and and (bad) sti adc arpl iret clc mov xchg iret cmp or pop inc insb pop test imul sub mov sub insb outsb xchg imul (bad) call xchg mov and push cmp xchg subl data16 adc inc repnz ss sbb jns xor xchg adc add insl insb pop sub push (bad) lds jg sbb push addr16 and cli cmp mov in cmp xor dec push push mov dec lock gs jmp mov (bad) in outsb stc jecxz sub in ds mov push push jo mov and (bad) push loop lds xchg and lahf or xor lcall sbb fsubs jo test cmpsb out xchg js lea movsb cmp sub insl js push fcoml subb test imul dec notl lds outsb out sahf fiaddl decl sbb movsb xchg orb enter dec mov jne pop decl mov test dec jns and mov (bad) dec movsl xchg push pushf xchg pavgw sub aad sti mov or repnz in fcoml dec dec adc or fild std mov (bad) into popl test out lahf cmp nop mov or mov lret jp pop pusha inc data16 addb fild or repnz mov stc jnp ror sub sbb negb addr16 popf rclb ljmp aaa inc incb push jnp mov cmc popf ljmp loop in jle loope jg xchg jle sahf mov data16 mov add sub and inc cltd mov insb fbld in adc lcall fbstp jae loope aaa aas (bad) pop dec repz leave aad inc sbb int sahf in xlat sbb aas loopne inc jb aam mulb test xor xchg leave (bad) adc sub and pop add mov jne shlb sub aam in lahf pop dec push clc xchg xchg fs inc test dec mov or in jb sub sub push cmp sti sub insl dec cmp adc imul outsb loope mov lds cltd xchg mov leave cmp gs outsb enter sub dec cmp jno,pn loop mov add cmpsl lds add lods push push add test in jb (bad) outsl (bad) std fldpi sarb roll add in inc imul sub jl inc outsb push popf mov loop addl pop and (bad) push xchg lock push cltd sbb stos inc out mov and mov inc and and adc mov cmp sub ret xor pushf push movsl arpl fdivl cmp xlat pop inc (bad) cmp mov icebp out sahf pop dec or jg xchg push stos repz jnp int3 test fdivs aas lods sub lods push sbb les iret cli cmp scas jmp inc push (bad) test das dec push ds repz insl jg out inc rcrl cmc repz imul mov inc ds rcll push mov push mov inc or out sarb jecxz or add dec xchg std mov (bad) aad out (bad) mov pop out frstor add hlt mov cld std sbb dec mov divb lea and (bad) ljmp mov xchg addl mov jno cmp jae lods outsl stc rcr jle sbb mov and dec sarb and cli shrb jl cmp js daa xor test mov jl jae sub adc loopne aas lock int ljmp pop mov xor call xor scas xchg xor sbb enter sahf (bad) jne sarb fdivp sub push xchg aas mov mov xor (bad) mov addr16 pop call mov mov pop xchg shrl sbb test test push push ret pop leave pop sub or js test and sbb cmp mov push fwait adc xchg andl retw lret and lods icebp inc leave pop out inc fildll mov adc (bad) fistp dec sub cmpsl add inc mov punpckhbw popa jae dec sahf cmp pop (bad) call out xchg push cmpl fistpll jg xor push jp jmp push lods inc sbb and test xchg push jbe sub cli pop xchg dec cmp lods dec push xlat dec mov lock repnz scas pop inc push dec and mov sbb cmp std aad ret call or daa and clc (bad) ds jns aad mov mov xlat xchg pop sbb or cmp pop iret sub add jne (bad) jnp lea clc fsts pop out and sub lods xor addr16 pop add insl and (bad) repnz adc insl xor mov (bad) mov sub and (bad) sub mov jmp and insl xor clc scas pandn shll adc scas or pop fcomps xchg mov xchg xor sub mov mov jb bnd outsb cmp ljmp dec subb ficoml jo and xor lahf sub adc cmp ljmp mov imull (bad) mov add mov lds pop xchg push sub in and lret fwait jle pop mov push gs mov stos (bad) ret sbb stos jb test push mov pop push push scas push int3 stos std sbb sub sub bound sub mov sub les jnp mov mov jne nop or shrb inc imull dec fsub pop das lds lock sahf ret mov add push xchg (bad) aas aas mov mov xchg push jno rolb bound sti mov lahf pop mov dec push jecxz fnstcw xlat xor pop imul (bad) push loopne sub mov fsub add or cld mov push push stos ljmp movd jbe xchg sarb scas sbb sub ds (bad) outsl mov xlat fisttpll ja cmpl adc or mov lcall add add dec add and cld mov mov mov adc adc mov dec pop add (bad) cmp int3 push xor sbb das outsb in movsl (bad) jno leave aaa test xchg ljmp dec mov or mov jno jae scas sub (bad) mov insb cmc add fildl cmp lcall call in add scas aas add je daa mov push push mov sbb rol xchg adc sub xor xor add (bad) jmp cwtl (bad) aas adc jmp cld movsl (bad) iret jns dec ja sbb pop lea scas repz mov (bad) and pop dec out mov outsb loope adc push xchg daa mov adc pop xchg call (bad) mov sub mov inc dec pusha inc and adc mov ljmp (bad) (bad) jl sarw mov pusha jo (bad) dec loope ss pop cmp nop sbb dec dec roll scas or les fnstenv pop sub xchg outsl mov in sbb mov outsl or jbe vshufpd mov inc popa test cmp jge add unpckhps and scas mov int3 scas mov fcompl push shrl xchg into (bad) or dec push mul test mov clc inc ret cwtl fdivl inc jae or jne xchg fisub mov pop push or sbb bound mov rclb mov mov mov sub jge sbb in xor or faddl adc jne addb lcall dec arpl push test sub (bad) pop stos lods cld adcl stc aas pop outsb mov (bad) add or cmp into loope repnz pop sub int3 mov cmp pop xor es push ja cltd cmp inc cmp test test push ja (bad) (bad) cwtl adc push push repnz nop pop notl push mov lods insb bound test in add mov sarb outsb jl je adc push push insb inc icebp inc jnp cmp imul inc mov dec push cmp mov xor test fcom lock jecxz int inc (bad) jno stc test out sub ss lock in loop xor jl mov pop mov jno rorb imul jmp test mov test xchg lcall popf bound mov cli cmc enter and jl inc shlb dec sbb int3 fcoms (bad) pop lock push dec jbe pop sub pop es fs mov jae (bad) das hlt xchg ss jo sub and cmp rol (bad) jae inc and mov imul add movsb push jae shrl cs mov in jo mov (bad) cmp mov dec bound jo jmp or addr16 xchg or lret dec aas icebp cwtl xchg mov js cmp ss xor (bad) mov imul ss ret repnz mov cmpsb inc and push lods dec pop scas cmp fwait mov loopne outsb rcrb fdivr pop lods adc (bad) sahf mov sub ret stos jmp scas mov mov add lock arpl stos lret hlt pop lcall pop sbb lcall cmp (bad) lret jae mov lret inc inc mov imul adc jne stos mov cmp pop inc (bad) lock (bad) mov cmp xor lahf mov out call loop jl cmp pushf cmc data16 cltd jo arpl push mov jb xor jecxz insl push iret cwtl pop cmp add xchg stos (bad) aas ss dec int3 subb and push sbb jnp or jecxz arpl aad int3 lret mov ja bound or outsl sub lea xchg mov ret or jge mov jne pushf std rolb push mov call add jo push fisubr stos mov js xchg loop mov mov in call xchg (bad) jge push mov pop iret ret mov push add inc lock daa dec pusha dec (bad) fstl sub inc inc dec addl mov jno aaa psllw rorb arpl (bad) pop dec sbb lcall sbb xchg add inc xor in sub bnd aad mov in mov dec mov pop test aaa enter cmp mov fs jle push aam sbb pop cmpsb (bad) add adc fs movl cmpsb pop jae xor mov int3 jns jnp pop dec xchg inc mov dec mov repz out dec mov in jmp xchg fprem aad les adc lods jns stc sahf in es call test sub movsl into in in js mov dec leave push push inc mov ljmp jns xchg cmp push push jae xor nop arpl cmp inc js pop or ret (bad) mov mov aas mov sub and ja mov imul popf mov int3 (bad) jo add push mov sub inc loopne data16 ret std push sti (bad) pushf dec dec jg rcrb popf inc inc pop es es pop and outsl mov mov sarl jmp pop and hlt cmp add push or add adc cmp popf inc add test lods out in (bad) mov mov cli (bad) dec cmpsl dec aam lcall xchg xor rorl pop sbb sub sub dec mov gs mov inc mov jno lods add orb repz in dec and scas dec xor movsl cmc pushf fs rcl and add xor push stos dec jl xchg pop xor loop jl scas jl movsl test xor pop les sub stos pop out fwait arpl aaa cmp cmc stc jbe dec data16 jmp and xchg insb mov std pop pop sti imul insl mov (bad) mov push lea sub loope inc pop add sub cmpsl fstl call aas imul sub xchg fmull popf fsubrp imul add lock jo andl lahf jle push sub xor loope xor (bad) cmc pusha xor dec pop pop ljmp lods ficoml pop aas aas and daa push pushf mov xchg (bad) test mov or scas fwait mov mov scas lods xor xor inc push movsb rorb jbe decb sub int3 loop int3 dec fwait jecxz fldenv ret sbb mov test cld xchg pop and cs lret inc arpl xor fimull (bad) cmpsl push mov fwait xchg adc push (bad) jo pop dec mov movsb imul push pop xchg cmpsl jp jne fidivr sub and (bad) xchg push lahf iret mov add fnstsw insl xchg mov mov (bad) mov aaa and imul popa and dec scas jno push test mov jecxz jns push sarl incl dec jge scas int3 jg sbb inc in jg adc mov daa js ret jecxz xchg iret pop mov pop dec inc mov xor mov sub mov xchg jno loopne movsb xor fwait (bad) mov jno jno shl dec (bad) mov imul aas push pop divl in aas cmp cwtl xor icebp in jne sub adc pop vmwrite lret dec sarl fnstcw dec test pop leave sbb incb xlat jp push pop xchg adc and dec in mov dec pop lahf pop jo sti js jmp mov jno loop jb push and repnz and (bad) mov (bad) clc cmp pop sub push jb dec fwait cmc sbb jo or and shll inc cmc add fild scas xor sub xor and xchg xchg fildl test stos jo into xchg sbb inc jnp push enter push call pop or pop sbb sbb sbb shl subl and test or sub stos sarb enter bound dec jl mov mov mov push shrb xor mov pop mov sbb jo fs adc jae fisub add stos test mov sub test xchg arpl jae sbb movsb dec mov in mov dec mov enter in xchg mov repnz pop pop xor loope mov dec addl sbb nop lea popf out imul xor insb jg mov cmp test fbstp xor push outsb aas std shlb (bad) stc fnsave or cld pop call xchg add jnp mov inc js mov ret stc push clc addl dec (bad) mov fsubrs sbb mov outsl rclb pop cli xchg lahf jbe lds fwait sbb push jo iret mov arpl loop cld insl lods dec les das xchg dec daa imul ds jae inc xor in mov into jno andl mov fdivr cmp gs pop sbb xchg mov clc leave push int mov jnp add xchg in addr16 xchg xchg mov leave or cltd stos out pop pusha fmulp and xor lret pop and outsb dec jecxz insl push cmp jbe lret cs pop adcl les fdivs iret (bad) and gs adc lods cwtl pop out stos ret cltd cmc xchg popf div jne adc xchg and in scas xor jl xor add movups int add mov mov xorb add inc out adc mov xor das add movsb shrl popa push (bad) dec push rorb enter dec insb adc cs inc push fldenv ret aaa pop add mov bnd dec pushf iret loop adc pop cwtl jge push fwait addr16 lret iret sub xchg dec jo imul mov arpl cmp stc jb xor and int (bad) push jg pop push or sbb int3 (bad) xor or lahf mov sub insl pop std xor lea fdivs mov xor mov or jo or es push pop sub sbb pop mov arpl ljmp je (bad) inc xlat aad in rcrl dec or aaa push inc jae jp mov pop xor cltd aam jbe and mov shr or sbb mov sahf jecxz fndisi(8087 mov mov imul mov fisubl mov (bad) mov add ljmp pop inc (bad) lods push gs fstpt xchg jno mov bound mov cli fstpl rcll jecxz xchg loope xchg outsb dec (bad) dec inc cmpsl clc std or inc mov rorb adc inc and mov and or outsb imul cmc ja clc pop test popa fcompl inc pop test adc adc fistpll xchg xor xchg ss cs push dec jb pop (bad) add xchg and cmp out cmpsb inc xchg rcrl imul imull cmp xor xor adc push rcrb xor fisubr insl inc sbb jno dec xchg and popa mov mov mov jbe jo (bad) push (bad) xor mov (bad) notb mov pop adc jg xchg xchg mov push hlt imul rcrl fdiv xchg xor pop (bad) loop add test incb scas lahf and push (bad) dec std dec xchg dec sub cmp cld inc inc pop pop push into jae xchg mov push push lret loope and cs push (bad) insb mov jle stc int3 sbb int3 fsts stos scas cwtl leave xor add xor jnp cli lret sahf xlat and push pop xor mov pop pop dec movsb daa cmp cli xchg faddl xor pop test ret sahf sbb adc mov and xchg and cmc fstpt pop outsl (bad) aam pop add or xchg imull jg push or jae jle movsb out pop sub xchg out gs (bad) leave (bad) pop mov lret pop shr repz jnp js stos jne sbb testl jmp jae pop xor jo cmpsb pop jne mov fsubl and int3 cmpsb enter and addr16 jecxz test es push mov out rcrl lahf sbb push sub in jle js or out sub xchg mov xchg rorl gs lahf push cmp cmp mov sub rcrl add cmp sub push ror sub cmp add leave xchg jl lods sbb sub lds std push dec pop aaa sub ss fdivl jp addr16 push xchg movsb les mov into mov sub sbb or pop int xchg repnz ljmp aaa mov outsb push xchg push add lea mov sbb les dec mov or xchg leave movsb mov adc popa je out pop add int3 and and into jns add rcrl inc pop and lahf out cli pop js sub mov into sbb ja adc cmpsb mov or sub cmc fs lcall shrl jbe movsb add das inc push xlat imul rcll or fdivs int dec jle fcoms lcall repz insl stos pshufw loop loop pop and and jo aad les xchg outsb sub pop sbb das jne test rol fcompl pop push and ljmp (bad) mov lods (bad) xor push das out iret mov and adc xor fs push adc repz mov rolw xchg or aas pop ret mov mov push negb jne roll or pop bound mov insb cli jnp sub mov insl push adc adc inc xchg das xor inc cli popf fmuls ret scas pop pop xlat pop xor add movsb cmp repz and icebp negb xchg nop add jo add repnz mov xchg mov pushf fcomip inc les pop mov pop pop adc or xor das rcl pop mov in (bad) xor inc cwtl movsl mov scas fwait xchg sbb stc adc adcl push sub popf repnz xchg push cmp cmp inc mov add cwtl lds and adc repz int3 lods js inc out aaa decb pusha inc shr mov sbb inc out incb loopne repnz and mov aad inc lds sahf push and xchg loope stc xor adc dec (bad) (bad) outsl sub repz loope insb xor je pop int3 imul into icebp lretw cmc cmp sub lret xor rol cmp daa xchg jp call test xchg jmp subl jns ja outsb leave push push stc mov aaa mov popa iret aas dec sarb lods sub inc cmp push lea and push fstl es cmp xchg bound dec xor iret scas add out sbb lock xchg push hlt mov dec sti data16 lret xchg nop iret inc data16 rcr mov xor mov fcom sub inc cmc sbb pop sbb add xchg fadd jb push xchg lahf repz pusha (bad) mov fs jl jno add add xor into or inc sahf mov adc int sbb add adc inc imul inc rcl rclb pushf and imul xchg pop mov lea pop mov sub (bad) pushf mov cmc sub sbb (bad) mov or sub sub add sub inc test cltd cmpsb adc ljmp or dec mov aam adc stos fildl push push ret shl (bad) push clc and mov out pop cmp test ljmp repz mov push stos icebp les mov lods popa lret xor or and pop push cmpsl and cltd sbb cmp outsl js stos ss pushf mov sbb clc add call push cwtl push out pop imul sbb (bad) scas xchg pop add xchg mov out push cmp stos inc adc cltd jecxz cld pop outsl imull pop testl lock or cltd mov out loope dec push scas cmp jo xor test mov lds sub aad cmpsl std stos scas aam arpl sbbl arpl ds pop insl int3 mov xchg and pop add bound fsubr mov fidiv icebp xchg push jnp (bad) lods mov dec hlt add or inc sti or pusha adc mov xchg push out add dec leave jnp sub xchg xor push (bad) fs xor testl fbstp dec cmpsl dec cmp lea (bad) movsl push xor mov loope pushl cmp or cltd scas pop loop sbb sub add add xchg jae std jmp pop xchg push lods pop and sub lahf sbb enter aas ds cmpsb movsb (bad) cld dec push add inc pop repnz popa fs mov outsl mov cmp outsl xchg jecxz in decl push cld enter jl (bad) arpl cs ljmp das xchg cmp test aad cld add push sahf or movsl jbe dec push loopne inc pushf iret leave sbb (bad) outsb adc adc pop cs dec push pop adc bound xor adc sub fisubl push dec jb sarl aas lea mov pop or es pop loop push dec cmpsb mov dec fwait popf pop mov mov xchg gs or loop (bad) cld add cmc sar shrl pop add sbb add push push mov add add xchg add jo sbb nop inc cwtl mov or pop repnz dec sahf pusha std test mov ds inc ret xorl lcall cmovs stc in loop popf loop lds in or mov ret mov jo test adc dec pop std fwait dec (bad) mov jecxz shl add jne lea addr16 out popf into rorb scas xchg (bad) cmpsl jg icebp jecxz (bad) push cmc add pop idivb push outsb cpuid xor ja and fisubl pop jg xchg and mov gs or pop stc enter rclb loopne xchg sbb mov push lret mov ds adc push add cmc (bad) repz jnp lret or mov xchg mov or leave dec insb sbb fisttp push mov clc mov out negb loopne out mov gs mov mov adc shrl xor stc dec enter pusha pop mov lret mul mov jg cld arpl movsb outsb out das popf test push or add pop mov adc xchg test or popf leave xchg ja das mov arpl cwtl inc sbb jb cltd pushf (bad) std mov scas pop inc pop clc push ret adc fsubrs repz decl aas aas movsl ret and push mov xchg ljmp inc scas fsubs lods cwtd xchg aas jp adc sbb lods xchg out jmp and lret push push or and mov lods into mov inc add lock ret adc pop out sbb mov popl ret aaa int push mov fs in loopne fstl ret jo mov pop sarb add cmp mov mulb (bad) imul xor cmpl test idivl cmpsl call push push jmp outsl sbb and cmpb (bad) cli push dec scas cmp lret fcomps sahf ret fsts out push push ja lods and movsl jmp in scas or push jg jmp jge jbe popa pop addr16 and cmpsb pop sbb xchg pop sub stos fsts je rcrb adc mov lret xor leave or cmpsb cld es inc fwait jbe pop pop sbb sub mov xor pop imul test (bad) and test mov inc cmc fimul jno mov and mov adc into dec cmpsb call and adc sub jle mov add sahf (bad) pop ljmp movsb outsb xor mov mov push pushf push xor mov cmp sbb dec cmp ss push pop decl mov jns ljmp dec sub cmp lods psubsb pop xor add dec frstor cmp mov jmp mov add push mov mov test leave inc imul fisttpll scas pmulhuw adcb repz push pusha push (bad) (bad) movsl cltd pop rcrb jnp rcr in daa nop mov sub cmp jae aas ss inc jmp in jg cmove cmp mov mov sbb int xor inc test rclb sub inc pop cli inc jmp pop cmp mov (bad) cli fsubl sub ret lea rcrb into cmp aaa push add xlat xchg pop (bad) xor pop and mov cld mov pushf sub push clc test and push add xchg movsb movsb (bad) fsubrl mov loopne or fiadd movsl jo mov mov jl push jns inc shr xlat dec fcmovbe rolb mov push jecxz push sub jmp (bad) hlt imul data16 enter insb inc pusha fiaddl repnz jecxz xchg enter xchg int3 (bad) sbb adc inc into dec xor andb xchg lods xor mov fsubl inc push push xor inc and xchg in or cli xorb jne mov mov dec adcb (bad) pop loopne mov xchg test pusha push xor fldenv out xchg leave mov stos dec mov insb scas les and out cld xlat or inc mov aas lock and xor fnstenv or xor in xchg jbe xchg and out mov enter xchg jne rclb (bad) xchg enter dec or (bad) rcll test xchg mov add xor ret cmp out enter stc cmp add incl fscale data16 inc lock and (bad) sub and lret jbe test jb mov scas ss inc out test sub push (bad) andb aad scas inc dec lds movsb xor lret arpl and or popl jnp inc sbb push lock inc dec xchg adc dec jecxz pop adcb mulb mov jo jmp les lahf pop push mov cmp push cmpsb jg cltd cmc in arpl sbb inc loop adc mov adc out es in or xlat stos mov stos mov into and xor je mov and xor sub jmp fs xchg sarl idiv mov jg mov out xor stos mov test arpl mov in inc xor xchg jge cmp icebp test jmp popa inc xor popf sbb cmp nop mov jp fildl mov (bad) ljmp jecxz icebp (bad) icebp adc mov add xlat fs dec xchg push add xchg and std inc scas fild xor or fsts cld mov sub outsl jmp add and lds mov hlt add push fwait and bound pop js push dec xchg lock dec adcl js flds adcb in test adc xchg sub mov sahf iret push outsb loopne xor inc les lcall mov sub fwait ds mov out or jnp mov jge jmp add dec jne mov cmp pop add mov push stos into xchg std out mov xor in (bad) fistpl aam movsl dec inc in int3 loope loop jg and push das cwtl aaa test incb dec pop adc lods fldt shrl sub dec mov orb test and (bad) cli and outsb push aaa sub lahf lods and icebp inc lea or outsb mov movsb cmpl sbb and (bad) sbb movsb mov repz cmpl add sub add mov loope in scas outsl sub xorl add mov sti mov jb mov out mov pop hlt mov scas dec fwait repnz xor xor fs xchg jg dec jmp inc popf pushf movsl out push cmc xchg jo or sub ljmp inc ret inc mov and ss jle mov stos and scas inc js sbb hlt mov add ljmp lcall adc js adcl lea mov xchg sbb aam andb pop fbld mov (bad) xor ret dec xor mov push out pop and (bad) fisttpll sbb je mov pushw mov pop clc cmc stc pop loopne ja inc dec stc out ss iret xchg fucomip loop pop jecxz out cmp push insl (bad) aaa out repnz mov cli adc mov add imul push repnz push repnz idiv sub pop xor adc or add push jne adc int sbb repnz iret rol push imul out sti mov jmp negl adc jle xchg test outsb nop pop mov movsl fs mov dec mov and inc mov jnp addr16 fs adc jne cltd xchg (bad) mov dec into loop jno mov ss dec ret (bad) or imul in gs pop dec mov rolb cltd and fwait sarb or mov adc or mov xchg call mov xchg xchg dec pop movsl push into (bad) mov sti test out scas inc scas cmp add ret repnz lcall sub lds lret fisttpl mov mov mov lods sti es dec jnp enter xor push ficomp cmp mov add mov add xchg outsl add mov cmp shl push sub test sbb daa icebp roll and repz sub frstor out inc sub xlat fmuls xchg sarb inc roll pop or outsl mov push sub jno and repnz and push mov add lock dec inc fs inc adc jne sub jno fcmovne xor dec nop jns aad lods arpl pop mov mov cmpsl pop fwait xorl std sti cmp pop insl sub fcomp pop push sub cmp (bad) movlps scas in cmpsl out icebp dec stc cltd pop cmp ss pushf push add js inc pop icebp push scas inc cmp push fldt inc fldl movsl insl std or mov cmp (bad) sbb sub out popf mov and ljmp cmp add inc dec push pop push push xlat pop mov cmp cld icebp aam jl inc jno (bad) fcmovnbe or adc movsl sbb mov jge jno push and jge xor jo loopne int3 xchg gs test movsl sarb (bad) ds and ret (bad) sbb and lds mov cmp lret xor sti nop push xchg pushf sub push cmp mov (bad) fnstcw rol fadd jb stc add es jnp xor in daa cmp and pop mov dec test xor es sbb and or scas icebp add leave inc lcall iret xor push inc out sahf mov insl popf inc mov gs add aad dec loope sbb or in jl push mov sbb daa adc xor in outsb inc hlt xchg jns adc fwait push xchg push pop mov add sti arpl sub mov add xchg leave ss (bad) pop nop gs dec (bad) (bad) out inc mov mov jle ss inc xlat mov mov mov push das out lret sbb stos ds lods or pop adc sub shl adc and ds mov pop xchg mov sbb bound cmp js iret xlat fild clc jmp adc push pop pop ret mov roll xchg into addr16 sbb data16 add (bad) xor jge movsl push pop call fimull xchg lds and pop jge sar xchg cmp sub imul outsb or mov inc jecxz (bad) std fildl int mov push in push sar and enter js mov cli push pop pop pop pop lret push push aas aas repnz shlb add outsb inc dec daa mov leave jno pop push cli loopne les aaa std or xchg (bad) jae movsl mov jecxz je adc inc push sub push push (bad) jl nop dec or push repz test mov (bad) push mov cs ret sbb mov aam das push sbb sti sbb mov je rorl xchg xchg add lods lods pop arpl xor hlt nop sbb jge mov mov ja mov pop push sbb sub adc add or popa sub cli inc fadd pusha and mov cmpsb test mov mov in out aam pop dec pop lea and add jmp xchg adc jl push (bad) in loopne outsl jb jle arpl out xchg jmp push mov test test inc push loope movsb xchg or inc push or daa popf jp and cmp cli xchg mov (bad) mov xor sbb add jo (bad) or mov pop xor fadds popa stos pusha (bad) mov or jno stos (bad) ficomp sub insl fcompl or mov or clc xor mov out jp sti lock (bad) dec dec mov jbe rorl cmp cmpl cmp sbb xor lods test adc int3 jecxz aam cli bound ret push sub in inc (bad) mov mov in jno sbb in scas lahf stc scas cmp imul sub jae nop or sahf fildll iret adc xor jne das jns or (bad) xchg outsb rorb mov or aad popf dec int mov adc daa iret ja jae cmp push hlt js stc imull popf ja mov sbb sbb jg xchg cltd inc mov (bad) xor jg in out sub xlat mov imul jmp lock test imul jp pusha dec icebp add pop xchg cmpsb (bad) xchg jge test push fdivl xor cmc call outsb test fcompp adcl mov pop mov scas inc inc lret mov mov xorl cld xlat jnp mov cmp dec lcall and lcall jbe jg cli mov or je mov test jno sbb and js add xor xchg or xchg pop push out jl out shlb adc popa int les jmp xchg mov fstpl add inc int push fiadd sub pushf dec fwait outsl movsl jo sbb lahf dec icebp dec mov jns pop sahf jmp sahf jbe push push faddp sbb or inc stos inc sbb cmp add pushf inc add addr16 fcomps xorl dec pop push incb sti jg out movsb ret inc lods or lret mov roll or scas inc leave call ret push inc push inc std test mov incl notl rorb test push lret cmpsb rorl add pop jbe jb (bad) jg add and popa fs add lds pusha inc insl push imul sbb int3 pop repz xor add cmpsl in mov stc lret push dec xchg push jo mov in xor mov inc sub jmp popa adc test out push pushf jmp dec sub aaa jmp pusha xor loop mov push (bad) ljmp mov and sbbl add jecxz ljmp mov dec daa fucomip jnp jo outsb jg dec fmul cmp pop jbe jbe cmp pop mov sub std sub mov or cmp dec movsb test and mov inc mov jg ds es (bad) ret inc repz ret cmpsl adc sarl fnsave mov scas mov inc and xchg pop xstore-rng cmpsl or insb clc sub adc jmp rcrl push jge fsub mov sbb or mov mov cmp mov aad mov stos ret movsb fnstcw ret rorb pop lcall pop shl enter sarb stc mov outsb mov mov inc push push dec and mov xor xchg cmp addr16 fisttp lret xor cld fs out test divb dec addl push sub pop sbb sub insb call push enter pop les dec sub pop xor push icebp jge mov mov ds mov mov push mov lods ljmp pop xor pop cmc lahf leave es js push sub xor and in cmpsb xchg inc pushf jae or push xchg pusha cltd mov push jl outsl sub sub xlat imul mov push js rcl fdivs xchg sub and addr16 mov clc cmp imull inc and ja and pop pushf in mov xchg (bad) leave das jl mov fdivs mov nop lds stos and stos jb sub xchg icebp daa mov and sti adc into mov lret iret push dec (bad) popf in dec adc enter dec push mov insb in dec mov (bad) enter cmpsb mov sbb arpl stc dec cmc add jmp pop pop and call aad test int3 and int3 push jecxz test xchg or and cmp adc jmp or sub mov (bad) fldcw scas sub aas iret sbb push (bad) jbe movsb (bad) es inc rep xor jge outsb xchg lcall pop lock je dec xor in dec aam scas daa stos cmp xchg cmp pop push into push int out add cld insb (bad) out cmp ja hlt sub outsb xor enter lds xorw or movsb jne cmpsb sub jecxz data16 or test xlat dec (bad) (bad) push int jmp ds jl fistpll cmp int3 int3 mov mov and or xchg sub cld or outsl fstpl ret cmp mov adc jp (bad) pop sub xchg out inc inc (bad) (bad) jg adc jge xchg lock aad jne fs mov int3 repz sarb mov ljmp lock pop scas lock sub es leave and cmp adc mov dec movsl cmp jmp addr16 (bad) stc test fdivl mov xchg mov iret je push loop andl xchg lds add (bad) (bad) hlt repnz rcll adc decl jno xchg jae pop mov cli sbb dec fnstsw (bad) (bad) repnz ss test xor pop push dec dec ja test add and mov sbb cli mov mov call adc fcompl clc or out movsb xor out or movl sub clc pop and mov and fwait pop dec xchg inc mov or int test fadd sbb in cmp outsb jle cmp add test das imul pop or xchg add roll in jl ret insl subb inc (bad) pop aas xchg xchg mov cmp movsb popa rcr clc inc mov ret rorb push xchg adc fnstsw sub notb in and (bad) outsb out int3 jp and mov adc xor jp add mov and fs pop jae insl mov mov push std enter divb mov mov rclb in dec sub jns pop out jmp sbb icebp jl ss pop push mov in jge pop or sarb add fdivrl adc adc cmpsl mov adc repz daa mov sbb (bad) xor and (bad) mov int inc add in xor cmp roll cmpb insb data16 or or jmp jbe out (bad) popl es je aaa add scas dec cld mov xor scas or fwait add rcll (bad) adc clc cmp xchg in adcl xor mov inc sub repz btc out fisub aam mov pop (bad) clc (bad) orl js mov jge cmc xchg sbb cs (bad) cld sbb iret xor sar ret enter test xchg or sbb xor bound fsubrs jp mov pop sub cmp adc or popa push add mov ja pop dec aam push push ret daa shl pop push imul or jge cmpsl icebp mov adc or push sar cltd adc jg add adc pop movb cld cmp jns cmpsl push jp jl sbb das push fdivp daa xor mov add outsl ret mov lcall icebp sub and scas mov mov gs clc add sub outsl pop mov (bad) jecxz jp out sub lock mov shlb jecxz lret mov adc clc cmc mov sub xchg push xor xchg xchg test mov mov mov popf jge cltd push mov cmp mov mov mov aas gs push sbb lcall ss fldenv into (bad) aam mov adc daa pushf sarb mov cmp jge sarl (bad) (bad) cmp adc fnstenv and mov jb mov mov (bad) mov dec shlb fucom in test inc sbb and icebp (bad) pop gs mov les subl mov inc or push in or js pop xor lea mov sub jmp sti stos push pop jmp pop jl xchg in (bad) cs mov sub dec jae jmp xchg cmp mov sbb pop faddl (bad) fcmovne inc cmp ret xchg outsb mov ja in popf cltd pusha cltd adc and movsb repz adc ret xor sbb mov ret cmp jecxz mov jg loopne (bad) sbb sbb fwait mov sub pop pop push cmp and dec rcll and cmpsb xchg test and adc and movsb xor loope iret hlt loopne ret mov mov add dec loope jns cmp rclb loope or cmp jmp icebp jge je sti dec (bad) sbb fnsave mov loopne dec (bad) sti jge xor mov xlat out mov and jle cmpb and inc adc dec and (bad) call inc into sbb lea sub subl sbb push and lds xor or cmp mov out xchg xor and insl (bad) mov inc push or xchg add cmp push lret std test lds test out cltd mov daa iret popa fisttpl jecxz push ljmp jo inc mov xchg bound rclb sub mov inc push and scas mov sbb push sbb sub add aas in cld ss popa xor rcrb sub mov add lea cmp mov inc mov jb mov xchg sbb inc mov (bad) in xchg mov ret xchg pop or push pop outsb int3 pop enter or and movsb xchg lahf sahf or dec xor add inc lret inc adc test and mov fistpll push ja lcall fstpt pop jle jp cmpsl add sub pop movsb test cmp add push in mov add cmpsl or mov mov rclb mov lock outsb es xor dec in jns push sti pushf daa out icebp cs in pop jae mov pop lock xchg icebp mull adc sbb or push or jl es pushf lret xlat mov rcll int3 popa fadds in push aam and clc ret xchg cmp jns fldl bound lret inc pop cmp call imul cmpsb fcomps mov sub dec aad jb adc test pop or mov ss mov insb stc out and mov sar out (bad) iret xor lods jg inc in push xor dec adc fmulp ret adc cmc (bad) cmp lahf int3 cli pop test or adc push push and aaa inc (bad) xor push sub push pop dec ret dec cmc dec sti jmp adc push mov insl lock lds mov and mov push dec dec fsub loope ljmp push out fcmovu pop rcll lahf out sbb das std sbb inc jp cmp lods mov cmpsl inc outsb jae out orl imul popf mov xor cmc scas clc mov leave pop mov ds mov mov insb xchg add add add cs lret mov lods popa (bad) lcall and repnz push push movsl lock insl push and mov sub xor xchg sar sub cli jge add dec add inc cmp adc leave das dec dec sub mov lcall mov imul xor iret call stos and push in mov push pop (bad) pop lret mov adc imul cltd cmp pop stos adc sbb xchg push ret sbb lods test orl mov push in inc ror fistpll repnz popaw mov dec leave jmp pop adc inc sub adc adc mov scas lahf fwait addl repz xor pushf mov icebp add cmpsl jge call adc nop pop and dec stos xchg sti push in outsl add mov dec lcall and (bad) divl (bad) jl pop insl mov fistl ds xchg jo stc add mov gs mov rolb xor push add repnz repnz mov aas push int3 test cmp pop rcrl and xor faddl push and cli adc mov lcall test jo pop pop xchg pop repnz (bad) push jb sahf push jbe iret pop ret mov lock push xchg cmc jl pop es xchg add fdivrp add cmpsb ja aas popa fwait jns pop lahf cmp dec pop scas pop sbb jmp push cltd xor inc arpl adc scas xchg ds mov enter push jo (bad) cmp push pop jle jg or adc mov push nop lods cmp scas je push stc or lea test xor add pop (bad) pop push dec add dec mov pop addr16 sub rorb loop inc subl movsb fistl shr cwtl dec pop mov or lret and xchg rcrl push sub jmp xor sub add sbb (bad) test scas mov mov idiv xchg aas sub pop mov mov xlat movsb aas pop dec sub cltd loop rcrb xchg mov leave shrl ficoml (bad) jle lock pop mov inc ss push repz cmp mov or jmp and jb loop fisttpll cmp xchg adc ror or call ret mov mov arpl loope pop xor stos call mov add xchg and inc xchg xchg mov and sbb mov subl adc xor push add (bad) or add inc inc icebp cli (bad) and lcall or (bad) repnz push jmp (bad) mov mov lea les and mov push adc jnp sti mov xchg add lcall or enter adc orb push push xchg lret fsubs mov xchg adc push add in rolb mov dec pop lds bound xlat xchg cwtl jge cmc cmpsb dec mov cld loope ljmp push enter adc jecxz sub (bad) cmp push xchg or enter ljmp ds (bad) xor add movsb inc leave add out mov jb pop stos addr16 test shrl movsl mov jae xchg push call mov imul loope aas cmp add add lret mov pushf inc cmovns loop adc insl lahf jae jmp sub and icebp and clc xor add xchg cmp adc sub sub (bad) mov test hlt mov sub fcmove cmp mov stos cmpsb or stc dec pop push push cmp (bad) fsubl jbe loopne fbld mov pop cltd adc adc pop dec loopne add in jl shl mov or add sbb push lods adc decb jmp inc addr16 xchg sub add mov sub or xor dec iret jo call lret xchg movsl sub mov cmp (bad) fsubl loop rcr daa mov stos loop xor sarb flds add add mov xchg test push pop pop (bad) jno outsl cwtl inc (bad) mov push inc or les add sbb jg insl add and xchg dec pop icebp push (bad) jne (bad) ss sbb mov pop and xchg (bad) mov loope sub imull and lock rclb sub jle or cwtl pop mov or xchg stos add push addl lea test sbb jb loope jecxz sahf mov add lret pop aad arpl imul bound movsb jo xor daa sub scas adc fnstcw push iret into pop lods pop mov ss into jae loop xor add push pop cld (bad) pop addl icebp paddusw xorl xor (bad) jg xchg and popa test ret (bad) pop cmpsl mov add xchg (bad) mov repnz adc mov ljmp mov push aam pop leave das pop lods add mov inc xor dec sbb sbb push clc mov test sbb in ja ret jp aam cltd std scas lea mov push stc test iret stc dec gs xchg mov jb pop rorl dec ficomp cs or insl lea cmc xchg sahf popa ds add sahf inc push mov mov mov sti jo jecxz lret jmp popf sub push roll sbb mov push ret adc and inc mov stos jmp push out jne pop inc jge loope mov mov cli xor pop mov mov shll or cltd mov (bad) popa jge push (bad) push pop jl xlat fs push test imul aaa gs loopne (bad) in (bad) in push (bad) mov call mov lret out or inc and jecxz int3 lcall rcrb adc sub inc insl out xchg inc stos insl fist add outsl fadds pop xor andb adc dec getsec jns jg xchg stos add adc adc pop aas mov in mov shlb out mov jle cmpsl movsb mov enter jns sub jbe loop adc xor xchg je fptan xchg lods hlt aaa pop psubd push ret mov int3 or (bad) aam cmp iret mov mov punpckhbw mov or push aam adc xor or cs mov add adc jp (bad) repz cli loopne sarl mov test mov das scas gs jb pop push add cmp cmpsl iret push nop loop pop (bad) enter mov inc lret dec jne daa out adc aaa outsb jae sub int imul sub xchg xchg dec push mov push jmp hlt add or sbb pop jecxz mov lahf sub cmc sbb xchg nop movsl inc mov addr16 push das cltd sub xchg fnstenv out pop movsl push imul mov sub push nop movsl sub lahf rcrb fimull or hlt js repnz rcrl inc pop scas dec (bad) xchg pop stos push lret gs aas aam loop lock dec sbb jb and mov shll aad in popf mov out aad sub mov pop sbb xchg rcrl (bad) addr16 mov orl add xor mov ret sbb mov imul in or les sub lods push sbb pop (bad) outsl leave (bad) enter (bad) and add pop mov jne mov ljmp xlat daa jmp xchg mov push push jne mul pop or pop jno push fsubrs mov or cltd pop sub sbb (bad) dec out sub into and cwtl daa jbe mov daa xor cmpsb sbb movsl insl ss (bad) cld or dec (bad) dec fild xchg scas cmp bound pop (bad) mov icebp jge inc icebp push in out shl cmp and arpl jo out loopne lock ret cmpsl xchg lods lahf sub lods enter je ror pop pushl incb out ficomp dec insb or mov pop leave frstor stc (bad) xor test push mov push sbb scas inc (bad) das cmp fsubs mov std fucomp push push ljmp jg adc and adc dec popa scas outsl mov or or mov adc popa repz fcmovb js xchg leave push push sbb testl mov or call and imul dec adc fbstp mov lret sub (bad) out movsl lret jge jmp fcoms orl xchg sbb pop aam cmpsl shlb cs cltd stc (bad) shll jno pop out cmp iret cmp (bad) xor dec and sbb jg dec lods shrl mov lahf lret pop test inc push iret lods pop stc call stos or sbb orb jns mov stos or cmp das cmp sbb mov xchg arpl cwtl stos cltd lret test xchg in sarl sbb pop pop lods xor es or inc and inc xor xchg mov cwtl xchg cmp sbb movsl (bad) adc lock aaa inc push bound jne push or pop (bad) rcrl rcl fbstp or (bad) dec inc movsl and fstpt loope cli cmp cmp inc repz cmp (bad) lea lods adc push mov shrl cli and mov push xchg std ja lods movsb pop pop out insl cmp sti scas add xor shrl inc sbb cmp adc mov xorb cmpsb ljmp ljmp bound jge js sub sbb mov sbb push lds dec test and pop mov push cmc negb scas sub out cmpsb cld int3 js pusha mov jae pop les mov sub xlat int push mov adc push leave sbb jecxz,pn ss adc adc cmp rclb cmp ds jle in add gs out mov inc int3 pop dec sub (bad) jmp insl cmp xor adc imul mov adc mov out (bad) lret (bad) jmp cwtl xor and cli jnp add (bad) int stos aam flds mov mov addr16 andb push (bad) fcmovbe divb sar pusha inc rorb xchg loop xchg aad call jecxz xor je into jge jbe test push push fdiv push fmuls cld mov ljmp mov test pop mov sbb xchg push (bad) imul les sbb fdivl mov pop push add jmp inc mov mov rep push xchg mov jno arpl cmpl int3 test out pop aas mov add lcall fdivrs rcrl sbb std jg in ljmp ror fistpl (bad) test push cmp lods (bad) add es push scas inc dec ret (bad) jl or mov or and sbb jge fs push mov cmp push mov pop pop xchg aam lahf repnz add jbe in inc lahf push (bad) stos push lock lea mov repz sub mov add sbb movntq add xorl rcrl jl fbld or add dec push test sub jno cmpsb jmp rorl out jbe push addl lock mov jbe cmp and push bound add xchg test (bad) sar pop popa xor pop mov jnp adc push fstpl jno test add cmp in jae aam push mov push stc arpl out test pop daa jmp jbe pushf mov aas lret inc add fwait add jecxz imul xor dec inc inc mov pop sahf imul int3 lcall cmp pop sbbl call push mov cld sbb loope mov pop xor cmp icebp jmp daa lock insl add pop jmp test mov cwtl inc dec negl push and mov jns xchg jo or out inc imulb int pop iret adc mov dec ret in popa dec and push pop sahf inc fmuls fld1 stos aad idivl mov out les cli in xor sbb (bad) das lret push push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 inc xchg push gs inc mov push mov inc les call fisubl jg lret pushf out and inc outsl insb cmp dec nop pushf data16 jmp push mov xchg jmp out scas jo popf idiv xlat lods loop inc xor pop jae into js (bad) lret xchg push mov jne jnp mov test aas stos cmc cli lea mov or cmpsl imul jmp push popa mov adc test mov sarb mov adc gs aas imul jp mov cmp in pop lret idivl push jns add push mov mov inc dec imul cmpsl xchg push test push call and call xor (bad) call sub fstpt dec sahf lods mov imul (bad) push push sbb xor lods push xchg xor jl test push pop jae repz (bad) aad push sub hlt sub movsb dec imul mov popa mov adc pop stos mov mov push incb repz cwtl adc fidivr (bad) jb and jmp cmp lods cmp push lahf jno mov jns push and xor mov cld pop pop in or add adc fs add lret mov add sbb scas dec push in dec shll lret mov jb cmp xor in pop enter mov dec mov mov aad out fs xor scas xchg add mov mov mov jmp test jns ret push sbb pusha mov sahf xlat mov mov (bad) stos bound adc xor mov mov cld outsl out (bad) ficom jnp negl sarb pop add test fsubl inc jbe push popa jmp xchg test stos push xor nop xchg inc adcl fisttp xor mov outsb pop repnz adc inc shlb xor dec inc mov mov lret imul adc dec xchg push or adc into popa mov cs pop add inc insl shrb enter sbb inc push mov rcr push mov dec jg insl andl adc jmp out sub sbb out js jns gs jl mov icebp mov sub popf pop mov dec in lds das gs jns ja hlt xchg mov adc (bad) aaa push lods pop jbe cmp and mov jo hlt push ret and xor in mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fcoml xchg jge test je out cld test insb xchg insl test enter in ds cld push adc int mov mov jnp enter sub repz movsb inc mov mov cmp jmp paddd insb add ds push xor pop cli push bound jge push mov and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 inc xchg push gs inc mov push mov inc les loopne push rcr and lret pushf out and inc outsl insb cmp dec nop pushf movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 inc xchg push gs inc mov push mov inc les loopne push rcr and lret pushf out and inc outsl insb cmp dec nop pushf sub cld imul dec cmp ljmp call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 fsubrl imul vaddsubps sub lock jecxz out shll adc or inc adc clc add enter inc and push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop add scas aaa icebp xchg xor das es outsb jns jecxz jmp jl fwait mov movsb pop leave xchg nop mov xor in sub adc fmull cmp adc sbb pop aas mov mov out fimull jae into or jns data16 inc xchg imul mov inc (bad) in and (bad) mov dec rcll in insb rclb cmp in je test inc dec (bad) xor push jae out dec jmp cmpsb mov and test jo push lcall xchg dec andl adc push aad loopne push clc addb stc jmp sahf or pop or arpl pusha mov adcl adc pop icebp sahf stc jnp cltd repz sbb movsb inc aam cmp add mov and and roll jo jmp xor mov dec test out xchg fmul into or and and xchg dec inc popf push sti ljmp daa enter push insl push (bad) xchg sbb mov mov cmp jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 daa (bad) ljmp idivl or in ucomiss mov call cld pop lock or add mov enter lock pop movsb scas mov adc stos pop xchg adc cli sub mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 fcoml lea stos out cld test loopne sub shlb jmp push addr16 jbe add mov mov mov movl movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fsubrl arpl add jb daa enter mov xor repnz mov add aad cmp test or jmp repz jecxz mov xchg cmp xchg fstl hlt incb call xor sub add pop xor jb or leave sub or sbb add daa (bad) jl stc sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop add add adc sub loop leave daa xchg add mov xchg aaa pop xor outsl insb cmp dec nop pushf (bad) fnsave or ret push dec imul (bad) stos cmpsb fwait int and pop xor (bad) jmp xchg cwtl popf iret sarb jmp fwait xor lods pop enter outsl push lock and and adc and in scas jl sub jmp aam mov (bad) mov enter je (bad) pushf shl pop sub aas imul mov lret mov in lea jo mov cmpsl cmp add cmpl arpl xor int3 inc lods clc pop mov mov les pop push adc lret lds lock andl xchg imul insb mov xor xchg xor (bad) adc jl stos mov adc jne and xor pop aad jl mov int3 fwait rcrb nop xor cli inc pop mov out mov push insl push push bound fdivp movsb mov jmp jbe cli push pop and sbb dec or add stc cmpsb mov loope aad cmpsl aaa pop inc enter xor pop xchg fdivl sub lea cmpsb xor fldt add cli mov test dec les mov lcall and cmpsb enter sahf mov daa ss inc loopne sub mov xor lods pop xor test repz inc jbe loope mov sbb adc pop popf mov sahf pop cwtl call int rcll in ret inc cli dec inc xchg ficom adc loopne dec (bad) ss fdivs jmp pop call rclb add push fmull lcall pop cwtl and fwait ret cmc jae sahf sub test pusha out adc jp cli cwtl xor mov (bad) in (bad) lahf (bad) int or push sub lods xchg ret dec loopne mov test ret inc imul mov aam sbb (bad) repz scas sbbb cmp (bad) lock out adc push adc add mulb loop mov mov shll adc iret orl movsb ret (bad) faddl push mov jne xor scas enter mov dec xchg mov popa ja std ret push sub push mov mov repnz cs addr16 push pop fcomip add ret test lock sub add in cmpsl test iret or inc mov idivb jg daa addr16 stc pusha das and adc mov adc repz leave imul out push mov inc or mov or fwait jne iret in cs cltd enter mov stos sahf ja sbb mov sbb pop mov inc mov fwait pop dec outsl das sub cmpb and push or pushf push adc fcmovb mov fs mov inc xchg mov xorl inc jp outsl pop in stos xchg popa cwtl pop imul pushf adc popf cwtl cltd cmpsb adc xor in aam and js popf subl adc jne das jg outsb and arpl or fsubrp mov and push lea push sub push leave push sub insb inc push push ds dec pop and dec syscall (bad) repnz (bad) addr16 (bad) mov sahf (bad) stc in xor mov cmp adcl mov enter mov or sbb xor jne adc dec aad out xchg mov jle add xor adc xor aad cld test mov mov mov jg shrb fcom repz push icebp pushf imul mov dec loop jb les pop dec leave pop js xchg mov rclb push cmp xchg nop xor and xchg lret xchg pop jl and sbb lea sub or in in jle rclb xlat jo mov pop inc lock add mov decl gs iret (bad) cmc (bad) (bad) push mov cmc ret inc mov gs cmpl sub mov adc push jmp pop (bad) cmpsb sbbl clc sbb enter mov sub inc sbb push sub test cmp in dec sub dec mov push mov in ficoml sub decl push jle test cmp jnp sbb dec stos inc pop insb insl jge arpl and or inc lcall daa adcl inc dec xchg inc jne jg mov jp ds jnp sub push insl cmp sub mov ja cmp jb ret push sbb mov sti and mov mov push add dec movsb mov pop lds push pop iret pusha test dec clc mov shlb (bad) (bad) push or sbb pop icebp push xchg sbb ljmp (bad) insb xchg stos sar jb dec and adc or insl xor sbb and mov mov ret cmp stos mov sbb cmp sub push fld (bad) stos sbb adc inc cmp dec add ficompl cmp inc push stos cli jmp cmp sbb jae,pt mov ja jmp adc fs mov loop repnz mov jle cs loopne sub inc leave test repz inc fstl les cmp mov mov hlt xor sbb (bad) xor popa scas js lret cld sti jbe jl arpl jne pop es mov js pop jnp stos mov xchg push clc cli push sti xchg dec in outsb out xchg or adc fisubl xchg sub adcl mov jmp pop fmuls lds inc out dec nop sub mov mov jmp inc cli xchg pop mov cmp mov mov or nop fstl dec xlat fisttpll jle sbb inc jl hlt movsb ljmp adc repnz cs push mulb outsb ja inc pop pusha aas sub dec fiaddl stc (bad) dec shrl psubsw lcall ljmp pop xlat pop sub or out cld mov add mov daa lcall aad add and out dec adc sbb mov int3 rorb popa ss dec sub (bad) enter mov adc je pop movsb test adc mov mov cmpb mov in int3 mov repnz fnop xor test in sub mov mov ss loope dec sarl pop out ss in icebp cmpsl jno cmpsl ret xchg aam aam inc sarb mov or sub ja dec push mov push xor outsb test inc xchg enter jle test into or (bad) mov and mov sbb ds movsb lahf divb dec mov arpl addr16 aas lahf out mov jle pop push pop mov imull outsl xor push lahf lcall or mov push push lahf xor and test cld jbe,pt pop fimul mov sub adc inc fimull mov mov lahf push mov aas push sbb dec stos xor adc lods xchg xchg ret dec (bad) adc push cmp adc ss fild jno enter lcall push dec movsl outsb push mov ja or inc ljmp cmc out aam arpl and mov xor inc orl xchg inc mov aam shll shr cmpsb addr16 dec int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 aam pop adc sub nop dec in mov sub in dec dec sbb movsb scas lea repz repz xchg test insl ds dec jl sub mov leave jnp ret fmull scas xchg and pushf push stos (bad) jne jns incb in inc flds iret cmpsl dec imul je sub sbb les sbb andl mov dec dec iret xor decb out imul push inc sti adc push pusha cmp gs nop push adc xchg xor popa fcompl enter sahf add jno mov mov cmp popl push adc inc out mov test or mov sbb jge sbb pop fbld jbe (bad) adc in sub fist testl out nop lret push lret lea cli sti je stos aam or repz or imul pop bound xchg dec mov sar int mov mov lea int loop inc clc sub xchg inc push dec dec xchg fidivr imul bound out or pop cs mov imul shrl int mov sbb xchg rorl stos std inc in lret jne,pn repnz mov mov pop lods mov sub loop inc loope pop in push ljmp cmp (bad) rcrb ret nop or std or push or jmp inc or fwait mov rclb scas std test or in mov mov push cltd out lds sbb out dec rorb fwait push out lahf aas jo movsl faddl (bad) jnp (bad) repz push lret push lods outsb xor ret xchg outsb mov mov sbb enter loop mov out sub push int3 aas add cmpsb xor in pop aam push and movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 fcoml loopne dec and push rol leave sub sub enter loop jge (bad) pop dec xor xchg test movsl pop leave inc out and push icebp pop jns mov sbb ljmp pop jl and inc and xlat jno enter call iret jns push cmp cld cmc stos and push das lods mov jp adc int out pop cwtl fnsave add dec repnz or xor dec jecxz push test (bad) addr16 mov dec inc cwtl push or stos pop stos sti ret xchg xor mov adc loop imul std fnstsw or sbb inc xlat add cmc push repz xchg add inc fsubl (bad) mov call cmp fcoms dec pushf loope les dec mov lods sbb ss popa xor rcrl sub mov cltd movsl fdivl push imul dec cli popa sarb pop popa sahf dec xchg mov ja ficom dec inc stos dec adc cmpsl ljmp shrl mov xor mov lahf mov inc mov ds add aam ljmp cmp xor test cs sbb mov inc imul sbb enter pusha arpl test cmpsl add xchg addr16 jg aas push cmp xor addr16 xchg jmp into xchg xor test lret and (bad) jno iret add subl jo pop movsb and lea fstl add add mov push adc fwait (bad) or iret cmp fcomps sbb jbe sahf iret lods cmp add cwtl mov add loopne mov movsl mov sbb dec (bad) push arpl pusha (bad) outsl ljmp adcl cmp pop lcall int3 into xor mov xchg xor xchg fdivrl (bad) xchg or mov popf lock push rep pop cld mov test xchg das mov sub xor push repnz jmp jmp jae out mov (bad) popf dec inc ljmp fwait rol fbstp jp xchg cli enter or pop pop push sub sub movsl adcb pop movsl xchg cmc cmp lds and dec clc dec dec fs mov xor imul movsl nop push mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 inc xchg push gs inc mov push mov inc les ret sub fisubl jg lret pushf out and inc outsl insb cmp dec nop pushf mov push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop add scas jecxz outsb mov popa push rcrb mov pop mov fisttpl cmpsb inc push adc add rcrb aad daa xor lock das into inc push int addl fs mov mov sub arpl dec xor push mov out pop leave repnz mov or hlt inc inc repz aas fstpl clc and ss shll adc call fistpll fwait mov inc sbb je push ror xor mov jnp cld jno push cmpsl std dec xchg imul (bad) out mov je mov mov inc stc or sarb add arpl xor inc jmp icebp (bad) sub pop scas test jge mov mov scas push aam fild xchg mov inc outsb gs cmc push mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 and inc or jns mov sub cmp cwtl scas pop std add ljmp pop push xchg add daa pop movsb xor daa iret mov or lahf dec push jnp adc sbb pop les aam push xchg int mov fildl aaa nop cli sbb jle rolb and divb idivb repz aas stos cmc add jl add lcall js (bad) jno pop inc scas fdivl aas int (bad) (bad) dec aas xor adc inc cmp adc sub popf or sahf out (bad) sti jne movsl in jo mov movsl imul cltd cs les out add into aad dec ja pop push int3 je test rcll aaa mov cmpb mov insl jb in pop in sahf inc xlat adc rcrb imul ret (bad) mov jno test sub cmp mov mov push ret (bad) xor lahf loope xchg push cli iret mov or and hlt add pusha mov dec mov jp pop loopne sub icebp xchg dec fldenv add push jmp pop inc fchs aaa ja (bad) mov insl mov imulb push cmp outsb adc les cmpsb mov xchg pusha cmp cmpsb pushl adc xchg pop xchg (bad) mov insl xchg push sbb sbb mov fwait add int shlb pop imul icebp sbb mov mov pop call xor push sbb sbb movsl pusha stos jecxz push inc mov (bad) jle scas push popf aas mov sbb cmpb hlt mov cmp daa lds cmp inc pusha (bad) mov xchg test mov jbe cmp ret xchg xchg mov (bad) sahf mov pushf lock aam ficompl aam sti fs stc mov lds jle inc std fnstsw icebp fxch leave fnstsw mov pop nop outsb outsb movsl add mov push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 sub in les sbb sbb push sbb mov pop or mov dec fimull sbb mov in add mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 daa xchg cmc cmpsl sub cmp out lret inc pop test fwait xor mov lret outsl pop sbb and inc outsl insb cmp dec nop pushf push mov and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aam push in xchg and ss sbb repz fnsave sbb pushf adc sub mov and sbb gs push xbegin sub loopne push gs sbb add xor bound dec dec outsb mov stos fstpl lock repz neg add mov sub xchg xchg je xchg push add cmp lock rol mov sbb lds cmp dec xchg scas jecxz mov push js push cli push inc add and scas push std sarl icebp jo or adc mull mov mov aas popa mov sarb insl sbb cmp faddl test fsubrs scas mov and jb cmp inc fsts pushl imul lods cli insl cli arpl add fistpll repz mov mov jo mov popa jmp mov pop cmp (bad) xor add scas sbb arpl and lock sahf loope loop fsubl push sub test add cmp cmp inc lret mov ja lcall adc out loope adc (bad) or outsl insl flds jns (bad) jae loopne stos xor jp xorl push lods lds xchg adc stos pop ror mov pop pop outsb pop (bad) mov mov mov sub jns movsb inc out jl stos scas (bad) mov sbb in (bad) mov and jbe push aam iret int push mov (bad) jae sub (bad) lock arpl mov inc and cmc push gs xchg or sahf mov cmpl insl mov bound push out jg cmp xchg or mov push and popf xor sbb add cli fucomi stc out jp aaa movsl in jp sub jp mov sub test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov out stos fimul mov leave sub and push jecxz out shll and push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop add adc stc (bad) dec jno jae and push pop sub pop pop cs in int3 ret push addr16 mov lret aaa leave cltd xlat mov adc loope sub enter je mov add pusha cmpsb push pop jo sarl sub dec iret sbb and push xchg and mov loop dec pop (bad) (bad) mov pop outsb scas gs test jp jne in out and fldlg2 repnz pop cmp push mov mov and inc dec scas cmp jno test xchg in lods bound je pop cmp sub lock imul pop xchg xor js (bad) loope mov sbb rol pop add adc mov repz (bad) push inc pop inc mov (bad) cld adc xor mov mov mov hlt clc rclb mov xacquire jl cmp (bad) pop mov adc jge add in sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop or add sbb inc (bad) mov stos jl imul fisttpl mov inc push das jne mov cld inc adc mov (bad) (bad) add dec out push pushf lret push in dec push test xchg pop cld fdivrs dec cmp int3 test mov cmp xor jb jno pop jne int3 shrb xchg (bad) outsl icebp cltd daa or bound jnp mov es dec iret js out cmpsl repz imul jp int xchg xchg mov mov rol nop xchg decb pop cmp jmp cmp cld jl xchg (bad) cmpsl mull lds adc fs mov push out mov push adc cld sub popf ja mov xchg mov pop subb idiv (bad) cmc lds mov adc jecxz xchg ds movsl mov int iret mov out mov jns push mulb add sub sbb inc (bad) or popf or pushf and cli rcl push int3 bound add movsl loopne,pt jle push nop mov into in dec out imul cmp (bad) stc sbb stos out cmp jmp les add jnp ja mov das inc aam call pop sbb xor jns dec repz add nop mov xchg les pop inc fcoms jecxz insl lods dec ljmp sbb inc ret stos push jb test sbbl and sbb inc sbb inc fisttp jbe loope or inc stos rcrb pop jmp or movsl push data16 shrb int3 insb rcrb xchg es dec inc loop and call jne movsb jmp hlt mov sahf insb jecxz in cmp xor sbb dec dec dec pop test jbe iret xlat movsb push push and aaa out fsubrl fsubrl mov cmp xor int3 adc jge push popf lret cmp jmp sbb xchg das mov aaa and fldenv int3 mov (bad) aaa adc xchg (bad) lea das pop inc ds int jp loop xchg aas sub dec and mov imul mov mov nop mov aad jl push dec rorl sub lret cmp jl cmp inc mov xor loopne and js aam scas jge rolb and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 es loop or lods aaa gs jns mov mov lret loop jge (bad) mov add nop das negl test outsl pushf sbb out mov movsb popa (bad) or pop outsl addb mov lods push int3 fsubs ljmp jns fistpl pop add xchg xor pop or stos test jg and add or iret call pusha jo xchg adc mov add mov movsl sub fisubr scas stos mov lret cmp (bad) cmc movsl pop icebp out mov out jecxz roll jp and loop jnp scas gs push sbb xchg xor ficom pop pop aam add or mov mov add cltd jns adc inc sbb pop lcall jno insb mov mov jnp push sub (bad) (bad) lods dec bound popf pop add mov rcr push icebp dec mov stos daa xchg in mov lcall push mov fild lock rcrb sar fwait cltd lock shll and jmp add fwait mov loope inc or or xchg lods movsl int3 mov mov jg adc insb xor aam pop mov sub xor inc dec out nop popa pop xchg jo xor cmp ss add lret addr16 inc arpl fnstenv pop mov pop and jbe movsb jne mov jnp inc and xor es (bad) clc dec ret rolb lahf jge iret (bad) mov inc (bad) scas iret xchg dec add iret add or lret into ljmp std and adc jnp pop mov (bad) xchg icebp push adc pop stos or das hlt in mov popa fisttp jno jge adc xor dec inc clc jmp cmpsb idivl popf out lahf sub sbb stos out fnstsw xchg test dec mov cltd aad cmp xchg fsubl pop ljmp inc adc loope fdivrl aam pop jp adc mov test add iret shlb ja lahf sub test sub lock inc sub mov fs gs test push mov in pop xchg shrl sbb sbb or and jb jecxz dec lret pop fsubrs inc in pop fwait arpl add (bad) sbb xor mov loope clc xchg dec ljmp hlt and aaa leave mov fwait out bound rcll mov mov xchg mov popa ja clc add pop cmc sub (bad) scas adc push dec push cwtl outsl dec mov lods arpl sbb je imul fldt test enter adc pushf add movb cmp (bad) pop test in xchg lods js insb sub pop addr16 cmp and dec fdivrp lret clc xchg into mov in daa cli mov add cmpsl dec in add stc dec jmp pushf notl lahf adc xchg jo sysret test test cmp add mov popf stc es and inc out adc in pop cmp lea inc test into jne add (bad) push mov daa mov mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop or add push cmpsl xchg dec mov imul cmp mov adc or pop jno adc movsb mov movsb lahf inc ror data16 lret outsb mov inc push pop mov popf xor fisttp sbb lods das lea enter or push add outsl gs (bad) jge or loop mov adc clc insl incb pushf mov outsl dec xchg lods push ss add lods fwait enter (bad) scas sbb sub xchg pop xor lcall push leave inc and sbb stos movsl (bad) lcall xor clc adc push xlat mov push push in insb xchg xor (bad) fs jne dec test cmpb push outsl push push nop jmp push aam ret fistpll cmp aas nop lods push push pop clc inc cmp lock xor iret lods clc imul jae scas and and mov aam pop jns adc sarb scas pushf popl mov lahf movsl in bound sbb inc (bad) dec arpl mov rorb lock xchg xchg mov mov add cmp cwtl xchg cld loope popa mov pop in data16 aas jl xchg rclb out rcrb test pushl xor sub (bad) in movsl jbe push inc add xchg in fdivl and add andl ja xchg inc or xchg cmp enter pop insl repz mov cwtl cmpsb fmul xor int3 shlb leave fbstp xlat int3 xor jg cli or hlt outsl lea scas aam pop inc cmpsl jp mov and ret add repz jbe cmp pop sub daa mov cmpsb je arpl das fcomps ffree cmp add mov enter jmp add (bad) xchg out test fcoml test sub stos repnz cmp lds in pushf sub in xchg cmp andl es inc dec lock lret dec xor dec out (bad) sub mov dec push test mov sahf pop das or rclb pop add and outsb adcb mov inc jns jg movsb jp cli (bad) cmpsb mov mov jo mov sub daa fisubr adc cmpsb aas jp xorb cli fldl out movsl xor cmp ret mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 daa xchg jnp push cltd shl xor cmc in daa or cmpsb adc (bad) cwtl jge movsb fs push or push rsm imul in sub lods outsb and (bad) jo fstpl loope scas xor cmc push mov jmp xchg sahf loope je pop cmp adc adc jg sub sbb adc inc xchg mov imul (bad) xor mov (bad) pop xchg test ret aad fs (bad) dec adc xchg fimull lret movsl push xchg jmp in adc out js or sub mov mov mov int3 mov cmovno sub cmp dec ss push sub aas pop pop lock test adc jns pcmpeqb mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 faddl xlat loop sub je out cld test (bad) hlt mov sbb and add test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 cwtl lods ss ret cmp fwait mul in fldenv pop and sbb sub int3 mov add leave mov mov nop inc lock mov mov dec lcall scas fstpl and mov lret mov xchg cmpsl cmp hlt cli mov jo xchg jecxz imul mov cmpsl sbb or mov push push push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 daa xchg fnstsw mov mov add sbb pop iret ret cltd (bad) sbb out aas orb jmp mov pop nop sbb lahf push daa jo mov add dec jmp dec mov (bad) dec sahf lods scas cli (bad) dec push xor pushf outsb int loopne xor mov fistpll pop cmp lea or adc inc enter xor sub adc xor pop mov add stos movsb clc mov jl jno xorl aad icebp popa cmp mov aad pop jge lea jo bound adcb cmpsl imull into test lods jl pusha mov into cmpsl insl or test mov inc push mov jns lods dec cmp jne adc rclb push jnp ret mov dec imul push aam sbb or std inc sub xchg adc pop sub mov scas pop mov mov dec nop jb adc mov in add dec mov or faddl push xor xchg mov push cwtl loope xor (bad) xchg lret cmp bnd enter or adc push push ljmp lods movsbl andb jmp xor sbb jmp aaa ja pop mov ret or cmpsl mov stos push std push and mov or daa (bad) sbb xor xchg lock rcr cltd mov sub mov es lret add mov sub mov dec (bad) push mov pop push imul aam lods hlt adc jno xor inc pop mov push movsl push add add pop mov push adc push lret popf pop push (bad) jno adc out adc insl mov jne cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 es loop add inc test lock rcrl out aaa push fnop fsts in sbb xlat dec sbb cltd nop movsb movsb enter push jbe adc xchg and pop out fsubl je pop sub cmp add xchg scas jb (bad) xor dec adc mov mov in adc xchg arpl sub xor lods (bad) jge cmp je leave mov addr16 xlat mov push shrb fldt xlat gs adc adc pop aam adc dec aad adc mov inc sub or jno lcall das call sub push or cwtl mov aam add jle inc int3 push cmp rolb subl and fldenv push jmp imul pop mov movups inc mov mov fsts mov in and pop sbb lods fwait xor cmp jnp xor popa jecxz sti sub into mov sbbl test imul push fisttp jno jmp cs jp cld dec aam cld sub cmc pop jnp mov test jle shlb jg cmp pop cld xor into pop push cs mov lock jl or data16 fimull and ss test inc test pushf dec jb loop push inc mov add sub (bad) pop scas lret lea mov xor insb das sub push adc cmp iret jmp xor inc mov scas (bad) mov push mov nop ds fsubrs cmp outsb repnz jle mov pop fcmovnbe xor mov lds and ret or dec dec lods pop (bad) sahf (bad) lret jmp into cmp mov nop inc mov mov and je mov cmp ja push add cmpsb repz je loopne mov push sub repnz jb aam bound xor adc push test mov pop ja push adc cwtl stos sub sub (bad) xchg sbb push popf or cli xor sub sbb pop mov pop repz or sbb mov call mov jnp sub call cmp out inc test js jg or and xchg leave cli mov mov xor arpl sbb xchg push cmpsl jns push int (bad) (bad) aaa leave nop mov push mov scas mov adc mov adc lea adc lea adc mov adc lea adc mov adc mov adc inc and cmp je cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc inc add and outsb pop dec add mov lods sbb outsl int shlb push popf adc jmp or xchg push lret pushf adc lret (bad) adc xchg add addl mov sub mov in and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and les adc int3 mov sbb sub pop imul nop jge movsb ds dec pop leave push (bad) gs add sub nop inc divl cld add lea loopne add mov fwait inc xchg inc mov in iret push push mov insb xchg push dec lea loopne dec sbbl out bound sbb int cmp icebp fcomps lret push and pusha jmp mov jo inc pop test push jno mov dec add cwtl icebp mov mov push jb mov int in out xchg lods jae inc cmp adc cmc pop cltd cmp inc out daa jb xor sbb jge xchg and sub movsl xchg int push push enter lahf ret daa fchs rcrl repnz add dec rol jae sbb out cmp push repnz mov xchg xor jb lock jo out xchg push lcall outsb aad pop es test lods dec pop popf push xor pop and sbb add movl out out pop push and xor ljmp mov daa mov (bad) jno (bad) mov lret push ficomp inc std aam subb stos dec push sbb cltd xor cld push cmpsb jb aaa insl dec mov cmp (bad) gs mov add clc test add mov jp xor jmp jne leave scas dec negb jno push jmp clc xchg aad lcall imul xor in mov mov neg ljmp roll or (bad) mov lock jb cli xchg bts pop jb mov sbb and mov movsb adc sub mov xchg outsl mov stc cmp push jo sbbl mov sub cmp or in out xor fisubrl fisubr adc out sbb mov lret test mov gs sub add mov in rolb shll mov mov arpl xchg dec and movl mov jle shrl cmpsl ljmp cmp xor jge (bad) adc mov into cmp add les daa or and xor loop sbb mov cmpsb push mov jnp test mov in pop xorl dec jge imul lock push xor push dec pop push pop dec loope (bad) (bad) out cs in das iret cmp or sub fwait dec push cmp and fcmovbe jge lcall daa mov mov mov pop enter sbb jg pushf mov (bad) ja frstor aad xchg inc fiaddl xor out adc fwait xor imul mov cmp adc push jno rcr fidiv push mov std js sub jl test sub push fiaddl push mov adc mov pop jmp sbb call lcall sbb push xor std js mov and cmpsb mulb bound lea pop dec xlat cs inc pop xchg adc daa cmp cld aam jmp and sub inc loope pop cld dec push outsb add fs lea inc sbb fistp inc sub sub data16 fbstp repz pushf imul sbb dec pop popa lahf mov je aam negb leave cmpb add (bad) ss sub stos jg outsb dec enter pushf xchg pusha cmp lds xor cmpsb push (bad) cmpsb mov add lret dec mov loopne xchg add loope into xchg out xchg pop shlb xor (bad) push and sti push mull hlt xchg inc in stos sbb fwait icebp outsb loope pop cltd in imul and jo,pt dec mov and ficom lret or mov add jp xchg pop stc pop repnz jge add jl fistl pushf lock xor jl rorb mov cs mov test xchg call push xchg push mov mov es xchg stos and xor pop mov push xorb lret dec test aad mov arpl cmp bound insl cmp xchg or push adc mov icebp nop aad loope mov popa jo (bad) sub mov repz mov inc inc sub in repz xor and sub xchg add mov test repz and or and xor cmpsl adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 xchg ss pop loop cmp or scas or shlb (bad) mov cltd hlt ret cmpsl call mov pop mov sub inc pop and dec and scas addr16 sub mov mov loopne fdivr aad popa inc jecxz stos jno test pop outsl rorb or sub adc mov cmp je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl xor mov jl cs (bad) adc faddl jne add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 faddl arpl inc lds push jns inc stc in cmpsl sub pushf sbb or (bad) hlt fwait loope inc push pop ljmp in sub sub xor mov pusha pusha jecxz pop out scas sub (bad) dec insl add jge lahf inc hlt call js cmp inc xor jmp imul mov cmpsl sbb jne sub adc outsl addr16 icebp or cmpsb cmp mov rcll int aaa mov (bad) repnz cmp fidiv mov sub fdiv adcb lret js mov fcoml cmpl lahf xchg sbb push div push lock repz rcl mov lret mov and mov xlat dec aad pop fstps popa idivl mov ret fdivr mov cli mov inc cmp in shrl mov jl test stos xor in int3 rcll fwait adc ret stc mov push sbb adc jo xchg icebp push xor enter mov push jno dec cmp push fistp fstps insb or xor icebp dec pop jnp movsl pop mov mov dec fwait dec push (bad) mov and push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 addb pop (bad) loop ret xor out inc iret es mov mov psrld push xchg dec outsl rcr aad (bad) test cmp sub test mov cmp mov sarl lods out mov outsl (bad) (bad) out enter (bad) push xor cmpl mov stos pmaxsw fist jbe inc xchg push out inc cmpxchg lcall imul fwait imul xor mov sub pop jp xchg dec mov dec cmp pop adc cmc gs inc xchg mov xor iret mov mov pop in and sbb pop mov inc in cmp or enter sub sti icebp cmp jne int3 not xchg test adc adc shr sub mov adc mov or aad sahf or inc mov test jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 and push inc (bad) push push out pop std sub fs (bad) mov ja mov stos mov xor xchg add inc stc sbb mov ficomp ja in dec cmp ljmp daa loope aad push pop (bad) out jno inc inc sub jae (bad) push iret jl repnz ss mov icebp xchg cltd jae dec mov mov jno cmp sarl jecxz mov adc pop pusha mov push iret popa mov je cmp ret cmp xchg cmp ss cmc data16 fsubrs cmp in adc push les movsb test or jle dec mov (bad) mov dec imul outsl jl arpl sahf push push jnp icebp movsl inc inc push sub rclb test lea inc dec enter sbb lea inc cmp adc test dec mov mov adc pushf jl mov mov sub mov mov push (bad) fimull aas (bad) mov les scas call nop add ja int (bad) lret popa sub push (bad) push shr cltd fnstenv pop cmp mov xchg jb icebp aas xchg lahf (bad) (bad) push cmp sbb push lahf sub push call xor call mov decb mov add pop outsl and sar sbb sbb (bad) jp push in sub hlt and jnp xor or xchg ljmp in fsubrl rclb (bad) movsb pop into sbb cmp fidivr adc or cld fcmovnb stc and ret (bad) xchg jmp cld les pop and xchg fwait push stc and mov out fs daa adc sbb enter add sub mov mov sbb mov add sbbb fwait outsb outsb movsl add in adc push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 and inc ljmp sub das ja sbb data16 cltd pop push adc mov jae ja inc fwait loope popa jle mov jne jns and xor push add xchg shrl mov rorb mov push push mov movsb xchg adc cmp hlt fwait mov and imul test pop sbb imul and inc pop in test inc jnp pop inc xchg lcall scas stos mov sub adc shlb push fwait fwait jg out xchg jns cmp aas out pushl les (bad) push test push sub mov mov bound mov mov and rcrb push icebp pop inc sub adc in or inc sub add add cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 fstpt aad rol mov add sbb movb pop and loop cmp js push repnz adc (bad) sbb mov lcall push movsb xchg cmp call dec icebp mov in jno imul (bad) xor mov into mov mov lods stos or les arpl and int enter call mov jmp push pop fistp dec test ss pop stos je lock test lods xor xchg inc test daa sbbb ljmp rorl ret fs pop xor and mov insl add (bad) add scas mov mov cmp inc jb inc repz jb dec adc mov cmpsb ficoml mov movsb daa imul mov imul test or mov std jl lret xchg add dec mov es pop jnp and jecxz decl xchg rclb push sub jb (bad) (bad) enter cmpsb inc cli inc dec push or xchg divl jecxz mov and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 and stos xor out addr16 add mov test add movsl sbb fwait pushf test das mov (bad) cmp fisttpl mov adc mov mov int sbb cmp sub aaa inc dec or std jae push pop push (bad) out sub jae icebp jne addr16 jo mov cmp xchg dec mov fdivrl mul pushf or jno push push or sahf and imul xchg stc dec ljmp lcall and scas adc cmp (bad) cmp inc inc fs pop xor inc ljmp fs cmp int loope aaa sahf push jle jno jecxz and and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 and cmp pop push call es in lcall inc daa gs add cwtl ret add inc xlat jecxz daa test inc in add xor sbb mov sahf pop sahf call mov xchg lods outsb in cmp push xor (bad) xor iret jp cltd inc xchg leave imul or and cmpl push imul sbb mov jns sub mov outsl and xchg and loop pop adc flds int3 into pop or push push imul xchg movsb out decl lea sbb sbb mov mov pop add mov ds mov adc mov xor xchg test pop jo lea test pop adc adc in jp stos lea ret mov mov jmp or and jl push push push dec push jp jo rorl (bad) mov xor pop pop and mov fwait pop mov ljmp adc pop loope jne xor and fstl out out test lahf sbb push jbe ds lods aaa push leave pop xor mov stos inc push push jge aad adc pop sbb dec cmp jnp add daa mov in xor xchg pusha dec movb jbe sarb js outsl lods and push std push daa lret fbstp (bad) fidivrl les leave into int rcll shll cwtl pop xor std jnp mov or test cs cmpsl push fdivl and imul xchg ret mov dec add and mov (bad) cmpl lcall imul sbb adc mov fs cmp lret icebp dec in xchg les cmp into lret cmp dec arpl ret rep pop inc or jle mov in adc add lea push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 fcompl divl popa xor in lcall cmp hlt push add aam push rsm xchg test arpl jo mov push xchg jmp clc sar adc (bad) sbb cs pop xor cmp aas lcall pop enter inc aad push pop lds sub jge bound popf mov inc out inc adc lahf out xor ja dec mov lcall lahf mov dec sub add mov xchg dec xchg sbb adc lret leave jmp imul or stos xlat sbb mov add inc or sbb xchg adc mov push mov mov cmp mov insb clc jnp add sahf jbe mov xchg and cli jmp xchg mov test jns lea xchg pop mov cmc mov push push jae xor fimul inc jae imul movsl and mov and xchg and xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 es jle xor enter push fs in lock jecxz out shll mov insl pusha notl pop sub lock xor inc sbb out test iret push movsl pushf mov lea sti pop cmpsl inc jnp mov mov push loope xchg imul lcall push in xlat std out inc mov or jns (bad) daa dec movsl sub pop repnz call cmp adc add cltd cmp inc mov pop lcall cmp xor loopne xchg pop fsubs lea mov cmp sub cwtl out cmpsb (bad) jle scas inc dec push stos inc sbb (bad) xor mov sub cmp imul in loop push mov sbb fwait push or out ds repz pop adc mov (bad) loopne popf mov imulb pop outsl pop aam ljmp push ret in jne stos rolb adc fwait add mov call push movsl and mov ljmp sbb adc push outsl push xor fwait pop add jo ret jb jl fs pop mov notb add ret aad out mov mov and pop jmp xor jmp or cmp adc lea jb,pn in int push cmp fucomi xor (bad) xor lds fbstp cltd test (bad) add lock or dec insl xor or outsl jl mov cmp xor in xlat add out adc test fldl cmp pop push sbb mov decb cmp jmp mov ret in and or mov jbe int movsb xchg push ljmp push xchg cld ss bound sbb cli jmp (bad) lods mov jno lcall jb mov (bad) and cmp pop cmp mov dec xor das inc jge mov popf mov enter inc test ficoml popa dec in std stc pop js xchg mov adc sub cli cmp loop out loope enter clc pop xor jb popa jb push mov popf test call xchg (bad) cmp sti mov mov push out lea or sub cs or mov adc cli cld fdivrl jns fs int repnz sub add in (bad) and fist cmpsb or add push loopne imul aaa add out mov fucom mov jbe les faddl scas jo aad cmp sub mov popl arpl mov dec xchg dec and sbb fprem jne out bound addr16 push pop shrl es sub sbb xor and adc xor add jne in lcall stc ss cltd (bad) mov adc mov jo dec les inc loope fsubrl xor push in and icebp sti imull (bad) mov adc arpl hlt pop xlat jl and shll ds and mov sbb stos push dec hlt sub xchg and mov out cmpb imul std imul add jbe (bad) int3 iret xchg aad lret stc aas cld or xlat (bad) insb mov outsb leave repnz cwtl fistp repz dec or xchg test test cmc into mov std jecxz jmp shlb xor daa aas jno lret cmp inc sbb sbb (bad) call cmp mov aas daa pusha mov sti in or int and ljmp insl push add mov in push dec or lds repnz cmp out das ja inc inc scas (bad) sbb sub pop out (bad) test int and stc fcmovne mov loope loope mov jno sbbl in xor pop out lret mov out jg iret xchg sub jo aaa repnz or inc sbb push cmpb adc (bad) out jmp cmp mov mov in jb xchg and lcall xor in fcomip pop insb mov lcall daa mov out inc and adc xchg or iret adc insl adc dec adcb or insb cmp stos jbe inc aaa xchg ja dec lock js cmp dec call mov sahf mov xchg cmpw lds rcrl imul mov lods stc (bad) lret xor mov pop test test mov inc mov lcall aas lea js int movb jb jns (bad) sub movl outsb in sbb lock subl sub fldcw jl pop mov pop jnp in xchg inc xchg add adc cltd add lds ficom adc xor push inc cltd in inc cmp jmp ss sbb adc sarb xor add dec mov ret pop xchg mov mov mov ret dec lock xchg xlat mov outsb cs idivb mov sahf xchg xchg mov or xor jle sbb ljmp into cmp pushf repnz inc imul sub mov inc ret and add in pop sbb push add rcll cltd movsb sub xor lret movb (bad) pop ss in add push push dec rcr mov leave jg push hlt jnp jl ret xorl mov repz and jo popf jg icebp stos scas jecxz sbb mov and xor aaa ja mov fimul repnz sarb lret add pop insl push xchg xor sub sub cmpsl xor xor cli pmaxub aas sarb xor dec inc sbb jge in aad orl inc mov fisttpl xor jmp add xor shrb or and sbb pop sub pop in sub aaa add out (bad) aas jno in cmp mov cmp (bad) addr16 cld out mov pop xlat jecxz xchg mov repz pop std pop mov dec pop mov or dec or in mov push ret vmovaps jge mov add inc xchg cs sub inc and jl or xchg aaa pop andl dec xchg dec scas and pushf and or and xchg aam xchg inc dec aas dec jle js addb cmp ss popf and push and roll cmp dec leave ret xor fwait stos xchg push mov pop or sub out cmp out adc xchg es mov push push lret jecxz inc arpl cmp cmp cld xor fldt push mov cs xchg jns xor jo pop clc dec out xor (bad) jnp jmp adc and hlt mov outsl cmp cld movsb ja out add pop dec int3 sti repnz dec int mov cmp jne sub mov push fimul sbbb mov xor sbb or push push cmp fld1 std sbb jl lahf pop outsb sahf push int sbb xchg fiaddl mov mov and loop imul push push cmp inc lock pop xlat dec and mov xlat push add out sbb jmp mov mov and jns movsl dec shl adc mov loopne test dec (bad) jle push stc xchg sub jge or fmuls xchg addr16 out rcrb xlat sbb dec inc std data16 mov nop into xlat jnp xor cmp nop mov aam out pop fwait jecxz mov mov iret mov pop stos pop fwait dec int3 call clc fsts int3 enter nop mov popf out leavew popf ret cmp cmp dec addl sub out mov sbb ja xor lcall clc int push cmpsb xor flds push addr16 ret dec in push lret push sub xor gs pushf lret jb sbb shr pusha xchg sbb xchg and stos decb mov sub scas fs inc xchg faddl mov mov fsubr push out dec dec inc cli inc test and sub and fidiv mov push cmp cmp repnz shlb pop jge cmp jmp xor jp mov rorl sbb and stc stc lcall sahf cmc add inc inc cmp inc xorl sub lock push in dec outsb lods popa add push xlat mov xchg hlt les mov inc (bad) or dec enter sarb mov xchg aas ror inc push push xchg mov push (bad) dec addl loopne std push ja push jns mov xchg aaa add lea jb mov (bad) aas add xchg (bad) dec dec dec xor push mov test or sti or dec aas sbb popa out fidiv out and jno lock push cwtl hlt and cs cmpsl int in pop inc pop and sahf jge je,pt fsubr mov dec pusha aaa jns fsubr cli test push js adc push mov or cmpsb fsubr cmp jno mov lods cmp jno sub jnp (bad) jne das jg xchg xchg adc cmp fildll inc mov rolb sub pop pop dec push add cltd aam push outsl sub push xchg xchg ja add mov test (bad) xchg add add push pop shl mov jle inc xor jnp (bad) mov test pop jg or push bound in jecxz popa sbb xchg dec add add scas or cs pushl (bad) dec cmp insl enter add inc push movsb jno mov loope nop std addr16 int3 ret (bad) aad cmp fisubrl (bad) sarb jg mov repnz adcb cld repz fistp add repnz jge xchg clc dec mov mov lret or or adc sbb addr16 bound and out ds aas fidivrl sub aam or (bad) pushf and jge (bad) dec enter mov push (bad) leave lcall imul add lcall (bad) aas aad xchg aad mov xor jae inc xor sub jbe outsb inc in pop lock jg jle fucom std insl je jbe mov movsl inc cmc incb movsl inc mov daa jle fsubrs movb out pop int inc rolb in std ds xor push dec dec mov outsl fisubl add pop sub loope sbb aad decb loopne pop sbb sbb cmp data16 mov push mov mov movsl sub pop (bad) xchg xchg lcall jbe and jmp push xor iret aam mov mov pop cli int3 add pop jbe push test pusha jns jg popa and wbinvd dec pop sub popf insl push test (bad) and jns mov sahf addr16 imul pop fwait mov bound ficomp (bad) int3 inc mov or fs push das pop out mov insl sbb out jno inc mov jo (bad) xor popa sub xchg adc outsb mov enter (bad) mov (bad) faddp arpl lock lcall movsl out jp pop xor dec mov xchg cmpsl shll fistp inc push and adc push call adc mov sbb aam push sbb mov pop addr16 fcomps (bad) mov mov pop fstpl and loopne xchg mov pusha pop pop stos lock push mov or cmpl or jae mov mov xlat jmp xchg jns adc fs xchg sahf mov and ja pand adc pop lea xchg dec insl push iret mov aas leave jg add call (bad) lods sbb xor negb xchg xor cmpl pop mov inc mov push cld mov fnstcw xchg arpl fstl test mov cmc fwait mov stos adc sub push sub dec push jl pop xor mov xor or jl rorl mov or push lcall sarb sti (bad) in dec iret leave (bad) pop or or sub test pop sub or pop (bad) popa add insl mov mov (bad) repz jo icebp inc add aam pushf loope mov dec je ret mov mov pop add add test roll repz cmpb aas mov test adc adc lods ljmp nop enter xor inc mov insl sub mov les lret (bad) imul fistpl xor and addr16 scas mov repz mov test sub loope test aad xchg cld test jge push xchg pop inc mov fildl nop and shrb cmp xchg mov sbb xor mov mov in shl prefetch jmp js mov fistl lods aas rcrl push pop dec lods rorb mov rcll xor add cld or mov leave js jns cmp and mov xlat out (bad) mov cs jmp xor pop pusha mov mov mov xor mov mov call adc pop xchg push jb push (bad) out inc push in jmp mov in xchg in cmp mov scas jnp mov out lods mov mov jae imul sub xchg sub (bad) cmc stos and mov jmp (bad) sbb or and mov aad jns (bad) mov out clc fwait dec lods fs inc pop sub jae mov es xchg xchg insl mov lods push aaa mov inc inc xor cs xor pop mov shlb sub jno std stc push inc ljmp pusha js mov inc or enter xchg out in jecxz scas sahf add cmpsl test int push stos sub stc lods pop inc ret mov cmpsl insl movsl aas sub mov stc mov adc scas es pop jne leave js or mov pop gs (bad) and pop add lret inc ljmp jmp or cmp je (bad) cmc aaa test and sbb adc xor imul xor push pop cli adc pop dec adc negb les lret cmpsl or sbb jne and aas xor sbb (bad) xor popa clc imul mov push adc and popf mov jbe mov out out clc push test push imul or sub cmp cmpsl repnz lds inc nop (bad) mov cmp push pop shll sbb or out mov popf xor xchg imul xor mov xchg popf ficoml jle cmp insl adc adc cmc pop fisubl ja iret jg pop cmp sbb adc xchg cltd pop add (bad) aam sub jg xchg cs jecxz dec dec push mov xchg arpl popa rcrb pop in insb pop shrb adc imul sub aad (bad) ja jge cmp test aaa xor and test lahf pushf fisubr imul cltd mov pop cmpsl cmp mov pop mov das repnz imul xchg jp std (bad) jno push xchg out popf pop mov (bad) mov push jmp outsb dec int3 jecxz call int3 add jbe adc lcall jnp mov fdivp fbstp (bad) xlat xor add push xchg fimul aad push pop les jbe movsb in lock leave cmp dec lock gs js outsl (bad) xlat jg cmp fsubrl test sbb lods fcompl push test dec pop add mov or pop sahf and push push xchg clc or dec inc push pop sub (bad) in fidivr out arpl xchg add pand (bad) and xchg pushaw ret add loope cmpsb mov sub mov incl push repnz movsb std mov push (bad) es push je push adc mov les idivl cwtl inc insl cmp inc neg push (bad) mov stos loop (bad) hlt adcl jecxz dec dec jb inc insl xchg xchg mov arpl icebp xchg jp dec in xlat std cmp or icebp mov jle lcall insb arpl pushf cmp xorl mov ficomp loope pop lds inc xchg xchg or out and outsb jmp dec sub xor add pop mov test xor mov sahf mov or sbb push (bad) jno mov repz and pop lock jbe mov in mov in push cwtl sbb mov (bad) jbe adc mov sub test inc xlat mov dec sbb scas jle mov cmpsl mov mov push xchg das jnp xchg daa jecxz pushf out aas or xchg or xor dec adc mov fsubrs sbb xchg rclb sub add sti jl cmp inc into data16 push mov (bad) fs pop pop sahf xor data16 or enter jl add push jno jbe mov sbb movsl pop (bad) in into repz jg sub push out rdtsc lea dec jno andb mov sub xchg inc js cmp inc fs sub pop leave mov clc icebp jns cltd test (bad) and sub enter mov stos enter cmp pop xchg inc mov push pop push pop and adc mov mov insl xchg cmovge and mov sub into in push inc jns loopne or insl or into sbb xor add rolb (bad) test or mov sub imul out xchg xor scas or imull cmp or mov call in and push inc push jg adc mov insl call or jbe add push pop lahf lahf pop lock movsl push cwtl mov mov jb pop icebp mov out adc xchg fsubp enter ss sbb or lods mov lock std gs rolb ror xor mov iret in inc jg out insl jnp mov mov cmovs clc jp add push jge pop mov int sbb and hlt push out shlb shl cmp mov pop dec adc or push lret jg scas negb and mov outsb cmp clc and fcomi sbb push cltd cmp xor ljmp inc push clc adc jg aam rcl sub inc enter adc sbb xor dec cmpsl lretw or movsb cltd lahf outsw mov inc aad adc je push lds push arpl and (bad) aas mov and adc push (bad) rolb jns xchg mov into xchg das cmp dec sti jl cli out pusha push xchg mov sbb mov mov cmp cli mov jo mov pslld push arpl loope enter lods scas stos fistp and add push fidivrl test nop (bad) sub out les xchg icebp sub add scas fist mov mov loope mov inc divl stc mov divl pop or lahf nop mov pop lock pop testl push daa inc sarb arpl mov cmc negb iret rcrb lret cmp mov mov js add les jns (bad) pop adc negb or jp jg xchg inc lea fwait jo scas fwait sbb add mov mov mov pop jp mov cmp xchg (bad) fidivr jmp push cmp jo (bad) push sarb jp push iret in push mov pop mov cmp and je das xchg push jb mov push dec jno fbld or mov cmp mov and in push fmul mov xor add lods movsb fwait push mov mov js rol nop jg int3 push mov sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 es loop jno and lock out sub lods dec and xor and repz and add arpl cld add fs fs popa push lcall sbb jns jg mov mov pop pop sub push sbb inc jg mov or mov arpl mov movsl fistpl (bad) insb cmp repnz add sahf shrb xchg jecxz xchg push imul adc iret cs sub adc lods cmp cwtl mov aam cmp shl cmc and test pop lret push sbb adc outsl ss pop mov aas dec and dec ja push cmpsl in outsl cmp jns inc inc mov xchg into call cmp ljmp push xor pop fisubl pop (bad) pop inc ljmp add mov out fisubl popa fsubl jg bound test cmpsl fwait mov pusha inc das test inc mov push cmpsb andl repnz jl aad ret inc les inc ret imul jle (bad) mov scas mov nop fwait call jp,pn dec adcl cmc add in jb jae xchg add mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret es or xchg daa mov out enter jmp and mov fstpl js dec ja pop sarl or or cmpsb mov add mov sbb pusha add dec cli fwait lcall push rcll mov fnop js sub cmpsl pusha or sbb aad pop nop sar xor dec mov fimull mov mov lret imul push push mov ficom (bad) bnd pushf fstps iret push idivb mov xchg rolb lret push cwtl fistp mov cmp popf inc movsb pop and outsl push mov push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es adc sti loop inc push aaa adc loope loop xchg jmp stos movsb adc addr16 nop add insb cmp dec nop pushf xorps mov movq movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 es pop pop xchg data16 jae repz ffreep sbb mov loop call pop mov dec sbb fstpl mov fsubrl sbb mov sahf (bad) cmp loope daa sub jmp sub mov mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 es or xchg daa mov out enter jmp and xchg movl ret lea scas inc dec pop sbb mov pop sbb add les aad dec xor pop xor sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 aam jmp fdivr mov mov sub sahf fs in lock jecxz out shll mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fsubrl mov jno fdivs cld test in mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 es loop xor pop test pushf inc mov or pop xor insb js test fs addr16 (bad) mov mov (bad) fs inc jns xor or push add xchg adc cli sub mov mov and sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 es adc lret or inc ljmp movsb imul (bad) movsb fwait pop sbb jo and stos xchg add pop jbe popa push mov inc xor push push lock scas xchg adc cli sub mov mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 es ljmp (bad) je out cld test jl adc leave cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 es or xchg outsl test out enter jmp and mulb inc jecxz fldcw test lods inc push jmp (bad) add popf fnsave dec lahf in sbb mov xchg cmp aam pop out scas jo xor dec sahf dec faddl sbb xabort adc bound and push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp cmp and insl dec and pusha data16 cmp or lcall jl dec xchg call sbb int push test sub nop lret addr16 mov inc sarl lock pop xchg adc cli sub mov in sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 es loop xor pop test rolb inc (bad) fsub mov gs shll mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 es loop dec dec and pop mov scas jge repnz scas pop dec sub push cltd (bad) out jmp inc xchg call loopne inc push jecxz (bad) jae rolb pop mov nop mov stc js mov sahf xchg fwait and fwait inc insl mov and inc inc dec jge je push (bad) jns ss xchg rcr pusha mov or sub mov fistl je ja xor xchg (bad) stos jmp mov (bad) pushf cmp dec fisubl sbb cmp mov insl sub or sahf push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret es loop pop dec and pop test rolb movsb push and das push add (bad) fild mov dec das test mov insl mov mov pop pushf mov sbb clc xor test dec push jmp (bad) mov mov enter mov sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop xor stc push dec inc lahf or fidivrl fs cmp ret bound mov out xchg jle xor stos mov aaa jb out jo pop aas mov jb push test enter cmp jge pop test fild pop cmp sar mov or mov xor sbb ret dec cs imul xchg sbb pop decl das imul push fisttpl add outsl cmpb sarl sub push jmp stos mov lret and out cs sbb pop push mov out sub xor out sbb sarl inc jnp mov sbb in mov aaa or add cmpsl js lahf (bad) cmp call push jg fs cmp add in popf cmp lds shll mov jae icebp ds jbe mov jl ljmp dec xchg cmp add dec flds cmp outsb enter add icebp loopne (bad) rolb push pop push fs pop ficom outsb push lcall divb jp popa out push pop pop inc xlat inc push pop xchg jmp daa and mov mov pop mov daa sbb and cmp movsl insl sbb xchg scas fldt call xlat xor stos push roll and iret jno add ficoml push or popl popa lds push mov adc add movl (bad) iret cmpsb aad mov int sbb sahf pop lcall push mov jp xor mov inc push mov stc inc jbe push pop dec out (bad) and mov xchg loop scas mov fistl aad and xor sub testb rcrl bound mov cmpsl sub ja push sub inc fild mov mov sbb dec dec mov jge add imul xchg jge inc aaa pop add xchg mov fs adc sbb mov mov cld addr16 outsb sub and (bad) mov xchg jns adc add (bad) imul pmullw jp push popf (bad) cwtl cmp cmpsb imul and imul sub mov je pop inc test mov jle dec lahf adc dec out sub aas outsb in ss mov mov push dec sbb out mov cmp xlat push insb dec cmp (bad) mov xchg loopne in sbb stc (bad) outsb pushf pushf test fcomps leave nop cld dec in pop jge outsb nop js adc stos push ja sbb ljmp sbb hlt int3 out repnz movsl popa adc int3 pop fwait lock pop adc push or push pop jae lods ret dec sub mov cmc aad mov (bad) cmpsl push add sub dec lret mov in adc mov (bad) fdivrs (bad) and add mov inc adc scas insl push or popa mov add push jmp pop in xor mov inc cld out test stc repz ds out add in jo cltd cmp cmp push lods push inc mov rcrb jle jno push lds out sub mov cmp mov fwait cmpsb mov ds lret shl out mov addl jnp cmp mov imul jle bound mov xor mov fs test sub insb or adc (bad) cmc pop xlat push les push stc xor pusha mov jb pmuludq xor xchg pop inc cltd mov fcompl push repz es and loopne int3 lds mov sbb pop (bad) jbe mov dec sub or lods in adc in cmpsb dec jmp in cli cmp add jecxz rolb cmpsl xlat mov nop movsb subl and jle stc rolb scas sub xchg xchg push sbb pop repz leave jge or adc cld shrl insb inc out sub clc mov sub lods (bad) xlat or (bad) movsl xor dec sbb movsb fisubl in and add jo adc lret xor fs and push aas sub push inc or push mov xor dec mov sti sbb test das scas ljmp or mov jmp loopne inc xchg nop xchg mov repz imul sub ss js decl stc das repz inc ja out insb cmc cmp mov ljmp or sub cmp jmp mov outsl data16 fs jnp hlt loope inc loopne shll pop scas mov lret and xor lahf outsb insb sahf jne cltd mov daa jnp xchg pop jbe or rcl sbb xor xchg xor lcall adc enter mov data16 insb jle xchg mov mov jns pop jae lret sbb push pop aad icebp inc dec pop jmp inc cmc in (bad) xchg daa xchg mov mov add push or and fwait push cmp fwait enter and mov imul jecxz xchg cld mov shrb repz ljmp dec ds (bad) sbb xchg push pop mov mov pop or repz sub pop sub mov scas mov (bad) jp and push and addb mov pushf xlat sub pop outsb aam call pushf xor cmp cmpsb jb,pn lret sti in sbb cmp xor adc movb mov xchg repz and nop xchg int3 mov xor jl lahf sar scas mov call cld in inc mov inc or rep arpl push xor in icebp and push jl pop jg xchg fnstsw xchg xchg outsb xchg pop add pushf insb bound jp (bad) push sahf pop iret add mov dec xchg dec lods data16 jle adc scas lcall add mov mov in adc cmp adc xor rcr aam and int3 adc cmp mov pop xchg sti icebp push fsubrl push adc mov popa jg test add dec roll popf scas mov or jae sub insb xor or ret test jae and add loop mov outsl dec inc sub cld stos idivb fwait movsb or pushf dec sti mov test in dec inc (bad) fsubs data16 jnp movsb pop (bad) lahf adc xchg sbb std mov (bad) xor push test pop jmp mov in pop xor loop les sub aam into push push repz mov mov sub (bad) outsl cli clc aam int pop xor mov lods and fldz loopne mov jp loop imul cmc push push aas xor xlat add in or ja cmp dec mov out dec xlat push adcl push adc iret inc dec and aaa xor push add or in mov pop aas inc loop lahf push imul dec stc dec mov ret sbb and std mov lods (bad) sub or bound cmc daa aad jns and inc orl adc into lret inc ds or and inc mov push fimul outsl pushf mov mov sub pop lds inc xor adc lds mov mov push ja insl scas jb lcall sub sarl sarl or dec inc out in sti inc stos imul jnp mov movsb hlt pop jp mov adc (bad) loope (bad) in ret pop out push mov imul xchg stc scas dec adc mov jecxz mov or dec incb rcrl pop pop imul jg stos sti paddb jno add cmpsb aas insl shrl mov movsb test dec insb mov cmpsb call pop shrl sbb adc pop push push cltd lds or adcl xchg adcl jl fdivl shr jne ror repz dec fwait (bad) sbb jecxz testl rolb bound das hlt cmpsb adc adc cmpsb mov ja sbb lahf pop iret mov jp (bad) sub imul inc dec iret and ret inc lock fucomip pop lret inc push fcoml pop jno lcall jb jbe stc cmp jecxz mov jbe sbb pop test mov ficom jo ret addl movsb (bad) sahf push pop dec fwait xchg fs and ds out in push rorb jge pop cld loopne or stc inc sub push mov mov xchg rcll adc jg hlt aas shll aad movsl add rcr std cld mov add cmpl dec dec fldt push (bad) fcmovnb add push mov mov xchg sti int3 insb mov xchg jb addb cmp fs cli add pop mov xchg sbb pop pop dec out sub jbe adc aad aaa repnz xlat sub jge xchg in pslld push adc or arpl xchg xor cltd mov inc add xchg aam jmp or movsl js cmc loope mov jle cmp fiadd cltd lock pop xor xor fcoml adc mov scas or add xor mov jmp rcrl cmp mov je adc lock roll adc sub jae sbb je fwait lcall pop test loope aaa add mov inc inc mov mov xchg sbb mov imul sti cli add jmp mov icebp cmp test xor pop mov cmpsb out insl enter or aas mov bound inc lods repnz push mov (bad) mov pusha sub jl icebp push sbb mov imul jmp std nop jecxz leave cmc cmp jg in dec mov das cmp pminsw jp jp (bad) xor fwait (bad) mov or les stc lcall inc and into data16 arpl test mov mov mov cltd dec lret inc (bad) pop add imul xchg std int3 pushf jecxz xor cmp pop add movsb pop jecxz (bad) xor adc add into iret mov cld out inc xor cmp rcrb jne lock lock lea mov jo aas outsl test lock ss out test xchg test mov fwait jno mov inc push mov and int jecxz sub bound icebp xor mov xchg push cmpsb push mov mov or addr16 aas lock call xchg test sub out adc pop mov jne adc lock mov inc pop (bad) pop add cmp or mov cmp inc or (bad) jg in push sbbl cs fnstsw cmp shl sbb stos ret jg xor mov fistpl xor pushf daa adc jnp xchg aam pop (bad) aaa sub dec js (bad) cs inc mov lret inc and inc sub jno and outsl popl shrl pop or cmpsl or ret (bad) (bad) cmp push scas mov lock outsl cwtl (bad) fcoms add call rcr sbb pop lcall xchg xlat lret fcoms or lods push stos ljmp and rep lods adc jne push pop xor xor fs pop mov test dec mov mov sbb dec ret mov cwtl jnp scas pop (bad) xchg push mov insl lcall cmp jbe mov add adc mov mov pusha dec jbe data16 arpl sbb sub (bad) ss push lods push and imul push xchg pop enter add add push or test hlt aad adc cli stc sbb jl pop in fwait std fs sub push rcrl mov inc daa mov xchg and jl mov out cmp data16 push jg divl xor gs jne (bad) mov scas xor lahf or jp xlat xchg push cmp mov sbb in movsl mov lret flds jle add or shll iret cmpsl mov cmp loopne mov jecxz outsl jmp das push mov push sbb ret fisttpl push lock mov lea and loopne pop dec test jp adc aas (bad) data16 mov and inc repnz and mov notb insb push xchg pop pop popf lods jns (bad) cmp fcmovnu xchg (bad) into mov nop sub ljmp jl cs in cmp pop push sub je rcl mov xchg cmpb mov enter and iret fwait jl mov xchg mov int3 add mov push mov cmpl mov into les cmp xor adc test test popf cmp dec mov aad jnp sahf jns mov xchg loop xchg test mov push jno add leave lock fs push xor mov mov nop fdivs inc mov loope sub or hlt ficomp scas inc mov xchg lcall fldcw cmp fbld icebp int cld ss jbe imul push lret inc sub stos mov movsb pop and mov lret xchg cmpsb in bound pop adc sub push pop cmp adc adc dec mov mov jmp or xor mov xchg loopne daa jg pop loope sub hlt (bad) mov mov sub add push inc js jmp pop sbb jle pushl jecxz jl mov mov out popa mov and out dec addr16 ds das lcall test out xchg insl adcl loop (bad) dec dec mov scas sub push add xorl or mov scas pop sbb lods push aad in aaa das repz ds je mov lcall incl int3 stc push (bad) scas (bad) cld aaa mov mov mov mov lods repnz cmp xor stos fiadd loopne mov aam and xor xor mov sti loopne cmpsl movsl aas daa aaa mov lock and cmpsb ljmp cmp out inc sbb ret jl mov and (bad) lret mov jl dec or cs push ljmp enter adc xchg jl cmp cmp scas jbe push shrb loopne adc lods movsb ret outsb pop adc push je fs lret lahf mov push in mov cwtl sub sub sub mov add bnd (bad) fdivrl jns push imul mov push aad jecxz mov dec sbbb fmul outsb in dec jle in xor xor and je leave jmp add stc int3 jns xchg pop mov add add jg int jg mov or fadd call pop (bad) sub (bad) or xchg xor ficoml loop jl push mov mov daa xchg adc push (bad) xor xor pop jp xchg daa sbb mov xor mov jae mov fild pop mov push repz dec and stos and adc lea push mov sahf cli jle mov push jb jecxz and test pop scas data16 aas inc jo lret dec jne pusha push aaa and push outsb pop jge inc jmp xchg or ret pop ret jecxz shl pop (bad) ljmp cmp insl aas jmp outsl outsb (bad) lods push shr sbb mov or ss movb mov pusha xchg jbe adc jne push shrb out out jp out ret cmp cli or xor dec mov jg inc icebp xor aas pop mov mov lock rolb leave lds (bad) jp (bad) fisubr or imul pop pop xchg mov in test jmp jo aaa inc add lods pushf mov add sbb jno jo push push xor stos inc fwait js jns fcmovnb sub cs xchg bound jg mov inc js mov stos xchg pop mov lret and (bad) sbbl mov pop adc (bad) loopne dec adc xlat dec (bad) jl sub sub shrl sti out dec ror sbb in cld xor push cmpsb pop rcl loop fsubrs popa and in pop leave sbb je mov dec dec or sbb test pop ds fstpl xchg leave ficom pop mov jno jp fidiv adc pop lods dec mov lods dec es shl cmp sbb (bad) fwait or mov shr dec cwtl or jmp ja sub (bad) mov aaa xchg cwtl insl (bad) fsubs and push sahf aad fs add imul (bad) jmp push mov push jbe mov pop cmpsb mov adc sahf insl int3 lahf sbb mov es aaa call mov lea jnp les lahf sbb jns or (bad) mov inc or or into shr or sbb dec aad in outsb pop int push mov sbb jbe add outsb pushf sub iret cltd (bad) iret cmp stos jno dec push loope pop jbe mov mov jno dec bound cmc repnz orb (bad) mov pop sbb test gs fsubrp das add mov sbb pushf hlt and jp insl xchg jp out int3 lea nop mov jge sti mov inc xchg and icebp and daa int mov mov jecxz push and jae dec out ss add sub adc sbb mov ror jb call data16 pop jae mov fs fmuls pop cmp sub xchg movsb or (bad) leave xchg scas push hlt sbb dec sahf iret or and mov xchg cmp insb popa jnp mov iret push cwtl loope icebp push hlt xchg repz scas clc rclb jbe or gs frstor and xchg inc mov push adc sbb unpckhps mov add xchg repnz insb xchg jecxz push mov daa cld inc fcoml aad (bad) push outsl scas (bad) fcmove ret sub loop jge dec jo adc cld mov sbb xchg ret inc cmpsb aas xor outsb or (bad) aad lcall dec mov out aaa xchg inc dec ret dec or icebp inc or adc xor cmp jecxz repnz les lods pop sbb sub cli fwait and (bad) lods sbbl mov mov xchg inc xchg loopew xchg test mov sub xor inc sahf sbb fistpl loope (bad) mov jge fsubrp sbb ret jno mov and (bad) mov cs sub sbb enter cmpsb out sbb xor dec outsw inc mov aas mov hlt inc test neg arpl and xchg jp sbbl out fldt outsb sahf xchg rcrl dec or xchg es testl repz pop cmpsl das lcall je rcrb (bad) push les (bad) mov xor lret push and mov int imul movsb and mov adc cwtl enter arpl mov pop pop loope or cwtl mov mov shll xchg xlat push jmp cltd cmpsb mov mov add mov scas out insb sahf inc mov jmp mov repnz push std pushl insl push inc jae push std inc test pop inc sbb push mov xchg xor cmp inc cmpsl dec loope or or pushf ret pop mov insb pop rcl test mov push cmpsb subb or jo sbb xchg aam dec pop repnz adcl test push cmp sbb jmp into bound test sbb scas cmp adc and jl jne and pop out imul jle jne lea add xchg cs (bad) jnp mov pop scas div push out outsl sub into dec shlb xlat mov loopne fsubrl jmp ja shlb int movsb or dec shrb sar push idivl lret mov mov sbb cltd cwtl sbb (bad) jecxz iret xor pusha cmc or subl push lea fsts and in mov arpl repnz adc sub popf push dec push mov lods divl pop jno (bad) movsb or ret jge test data16 mov inc push pop inc in jl xor sbb (bad) fwait pop push scas and enter stos imul sub or mov mov repnz fstl cmpsb fmull mov and dec xchg fildl and fdiv into addr16 stos mov cwtl add int3 inc inc shrl arpl inc ss inc xchg jge test enter ret cmp or mov cmp adc pusha inc mov (bad) (bad) in scas pop fcmove ja lds insb dec (bad) and push dec cmp rdpmc cmp add sub lods mov and sarb loop aam test fldln2 xchg scas adc ss lahf cmpsb and dec xchg dec loope ret dec pop cmp cwtl inc ret jnp repz scas inc xor inc repz adc and cmp inc dec lcall inc or add jnp xlat adc popa (bad) lods dec (bad) je stos adc dec int3 push ret adc fmuls sub push out outsl lret jg pop das cmp pushf adc jbe or jmp stos mov and prefetcht1 dec and xchg (bad) cld (bad) loop loopne dec std jae dec jne (bad) sub pop xorps iret imul enter and int3 push aad inc pavgw mov dec addr16 gs pop lds inc mov addr16 aam xchg movb (bad) dec (bad) or inc xorb int pop add sti insl ss icebp push fnstcw cmp aaa mov dec lds or ljmp stos sub mov push pusha sbb addl jae aaa push bound notl xchg lahf adc sbb pop xchg xorl (bad) in (bad) add test pop cmp cmp pop mov lods pop mov jo cmp leave loope sbb (bad) xchg xchg (bad) stc stos mov rorb stos mov xchg mov xlat mov pop lret aam aam pop xchg sub mov pop insb stc frstor xchg mov stos sub xchg and ja push sub inc std (bad) push push incb jnp popf mov arpl xor mov icebp outsb dec dec mov adc ret adc jg sbbl sub addl push push data16 outsb mov push mov rorl test cmpsb or or jo,pn adc mov scas jle lds push aad inc dec xor mov mov or jnp inc mov nop insb inc adc cmp rclb jno xchg xchg jae cs int jbe push sub hlt dec lea cmp mov lea push aam fsubl (bad) pop into pop fidivr push shll aaa in cmpb icebp fwait xchg pop and cmp or mov or mov iret adc cmp dec sahf int push pop (bad) loopne insl fbstp daa daa vhsubps cmp jns cmp fcomip dec mov jmp aaa mov stos lahf add aam call add out lods mov test mov aas xchg pop adc out dec out mov popl out xchg pop dec test jecxz cmpsb loop push divl movsb scas clc xchg aam stos sarb inc enter fldcw outsb xor add loop cld pop test mov in rclb pop pop jge mov push roll add adc arpl lcall push mull daa gs inc int3 bound xor hlt inc fxch dec stos dec pop loop sbb inc fs sub pop test adc mov jl or pop mov mov mov mov cltd push daa xor clc xchg inc daa cmpsb insl popf aas lock popa (bad) fisttp mov ljmp xchg push leave cmp jecxz clc pushl (bad) aad cmpsb jge (bad) inc shrb lahf jne adcb pop sbb xor sarl stos dec jns push sti dec push repz push out sbbb or sbb cmp cmp aas test xchg sbb add aas jmp pop pop aaa sbb add or add nop daa cmp dec cmpsb cwtl loopne adc inc int aad jns or mov fcoml and pushf pop shrl or jp jo (bad) mov adc leave xor out xlat add xchg push inc pop stos js arpl pop imul sbb ljmp xchg jne mov lret xchg mov imul aaa (bad) test push sbb add mov mov jecxz lcall cli movsl aaa push xchg mov fmuls cmpsl outsb jmp ret push push jb,pt mov pop xchg cs sti or rorb cs push xor xlat sub jle adc pushf mov lcall fsubrl mov (bad) std pop adc test sbb xchg (bad) scas inc ficom fmuls push push cld adc cld and push mov mov aaa pusha mov mov and jb push ret jo xchg cs (bad) mov aad (bad) sahf sub fidivrl outsl enter or enter xchg fbld mov mov push out fsubr inc push enter mov sbb push inc stc pop popa cmp sarl sbb (bad) xchg bnd enter js sbb call xor mov aam sbb dec repz test pop or mov imul or push cmp inc pop fisubr mov push shr lret mov xor fdivl popa aam sbb pusha mov and test in sbb xchg cmp cli xchg push jle fs out test (bad) mov mov mov inc out call or sub add pop insl das and fnsave inc movsl aam jno jb enter leave dec ss out adc imul in cmp test adc scas mov add bound lcall adc rcll jp inc cmpsl mov jmp sbb out lret imul xchg adc add shr jo aam xchg movsl call (bad) scas dec pop pop jmp (bad) mov push mov je scas mov push inc addr16 insl cs dec stos dec fldenv test add or js loop dec pop test ja je sbb (bad) mov xor mov mov xor jne inc pop rol inc cmp pop lret mov and add outsb addr16 lcall xlat outsb lods xor push outsb mov push adc out nop mov pop or dec (bad) pop sub icebp jno lock and ljmp jmp fprem sub push loopne mov push push lcall jp xchg fstl (bad) add sbb xchg push jae pop jno vunpcklps pop sub pop inc pop ds pushf sbb jmp pop adc cli fucom mov dec imul (bad) fld lret and and mov lret sub or cmpl incl sahf data16 mov js or jb push add fildl dec push or mov inc lock pushf fdivrl mov pop pushf adc xor xchg sub sbb (bad) pop jnp fsub rcll jbe adc jg push mov adc pop loope push mov jmp cs rol push push push xor inc push mov pop cli gs cmp sub jl loopne mov ljmp inc (bad) hlt pop popf outsl mov jo aam mov pop mov mov jae je adc inc hlt sti sbb lods movsl lahf mov jp shl sbb stos jne mov int3 out xchg mov pop and das xchg sub cmp aam cmc fidivrl dec xor call (bad) sub cs nop inc outsb inc mov lahf adc (bad) lahf lahf inc xor repnz loop fiadd fadd mov cwtl dec xchg mov adc icebp aaa inc ret cmpsl rcrl pop push lock jns xor dec mov push and dec mov jo xor add add push popf outsl clc cmpl push push bound scas sub int3 mov push mov into rcr mov jp pop repz icebp (bad) (bad) pushf insl xor cmp mov shrl in pushf pop stos pop gs test push in mov dec scas aad test pop xchg sbbb outsl cli pop sbb mov inc (bad) cmc lods mov xor mov and pop mov (bad) jb ljmp pop jne push int or loop pop rolb or pop mov xlat out insb fcompl lds int clc cmpsb jb mov pop int aam (bad) fist pop iret aas cmp popf jns roll xchg out mov push jne scas xchg mov test pop or fbld inc push add fwait mov fsubrl push es hlt xchg gs fs (bad) fimul shll adc jecxz fsubr jge inc das sbb push lds mov shlb fcmovb pop sub dec cmp mov loopne xor xchg icebp jp pop stc inc dec (bad) dec dec jmp ljmp lea sbb add mov insb lock xlat xor dec push and pop jnp insl pop fdivrs in (bad) xor pop bswap inc js sub shll add inc stos mov lea (bad) add mov int js push inc xor rcr push jmp sahf rolb (bad) mov or fxch sub ret scas lahf aam xchg and (bad) repz cmp stc fs adc in cmc sbb pop (bad) icebp daa std enter jae test pop call data16 dec (bad) (bad) jo xor scas testl push dec fwait out or pushf lret pop rorb push mov test mov push in sub data16 mov sti pusha push xchg sbb push aas daa jg repz sbb jmp dec xchg jne adc popa lahf and out and mov les xchg mov lret scas test in fwait xchg mov js clc test shlb xchg scas xor add rolb outsb idivl (bad) push stc dec imul (bad) scas add popa js mov ret add push adcl lea dec scas mov jmp call cs adc int3 lret (bad) (bad) jo inc sbb cmp repz xor push sub mov and out push cmpl cmp mov and cmp ljmp mov jae push xorb es test inc xor adc in gs add mov xor lock hlt pop fucomi xchg shll mov loop cmp jnp or push push mov jmp jne jle les xor pop subl call mov shr lea leave data16 sub sbb xor sahf into pushf sub in add push dec inc xor (bad) pop and notl das and mull jmp aam stos jne or push in jle sahf call sub xlat std lods mov mov dec lds or sbb jmp push loop cmp dec aas mov or aad pop fs clc adc pop ljmp and inc jle adc jge pop mov lds aaa cmp aaa call insb inc push or jno add out or or cmp js loopne pop push inc pop divl mov (bad) lock mov imul lcall pop je inc jns adc js enter xchg mov adc mov mov or mov iret dec nop adc xchg sub jbe pop fucom testb loope sti insl int stos push mov lret adc fisubr or xor in stos jne aaa int3 xchg nop mov pop and pop push insb mov movsb (bad) loop jns js mov aam (bad) aad ret dec sahf movsb pop orb jns (bad) call fdivl fsubl popa outsl fcom hlt imul mov pop sti popa ds imul jns push or test sbb insl pop jbe cmp pop (bad) push xchg cmpsb stc jae loopne mov and ja andb out mov mov push lds or pop xor xchg popf mov rcrl push std inc insb lahf jb mov mov push cld inc call mov mov mov or mov xor in cmp out (bad) int scas add cltd movsb sbb push push sbb xlat aas xor js fidiv out pop mov pop decl xor mov mov das insl pop xchg mov xchg aaa inc sub add out mov scas into mov testl aaa inc jbe hlt xchg xor jg jb fldenv jns xlat loop rcrl lcall in dec scas psrld (bad) xorl and mov fild inc cs push dec mov sahf aad xor arpl mov stc jne cli loop xchg xor xchg and arpl int3 aas daa mov (bad) clc pop mov movsb mov fstps pop and mov hlt pop sub pop and ja xorl pop nop test inc mov cs or dec fist pop out shll xchg jnp mov ss dec mov daa mov xchg jg pop les mov push scas jecxz aaa shl (bad) ja and push dec inc fs adc jnp out movsb sahf fs sbb aad stc push mov or push push jmp fsub fwait nop int3 push sub cli ds cmp mov push sub fldt bound pop gs aaa aad mov sbb mov cli pop xor pop bound mov dec adc lret sbbl adcl push insl pop jg inc mov or pop (bad) and xchg (bad) lock (bad) nop (bad) repz inc or mov out in scas fnstsw in inc insl adc inc or adc movsl pop pop pop out popf lahf fistpl add jge in test sbb movsb (bad) (bad) xchg stc fs ds ret or mov roll (bad) mov mov inc dec mov jo cwtl xchg jle imul pop (bad) scas ret aaa test cmp xchg sbb cmpsl push dec cmpsl out insb cmp loopne adc sbb stos rolb xor or cltd cld int insl fildll ret les lock pop lea adc rcr pop xchg js add bound andb or test jnp cli mov lret fucomip pop jae shrl and pop cltd lahf stos adc loop mov out adc or push inc (bad) outsl xchg test shl mov fdivs iret std add add loope fwait fs jo aas lods cmp aaa cmp lods lods ficompl int mov jmp cmp ret cmp mov mov cmpsl mov (bad) dec push mov mov paddw (bad) jb push mov adc dec stos cld sbb les (bad) or std push dec xchg adc lock popf insl fldl aad insl (bad) pop ret add pop mov loope inc dec int testb inc mov add xchg pop (bad) movsl cwtl mov in dec sub int or lret loope outsl scas cs or bound scas xchg icebp adc xchg mov loopne ljmp fcoms test dec mov mov push adc add and sbb push scas mov mov outsl xor push jnp dec and repz sbb cs test and rcrb jecxz leave testl imul lcall jmp bound mov sbb inc lret mov jmp inc inc sub std mov (bad) (bad) mov (bad) push xor imul pop inc fwait rclb aas lock jno rclb mov (bad) int3 cmp (bad) lods mov stc mov add cs insl scas lods out sub subb lods push leave xchg (bad) jb jne pop daa mov xor fsubs mov cltd cwtl ds rorl pop gs hlt sahf pushf in orl adc push loopne (bad) pop or pop aad fmul fildll pop mov sub push add aad mov jg mov pusha out ret dec sbb inc add aas mov inc dec int3 ficom loope out push sub in aaa lock clc add sub xchg cli dec xchg imul bnd xor xchg mov sub xor add xchg es pop ljmp call (bad) push int divb lcall jns cmc (bad) inc pop imul push push add cmpsl push mov jle loope loope aam add mov jae push and out cld sbb mov fcoms adc stc and enter inc cltd add xor ljmp (bad) in rcrl lahf les jecxz stc pop sbb sub adc add sbb adc notl ret pop mov dec fstl adcl lret push and dec lods cmp aad or xchg xchg fistpl pop and or pop add int movsb lock jnp lahf scas clc jle test xor test pop ljmp mov push aaa in mov pop jecxz enter in addl loop fimull (bad) (bad) and mov ret mov pop mov inc mov mov mov or pop adc mov in movsb mov call dec imul pushf xchg sub (bad) xor fidivl (bad) push push sbb outsb jno xchg dec mov or dec mov xchg jo add jle,pt fdivr inc and lahf inc loop sub push mov ljmp les movsl fidivr fnsave xor inc jge sub test push jl pop sti data16 mov mov ror bound out stos in lock fnop in jnp cmp add dec push cli hlt mov cld push cmc (bad) or pop mov jmp inc rol sbb mov sub add call mov pop sub loopne icebp add dec negl cmpsb clc xor dec into insl fist out rep ret or loope jp std popa scas push icebp roll hlt imul pop inc into and leave inc inc loope rcrl fisubrl mov movsb adc lret cli or cmp mov scas mov pop push push mov xor push and aam mov es int imull mov jecxz add mov sub pop fild ficompl sbb out sbb outsb outsb lcall push and lods cmpsb into jb mov pop popl scas add push pop cmp cs (bad) call jo xlat push push sub sbb mov mov mov (bad) in rorl pop lods inc aaa inc add mov xor aam mov mov arpl dec sub incb mov shr push mov mov sub mov pop cmp pusha fidiv jecxz pusha pop dec out mov lcall daa fldl pop rcrb repnz mov cmc add pop and adc das dec pop (bad) jb insb test test xchg aas lock adc mov pop mov inc ja loop (bad) hlt jecxz cmp and sbb pop stos addr16 pop inc mov sub add (bad) cld (bad) stc xchg test je rorw outsl rorb scas lahf sub jle inc fyl2xp1 or jbe mov sbb jmp mov cltd dec pop and jmp mov enter or lea ficoml lock loopne sub or in inc iret in and shrl (bad) in jmp jge aam inc push mov repz roll cmp data16 insl ret jmp sub cmc outsb push test insl jg mov in mov loopw inc movsl dec or push pop pop sbb mov (bad) cli adc fdiv rol mov rorl andb js push cmc out pop push in mov mov sarl jmp arpl out outsl adcl xor push imul xor dec jge inc addr16 test xchg pusha lods jl test mov adc mov inc or in adc cwtl pop dec push call add mov arpl aad rcl xor jmp sbb lea ljmp sarb inc mov mov pop scas dec call je out stos ret out loop pop jecxz inc xor push dec inc int3 test xchg pop fstpt scas loope jecxz mov sub mov push and adc nop sub push fiaddl dec gs jl jecxz sbb mov mov jne sbb pop mov push sarb loope lods into add gs (bad) jbe jnp mov out mov dec lods add push sbb push rorl jb mov aam push xchg pop push jmp je aad and inc mov add ret fcoms mov pushf repz sub and (bad) iret into add cli test rcrb pop adc jl xor imul xor bound (bad) mov lock cmp cmpsl fnstenv or and call popa mov or je in bound into jbe lea fcoms pop nop imul xchg es xor (bad) stos xor mov pop xchg mov or ret scas mov or (bad) sbb inc stos pop dec mov push cmp out xor incl es ror les sub xchg shrl xchg pop jecxz xor jmp ss (bad) jnp pop mov mov and mov push gs dec aaa pop or push ficom sub hlt dec add sub cmpsl push stos push sub dec in mov mov xbegin mov mov (bad) push add xor mov pushf ret in sbb movsb ss icebp adc sbb in sbb sbb (bad) dec sub adc push xor push fildl xchg sti in ret xchg jp xlat nop pusha mov mov ja fdiv mov push or aad aad std and subl mov mov repz mov lods cmp je popf inc or push mov dec add (bad) mov pop cmpsl mov adc es insb (bad) icebp data16 repz in cwtl inc xchg jl je (bad) cmp pop xor loopne xlat call xchg sub mov push pushf ss cmpsb test fldcw jno std push or jp ficom mov push hlt test in xor (bad) push lods out xor movsl (bad) lds faddp sbb stc mov gs insb mov mov pop scas cmp mov ja xor lret lret aad push xor jmp jecxz dec xor xor aas cmpps adc adc les inc dec rcrl dec cmpl sbb cmp (bad) outsb inc mov clc add fcmovne add das adc je not inc mov (bad) les movsb sub xchg pop cwtl add insb into pop push inc jecxz xlat ja cmp pop lcall cld push xor pop aam inc jmp (bad) lret xor xor pop sbb fisttpl test das or push pop in cli lea aam subl (bad) ljmp (bad) sbb push clc insb in jp mov xchg (bad) int mov insb jp dec rcll inc int3 xor cli xor jecxz jno jbe xchg dec scas out js sub movsl add mov int push nop aas sub jns lock cmp pop lahf leave jns out xor xor push das lret add xchg dec int3 sbb pop adc push mov loop test push loop scas (bad) ss mov fmuls test jb xchg dec mov xchg aas pop jns or es loope pop inc sbb or dec leave mov cli icebp out mov shlb int int adc inc ret fisub not push dec aad movsl jl movsl xor mov cmc add enter mov (bad) je mov aam in adc pop jno cli jle gs (bad) je pop and arpl and mov scas in loop repnz cmpsb rolb mul fidivrl inc lret jnp addr16 mov aad aaa lret sub ficom (bad) jmp mov (bad) lock mulb jns pusha dec cltd pusha mov jbe sarl int mov xor scas cmc (bad) into mov and fsubrs rcr iret sub leave add cs (bad) (bad) leave cmc loopne punpckldq push in outsl lret negb xor cmp je and inc je push call inc mov test xchg xchg (bad) adc leave xchg iret aaa push in ret fsub cltd jo sub leave adc adc iret sub scas lret loope or sub repz mov cmp jmp dec mov addr16 lds fidivl adc dec enter xor or test adc bound jne rorb negl xor aaa and sub js loop ljmp add xchg mov addr16 mov cwtl cld insl mov sbb sbb mov sbb cmp lds lret stc push (bad) dec add sti jnp hlt arpl loop inc jmp les into push daa fadd (bad) imul sbb pop or cmc jg addl fcmovu pop leave xor adc (bad) jmp mov push or sbb (bad) dec inc or add push fsubs mov inc push repnz xchg movsb insb cmp push imul in inc je inc (bad) out dec jle into pop xlat aad (bad) cwtl sub call je cmp cmp icebp daa ss rclb push js loop in inc lcall mov jge lret fbld or icebp enter test push daa pop (bad) xchg xchg sub in or test lock gs jecxz test (bad) or xor scas cltd mov xchg cmp in inc dec stc mov add push sub fcmovbe (bad) xor popa cwtl cmp (bad) mov sub cltd and addl jg inc bound mov jbe sti push cltd cmp push xchg and push push adc popf hlt aam inc stos pop jge daa or and sbb mov movl movsb adc dec notl cmpsb out mov push mov inc in (bad) fistl push dec stc lock shlb roll arpl mov cmp xchg cltd rcll mov pop sbb imul push jecxz push jbe add dec into or or ret lret ljmp out xchg adc and mov xlat xchg xor call jo ds (bad) mov adc or mov int and pop (bad) and inc (bad) idivl pop push lcall push push and or rorb or ja ljmp leave xchg cmp loopne dec lahf or sbb inc bound sub push add in mov add jne pop cmp ds dec pop cli inc (bad) jle push and fidivrl fildl aam out jnp cpuid daa mov mov mov je jle mov and mov test adc mov xor iret test adc sub and bound sbb daa adc out or std jl enter or mov mov divb and add or pop add mov sub test xor jp rcll pop movsb xchg lahf mov push mov arpl lret iret pop inc lods sbb sbb add enter dec sub and movl add sbb lret pop loopne inc in divl dec adc lods scas fs cmp add sub fucomp aam dec mov and daa es cwtl stos insb cmc pop or cmp mov cmp (bad) int3 stc pusha xor and daa cmp aaa cmp pop stc ja and push cs es mov push aas insb inc rcrb lret je cmpsb pop and jnp xor mov fsts push pop mov jnp pop into pop sbb pop mov sub inc fs mov or loope sub sbb and mov scas sub push sbb push sarl fstpl test adc andb clc jecxz movsl lea fistpll aaa scas dec xor mov sahf mov and in popa aas pop cmp es pop adc sub mov inc push mov ret movsl push (bad) shrl loop iret mov inc jno mov fidiv pushf clc and mov std mov dec lock lcall fidivrl push aad rcrb push dec out jbe leave cli sbb xchg mov pop imul pop ja mov xchg hlt cmpsl cmp daa mov inc or mov xchg dec mov (bad) (bad) dec adc std pop add pop xchg fmuls stos dec dec mov mov lcall push xor sbb push or inc negb stc adc add push decb pusha sub out sub dec sbbb int3 inc add inc sbb inc or mov cmp dec (bad) orb fdivs and aas xchg jecxz loop inc inc ret mov std lods or add icebp data16 leave jge subb or mov fidivl popa mov movl (bad) bound movsl inc in jmp dec daa dec into lahf stos mov out sti adc gs dec lea (bad) xorb push sub xlat sbb xchg xor test inc jge add xchg cmp mov dec mov xchg inc xlat movsb adc loope loope das adc adc cmp fcmovbe and add push loopne fdivs bound jle mov in add pop mov add data16 pop (bad) cmp mov or jb test mov jecxz aam addr16 rol rorl shll xchg hlt pushf hlt xor rcrb leave push mov notl das mov push je sbb jp or leave jge dec sub pusha or xor test xor mov mov mov inc xchg mov add subb out inc cld lock rolb call pusha fwait repnz xchg in push xchg std dec mov aaa inc sub push (bad) pop jmp mov push fsubrl test jmp cmp push (bad) adc in xor inc dec push mov clc mov in add out lea fldcw icebp fwait clc jmp dec push fdivs add lcall cmp inc loope sbb pop jns repz outsb push xchg or movsb jbe pushl movups cwtl ljmp dec imul (bad) jmp out stos and sbb adc call cmp cld repnz push insl mov (bad) shlb jecxz popf push mov xchg sub pop shlb or hlt enter mov xor stos and mov js push inc jge push mov mov or mov rclb jbe mov scas rcl lahf mov int je pop jl out dec lods cld adcl push int jns cmp xchg cmpsl xchg mov sub dec lods push loopne mov (bad) or mov or xor push loope jl pop call fsubrs cwtl test int3 in xchg push inc pop int3 cmpsl bnd sub loope mov insl lods clc dec xor push cwtl push loop or cwtl mov xor xchg mov sub and aaa (bad) mov and divl add fdivrs (bad) je rol mov jecxz mov jb ds mov mov loope xchg (bad) xor sahf jp test push ljmp enter pop cmpl dec int cmp or dec mov push es xlat sbb fisubl xchg jo aas fprem1 adc popf sarb add mov imul adc push cmpsb (bad) ljmp rcrl and jno sahf in or das inc shll sub sti push xchg dec pop cs roll (bad) dec jmp and dec enter xchg jae or mov cld push ja out loopne push pusha pop or into ret sbb (bad) popf outsl stos cmp enter push pop mov cmp cmp in adc cmp jmp xor aam sub sub out scas cltd jo movsl xor test (bad) sbb mov mov into inc repnz lock repnz out mov call adcl cmp scas ret addr16 mov incl adc inc inc test cld or lahf pop and data16 icebp xor push (bad) push out aad add ret jne ss loopne int push loopne adc aas and out mov hlt xor sub cmpsb dec xor jle clc repnz les mov jbe xchg xor fwait jge push aas push adc mov jecxz xor stos adc out outsb pop (bad) insb add jae sub (bad) aad test dec lret ret scas dec mov mov xchg sbb gs add (bad) push aad xchg fwait xchg icebp xchg or les movsl imul inc pushf dec call cmc mov aad pop mov jns outsl inc xlat xlat into sub cltd shrl push and dec mov mov xor in loop sub in mov xchg push or pop dec in inc push pop loopne out mov adc xchg (bad) in inc cmp add and aas mov or pop mov push repnz stc ror jg dec jge (bad) pusha test repz movsl jl add sbb adc fisttpl xor jae mov mov ror cmp push cmp bound popf mov pop or or xor add (bad) and paddusw dec leave mov cli sbb sti ja stos pop xchg jbe xor aaa cmp adcl pop (bad) lods stc ja and popa push push movsb aas scas jb pop mov cmp insb inc bnd imull sbb push cmp mov mulb (bad) hlt test int3 and inc in (bad) cmp xchg xchg xchg je mov stos lods jne jno std cmp push mov fstl addr16 int3 aad ljmp mov cwtl ss addr16 jmp jns fisub dec pop adc inc pop dec daa push sbb scas dec push out icebp xchg insl sub inc icebp loopne subb xor cwtl sub push rcr stos popa and mov jl repz into stos mov mov jmp add xor push mov icebp scas pop mov cmp mov push dec rolb mov push out push and fisub push inc arpl push fmul xchg orb lea (bad) scas daa insl bound mov mov mov and jge test shrl add sub movsl test mov popf imul insl movsl pop pop mov clc mov out xor leave push dec fdivrp adc adc movsl les les out inc stos xchg rorl imul push mov pop (bad) fwait push bound jge pop dec ficom pop (bad) icebp jo loope popa mov shrb aaa dec dec pop lret int out sbb cmpsl sbb aad cmc xor jmp and sbb or cmpsb popa mov mov (bad) dec push lock push mov (bad) pushf or push test inc xchg sbb repz add add pusha lods iret leave lcall and lret in pop jb adc cmp (bad) cli or pop pop gs mov movsb jne inc mov cmp pop fs jne cli nop mov xchg cmpl jb add test scas adc mov insl popf push in repnz xchg or jns into xor inc jnp sahf xchg clc push and cmp pop add mov popf les xor sbb nop test mov pop mov jno scas adc jg and jns add and out (bad) (bad) ds push pushf mov lahf inc jnp sub add cmpl mov out repnz mov gs arpl mov (bad) pop mov lcall rol imul bound iret sarb inc ret mov dec pusha (bad) lods add into (bad) mov es sub test hlt jbe inc mov test pop ret push fldl sub mov cld cmp dec int3 leave cmp data16 mov push inc or pop mov popl dec stos lea cltd push xor std push outsl jl or loop jns and cmp stos dec push inc es out inc fmulp mov cmp jae lret dec imul test or lea stos dec hlt cmpsb mov (bad) movsb push fcompl outsb cltd push mov or scas icebp data16 fs ja jbe data16 fistpll addr16 mov dec bound out add test mov inc sub stc outsb dec cmc movsl test mov adc push xor pop xor leave mov cmp inc push mov mov add or add js mov jne (bad) test lahf mov imul jb sbb sarb out lahf pop fwait jmp push leave inc lea inc les lret call pop jb sub fsubs fucomip out xchg pop cmp add or jge push (bad) out rcl push push or mov lds popf pop mov dec loope and inc movsl jmp je (bad) enterw out or sbb ret pop insb idivl and out sbb mov mov fisttp and std push jle pop inc xor lcall out or mov cltd scas push add dec sub sub and mov pop jo fdivrp mov adc jle shll and out cld (bad) clc mov lods (bad) ss mov lea addb inc jmp adc inc movsl daa push adc ja xchg lods mov cmp pop cmpsl xchg aam xor mov mov or fcoms mov (bad) dec imul push leave sub movsb mov push cmp jns jg mov adc mov into jns add mov clc gs mov adc clc inc pop jle testb dec pop hlt sub sahf out push nop sub mov fistl test pop ljmp mov insb iret fnstenv pop jne mov (bad) push cmp push dec fbstp mov jg pop shll mov sbb movsl xor push push pop or push mov mov lds scas mov dec jle test adc je xchg loop inc sub or ret jp cmpsb cli gs or push adc int loop and test lret ja lea mov pop dec push std pop (bad) adc pop cmp or pop cmp in jb xor rclb pop arpl lods xchg call inc sub push jl and test adc xchg fs insl jmp xchg (bad) pop adc pop jb pushf and pop sti popf ljmp lods inc mov pop icebp incb aaa or lcall and push xor dec movsb popa lods jge int3 and mov prefetch pusha nop mov cltd or mov fcompl test and addr16 mov je stos jg fisubr ljmp in enter fisub fisttpl iret adc sti out sub jo lret jno dec cli rorb or mov mov and dec jno cmp scas addr16 or movsl (bad) xchg int3 sahf inc push pusha cmpsl cwtl push insl popa lahf mov daa adc inc cmpsb pop xchg adc add xor rol hlt xor inc sbb pushf cmp stos push jno mov sub inc (bad) jb sbb leave es push loope jl inc ss in stc int3 fwait cwtl push dec push mov test aad (bad) adc jle arpl jo into add test (bad) js rcl cs std gs pop call xchg jne jbe dec cld cmp adc mov dec jae xchg push arpl lock dec jle stc mov inc aad xor iret pop xchg xchg aad sub int push ret lods sub out adc cmp divb push push sub push loopne test mov movsb xor pop inc rolb loope rolb rep jecxz mov inc sahf cli mov or aad sbb fcoml cmc xor jnp dec inc popa shr fimull push mov inc dec xor movsl (bad) mov jg stc mov sub js cmc pop push jbe das inc scas xor je add mov inc pop sbb dec fnstcw cmp add out xchg repz ret ds pop (bad) jnp add push stos dec mov add lret lcall adc in sahf adc dec insb into or fisttp push jge sub cmp jg in mov push repz dec xchg in push pop insl xchg mov sahf sbbl mov jecxz das js cmc fstl pop rcll and je xchg loope shlb push xchg inc push or xor and pop and insl out data16 and cli xchg sub cmp shlb lahf rolb or push pop pop jle lret push push xlat sbb dec and jno scas gs pop jg mov (bad) sub sbb add mov ljmp popf sub mov outsb or pop pop pop push es test jne sti test leave xor (bad) call loopne mov fldl jb mov jmp xlat loope jge inc sub xchg xor or dec or pop dec sti xor cltd notb pop push daa jl gs cmp cmc je add pop inc std test std dec cld push and adc cmp push stos inc or mull xor in cmp imul pop inc fiadd loope sbb imul push scas mov xchg xchg aad and xchg imul sbb cmp inc ret or mov outsb or cs mov mov jb sub dec lods and pusha ss test rolb jecxz mov jbe pop pop jmp pop gs sbb inc sub ret pop daa std or sahf and call sti aam mov bound dec push mov in out clc mov push xlat ljmp mov enter or pop dec adcl fisubr sub add sub mov lcall outsb stos mov repz cmpsb repz lods das (bad) or push sub pop lret xor mov popf jg sbb xchg and rcr je (bad) (bad) insl cmp dec test es cmpsb cmpsb pop iret add mov jecxz ds stc and push ret fnsave inc adc sbb or dec xor mov sbb cmp fwait push test sub movsb pop ds xchg mov rcll in inc (bad) jbe (bad) pop or jp ds xor mov mov and es inc fild jno add mov (bad) icebp mov push push mov sbb (bad) jno xchg mov dec pop mov push or jle testl mov jo int3 or mov fmul mov mov lcall dec adcl push xchg and (bad) pop icebp jg scas loop ficompl inc std out (bad) aad orl sub arpl les sarb jge inc pop pop pop lods push ljmp scas unpcklps mov roll add mov pavgb jb inc (bad) ja aam sbb and add mov xchg push lahf rorb push and shrb mov cmp pop cmp push iret pop stc mov cmp pop mov adc add mov std push push push pop stc inc ret into sti xor mov xchg sub jg loopne iret (bad) int3 push add jl inc ret in jnp (bad) loopne aam inc jno lcall mov dec inc (bad) mov and push mov call in lock pop stos or arpl mov and out pusha mov mov push icebp scas (bad) xchg cmp push loope push arpl cs (bad) xchg inc jb rcrb jmp jns mov inc dec out push (bad) hlt dec cs movsb rclb mov int3 lret aad les roll imul pop push mov nop pop stos cmpsb mov xor mov mov sbb xchg into ss pop xchg in and sbbb insl push jecxz xchg mov or inc jnp mov push fstl in (bad) fist std jmp cltd shr flds daa mov mov pop ret imul cmp dec or into and (bad) add jge mov repnz sar sub mov jae fld aam push mov and jl xchg xor fs leave ret ficompl mov add es push xor or inc cli xchg in lret movsl sbb or lea out scas and dec or stos add call jmp cmc rcrl push fstpl dec and and xchg mov inc adc stc or iret mov rcrb ret test int3 inc in inc and mov lret pop cmp jg iret mov adc rolb insb in test pop inc and and sbb sbb xchg pop js jg cmp imul add mov jns xchg adc cmpsl scas xlat push sarb fisubl aad jns add lods jb mov cmpl lret in (bad) bnd aad aad sub mov leave es xchg mov das cmp push sub mov xchg pushf pop scas dec sub int hlt mov sti rcll jge dec dec jns movsl sbb mov add mov arpl scas mov push mov lret (bad) sti aas int ja rep lahf or xlat adc int3 sub mov imul (bad) mov pop jle xor jne sbb and xchg sbb mov mov dec xor std inc jp in (bad) dec (bad) push loopne jecxz out aas mov sahf (bad) jle loopne ret push sar mov or not jbe sub jbe cmpsl loopne adc inc les jecxz adc cmpsl jbe push push cmp sarl repz loope fisttp add sbb inc mov push xor popaw xor (bad) ror mov dec gs test sbb cmp inc pop incl add xchg cmp add std fucomi out xchg ss jne push in lods xor cmp push cmpl outsb adc mov popf mov jecxz adc inc mov xor sahf stos out in fucom stos dec shr out push (bad) (bad) rcr jp and roll push aas lret (bad) fistpl cmp leave fs pop pop and std mov adc cmp fdivrp sub rorb stos sub hlt or call inc xchg scas outsb movsl fidivr (bad) loopne xchg pop (bad) cld push cmp pop push fildl xor adc in test and sbb mov mov and mov jno rcrl jbe daa jge push fsubrl das aad sub add xchg movsl sbb cmpsb inc inc add pusha mov sub sti out lea sub fwait sub call leave jbe ja push (bad) es mov sbb scas xor xchg jge movsl cwtl ljmp push orl rclb pop out fcompl pop push xor fwait popa pop mov fstpt stc fwait das iret adc (bad) shrl lret fwait popa mov add pop fbstp push je bound sahf in cmp shll lea in mov lret cmp xor push cmc mov lcall repz insl xor ja mov aam push mov pop daa add (bad) cmp pop fdivs std leave dec push scas xchg repnz mov inc sub arpl outsb add sub jmp pop sub out and pop adc out in movl pop cltd push mov xchg (bad) inc xchg ds mov popa sub mov cmp mov xchg lock arpl orb (bad) std xchg jecxz cmp scas movsl add sbb stos int int jp cmp stos mov adc pop call push push push scas leave push pop (bad) mov jb pop pop mov xchg data16 idiv dec call movsl jmp pop std fldcw into inc mov cmp sub jle push movsl test cmp call or mov sbb mov inc mov mov addr16 pop dec insb xor imul jnp ss out xor rcll xchg fisttp in push aam pop pop sbb pop fwait xor lcall mov adc scas push xchg adc xchg stos push arpl loope cmp mov mov (bad) ljmp bound (bad) cli cmp sub push dec sub cmc or inc (bad) cmp add jo push jbe lcall adc stos jo sbb mov insl pop (bad) sahf inc lret lds sbb sbb jp mov (bad) fdivrl ljmp bound or sub xchg pop xorl jle call sub inc dec cmpsl sarl cmp inc (bad) xchg arpl in mov mov and mov (bad) test inc xchg and movsb and adc aam insb xor aaa xor dec adc mov aad mov cvtps2pd cwtl lods outsl rolb sbb rclb (bad) xor push and addr16 xorb shlb paddb aam lahf push and push xchg mov xchg roll popa dec mov daa arpl in les movsl xchg pusha sub loopne je sbb popa cmp outsl insb out (bad) or push (bad) mov clc cmp cmp pop mov xchg cmpsl dec sbb insb mov cwtl cmc cli inc and xor adc loopne xor fcoms xor fnstcw mov and fs test jno movsb sbb int mov mov jno adc jmp jae xor inc jl or ficom aam dec sub or dec inc cmpsl cmc add inc ljmp dec (bad) gs pushf mov out cwtl lret sbb pop mov test nop sahf push lds out xchg lds clc iret dec push test adcl in mov aam cmp stc or gs in add test sub push pop pop jae sub testl daa jg icebp push into icebp xlat adc pop mov sbb xchg mov test mov je mov sti fstl les and test ret insb insl or jo cmpsb mov lcall or cmp adc add movsl xchg dec add adc aad jg movsb xchg imull clc push cwtl mov aas popa (bad) mov sarb adc (bad) adc out push sbbl dec mov ret aam xchg cmp sbb push fild inc pusha imul mov dec fimul aas add movsb fnsave mov call xor test inc movsl cld mov out jno insb or cmpsl mov pop jp mov in dec popf lea pop std jle push rcll or stos test jae pusha mov xor sarb inc or pop sub add fs xor scas hlt add mov rcll xchg rol in dec test lcall or je mov imul add dec stos mov jb xor jne cmp pop jge pop cs or and jmp clc sub in xor sahf insl (bad) (bad) jp push sahf (bad) or ja insl (bad) icebp jno scas xchg pop (bad) in mov roll adc cmpsb clc pop cmc xchg mov add add lock roll int (bad) jno xchg pusha iret sbb mov es dec xchg (bad) dec or cltd in cmc rcll dec cs aad lahf or insl xor jle adc into insb out inc je shll in cmp stc and enter es cmp mov sub inc jne jg divl ljmp mov xchg imul aaa xchg orb pop test fdivs sarl popf sti (bad) bound push hlt xchg xorl stos shrl sbb pusha (bad) js jnp,pn mov insb fnstsw and pushf call cli xorb mov lock loop pop mov mov out add pop mov sti fiaddl (bad) aad push sub pop (bad) stos push mov mov sbb and dec mov cmpsl or arpl mov add jmp dec lcall and enter ret mov aad xor add in and nop push movsl mov (bad) mov clc fwait pop adc loop (bad) dec cli test imul mov push ds scas dec mov lcall jle pop popf mov das sahf lods add in ret add pop outsb pop xchg push mov out xor pslld push test pop fwait jge negb test xor and insl rcr rcr push pop jl adc and mov js mov fisubl dec pop enter (bad) aas push sub movsb outsl ret mov mov aad sahf adc cwtl nop ss xor andl jae mov (bad) aam inc jbe rcrl push mov scas fs adc (bad) loop inc add scas lds ss inc adc test pop jae jg push fldcw push jno push (bad) daa inc (bad) sahf xchg cld push aas xor mov pusha mul les faddl arpl add jns adc inc mov shll xchg stos mov out (bad) aaa or ret xchg dec ljmp mov daa cmp xchg bnd mov insb arpl add jp aam (bad) sub in and add xchg daa mov fs adc sarb cmp cmpsb fs adc aad aam shrl aas cltd popa in js fs movsl adc push xchg mov mov aaa call popf loope jnp push in fs add jmp xchg dec or out sbb lds iret xchg (bad) sbb xor or aaa jns stos aam pop call or movsl inc add outsl ja stc inc adc es adc je mov lea scas icebp inc in inc insl loope pushf (bad) iret bound sub and imul test push (bad) shlb mov and dec pop pop hlt pop fs xchg lock sti loopne pop sbb mov push dec daa jne pop inc cmpsl pop jbe jmp mov push mov dec pop fisubr pop and xor (bad) cltd fstl pop jle sub push aad sbb imul ret sbb addl fcomp sub rorb insb jmp mov mov (bad) int3 push sub and add inc inc repnz inc test and jns adc mov inc pop imul jecxz pop test adc outsl outsl sub cmp stos mov dec mov sub cltd lods jne nop xchg popa hlt mov daa inc ror and mov aas sub daa pop in insb jnp std ja xchg xchg dec jge pop (bad) push outsl push jmp outsl cmp sub dec (bad) aas fdivl pushf mov ffree sahf push cmp fldcw into std frstor sbb out (bad) loope xor mov pop pusha inc cmp imul pop into add mov inc xlat mov push mov sub insl cwtl push inc out adc jae xor or mov mov inc std sbb push mov push jne js stos sub popa pop cwtl adc add rorl mov push adc mov xchg or mov push inc add push mov pop daa xor mov push pop cld cmp ljmp pop and das mov xchg jae jl jmp jae int fistp cmc dec sti jg cmp pmuludq mov fstps mov adc arpl mov outsb pop (bad) dec push mov out mov (bad) je sub pop data16 xlat pop pop xchg loop jg cld adc jne jl scas (bad) mov int3 and fsubr xlat xchg repnz (bad) and fiadd pop js iret and stos icebp xlat xor movsb mov (bad) cmp mov into arpl je inc push jl mov cld xor and mov (bad) and andl fidivl push aaa jecxz xchg sub sub xlat pause jb inc (bad) xor sub xor cmp add test das adc cmp (bad) mov mov push pop push es cmp dec xor shl das lgs push cld and or scas arpl sti mov or stos pop in mulb popf pop lea aaa jo,pt repnz in cmc xchg pop sub cs fs sbb jno mov divb ret ljmp cli lods jge ljmp lods cwtl jno mov jecxz std adc add ss lahf bound mov sbb or inc add (bad) ds sbb and das xorl test clc inc jge arpl std sahf jae push inc fiaddl imul dec popf or leave and or mov popf inc add add cmp adc pop out add jo dec addr16 in inc jecxz push cmc cmpsb divl scas lcall add sbb clc sbb xlat inc dec adc fstp xchg ret sub popf cmp push pop jmp jg push inc push sub pusha inc xchg mov daa mov das (bad) icebp mov push push in xorl mov dec mov leave xor jl push andl xor repz inc loope pusha inc arpl daa xor lret lods movb ds xchg popf hlt or mov aas scas mov push int jmp jge mov repnz add iret jge pop frstor inc rcll lret ja mov popf (bad) xor pop mov sbb popl aas fisubrl jae xchg jae mov and pop pop inc arpl (bad) mov ljmp pushf sahf mov outsb adc je fdivs aad cwtl xchg sub lcall gs adc aam scas bound mov jle mov push inc cmpsb test adc mov and insb cmp pushf rcrl mov mov inc mov cmp cld mov dec outsb sub inc mov sub add mov sbb scas and mov pop imul pusha inc pushf push dec lret pop (bad) xchg or xchg fist push add sti adc sub mov mov cmp das cmpsb xor int3 frstor (bad) cmp pop add inc xchg aas xor cmp ret push fistpll lods xchg push cltd sahf sbb sbb sbb test push cmc (bad) data16 cltd lock clc add call es shrb (bad) xor and es mov or pop ljmp aad add daa xchg adc orb out pop jae scas loope mov insb xchg dec cltd shlb dec cmp sub jo stc mov xchg (bad) leave fnstcw adc cmp insb scas pop or bound (bad) cltd stos sbb das (bad) outsb iret cmpsb cmp cmp popf notl push mov je ljmp sub push lcall rorl sub mov push rcll sarb hlt and (bad) mov imul cmp out dec (bad) dec pop mov jecxz lock add loope rcrb push loope jb in push cmp cmpsl (bad) mov (bad) stos inc (bad) dec lcall dec sbb or pusha lret pop jnp (bad) addr16 push jno cltd hlt mov sbb add jbe insl add fwait (bad) xlat insb mov push faddp pop cmp gs lahf and xchg jbe adc dec hlt ljmp mov mov imul cmp lcall fstpl aas pop gs push dec pop pusha scas mov iret ret lods mov (bad) (bad) outsl in mov jge nop add push and push cltd pop xor push or mov (bad) cli enter insl xor jnp jge cmp fsubl test call push adcl inc jle sub adc std mov pop mov jae jne ret fs push call pop iret rcl (bad) rol mov outsl and roll mov cltd sub dec mov xor jnp mov dec hlt icebp jle jg imul mov push or push or sti shrb and stc mov aad push jnp outsl lcall pusha in in test mov mov out or ljmp call cmp scas sub imul inc (bad) cmp ror dec xchg inc shll in and and pop sub lret js cmp mov stos out cmpsl adc add test ss lret (bad) jg (bad) int3 xchg notl addr16 jae test mov push or dec mov lods pop aaa push in xchg mov push jp jns lock lret xor popf (bad) mov test inc pop sub xor cmp xor adc aad sub inc insl mov aam dec flds subb sub or sbb pop (bad) lret decb lahf loop xor sbb (bad) lods pop push jns int3 push dec add stos mov clc xchg cmp jl test pop add repnz cmpsl or nop add mov jo pushf ss lcall fcoml add pop lea out repnz adc add jno cmp mov jb sbb dec clc lods jg mov inc das xchg pop add lods jmp inc adc sub stc xchg je (bad) (bad) add sbb sbb (bad) insb lcall into js push outsl test (bad) jne sub mov mov cs out sbb or rolb sub mov dec inc dec adcl nop es push (bad) xor xchg push es popa sbb ja bound sub repz fild xor outsb subl lret cmp mov bound sbb fcmovnu mov dec cwtl addr16 cli aam adc inc mov push xlat sub pusha mov fwait cmp jmp push insl or (bad) divl in movl xor sar or aaa jnp repnz mov adc sbb sub in sub in pop xlat clc pop sub mul decl fs repnz cmp adc or (bad) cmp jne adc push add or add repnz sbb mov pushf xor lret aaa sbb adc (bad) xchg or sub add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sarb fs cmp pusha hlt in cmp pop mov fwait xor mov icebp hlt xchg jne xchg imul arpl nop mov jnp outsb into jnp cmp scas jo mov dec cwtl add jp xor jnp push lock pop lea pop xchg xlat enter jnp mov stc mov (bad) jge jp les lods xor das cli test (bad) pop dec push (bad) dec dec fsts test or js daa (bad) xlat pop outsb nop insl sub aas or mov push cmp popa lret js pushl or fs fcmovnbe (bad) leave lds fnsave hlt (bad) dec inc int3 (bad) gs mov sub push and xchg adc jmp xchg push jg insb (bad) mov in nop jae inc sub test popf jno (bad) jnp sbb ss jle out mov daa dec xchg mov jg repz pop mov insl loopne (bad) xor pop aad jl test test xchg sub mov jne and gs (bad) mov cmp adc sbb loopne push lods mov jl movsl jb cmp out jb (bad) hlt push movsb mov mov lahf fs jle cmp cmpsb xor mov pop inc nop pop dec sbb dec ljmp sbb sbb mov aaa xor lcall jle shll (bad) sti inc inc add add lock jbe push adc js stos inc add mov xchg (bad) nop fstl jbe rclb sub cmp fidivr cli scas dec nop aas inc jne cmpl dec lret aas cltd enter outsl popa cmpsl pop inc add (bad) test cmp push (bad) int (bad) sub ss (bad) enter je inc dec (bad) ds enter jne jp xor sub fs cmc add (bad) sub jge jne je or stos inc and jp stc iret (bad) (bad) es or mov and pop roll (bad) inc bound sbb je and je and insb std (bad) incl int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret sarb popa ret cmp fmuls arpl inc mov dec sub pushf outsl mov stc lea hlt pop xchg std sub fisttpl out and cmp pop mov push push in adc aad hlt call inc cli jnp sbb push ljmp mov or or mov cmp xor jecxz cmpsl fucomip cmp test (bad) dec int test mov lods fstp aad xor popa mov sub sbb dec icebp xor jecxz,pt repz push cmpl arpl out insb push cmp int3 inc push das sarb dec lahf jns lods lret xor mov adc mov mov jnp (bad) and call mov mov and lods push mov cwtl sahf scas sub push bnd jae jle xchg xor or pop jae jge std pusha outsb aad dec and hlt pusha clc in pop lods les cltd sub pop mov shrl xor add aam pop xor pop mov inc ja negb cmpsl (bad) (bad) aam mov mov sbb aam std lcall pop cmp lock lahf jecxz xor test mov data16 sub xor lahf pusha pop (bad) pop cmp or pop inc outsl cmp cmp inc and add sbb or push imul leave lods xor mov je xor and inc and loope ds mov dec ret movsb mov cmp movsl inc xor dec (bad) sbb sti shrl and movsl test and and lods shlb shr stc dec xor (bad) push call int3 das les call adc out mov push mov lock ljmp jno sbb in sbb lds outsb dec pop dec out hlt into and stc fstpt xor sbb mov stos push loopne adc (bad) popa sub pop mov mov jle push xchg jecxz push outsl adc pushf mov cli pusha jno sbb into sbb inc sub jg in jbe es xchg mov ret jb ljmp pop push mov dec lock gs jmp mov fs mov pushf stc sbb cld xchg push push jmp push ss nop sub push insb movsb pop in lds pop fldcw mov mov daa in mov pop cmp pop mov rclb roll rorl in sub in xchg mov inc es jg arpl mov lds out mov xchg mov adc call int in mov adc fidivr in xchg sub inc mov push pop mov call jb mov inc adc or sbb in and xchg mov pop inc stc dec pop xchg or imul add fistpll pop jb fs push repz test sub ljmp insb xchg insl repz pusha or inc (bad) inc repz je imul jns or lods loop mov jae mov jno jnp jl ret (bad) aaa mov dec and mov and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aam push adc shrl fwait scas loop scas jle sub push cmp and (bad) push (bad) sbb pushf sbb push mov (bad) jae mov dec insb lcall mov iret sbb ljmp push cmc jmp fimull inc je mov push dec mov lds mov adc push gs inc lcall xor dec out cmpsl out (bad) pop loope jns push mov nop jp fsubr mov gs cli insl sub cmpsb cltd lret incl popa push xlat mov xor cwtl fs dec shr daa adcl push ja dec int insl cmp push dec cmp out pop popf (bad) sahf cmp sub lret pusha enter jbe lods sbb rcrl popa in sbb repz cs (bad) inc mov jnp (bad) and popf mov imulb push mov test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp es mov cmp jge into jns out xor aam cmpl inc out movsb jle pushf add daa xor push (bad) in adc in mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret es jle xor add test sub inc and mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp and push inc fistl cli nop dec add loop sahf cli enter xchg push mov mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret es loopne and jne loop nop popa cmp fs sub je test pop adc orb test sub dec imulb lret (bad) jo dec jmp cmc xorl cld dec adc gs rorb mov xchg push (bad) pop pop jbe jne cltd mov mov lret mov mov cmpsb jnp mov mov lcall mov notb or jmp or push jns int3 into push lea jno outsb ss cmc gs push test leave mov cmp mov mov popf inc jg xlat lods jae sbb mov mov push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret es pop int3 xchg loop pusha or (bad) jge jne fstl out loop popa add mov andl movl movl ret int3 int3 fisubr jnp pop sbb and enter mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret cmp iret mov jno stos dec call mov orl mov call mov orl mov ret mov ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret es adc jns sbb mov aaa test fiadd out outsl mov mov arpl leave mov push or addr16 xchg gs sbb jae rcr gs mov (bad) fsubs je and lea push xor push mov inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret daa jnp ljmp leave mov mov dec leave imul jl and lock mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret es adc out lods outsl ja xor push jo cs lods mov roll inc mov (bad) mov (bad) lock lret adc mov add xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret cmp mov rol pop jno add (bad) pop xchg movsl shrd in stos outsl xlat or cs adc sub sub mov addr16 mov push and int scas push bound lret loop loop dec imul sub lock push jns cmp jp xchg int push das lods clc mov lret mov add push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret es ljmp mov imul push gs jmp arpl cmp (bad) cmp push sub push mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret es ljmp adc out mov pop arpl pop sbb int3 notb inc daa push pop pushf mov leave dec push mov push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret daa xchg add cli jb add xchg pop imul mov stos pusha (bad) mov in movsb xchg push sub jns (bad) stc sbbl and test cmp fiadd cmp (bad) (bad) es imul sub dec xor in adc xchg or inc cld push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret cmp push stos popf sub push mov push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret es loop pop popf jb,pn sbb stos mov mov fwait xor xchg cltd addr16 jb dec jecxz jle cwtl insl mov pop cmpsl sub ror fimull shll mov inc rcll (bad) push in push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret es jle xor clc mov in sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret es pop pop inc addr16 mov jno push and int push push (bad) and in cmp loop call push fscale or in push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp es pop pop inc xlat pop mov jno push and int cmc popa aam and imul repz xchg repnz pop add mov leave push shrl (bad) ret (bad) fmul pusha pop cs je scas fstpl mov sarl sbb adc mov repz and sarb push loope shr cmp inc outsb jne jp inc or add xchg cmp stc sbb pop testb in cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret es pop pop inc sub pop jno push and int xchg test pusha cmp xchg cmp jb repz adc lods into movsl pop ret mov cvtpi2ps add and faddp test neg add xor pop adc sbb cmp out add jae arpl dec jmp jmpw mov pop and mov jge fcmovbe or aas push out adc (bad) outsl add xor xor mov test sub jne push xchg fsts xchg adc addr16 fadd cmp icebp call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 es loop sub add jge lret sub xchg dec push inc (bad) into and lret pop mov xor outsl insb cmp dec nop pushf push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop cmc cmpsl mov aas inc sub aas sti mov sub inc insl std je cli cs pop mov dec xchg aaa add sbb push inc push or rolb adc pop or out in nop sbb mov loopne sbb pop ja jb xor stos and adc test mov mov int3 sarb inc mov cmp jl jnp mov in push add call lods lds sbb mov movsb push popa mov dec and add jge shrb adc push test adc cmp adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc push jb scas iret ret pop icebp mov pop arpl fcomps js pop test or loopne push mov sbb ljmp adc push int dec push or ficoml jmp and fnstenv call jl aas into rcll into in adc mov mov loopne pop add add lahf js sti mov in daa mov add idiv xchg fnop stos scas fisttpl mov mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret es adc pop cltd add sub in mov sub push test notl imul in arpl pop jp call cmpsb sbb lock cmpsl in jnp mov lea mov cwtl push ret int3 test (bad) and mov mov adc sysret add sbb in push push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret es loop xor fwait int dec or repz aam xchg mov mov das push or add es xchg dec mov (bad) pop jbe jns xchg xor pop dec cmp ljmp and push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret faddl mov sub dec mov aaa scas mov xor in (bad) decl or (bad) (bad) call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret es pop pop xchg cmc repz add out cmp mov cli sbb push pop fidiv fildl adc jb movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret mov adc cmp fidivr enter mov enter loop jns push mov pop or ss cmpsl imul imul push add add push mov cmpb jne call call push call pop mov pop ret mov int mov stos out cld push mov push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp es ljmp lahf mov movsb outsb ja sub sbb cmc pop pop loope jmp mov push cs cmp cmpsl xchg xor neg pop repz or sbb outsl dec mov mov mov ljmp ret jecxz inc xlat idiv jbe add mulb push test sub insb push xor sub and test inc mov arpl mov push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret cmp je xlat adc loope call fldenv and movsl or cli repnz repnz lahf jnp (bad) or int mov adc clc pushl call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call xor test ret cmp stc cmp shll fwait xor cmp int3 cmp push sub cwtl add in push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret es loop jns cmp scas jecxz mov mov jmp adc cmp mov pop sbb dec mov jae fldcw pop loope sub jecxz push mov sbb sub cmp sbb popa mov aam insl jns mov call xchg les pop test push xor xchg or sti rcl roll and sbb and xor xchg add jmp test rorb pop in xor jg jo flds ljmp push test shrl es push loop jge orl inc roll add mov std xchg pop and sbb sbb push dec test repnz daa adc push push out aad mov dec dec push insl fwait cmpsb (bad) xor push jmp mov inc mov inc or jmp xor ret loopne adc mov mov add xor sbb and cmp push dec test add (bad) addb pop cli lcall mov ljmp test pop inc sbb out sarl movsl in jmp pop sti out pop mov mov add xor repz jecxz jle mov lret add sub cmp cmp or shr outsl cmp inc xchg and push int lds jp dec pop mov adc jmp ret xchg xorb fsub jne adc lock (bad) mov pop sbb aas xchg cs stc fstpl xor push and sub or jg je inc outsb fsub xor je xor jns lret or (bad) pop push sub pop sarb xlat (bad) push aas add dec lret (bad) ljmp popa into jl repz mov xlat cmp (bad) push and mov sub mov inc fisub gs mov mov sbb fsubl inc std xor (bad) sti dec mov xlat dec xchg mov pop pushf call outsl cmc push cmp je xor and popa push add stc add pop mov pop push outsb xchg aam sub mov ljmp sahf sbb push mov out adc outsb sbb lds sub push fisttpl xor je and cmp push arpl mulb push dec jmp addr16 hlt jb push push sbb out sub imul insl ret mov jl pop das mov mov pop pusha icebp testb das or dec (bad) clc mov das test mov sbb in jg in push loope add pop popa xor xor push fisttpll push pop leave adc adc mov pop adc in repz jg jecxz mov push mov fldlg2 shl divb inc fimull inc dec mov cli pop fdivs outsb pop scas or mov in push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 es jle sub scas mov stc mov pop (bad) scas movsl aas lods pop outsl cmpsl cmp movsl ret hlt push push call mov mov cmpl jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 fsubrl ljmp add push and int and movsb pop sbb mov imul in sub push cli scas das sub push scas mov jg dec mov xchg (bad) stos fbstp mov ss outsb add (bad) sub pop je dec test aas into pop cld roll int leave fs xchg enter dec cmp push jle jl je push ret and pop sub imul pop arpl mov fmuls xor mov jbe mov and xor loop nop mov mov movsb hlt push cmp aam outsb sub mov icebp fadds push xor xlat data16 jbe icebp xchg int3 sarl and popf cmp outsb pop sub pop mov pop lods and aam fwait xchg and test jg adc sub push fs cmc lea movsl add dec push jmp dec jmp push bound movsb sbb pop movq ljmp pushl mov call pop ret fsubrl ljmp adc lods mov dec xor fwait scas stos sbb pop xchg (bad) or incl out xchg pop push or aaa sbb fdivrl or and mov mov or rol inc cmpsl stos mov xchg mov xchg push dec jecxz fildl push xlat or push inc xchg mov fwait xchg fcmovbe (bad) or xor (bad) rclb push push call add ret fsubrl xor addr16 das sbb cmp out lret pop addr16 mov cmc insl pop (bad) cmpsl adc mov push call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret fsubrl ljmp adc adc popa aam imul and loop jge arpl add jo mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp fsubrl ljmp add push and int and movsb pop sbb cmpsl in scas push in sahf jl scas add xor imul inc movsb pop pusha xchg add pop sub xchg and shrl rcr mov aaa rorl je push lret cld mov inc mov jo daa sbb jae out fistp xchg jl mov jecxz and adc xchg sti xchg dec sbb dec adc jo and mov aad lret sub mov lret and mov jno jne adc rorb lock dec cmpsl pop mov sarl insl sbb loope jmp (bad) movsl mov outsb test cmp lods push ret loop sti jp sbb xchg (bad) (bad) ror ljmp mov add stc push cmp and lea dec nop ret inc sub sub sbb fimul push jo pop sub sub ret pop or daa nop mov mov imul stos outsl dec jg jns loope xchg cld movsb sbb mov dec adc aad jle sahf inc adc fwait fs test divl push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp fsubrl ljmp outsl nop (bad) cmpsl enter jbe and in popa ficoml push inc jns lea sahf dec popf cmp pop inc adc sub setae xorl pop out and hlt push xlat bound gs mov mov je add js cmp sarb jbe jp stos lods pop icebp decb aad enter test mov push mov cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret aam out gs cmp add out testl enter push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret fsubrl ljmp xor push insl mov fs and xor cmpsb fwait jmp (bad) push xchg pushf mov fdivl mov jbe leave cld push ljmp sbb test mov cmp push xchg xlat (bad) cmp aam adc add repz xchg dec sti enter mov push mov inc dec pop inc fwait scas sub xchg dec ljmp mov mov add xchg adc push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret fsubrl ljmp and sbb pop mov xchg add jl in pop int stos add iret (bad) mov gs das cmpsb sub mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret fsubrl ljmp and arpl outsb sub int sub clc into cmp sub sahf xor outsl (bad) hlt add add mov cs push mov push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret fsubrl ljmp xchg cmc cli xchg pop (bad) repnz sahf insl test lods inc movsb fwait pushf cmpsl mov sbb les mov into xchg inc mov mov and scas mov cmpsl pop dec dec sbb or (bad) leave push lea gs cmp leave call insl push arpl call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc sub leave and cmp jb aaa mov mov xchg cli mov pop sti iret (bad) (bad) fistpl arpl add fidiv sbb push push jl imul movzwl sub je sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret ficomp lock push fisub jo mov lods xor adc mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret shl cmp xor sbb (bad) cmp pushf and je test sbb or rcll jle cld add jns sub inc sub mov (bad) inc addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret pusha daa sub enter jbe repnz and fnsave loop hlt pop sbb xor ret es cmc inc cmc movsl push rorl stos test pop out (bad) dec cld mov sahf sub mov pop insl inc fsts iret mov (bad) xlat aaa cmpl pop setae bound fidivrl mov outsl adc movsl sbb add sahf and in test mov inc mov je (bad) pushf rcrl mov stos mov xchg call cmp in pop lret out or in (bad) cmpsb leave and dec cltd xchg mov xchg mov insb sbb test jns aaa mov push push cmp imul cmc lds pop pop sub inc std das mov lock sub stos mov mov jb cltd dec cwtl xor mov sbb jo xchg pop dec xchg mov push fwait mov sub aad test scas jmp jl sub jecxz enter sub push pop add aam mov (bad) clc xchg or cwtl subl test mov cmp cmp aam mov mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret fsubrl ljmp lods jb jg pop jmp scas xor push addr16 fidivl adc jo cmp test aas add mov ss xchg push jno loop adc ret jmp out cld sbb add add lock pop jns js orl pop adc or adc add mov mov dec jns std outsl ljmp xchg ja mov movb dec stos sub push test in push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret cmp push add scas jge dec add and shll xchg xor mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret aam ljmp dec fisttpll mov pop pop dec lock aam and mov or mov out xchg jo mov lret inc pushf iret out ja pop dec ja mov mov mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret fsubrl ljmp xor mov push mov lock int3 fimull push stos fwait loopne inc push pop pop xchg jnp cmp mov loopne rolb outsl pop mov mov sbb mov negb test mov divl popf sbb or fs sbb lahf push lret popf mov imul stos (bad) aad les xchg popa mov jmp in push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret fsubrl ljmp xchg outsb jno add movsl push pop out mov xor pop insb pushf adc push mov lcall mov (bad) das cmpsl xchg mov ljmp mov outsb aam jecxz lea daa inc lock rorb js or sub adc sbb sarl adc icebp jnp sub lods movsl push cmpsb pop lahf in push out push fnsave dec jg (bad) push int scas xor dec leave dec fdivl jne cmc inc mov js ljmp xchg pusha push imul push icebp dec (bad) jo xchg loope fsub cmp mov aam out cmpsl out int3 lea or and gs jg test inc inc ret inc fadd (bad) lods xchg pushl sarl ja push or leave cmp bound (bad) pushf cmpsb sub push jle call in sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret fsubrl ljmp push sub push and sbb mov mov call in pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret fsubrl ljmp scas aaa jge mov cmp loop jb fldcw call fsubs cmpsb imul add icebp stc lods mov shlb call in xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret fsubrl ljmp scas aaa jge xchg in lahf sub xor add mov cs stc leave mov in or mov and xchg movsl push push xchg jmp sub cli cltd fdiv add fstpl cli xchg cmp insl mov jle in fbstp ds lock and loope push inc (bad) clc lret jl lds dec and int xor incl and test bound in sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret fsubrl ljmp fwait int scas jne repz popa gs xor mov lret pusha push addr16 mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret fsubrl ljmp sbb mov in jbe adc arpl repnz mull push push push aaa adc inc cltd aas cmpsb mov js adc push mov mov test cmp jl jns int3 pusha push jo into mov mov sbb movsl (bad) ljmp jno (bad) (bad) xchg in push adc loopne adc inc xor arpl mov or lahf jmp add or fnop pushf lcall inc pop stos xor cmp jmp sarb push aaa outsb mov cmc pusha lret insb pusha mov les jg sbb or pop mov imul orl add mov add iret test adc iret test adc iret test adc iret test adc iret test mov mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret fsubrl ljmp xchg int xchg js popl movsl fwait xor and push mov jp jne mov pop jno mov mov into decl xchg leave and dec movsb push jae bound mov (bad) pop out xchg imul sarb popf jae or call in sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret fsubrl ljmp adc arpl in movsb das and xor and das (bad) fstl js mov push or stos fsubs mov inc pushf jge (bad) cmpsl mov pop (bad) sbb and mov cmp mov cmpsl movsb sbb push clc fs aas inc xchg popa ss xor pop mov adc movsl jbe les inc mov call icebp mov mov movzbl push call mov movb mov mov pushl pushl call pop ret fsubrl pop pop or sbb dec or test sub add xchg daa test adc mov jle dec or push and mov loopne out xchg jb out jne rolb mov mov jmp xor iret bound movsb popa or xor mov orl jge jo inc in fnstcw mov mov mov xchg push adc sbb stos je push les dec xchg xchg jno jp and pusha rol mov mull aaa pop jecxz (bad) cmp sub or mov fldt loop mov out push pop icebp into ljmp dec push cmp jecxz cmp pop fs sti jp xchg lret mov imul mov jp inc and gs or cmpb je mov ret push push push push push call int3 shl out popa jbe dec je loop adc enter add test pusha jp sbb pop rep xor call in mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret fsubrl ljmp cltd sbb sub push in pop insl test pushf (bad) sbb js jne movsb dec cmc xchg ret or sub mov sbb bound add mov pushf sbb dec mov cmp leave scas jns test jnp movsb cwtl rcll hlt jmp pop sub ret outsb popa frstor es sarb mov rcr cmp add cli mov xor cmp lock mov in pushf fcmovnbe xchg xchg or (bad) cmp pop and hlt roll adc jmp or fs (bad) push mov ret imulb push imul and mov lds push xor fild xor xchg pop xlat call and adc xchg addl data16 int3 sub cmp cmp fwait inc lret (bad) mov (bad) jge outsb pop fwait dec sub mov dec (bad) xor lcall ret insb movsl xor in js jmp xor mov mov shrl (bad) pop call fisttp mov jae and or lods lcall inc xchg pop lea mov aas mov sbb pmaxub (bad) inc scas pop adc stos iret stos jnp sahf dec jnp jno sub ljmp push sbb and andb lret mov xchg mov push lcall aam or icebp arpl mov jb out movb pop jmp jecxz fst imul je xlat cmp cmp push add jge fwait pushf ljmp cltd sub jne (bad) aaa aam fwait inc add mov mov (bad) xor lcall or jns dec mov xor out push sub jns xor sbbl ja and xor lret pop sub mov sbb icebp pop push fnstenv cmpb insb call lea inc in stc xchg incl fisttpl inc push cmp sbb jae push test (bad) loopne adc or jne cmovb int3 (bad) push pop lock jo aad scas in push adc sub pop pop jp mov sub dec or sbb push sub aad aaa fisttp mov sti fwait shrb jl pop inc stc (bad) enter lea sbb ja out jns mov adc jecxz push popf push mov inc add sub push lods pusha fimull lods das addl nop push icebp push push test mov sub mov mov popa jno std ret inc mov or sbb lods xchg push sbb add int std btc sbb shlb push and inc cmp in mov ja dec lds and dec andl (bad) cmpsl or ret ret pushf and fwait adc repz stos sarb xchg hlt xchg dec stc sub insl sbb sarb out stos jge jae (bad) jb jo push ffree cmpsb sub jae insl inc enter inc stos jg fs dec add push lcall lea or addr16 addr16 jg scas jo xchg std test les test (bad) lret jmp insb test and sbb sbb pushf cmp mov push jge mov mov test les mov data16 xchg xchg leave jae push sub dec lds jne inc lcall notb aaa push jns je xchg xchg pop pop in xor adc cmp cmp or pop xchg orb sbb inc (bad) xchg sbb out rcl adc int dec sti test das mov jecxz sub cmpsl lods fisubl in sbb inc leave sub std mov mov (bad) adc (bad) mov ret fmuls faddl out push pop sub mov or pop fsubp mov shrb jno popf xchg push (bad) jne cmp int je addl jne repnz nop xchg insl es mov push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret fsubrl ljmp jno imul mov xchg cmpsl adc dec lcall mov es sbb pop roll pop adc cmp das inc add xchg xchg fstpl hlt stc sub lea adc mov (bad) lret daa lret xlat inc cmpsb gs bound imul (bad) mov sahf insl or or jp sbb test jnp enter sbb stos testb mov dec jns mov dec ja push xchg or add cmp lret movsl push (bad) cmpsb (bad) jno pop (bad) dec (bad) mulb mull (bad) pop lods je pop and inc dec sar (bad) out insb sbb mov (bad) fldt and cltd add mov ss loope aaa xor xor fildll inc xchg cmpsl cmpsl sahf std xorl mov and (bad) lods test sti jno cltd lahf fsubl int repz das mov dec nop jl sbb enter inc cmp stc mov (bad) (bad) xor gs popa arpl aas aad jg mov mov sub or (bad) pusha mov pop ficomp fnstenv pop cmp sub jg pop ds lock lret mov insl jle sbb push stos xor inc sub sti inc push or xchg in mov out mov int sbb xor (bad) pusha mov pop sbb outsb cmp int xchg arpl xchg add lahf fldl mov and dec xlat xchg xchg arpl push fcomi fnsave mov xchg push pop and imul jne (bad) pop fiadd sahf cmp push mov aas adc rolb movsb pop lds cmp stos test xor pop jnp in pop fisubr out jns ss xchg or fildll mov (bad) loopne xchg std pcmpeqd fwait aam inc jl push adc loopne rep ret rclb call jmp repnz aaa dec adc xor decl inc and out loop adc pushf clc and mov arpl mov pop pop mov adc pop inc cmc scas pop xor in jp dec shrb inc sub add jmp adc cmp jae in ret xchg call loopne jge sub mov add cs in jbe add adc add lahf aaa data16 ret sbb push insb dec adc les loope aad repnz jbe loope dec ja inc inc (bad) mov pcmpeqw jp test test cmp xor mov push sbb inc sbb fs jg fdivrl cwtl ds xchg xlat cmpsb lds push insb mov and adc sub pop in xchg fstp jl xchg fnstcw aad lahf jns movsb repz and inc add add bound sti call insb and sbb idivl inc movb ret ret das cmpsb push (bad) fcomp push push dec dec inc mov sbb shrb or push sub jne mov pop xchg fimul leave xchg mov (bad) dec fild jns push fs stos mov add cmp sbbl lahf inc pop push test sub cmp scas pop in loope iret (bad) xorl enter (bad) xor out cmp mov mov fnstenv jns sub mov push jge or xor adc stc pop movsl and add movsl push stc (bad) adc cmp push mov (bad) mov (bad) jle mov add push pop add js fcmovu push daa push mov aam nop movsb dec pop mov mov adc stc das test inc xchg insw stos push sbb in into popf scas cmp cmp pop test imul cltd mov mov sbb jge lds xchg mov xor leave in sbb dec fild rolb leave add push xlat jns out cmp sub jmp cmp lds xor sbb es inc insl call jne or xor pusha sub (bad) insb mov sbbl outsb jo je pushf stc lret sti jg lret inc inc in es xor push inc fistl int3 into mov cmp pop add mov push cmp notl (bad) lea bound imul fsubl inc int and pop pop (bad) aaa or or mov sub or inc mov xchg mov mov addl mov mov adcl push mov or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret ficomp mov jns jmp xchg popa push stos jae popa add xchg xchg (bad) xchg push inc rcrb push es into movsl or cmc pop jbe popa inc sub cmp cmpsb xor lods jp inc sbb pushf pushf xchg jo add pushf jno or jle lock mov mov jecxz push inc sub clc add cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret fsts push push cmp imul daa push int in jne lahf mov adc stos jno mov addb movsb mov push mov call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret fsubrl ljmp adc ljmp aam lret xor jg or pushf add icebp mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret fsubrl ljmp sbb fnstcw pop loope lret lahf pop psubsw ja xchg arpl pop (bad) negb lods fildl in pop pop sbb mov popl cmpsl mov mov add sub mov movsb (bad) lcall call in addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret aam ljmp dec fisttpll mov xchg pop pop dec lock sub mov pushf lea cmpsl and cmp imul inc stos int3 pusha xchg lock in mov imul mov push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret fsubrl ljmp add das mov mov dec in or call in pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret fsubrl ljmp rcrb mov xchg arpl or pop sbb hlt ds lock and test push test es cld js push or fadd cwtl dec div add les mov fiaddl push mov push mov mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret fsubrl ljmp jno pop jb (bad) mov add fwait movsl shrd lcall mov test mov jo daa or (bad) jb sub mov add stos pop mov xchg gs movsl fisubl mov cmc cmp dec add lcall aad cmpsl (bad) insl adc xor lret imul adc xchg adc ret push or ljmp mov mov or cmp ss jp sub xlat fcomip rcll cmpl and pop out fcoms adc int3 lock fldenv push or stos aaa and fild xchg xor sbb and push scas adc ja (bad) pushl rorb xchg rolb add push add add pushw xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp fsubrl ljmp add in mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp fsubrl ljmp add shll jbe mov push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret fsubrl ljmp add stos out cld mov push test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret scas push mov loop sbb mov arpl test jg cmp or sbbl or and rcrb call xchg cmc inc lock xchg cwtl push xchg sbb mov push mov push call mov push mov call pop mov call mov pop pop ret mov mov enter mov push negl and add adc mov adc push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret fsubrl ljmp adc jge lret sub xchg lods cmpsb mov and push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret fsubrl ljmp subl and daa fcomps or xchg aaa mov push mov mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret fsubrl ljmp scas nop mov fs daa dec lock jl pop mov cmc dec push call test xchg jg hlt lock mov sbb mov xchg cmp jmp int3 jmp mov xor mov jg jo push push scas movsb out cmp cmp lret loopne dec add lcall in mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret fsubrl ljmp cmp cmpl stos daa mov cwtl int3 mov jle jmp pop mov mov or inc outsl outsl in lods jns and jge add xchg fs cmpsb imul mov aad add xorl mov (bad) outsb jg mov mov orl add adc shl cwtl push (bad) push repnz outsb mov lods mov stc test xchg and dec test addb push aam lahf es mov push outsl jp (bad) mov inc cmp cwtl push inc popf inc jl shrb inc test xor in andl inc add push push jns push test xchg push adc shl or jno jb sub mov adc arpl pop push sbb inc fwait ret js test mov fdivrp rorl (bad) in mov das pop inc mov adc mov mov (bad) decl (bad) jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret fsubrl ljmp sbb dec cmc inc out in lods xor addr16 jp outsl mov sahf je adc mov stos imul dec aas ja mov sub lods pop mov xchg adc jno add cs inc push push ds (bad) enter and or rcll cltd jno scas pop adc push inc sub adc push mov lods movsl daa add push test das add gs test subb je pop adc mov mov push inc xchg jne pushf (bad) jno and jecxz shrl inc test fsubp popf fisubr shrb insb sbb pop cmp out push test jb pusha daa jg mov sbb dec mov (bad) sbb mov xchg mov xor jo sahf add ja imul aam push stc sub xchg mov into out jmp mov or dec aam loopw mov mov sub hlt push shl and add ljmp xchg cmp mov jle inc scas imul adc pop imul lods sub sub inc sub (bad) incb xor into sbb inc xor xor cmp sbb jb rcl (bad) xlat xor fimull and js jg ret mov sub jg test scas or adcl in pop movsl mov xchg xchg push add add and jnp sbb xchg jecxz clc mov push push out add dec push outsl cmp aas mov push mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 fsubrl ljmp push sbb mov imul xor mov stos mov clc repz adc push jno (bad) sub int jl daa pop jge pusha lods push movsl cmp scas xchg mov pop int3 push sbb sub inc hlt call clc bound inc jl adc bound imul jge mov push jmp jmp inc imul in sti or xor xlat adc push dec dec test mov push mov push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret fsubrl ljmp adc lods mov dec pop and outsb scas cmp fptan cltd pop scas cmpsb xchg pop aaa inc mov std add mov out jmp dec dec pop daa fnstenv movsb (bad) int3 lcall adc repz in push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret fsubrl ljmp mov dec arpl pop scas adc stos out add jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret fsubrl ljmp push mov cmp das cmpsl xchg and insb lods mov int3 jmp in dec in test push dec aas jmp add insl sub jl sbb inc fisubrl stos scas xor fimul loop (bad) dec loop arpl add out xchg lods mov push mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret aam mov sub leave dec cmp dec sbb (bad) xor pusha loop push ds stos xchg adc mov mov fwait (bad) test cmp xlat xchg sub negb mov xchg (bad) stos mov mov xchg fidivl add pop into sbb sbb xor daa cs les aam ucomiss add and jns jnp jp test test in test (bad) pop (bad) mov aam rcrb cmpsb jle enter mov and cs or pop mov movsl (bad) sbb add mov aad dec (bad) jns sarb sub ds enter push adc pop or cmp xor sub sbb sub jnp neg (bad) fcmovnbe movsb daa shll xchg add lea push enter js xchg xchg dec pop jp add xor jb ret add ljmp inc mov add cmp dec ja sub test repnz cmp cmp xchg add and mov mov gs inc test insl jle enter or movsl mov cmp int3 popf movsb sbb cmp sub mov xchg mov inc mov dec or jg out aas or and cld ret sbb push cmpsl jo shlb add xchg sbb scas mov mov ror xor pop adc adc mov push xor push movsb mov rclb es pop jle mov push aam xchg or xor sti stos cmp sub scas xchg push in mov and sbb dec out insl mov push mov push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret fsubrl ljmp sbb adc push cmp movsl adc mov ja fcoms inc pop js jne mov sub cld popf fs insl mov cmpsl scas test aas fwait push xchg fwait jle ds dec sbb int3 decb mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret fsubrl ljmp pop test int3 add xchg xor jg call call in push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret cmp hlt mov jb fisttpll leave cltd pop pop xchg pop fisubl (bad) pushl ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret fsubrl ljmp cmpsl mov mov push sbb nopl sub mov mov mov imul std lods cmpsb adc push pop (bad) imul (bad) xor insl add lea sub or cld and jnp mov outsb adc gs punpcklwd in push jne fs mov cs mov cmc and lret push xchg fscale rcr int3 pop insb sub mov loopne cmpsb jbe inc cli mov and lock (bad) xor and lods fsubr (bad) rcrb xchg rorb mov inc cwtl jmp pop scas leave pop pop sbb push js ja inc add xchg cmp jo jmp aaa or mov pop pop pop sub jo ret cwtl or jns adc jnp loopne lods insb and cmp jmp pop js leave sub sub push xchg aaa int jmp mov mov das (bad) ljmp xor cli fcomps cmp mov ret xor lea dec icebp inc mov adc pmulhw jnp cmc jmp decl movsb or and push fisttpll pop ljmp pop lea sbb outsl cmpsb sbb pop and test stc js lcall stc scas jge sub pop pusha mov xchg pop sbb outsl (bad) fcoms arpl sbb xor loope sbb adc leave and decl mov add popa pusha mov scas fs dec loope xor inc enter mov push popf aas mov std cmc xchg orl leave push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret fsubrl ljmp fildll and inc (bad) scas mov xchg mov loop pushf (bad) sub sub mov std rcrb lods (bad) inc cmpsb mov jge es arpl cmpsb jmp test lea mov aad mov fadds xchg mov jae cmp jne lcall push scas (bad) sbb mov mov xor adc and push pop (bad) (bad) pop bound mov adc fcmovbe int int test mov push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret fsubrl ljmp push sbb sub push sbb adc addr16 or sub pop leave xchg iret ss mov shrl clc mov sub push mov rolb loopne lea in jae cmp (bad) (bad) leave (bad) jb mov pop in mov push cltd xchg or stos inc mov les add mov in test xor xor inc dec jp cmp pop addl pop sar call call in push call mov mov lea push push call mov pop pop add mov pop ret fsubrl ljmp sbb dec cmc inc out mov test sub scas pop dec jge push mov add sub sub xchg pop push mov cmc std pop mov push add mov mov insl stos pushf jl pop lock cld jae dec inc enter cld push popf movsl (bad) cld sub shrb xchg cmp lods push andl jp std mov and leave dec add mov scas fcmovnu rorb sarl add mov mov scas stos ret jnp mov sbb jno call push fild pop cmpl sarl call inc inc gs cli jmp push sub in std jle cmc push icebp sbb xchg and sub sbb ficompl fcoml and fdivl mov or imul jne lea movsb daa xor fwait div push add cltd xor xchg push jae xor sbb (bad) mov and movsb (bad) pop mov les cmpsb jnp imul ret mov inc scas arpl mov inc ficomp fnstenv dec ret arpl movsl jb out xchg fistp cmp xlat jle sbb daa out sub fcmovnb loope aaa (bad) mov lods stc out and cltd mov xor popa fistp push out sbbl jl cmp mov fwait sub inc push arpl cmpsb inc inc push or sub add pop mov xor push sbb xchg push push jp mov jne inc (bad) dec lock (bad) and out xchg sbb mov stos int xchg fdivs ljmp outsb loope addl ljmp xchg inc lret sub popa inc les or pop (bad) jecxz in sti in stc or lret mov aad dec mov cmp and insl jo in popf add es xchg arpl adc movl mov mov int3 mov mov fst sbb subl pop sbbl pop sti push inc sub hlt cmp ja into test in lods shlb or add push add lods pop out and jmp jmp (bad) repnz cmp addr16 (bad) mov jns js sbb mov std push cmp push stc add lea jb sub cmpsb mov repz (bad) enter xchg cld cmp dec mov repz mov push add cld cmp add fsubs loop in or ret clc iret pushf ficompl out push cmp jo mov jns add cmpl (bad) mov pop repz jbe add aad enter jmp fmuls push mov sbb mov imul mov push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 cmp loope iret ret pop flds mov inc call lods pop iret mov xor lock mov stos xchg rolb sbb int in sti or outsl stos outsl inc sub mov lret cld dec mov or dec jo mov push inc xchg add loop sti xlat or push push nop in jecxz movsl (bad) data16 std mov cld mov dec and or and jne (bad) test xor fistpll mov push addl sub icebp sub into sbb mov dec inc cmp xchg (bad) enter push (bad) mov xchg std fs sub and mov in pop insl sub inc cltd push mov inc xchg sub and pop mov jo and sti into cltd shrl in daa push add int3 xchg xor xchg fsubs dec or mov xchg pop dec iret or jle push sbb add jp mov cmp mov fisttpl mov fist push xor sub pop jbe xchg push ljmp mov push mov mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret fsubrl ljmp ja jge pop shll scas xor mov stos mov sbb dec into add adc xlat pushf in nop stc sbb ja call in push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret fiadd pusha jne ret fdivr pop adc fcompl jb cmp nop out jae mov push bts pop insb mov shlb mov mov cmp scas jo jmp xor or cmc call or add jae and or push push jmp adc imul std push fistl loop xchg adc push cmc mov sub jl test addl fnstsw jl sub sbb mov mov pop cmpb xor cmpl imul mov loope sbb mov mov push ds mov and add or call jo loopne imul aam jnp jne dec inc rcr gs (bad) lret mov dec data16 sub es movsb inc dec mov jge icebp aam xchg test or loop cmc sub lea rorb cmpsl loopw sub mov push outsl fdivrl cmp ret jb out mov mov xchg loop loop push test xor je push add adc mov mov mov out dec mov stos inc xchg cmpsb cmpsl je cmp lods adc jb pop mov xchg lret pop (bad) mov pusha adc roll inc xchg ret and add add icebp sbb or test jae xchg inc add stc mov std push xchg sub imul cmp mov call in sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret fsubrl ljmp sbb adc push cmp movsl adc mov ja fcoms mov push mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret fsubrl ljmp xchg out nop rcrb lods or push mov repz adc jmp push or sub insl mov into daa lds jnp push clc push int fbstp addr16 mov cmp je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 fsubrl pop xchg cmp pop adc jle out fnsave xchg xor mov cli mov fisttpl and push gs jno mov mov std pusha sbb add (bad) fiadd xchg mov push mov add xchg mov int pusha cs mov adc jne adc stos (bad) xchg jnp in add out lahf leave push call mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret fsubrl ljmp sbb dec cmc inc out mov (bad) stos movsl shrd xchg call adc cs enter (bad) push lret sbb (bad) (bad) enter xchg aas (bad) cmc push mov not jg bswap add adc arpl adc icebp js pop jne jp scas imul jecxz lods fldcw and insb and nop loop outsl xor xchg xchg jge dec sbb inc icebp je repnz popa mov or imul jge int push cmp gs jg lds mov repz xlat clc imul into movsb hlt pop aas nop xor and inc push cmc adc push mov mov cmp je mov mov test jne call mov pop pop ret fsubrl ljmp push (bad) in jae xchg mov jns out mov into cmp imul out jmp in mov dec lods xor ret push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret fsubrl ljmp mov daa mov xchg imul fildl add fwait jl add mov cmp daa (bad) or add cmp xchg jmp pusha fstl inc notl in outsb push arpl mov fcoms lods push pop (bad) jae jp cmpsl shl loop mov xor lds or xchg sub lcall or imul mov stos jge loop js ret jg jns orb pusha cmp and cmc dec jb cwtl inc xchg push in test cmp (bad) pop movups adc insb pop or add (bad) xor ljmp jp test enter sbb and outsl popf dec mov rclb push lea movb ret mov cs push (bad) mov (bad) negb lods sbb sub scas fs and roll xor dec mov sub mov ja sub mov pop cmp mov push mov cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 fsubrl ljmp add push and int and movsb pop and jns pop dec sub adc add mov daa jg aam insl sub inc push fstpt mov push jns xchg popf aad out lcall cmp mov jmp jae push add in adc fisubr mov ret pop jge mov adc inc sbb stos insb clc adc repnz lods stos mov and test pop pop pop jge and jl (bad) shlb xor lea sti loope enter in fs push cmp pop dec ljmp mov mov popf clc jecxz and dec mov jl inc int3 inc push mov pop cmp mov fnsetpm(287 fstpt push xor ficoml mov dec das out inc test repnz add mov jns cmp xchg jg loop,pn mov test shrl nop outsl jno xor push cmp sub xchg mov inc fwait movsl and mov icebp inc int3 push xlat inc arpl push jle repnz ljmp cmp sub insb mov inc push int3 pop cwtl lock or sbb xchg dec popa xchg rcl repnz xor stos adc lea pop add sub insb out sbb mov (bad) cmp ss lcall movsl aas jmp fldt repnz inc dec lock inc mov push dec mov (bad) ss sbb mov dec sbb test pop xor inc mov (bad) idivb outsb pop adc push mov push (bad) xchg sbb (bad) dec cmp mov out loopne ss scas and add je sbb jnp rcll enter lret movsb inc roll add cmp scas cmp jne dec cmp inc pop rcl mov push out cmp ss push in fucom popf adc jns out data16 popa pop or repz jge outsb inc push (bad) or adc aam pop pop dec pop rol das mov pop xchg out in sti mov aas mov inc (bad) mov andb mov xchg sbb jp push sub sub mov dec push push cwtl addr16 mov push mov sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret fsubrl ljmp sbb adc push cmp movsl adc mov ja fcoms mov jecxz int3 leave push sbb movl mov sub sbb jecxz (bad) dec jno cli (bad) ja cmp mov clc xchg pop (bad) das adc jp push sub xchg ret mov jb and push outsb push mov (bad) mov (bad) (bad) lods xor and jle push mov mov pop mov sarl jge pop daa js xlat ret leave pop pop das sub pop cmp and shlb call xchg rolb xlat sahf cmpsb push mov mov jecxz frstor inc pop add sub mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret fsubrl ljmp adc lods mov rcrb dec repnz mov in jge int3 dec add mov mov push pop arpl add jb inc mov sbb rcrb dec mov (bad) stc xor mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret fsubrl ljmp adc lods mov aam (bad) scas dec fisubl mov in jge int3 mov mov mov xchg clc mov and mov adc jno jb jl mov insl mov stos out cmp pop mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret fsubrl ljmp adc lods mov dec pop (bad) scas dec dec mov fsubl jl adc lcall clc mov popl jb inc mov and add cmp jl add clc out inc cld cmp call in push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret bnd xlat imul cli mov mov call repnz es mov xchg jecxz fisubl mov jbe and test daa jge pop inc call mov (bad) mov mov adc sub stos (bad) cli xlat int movsb xchg jp jmp gs jo lcall mov stos (bad) cli mov cmp iret pop fs push push (bad) daa fistl ffree adc ds cmp jmp lret add mov push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret fsubrl ljmp cmpsl mov mov xchg imul fidivrl inc or pop xrelease cs rcll leave addr16 in sub sbb mov mov jmp scas jno es xchg ja xchg fstpt imul sub insb sarb add fildll pop leave mov mov in pop cmp lods push mov inc daa ret jmp cmpsb adc mov into adc iret or xchg enter repnz loop xor (bad) repnz and sbb cmp pop lret ficoml push pop mov icebp adc aaa push sahf push xchg adc loope adc xchg mov cwtl out jle pushf dec int3 mov dec xchg push (bad) sahf daa sti imull imul int3 fidiv and lret je dec fsubl push pop mov jns,pn or mov lcall xor pop movsl mov push mov push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret fsubrl ljmp cltd add cmpsl outsb sub dec lock sbb push mov xchg cmp rcrl jp xchg sbb jns xchg xor xchg xor lods decl mov cmpsl pop stos sbb inc out sbb mov add mov loope pop bswap imul inc insl mov jp xor popf mov in (bad) mov mov das imul xchg jmp adc test or mov sub sbb dec jecxz xor lods pusha jge popa cmpsb hlt aam or mov ss in ljmp sbb cmpsl jne cld lock mov push sbb out cmp loopne ret mov test or push xor push cmp insb pop pushf sub inc mov int3 es sbbl cltd mov incl jge movb adc pop adc mov sbb cld gs (bad) and push sub (bad) cld je push or push sub push mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret fsubrl xor mov lods gs or mov mov xchg push (bad) pushf data16 hlt xchg add xor in sub add ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret fsubrl ljmp mov shlb jbe mov push mov pushl mov call pushl mov call pushl mov call pushl mov call pop ret mov mov js cmpsb pop sbb mov aad add ret push mov pop push outsl and in sti xchg daa mov mov xchg fildll cmpsb xor or mov mov test not mov mov or mov pusha sub into sar stc lahf enter fist leave adc jg fcmovbe leave or hlt stos (bad) jl dec pop push and shll insb sub fstp mov scas fistl dec test addl cli fisub pop jl or test dec gs fisubrl (bad) mov gs adc pop (bad) addr16 pop mov adc push mov idivl imul je movsb fcmovnbe jae repnz inc popf fs insl js xchg and popa sbb faddp sub movsb lcall and cltd dec or test sub jnp inc shrb je jmp xchg mov sbb xor sbb adc or (bad) dec stos das arpl subb stos fisttpl fisub jnp aam fstpt (bad) mov (bad) (bad) mov outsl out fcomps out (bad) cmc push cmp loope lods jb ja sbb sub fsubl inc call fstpl (bad) loope mov stos ficomp push stos outsl loopne inc xchg fild insb cmp mov adc or in mov xchg clc xchg loopne lcall jbe adc mov das test sbb out lock cli mov and repnz or movb adc push scas das mov jns aaa es hlt dec cli mov dec mov out mov fcmovu pop (bad) sbb call in sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret cmp jp ret ret mov cmp clc cmp daa mov scas enter in or push xchg scas out ret jp pop into pop (bad) cmpsl popa imul jle movsb daa pop jge (bad) mov xchg cmp popa push insl add or add sbb fs mov or xchg mov movsl lahf stos mov jne mov imul loopne out xchg pop in adc cld sbb (bad) adc into cmp decl push shrl mov push mov pop (bad) push in sub xor imul cld adc popf ret jle pop sub into mov sub pusha push loopne xchg mov popfw repz lcall sub andb sub jmp nop aam out push clc jnp aam dec pop mov push mov push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret fsubrl ljmp cmpsl mov aam or fwait xor and dec (bad) repz repnz lcall test mov leave mov jo jnp mov push imul ficom out mov add outsb lret fisttpll jae into shlb aas into sar mov (bad) (bad) and leave sub adc mov add (bad) jo ja or adc xchg dec lahf jmp mov in lock push and inc pusha fsubrl inc push push add mov jne fisttpl or sub ret pop push outsl in mov rorb push jge enter lahf pop push cmpsl or jae cli mov (bad) fldt aas mov movsb int cmpsl gs clc pop fisttp cmp jmp inc sbb pop loopne arpl stos gs dec cld inc addr16 and aam cld lret inc mov adc in je cmpsb test cmp cmc push das pop inc mov call in mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret fsubrl ljmp push sbb mov inc pop (bad) and in xchg push int loop sub pop xor xchg std (bad) popf mov sub addr16 xlat mov pop clc push mov loop cli or push call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret repnz mov sbb cmp adc push outsl inc mov adc mov fnclex enter lock lcall sub xchg aaa daa (bad) mov push fistpl negl das dec xor outsb cmp inc sbb je cmpl call in push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret fsubrl ljmp fs sti inc lret mov in pop add or inc cli adc fisttpll addr16 xchg add cs push rorb mov sahf jne mov stc stos outsl stos aaa adc dec inc cmp lcall inc notl in sarb shrl popa and mov enter imul or sbbb adc jecxz sub add cmpsl mov xchg cmp dec rorl (bad) or adc hlt iret inc add xor decl push push push mull movl fldl mov lea loope adc mulb imul xchg imul fldcw das mov loope or xor sub adc (bad) cmp hlt rolb and mov out inc dec icebp fbld clc jle dec mov les out cwtl jge push clc cmp stos insl jl sbb inc inc cmp lods rclb xor dec call loop add and les sbb add fbld cs sub jnp or add inc jge jne insl (bad) cmp pop pop jo mov aam sub push lds pop jmp and les push mov push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret fsubrl ljmp xchg push in and add fildll push xchg jge insl xchg sub or push inc push and ss or mov pop pop out lods repz dec outsb pusha mov mov add mov test add fincstp or test rcll and gs bound popa xor or scas push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret fsubrl ljmp add arpl adc scas movsl pusha xor ja scas dec cwtl test ret outsl cld test bound inc jbe or daa test (bad) push and stos fistpll insl add mov call mov sub adc mov loopne test fistpll std mov loopne sub andb test cli (bad) out cwtl fstpt imul pop les (bad) fs or pop aaa scas cmc lret loopne lds dec jo mov inc mov (bad) push call in mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret fsubrl ljmp lods adc cmp rcl loop lret pop (bad) pop ljmp cmpsl js pushf (bad) pop scas rcll add xlat mov sbb and add xchg push jae test xchg sti outsl mov mov call xchg enter or mov push mov sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret fsubrl ljmp sbb dec cmc inc out mov pop push sub sbb cli or push addr16 mov popf add jo and test into inc in xchg andl (bad) cmp imul les mov fs push hlt call jge cmp shrb push movsl bound mov lret mov loopne push les and gs pusha jmp and and rclb fsubrp dec dec test push loopne and dec stos jl aaa adc dec das sub fwait stos popa test xor enter les mov insl fcmovu xchg inc mov dec cmpb into shr sbb mov cwtl in (bad) push rol stos cmp les lcall sbb adc (bad) mov sti jp sbb pop daa push out mov inc movsl cmp daa add add popa jo test sub mov push in mov cmp add insl aad mov fs stos fildl clc je icebp sbb inc sbb scas jb sbb xor mov pop fstp xchg cltd movsl pusha sarb inc push ss pop push fwait test adc push cmp imul xchg out loop in stc push repz rcrl add jle inc xor mov sbb add movsb mov in mov repz imul cwtl inc (bad) xor jmp stos xchg pusha ds call xor xchg fdivp and push inc setnp call in mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret fsubrl ljmp adc lods mov push cmc sub sbb repnz scas rorl sahf sbb (bad) shlb pop lea push lcall pop out inc repz xchg push fnstcw sbb icebp inc xchg lret jb lahf int call in fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret fsubrl ljmp and xchg in push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret fsubrl ljmp sbb dec cmc inc out mov hlt xchg mov (bad) out xchg pushf mov rcrb push (bad) push jp fsubrl pop in inc push ds xchg sbb inc das or xchg cmp fs loopne sti jns inc cmp lea mov mov cmp das sbb push sub xlat mov jne ljmp add push mov sub adc jne mov stc (bad) dec xchg adc or cwtl mov lret repnz mov sub inc (bad) icebp jecxz fidivrl mov mov jecxz inc push test adc xor aad mov loope cwtl add pop loope or repnz or nop pop movsb cs mov xchg sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret cmp popa cmp leave mov outsl sub in lock jecxz out push mov sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop xchg sarl int3 cmp arpl popa test movb xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp scas push fstp fldt movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp scas push lds fcomp out test je fchs ret fstp fstp fld1 ret lods sub cmp sub add shlb (bad) mov xchg mov call pop stc pop sbb fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg xchg sarl int3 cmp arpl fcomp sub or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret aaa in es dec cmp cwtl and out mov cmp je and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret fsubrl ljmp sbb imul sbb pop ja mov into dec sahf scas inc adc xor (bad) mov imul stos jno ljmp mov pop mov mov jo and mov or cmpb and pop jp lcall insl insb mov insb mov mov (bad) jge aad out lds nop sub jge cmp (bad) mov pop push pop dec adc sahf jle mov xor pop push mov gs mov xor cwtl push mov enter mov rcrl (bad) addr16 or iret pop and dec ja xlat adc insb sbb xor inc push xchg xchg sub addr16 into shrl daa mov fisubl dec sbb inc rcll fistl cwtl mov mov xchg and enter cmp jle cwtl mov cmp lds mov jl mov pop ss mov fwait xor jge pop and dec call add dec mov jge inc test jno mov push mov mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret fsubrl ljmp cmpsl mov loop or lods adc incb pop add fisttpl add mov and jae lock lock jb addr16 cmp pop mov cmp push jl dec imul stos cmpsl inc mov cld cmp test cmp (bad) xlat mov cmp imul pop push gs jae pop adc jge push mov adc mov pop in add cmpsl adc adc test push sbb mov dec cmp mov mov lock loop xor sbb and mov xlat push inc or imul xor sub (bad) mov adcl scas xorl test out test and sub aas pop lods cs xchg loope push mov (bad) mov sbb ljmp loopne ljmp bound push ja push icebp out lods mov mov loopne xor ja nop scas add xor or (bad) repz inc mov fidivrl mov dec push push sub out (bad) loop ds (bad) cmp out int3 mov push and aaa mov popf idivb push dec and (bad) cmp rcrb and mov dec mov adc jo push fsubrs push jnp jno ret lods mov jl std cmp mov int call inc push jbe or mov jle xchg or mov (bad) sub sub inc scas jge pop iret xor inc cmpsb in mov scas iret and jp mov inc setbe mov mov mov aaa adc cmp (bad) and jbe sti sbb cmp jnp lea clc decl (bad) mov mov cld dec sbb pop or inc lods mov inc fld dec push es repz push insb add scas and addr16 cmc push rcrb leave or adc dec adc mov icebp fcoml dec jmp mov mov add or xor xor lcall inc jl mov ljmp pop out icebp outsl test dec repz ret stos mov xchg dec mov clc mov mull jp jnp and push lock and stos stos cmp mov outsb add dec and std cmp jnp out pop lret insl hlt pop stos (bad) mov (bad) mov lock xor mov lods cmp mov je je in inc adc add mov mov pop hlt pminsw mov and out repnz mov aaa bswap push inc dec in push test pushf fimull mov (bad) mov enter mov int3 insb and cmp push sub push out sbb sbb adc xor sub iret cltd js cmp add xor sub cmp jno ret repnz jae and call in push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret fsubrl ljmp cmpsl mov sti bound sub in adc mov and mov add inc inc push pop call mov out sub mov cmpl jne mov pop inc sbb inc xor mov or dec sbb mov push mov fisttpl or aad cmpb nop jnp xchg push jecxz lahf lock mov imul aam lret inc dec test mov pop test scas les pop inc sub cmp cmp jb mov pop imul (bad) cvtps2pi nop cmc lea sub pop lret adc or mov imul mov push daa add leave mov push dec arpl fisubrl jbe or sub in fldt or es mov and pop sub jl mov (bad) lock push cld inc and nop add mov sub cli nop fldt mov lahf mov mov dec frstor pop push bound and int3 dec add popa mov or cmpsb roll pop loop push and push mov test mov es test cmpsl hlt and daa aaa pop cmp insb repz aam add xchg lds jp xchg pop sub les fwait add lds sbb mov inc icebp arpl inc stos push adc pop jne mov inc xor (bad) (bad) sub mov jne jg mov sbb add movsl or loope mov fisubl cld sub sbb fisttpl pushl ds aad hlt jl and and fidivrl shll int3 ds pop mov inc je scas dec lods mov shll mov jge scas and test adc in sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret fsubrl ljmp add push and int and movsb pop insl pop std and out fimull testl into mov pop int (bad) in ljmp adc lock xor scas (bad) scas push imul mov mov pop mov sbbl mov inc fst xor push loopne dec adc pop arpl xchg dec in fs or sbb test fisttpl mov pop stos stc aas stos aam lret xchg sub bound js (bad) out cmpsl mov pusha lret es push rorl pop jg jmp pop add xchg (bad) lds mov mov mov in dec xchg ret push add rclb and cmp dec pop push jp in and sahf (bad) or out (bad) mov cmpsl sbb xchg sti les sub mov jl xchg jmp popf add mov dec jge jns pop cmpsb xor mov xchg (bad) mov add std (bad) adc jb fiaddl mov imul scas pop scas xchg jge pop ret in pushf adc imulb jle and xchg cmp mov fwait cmc outsl insl inc (bad) xor cmpsl mov add jl xchg xor pop inc out cmp arpl or mov pop cltd out mov lret mov popf add push mov jo insl jmp jle inc mov mov and sub aas xchg jns,pn add adc and push sbb jge outsb add stos mov push jbe imul cmp inc (bad) mov mov ja pushf fwait sub fwait and jle sub aaa pop mov sbb cld sarb arpl stos xchg lock in outsl lret mov or mov iret lahf subl dec in pop jle mov add inc (bad) push mov push inc cmc in or fstl aas cmpsl dec (bad) cld ja test test loopne mov scas sarb out scas mov test ja outsl adc adc (bad) icebp pop inc xchg xor and fsubr and imul dec cmp fcmovnbe aaa test xlat pop aas not mov jne adc iret mov ss cmp inc cwtl je jnp sub fucomi pusha sbb movsb mov push mov sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 fsubrl ljmp lods or mov jge imul iret rcrb and pop xor cs cmpsl arpl pop loope leave add mov or push mov lret jns arpl enter jmp push jns mov fcom xchg mov xchg fimull rorl test andl mov jg sbb insl dec test das xchg aas scas insb notb leave mov insl xor adcb (bad) dec xor jns add test stc jg and test pop push lret repz je call xchg (bad) dec bound cmp das pushf loope fs mov adc repz xlat or push pop push lret (bad) insl and mov ss mov push mov sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret fsubrl ljmp lods or mov jge imul iret rcrb and pop xor cs cmpsl arpl pop loope leave add mov or push mov lret jns arpl enter jmp push jns mov fcom xchg mov xchg fimull rorl test andl mov jg sbb insl dec test das xchg aas scas insb notb leave mov insl xor test xor jne iret (bad) dec xor pop je iret das outsl test std pop fnop or daa dec (bad) stos mov mov enter imul sti outsl push mov add in push insl fs (bad) xchg fisubr xchg mov loope lret xchg in es mov push mov mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp fsubrl ljmp sbb dec cmc inc out in movsb das push pop dec and (bad) sbb sbb (bad) mov std std pop addl notb inc fcmovnb or lods scas (bad) jge jo mov jns aas and mov mov aad add adc cld and (bad) mov test aaa loop and ljmp movsb jae sahf mov and xchg dec rorl hlt in fbstp cmp fmull or ret xlat aam dec jne adc sub stos mov imul sbb mov and mov push jns inc dec aam adc insl sub out movsb inc daa movsb test sbb inc pusha sbb xchg mov and sub add adc xchg inc aam push add push jmp jne int sub and mov add leave std in testl sbb pop push out xchg push lcall and jecxz cmpsl das sti sub mov and sub mov addr16 push fisttp xor add sbb or test jge adc ss ja gs fild dec cmp mov imul mov int mov adc sub xchg sbb lea sub fdivs (bad) mov xor mov (bad) mov jg imul dec les adcl inc in (bad) mov add mov or test jbe dec fisubr movsl push stos in push inc mov jb mov push popf cmp bound jnp mov cmp call in sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret fsubrl ljmp lods or mov fwait sub movsb subb fildl pop test mov cmpsb out jno xor dec insb enter (bad) mov loopne adc cmpsb jg inc lods inc (bad) mov push jmp mov pop inc xchg std lcall repz cmc sti outsl jnp (bad) or outsl add dec addr16 xor lahf shll call test mov xchg mov mov cwtl cli movsb push add lret call in cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret fsubrl ljmp add push and int and movsb pop push push inc xor push sub jno mov inc into pop test in jae leave xchg jecxz das sub ljmp aam xchg cmp lcall xchg adc packsswb call jae xor outsb dec dec xchg xchg into lret fistpl testb and in (bad) enter mov or and mov xchg inc test fdivr push mov stos repz les inc mov mov inc movsl jne jno cli sti pop lret lock jnp jne xorl cmpsl outsb aas push fucom lods xchg add push push mov insb outsl out jmp push roll sub jmp cmp push xchg repz faddl es xchg outsb mov adc jmp or inc jle (bad) mov lahf loopne mov aam mov jle shl sbb mov sbb pop (bad) mov jne or nop sbb mov add mov pop nop sbb xor adc push jne jle cld negb xchg jne sbb and test cmpsl mov stos aaa pop mov pop inc add pop dec in call xor je sbb nop mov lret cmpsl mov xchg adc mov mov and add add mov in sub and or inc vaddps mov dec nop xchg pop push (bad) dec cmovnp mov faddl pushf cmp and xor xchg sbb mov sbb repnz pop shr insl pop ret and jmp ficomp (bad) push inc dec out gs stos pop or jg je cmc push dec fwait jl test aaa int3 std add adc mov aad jp cmp jno outsb xchg out push into cs (bad) dec cli cli es dec test adc dec (bad) xor push pop adc mov out shr jns mov mov pop (bad) ja addr16 inc pop movsl in sahf mov arpl mov sbb jl fwait push sub jnp sbb lods push sti aad cmp lods loop dec push mov dec icebp iret lock lods inc cmp cmp sbb mov scas dec mov sbb push jnp jl sar mov test out sti in sub mov and cli movsl cmp mov addl sub sbb lock ss in xlat enter test pop fbld cmp sub aaa pop or fsubrl or shll js pop (bad) xor push insb push dec cmpsb fdivl call xchg cld decl jmp (bad) push sarl movsb pop jl imul jp daa hlt adc stc sbb cld es jmp push cmpsb pushw sub inc out negl pop aaa mov scas sub ss int3 fwait inc stos jle jp dec or jb push dec xchg or sub pop sbbl pop adc sbb sbb stos dec push push xchg xchg cwtl add push bound test aam xchg fidivr fimull cltd sub pop fist mov iret insb jmp (bad) cmp mov inc add outsl mov stos cs stos in addr16 lea repz dec gs adc fstps sbb sahf (bad) push add movsb fmull jecxz pop gs mov sub test mov xchg and loopne icebp dec aam push or test mov and movsb xlat xchg addr16 loope mov sub jge outsl jg int3 jno aaa dec cmc inc jno out push fistpll pusha mov popa inc inc outsb xchg stos jb mov roll lock ds jns aam cmpsl mov mov imul jo xchg arpl in ja dec pop fdivrs call shrb lret ljmp xchg pop jmp insb mov push xchg adc hlt mov mov jle sbb or inc shrb in movsl mov jb xchg pusha or xchg pop sbb aas adc add xor std idivl daa push xchg loope jnp test cwtl or mov incl aas cmp pop cli movl sbb cmp arpl fldl2e fisubr cmp mov pusha and pop iret or daa jb cmp int3 (bad) shlb or std mov cmp push sub stos in pop shr sarl dec leave push cmp sub mov sub adc pop mov orb test jl,pt repnz dec pop push sbb push mov es lahf sub push test mov cmpsl pop pop inc loopne out inc push ret aad data16 stc pop mov sub xor adc (bad) leave gs lds mov dec mov push cltd lcall mov cmp shll dec jmp out xor frndint jle push (bad) mov cmp insl std and or mov and (bad) xchg enter mov loope xchg daa js push stos jmp and pop jnp clc testb test lock data16 andl mov pop inc lcall jle (bad) xlat in mov fbstp jle inc mov jnp jbe and inc ftst lock (bad) cmc cmc xor shrl mov and lods xchg adc insb dec inc int xor pop lcall pushf dec mov push push aas js cmpl add cmp adc mov pop hlt sub test subb lret jns pusha lods mov push dec popa aaa mov mov mov (bad) and scas dec xchg inc xchg lods jnp xchg icebp pop xchg mov ds cmpl loope add inc fadds sub jno outsl call cmp lock ss or xchg lea out pop mov inc std (bad) xor loopne adc cmpsl lret inc inc mov ret sti icebp out pop pop inc jg int3 pop cmp mov jo hlt cmp mov cmp lea dec jle loop sbb test xor mov or int repnz int adc cmp sbb out cmp add clc jg jmp into pushf lret mov imul sbb pop pop fs pop jle hlt enter stos lret call clc cmc push push xchg imul mov lcall and and cs subb das pop (bad) out lea mov imul push add cmpsb mov inc test sbb pop and mov nop mov call dec clc jecxz movsl dec sti push adc jl mov mov lods int3 fs adc test or xchg adc pop jp scas or pop inc andl (bad) mov inc lret fdiv push ljmp int3 dec dec popa pop dec out xor push cmc roll daa call loope push pop push xlat std das (bad) xlat outsb mov cmp fnstsw inc dec int sti nop lahf inc sub pop xor cmp add roll add es mov mov inc (bad) cmp push pushf (bad) or pop xchg and cltd jnp mov sub jmp or xchg test dec and ss inc pop xchg inc aaa jmp rcll popf dec xor imul pop push sub insl push lods out out arpl xor mov inc pop jnp jbe (bad) (bad) jp addr16 repz push xchg mov and fdiv inc lods mov (bad) in rclb jmp ficom sti insb dec adc sub cmp nop les xchg jns jp jg push mov xor add or inc inc mov xor jp mov sbb fucomp movsb xor stos hlt xor xchg sub (bad) loopne jge rcr sbb in or call cld jae xchg enter (bad) (bad) stos pop cmc or push dec xchg imul inc mov out pop stos cmp rclb imul ret imul mov andl faddp mov jecxz mov and insl lods xorl add push sbb fisttp sub pop std movb jo (bad) lock jl pop ss pop inc movsl js fcompl cwtl cmpsb adc xchg js into xor aaa jmp xchg out add ds leave out mov dec sub add dec mov and fadds adc daa pop jns and inc dec aas and mov stos fstpt (bad) jg inc mov icebp pusha lcall pop add mul stc clc mov subl mov mov or xor lods lcall inc les movsl xchg sahf jge xlat pop mov mov (bad) loop pop lds xchg push leave in in adc mov (bad) pushf in jbe jo movsb push mov cmp jmp (bad) scas adc fidiv rcr or fcmovu pop inc clc pop xor pop cli pop or ljmp addr16 push jnp xchg add mov clc movb mov loope test iret cmpsb cmp sub sbbl jmp and xchg movsb inc cmp in jl das in addr16 scas stc loopne lret dec fcmovbe jecxz bound fucom fldenv iret call outsl ljmp sub add rorb lods popl jno test push bound cwtl jbe setnp fidiv les (bad) jecxz test fcmovnu push xchg mov dec in mov add cmp push dec dec push (bad) xchg mov mov xor dec dec repz xlat or out cmp imul cli and push or aas stc popa cmp cmp out incl (bad) jne xlat adc mov jl shlb (bad) aad mov mov loope dec and sti sbb jecxz add and cmc cmp cmpsl out jnp and adc pushf dec in les and push sub (bad) mov push (bad) or std add ja (bad) lods adc jnp adc loopne sbb xlat loop cmp stos bound nop repz addl (bad) mov lods mov in push rclb mov mov push pop add test std (bad) hlt jo (bad) and mov push mov pop add insl pop mov imul pushf out (bad) mov lret push inc mov repz test lock mov sub lret cli stos mov dec mov inc xchg inc inc arpl and iret enter fist outsb lret push loop xchg mov sub mov daa or push pop and ret icebp das loope mov dec adc cmp jnp (bad) in inc or add mov or gs mov cli jbe ds dec pusha jo mov xchg nop loope pop imul mov inc hlt out sbb enter data16 (bad) lret mov xorl push xchg jno fxch incl shll pop sub and aad icebp popf inc jbe rol std cmp jae inc pop adc cmc out mov mov popa xlat mov cmpsl (bad) (bad) jp inc jmp and jb cmp push (bad) in rolb lahf inc push or jge clc jno mov sub leave and mov (bad) orl pslld pop jmpw xchg xchg mov pop adcl stos aad sahf into jp aaa stc pop insb fcmovnu outsl sub dec xchg inc lock dec and std (bad) sbb jae or (bad) sub cli out outsb cli push aad jbe cmp pop sub fildl jnp gs fs loop mov fs (bad) leave jmp pop imul mov mov idivl push mov mov in data16 popa rcl insl dec loop inc mov push mov dec sbb xlat jne mov jns in inc idivb jmp loope divl es mov or xchg movsl popf dec movsb xchg pop lret sub (bad) iret lock icebp pop push push subb mov jp jno lock xchg sub inc xchg xor sbb repz (bad) js adc ret fnop scas dec ja bound mov xchg xchg je (bad) lods lret leave jb pop loope xchg push (bad) pop ret or dec mov (bad) mov sbb mov lahf and mov mov mov pop imulb and mov aam and (bad) pop jmp push lds push lods add cmp jae ret xor ljmp out fistpll cltd lods gs into iret jmp fldcw jo outsl xlat jge pop insl arpl jg imul cmc into insb mov dec xchg inc mov xchg lea out push gs cmp mov jecxz pop movsb loopne mov mov mov call push fidivl push jge or leave mov inc or out mov shlb fistpl in es cmc lods dec lods pop fimul pop xor fsubp jmp dec jae,pt jnp hlt push sarb subps lahf jo cmp jno dec loopne loop repnz sarl push cmp daa mov push mov fwait pop in xchg or and xor paddw andps loopne cmp cwtl scas push jmp cwtl out mov xchg inc xor sarl mov dec adc lea fild add inc aas sub negl pop jno enter jl jbe in mov cld rorl out push mov aas or pushf loop sahf mov jno pushf mov mov jle adc jae push inc inc sbb popf mov insb sbb sub inc cmp jno pop imul mov scas jae daa xor jge into in and shl jne (bad) jl pop sbb mov rep outsl xlat xor nop fwait dec cwtl mov sbb xlat xlat jnp add jb mov icebp lret jne push cmc lcall xor pop rcrl pop mov mov mov inc hlt dec xchg dec or mov ds xor push cmc cld sub aad inc cmp jl enter cmp test movsb add jae leave (bad) add fmul orl fdivs jp lret je cmp loop inc loope hlt add (bad) cs pop daa into dec test ss push popa inc ret in enter fwait je adc fwait lock inc jecxz mov loope mov dec jne adc and dec addr16 mov pop cmp scas xlat insl push (bad) rep rcl push dec xchg xchg into in cmpsb dec pop cltd lahf sbb hlt into jl es icebp pop call xor push fadds dec setp sarl mov mov push in mov jmp dec or push xchg call pop loop shlb mov test cli scas and icebp push pusha lcall lret push out xor mov mov aaa sbb push and mov mov push call xor or cmpsl ffreep pop xor dec xchg xor stos ror mov fadds xor repz inc sbb out iret sub mov frstor call fs test add dec inc add sbb mov or mov adc int3 pusha push pop mov jne cmp enter ja (bad) mov sbb aaa mov lcall push mov test pop fsubl lahf pop sbb jge adc repz mov push mov push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret fsubrl ljmp push or xchg lret sub xchg pop xor add jl push int sbb repz jp stos into pop je out jno ljmp (bad) popa rol loope es jb sub cmpsb or rorl in add adc mov add andps hlt mov das push hlt lea push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret fsubrl ljmp add shll jbe mov push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret fsubrl ljmp sbb sbb out inc xchg mov and push stos mov add ljmp cmp cwtl xchg xchg inc push push fs mov xchg outsb (bad) aam mov mov or (bad) in mov repz jl jns sahf arpl sarb stos in insb lock repz test int3 add push loopne mov out dec ja shrl dec xor push xchg mov fwait popa outsb mov push mov mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop aam outsb ja sub leave aas lret cmp cmpsl outsb movsb test mov cmpsl aaa fcomp or lock test sub xchg mov xor sub fstl call call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp es jle xor clc mov in cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 es ljmp lods aaa jg,pn cltd mov mov pusha sub lret push rorb inc jno ja scas lahf iret test sbb js push and cmpsl dec lret inc push pop inc cmc adc aam push xchg adc cli sub mov mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret es loop or adc push cli xchg bound dec or test ja mov and jge sub jae insl xchg cmp addl mov cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp inc pop push sub push mov push ror xchg xchg dec jns and pop sub cmp (bad) cmpsl xchg repnz and inc sbb jg pop in mov xor daa gs inc sahf addr16 fstps das insl push cmp cmpsb mov (bad) (bad) shr shll inc aad cmp dec pop and cwtl add jno add clc (bad) repz test sbb mov jb insl mov fistpll mov repz pusha mov push idivl mov inc jp sub std jl mov call in push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es or xchg add out enter jmp and ret rolb push int inc pop sbbb rorb sub xor clc pop mov xchg cmp (bad) sbb xor dec insl add std test aas and jae into js (bad) adc fsts das ljmp push push out loop add dec cmc xchg std outsl les loop sub add cmpsl add lahf jmp pop ljmp test addl xchg popf fs aas imul inc cmp in pop cmp mov pop cmpl and jo loopne loopne jmp fildll cmp aaa or and xchg adc lock xor mov dec push mov pop pop fldt push test std inc sub xchg and decb or aaa jle div outsl js xor pop dec xchg into sub pop jae jle std or cmpsb xchg sti sub lods (bad) (bad) push xchg lock nop mov xor mov xchg push fistpll push mov xor ret jb jl cs insb mov negb fwait pop jbe mov inc aam mov sti icebp stc dec (bad) fs test xchg addr16 loop aaa pop jnp push inc xor xchg pop xchg je ljmp or jb rorb adc xor fwait add cmpl cmc jge shlb lea add add mov inc in (bad) or out sub pop jmp stos sub nop ficom (bad) sub and mov add mov (bad) sub mov mov ret movb icebp push pusha (bad) lods pop iret fiadd icebp mov repnz imul xlat pushf ljmp inc xchg clc xchg push dec push repz add and daa in jl cmp pusha mov mov popa sbb lcall in stc lcall das mov pop popa fsubp lods (bad) dec inc push and inc std ljmp int jge jp ret adc addr16 mov out push lds add push rcll sub mov stos or jbe aam mov push mov and adc jnp push xchg jno es (bad) cld sbb js jo jp jl or mov and sub movsb out cmp or dec mov cmpsb cmpsb (bad) in aaa pop movsb jp daa stc mov xchg enter pop repnz test lahf loop (bad) xor xchg jge mov sbb rorb inc js xchg test and es xchg adc add sahf lret ret jnp sbb mov mull adc insb rcl in push sbb rolb aad sarb mov sub inc leave inc (bad) cld fsubrs or sahf fisub pushf inc sbb int3 lods test and ror data16 (bad) inc and mov push sub outsl (bad) push sahf or mov mov push into ret les adc push rclb pushf lods in loop (bad) popa int inc pop arpl into jecxz or fisttpl bound in mov int3 insb push inc cmp push lods test mov (bad) sti es lock jno and das lods jmp lea push push outsl push rcrb and lret jecxz rolb mov fiaddl stc xor dec jbe push shlb mov or pop test adc cmp xor loope sbb repnz cmc nop das inc testb jge pop jmp jb enter dec push cmp sbb mov xor dec ljmp xchg daa (bad) jne push pop push inc stos (bad) aad sub stos (bad) jo test lock sbb adc faddl aaa addb mov addr16 push sub cltd add outsl pop push jne test insl je add jl push xchg or pushf xor fiadd test gs lods add fidiv repz mov mov sub ljmp jae cltd cld daa sub fmul inc jo test pop mov push mull orl and cs test sbb pop es jne dec stos scas inc loop call inc int mov ja sti xchg xor push cwtl jge bnd or mov adc jnp js fnstcw fwait js jbe js lahf pop cmp xlat jp aad out shrb fldt nop hlt xchg test adcb fnstenv loop adc pop bound ss xchg mov pop sbb jmp idivl adc jmp jp cmpsl xor je daa dec lds call pop loope mov sbb sbb call or dec int sahf inc negl popf xchg push adc repnz test or outsl sbb cs cwtl ja cmpsb out movsb lahf push mov cmp aad pop leave mov sbb inc aas out in mov mov jae lea test aad mov test mov inc jnp outsl push (bad) mov pusha loope adc repnz stos mov mov jae stc test fs test pop repz jl lret mov pop sahf std push cmc lcall xchg jno and sarl lret push subl mov nop es xchg subb aaa and fsts jl fcompl (bad) add dec jns push (bad) divb dec (bad) idivb insb jmp nop add or popa cmp sti add adc pop xor insl push es stc jg mov std jae xchg or sub js mov mov add mov adc popf adc inc xchg gs adc jnp adc dec mov movsb adc test push (bad) dec push aaa sub xor mov mov pop xchg jo clc xchg jecxz xchg pop mov dec js inc mov loopne inc lahf adc mov xor mov push jnp mov lods pop add and mov outsl sbb gs movsl iret dec lds push scas jb (bad) adc pop inc xchg fucomi test lods adc mov and sahf inc mov ret lret mov scas test in push mov inc shrl test dec sub push or push andl lcall movsb push ljmp mov pop and inc loop or insl repnz das xor mov xor jnp push or je mov push mov mov enter daa inc fs sbb xor loope mov pop sbb jno jp pop lods stos fmuls and daa add xchg iret add jecxz fimull xor (bad) or mov push mov adc xchg in xor mull and iret sbb mov jp push ss push sahf push mov in jp mov fldcw bound jecxz dec out dec int sub push sbb out leave adc jne faddp insl aad mov push pushf mov repz mov mov pop sub ljmp jg in dec mov push adc sub adc mov dec xchg pop out leave testl xchg rol cli aam push rorl pop and push les and inc cmp dec and cmp mov fs jg push lahf (bad) jmp div insb and test imul sbb fwait inc mov cld jecxz push push push mov fadd cld (bad) xor add and adc cmc cmp and inc mov movsb cli jecxz pushf pop into data16 mov mov test clc in test xchg sbb add mov into clc lcall imul inc mov dec lret and (bad) cmpsb inc or jmp pushf fistpll les push mov mov or push insl inc jns mov jae cmp dec (bad) fsubr stc rorl xchg (bad) push (bad) inc push jg push xor jae push loope and das pop dec rcrl add add pop je sbb movsb hlt les nop add add dec cwtl stos out inc scas pop mov pop mov push push fs adc mov inc dec xor xor inc xchg push fisttpll mov popa scas nop test pop test data16 mov (bad) sbb xchg pop pop (bad) xor add aam pop cltd pop xlat sub add or adc aaa inc jae xor setge ds mov xor out lea mov and add jns pop or (bad) gs sbb adc lods (bad) repnz fbstp out cmpsb imul shrl pop dec push jle out jg inc cwtl adc out imul stos adc (bad) or add mov je adc xchg xchg cli adc mov imul cmc xor jge,pt cli inc push (bad) insb sub cwtl xchg and bound cmp dec scas dec std lea movsl mov clc in xchg jb push (bad) jno or jnp mov sub ds xchg push lock ret subl lods fcmovne xchg roll fwait lcall inc adcl fs pop icebp inc dec cmp rorb cli push dec out xchg dec pop sbb cmp aam sbb sbb loope dec fs dec or sub jle xchg aad inc mov or xor or jnp jnp stos roll sbb ja fistpl les inc test xchg sbb aam (bad) stc push repnz popa and mov jmp in dec loop add xor jae pop pop push inc pushf lds push call cmp rorb rclb mov pop movsb push hlt addb mov ret xchg add or push add in (bad) mov (bad) xchg jae in daa popa sbb outsl std mov fnstenv push xor adc stos loope inc push mov jb (bad) adc sub lret pop add mov rcrb in mov xchg adc loop jg sbbb out cli jnp or lret cmp test xor imul jl cld push fstp fwait xchg pop mov std movsb arpl or (bad) (bad) push into mov pop and pop bound in inc ja add mov leave shrl mov bound dec arpl addr16 jne ss loopne xor (bad) cld cli popf pushf mov mov jle mov sub xchg mov into test je inc loop sub jne ret lret pop stos adcl repnz stc fnstcw add or stos push fdivrs (bad) aam jnp adc outsl jge jne lahf lret into mov jbe hlt es add jns add in and jno fnstsw push hlt xor mov ret data16 and in pop xor int3 mov or jmp xor mov push mov fdivrs push dec nop pop (bad) sub mov pop movsl mov lds jb hlt sbb cltd jnp sub pop mov push loope ja xchg add mov xor bound orl cmp cmpsl mov in test jmp mov aad fiadd add roll sbb push xchg pop js pop test cld add (bad) fmuls push test add test in or mov scas mov and pushf rcll push (bad) cmp addr16 xchg into xor cmp fcomp loop add aad adc out sub js jmp adc data16 mov adc fldl pop es in sub cmpsl fwait shl je add fstp lret cmp push notb jnp stos les mov popl push (bad) push ja jp into pop fdivs enter adc sbb lcall mov mov inc incb xchg mov jnp ljmp div test adc std shll lret adc inc sbb hlt inc jl scas jp sub add add pop and outsb and lea pop out out js pusha xchg (bad) jnp adc push leave scas mov inc shrl inc imul cs pop dec mov inc mov dec jae ja loopne jo lods outsl jge (bad) mov xchg and inc xor mov iret shl lcall jecxz sub jne adc popf inc and test pop aas sti mov mov (bad) jae bound xlat test test cmpsb and ds fwait movsl fs jmp lcall dec jne or addr16 data16 rcrb xchg jbe test in sub dec iret dec jbe inc xor inc pop push add or and leave out sub (bad) pop es mov enter popa or sar jbe test mov and sub cmp loopne sbb xor inc push loopne scas mov cli sub xchg dec aaa enter inc pop test addr16 inc jmp mov insl arpl sahf and fdivr fistpl out sarl xor mov xor dec mov adc stc add inc cli add inc call mov and addb ret leave ret jmp sti mov lcall jecxz repz pop je push inc dec hlt int inc mov push xchg inc inc (bad) xor and inc adc fstpt je mov and mov and (bad) ja scas out jp push pop mov fildll ljmp int cmpsb test mov or cmpsl sbb mov push je cld cmp leave lock test mov xor xor dec int3 loope std movsl sub add add xor sbb jmp (bad) int3 (bad) lret in les ret sub imul scas mov mov cmp push mov shlb mov test insb mov push mov sbb add sub sub or mov push aam xor push or adc dec aas add mov inc pop adc nop adc add cmc fist and lret adc jae test add jbe (bad) out das (bad) (bad) xor jmp decb dec mov cmp push js mov fdivr adcb int jmp lea in icebp outsl insb ret sub shlb jecxz add int jle or mov or jp or ja adc push addps inc mov lock add inc ds push insl or movsl jp mov xchg repnz sub es dec andl mov mov packsswb aaa push faddp add test sub pop mov fcompl loopne sub ret test aad inc sub arpl mov and push inc orl icebp push movsl or pushf aaa adc mov nop leave push and add icebp adc or out add insl sub xor dec or mov and scas rolb les sbb inc inc in cmp pop dec xor ret popf mov push pop add inc lahf cmp pop xlat mov test roll shlb test xor stos movl inc sbbb repz aam jbe xchg xchg outsb cmpl daa fdivl push mov stos jp and cmpsb dec std pop inc nop push xor mov and or adc cmp inc insl lret loope add push std test jnp cmp ss (bad) xchg jns in adcl and popf daa add inc jns test data16 cmp lods out mov pop (bad) pop lahf movsl nop inc push jae ror mov push (bad) icebp pop lcall cli out sub or movsb pusha test (bad) lcall push lahf scas into dec (bad) sti daa cmpsb scas cs cmp pop daa ret push mov cmpsb into xchg cmp mov or loop popa bound aaa call pushf mov cmovb jle cmp leave es or loop jnp sarl (bad) loopne in add js jne bound das dec dec mov imul (bad) stc jne stos imul push cmpsb mov dec int3 fisttpll in push push lcall stc (bad) pop fwait xadd mov mov shrb or add pop popa lahf pop bts clc jbe inc js dec js nop pop push fsts (bad) (bad) mov aaa xchg cwtl xorl or pop push push negl sub (bad) dec nop inc clc adc xchg mov loope cmp jge ror cltd in xchg sarb mov push arpl ss inc cmp mov insl pop outsl popf in mov negb xor jbe jmp lock (bad) adc mov jnp push rcr pop adc mov inc ja icebp and fs insb adc loop jmp int lahf sub or test xchg leave add mov test or sub cmp and aas jge movsl dec idiv rcr rorl inc jb mov popa ret jnp dec test dec xchg mov cmpsl mov mov xchg sbb mov or push stos adc lods and orl fld aad in mov mov (bad) lahf (bad) jne xor mov xor ds int cmp inc add and mov jl mov or jb jne ficompl jp jg insl xchg std gs push push nop mov aad mov xor pop mov imul inc jno fidivrl test sahf into icebp lea dec daa ds into lds push jo (bad) add in xchg hlt stos lods xor loope sbb xchg xor push jb jl add sbb xchg pop cmp cwtl sub jecxz mov pop test fwait pop sbb loopne add out sbb stc adc cwtl out cmc in xchg rclb dec int3 cmp sbb xor mov mov jecxz mov jecxz lret int and outsb (bad) ds popa push mov mov mov repnz daa int3 aaa int3 (bad) jg mov jbe (bad) repz sar sbb pushf xor inc (bad) hlt mov les hlt mov aad std xor xor lahf test push adc test pusha ja xchg lahf push sub add (bad) lret add je jo jge add jno mov pushf lock sbb inc dec pop xchg fistpll and mov fdivrl mov dec popa cwtl iret jne ss ss jns inc xchg push xor scas mov adc mov dec cli bound sbb xchg and pop repnz jae popa mov movsb jno push arpl cs call icebp fistl push sub push fldt jp fimull mov xchg cmp xchg cmp mov es sbb lret xlat fdivl (bad) loope std mov jns mov (bad) adc inc (bad) xchg mov dec stc fnstsw push sarl iret rol or inc pusha cmp sti sub lret es mov pop mov aas adc movsb aad in and xchg push dec dec push and insb add das sbb adc sbb push fsubrp dec fist jp xchg mov in out sbb push cli mov call push imul test in mov imul daa aaa mov insl and sbb mov sbb in inc xchg scas mov ret lcall out mov cmp leave pop loop pop or mov lcall or sbb lcall repz xor push push jmp inc insb (bad) movsb dec outsb mov add repz jns call fmull push ret repz rcrl testl test push js ss push dec mov mov sbb pop cmpsl aad inc adc mov inc mov rorl inc lret cmpsl xchg push push std push ss cmpsl add adc mov fsubrl popa cmc sarb pop pusha mov cs push addl (bad) pusha fsubrl xchg mov lds fstl push punpckhdq aam fs pop cs movsl fstpl aam or jb jmp mov push adc sub in mov xchg mov das lods push pop es inc pop pop aad adc les pop shlb scas nop mov and push in dec adc or mov mov mov pop pushf sahf addr16 xchg sub jge gs cmp jmp fimul pop lds stc test mov jbe out in lods (bad) sub xchg adc call lods test adc lea in iret lods sub mov adc pop (bad) sub fstpt mov ss sub add sbb sub xchg jge ljmp cmp pop mov lods sbb sub (bad) jno and aaa (bad) inc jl (bad) daa das lret xchg mov lret jns dec pop sub and jne test int xchg mov cmpsb and sti mov add xchg ja scas pop sbb bound dec mov mov iret lcall push xchg pop (bad) fsubs jmp sbb push dec inc sbb mov imull in ja and es dec repnz pop addr16 out int3 jmp scas add cli dec push cld insb mov rol push xchg xchg and fs aas movsl jae xchg pop cltd jbe ja pop cmp mov pop gs fcompl sub movsb jne xchg jle cwtl lea adc xor orb sub cmpsl pop push push ja and and pop adc and push lcall shlb sbb push jl pusha roll cmp jno xchg fwait dec fnop enter jge out mov ror out or lahf inc xor and sub lcall cs sbb inc push pop loop imul mov sub xchg dec sti mov jno adc loop notb xor cmp push inc adc pop or adc les dec pop xchg dec push mov shrl cmp push ss and and mov stos sub dec sbb mov mov rcl je xchg and clc xlat ds push fistp cmp (bad) xor mov bound inc loope stos inc add inc lods xchg add add jns scas or sbb fiadd in xchg mov mov lods arpl cmp jg sub negb orb ficomp adc push inc and cmp in clc jmp ds rcrl int mov xchg fildl mov scas outsl cld out hlt mov out adc cmp dec mov adc jbe sti dec and lods push jecxz and fidivr jg cld sti jmp jge lods xchg pop stos xchg insb lods ja add (bad) cmp jno (bad) or jp dec (bad) or jmp repnz mov mov mov mov pop push and push pop into jge cs mov dec mov jle mov mov jb cmp jmp adc xor notb pop inc test imul fwait jmp push push push lock divl mov mov and adc and pop xor (bad) adc dec mov aad add in dec iret cmp jecxz mov dec pop jmp out repnz add (bad) dec fnop jle cld xchg ss outsb out fdivl pusha and mov mov jae popf popa in pop js inc setge jg xor (bad) or lahf add xchg inc mov and jo inc addr16 or (bad) xor pop mov rclb push cld xor xor push lret ja mov inc insb mov sub add adc mov sub movsl jge adc dec jmp sub cmp push cs nop aam mov lock or xor xchg aaa insl stos rolb mov push mov clc fs les cmpl fdivl dec cmp jmp jmp push xchg cmpsb push repz out push fstps mov add sbb jnp or ror jecxz repz das cwtl dec jnp inc push push dec cltd test pop aam sbb dec mov out aad jp fwait scas xor cmpsl daa test fwait cli fs out xchg inc push ja sub repz push pop inc mov lret pop push add enter cmpsl aad xchg mov jmp setge adc xchg pop test and pop repz aas add pop pmullw sub lret pop int3 lret insl pusha pop lcall mov dec scas popa adc inc imul mov pop pop sub out sti xor ret imul adc mov test sbb mov mov push bound gs xchg mov cmp in loop stc in and je popf adc mov mov cmpsl dec cmpsb adc in or xor xor mov inc lret decb mov pop mov subb aas and xchg mov fsubr call jb sbb stos (bad) repnz add inc shl dec test pop insl ljmp ljmp jg dec cmp adc dec pop imul push popa (bad) or andl dec mov ljmp ljmp imul stos cld mov out ret sub rorl adc and rdpmc pop aas fldcw nop movsb std les fnop or sbb js popa and stc hlt push jge xchg jae outsb jb dec lods mov loop je inc jecxz repz push and lret fs adc cmpsl mov cmpsl shlb shl lods and pop push xor xchg (bad) negl sub insl xchg jb int3 jb mov mov and sub mov sub arpl arpl cmp cmpsl in repnz data16 nop (bad) cwtl jle mov sub mull dec aad xor push lea mov sub fiaddl clc mov out arpl jge push xor ds leave dec pop ss or mov test rclb ja xchg ss jb adc out (bad) mov dec or push pop pop and mov adc fldcw and or adc movsl inc inc shlb lods out (bad) pushf loopne (bad) (bad) idivb and mov sbb movsl cltd adc dec ret lahf inc xor xchg (bad) rolb mov rorb sbb mov sbb mov jl iret stos dec xor or (bad) stos stos ja sti orb add dec add outsb dec xchg jl (bad) mov sbb xchg lret inc cmp dec add repz cmc xchg (bad) push jo inc jmp imul add outsl dec bound pop adc xor push xchg xchg cmp push std cwtl sub adc cmp push mov test stc jmp push les fcoml pop dec jp (bad) jp shlb cmp pop out cmp mov mov data16 lret or shl dec or lock loopne sub loop pop roll dec pop mov aas test inc test (bad) dec hlt mov push out into int3 lea pop push sbb lods mov mov push adc inc pop mov leave sub pusha dec ss sub js dec je bound rcr shll cltd dec and mov adc shr add imul pop dec xor xchg nop test idivl enter sbb sbb roll and mov loope xchg (bad) incb cwtl (bad) aam or js push sub dec pop ja cmpsb mov push lds lahf pusha xchg imul inc std mov (bad) xchg (bad) push icebp push loope xchg int3 arpl inc int inc sbb pop mov lea jne inc add mov sub dec jle (bad) jmp ljmp ret es dec mov movsl outsl add sub xchg fst push lea inc adc xorl (bad) hlt xchg popa data16 cs jno cld hlt stc nop dec in xor mov push test push mov mov mov arpl inc out jl pop lock or mov push addl jnp leave adc mov and ss pop bound push xchg mov inc test lahf (bad) fnstenv (bad) fistpl cmp clc sbb inc pop je push lret sub jl xchg sub push das cmp cwtl pusha inc jo add jmp add and jne add mov mov sub jmp and enter pop jae mov (bad) nop or xchg mov adc notb cmpsl int std push cs out pop les inc rolb int push sbb lods mov cmpsb and dec insb jbe or loop pop rolb or pop (bad) in push insb push les xchg enter (bad) or xor aad rcl fldenv ja mov fnstcw call push inc or mov scas jl jno push or scas or jbe inc and push cwtl cmp push fiadd lret insl bswap cmp jmp (bad) and mov ficomp sub lcall cli out push inc shrb pusha (bad) int3 ret sbb mov lret inc pusha add ds jo push aad adc imul ljmp insb sub sahf and or inc add add test mov dec add xor imul fisubr or push test inc imul sub aam test jle dec push popf pop into sahf jbe invd or adc (bad) dec add push je (bad) pop outsb mov mov (bad) xchg leave push aaa xchg jnp scas repz inc in js push sbb mov mov je popa mov hlt inc test xchg pop inc pop rorl mov jecxz pusha std and cmp sti sub out subb or mov jno sbb aam adc jmp sub ja mov mov sbb mov lahf inc imul jb lret js and add push adc xor adc pop jo pusha sub es jae dec mov jp cmp enter loope stos mulb adc fstpl pop stos aaa out or fs push stos inc push inc idiv jns cmp jnp popl mov cmp in cmp cmp push in (bad) jns sub sub cmc movsl sbb lods mov xchg sarl cmp in xor add and add jl pop scas shrl pop shlb jecxz lods dec fdivl sub pop shr and out mov ja dec rcrb xor cmc push sarl pop xor iret sub lods ror xor sbb inc jg xchg (bad) mov dec or mov pusha mov outsb lods fcompl jb cwtl arpl hlt mov mov add jnp fcmovnbe lods fnstsw (bad) aad jo loop sub pop movsl or test pop xchg call mov inc xor lock jae repnz sbb mov lods int3 ss adc inc cmp jb jae pop popf out lret push push in loop fmul aam mov xor adc divb outsl pop popa add jge notl mov in pop stc fmul fdivl mov cmpxchg jae mov pop jno xchg loope mov sub addl inc dec fwait scas imull push pop adc push add mov mov ret mov cli loope testl dec les mov nop icebp sbb sbb retw insb push ret and jne aas sub andl jae fwait and or out pop or xor mov inc popf pop or rorl add test cmp adc (bad) sbb xchg in test push cs stos jg and fsubr sbb mov xchg jecxz push jmp or aad add movsl inc pop dec (bad) mov outsl aaa jl test inc das ljmp push and mov sti cltd fdivrl roll inc mov popa in mov sub pop js imul xor or scas mov pop aad xchg adc sbb pop mov or sbb push mov mov jno or sbb movsl rcrb sbb clc jb xor js fs pop popa or js lahf out (bad) dec int3 mov push add cli pop jle jnp mov (bad) jb mov pop insb data16 push test jo dec aam int xchg jle ret mov into xchg sbb cmp in (bad) adc iret ficompl jmp out and dec push ret addr16 aas mov or out push mov lret or ffree mov inc adc mov inc out repz rclb sbb xchg cmp xchg push pop cmpsb pop sti ror cmp xor push stos ret push scas ss sub rol test mov xor es fldcw mov and in rolb es lcall mov jnp popa lock jecxz sahf adc fdivs int3 cmp ret fdivl add mov js sub test add mov lods xchg jecxz fisttpl cmp outsl jne mov lret insl cmp js sahf push enter insb push push jecxz jns jl pop loop pop (bad) mov and stos xor jne cli dec add gs in jno aas les packssdw cld adcl sbb aad (bad) cmp arpl (bad) out push enter sar divl xchg push jb lcall push scas (bad) or stc xchg cmc inc les sub jo imul or mov lcall mov imull je mov das iret mov cld xchg sub inc in push dec jns into (bad) inc adc cmc int3 test mov jl mov enter cmpsl inc mov mov orl sub cmp mov inc push das repnz fsts push xchg shlb imulb push adc jp popfw icebp push mov movsb roll sbb mov pop push out out or int3 ds jmp dec xchg lds dec pop pop mov enter mov dec lock hlt ret lods adc xchg call mov or ucomiss imul dec xorb jno push nop aaa fneni(8087 xchg push xchg push popa mov mov int das jns push push shll test cs loop aam ljmp imul push lea lods cmpl test adc (bad) fistpl xchg dec push adc rcrb leave (bad) mov mov cmc or jp sbb sub push push cs popa pop sub notl cs xchg and pop fstpl cld loope cli in popa lods mov clc cmp jb stc fs inc cmc (bad) push push arpl fwait push sti loope xor ret rol or pop mov cmp into insl inc push dec inc fwait std dec lahf inc push or jp push adc divl stos or xor repz stos sbb push and dec push and (bad) (bad) repz lret xchg decl dec and sub mov scas pop addr16 into pushf call call mov es adc cmpsb (bad) mov mov add enter jl xor jl repnz mov lahf xchg test pop out in xchg addr16 mov lods ds push lods jbe add jno cmpxchg lcall push push andl xor sbb pop popa mov mov lock lds repnz lds pop cmpsb pop stc add (bad) cmp add (bad) fnstenv add push cwtl ret in sub into loopne scas mov imul add jno int fidiv popa inc enter (bad) (bad) jns sbb push sbb test jo mov mov rclb int3 sub je lods in sbb xor bound xlat cs jns mov and sub mov mov mov adc addr16 int andl test repnz shll adc add cmp in push out sbb lahf test pop lds sbb sub cmp sub scas insl pusha mov cld push pop inc mov push add adc cltd dec mov icebp out (bad) xor (bad) repz sub jb (bad) lcall lock mov aad sub enter push imul adc js iret fcomip push ljmp mov mov xchg pusha mov arpl cmp mov (bad) sub push aam xchg cld mov stos push (bad) mov dec icebp jmp mov jmp sub pushf les test mov cmpsl cmc xor pushf dec and mov mov popa sub pop fwait push aam aaa pop andl and mov jae cmpsl iret ja xchg loopne mov pop mov adc push loop test hlt lock ss bound push in push aam or aaa rol inc fist xchg add pop cmp pop sbb jmp sbb push mov xor mov fldcw sbb and add out (bad) cmp dec sahf xchg lock rcll sbb add push pop or xchg push add rcrb (bad) add push dec mov push in or (bad) cmp or cld call jp cmp (bad) jo add mov xchg or out cmp test jno ret cltd movsb clc out mov jae inc les inc loop loope sub push jecxz je in jp popf gs imul pop (bad) mov jnp pop pop fs bound (bad) sahf sbb scas xor mov sti cmp loop push cmc pop fucomp addl pop jl (bad) cli dec mov nop pop dec or mov ret and data16 stc popf cmp inc pushf mov pushf xchg popa and xor pusha dec insl xchg fiaddl divb jnp test lock adc les xor hlt xor add cmpsb push xchg sar mov jnp (bad) aaa lahf adc fbstp bound negl jo (bad) mov push adc ror fcoms or pop icebp pusha fisttp ja mov fcomip cli div rolb pusha xor hlt imul stos xchg fcoms sbb dec mov dec xchg loope add sub mov xor sbb jbe jbe push lea sahf lret scas scas imul in insl push add lods mov fcmovnu lods repz xor imul push dec scas leave ja dec std aas scas stos pop arpl xchg rcll testb pop or shrb imul imul push dec fldt jl fsubl fwait push lods lcall push test adc lcall inc or (bad) sti dec lock or pop rcrb xor popf enter push xchg int add mov int3 xchg scas std in jle ficompl cmp inc inc or mov sete add jmp sbb sub jb test jbe and add cmpsl inc or adc jg push test mov fcoml dec mov inc xchg pusha xchg jmp call sti sub inc pop mov sub (bad) (bad) imul test push adc std mov (bad) sbb adc xor scas adc test adc je aam add xchg sbb in call mov mov test aam fs test les jb (bad) fdivl lahf popa movsb pop cmc push mov enter leave sub inc pop lret xor xchg push or lock pop lahf (bad) loopne icebp mov test inc mov aas adc push inc cmp out push imul and enter leave inc mov loopne stos popf sbb mov mov cmp mov dec mov jle jbe popa sbb mov cmp jnp arpl (bad) in ret sub adc mov mov pushf imul testl cs push jmp daa int int iret inc push mov dec and and (bad) cmpsb xor (bad) sbb xor mov stos test xchg ret push neg push scas mov sahf in insl data16 js pop jmp sbb pop ret dec gs jbe push (bad) cmp es psrlq xor or dec lret cmp repz push dec push push xor dec sbb pop mov inc daa push lcall add out xlat (bad) das pop jnp or xchg loopne push cmpsl xchg popf (bad) mov repz dec seta (bad) dec inc sub aad jge out sub movsb jge mov clts cmp xchg mov mov mov int out stc xchg dec add mov adc cltd inc std sbb stos cwtl pop jne and or jo fcoml outsb setns (bad) imul xor inc adc int test cmp dec cmpsl push xor movzwl adc adc cmp insl in xor lahf push push push xchg pop cmp aam ljmp lahf add jns mov adc imul jge cmp and out int add lret xor nop jo sub sub out imul fs xor adc fs mov xlat mov je sarl dec push orl roll fidivr (bad) cmp adc mov sahf into adc fnclex out xor les cmp aad mov push (bad) xor aas push cmp mov sub loop cmp dec jno push ret sbb mov pop sub sbb aad jae mov in push pop add sahf insl fbld mov and (bad) pushf jnp ret jl enter cld adc push xchg dec cmp pop add push insb fwait aaa sti mov mov in shrb (bad) push pop enter daa mov jo fimul push inc adc insb inc hlt in pop xor jg insb inc ret mov sbb push push cmpsb sub add in pop sbb rolb pop pop dec mov push int lahf dec lret push fisubr cmp std xor inc fstpt stos jae loopne jecxz cmpsb and gs out icebp test arpl xlat mov cwtl (bad) jnp mov lds dec mov fstpt mov sub out cmp imul stos lods ja pusha dec fisubrl (bad) test and push ret sbb (bad) jmp mov sub and jae lds add jp sbb test js mov loop js retw (bad) fsubr fdivrp lods cmc stc fdivl and pop push out jns pusha scas or in jp ficomp xchg adcl mov pop or pop xor inc mov jne sub cs cmpsb int3 (bad) lret cwtl add lcall sub add push mov imul or fdiv cmp cs xor stc loopne rorl popa mov hlt insl mov mov rol add pop jmp cmp std mov mov lods cli pop imul lret out lock xor nop and and cs jns hlt dec int sti push sbb mov or jp cs xchg sub ret imul add or in repnz mov dec pop pop xchg fiaddl adc or adc std push out pop jge cmp stc aaa xor sti xchg std ret (bad) into nop aas mov sti (bad) stos xlat adc ret sbb mov mov cwtl rep lds cs fstps mov xor test loope sbbb mov outsb hlt rorb cmpsb sub mov lret outsb cld cmc insb pushf das dec sub das cltd dec add call test jp xchg xchg push (bad) outsb mov and lret outsb (bad) fsts mov verw ss rorb mov dec fsubl and and icebp daa orb in cltd repnz orl jno inc jg pop jns (bad) loopne lea jbe push rclb push push inc imul mov add test sbb and int js adc inc inc xor cmp mov aam inc (bad) dec mov mov lcall nop cmp cmp and mov repnz mov inc cmp adc lret push enter mov aad repz lret or adc fsubrs ss es cmp add in add adcl popa or stc add movsb mov push pop lcall push (bad) dec jp xor jbe clc inc pavgb mov jg loop in fs push loope lret (bad) adc dec lret adc fwait jle,pt je adc adc nop gs gs cmp fwait test pop in les nop cs or push (bad) mov push fidiv lds pop sahf jae jmp mov mov xchg (bad) mov in mov aam movsl cmp stc or lea insl push xchg jno clc inc mov fisub jg mov fs sub lcall lods cmp aaa sbb scas lock jg or out lea and stos add pop cmp fwait mov pop jg pop pop int3 jnp push loop sub sub fwait dec push out lods jno (bad) insl lock int adc in data16 sbb mov mov js (bad) movsl insl xchg push sbb mov mov aaa sub mov cltd add loopne dec (bad) mov das dec mov inc idivb pop mov dec mov pop pop inc out xor das clc test push in stc jbe push pusha in mov adc shll sar movsl jb mov ja push je mov (bad) leave cmp movsb cmp ja rorl adc rcl and mov push jne outsb mov mov mov pushf pop stos mov xchg sbb sub sub aas (bad) mov ss lcall nop pop in sbb adc out addl mov xor insb pop inc (bad) mov subl xchg jge xor dec lods popf jae dec call out int hlt pop sbb (bad) or push je cmp mov iret sub aam push add gs cmpsw lods mov aas popf mov jae (bad) in hlt lds or mov leave (bad) sbb cli adc mov jo loop and hlt sbb mov cmp imul adc mov sbb popa sarl pop xor fisttp cmp mov push pop andb ficom push cli inc ss imul mov mov cwtl sbb jbe stc jns iret fidiv xorl aaa fs or and push insl aad outsb mov insl mov in lock (bad) and cs jl adc (bad) dec ds out inc push test test insl je pop les (bad) and inc jns jg xlat xor or fmull rorb sbb xor out push add ds (bad) in fs jne shr sub inc dec mov pop ret popf ficoml in push mov insb sub (bad) dec xchg push inc xor popf sbb (bad) jns sahf push cwtl ficompl sub mov and outsb sbb pop (bad) (bad) into insb jnp xchg dec or or mov xchg sarl push subb mov fwait pop imul jns add fildll ja sub dec lea dec ja in mov xchg xor andb dec ret jae std pop (bad) sub aas push enter mov add sub in jle inc jp cmp int3 popf and loope sbb mov nop sub xor enter test lods inc pop dec pop cmp dec enter movsl jbe mov push ljmp jb dec lahf dec mov cmp dec adc repz stc outsl (bad) test nop sarb pop push cmc cmp sub add xor cmp add orb pop cwtl leave mov jecxz cmp and pop fs ja sti iret imul shll in cmpsb jp mov cs mov rcr cmp adcl int3 addl ror in fwait mov fwait lock lds aaa inc mov std push xlat xor (bad) push or js popa sbb ret and jae and ds add dec (bad) in xor cltd sbb cmpsb pusha or loopne lret pop pop cmp pop dec hlt mov int3 adc cmp push gs das and add fwait stos add outsb lods (bad) lods pop push in fiaddl push adc test mov popa aas sbb push add jge xchg pop jmp sahf adc mov sarl outsb js xchg jns (bad) mov add pop (bad) xlat xchg les out inc in fnstenv xchg mov rcl cmpsb jge cld mov enter or aaa push cs cmp add push faddl mov dec push shlb mov scas pop scas jmp pop pushf mov mov mov mov test push cmpsl or jns mov out dec jp push push xor adc sub in cmp daa movsl push in inc mov mov xchg adc push int insl mov popa pop test scas insl lahf lret adc clc or sub mov ljmp clc xchg dec push inc (bad) aad lcall loop (bad) mov pop lods iret jle push inc jle mov mov out aas stos and cltd xor icebp popf sbbl outsb inc out aam stos xchg xchg inc jo fist xlat jns mov mov cltd add idivl test clc cmpsb dec xor mov stos jb push inc popa jno lcall test sbb jb push xchg inc fsubs mov rcrl cld or add inc or and mov mov sub ret (bad) push pop cmp rcl lret jno sub ljmp jmp into cmp cs test xor call or imul sub inc fs mov xchg pop mov into test inc cmpsl pop cld cmp adc div fidivr loope dec in pop or pushf fdivrl mov cmp mov push (bad) push arpl adc push jg pop cmpl inc ljmp dec or push notl aas mov scas xchg or frstor iret cmpsb cmpsb push push les divb or stos jmp push mov mov jle xlat cli (bad) dec jecxz lahf mov fistl inc jae pop push mov sbb add or hlt in nop push outsb add daa gs dec cli popf xlat xor rolb xor inc daa out or mov dec xor stos jg jp mov inc lahf sbb gs dec test xchg mov ds mov repz repz ljmp dec mov push push xlat adc jecxz xchg (bad) adc cmp fs mov popf imul popf out inc pop and test movsb std pop mov inc or dec xchg outsb and loopne mov fwait push into fidivrl pop inc or mov dec pop mov push repnz xchg ljmp dec leave ss aas sarb mov dec jne or push lcall cld jp mov ja popf loope cmp mov lcall or dec mov sbb push leave mov mov mov in out mov sub mov lret out cwtl cmp insl (bad) bound or push sub imul push xchg cmp mov inc fs mov pushf fbld dec push mov sbb int3 in sub jmp inc ret lods sbb cmp sub fcoms cmp les addr16 push sbb add pop and rclb jns cmpsb xchg lds jle jbe sub test cmp pushl or mov out pop push je sub xor shrl outsb ljmp stos mov sti dec jl loop movsb daa jge xor jns sub and mov cltd movsl cmp negl push shrl fidivrl dec xchg jg add notb mov daa xchg test jle into sub leave (bad) pop sti int push fwait cld xchg roll es subb mov fdivs in arpl mov or adc les mov jnp mov dec mov sub aas into push nop cmpsl mov mov addr16 in sbbb and (bad) jl push inc mov (bad) outsl call and out push cmc loope cs insl ljmp mov adc fs sbb stc fisub push cli aas nop jae and out jmp mov (bad) insl (bad) out dec mov sub mov movsb mov loopne gs nop sbb sbb (bad) mov lea pop or xchg mov mov test inc push push stos leave push add lods and sti iret or xor mov sbb jns cmp mov inc sub (bad) xchg fsubrp sysenter bound add mov (bad) ss push fsub leave loope stos das and jns and xchg xor pop cwtl (bad) int ret cmp mov mov rorb sub ljmp or add mov movsb stos test xor outsl add mov mov test pop jmp dec cwtl fisttp push popa or lret pop stc add roll subl mov lcall add pop mov out test mov ja add ss (bad) fs das xchg cmp mov cmpsl in lds hlt jmp mov movsl jno dec int3 pop mov xor repnz pop and dec (bad) adc clc adc stos cltd sahf pop out cmpsb xor dec and or inc mov mov xor xor fisubr rclb aam xor or shll rolb inc pop adc jns icebp jg fsubrl xchg sub push dec imul inc lods scas enter pushf fist cs test push cltd mov bound lods data16 pushf dec pop (bad) mov mov in jmp sub add sbb flds mov iret or fdivl mov or or jbe test sti cmp push stc cmp leave jo js fs in (bad) inc leave xor mov xchg rcrb xor mov cmpsb push xor (bad) aaa hlt mulb add int lea pop dec jne clc lods test jo shrl popf fsubl xor jle xchg mov xchg ret mov add js inc jmp dec cmp fisub push lret mov mov in push dec xchg cld das shrb inc mov test pop inc add insl cmpsl or push xchg iret add cmp mov pusha imul mov cld loope cmp movsb push push addr16 cld inc xchg mov scas (bad) jl lods jp mov ss sti push cltd dec dec rolb adc and lcall out xchg fwait mov add lods clc iret out stos mov stos mov sbb jmp das add out movsb adcl pop sti adc mov mov popa std jp jns xcrypt-ofb cmpsl stos jb jmp xor xchg or mov adc jb sub jnp push cli lea pop ja jl pop jge cmp fcmovu popl pop jne mov cmp mov dec jmp enter pop push push fucom pushf pop sti or mov bound stos pop push jbe pop lea arpl dec aas call dec fldl lahf enter adc sbb pop inc mov push andl (bad) mov rorl sub or dec jb push adc (bad) push dec mov mov mov je xchg icebp jo iret lds push fs jbe xchg xchg push enter jp ss enter sti fmulp popf add enter sahf enter mov pop mov negl shrb push movsb mov mov xchg jbe je cmc (bad) inc std es pop sbb mov xchg cmp adc pop arpl aam jmp xchg test or and dec mov or incb test mov cltd cmp cmp cmpb pop xor jbe rolb iret fdivrs xor inc push cli add loop mov sub xchg mov push pop int3 pop and test push cmc inc mov (bad) divb mov ror (bad) repnz lcall outsb fstl cwtl fs mov xorb pop dec inc and int3 lret and fimul (bad) mov aad xchg mov insl add xlat and arpl call in roll out dec mov movsb mov jge or je or inc repnz xchg and mov fstl cmpl cwtl inc call insb ret inc push sub jbe gs (bad) pop movsb std cli sbb push js mov repz (bad) add mov cld mov into fisubrl and inc out push adc in sbb addr16 sbbb mov add xchg add mov pushf mov mov jle repnz push and sti fildl addl jb cmp push sub imul and mov ret loope lret scas addr16 push int xchg arpl pop mov dec (bad) cmp insl dec push or pop xchg (bad) and sbb fnop pop push and mov pop xlat faddl push das push jns mov mov stc out adc lcall push inc rclb push jg ss push lret das test adc dec inc and sub sti adc push pop push sub leave popf insb cmp test out xlat xchg mov stc (bad) and fldcw jg js or popf movsb (bad) mov mov inc and and movsl das push push xchg (bad) and add in fwait push mov shrb scas mov adc jno xlat dec iret popa mov in insl jnp faddl int mov fs inc nop adc and xchg insl sub (bad) jb insl mov rcll in sub and mov jae sbb lods push mov xchg jae mov dec sub lea stc scas (bad) fnstsw clc mov inc je cmp int adc mov adc daa (bad) aaa pop mov push sbb fcomps fimull add mov stos or push repnz pushf loopne in pushf mov pusha (bad) (bad) mov orl (bad) mull mov in mov xorl push popl int in insl cmp cmp cmp pop and jg jns mov mov mov mov inc stos jns jb jge aaa jb sub inc lcall data16 jae push rorl test cmpsl test lret inc dec mov jl insl cmp popf cmp and bound stos aaa push jl push xor jbe inc fnsave inc xchg jmp mov mov sbb int dec fsubl and ret aaa cmp sbb imul popf das out mov mov mov pop mov lcall in fdivs mov xchg insb je cmp and mov fidivrl imull lahf dec push inc dec jo leave popaw inc and test in inc (bad) push iret ret dec cmpsb cltd int3 mov movsl (bad) div inc inc mov pushf cltd out dec sbb les in jge jge xchg daa call movsb outsl pusha mov push mov mov and movsb pop stos movsb shll pusha pop lahf outsl dec lea push sbb inc xchg pop int out repnz fldcw ljmp (bad) inc scas insb mov cmp mov insl push cmp repz into jecxz jno jecxz mov rol xchg fwait insl cltd mov push shrl jbe aam jg into and mov popa and inc sbb data16 mov dec aam aam inc jge inc cmpsl repz mov or (bad) rorb mov jo stos jle xor (bad) jo rorb lea push (bad) repnz cmpsl out nop mov push cli loop xor xor mov out adc xor add aam xchg dec pusha data16 fldl decl ret iret cmpb mov inc sahf mov jge out adc pop call and rcll imul push iret adc mov fbstp mov out pop out pop cmc jecxz jbe pusha push mov and in sahf sahf jle je sbb loop pop inc into mov inc sbb dec cmp rorb mov test fucom and stos repnz sub push inc fnstsw add add sub adc icebp jmp xor mov jg or xchg pop (bad) call outsb lds popa jae addr16 xchg push jecxz rcrb jl mov stos rorl add (bad) push sti cmp insb pushf pusha lock lret repz scas aad pop adc xchg add inc ds mov jae inc pop push or push add sub pop insl scas orb sub std pop lcall sbb addr16 xchg aad xor das mov lock out mov or jo or test popl lea and out mov call pop pusha jo fsts ss push es ljmp scas lds xchg cld inc aad mov loopw sar or into icebp imul inc inc jnp,pn daa test lods mov fiaddl jno add jne sub mov test es les pop push in addb sub dec mov or and shr push inc inc and pop cmp push pop je mov out (bad) dec sahf add mov movsb out movl xor add mov mov ja ss adc data16 (bad) jae ret or nop and or in or imul in lret dec push lods fcmovb aaa adc or mov cmp xchg sbb bsf jg or sub mov inc jno xchg cmc scas cmp push jnp cmc add jno test sbb mov pop je cmp mov insl push dec inc sahf jbe bound mov jge dec (bad) repz fisttpl addr16 repz in adc rcl fstpl popfw xorb inc data16 cmc mov xor jl test pushf adc cmpsb or xchg cmp pop scas sub push adc out pop xchg divb negl cli mov jmp sub mov mov inc xor mov stc jb (bad) pop jg ss push cltd pushf lcall data16 push jmp mov vphaddubw ds fsubr aam ljmp mov inc jbe (bad) pop mov js repz mov sbb imul fisttp inc xor sub popa punpckhdq mov mov loope dec ja adc mov popf mov (bad) and mov js aam xchg mov jmp ljmp call jb xchg sbb cmpsb gs jecxz test push imulb inc jae sbb test ja mov lcall imul lcall inc bound cmp fcoml inc aam inc (bad) (bad) incl jmp into jge outsl ret mov lcall sbb xor dec xor stos mov ds mov movsl stc add scas cmp mov faddp push sbb push fstpl sbb mov in aad cmp xor xchg (bad) ds rol push fadds lods add mov imul push aad sub dec push pusha mov inc push ret mov mov inc add lcall push pop cld in push inc out pop cwtl call int3 addr16 lcall mov sub lods cwtl popa cmp dec mov jmp ret pop outsb outsl rclb shrb mov and push xlat mov cli ret and cmp fmull mov stc (bad) lods mov jle sbb imul aad sti sbb adc sub jl sub rcll xchg ds xlat cli and sub cld xchg cmp xor mov adc imul push and aam fsubs divb shrl push shrl xor movsb icebp loop dec pop jno mov stos sub cmp push (bad) jecxz nop iret into sti lods mov xor add sub int3 or jnp mov (bad) int3 and aam push cmp das nop and dec mov insb sbb cmp cltd jle cmp hlt test andb adcb xor mov int cli pop popa in and negb adc jmp add into loop cs rorb mov push stos mov dec sub pop pop insl out aam add out cmp mov popa jb cld sub xor xchg pushl push popa jecxz popf inc out inc or cmp dec sbb lods fild (bad) add jno cmpl cmpsb jb out adc fisub hlt push mov pushf adc push mov stos jmp pop xlat (bad) hlt jg sti cs (bad) xchg lods arpl cmp lahf out aas dec mov xchg jp jns adc mov repz test mov fisttpl stos mov fisub js mov xchg or inc adc sub sbb ret jecxz fadd xor jnp mov jmp sbb call leave insb or xorl mov inc cmpsb sub int3 aas icebp mov leave pushw cmp fdivrs inc inc cmp push push cmp js mov cwtl mov add cltd in aaa je xor and push inc rorl (bad) dec cmpsl pop cmp adc mov inc in mov leave ret adc mov mov xlat mov (bad) jo dec push scas xchg arpl push int into mov rorl dec fmull xchg in adc pop pushf mov roll xchg sti sarl ret push lret push (bad) mov sub jne sub (bad) xor sbb mov sbb jns push int3 pop icebp (bad) ss test fistpl mov mov cltd sub cmp ficoml adc ja push xchg stos sbb cmpsl in popa pop aad mov leave cmpsl ret gs decb jl js add lock outsl addr16 imul push mov cmp in mov inc add adc leave and out fwait mov rol jl imul test sub mov mov leave mov hlt repz sbb ja sar scas xchg les inc add (bad) (bad) jmp ljmp xor icebp and leave push in in int3 lock mov (bad) ljmp pop fcomps rcll nop jge xchg jnp or mov mov cs sub or or xchg stos lret xchg addb lea mov xchg push in cwtl adc mov sti icebp inc negl jb sbb add int sub add mov sub shll int3 jne into jecxz je push mov daa test aad insb jnp inc out jne add popa (bad) rcl in inc jge lods pop lea outsb sbb mov rolb xlat (bad) inc pop jmp mov dec into (bad) sub (bad) fwait xor jecxz orb sub sar add jns stos test xchg ljmp mov mov adc daa dec pop mov inc and add xchg inc gs bound outsl fs scas pushf mov lahf mov inc xchg mov dec mov jecxz fmuls lret repz idivl adc rcrl sub testb int3 movsl or sbb jle cmp in test and aas add xchg addr16 cmpb and in lret repnz inc scas and rorl jb mov jno scas repnz in adc imul push push xor mov pushf jae cmpsl dec mov mov mov and inc sti adc sbbl dec cmp fimul mov ds dec lret (bad) push sub sub mov fstpl mov rolb push cwtl jbe sbb cmp loop fidivl dec inc cmp sbb xchg loop pusha dec lahf ja sti fisubl lahf fisub pusha sub fcmovne xor aaa push (bad) xor fwait mov popl adc lcall insb dec imul dec xchg aam cmc mov scas repnz lods mov ss lcall inc sbb mov adc jg (bad) xor add push cmpsb movsb mov mov std ds iret nop xchg loope repz mov adc sbb jmp rolb test and mov xchg sub popf cmovle fisubl mov rolb popa mulb and push movsb bswap jmp stc out xchg ljmp jg xor gs and xchg cld cmp dec pop mov cmpsl adc icebp sbb rcrl pop jmp nop xor subl js lock out iret jl cs imul pop or adc ret aas (bad) int3 and mov add sahf arpl pusha sarb jne mov jecxz or fisttpl push rol sub jmp mov add dec pop jns in xorb push and fsts jecxz xor sub xorb xchg dec lods adc pop out clc mov jmp mov ret mov jb jle jge out loop xor enter repz fdivr dec cmpsb ficom out jbe push fwait mov clc pop leave lret jb push xchg pushf push mov bound (bad) lcall or std aad (bad) cld adc cmp dec and imul mov inc mov fldt jns scas dec mov insl adc jmp mov mov test sti bound imul fadd push pop addr16 push ret je mov daa xor mov fs cld icebp mov mov mov stc xor jnp cmpsb sub sbb xchg jnp cmpsb pusha inc mov leave adc je jmp lock push test xchg lea add cmp cmp and sub cmp jb bound xlat mov fiadd (bad) movsb scas hlt add popa dec repz jae imul xchg cmpsb insl popf add xchg jns xchg push push sahf fcompl lock (bad) icebp inc fdivrp mov (bad) out add xor mov jno fisttp mov or pop sbb jae rorl sbbl das movsb or pop pop push in adc xor js mov outsl inc pop lcall cmpsb (bad) out lea hlt daa sub pop shll xor push adc fadds outsb pop ljmp jno mov mov int in out sbb (bad) fcoml movsl adc insb adc (bad) gs push push mov test mov xchg fdivr in ret and movsb sbb addr16 test imul sub nop mov movsb subl jmp adc aam popa out push pop inc sub jbe ds test movsl popf push mov testb push xchg adc sub push insl pop inc aas and sub flds push ljmp out rcl clc loopne in add xor inc lods shll sti lcall iret xlat push sbb in push int xchg iret xchg inc adc jle orl sbb or jmp jle sbb sub jmp data16 (bad) and roll xchg das sub ret lock clc xor adc je (bad) int jbe xchg incb and in es sti jae lcall add popf das aam mov ljmp add out xlat test sar icebp cli add daa test xchg scas imul imul adc jae xchg std xchg pop (bad) std lock aam inc push dec push sub fcomip xchg or and jmp jg jne fwait push aaa inc add lcall js sub xchg sub sub fisttpll push pop hlt xor lret adc inc mov (bad) fdivrl rorl scas test lods add mov loop cmc lods dec mov and xchg jle mov loopne dec enter sub aas stos pop xchg stos popa rorl jno sub push add je fnstenv dec movsl mov and inc push dec cmp dec repnz cmp fidivl dec outsb pop lds outsl xchg push gs push xor lea pop xchg xchg pop sub or xor cmp push dec sti mov push flds fsubr stos (bad) loope jmp loope bound mov fwait stos push mov xor cmp pusha jns mov lret lea fidivrl in ret mov xchg dec push mov scas mov enter sahf movsb xchg ss pop imul adc xlat iret or out pop in rcrl xor (bad) (bad) xor add cmc les movb in jae ljmp insl lds dec mov adc cli mov dec and pop mulb lods ret call jle mov addl pop enter sub stc mov xchg and xchg ret mov sahf aaa mov lds xor sub je and dec sub mov inc out add enter xchg adc inc andb lahf fistpll or sbb adc bound jmp mov stos or loopne cwtl loope (bad) mov push imul inc mov out xchg sbb sub das inc xchg aam inc push fidiv cmpsb or scas popf mov ljmp cmp pop push popf (bad) mov pushf fnclex in (bad) fstpl push add stc in mov push cmpsl add in popf rolb xor jns (bad) out cwtl (bad) inc add in cmp add les movsl aas lret jg divb add push dec push sahf out psubb pop leave out and addr16 cltd insl cmp lcall add adc inc js inc inc mov fwait cmp adc or iret xor push sahf push fisttpl jb imul movsb xchg add in call lcall clc and out in push mov repnz sti sub sub fcoml arpl std sbb add lcall pop test pusha adc mov in loopne sets mov dec and inc cmp cmpsl lahf inc setb mov xchg cli js std fld mov pop int lods mov call xchg in cltd mov dec ss mov leave shlb ss pop mov insl push mov or mov pop push lock inc adc (bad) out adc xchg stc xor movsl adc adc lods push jl sub sahf mov jecxz dec pop add lcall pop sbb fs div jo jmp xchg mov imul iret repz sbb es das inc aad sub lahf adc scas outsl cmc add test lret fsubrp outsl xchg mov nop dec leave jne sub jle xor lret icebp std pop sbb cltd push and fild xor xlat add push lock sub jg mov outsb inc add jecxz add mov jae pop sti jle repnz adc pusha xchg mov jno mov into fcomps jae out xorl call cmpb rcl aam or mov movd inc shll bound xchg loopne xchg (bad) aad jno ljmp (bad) idivl fwait sahf jmp sarl pop aam (bad) enter lret pop push decl jb cmc insl xor int3 mov push arpl data16 test jo in dec pop sub jno add movsb stc insb add cwtl cmp pop dec dec mov clc push pop movsb ret (bad) jmp aas inc test in push bnd leave (bad) test pop mov jge push dec sbb bnd jae dec scas inc dec xchg pusha mov sub mov inc out js mov je lea push and sbb dec ss sub mov popf xor jno test ljmp and ds rcrl movsl cmp mov add insb ja je jecxz push and int3 outsb movsb cltd pop sub icebp test jb xor aaa (bad) repz mov aad pusha add icebp jno mov pushf fsubl xor cmp and push add adc aaa sub hlt dec movsl adc push jge scas (bad) jl dec push loop decb mov mov add xchg fdivs inc into xlat scas (bad) push jb push sub and xchg out jns mov test out test rclb mov outsl bound mov (bad) mov mov adc xchg lea sbb lods ret aad out mov jmp mov push adc out mov add addr16 clc dec in int3 jmp xor cwtl or pop (bad) jae cmp or pop cmp test adc adc js cltd xchg outsb in mov add mov xchg pop out pusha out cmp nop incb aas (bad) das popf (bad) lock sub mov xor cmp xorl adc icebp in dec lahf jb mov fnop add je dec jno popf outsb aaa pop dec add or mov cltd (bad) bound sbb jo adc cmp enter xchg push and cmp push mov (bad) mov loope das jecxz lds add pop dec (bad) jbe and lds adc js loope aaa ljmp pop std sbb jmp addr16 int3 pmullw jecxz lcall mov pop loop arpl pop into outsl aad les (bad) xor cmc xchg mov xchg out idivb (bad) push lds mov cli cmp and add or cmp inc and fnop add test pop lahf test rorb inc xchg xchg cmp lock sbb push test rorb sub mov pop mov lret jb or outsl mov aas mov inc icebp lods mov loop lock icebp sub popf push and rcr sub sub push (bad) (bad) pop imul jle add ja push cmp test adc std mov pop pop xor or jae adc (bad) or jmp jb lods outsb push dec (bad) loopne stos mov adc xchg mov jae popa popf jg test push hlt mov cmp pop nop sub lret jae adc fildl out mov adc inc cmpsl mov xlat xchg data16 (bad) nopl or (bad) aam jg add jns dec icebp jns sbb test movsl (bad) (bad) das cmpsb xchg test gs (bad) aaa push pop out mov cmc mov sbb mov xchg cmp sbb loopne sub fnop cmp fwait push jo ds mov xor lcall std adc imul cmp bound inc push (bad) mov dec leave popa cs jbe sub lock jne testb jmp jl rclb movsl sub int3 jle cmp loopne cmp out std rorl stc ret or cmp cmp hlt adc gs stc (bad) call repz mov push enterw xchg adc inc (bad) (bad) cmc shl ds pinsrw mov aas sbb (bad) sub and jnp sbb mov das xor outsb mov dec ret lods push or pop fimull sbb popa out xchg dec lahf pop fdivr (bad) pop xorl sub daa sbb lds xchg cmp dec in je test imul out mov sbb mov inc insb out push xchg leave push out and fisubrl (bad) pop xchg cwtl xor fcomi cwtl sti lds pop add mov inc rcrl fcomps jo popa gs icebp dec rep enter push test mov mov (bad) push mov xchg gs out inc cmc addl inc ds into shrd cltd jmp roll (bad) movd clc inc jnp addr16 imul insl popf mov negb xchg repnz sub xchg dec sub xor jbe cmc and stos push dec popf pop push lahf lock icebp push cmp cltd out mov movsl test and outsl xlat imul insl add iret mov ror fbld clc and inc arpl xchg outsl jecxz or mov cwtl cmp jmp clc (bad) loope mov add loopne (bad) mov xchg cmp mov fwait xchg test fst repz ss dec or lahf outsl leave cwtl xchg inc sahf les jno iret push data16 pop mov pop fsubrl cmc je dec out sti rcll add aam imul xchg push movsl aad mov add mov cmp push inc outsb jb inc cmp mov sbb sub xchg xor cli inc insl movsl icebp mov addw cmp je xor ljmp call int3 mov mov fcmovnbe adc sub xchg mov shlb adc pop stos adc and xor pop jmp subl pop fnsave adc idivb sub xchg fmul aam dec jne movsl fwait inc mov lret add fdivrp or test dec fsubl xchg insl sbb mov shrb jno add jae push pop lret daa in jl (bad) sbb push mov mov loope sahf popf cmp cmp push xchg dec cmp mov dec arpl sub lahf call stos addr16 jmp retw and mov int3 iret or mov ja lods and repnz sub mov xlat lock lret jbe inc in push pushf inc ds popf adc in ss pushf ds mov xchg in out and imul mov test mov add jns and push in pop xchg mov flds xchg inc ret push sub inc add js lds icebp pusha cmpsb xchg or inc adc jmp mov sbb fs rcrb int3 and jg repnz sub mov jb jae pop push and mov xchg outsb in lods (bad) mov adc sbb mov cmpsl insl pop inc and lea dec adc (bad) mov sbb iret sub and lods mov and movsl jmp xchg inc lods (bad) jno fcmovnu scas icebp sub dec mov jge inc mov imul fistpl fnstcw mov das xchg push push inc dec rclb ret xor loopne jg dec jmp scas sbb mov and adc aaa jmp pop insb orb aam jecxz mov or jle pop in mov mov je lahf or dec imul (bad) push xchg sahf mov out imul add lods pusha (bad) in push lods data16 pop push sub out push inc repz cwtl cld imul (bad) int3 ljmp push lds and dec bound dec xor lods ret jo repnz test xchg orl in jle xor inc pop inc sub add movsl add add mov sahf jl fist and jnp mov fwait cmc fiadd xor mov or dec test xchg dec xor sub mov (bad) mov adc jae mov sbb sub xchg call test movsl mov pushf fs pop xor ja xor xchg inc lahf cmp pop in movsb push adc ret sti imul xchg xchg bound or pop imul jns xchg scas imul mov xchg mov hlt adc push push inc or or cli xchg xchg icebp outsl inc add adc fwait lret stos pop mov rol into add leave mov sbb fcoms xorl out sub xchg mov inc pop frstor sbb scas mov xchg outsl lcall btc jbe mov aad mov xchg or repnz ljmp push dec xor dec loop fdivr push (bad) ljmp or (bad) (bad) mov add inc mov mov sub mov ffreep or mov cli inc clc (bad) mov sbb mov leave ficompl pushf mov dec outsb dec jne add fs pop (bad) std jp cli int add dec js fcoms and dec xchg push push cli clc je clc xchg or sbb test (bad) lock shlb in pop lret dec das aas dec push sbb jnp scas js pop push and pop cmp push fnstcw rcrl fildll scas or jmp push mov pop xor lret or in dec inc icebp and mov push sahf test gs mov cwtl dec out sub sub inc insb adc pop mov mov and jge (bad) loop pop mov addr16 or (bad) gs rol popf ds leave das out push pop inc iret hlt or mov sbb cmpsl insl into push hlt xchg cmp imul (bad) xor or movsl adc cmp cmpsb add insl jnp cmpsb out negb out inc xor sbb pop scas pusha or lcall negb or mov xor mov push xchg (bad) loopne loop repnz loope sbbl pop notl lret lret inc cltd sahf pop sub xchg add js (bad) mov fisubr mov push (bad) push and add inc jl in push (bad) push repz and cmp arpl test test enter stos cltd mov sub testb dec inc fmuls (bad) or mov xchg xchg sbb xchg cmc aaa movsb push jp pop cltd add es in dec sti lcall fildl jecxz or pop mov mov movsb jbe fisttpl push inc add fnstenv or pop imul loopne cmp ficom (bad) bound loope bnd cmc andl push cmp testb (bad) iret (bad) (bad) pusha fs xlat notl adc add lods sub jg cltd mov daa call push js mov sbb mov mov and punpcklbw cs (bad) cltd addr16 lret push xchg dec push mov fisubl in mov dec das xor sub aad push jmp in xchg and nop out dec sub push les repz pop test push dec dec and mov sub jg lock sub and lods roll cld fsubs ljmp and mov fidivl aaa (bad) call or push push addr16 sub cwtl (bad) test (bad) loop cs ret cwtl aaa test inc les gs lds mov rolb and ss clc out and or stos lahf scas inc cltd adc cld mov pop and mov and jp stos data16 or das (bad) push mov stos (bad) fistpl pop mov sbb test mov or inc mov dec mov (bad) fldl jbe mov mov mov lods inc out daa test mov add fnstsw outsb and outsl (bad) sub xchg add fadds insb or outsb mov cmp inc push rolb sub mov icebp (bad) ljmp (bad) xor cmc sub out lret ret cld mov cmp add notl xchg xchg fdivl mov outsb inc lods mov mov pop inc enter mov jg lods inc cmp mulb xchg dec cmp loopne addr16 (bad) jbe push (bad) nop out imul ret hlt mov sub jno aad out xchg nop mulb (bad) push push faddl xor rcr sti out lea inc xchg and out dec jne nop in xchg xchg adc push cmpsl inc lock int3 xchg xor mov (bad) aam mov nop xlat mov shrl xchg jns mov sahf add sub adc mov out mov dec inc xor pop pop dec clc mov je stos cmp (bad) mov mov and jmp xchg mov push adc add jae stos mov jnp cmp jmp movl es cld test cmc cltd pop test jae sub and scas cmp movsl pusha lret adcl xchg jmp add cltd push fwait adc jp test scas fs and xchg bound mov xor imul inc mov cmp lods mov cli and add and adc push out cmc mov mov cmp pop xchg cwtl ljmp stos cmp jle cmc xor loope loop push stos cmp lahf push mov call xchg call pushf pop cmpsb pop cmpl dec dec (bad) stos jle (bad) lahf mov les daa inc int in inc xchg (bad) cmp stos sub dec or fadds pop cmp pop fistp scas fildll idivl jmp cmc xchg addb insb add mov mov pop rcll push xor (bad) mov sub pop jl pop icebp stos cs nop adc cmp (bad) fwait in jbe inc pop xchg push mov in fcoml dec mov jecxz stos mov lcall xchg cmc lret std test ja pusha iret das fdivrs and push mov cmp sbb dec pop jl pop out sub adc test outsb test bound out outsl jg lods jbe dec adc jmp imul inc ret sbb mov mov js push or aad adc push jbe dec testb nop or jnp mov jae and stc and mov xlat mov outsb ljmp adc lock jb loop xor sahf jecxz aad (bad) jecxz push xchg ficomp cmp icebp sahf or out pop mov incl int fcompl sub mov lret or rorl imul bound loop or jl flds push hlt sub jb xchg pop outsl push mov loopne loop ffreep addr16 out pop adc test into imul and pop aas ja in adc cmpsb push nop loop dec lcall in jbe inc (bad) jo pop repz jae push lcall xchg jo inc outsb subb (bad) and pop adc aaa sbb sti adc or push xorb pop dec ror orb and call push into fisubrl aam (bad) adc aas xchg mov das int xchg je push fwait loop push insb lcall push and fisttpll inc aam or (bad) clc inc (bad) outsl (bad) fcomp xor xchg cmpsb cld lock int3 cmc pop in (bad) fldt jl (bad) int3 jnp adc cwtl mov sbb lock repnz ret movsb mov dec inc pop and add sbb in ds add jl (bad) xchg lods pop in idivb and lret inc jle pop pop or aaa ret (bad) adc stos mov pop xchg test mov xchg or lds push stc enter push jae or cmc or mov adc xor (bad) loopne pushw gs cmp std data16 push in lret sub push mov arpl push xor jae adc imul sahf scas rorb pop add and int3 ret pop sub pop es cmpsl aas sub int3 inc cmp mov cwtl jne (bad) jns jns push and push cmp mov push aam daa or adc jb in pusha xchg mov xor mov test mov jns,pn daa in int pop movsl add pop push adc xchg sbb mov hlt (bad) jb jo mov ljmp repnz in and test lock push stc ja push pushf inc into dec sub sbb stos in xlat lret or pop push sub in push mov sbb enter aam shrb sub xlat inc (bad) mov cmp outsl sti cli cmp insb pop pop sbb inc arpl xchg insb sbb xchg add sbb lea into mov gs repnz outsb add iret xchg ret jo inc jo add xchg adc cmpsl sbb mov (bad) jb push push rorb and push mov sub dec jb,pt lock dec jne push outsl dec inc sbb ret add push and inc mulb fsubl mov das loope subl jl js ret pop xchg push andl push xchg nop insb jnp add imul dec and xor loop mov ja call or and or cmp push xchg dec test and dec pusha xchg inc mov cmp (bad) and sbb int iret inc or lahf rolb inc sbb dec lahf sub iret aam jecxz call cs push test (bad) adc arpl aam testl out xor out lret shll aas out dec adc mov mov jl and cmp loope cli mov (bad) pop push adc cs pop jae xor adc lock jnp inc (bad) ljmp sahf push xor rcr sbb push xlat pop adc imul jns lock dec pop dec icebp dec dec jmp iret push fist jmp cltd or idiv mov cmc fdivrs dec inc mov jno das lods imul push pop clc aam push cmc xlat outsl adc out movsb fidivl cmc push add bound sbb pop xchg lcall mov leave xor (bad) cmp and je jo mov in jb cltd std movsw and jmp mov iret mov jl lahf mov xor std jmp cmpsl sub (bad) sbb fisubl imul dec (bad) mov int pop mov mov ja cmp mov ljmp cmpsb pop shll sub xchg scas push push fwait or ret repz sbb cmpsl mov pmullw les movsl dec scas xor inc scas fisubrl sbb dec mov leave adc jg adc into inc sbb fsubrp xchg and stc out loope mov dec or ds int (bad) inc mov xchg dec add and movsl inc adc popf cmpsl mov pop lret testb and out fsubp test ret test push adc or push add jg into fild int3 xchg mov pop shlb cmc ss ret jl pop mov adc inc orl xchg mov lret push ja sbbl push mov jae nop (bad) cld push shlb mov scas (bad) mov cmp or lods push (bad) mov pusha outsl out inc cld int3 add mov mov out mov or test mov stc fs cltd cltd sbb push shrb or jbe enter xor mov movsl mov test mov pop mov and adc lock stos cld dec add inc lea jp xchg movsb and or mov add (bad) sti and mov mov mov cmc adc and subb mov ljmp inc arpl mov push pushf jp xor cmpsl cli lods pusha (bad) push jbe ret jbe inc inc mov push mov fnop and aas into adc dec cmp pop lret cmp arpl sbb mov je gs pop inc pop in xor (bad) sbb das push pop nop ffree mov out (bad) push pop push outsl loope or outsb fist sub mov dec test sti ret pop xor add inc inc pop or fidivl (bad) rcrb mov fwait add movsl jb xchg push and fbstp mov jp sbb fwait pop sarl or jae jmp repnz mov adc in test sti lods cmp out in inc adc imulb cmp jge jp push push xor sahf fs lods dec (bad) cwtl xorl push leave sarb and lret lods aad in adc test sbb pop inc xchg pushf cmp sarb scas push xor call jge mov sarb or js test sub or mov (bad) hlt stc push fstl pop adcb mov mov xchg push addr16 or jecxz pop cwtl imul add out test cmc ficompl inc xchg fmuls sbb insb aas push xor stc arpl mov lock out sbb imull cmp jno je xor push fldenv cmc lods cmpsb pop hlt call icebp (bad) icebp mov jg stc dec mov xchg push or test mov sbb add jb dec xor jo sub loope xchg push mov (bad) or fisttp xor lock cmp and arpl insl repnz test mov sub mov xchg ret cltd mov std aad repz adc inc push dec ja mov jae mov gs (bad) fisttp dec sub cmp adc push data16 or pop cmc xchg dec loopne pop xchg jp (bad) lret push lods test lahf pushf mov (bad) xor mov and xor pop inc cltd stc sbb (bad) mov aas pop in dec imul (bad) ret (bad) sub js les xor dec pop (bad) fnsave rcll cli mov xchg lcall neg push mov pop add iret push cwtl loop stos adc mov add stos cmpsl or imul mov imul nop sbb and mov shl xor fcmovnbe (bad) pop xchg or jmp outsb lcall sub ds fistpl sti rcr in and cmp lret dec stos cli lahf or mov das jnp sub mov fsubrl push mov test aaa sub dec lods mov pop push mov rorb and (bad) inc popa push mov xchg pop loop sbb aaa cmpsl push sbb sub adc (bad) xor in mov psllq or lea jecxz cltd push aas inc push pop jge sub sahf insl pop push aaa mov sbb mov (bad) mov femms pop xor js gs fdivp mov sbb adc loopne jle je sar insb roll xor and mov jb mov repnz es jbe cmp push mov imul and xchg pushf divl push aad (bad) pushf fwait push pop or dec arpl popa in mov xlat in xor xchg aam rcrb call pop cmp mov sub sti pop dec lds aaa xor cmp adc dec jnp outsb pop (bad) jbe jne cmc cmp pop pop mov sub cmp dec fimull inc (bad) lret leave (bad) rolb xor pop stos aaa dec dec adc imul add sbb lea loop xchg dec mov cmp or loope sub fdivrs sub xchg xchg icebp jg inc inc inc rcrb stc insb in in push push testl and andps jbe mov jmp pop dec int3 dec jb inc mov pop xchg add cwtl in das daa outsb out push sti push (bad) jg cmp popf pop xor sub cld repnz daa popa cmpsl xor sub repnz mov out fstps ja lock shl fiaddl sti cmp push sub in aam cmpl nop mov lret ja popa add sarb xor push popf popf dec sahf pusha int3 inc mov push mov pop pop mov lahf cli aas rol scas mov cmp xchg rolb xor sbb or lcall test cwtl fisubr ds cmp orl inc cmpl push aaa imul bound jge cmp lea adc roll add cmp in cmp inc add push cmpsb lock aam bound outsl and in nop jmp lret xchg push jmp int mov inc ficom test inc sub and xor aaa adc outsl fs push int3 ret fs dec shrb arpl mov repz test pop pop mov scas pop sub and clc data16 daa std sub test loop icebp lods mov and cmpsb adcb jp and aas loop xlat xchg mov clc ss imulb push and pop mov xlat jbe (bad) les fistp add pop aad push mov sub push push pop adc xor mov repz fsts inc cs stos scas lcall ljmp adc outsb jo mov cltd cmp imul mov leave and cmp add xchg cmpsb push jne mov xchg scas aas stos push shrb inc mov push xor dec sub cmpsl stos xchg xlat adc cmp out fisub loope or xor adc add mov lock inc and lock rcrl add mov cmp push push sarb push call dec addr16 cmp xchg mov iret ljmp push movsl mov mov shrb es xlat enter sbb dec inc lret loope pop js out dec cmp push (bad) jne imul jp arpl add push add out stos inc adc push push cmpsl mov jbe push dec iret cmp push xchg push in ret dec rcr add push and loop inc leave jae scas jp aaa pop xor pusha mov jbe icebp pop pop inc fisttpll xchg jae popf add (bad) daa jg push jnp jmp mov enter mov mov stos pop (bad) mov hlt ret sbb sub sbb mov jne repz leave cltd jbe mov add mov inc rcrb call scas call outsb fdivrp push imul (bad) mov movsl cmp addl popa mov (bad) dec add inc mov or out rcrl movsb xchg arpl fs imul insl sbb cmp and aad in jge xor xlat sub dec add cmc andl lret jmp inc inc xchg push push fistpl sbb aas lcall insl daa mov pop mov or addr16 in ret adc xchg lds or rol imul mov fsubs jg mov idiv mov lods push rcr pop shrl and pop add pop shl sub xor add jl dec in dec stc mov jb dec push fistp mov pusha (bad) outsl int3 mov xchg sub pop mov out sbb into push push stos (bad) std out ljmp cmpsb or xchg mov and jge inc jns aad add push in leave orb jmp mov les leave push loopne jbe mov push in adc lods and push cmove das shll jle in movsb aas mov cmpsl push xchg add sub outsl push dec dec pop adc mov enter outsl dec mov je jg xor mov subb out (bad) aad dec push es ret pop jge fcoms cmp adc pop push mov cmp in ja ror shll stc push shlb outsb sbb cmp and sub sbb xchg lret xor mov icebp sbb fiaddl (bad) rcrb cld inc loopne fisubl rcr xchg mov jecxz les ret and xchg adc xor pop (bad) mov (bad) xchg cmp (bad) sub jge std scas pop add cmp flds jmp das repnz mov dec push bound mov movsl fidivl out pushf std aam push and rolb iret inc insl jecxz clc jl (bad) sbbl mov repnz ja bound pop dec inc mov sbb xlat push gs add jae loop push pop ljmp push fwait movsb sbb xor fs cld and jno jle xchg mov push je or mov pusha jns or je popa dec sub test sbb gs xchg xchg cwtl fldcw (bad) xchg pop sub call movhlps mov jno mov jo movl cmp in pop sub repz clc cld inc push dec push decb fisttp push and rorl pop inc jb (bad) add cmp mov ss mov cltd inc cmp pusha cmpl sbb push xchg adc cltd js test addr16 mov mov nop sub out test xor out insb outsb dec mov push dec or mov aad stos (bad) jb pushf jbe shll psubusb xlat int add add pop mov or jl ja cmp fcmovne scas inc xor and lds cmp or jmp sti jb or fucomi popa rcrb pushf mov xchg and sahf add mov lods push jg (bad) in fs mov and arpl add xor (bad) jle cmp loopne (bad) mov rclb out mov sbb add xchg bound inc pop sub nop pop iret enter cmpsl enter mov (bad) (bad) lea stos mov dec int3 inc hlt and popf add jecxz and sbb fwait and inc and push adc or sti dec out test xchg test mov pushf sbb push pop xchg inc stos sub adc icebp add (bad) out dec sbb sub mov jae leave mov adc sbb test orl fs add cmp mov jbe stos js cli out or js pop sub inc xchg xchg sahf out mov pusha es xchg fnstcw xor (bad) cmp fisub loope mov out ss fiaddl bound hlt adc xchg adc pop dec dec pop in std dec mov (bad) jne mov cmpsl push add and out sbb xchg repnz cmp sahf cmp add es mov incl cmp test add nop jb sbb xchg shr mov cmp jg loope fisubrl or test inc popa sarl lahf stos clc xchg and inc cmp push pop and in jg shll popf and adc ds inc fstpl sbb mov hlt or mov mov xchg dec mov fidivr cmp push add (bad) mov int scas or mov loope xor cmc pop push sub jmp pop jns (bad) push addr16 iret addr16 fdivrs inc push jl and lock into mov xchg jo push stos jle xchg lods push adc pop stc adc adc rclb ds lcall pop push cmp jb mov or and fldl fwait and cmp mov (bad) cmp jb jmp mov xchg lods nop (bad) jne inc dec sbb add push outsb xchg xlat in push out cwtl pop dec push das sub hlt xor and sbb stos test mov sbb pop mov cmp insl jne hlt insb adc int loop fpatan sub fs pop inc imul leave add mov add loope cld stos loop push inc data16 mov ret mov xor cwtl sub (bad) dec mov aad out dec cmp loop int3 mov jle pop out inc jae xchg dec and out repnz lea xchg gs push cmp mov jae adc push and imul jle (bad) fisubr jecxz stos mov cmpsl out popa fmull out mov addr16 inc pop rcrl cmp or test push add ja cmpsl mov fisubr into pushf mov ret je,pn add lret stos xor in (bad) lods dec sbb popf mov xorb mov cmp mov mov ss iret adc outsb add xor scas (bad) sub push faddp push test mov (bad) scas (bad) popl (bad) into jo pop jecxz outsl pop jb in dec leave pusha (bad) jecxz fisubr scas dec insb sub iret in jb sub xchg adc in xor adc int3 push (bad) mov leave push pop stos outsb test pop cmpsl pop pop pushf jb aaa scas mov mov nop dec fisub mov leave enter mov xchg pop adc push test inc push arpl cmpsb sti mov (bad) rcll cld sbb mov xchg dec test pop bound (bad) xchg lcall xor jne loope and imul xor inc mov insl dec stos jle push push inc xor sbb cmpsl jbe adc sub cmp mov inc cmp rorb mov mov add negl shrl push inc push xchg pop jmp stc push jecxz cmpsl sarl add inc pop lahf mov mov insl cmp je cltd xchg aad cmpb cmpsl xor inc sti and outsb xchg mov pop fs leave hlt cmp lret lods pop push or pop aam inc repz repnz and push push xchg leave movsb sub sub dec lds inc popf into fs dec inc mov xchg int repnz in or xor arpl lods btr mov dec rol mov dec frstor or jbe int3 repz cltd mov xorb fs jecxz jmp std sub pop lods ss jl and mov repz lds aas test xchg xchg jge popf mov dec jmp mov out dec cmp inc cmc lahf mov sub inc push scas fsubrs sbb ljmp cmp inc aas movb inc leave jmp movsb outsb outsl inc outsl stos mov aad inc fdivr dec dec lea dec mov adc mov jne mov repnz out push cmp sbb scas insl sbb into sub out adc rcrl (bad) mov loopne and pop punpcklbw push mov push and cmp push lods int cmp and outsb mov fcmove push aaa xchg inc test xor or mov jge push sbb hlt sti aad sub aas add es out (bad) enter mov test cli out cmp mov mov inc leave sbb pop jg mov jns pusha push inc add cmp mov push sub out sub and push addl pusha mov les pusha loope rcrb sbb int3 sbbl add or xor mov add sub fbstp xorl jmp dec add push divb mov adc inc cwtl ret in xchg mov fidivr mov loope sub mov add sbb push nop repz popa lret push pop mov cld movsl movsl push jns pop cmp and lock pop adc dec repnz cmpsl je dec sarb mov xor xchg jg mov cld lea outsl xchg jmp sub cltd jns mov or add mov sbb sahf inc push scas pop adc (bad) lcall or inc insb sarl gs (bad) outsb fstpl jo movb xchg fwait or xchg lret push aam je lret std pusha movsb dec cmp ret sub retw and mov insb sbb or or pop ljmp xor ljmp (bad) ss xlat cwtl into lret in pop cs test add pop cmp lock mov arpl push xchg inc mov cmp lcall dec sub jl pop sub imul cli push push push mov add ljmp movsl fdivrp into add gs faddl xor pop push inc (bad) adc es addr16 mov jl pop add std adc outsl pop arpl outsb cmp pop inc push mov push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret mov enter and je fdivs lea jmp lea jmp ficomp clc jbe pushf es rolb ds sahf loop sub lock jecxz mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp mov mov je fdivs cld test or bound aaa mov cli mov test cmp dec nop pushf fistp das sub frstor int add scas push jmp vlddqu inc adc mov popa daa xor idivl je repz test loope,pn hlt push mov cmpsl sbb mov jnp or push into xlat aam push fbld dec jge adc fisttpll inc adc adc sbb mov les icebp push mov xchg mov (bad) cli and sub mov lret and enter mov test mov cltd inc xchg pop mov add xchg sub inc daa aaa mov call out jle xchg sub cs dec (bad) xor xlat sbb xchg inc aad movsb cld aam inc jg bound cmpl scas loop push imul mov xchg add stc faddp lods push out movsb popa inc aas jne jnp inc bnd stos mov rcll dec push push shr (bad) popf xchg push push jbe sub add cmp push add scas out pop dec xchg inc pop jle xlat (bad) mov out mov mov mov xchg into pop inc enter or ljmp call rcrl jno in mov cli int3 cmp sahf (bad) inc pop icebp push cmp inc inc mov fildl xchg lock adc jno push cmp stos movsl bound int mov pop inc add xor imul push adcl insl push xor in (bad) cli dec cli stos icebp movsb cs mov call mov lcall mov pop push fisubr fcomip cmp mov jns adc iret mov flds inc xlat pop das repz xor mov inc sti add and lcall stos sub xchg gs mov outsl sbb xchg fmull adc pop mov (bad) in bound ja arpl in add jne (bad) and xchg shll (bad) ficompl sub test addr16 (bad) iret or mov push dec mov cmp cmp jne mov aad icebp inc dec jnp cmpsl inc add gs shrl lea xchg addr16 cmpsb sbb test fsubrs xor sub push push xor xchg aas cmpsl sub nop sub leave push pop (bad) out lahf sub add cmp (bad) sbb daa cmp jbe xor or ret test lock sub add jns pop dec lds ret and cmpsb sub adc mov in push pop int (bad) rorl push sub xchg push add ret push push clc aaa std or stc mov inc cmp aas ss arpl fimull xor jg subl mov scas sub jecxz lret test jne pop pushf push xchg and pop mov xor push dec xchg xchg gs (bad) pop mov mov fimull (bad) and insb repnz fcmovb jne in int call xlat (bad) pop dec lock sbb cli and ja pushf adc nop add inc xor xchg mov ss pop mov mov js cmc addr16 inc aas pop xchg stos adc pushf leave ljmp cmp sbb cltd xchg pop in fldl inc push fiadd sarl sub dec negb gs addr16 or sub cmp aas xchg movsb sahf xlat popf cwtl lods jmp add (bad) cmp mov push scas stos jmp out jns (bad) fist int3 cmp add push mov sub rorl mov adc pushf jg int xchg fnsave fldl mov int3 fmulp pop stos mov xchg xchg xor sub sbb push mov dec cmp push jno into dec je and cmpsb nop aam adc adc movsl mov mov xchg cmpsl (bad) xchg add in adc in and push mov mov or in adc test fs xchg cld subb into fxch arpl adc push out adc adc lods cwtl jo jg lods mov ret sarl fisttp mov movsl mov daa push lahf sub fdivrp out inc and adc mov pop loopne jp jmp insl adc dec xorb (bad) mov arpl rcrl negl ss scas insb jbe mov xchg icebp int das lods mov adc and mov test insb fwait sahf es nop adc or mov push mov aaa pop jecxz cwtl mov frstor lret arpl outsb jecxz into adc xchg mov jmp mov add jmp mov add jmp push mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 cmp out jnp jne cpuid and inc out shl sbb (bad) jle sahf pop pop fs das push in repnz sub adc or jns cmp loope rorb lods adc xchg std dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fcoml sbb out hlt fldenv xor je inc loopne fimull adc cmpsl xchg jno mov test lds jge pop sbb lea cmp ljmp pop pop inc (bad) dec adc fcoms lock cmpsl jp repz clc pop incb pop int3 lcall xlat cmp push mov and daa adc mov popf ror add pop cmp inc test adc int cmp mov mov xchg xor mov xorl pop xchg outsl (bad) jo shr sarb (bad) ljmp rolb pushf pop xchg xor jp aad loopne rcrl pop mov sbb xchg scas push xlat rcll sub jecxz cmp mov (bad) push shlb cmp mov mov dec add push mov test fucomip mov test xchg lods (bad) pop jmp repnz sbb or repnz dec pop shlb xchg (bad) std ss std ss jns adc (bad) inc jg addr16 fistpl jno stos ja cmp mov lcall xlat add scas aaa dec sbb inc push fsts sbb xlat inc xor or xchg cltd inc pop insb mov or jnp addr16 fistp jb lock push insl inc fbld mov leave push inc add shlb cmp push pop cmpsl sub push and call aam xchg (bad) jnp mov jbe fstps xor setne sub dec xor mov mov (bad) (bad) out jnp push (bad) cmp jns (bad) sar add mov mov adc insl mov push xor ja xor pop jno nop adc jb pop push cld xor icebp cmp notb pop test jmp xor inc stos jno nop std (bad) outsb sbb icebp add movsl add std imul rclb (bad) lds or dec stc enter push into pop inc sub mov cmc not sub mov in or mov out pop cmp push adc std fistpl lods and dec push push into aam les sarl inc add xor shrl mov scas xor push enter push and stos cmp cmp dec test sti movsl dec rcrl jns mov mov fs clc loope stos sbb lret cmp nop fisttpl test test rorb test rclb mov imul lds aaa push lret pop sti mulb ret and cmpsb cwtl mov mov je test in xor mov fucomip xor push xchg cmp fistpll shl lods loopne aam pop cmp in loope pop xchg cli xor jg subl cmpsl mov je fwait jle xchg inc mov jno mov sbb mov mov mov xchg movsl or or adc gs rcrl inc add dec xor xor mov jno add or mov popa mov mov fisubr rcl addr16 cmp cltd mov inc mov push xor and adc and ret (bad) aaa mov sbb iret mov das jge iret xchg mov insb aam das jge mov (bad) pop push and stos mov test mov enter cmp scas mov testl and test test iret sub lahf addr16 or daa pop mov inc cmpsl xor ljmp sbb stc lock inc out jae out pop repnz out or inc mov (bad) fisubrl pop enter imul cmp cmpsb dec xchg pop xchg shlb lds xchg xchg call mov sbbl inc inc out mov sub add push mov fsts sbb outsl or cmp ja inc lods cs (bad) cmp adcl jnp idivl xor dec pop xor mov push mov or divl or mov enter push in mov leave jmp mov lods je sbb (bad) in pop mov sbb sub aam ja add ljmp mov aam stc dec bound or outsl push pop rol jg mov dec jno jge js out rcrl lods pop mov les mov das lods mov adc and fdivr (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp fcompl call mov add jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 ficomp clc jbe xor lods adc mov int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 cmp and insl out stos cmp cpuid and lea jmp lea jmp lea jmp lea jmp lea jmp ficomp sti jbe dec aam sub cld (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov int3 xlat adc jecxz ja je out cld test lods rolb fnstcw imul loope xchg lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ficomp sti jbe dec int3 jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp ficomp clc jbe dec (bad) jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp ficomp clc jbe add rcl int3 repnz adc lods mov dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 ficomp clc jbe add rcl clc rep adc gs dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fcoml sub out hlt fldenv cmc lods adc add std dec int3 int3 int3 int3 lea jmp lea jmp mov int3 xlat adc (bad) je fdivs cld test fdivr decl cmp decl fdivr decl fdivr (bad) ficomp clc jbe xor lods adc lods xchg dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret fcompl clc jbe mov push rolb fcompl loop sub lock jecxz out shrl inc loopne call add ret push mov push call add ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 cmp and insl out jnp jne cpuid and mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp mov loop xlat adc stos out cld test sub outsl out mov adc adc int3 int3 int3 int3 int3 mov in xlat adc pushl je out cld test jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp ficomp clc jbe add int3 sarb jmp int3 int3 int3 push mov push call add ret mov loop xlat adc je xchg xor mov pop pop mov jmp ficomp sti jbe add lods adc pop test decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) stc decl (bad) jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp fcoml lret and out hlt fldenv lea in gs shll addr16 push frstor push sti (bad) fisubr repnz dec and fstps mov (bad) cmc rorl xor jnp lods pop push cltd jg mov ret lret lret xor pop add adc mov sahf cmp or push push jae adc mov ror xchg popa test (bad) lea xor mov xchg aaa das addb out sub and ds mov jns and sbb pop mov hlt jb ret mov movsb out and ss outsl xor rcpps fistpll icebp data16 je sbb movsb ss jl int3 cmp (bad) xor dec jnp call push sarl cli outsl and int or dec or popa les jp xor jo jo push sub add xor int cmpsb jns icebp dec hlt push es mov adc cmpsb push cmp std addr16 std jns inc loop nop xlat fsts (bad) mov cmc pop sar jo pushw ret xor in xorl mov dec outsl int std adc imul (bad) inc icebp fs sub sarb and int3 adc jne mov pop clc mov jg jnp addr16 fisttp jle lcall gs push jae sbb sub jg mov icebp lods sbb dec sbb outsl pop xor adc out or xchg dec pop cmp pop inc xchg push mov jnp push pop bound mov adc or inc xchg aam outsb xchg pop test and orl mov jns mulb inc lock ffreep ret cli mov add fwait or mov add dec imul aaa adc add mov (bad) ss ss shlb shr jns jge and mov or mov jl stos cltd aaa lods push stos inc sahf push mov popa in (bad) enter (bad) lea pop and xchg ja es dec sub dec mov adc push and in push xchg add in or and leave es xor inc sarl das lea rcrl jp xchg sbb and sub pop rcrl out outsl inc push adc add test (bad) push adc out arpl xor xchg adc ss inc neg pop cs call xor jb push inc imul imul test in push sub push js or icebp xchg imul cltd jnp dec bound mov (bad) in (bad) fstl mov push sub in mov inc dec jl popa add dec lock imul lahf xlat std test push sub ljmp pop inc sub adc scas repz xchg pop inc jbe or cmc jmp xlat iret pop push lods mov or fidivr adc lcall subb roll stos mov out (bad) popa adc aam xchg ja mov int3 adc hlt test cmp cmc jnp call push xchg xchg dec xchg add adc mov push std mov in mov lcall lods jne mov mov int inc adc rcrb arpl push or cmc xor fiadd movsb xor loope,pt mov xor inc stos or aas xchg sahf xlat popf cwtl test inc in add imul sbb sbb or dec mov ds and stc dec aad ss mov scas sbb fdivrs scas mov (bad) lock jmp or lahf mov mov push or mov push sub jne lahf push lock pop sub int3 jg mov out push sarl pushf cmp stos je clc lods mov pop test mov mov cs jmp iret cmp push gs js fnsave pop stc ret mov add xchg pop sbb loopne cwtl test inc push inc icebp or push jle fmul in pop xchg mov pop fadd icebp (bad) imul test mov mov pop int3 lret mov fstl mov xor imul sbb push ret inc lea mov adc mov jmp fcoml jo stos mov repz out rcrl push pop mov and insb jbe xor loop lods mov adc and cmpsl push leave jns into cs cmp xchg sub jbe fwait cmc dec jle mov or mov jno adc (bad) cmc cltd cmpsb pop cmc aad mov ss jno mov sbb xor sbb nop sti cmp and dec cmp subb ljmp mov fadds imul lcall cmp sub popf mov (bad) rorb dec cltd and xchg mov mov sub ret fsub sub and jle cmp test dec mov inc mov outsl pop fldl out stos popa jp xchg out test rdmsr pop pop lds fmuls out mov sbb aad push repz (bad) xchg mov dec shll js pop adc (bad) jl (bad) sub jmp jge fwait int out push aas popf repnz and xchg out icebp cmp outsb xor inc sub push int ds pop push xchg or adc sbb and jmp sbb jns in cltd xchg push (bad) dec cmp jae inc xor mov hlt inc lods (bad) loop sti cmp test icebp out mov int aam mov jbe dec cmp mov add fs xor mov stos je pop inc mov jecxz add loop jns loopne xchg dec stc mov sbb jp dec adc xlat faddl sarl jge test (bad) insb ret ficompl (bad) icebp idivb jle jecxz mov jno sbb jge inc push outsb loope cltd dec push add aad sbb jnp aas inc fnsave sbb mov xchg cmpsl test add std rolb ljmp shrb jne imul hlt jno adc ljmp mov (bad) stos popf jb xlat xchg fdivr push jbe mov xchg mov xchg sbb pusha jo fsts push or pop aam ret repnz nop xor mov push jmp stos popa inc inc clc inc lds pusha es dec in mov ss inc shll inc push jg jbe jl lods ret mov xor fs sub test xchg fadds aam xlat and cmpsl leave repnz inc cmpsl dec dec aaa adc mov out inc data16 mov in ss xlat popf cmpsl into pop popa repnz lcall pop sbbl xor leave mov mov pop jle push push (bad) mov fidiv mov sarb test iret je jle repnz sbb out movsb push dec (bad) cmc dec mov adc add mov mov aam jbe stos cld movsb dec add dec push fiadd inc or fwait pop imul push push jecxz dec add xchg xchg jg adc sbb cmp sub popf repnz mov shlb je cmp insb lahf pop outsb sahf push int sbb xchg fiaddl mov xlat push or jb cmpsl ret sub mov shll aad pop fdiv push out ja pop leave lods mov pop sti mov inc mov test cmp lahf (bad) leave sub add pusha inc out (bad) jbe ret mov das icebp mov popf bnd rcr sub (bad) fs mov xchg mov cli fcmovu stos dec mov pop jo xchg xor mov mov xor out mov in mov es xor mov movsl push cmpsl inc int3 adcl jl ficomp sbb cltd mov repz iret in xchg push jge push repnz push push add mov mov js popa sbb inc aaa mov push je mov sahf int mov lret pop pushf adc dec test sub pop std outsb sub outsb push adc xor aad add push or jg leave xor push pop xor xor adc aas lcall xchg insb fsts lret jns hlt sbb fldl aas out inc lahf (bad) leave inc and sbb push mov (bad) xor in in imul divb lahf loop cmp pop push aam aad (bad) sbb jl rolb or jp jp sub scas fidivl es or push sahf cmpsb scas mov out sub stos test in xor pop xor ds dec pop ret iret (bad) jecxz scas mov addr16 das enter nop push xchg call pop push xchg xchg aas ror inc inc insb mov lahf fsubl xor dec loop dec cli loop push lcall scas cs xor inc sub iret sbbl pop mull dec mov fsubp shrb mov fucom mov lea xorb shrb sub jmp xchg div fadds pop pop xchg pop or and in xchg notl cli les loop ret mov les mov ret push and aam in xor pop addl cmp aaa je notb bound mov (bad) dec in pop ljmp aas stc int dec push mov shrl xchg into ds jl stos scas mov rclb stos insb adc popf xchg lds (bad) stc xchg (bad) xor ss lock push jnp xor push mov xchg push add js cmpl movl dec jl clc lods push add rcr insl sub mov (bad) scas test mov push add mov mov fimul icebp mov in dec loope stos loope (bad) jae jge,pt imul push and jmp xor out add xor mov popa jbe mov mov and leave (bad) ret cmpsl pop movl aam nop or frstor and dec sub cmp jns rsqrtps jb into sbb pushf cmp fiadd or in sub or aas nop gs inc movsl push hlt movsb out outsb (bad) gs sub lahf inc sbb stos xor push cmp popf loopne (bad) stc iret jp movsl inc xchg ja jmp sbb insb (bad) loope icebp out push cmp negb bound xchg adc cmp push xor fwait jp outsl push cmp jg pop pop jecxz outsb sbb jecxz shl push pop inc cmp dec mov push adc inc mov or mov fstp (bad) jno push and bound cmc xchg dec sub push xlat stos xor adc jnp sbb sub add mov sarb pushl jns aas lods shll icebp xor imull mov mov add leave bound in pop (bad) cmc in (bad) js push por sub inc adc ret xchg and sub pop mov sbb add rorl cs test rolb xchg sub push mov jns mov push fisub out lret and xchg dec nop jecxz in fldt rcll sarb xor (bad) mov ret pop and sti push imul lcall push cmpsl push fisttp sub stos insl xchg fbld call sub xchg fldenv stc jne and popa lea jne test lods pop pop shlb and mov mov cmp call mov loope aaa movsb dec outsl loope mov sbb xor stos repnz sub negl add (bad) std push or movsl push (bad) movsb xchg xchg scas rcr es and cmp or adc and pop fcmovnbe arpl xchg aas xchg xchg sbb iret add cld test pop push lcall mov out fcompl cmpsl (bad) fistpll or fcompl cmp fwait mov mov xchg and out leave cmp test jo loope test ds xor shrl out mov sarl popf (bad) jbe sub jle sub adc incb jmp jge aas mov jl cmpsb mov push mov and sub ficoml mov aam and test inc and cmc pop xchg pop mov adc xor cmp out sti mov push jb (bad) mov push stc adc pop pop dec mov xchg lea adcl frstor stos adc lods inc xchg addr16 jmp std out sbbl pop insl xchg jmp cmp cmpb mov jns push sub int add in mov or or mov mov add or cmpsb loop sbb incb push in xor pushf ret int hlt cwtl popf movsb sbb sub (bad) rorb ds movsl (bad) data16 push lods sub ja jns add jae sub or lods push in pusha jp rcll mov inc xorb insb pop pop aas or pop (bad) test add and es aam std xor sbb outsl (bad) lods xor xchg enter jne mov repnz xor sbb mov sub sti popf fcom lea mov cmp ja sarb jl xchg jle xchg loopne sti xor and inc sbb mov dec push mov in leave sbb mov jo,pt jno ffreep dec sub add lds (bad) mov nopl insb loop jne xchg testl or adc xchg add ja repnz dec add or add mov push push mov lahf cld adc push jnp mov (bad) repnz inc pop cs aad fstl je add mulb daa mov aad loopne sbb pop ds mov sub mov sbb outsb mov ret jle (bad) mov lods mov sub popf js stos mov fldl stc cwtl aam cmp inc sahf and sbb sar fistp ret sub in pop lret and out pop or pushf xchg (bad) mov sti mov scas mov std dec cmp push out cmp movsb push push shrb cmpsl into lods aas pop sbb lahf and mov xchg aad scas add mov add (bad) and mov jmp jb flds rorb mov cmp gs pop push sub fstpl adc pop out push sbb mov pop jle shlb or sbb leave repz (bad) or cmp out imul inc aam xor sbb js scas jno loope cmp in sbb rorb pop inc jb ja adc rolb test addr16 mov movsb cmpsb pop sbb adc push call fsubrl mov jp pop mov xchg and xchg dec mov sar jb ret aad iret xchg ljmp les dec sub leave nop pusha (bad) mov xchg add test test dec pop adcl pop mov sbb mov mov lock push in dec fbstp adc xor dec cmpsb call fisttpll ret sbb notb mov lods mov mov jo dec lock faddl lret loop pusha jno mov lods shlb scas lret pushf adc in dec in jmp mov lea mov xor call mov jmp faddl lret loop jo jo mov cld inc mov in push and lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop xor pop and enter sbb imul adc fcoml lea sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es loop sub pop subb pop mov jmp push and mov dec xchg mov push rcrb and rclb ficoml push mov fwait or lcall mov les (bad) (bad) cmp repz mov xorl mov fsubs or pop or imul pop in scas jo lcall or popa fnstenv mov fimull inc sub mov push mov cmp ljmp mov or sarb call fmul fsubrl dec lock mov out cmc in outsb inc sarb ret push mov jns xchg cmpsb add pop cmpsb push mov sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 es loop xor jns pop subb inc repz lods in adc and ret (bad) fcomps xor call sbb call xor aad lds jge push add mov lahf xchg jecxz js add jae shrl aam fstps into mov mov js and mov test sub sbb mov xor ficoml sub xor jle mov mov push enter negb cltd inc cmp adc popa ss push lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp mov repz je lret mov lock cmpsb (bad) loopne pop mov test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 es or xchg mov sub cmp (bad) repz jmp and stos icebp sub lds and mov xlat hlt pop pushf pop sub ljmp jge cmpsl lods rcrl fs (bad) cld mov icebp adc je inc pusha hlt mov out mov pusha fild dec dec inc ja mov (bad) or push bound in sub in test adc sbb loop mov into xor xor test mov mov int3 lock fnstenv mov sbb or mov fdiv cmpsl pusha sub inc or out add mov int (bad) mov loopne xchg xchg mov fs and mov es and push jae jns push clc sbbl sahf xor ret push xchg mov push (bad) mov (bad) pusha jns jle divl shll xor mov jno test xor pop adc and hlt mov jmp cmpsb lods mov bound icebp sbb shrl push add jle add mov rcrb movsb cmc sbb mov dec (bad) ds xchg lods pushl inc aam mov inc pop es fs test xchg addr16 movsb movsb aaa xchg std xchg lods inc xor push or stos rorl sbb fxch popa xchg lret arpl xor pop jmp xor (bad) mov and sbb loopne inc icebp arpl cmpsb inc in cmp dec sbbl int sub xchg dec pop sub lods (bad) and jne rclb aad dec dec dec xchg imul pop mov mov or add mov cmpsb cltd out adc insl mov jb adcl js in test (bad) push push ret pop out inc or mov jae xor and xlat mov test hlt inc jae fidivl pop jle (bad) add pop pop adc outsl mov nop outsb outsb movsl add aas xchg push fsubp bound mov sti addl nop ss lcall xor pop dec outsb mov pop pop push aad fstl add sub ds adc pushf mov scas cmp push push hlt jo cmp or bound fs adc dec sarl std ss mov ret add (bad) add movsl movsb clc xchg mov scas inc rcrb das push pop add pop or jp roll xor cli jge xchg test leave mov jl push (bad) and hlt xor push push pop popa pushf mov in shl add in out mov dec ret lock out pusha aas xchg push mov stos std test add roll inc enter test out std aam ds inc sub xlat sub mov ss mov dec int popf xor jmp in ja inc inc push mov outsb pop or push mov jae lea dec shll pop adc arpl or in (bad) and xchg cmp inc ficoml sbb sub push jae mov sub jl cmp adc sti mov scas jo dec mov pop je add lea js push insl push jb icebp push push mov or cmpsb push pcmpeqb pop sub ret ja popa sbb dec (bad) repz inc push (bad) bound mov add repnz or add xor push xchg (bad) sbb test lret mov inc test mov mov gs inc pop jmp sbb fisubr (bad) push or inc or movsb hlt adc or movsb divb mov scas ret adc inc xchg data16 loop lock xchg sbb jo mov push or rcl in in mov je out loope,pn aas (bad) mov aad icebp or (bad) push loop sbb daa xor or mov mov lret jns mov sub and mov xorl xchg or cmpsb call outsb pop sub (bad) decb out jmp ljmp cmpsl es ret lahf dec sbb or sar xlat mov mov pop aam and les adc push movsb (bad) ja jbe pop cmpxchg jb adc out loopne fsubrs pushf cltd mov pop and dec cmp ljmp sub xchg xchg mov mov push test jbe aad jge jne aaa test (bad) pop sbb (bad) movsb imul repz mov mov jnp decl add lss xchg jbe pop cmp inc pop daa pop mov mov lock xchg mov fidiv inc xchg movsl stos sbb cltd fiadd xchg mov cld lret cmp push jmp hlt and sub mov xchg jno cmpsl fidivr clc mov pop repnz loop es fwait xor adcb mov xor out out push push xor add mov sbb inc mov cmpsl scas ret cli ret (bad) push popa div enter aas jl in xor xchg movsb rorl imul inc jns out lods and jle pusha pusha mov out lahf je mov (bad) cmc pushl pop aad ds out dec insb push mov fild les repz sub ljmp pop xor inc lret fcmovnbe je mov xchg push jge icebp push inc push jmp jno (bad) ret and nop ds dec es lret ret cmp aas repz add mov sbb stos mov scas add (bad) adc or imul lock dec fimul stos xchg icebp xlat mov add fidivrl adc adc in rcrb sti dec stc nop sub pop test bsf (bad) aad mov aaa inc sbb test lock pop xchg fwait gs and cmc xchg sub popa mov cld xor push ficomp mov dec push in inc sub enter xchg out mov test jbe (bad) in in cmc push mov cmc ds or sbb xchg add inc popf scas cmp jbe in jmp mov xchg cmpsl mov xor add leave jp and jae movsb push mov add jns sub dec jmp inc sub xor imul idiv add clc add sbb fildl inc xor fidiv inc sub xchg mov jmp stos popa inc inc clc inc ss lds decb stos cmp or gs mov fmul dec mov xchg jle call push cmp dec jl clc insl sbb mov mov push loopne xchg xchg push mov cltd cmp divl repz jecxz lea jecxz mov outsb pop scas in mov xchg add fidivrl test divl stc sbb adc icebp movsl and pop repz iret add fiaddl imul sti adc pop movsb push hlt sar push (bad) mov push data16 jle imul add add or inc dec rol push jne movsl lds push mov jo sbb repz cmp sub mov and dec or (bad) xlat mov mov lods add pop mov add out sub or inc loope shll pop rcr fisub hlt xor test mov fcmovu cmp cmp scas sub bound gs and shr jbe mov imul and cmpsl adc lahf je loope sub inc out push stos add pushf popa xchg lds fisubl dec arpl or mov xor pop adc or xor add push xor movsl sti or out (bad) mov (bad) dec or lock dec mov add mov or push repz icebp popl aam pop and mov aad aaa test dec jg xchg sub out fs xchg dec push in xchg cmp or fisttpll dec jl sti inc xchg mov pop cld stos das push cltd jae outsl inc out xlat in xor adc test mov jb push sbb nop inc (bad) insb xor sub or ret jp push movsb mov mov sub mov (bad) or fwait inc stos add push add xchg in (bad) push fsubl inc dec aas dec or add lahf sbb fdivl les jge and adc push rdtsc out imul mov stc stc dec sbb fcmovbe (bad) mov adc pusha add mov sub js fwait mov xchg mov mov mov aaa (bad) flds dec push xchg loop iret call loop out mov mov or in or mov push orb mov xchg popf push xor call sbb data16 push pop mov insl stos cli and dec or adc lcallw int3 or xlat jle cltd rol vmread mov sti in add mov or insb outsl popl cltd icebp hlt out fnsave adc sub ret dec mov sbb into and shrb enter pop sub andl jnp int mov push insb xor and xor gs sub cmc ds pop enter in push mov sbb adc push loopne movsb adc xchg xchg test mov jbe (bad) xor mov cmpsl std push repz and fcompl or mov mov out (bad) repnz xor pop xchg dec inc test ljmp fcmovnbe mov repnz and int3 lret mov cmpsl (bad) test adcl inc mov jl mov (bad) subl stc mov popa mov rorl cmc fwait sahf push xchg ds xor sbb sbb adc push xor jmp (bad) jne rolb inc repz mov fistl jnp arpl inc stos loop nop repz scas cmp test cmpsl adc push loop arpl cmp xchg lods loop cmp xor loope js jns cmp mov mov mov nop int cmp out push push je mov xor addb pop sub gs fnstsw fdivs dec (bad) in imul jg pop dec orb push or jnp mov inc push adc scas pop mov mov and push xor mov xor or cs mov jns in xor insl in mov add mov or icebp in mov pop in jnp mov xor jbe repnz fs cld mov dec jno popf add xchg test lcall aam outsb xorl stc popf in sub lretw jns mov and mov pop jmp xor scas xor inc mov ds sbb add xchg scas pop push int mov mov mov pushf inc xchg mov dec inc and (bad) std movsl sbb dec jecxz mov pop repz out pop or xor cs cmp outsl sbb add push loope mov vandnps (bad) gs jmp jl (bad) je dec (bad) xchg xchg xchg ss (bad) xor mov sub inc sbb (bad) jb paddsb es or insb les cs mov repnz stc push pop mov (bad) movsl notb cmp (bad) aad mov dec loope inc adc sub jb stos push ret pusha adc dec in mov idivb jmp cmp ja popa insl pop addr16 cld xchg pop xor mov sbb xor dec jmp adc popf xchg (bad) call stos test cmpl loopne mov dec dec test iret push jmp js and jae lea sarl cmp test mov jb and xchg mov xchg stos jns cmp xchg sbb jnp fmuls cmp ds stos or movsb pop add rclb mov lret ret mov mov xchg gs xchg adc call jo jae add (bad) mov jne in loope inc sti mov sbb add rolb sub inc and lret int3 lods gs sbb jl xchg pop mov mov enter shrb data16 lcall fs add fsubp add jnp orb outsl xlat sti stos (bad) arpl mov stos push xchg push cmp rcl (bad) xor dec jae pop les movsb xor movsb dec gs lods xchg int3 mov and sub push xor push inc xlat call jmp arpl mov outsb jle xchg test mov ret inc add fwait mov test lds mov mov pop int movsl xor test dec dec test iret jo add hlt inc call jp in int3 jno sub xchg xor dec repz dec cmp in or xchg lea ds jno addr16 pop jns xchg (bad) push xchg ds int3 outsb in push out and rclb xlat decb (bad) pop das pop jb andl ja xorb xor int3 xchg inc and xchg test push xchg daa jl std sbb fistp mov out ret test push cmp jno pop lcall cmc pop movsb int cmpsl xchg jle leave push stc aaa push cs adc ud2 idiv out je jbe sbb icebp ret push cmp push in stos jge jae ds xchg ja rorl hlt cmpl (bad) cmp (bad) insl test inc lret loopne out cmp adc les sub leave call inc cwtl dec stos (bad) mov inc push leave lods xchg xor rclb daa scas sub lret jbe mov cmp cmp movsb and fstl in xchg xchg mov push push fucomp js daa xchg jmp out xor (bad) pop jne jp sub xor xchg aaa mov loope adc and ret fildl stos adc into outsl push stc (bad) bound lods popf fidiv aaa int pop lods in ret cmpl pop mov mov in ror stos and (bad) mov xchg adc mov test frstor movsb (bad) xor dec push pop dec sti dec daa jl inc icebp pop inc adc push inc pop xchg xchg push mov push pop clc cltd pop mov imul dec (bad) jns add sbbl andl mov out cmpsl xchg mov lcall xchg lods insb leave inc popa push adc in (bad) mov xor jae push insb push xchg imul push std jg cmpsl test (bad) imull mov mov imul sub pop dec lret aaa add enter out popf test dec into repnz mov fisttpll adc scas cmp sbb sbb dec and aaa cmpsl adc nop into shrl sub fnop in push leave es lea push ficoml pop xchg or loope xchg (bad) xor clc test loop xchg cwtl xchg inc fnstsw pop pop in js jmp popl mov pop sub mov imul xchg test and xor outsb fs repz add or jo orl mov std add fidivl adc inc rcll inc (bad) cwtl pop adc xor mov in mov xchg mov cmp cmp jecxz sar pop outsl jb dec pop push inc jns (bad) jne test push dec jle faddl mov testl loop adc sbb mov and cwtl xchg jg arpl mov xor inc mov fwait mov xchg or pop dec dec push or push int3 jmp push movsb dec outsb hlt psllw out (bad) lock and sbb xchg dec repz test mov push or cmp mov repnz mov inc xchg inc (bad) mov pushf inc mov loop inc xchg arpl sbb mov sbb dec sbb call negb xlat xchg test imul inc cmpsb setg or xor sarb dec lret lret addr16 fsubs or ds push jns out mov in xor (bad) xor aad imul lea shrl mov in les fdivl dec cmp (bad) jo inc push repz pop dec adc sbb ret aas lods fsubrl inc int xchg or mov in les mov ret lods push or push fadd dec push or out jns iret xchg das sbb ss jae adc xchg jo push add adc xchg pop sbb test pop cmc push adc pusha rcll insl mov test pop pop std repz aam lea arpl jns cmp jmp daa inc inc mov sub in loopne push mov aas dec repz jge jmp addr16 mov xor jnp add and mov fsubr or fwait xor mov pop cs (bad) aaa sub mov and scas xor fmulp adc xchg lock pop (bad) inc int3 add rorl aas jb sub pop cltd sbb fbld xorl pop push icebp in mov pusha xor mov les fwait mov pop lods loopne nop mov je sbb imul fistpl inc pop push jno push push sub hlt jne rcrl popa leave insb imul jp lea aad mov jo add stos test cmp mov jge cmpsl lea aaa mov rcl mov inc jle xlat sarl (bad) nop xchg fbld (bad) adc sub repnz fidivl inc cmp mov add pop pop xlat je adc stc (bad) sbb test cmp adc mov (bad) popf ror fimull ficoml push hlt rolb xchg xor add aad add lds roll and dec mov addr16 add out cmpb rorl jle and pop repnz nop insb push mov scas or xchg xchg push or inc jmp adc sti mov sbb aas cmpsb adc sub and imul adc icebp rcrl (bad) loop xor sub dec cmp push add inc int3 pop stc fisttp pop sarb sarl push mov xchg cmpl xchg pop nop hlt sbb dec pushf and sub std xchg jmp mov lcall sbb sub mov and mov jmp push push popf sub xor sbb lcall mov lcall sarl dec push rcrb aaa mov scas cmp daa daa jnp in repnz jp xchg fcomp ret and add or mov adc hlt xchg xor loopne adc xchg xor mov jp call pusha mov push add or clc lcall push sub clc call fcmove nop pop nop adc enter mov jp push enter and mov xor jp repnz fwait sub push ror roll mov sti mov ss les inc icebp cld adc sbb stos hlt cmp and pop test adc arpl push mov and sub shrl scas scas pop mov das jnp xlat mov xchg dec in dec pop pop test scas sbb jmp or jne cli pop pop lock (bad) stos pop dec call lods xchg sbb dec sti js inc shr sbb arpl and nop sti clc (bad) jae xchg mov insl es leave daa ds mov sub add fwait jg xchg fidivl setbe sub adc push push sbb mov pop jb movsb lcall bound push xchg mov mov xchg lods cmp xor or jb dec test rorl es outsl aaa and dec mov lods data16 das adc int3 bound mov or mov jae,pt lock sub xor mov shr xor insb test mov loope push aas jl sub fbld cmp iret adc test or dec in (bad) inc mov add psllw aam jl jo push and mov call xchg lods push dec stc dec popa dec int3 and (bad) (bad) sub jge xor push push iret js (bad) mov push scas cmp adc sbb sahf inc lret rcrl and push jo icebp rcrl sub pop add fdivrs bound inc add inc sbb mov jecxz xchg jbe pop (bad) inc mov in jge mov enter xchg (bad) adc les sbb push push or sbb mov lea cli lahf push cmp cmp mov sub rcrl ss xchg sub fcomps or test lock mov sub sti cmp ds mov xor repnz sbb addr16 add xchg fldl jle fwait pushf mov jo sub ficom mov (bad) mov xchg lea sbb ja and popa mov jo ss test inc mov ret into xor cmc fild mov stos inc fisttp pop icebp lods daa out int stos sti pop lea inc cmc (bad) adc and mov mov inc sbb mov fs sti mov insl test (bad) std pop dec jno cmp pop dec dec or lods lret aam test test xchg aaa sti inc out mov pop dec ljmp sub test stos stos sub fidiv inc inc sbb cmp sbb loope inc fistpl jb xor and int lcall jno mov popf dec inc aaa iret rorb shrb sbb lret fs pop lods and int3 sbb gs aam cs pop sbb hlt (bad) mov mov rclb push or enter stc xchg push int sub imulb pop push add pop push in or sbb mov jmp pop jmp mov sbb push popf ror aad inc (bad) aaa pop add je in jp xor data16 and push les out outsb popf les mov jb je lcall test mov in inc xor dec daa sbbl xor push dec xor in movsb mov bound mov lret idivb add nop in push insb mov insb sub inc int addl cmp jl mov test ds loop pop insl ret cmp js cmp mov jno mov out cmp hlt mov lods or push addr16 sbb shrb inc or xchg pop pushf in mov jl inc xor loopne xchg pusha fildl sub push rcrb pop mov mov fs or fistpll xlat sahf sbb and mov test in scas inc stc cmp arpl and xchg (bad) sahf pop xchg mov negl xor pop aam push or xchg push sub call xchg adc xchg fs hlt outsb and xchg inc mov stos clc stc loop push jne clc sarb in fnstenv add cwtl decl dec (bad) loope int3 loopne roll cmpsl push outsl test mov ret lea adc xchg cwtl clc out xchg sbb hlt adc std push int3 cmp jno (bad) scas mov fild call (bad) dec pop pop out in ljmp or mov xor or pop pop ret adc push outsb cmp pop mov cltd mov bound push push scas lcall dec ss sub push mov je and dec and sbb lcall cltd inc xor adc jp push xor das ja inc call sbb bound sti mov out ja inc pop in sub (bad) push stos loope xchg int fnstcw stc sbb push push insb or dec rcll mov arpl lods fwait test in push mov in cld sbb mov leave jp sti shl add dec cltd repnz xchg stos dec (bad) scas inc mov jne sbb add outsb jae iret push ss daa scas imul jbe repnz (bad) mulb scas sbb add ret and test push out adc mov xor inc mov (bad) cli test mov mov inc lret sub lods js int in fwait or into les or sbbl test or xor cli fiadd leave ret in sbb jmp (bad) xor sahf dec push cmp pop inc jo out lock in adc loope lahf jecxz shll pop aam jg mov xor xchg cli mov iret mov pop hlt sbbl mov and (bad) das xchg add inc dec call jg (bad) mov data16 jbe es add pop sub push push fdivrs loop stc icebp daa dec mov pop cmp (bad) arpl sub pop dec push out out dec mov jge sub inc mov xor cmpsl adc out xor inc and pop xlat jmp sbb and fsubs xor pop fwait pop cmpsb dec push test mov dec adc sub lock cwtl pop cmp stos out lock fld1 mov int3 cmpsb sub pop insb cltd and into (bad) std adc imul xchg daa inc add stos mov sub popf push pop imul or sbb push aas loop stos cmp jno,pt xchg pop adc (bad) sbb xor sahf push inc scas jle inc adc sbb mov ljmp lock jns pop pop call (bad) lret aad add adc mov sbb and sub push adc fnstenv cmp fst pop mov lret inc adc cmp xchg xor lea fmulp inc dec cmp push outsb das sbb push fwait sub xchg jl jae push test sahf test mov mov outsb stc or scas fimull sahf cmpl dec movsb enter ss dec adc in jb setns cmp cmpsl pop mov rcrl mov leave test inc das sub push repnz mov xor add dec (bad) mov (bad) (bad) or insl das push (bad) inc or push inc cld mov pop sbb ret ret push mov push cmc repz lds mov jo in in dec adc call aam jl pop xchg lcall xor popa jne sbb cmp jmp mov ljmp lret scas inc pushf or jnp push arpl popa leave ljmp loopne push mov test arpl aaa jge xchg mov fistl xchg or addb fwait dec jne xor pop andl stc cmp movsl or in mov xor outsb sahf int3 inc lahf dec loop int3 (bad) cltd mov xor cli jnp cmp lret sbb popf lea repnz scas data16 fnstsw int movsb xlat loope mov pop addr16 mov jne mov repz aas jp (bad) lcall xchg fdivl iret dec add add cmp jmp or add out adc pop cs (bad) cmp fmulp in (bad) dec nop cwtl (bad) pop fcompl mov cmp rcrb dec xorl outsl popf sti inc mov xchg mov add push fimull lret or xor or out fsubs add sbb xchg clc jg (bad) loop pop ja sti push (bad) data16 lahf dec stos jmp mov pop mov add cmp push jmp adc icebp ror dec repz jecxz xchg sahf (bad) mov cltd pop and cld loopne das dec test daa popa pop test (bad) xor das test test out pop fmul cwtl je adc sub (bad) pop mov push adc sub mov fs push adc add inc sub ja les add (bad) cmpsl mov lock int mov (bad) pop dec sub inc mov inc iret loopne fdivs cmc mov cltd pusha ja,pn lahf mov andl xchg aad stc repnz pop cmc jg lret push adc dec cmc rcll jl sbb lret dec shrb mov pop mov iret mov jecxz (bad) jae jno push movl cmp jl mov pop sarb cs or inc jg shrb mov mov and sti push xor inc push jge aad ljmp ja scas imul aad je xchg sahf mov imul xor xchg in imul fwait int3 test lret mov xchg mov or out imul lahf xorl mov ja jmp mov into imul popl mov cwtl mov jb sti popl fdivrl (bad) pop lock push (bad) scas test sti mov mov scas or sbb and (bad) out divb inc mov ss sbb movsb lret cwtl xor (bad) ss outsl and sbb and xchg insb ja cmp jge jp repnz or mov clc or sbb mov push push jb imul push sub push mov mov imulb jb and xchg (bad) je and (bad) push push cli mov xabort push sbb shrb popf lea aas cmp adc add cmp sub cmc (bad) leave mov imul and mov mov dec dec aaa lods pop into adc in fistp add pop jno movsl jp jge pop add adc movsb enter and hlt mov fcomps insl add adc inc enter das pop ljmp sti jne leave jle sub push repz push imul cmp sti sub mov mov int subl bound xor (bad) mov mov push add push stos dec in (bad) mov popf inc fisubl cld jns ss mov mov mov pusha pop mov test in xchg xchg xchg mov jle out mov pop mov push call inc mov cwtl adc aad adc jp out scas shrb adc lcall lods jae gs add dec enter int lcall (bad) xor fdiv das lret mov pop les imul out jns sbb pusha scas les pop mov xchg pop pop mov stc int3 mov ret pop mov push and in sbb mov fwait jb mov lds fcomi jmp lods and add push push jo popa lods cs lds add out push loopne (bad) mov mov je lds in xor mov jge mov push pop ret add (bad) or cltd repnz loop pop repz or leave mov aas repnz and dec cmp (bad) xor lret push cmc jl shr jge insb mov loopne xchg (bad) and xchg pop idivb shr mov das sbb mov imul push ret or loopne cmpsl jg popf int3 pop adc (bad) jb nop lret push lahf inc fs jne jl xor fsubrs push (bad) lahf rol repz push adc shll mov and and movsl jae dec dec add hlt test inc fsubrs insl lahf mov jp ret or fstps imul push arpl mov sti shlb push outsb add push fdivl int popf cwtl in and (bad) xchg inc (bad) mov sub and mov push dec clc push sub push testb inc mov adc lock loopne fs jnp loop mov pop andl lcall jmp lock imul (bad) or dec cmpsl fiaddl mov xchg xor insb cwtl pop fs rcrb hlt sbb imulb or aam enter test mov insl mov mov push xcrypt-ofb cmpsl lods adc lret out inc daa cltd lret icebp daa or pop rcll scas std dec cli pop mov or mov fstl das xchg movsl mov cld push mov insl cmc sahf mov aam mov xchg adc scas push xchg pushf lcall sarl lahf pop sub (bad) mov aad xor mov or mov ss (bad) icebp enter sbb outsb jle aad sub mov jle push or cld aam sub outsb push push das add inc xor mov popf mov test cmp fcoml lahf lret ficoml loope adcl es dec fsubl pop popf icebp pop es icebp movl data16 cmp sbb fdivl ja sub push cmp lea add cmp cmp inc push popa pop dec and mov mov negb xchg loopne sarl cmpsb or ljmp (bad) shrb les cmp inc pop or imull mov jns dec int mov data16 adc out xor lea jae inc enter xchg pushf andl jns mov fistpll cmp into aas test jno aad cmp jmp jae lea cmp inc popf imul mov mov pop pushf fs cmp out sahf mov dec mov in loop fwait dec rorl call mov sub push dec loopne mov or mov das (bad) jbe adc sti test inc lret sub test stos or clc jp xor psubb mov stc xlat js push cmpsl daa fldenv pusha and inc sub (bad) xor cmp enter dec or pop push je int or sbb testb (bad) mov (bad) insb movsl insl aaa pop (bad) lock test insb add insl xor adc int3 out cli dec push dec roll femms cltd cld xchg into cmp popf sub aas insb push call idivb cmpsb (bad) sti fimull stos in sbb sbb adc push jae xchg mov aaa add dec mov mov test das xor js int3 xor mov jecxz sahf clc add xchg fldenv adc or aam xor movsl loop out movsl and sbb jae std dec xor imul push pop adc pop jp int3 scas mov inc mov cmp jo int jne inc sbb les or (bad) js,pn mov pop shlb adc repnz shrb push in (bad) and and rep cld test push lea jae (bad) hlt mov (bad) mov fildl add and push push jl dec cmpsl pop cmp das notl aaa push sub jo stos stos inc sbb ds jae or or mov into das add xchg movsl pushf pusha xlat scas shll or pop and pop mov pop add mov xchg sub mov sbb push jmp pop add les sbb mov lods and jmp cmp and push scas test pop xor xchg ss jl or sub xor loopne loope pop xor test cli mov sahf pop push jle adc ficoml test inc add lret jp push and lcall inc sbb js and outsb mov sbb jg sbb mov sti sti aas dec call popa mov sbb mov mov popa mov test sub cmc arpl dec pop cmp pushf dec cmp pop inc xchg mov lret sub inc call sub pop mov cmp jmp and sub in xlat mov leave xchg int3 cmp lds pop adc arpl push jg lret mov cld or mov xchg outsb cmpsl add ja inc (bad) sub mov ret fild jbe test dec push jle mov inc (bad) call leave push mov lods sub mov fs dec or sub push xchg sbb mov xchg in cmp sar cmc xchg ss and mov lret pop xchg or sahf mov lds fsub div gs and push in lcall cld test leave xor sarl mov repnz push repz enter leave fs push (bad) xor out repnz pop lahf inc shrl imul popa test and sbb lds js add pop inc int xor mov (bad) pop cs adc pusha cmp push in test add fwait inc sbb imulb pop pop out inc aad scas adc mov lock inc mov mov ja aad cs sub xchg inc stc xlat cs dec fwait ds scas inc (bad) icebp mov sbb dec aam daa xor lock sub adc mov loope mov or ds dec repnz adc in je aad std rolb dec jge sbb xor into dec jecxz stos lahf jbe fadds lock pusha lret sub sahf mov mov inc cmp movsl cwtl or iret xchg xchg fnstcw (bad) mov mov dec mov repnz adc js std fcomip (bad) xor notb fisttp mov or inc jmp adc es cmc xor push arpl mov scas cltd dec out jb xor push lcall pop mov mov cli sbb iret popl pop jmp insl into adc fistl mov sbb or popa outsb out fmuls cmp pushf pushf aaa cwtl mov clc fxch xor jp or cltd das lds lcall loop push enter pop int pop es fs adc sbb es pop mov sub xchg jp clc (bad) jne jp inc cli cmp ret dec or mov je (bad) sbb lock mov (bad) out sub (bad) testl and or push pop mov add cmpsl sbb xor or mov cmc sar xor lahf cmp dec das xor sbb pusha in and out imul int3 hlt mov bound fldcw inc pusha dec pop add xor adc dec xor push mov aaa mul cmp mov jp insl mov inc jg xor and or jnp cmp in pusha mov call sub and out decb das cli mov mov mov dec in into out cmpsb dec dec dec jae mov xchg pushf loope jmp adc add cmp outsl scas mov sbb push push xchg mov push stc mov mov add std popf add roll fisubl out call imul inc push sbbl stos fsubrl out hlt int mov jg movsb push jg mov xor in add xchg cmp sub mov sub mov jle inc lahf push fidivr iret cmp mov or sbb mov pop rcll jl das push sbb fs pop test mov xchg add popa les mov pop xor pusha push pop dec sub int jno sbb cmp lret ja xor xor fadds dec stos das add push inc mov push xor cmp mov or fsts (bad) jb add push pusha ja add xorb jle mov fptan sbb sbb sub enter or adc (bad) out daa jecxz fldt leave sbb xor enter or andl push inc fldt dec add sbb jne data16 adc (bad) xchg dec enter scas mov cmp inc or inc cld inc nop lret gs cltd sbb ss push pop jae and add fisubl and push lea mov xchg adc lods or inc push ss sbbl sub out mov hlt jl mov stos mov es popa (bad) icebp add push sahf int inc dec jp lock fiadd imull pop cmp adc cwtl adc jns (bad) fisttp mov stc adc nop sub call push jo and dec hlt jb ret loope je decl dec dec dec adc in ss sbb or aaa push xor (bad) sbb dec ret fdivrs arpl dec (bad) mov push inc pop pop mov jg test rol push adc outsl lea or pop or addr16 xor cmc call lret push ret int (bad) inc adc jnp jle daa insb rorb loope stos mov aas and mov cmpsl dec ret jno js lahf jl idivl sub in xor fnstcw std out xor jne and je push (bad) es mov in xchg xlat nop test mov and sbb orl inc xor jge xchg dec cltd ljmp aam (bad) aaa xor or roll jae xor loope lcall sbb fstps add push push or xor in out out repnz pop adc cmp sub loope pop negb mov inc aaa xor mov mov (bad) jb ljmp or addl hlt shlb clc iret mov push sbb std std mov inc jg pop pop out xor decl rcrb jo popa mov (bad) cmp dec and add pusha in push mov mov push mov push or sub out imul inc in (bad) jle or inc std repz cmp push test jb out nop dec dec enter mov aas repz (bad) push jecxz pop mov xor gs jp cld (bad) adc xlat (bad) and xor (bad) mov ljmp adc popf mov fisubrl pop outsb call xor adc rorb cwtl das sbb out dec cmp imul mov cmovg scas sub into movsb jnp and sti mov js push push sub adc inc mov or mov ja sarb iret test lret adc or cmp jnp imul fmull enter mov pop push inc inc (bad) jle hlt push imul xor mov movsl add push in imul pop icebp mov scas or dec test jecxz es fisttpll pop cltd (bad) call and adc (bad) popf cmp pop cltd sub mov mov mov mov outsb icebp xchg sbb pop imul add mov sub test aam push pushf sbb clc insl movsb data16 and inc lods jmp (bad) push ret popf inc adc hlt inc dec fbstp les scas or or or or sub inc ss cmpsb sub add data16 or popa push (bad) pop jge mov lahf jns dec pop fwait hlt test fcoms cmp sub xor xor inc pusha xchg xchg and cmp lods cmpsb data16 adc js jge ficomp xchg adc add pop int pop pop loope std mov xchg cli push and dec sbb jo push sbb adc mov mov in inc cmp and int3 pop aaa cwtl movsl xor fwait xor pop (bad) fisttp cmpsb shlb pop xor sahf xlat dec sahf jmp lds std inc xor fcmovnb imulb sarb in into stc rclb mov mov jb addr16 cmc or add sarl xor adc jp inc lret pop scas sti (bad) in mov (bad) pop sbb ds rcrl icebp shr mov push cmp and cmp ret lcall jae es sti pop add mov lcall xchg and inc dec lock ds mull or jno jmp jns and movsb fcmovnu int sarb addr16 out std mov fstl mov xor and insl insb cs mov popa scas dec insl negl dec ret and push cmpsl sub jmp dec into and xor outsl or fsubrl test mov cmp and pop push and lret dec fcoml (bad) stos adc decb test mov add push push ret iret or push add ret std pop mov cmp (bad) xor pushf and push mov lock test mov sbb xchg jae iret and mov sub sarl pop pop jmp xchg cmp sbb inc test mov ja (bad) aaa fwait sbb scas stc jmp pop mov mov cmp icebp mov jne jo subb add enterw mov xchg stos clc aad imul outsb dec dec nop test push mov lcall imul dec mov pop lods push xor or sarl aad dec jmp xor fimul xchg outsl ffree test (bad) repz mov mov int xchg xor in adc jne mov shrb out cwtl cltd js push stos adc imul insb sbb mov sub push add xchg dec iret lock pop sbb push mov out jecxz sub (bad) jle subl es push test sub jns insb cld mov and mov mov lods cmpsb ljmp push repz out iret xor scas cmp adc aam in mov (bad) mov jns into std add dec cmpxchg mov cmp pop arpl idivb or and mov popl dec push scas dec add cmp sbb mov mov mov stc imul cmp or mov (bad) push aas std sahf xchg cmp mov and sbb xor jecxz mov (bad) data16 jnp mov jle add sbbl aas (bad) push test jb and pop dec addr16 mov fimull orl shll jne push xor stos out pop add jmp loope inc mov add cwtl xor es stos leave (bad) repz lret xchg in fnstcw sub sub sbb mov lret out arpl arpl enter imul and add jle push fdivrs rclb cmpsb fistpl clc addb and sub mov ja cmp pop and sarl movsb int3 mov and push push mov adc add gs test stos xor and sub mov loope gs lock adc dec daa mov inc pop cmc (bad) jne stos add (bad) cmpsl adc or sbb jne pusha cli in pop xchg pop aas fisubrl push (bad) aaa jp jle pop aas into les es mov push mov add jecxz (bad) sahf sbb out sbb jb add pop aam push gs (bad) dec test jmp dec jae pushf cmpsl mov add fimul pop pop or or gs scas jecxz hlt inc fimull insb sub insb stc inc imul pop ror outsb sarl dec cmp mov mov xchg pop lahf push sbb cmp cmp mov xor or sbb mov jae pop adc clc push and push hlt inc lods lret ja jecxz rclb sbb sub aas lea hlt data16 cld lds shrl cltd out sub das mov (bad) mov stc adc xchg outsl cmc xor jg test jb xchg lret (bad) sub sub orl xor cmp sub push push movl rcll push movsl push dec sbb pop cmpsb aaa pop aas push mov jg hlt es lcall add rorl push in push mov sub sbb popf (bad) jo jae sahf add or leave push das jecxz movsl or frstor pop dec jne out sbb ret mov sbb add mov cltd out pushf pop (bad) inc xchg std imul xchg or mov test pop addr16 (bad) mov cs (bad) cmp xor xor mov cltd out stc push mov int3 imul cmp xchg and xlat sbbb jmp orl cmp cmp cmp add jns std (bad) pop push mov out and std xchg or lock bound out or or iret cmp xchg xor push push mov push clc mov pop xchg adcb lret aaa pop in rorb in cmp fwait ljmp xchg inc inc fildl dec iret mov inc pop mov sub iret call icebp push popa loop dec mov or dec mov mov jg enter stos jle ret xor or fucom xchg xor pop mov cmp push pop cwtl inc dec in test cli andl aaa pop push xchg push mov mov sub mov push mov leave jbe pop cs rclb iret mov mov sahf sbb cmc fcoms ret pop hlt push fimul daa in push aad outsb dec pmuludq or xchg dec fiadd jo lock pop xor mov popf jge in sub sbb mov aas cmc xor dec repnz shrb dec (bad) mov movsb push cmp (bad) push mov std imul xchg add (bad) out mov or mov xchg inc (bad) inc or dec popa xchg xchg mov push push mov rolb leave cld sbb loope push cmc lds in sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 es adc sti loop popl out enter sbb scas jmp mov xchg dec in repz xchg dec shrl stos imul sub lea roll aas out scas jo pop shl cmp sub sbbb adc and lods hlt imul adc pop cli dec into sar sbbb lret std outsl jo (bad) jecxz push add xor sarl mul dec sbb jmp out push adc xor in xchg pop pop ficoml hlt gs dec mov out popa ss jmp or mov scas (bad) jno int cmpsl neg and push and repnz or roll ret pop ja bnd push xchg fild sbb test sub bound imul add sbb push arpl dec pop loopne and lea pop nop push movl stos pop lock gs repnz add adc loopne push call xchg cwtl cmp stos bound sahf pop jg xor (bad) scas jnp (bad) cld jmp mov push lock mov cmp lock gs iret addr16 lea cli pop test ret jb and mov cwtl sarb cli dec aam out and mov aad cwtl roll xchg add or push imul pop push testb ret stos fadds push cmpsb jb aaa insl dec mov in sbb dec mov ret (bad) loope fstpl mov mov and lock mov je popa push shr mov sbb dec xchg mov stc push xor add (bad) rcll sbb test les faddl les inc jmp add out pop call out jno xorb jbe ja adc ficom adc call mov leave push insb sbb xchg fs stc je das mov lods mov sub iret mov xchg push xor fdivrs test cmpsb in pop (bad) dec jns jae notb lods sub and adc test and insl sub jle or call sbb fildll mov push (bad) into out pop cmp in xchg or inc sub not sti aad or data16 add xor mov scas leave addr16 cmpsb push dec dec scas je sbb in addr16 sbb ret mov bnd sbb or ljmp xchg dec in imul jo lea jb hlt flds mov mov mov add aam aaa cmc jne in push xchg mov mov push cmpsl cmp gs loopne push sbb cvtpi2ps subb out push cmp jnp out dec loope outsl cmp push pusha cmpsl sbb xchg sub jmp mov ret cmc add in inc rcrb stc cmp mov inc aas jmp jl sub outsl sbb jno (bad) stos std sbb pop xor pop enter pop inc jne stos cld (bad) jmp fisubl scas mov jle jne sub jb or stos jle movsb and cs or mov or dec or cmc imul std (bad) in cmp test ljmp dec add xchg test jl imul mulb clc loope mov psrlq xchg mov push sbb mov mov sarb clc pop adc (bad) pop cmc stos dec stc push jno inc pop or pop xlat loope xor adc adc pop mov lea jg cmp add mov mov adc lock fistpll shr xor jno lret (bad) stos mov xchg (bad) fistpll leave lea imul (bad) fiaddl fwait int3 mov cmp push inc ds sbb (bad) outsb sbb xorl xchg (bad) adc aad mov pop mov mov icebp mov wbinvd dec push out in xchg adc or not cmp dec add push pop mov fs cmpsb ret ja inc pop out mov mov stc add inc gs sbb or sub jp jno cmp icebp mov jo sbb gs jmp cli xchg popf mov adc popa add mov dec gs mov push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 