push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out mov mov fsubrl add mov mov or jae sarb mov and incl push mov jge adc int fwait pusha jmp cmc push sbb out dec lret fwait les mov mov pusha es (bad) ror pusha cmpsl dec pop sub jo push xchg sbb stc fs pusha ret mov je nop scas and pop inc push fstl lods test cmp dec repz fildl xchg mov es scas (bad) push dec js (bad) push or jae xchg faddl mov mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg push mov imul jbe add aam test into cmp jle push jbe mov mov es xor and roll sbb faddl jnp es dec cmp add push mov sub (bad) push and xchg fs mov and leave fadds jb dec fidiv ds mov lds js scas (bad) repz jecxz mov shl xlat adc mov test lahf jle imul dec push inc addr16 jmp jle xchg rolb fidivl (bad) arpl xor lock int pop ficompl mov add nop and mov xor push mov fild mov cmp mov (bad) mov adcl daa cld add lods sub leave sbb and xchg nop cmp notl pop and daa sbb jns push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 xor xchg push mov imul jbe add aam test lret std sbb loop arpl daa xor jge or sub insb outsb push push (bad) fldenv xchg adc xchg add sarb xor (bad) or xchg ja adc jmp lea inc dec out and in incl jb dec inc (bad) mov (bad) add sbb pop xlat std imul int3 or call addr16 lods mov pop test aad push push xchg cmpsb cli push dec jl repnz iret jmp mov sbb pusha repz out pusha in mov leave je sub dec pop adc jne enter fiadd enter shll lahf add std hlt add dec jae nop data16 jae jl mov jg mov dec xchg mov inc add jb jns dec ficompl and or inc (bad) adc addl xlat push call or xchg and add adc pop nop jae cltd inc dec mov pop movsb push pop dec mov push andl scas pop popa jge bound mov push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg push mov inc mov imul fiaddl adc lods sbb insb xchg jns push mov movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl loope aad les (bad) xor sbb push int loope adc mov add ret call jle fwait ret outsl xchg add mov stos mov insb push push les repz or jl (bad) jae xchg cmp test mov test pop jge cmpsb dec pop sahf js in loope mov cmpsb xor stos mov jb dec (bad) clc imul in sbb je nop push jns push and sbb scas mov arpl adc push test in cmp push jno in lods (bad) cli xlat (bad) data16 xchg pop dec cmpb push xchg or mov out nop sbb je pusha ss scas push sub je sub adc xchg pusha jns enter rcrl xor pop xor push adc imul hlt rcl cli hlt mov mov das push or add inc hlt lcall rcll movsb nop pop pop mov repnz mov imul and int jo fist sahf inc add stos mov ss adc adc xor mov loope and and push jge leave xchg in shlb sar or stc imul sub xchg pop push dec (bad) popa sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out mov stos idivb jge lret fstl mov fnstenv js iret fwait ret pop xor test jg ljmp mov lcall in push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 xor xchg sbb fidiv jo pushf or dec sub pop cmc call jae lahf dec imul std inc cmp push mov push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out mov dec mov fsubrl add not (bad) jns and in rclb ret in xchg stos ljmp sub jbe xchg inc daa pop sub push insb mov das mov test insb popa sub cmp (bad) fdivl std xor fs rcr rorl mov xchg inc movsl dec mov xchg mov pop cmc jmp popa rol lods movl daa int iret push fcmovbe repz jle iret adc imul imul dec lcall push lret push fsubrl mov fs sbb mov xchg push cmp mov ret out mov mov jb scas cmovs mov mov pop xchg or adc adc sahf stos push inc cmp jnp push xchg rcrb xor das sub aam clc leave inc and loop pop jae inc xor xchg psubusb adcb jg lock cmp lock push sahf ficompl rcrb and jns in (bad) lcall push rorl mov push mov push dec arpl cwtl cmc mov and mov pop pop divb mov negb test out pop sub or stos arpl (bad) sub xchg xorb js test (bad) int3 pop jno ret sub xchg push testb cli add push mov and bts pop outsb jns fucomi out inc xchg adc adc mov jae and (bad) nop sti cmp loop insb lahf negl or dec (bad) ss inc (bad) stos int3 or inc and xchg jns jl (bad) aam mull aas out sub push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg mov cmp push mov push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret xor xchg sbb nop and mov inc cmpsl pusha fidivrl fmull movsb xchg fidivl ss push push pop jno test or daa sub cs mov pop fnstcw in push push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret xor xchg sbb push mov lods cmp jmp enter in fcmovb leave outsb stc xor imul mov jl or push mov mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc sbb stc je inc outsb int3 test xor aas add aam test lret std jle in lret push push psubb pushf in scas lods lret daa push sub cmc cs lahf outsl scas mov arpl xor adc fisttp dec jmp fs (bad) in xor inc jns dec test push mov xor bound xor stc xchg or jo xor pusha dec aam add push out aas es jecxz cmp jg cvttps2pi adc jle call test mov lret mov jmp mov aad nop lock dec add sub popa or (bad) outsl leave pop sub jnp fdivr and ror mov push mov xchg inc test mov imulb sbb jns out adcl lock in arpl dec notb dec into fwait xor or jae xlat lret int3 arpl inc sbb int cltd rcrb inc adc sub mov out sarl xor pop lock push nop sub rolb pop dec fs (bad) mov cmp test xchg in and mov and sub sub jge gs ret mov fnsave (bad) cwtl es xchg cli inc clc leave sub dec dec stos or dec mov jle stos int3 pop jge subb jae lcall or cltd loopne mov cmp (bad) icebp inc lea mov addr16 cmp push jnp xchg int mov jmp sti imul dec dec test lods ret push repz sbb js stc inc bound mov fbld (bad) xchg pop pusha movsb mov out je shr add or jmp mov int3 in dec std rolb inc xchg inc rolb xchg imul mov inc gs pop mov mov data16 (bad) push test sti dec add inc aad call cmp sbb sahf cmp cmp adc mov sbb fsubrl mov and outsl lret cwtl inc mov js inc pop out jg xlat in sbb out mov out mov (bad) das xchg xchg ds mov cmp sub jl mov pop sub jge push xchg push popa cld int3 cmpsl and push adc mov or mov pop cltd xchg hlt mov aas dec std out stc int3 xor add test ljmp sub mov je dec adc add push nop es cmc test xchg mov ror cmpsb lcall dec dec in sub test rolb das xor cltd xchg add notb mov es fstpt cmp nop or enter add in leave mov push jae xor pushw cmc or ficom push mov std js xchg into jecxz xchg inc add mov cmp ss stos fbstp and loope popa sbbb jp loopne mov loop pop nop (bad) cmp rcrl pusha lods mov fwait xchg mov push sti push jne sbb pop mov ret mov pop lahf jle dec (bad) or xchg into inc in jne in cmp or dec lahf inc xchg xlat loop hlt sbb add adc pushf cld push dec mov cmp stos scas pusha fs mov ss jmp data16 (bad) aam push sub mov mov inc push (bad) stos sbb ljmp fwait sahf imul jmp addr16 loop popa sbb xchg shll xchg push inc arpl sbb mov and push es sarl adc or xchg jecxz push push sub jle test test jg adc std cli addr16 cmp (bad) (bad) call xchg or push xchg mov pop movl fcoms xor movl mov xchg popf cwtl or aam ror xchg testl dec out dec repnz pusha pusha call inc jae scas pop (bad) xor into adc sbb mov mov inc (bad) fnsave incl test std in imul sbb sub ja insb pop mov push pop sbb and xor sbb jnp int dec sub sub das cli imul and cltd pop pop pop std loope outsb and stos fsubl rolb sub pop and push xchg add push imull das mov ffree outsl mov cltd lret jno pusha mov jg dec aam iret mov (bad) xor (bad) xor adc mov scas aad xchg jo mov call and jno push jo movsl (bad) or lea pminsw jnp movsb lds orb mov ljmp mov sarl out xchg lret fwait cmp into pop jb outsb incb sub icebp fimul push push jge add cmp sti (bad) loop popf pop rcrb in gs cmp pop xchg popa add add adc adc fs lahf mov push push xrelease jb out cmpsl xchg lods jle (bad) jmp inc xchg cmpsb ds jecxz xor jg xchg roll xchg sahf mov mov xchg scas outsl push push scas sahf loopne mov lcall call jp (bad) fcomps sbb test movhps mov (bad) cli cmp mov jno inc in or ja pushw outsl in dec rclb (bad) into sar rcl pop loope cmpb mov xor pop stc push pop call jecxz push test push or imul jl mulb inc ret (bad) cs pop jae and pop int xor cmp dec mov aad jmp and sbb dec fcoms outsb add (bad) aaa aad repz aam stos adc add cmp push push adc mov inc ljmp pop fnstsw mov cwtl int3 inc and mov mov in push and xchg shrb jp xor dec das mov loopne dec mov and hlt xor daa lcall bound push add adc mov loop (bad) cmp sub push fcmovb push int3 cmp cmpsb sub mov mulb xor adc jb mov popf lret jae jecxz shrb aas sub jb jo loopne lea test or sub xchg jl jbe andb icebp and (bad) ret in outsb push leave xor sbb jne cmp mov out dec adc ljmp lcall sbb jo mov (bad) mov inc adc es jmp test or subl das ret pop roll nop out cmp repnz jae adc stc std iret into cmp loop push loopne jmp push jmp push pop pop repnz dec inc ret dec mov call pop cmp imul (bad) decb mov sub cltd aas add (bad) dec cmp cwtl mov into mov push cmp clc push jle and imulb int mov pushf sbb cmp scas arpl fild pop (bad) dec mov add sbb outsb hlt shl sub addr16 cmc cmp inc scas cli imul test add or pushf jo call fwait mov push or mov mov imul (bad) mov mov imul lsl sti mov (bad) rcll outsb lea stos mov in xchg movsb mov push pop push mov outsb subb mov xor sub rorb jp xor stos aas in inc mov in rclb add imul push adc add mov out sbb mov cmp popf call mov sbb out pop adc cmp aam jg fcomi es loopne lock and jge sbb repnz push cmp or cmp jle stos mov mov (bad) xor js and jne pop mov popa and ret add (bad) cmc xor mov mov (bad) jb fbstp sub enter adc test shrb push cmp fs das pop call sub and das jne mov imul into stos ret repnz inc mov sbb leave cli mov je add js mov rdtsc xor mov mov push lods (bad) lret (bad) mov bound mov cmc mov imul aam lock or rol inc mov mov adc lods sarb sub sub imul pop mov jp out or sar pusha xlat cmp inc xor aas ss bound inc sahf bound in jecxz cmp xor dec ljmp xchg sub inc hlt icebp mov sar lret aad sub test lea cmc enter les (bad) daa cmpl push in in inc nop cmc aam or mov and mov or scas dec lcall out push jp cmp pop lods adc rcll xchg or dec movsb movsl divb aam fstpl leave pop and jbe cmp pop mov movsb jle pop push popf add jnp push jmp arpl cmpsb cwtl xorb mov sahf lret pop cmc cld inc add mov adc (bad) jo mov negl fcompl xchg out repnz cmp (bad) popf nop adcl icebp pop pusha jmp (bad) std push lret jae jp lods mov cli or push (bad) or mov loop icebp pop push dec or add cmp add out cli (bad) scas push mov movsl adc lcall ja rclb pop adc inc jbe cld dec arpl inc arpl adc rorl xor sti mov ret and push jae inc push jo sub adc bound adc mov repz imul jnp pop aas mov repnz xlat jle gs push ja (bad) dec bound (bad) xor lea repnz fs mov sbb pop cmp fs ret mov and rcrb test xchg cs pop xor adc push insl lret out xchg and add mov (bad) mov inc (bad) fidivr cmpsb cmp jne je sub cli and pushf fldl negl mov popl xchg pusha inc (bad) fwait inc inc add jmp push lcall dec mov shrl xchg jnp arpl add mov test sbb fist mov push xor xchg test jge sub shl cmp mov xchg gs stos sbb aaa rcll pop adc ljmp (bad) stos (bad) or mov mov jle (bad) dec adc cld sub add cmp add insb nop or inc int3 daa adc and lahf repnz mov cmc pop push inc or xchg push xchg dec cmp add test mov sub mov imul and jns leave cmp fimull ja into sbb (bad) add iret out ficomp fdivl xor push lahf mov lcall and cmp cmp sbb adc (bad) lods xchg ja xor (bad) ja sbb cmp push ja es sarl adc and mov lods lret xor sub loopne xchg dec int3 iret insl mov fisubrl or or cmpsl xor jp push dec cli push pop sub outsb out ljmp sbb push cltd jle and (bad) add data16 aaa fstpl mov insl nop mov arpl and sub or add test arpl mov cmc jge aaa mov das cwtl push pop add test popa clc pushf push dec mov or ret frstor scas add and in ds inc sub dec iret cwtl pop mov out dec arpl popa (bad) xchg or fwait add fs ds hlt xchg cld and out pop js pusha jne scas pop jge lret cwtl mov in push lods mov lret push xchg inc test push pop adc push ja jbe jmp push xor and cmp add ss imul mov pop popf cmp cmpl jl sbb mov iret xor or xor imul stos xor xchg je loope cmpsb loope,pn mov cmp lds fcom inc jecxz movsb test jecxz fidivl mov hlt mov pop xchg lcall scas pop jne push cwtl ja cmc and jmp cltd mov int3 cld test insl xor pop cmc jg pushf test ja mov push bound outsl popa movsl data16 jg or lcall nop inc cmp lock xchg push nop out add sbb jno xchg xor mov push cld xor cmc xor add mov sub cmc pop test jecxz pop mov nop mov sbb push gs push mov loope jns dec insb inc and xchg hlt addb bound fstpl pop inc in mov pop rcr sahf sub les ja xchg aad jns mov lea push mov xlat mov movsb pusha inc adc incl push movsb ret xchg mov xchg cmp xchg out push pop push mov cmp rclb pop and sub lret stos movsb (bad) xor (bad) sub add xor or push mov and into jae icebp or lock cld push test ds or pop mov in mov jge add psllw fsubs inc (bad) enter orb and mov imul mov dec (bad) jmp inc mov aaa stos cmp out jp sbb push repz cmc xchg mov fld cltd xchg sarl xchg int popa inc xor mov and jbe jge mov add stc jo sub and pusha cmp add fcompl hlt ss aam (bad) daa decl arpl cmpsb test xchg jno sarl push (bad) adc pop nop xchg repnz test jnp cli xor adc mov sub test mov mov inc mov test aam sbb push je inc sahf or leave sbb push pop pop add xchg push pusha sub add sahf int les mov mov lret xchg mov enter sub out or fbld lds je and test cmp movsl jae adc push (bad) cmc enter fildl mov cmc jbe insb movsl and jecxz ret sub push xchg dec ds jnp xlat fcmovnu mov xor xchg dec ret lcall pushf xchg aam (bad) pop fucomi sbb std test je repz lds inc pop sbb push rolb lds cmc jb test mov inc push stos pop pop jae lea or mov cmpsb in adc cmp jmp sub scas sub inc cmc test test mov xlat mov andb sub add push and loop movsb out jno xchg ret mov jae (bad) shl clc (bad) fwait xlat xor lock (bad) pop std dec lahf add div jo jo insb push mov js hlt jle add inc pop cmp pop int jo into push outsl inc sbb xlat xchg mov rclb pop sbb iret mov insl fnop popa pusha xor dec xor push fcompl inc das orl sub pop or out fucomip push cmp adc (bad) push pop adc idivb (bad) push gs out cltd pop add xchg xchg cmp inc sahf ret ljmp lret push jp scas in mov (bad) repnz cwtl inc xchg into mov and adc stc mov add push sbb ljmp ja lar iret rcl scas outsb dec int (bad) dec shlb push movsl sub sub adc mov aaa imul (bad) sbb sbb movsb push (bad) xchg cld jbe sub hlt je sbb dec dec cmpl inc movsl (bad) sub cmpsl mov sbb imul pop gs in mov testb out adc aam loop scas jno pop lds adcl inc fbstp xchg push xor xchg imul mov pop sbb cmpsl push iret jecxz inc mov (bad) mov stos add popf daa shrl and in ds cli xor or std repnz test inc shl push ja mov andb not dec mov lahf fwait js sbb xchg xchg mov popa mov insl das push cmp repz out adc lea jecxz mov dec push (bad) xchg lcall inc cmp inc sahf mov lds (bad) jb jmp pop (bad) jle addr16 sbb (bad) xchg iret ret sub mov push incb mov push push out int fdivs sub aas insb mov jne repz fidiv cmp and ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg arpl iret dec into jno jo pop sub fidivrl or xor lcall js fistp aaa mov jne xor jae das fsts xchg (bad) cmpsb loopne decl gs icebp inc movsl int3 sbb pop adc dec mov inc mov insb jmp lea imulb inc addl cmpsl lock in ds dec push js xor xchg jge daa dec aad inc sbbl cld gs in ljmp cmp fcompp jb insb cmp jae xchg sarl jbe fild jl icebp xor or inc pop xsha256 cmpsb aad lret jnp adc gs (bad) popa or inc cs add stc orl icebp mov pop mov jno push mov dec dec in icebp sbb xor (bad) jge mov mov add dec mov iret sub lcall sbb xor pop inc adc jbe mov ljmp lds rcrb sbb add repnz inc mov adc add xor shrb insl sbb es test pop cltd jmp mov sub or push jb fstpl mov daa mov xlat out pushl inc insl pop mov mov push ds add jns fdivrl cmc ret adc out xchg jno shlb sbb adc (bad) rcrl sarb mov outsl inc push flds xor inc fldt jp pusha fs jmp dec roll cld push repz cmpb out scas dec sbb nop test jle add sub mov push mov jp jle,pn scas mov mov and jmp jbe dec sbb arpl mov ja scas sub xchg jmp movsb adc mov sbb xchg test out int3 and lret sbbl pop xor add mov popf lret stos adc aaa mov xchg jg (bad) call xor sbbl mov and cmc sbb arpl and lods pop cmp xor stos bound xchg fbld xchg lret sub pop out cmp (bad) cmc inc es and mov aam add in mov rolb orb push push jo in scas (bad) jo jo or out push leave imul sub jl mov in pop xchg addr16 test pop std das push mov mov andb cmp push mov push mov dec jp cmpsb jp add (bad) (bad) jmp jle jne cmp jmp test idivl cmc mov mov stos bndldx nop cltd mov sub or xchg movb dec out fbstp mov or cmp lods pop mov stc imul int3 push bound scas popa sbbb inc rcrb push dec out add (bad) jecxz push jb repz sbb (bad) sub mov imul xrelease jno cwtl push fstpl gs in bound lods (bad) cwtl inc in xor mov lods fwait inc enter loopne hlt xchg loop pop pop rcrb or daa jg sahf not iret sub das and lods addl mov mov ficom adc lds out mov or inc cwtl pop sub out out mov ja xor dec add sar data16 mov sbb jae sub mov inc (bad) (bad) inc mov sbb mov push fnsave (bad) mov stc cmpsl sar fwait jo outsb sub sub lods sbb lock call lahf xlat rcrl into fcoml lock mov add push pop (bad) ja sub jmp sbb fs dec (bad) cli mov jl mov hlt or mov or (bad) pop imul enter outsl push outsl out jle ljmpw jecxz in xor sub mov xchg loope rol lods fdivl and inc out fiaddl push dec jle pop xchg ds push jbe mov imul ss aas loop pop inc mov pop repnz cltd nop dec pop jp mov cmp cmp inc jb ror cmp fmul ljmp xchg addr16 lea stos push adc pop adc mov xchg jge outsl test jp xchg dec add arpl stos dec das inc ss mov xor mov dec jge cmp ret xor pop repnz nop add mov sbb (bad) jge hlt xchg movsb mov push pop adc enter stc adc ljmp mov cmp push mov stos sub or bound (bad) pop push ds test rcll xchg lret fld ret jp xchg mov rcll push push out push cmp scas push push add test lcall jg sarb (bad) jmp inc push sub adc or mov (bad) adc ficom outsl popa fimul popa sbb jl mov dec fmul xor movsb hlt jg cmpsl add xor push xchg ret jns xor and scas mov ret rclb jb fistpll mov lahf mov push xchg mov mov mov or sbb sub xor lret faddl loope ds inc lahf mov push pop adc dec sarb rep pop mov scas sti test jecxz mov sahf fdivr test jno xlat jne aas daa (bad) mov and adc sub jg (bad) shll xor arpl repnz test jae pop dec or int aaa faddl inc pop add ss lods repnz pop cmpsb sbb dec (bad) sub (bad) mov sbbb add cld bound cmp stc dec nop xchg push addr16 cmp lock and ss es push mov mov fildll int3 xchg xchg cmpsb pop xlat xchg mov ret push iret inc jl dec mov hlt pusha add jb shrl stc push (bad) jae sbb dec xor pop push jae mov mov mov adc loopne xchg xor pop out mov jl sbb mov lcall mov inc outsb adc jl mov push out out pop test jno out add mov mov or cltd movsl xchg push inc mov aas xchg mov push dec cmp lock mov push in ljmp pop bound sub icebp sahf negb mov repz push pop imul insb ret es dec in xor mov add jp cmpsl push pop test xchg rorl xchg out inc dec into mov insl fldcw rol xchg rolb pop mov xor xor mov inc dec cltd call and in stos push fcoml pop mov popf loopne call les xchg test out and pop mulb das cmp (bad) cs inc (bad) bnd pop out loop adc mov (bad) jl or push (bad) mov pop lcall cmpsb mov mov and addr16 add sbb mov scas or or mov ja xor movsl es cltd jge fsts push int3 cmp mov mov mov test aam pop push jbe and repnz in add ret or sub jae add add xor insb rorb push stos fisubr dec inc int add jns imul push insb fistpl sbb call xchg insl xor cmp xor sub mov orl inc mov add rorb xchg xor adc xchg nop (bad) xor mov (bad) aaa mov xor leave add mov mov pop pop out test cmc fistpll xor mov je pop insl xchg adc mov and cli sub dec fsubl mov cmp cmpsl ds in scas ja rol sbb cmp loop outsb mov mov adc push mov (bad) (bad) mulb leave dec arpl mov mov das rcrb fldcw das bound repz cld jmp test dec xor pop adc mov mov sbb jns adc test mov lea push xchg mov xor add daa dec int3 sti adc adc push repnz inc in outsl lds sbb lret es inc sahf mov movsl nop imul out lds pop mov add (bad) add pushf dec jecxz out jae mov sub cmp scas jns adc cmp sub push movsl push mov retw bound adc std cmp mov popf push cltd xchg cmpsl hlt fsubrp dec fcoms jecxz repnz das sbb inc jnp mov cmp (bad) sbb jmp (bad) cmpsl aaa js ret out inc lods xchg jg cmp movsb int (bad) jecxz push mov inc xor jno cld inc imul divl clc add sub out mov jae mov xchg rcll jno sti addl push add jo into sti cmp push push nop adc mov shll stos insb in movntq out popa sar (bad) or inc adc xor xchg sbb mov popa int3 fsubl clc enter int3 test push add (bad) jo repz jbe dec arpl jb mov icebp mov cmp insl clc push pop mov popa adc mov mov inc in lock push lret arpl add xchg mov mov mov pop imul push paddusw xor xchg notb clc add dec pop jle sub xor lcall lret rcll sti xlat mov (bad) enter cmp fstl sbb out mov leave mov arpl gs inc repnz mov adc test hlt mov shlb popa test push pusha dec push sbb push xor push (bad) movsl dec stos cmp pop xchg add cld mov es imull cmp dec dec inc stc insb sbbl (bad) jnp lahf lcall inc jge sub aam fisttp clc mov mov xchg fidivl or or add jns call mov mov add pop pop sub ret jns je rcrb scas lea (bad) jae movsl test out loope pop lret stos xlat adc cmp rcrl aaa mov fisttpll fcmovne shrl pop fwait (bad) sbb mov add xchg std dec mov mov adc dec ret insl js or out pop mov jecxz push jnp mov imul push scas test xor ja cltd pop mov cmpsl jecxz movsb test add xchg mov inc mov daa dec or mov movl lods ret mov or or loopne and push adc pushf xor rorb dec mov daa fcomip cltd out sbb dec mov lcall mov add lcall loop add mov mov mov jbe mov jo xchg (bad) xchg inc into push shlb jp loop cmp cmpsl mov adc aaa jno lods sbb clc pop (bad) out iret add pop (bad) xchg xchg into sbb mov (bad) in mov push inc pop aaa (bad) pop subps inc dec add test dec jp addr16 in push rcrb outsl addr16 pushf push js pop cmp jg and xchg push fs mov mov xchg test sti les or cld js mov (bad) pop xchg (bad) cmp ds arpl rol imul movsl jmp and bound movsb out lods pop xchg or mov fcmovnb lods loope cli push pop scas inc adc rorb cmp lret pop sub daa mov aad cmp pop and dec add mov lret nop je arpl push push sbb int3 scas addr16 pop pop (bad) out add mov mov movsb test faddl mov faddl cmp cmp lret add fwait pop mov dec insb loope jo loop aaa subl sub outsb das add adc aad dec ds movsl sub je ljmp jg orl cmpsb mov call pop repnz xchg js push mov loope adc mov lods cmp (bad) rcll adc fildl sbb dec ret repnz (bad) int3 lods add inc daa cmp imul lahf jge jbe movsb std (bad) (bad) dec js ljmp call stc ja push add aam in (bad) pushf xor loopne jge cmp lock jecxz sbb sti shll inc xchg or test and mov es out xchg inc jae cltd repnz jo fst cmp mov mov xorb outsl push and and ljmp clc fiaddl sub xchg das mov popf pushf adc ja jo movsb pop mov and pop xchg pop idivl daa in loop xchg xchg (bad) sbb ss fs loopne out mov aam bound mov pop push pop cmp sar subb sub mov into jns xchg xor hlt scas jle dec mov (bad) pushf (bad) pusha pop lret test push cmpsl fldt mov inc repnz adc iret movsb xchg jno ja sub lds sarl mov cltd add mov push cld lock xchg lea cmc cs inc sbb imul call daa mov ss push adc insl push into and xchg push push fimull ror pop loope mov insl rcll js int3 cmpsb jg and mov clc imul push hlt jns xor pop jbe push cmp iret inc xor data16 pop inc fwait ljmp dec lcall mov dec and dec mov lds jmp and (bad) mov fs in inc arpl popf inc orl ljmp pusha testb mov mov gs cs cltd sub xadd cmp (bad) jno mov les adc (bad) cli push pushf stos push sub xor sahf outsb add inc push adc ror adc ret outsl aaa (bad) and xchg dec cmp jle and bound call js sti push pushf xchg outsb push dec ret sbb cli push jl mov cmp das xor dec push icebp jecxz or mov decl mov mov iret call sbb dec mov xor xchg pop inc fstpl add cmp inc add lods mov adc xchg lea add inc in data16 cli stc pop shrl add (bad) and xchg jb or adc push add or pop lea out call (bad) jo fstl lock and das push js dec (bad) and push or mov or es stos test (bad) xor test dec pop movsl adc xor sbb cmp or nop add mov mov jecxz les mov ljmp into into adc sub jo lods sub lret stos ss (bad) ss xorl mov jl cld popa push aaa jl and fwait jb xchg mov daa add call inc pop ljmp mov cmp pop xchg push and mov push or bound stc xor mov in fidivr sar nop inc data16 je pop cmpsl xlat mov mov inc or outsb loop mov sbb xchg xor imul sub in mov inc inc xchg dec sbb adc push aaa mov frstor or addl (bad) dec add outsl pop stos into mov iret mov xchg notb (bad) fisttpl aad scas mov out outsl push jl daa ficoml mov jno sahf test in daa inc add mov arpl movsb lock pop mov add pop xchg jns pop fisttp fisttpl mov fdivrs sbb adc test stc repnz in sub jecxz sub cmpsb sub pcmpeqb clc movsl add dec push pop or inc or xor loop stos push add jae jecxz cmp lds add jno mov inc loope sbb stos mov sub mov push hlt (bad) push jnp and or rcll dec rolb mov or inc adc mov jnp xchg inc mov sbb push aaa movsl push mov cld daa loop imul lret pusha lods pop jae shr add pop pop or movsl sub push lea call inc ja fsubl pop ja jnp sub out out jg add stos adc xor jecxz jmp push popa dec fwait or mov cmp in cmp jbe arpl and pop imul jl xchg bound and sahf cmpsl leave imul data16 add xchg (bad) mov or xchg sub mov js pop cli pop mov jnp repnz jg fadds or xchg pop jle or dec xor mov cli clc pusha (bad) fs int3 cs sahf out mov sahf xchg and ljmp into (bad) repnz or gs adc push test or add mov (bad) loope adc lods push mov insl fsubrl repz icebp flds movsb aam or dec test leave lret dec push out mov xchg mov adcl mov js ja jmp xlat js int sub sbb fcomps adc in test jno arpl leave outsl nop cwtl inc jne push dec push loopne cld dec aad outsl adc push aad in mov rcr loopne repz push sub pop jp push inc and insl and stos cmp int3 stos push mov sti cmp sti cmp xchg mov cmp imul sub cmpsl sub jmp jbe jge es add test ret push sbb mov lret cmpl repz and jle lea dec mov cmp in pop add sub sbb push sub sarb popa lods std or notl (bad) jmp movsb and cli inc pushf inc jmp ror xorl scas repz test loop xchg mov sbb mov movl jb into into and mov insl xchg aas mov dec lods mov imul fidivr add mov mov push fwait cmp sbb or jae imul aas fidivrl push xor ljmp pusha sub int3 add mov loope sbbl inc jbe into dec mov jl fcoml int3 and loop cli push hlt mov pop and (bad) insb idivb and jmp enter es pop scas lods jge sarb scas (bad) stc jo sub dec jl addr16 pop adc push loopne or inc fwait mov add sahf test add sti cwtl adcl xchg mov roll fwait sti lahf xchg add sbb mov jb repnz pop cmp mov jp ja inc pop lds pop (bad) jmp adc sbb xchg lahf mov xor mov arpl loop cmp (bad) xor loop mov inc xchg loopne inc stc out outsb dec push mov fiaddl mov mov inc push das add mov ja roll out add sub xor cmp in pop push push pop jno ljmp ds aad inc in mov insb outsb and pop or cld fprem1 push aad jno and dec xchg ret repnz sub jmp or pop icebp jae adc out cmc data16 mov stos add test mov stc mov jae pop xor or mov jno xor push mov cmp sbb or sbb xor je inc test cs adc aam inc lods and xchg inc cmp pushf push adc popa cmp inc test cmpsb test mov idivb lret xor cmp in xchg add ror in cltd xchg pop out in pop pop xor or pop outsb rcrl imul movsl in xlat fsubrl aaa xor sbb and rcrb jecxz add test pusha push push or cmp xchg lret test add adc nop in nop mov incb movsl sub pushf xor or pusha lds cmp inc inc pop fistp inc repnz mov xchg movsl loop sbb push lret out and leave loopne pop mov movsb sub test fdivs xlat into pop clc ret xchg mov pop pop lret andl je inc movnti mov std sbb mov jno (bad) cmp push enter js push xor add add mov push xchg jl leave cltd pop cwtl add in mov sbb xlat fstl js clc dec aad (bad) notb inc sbb sub inc mov sti sarb mov push add mov mov arpl sbb xchg sbb mov mov ret add inc or add cli sti mov fdivrl sbb into and jmp rcrl fbld rorb xlat rcr (bad) jle popf or es daa mov cwtl ljmp sbb out clc dec add push lea test lea inc dec sbb or in insl enter lahf std movsb sbb jp add imul mov cld test subb jno sbb xor lret call rcl jge mov fsubr movl inc rclb sbb out ss call imul ljmp inc or mov imul xchg mov (bad) jo (bad) mov dec inc lcall cmp mov mov (bad) pop test cwtl and pop and ret ficoml aad mov dec rolb adc loopne lock testl xor and adc dec scas sub or push clc (bad) dec jle xchg mov dec xchg dec fcmovne fwait out cmc dec inc add clc cmpsb or jmp xlat cltd lret lock pop mov cmp sub lods int jp mov sbb and fcos les mov int lcall mov aas inc add dec sbb dec add (bad) mov addr16 lret icebp movsb in movsl mov xor dec xlat std push xor (bad) lret fimull push adc cmp xchg sub pop roll mov iret and rolb test inc sub xor jp repnz pop pop stos xchg aaa les push inc call notl push int mov mov ljmp test ljmp push ds mov ffree aad mov popf outsb cld mov lods mov sbb jb xchg sub sahf imul addr16 and outsl cmpsb (bad) adc insb mov push stos add cmp movsb or iret push outsb shr jmp mov into mov cmpsl jo cli fisttpl jnp cmc pop leave push pop mov fiadd into bound sbb and dec xchg dec inc jo xchg incl call add jge pop jnp (bad) mov (bad) and pop call adc (bad) in add scas sub and or mov dec into iret mov xor mov (bad) stc popf cmp sub mov adc mov shr mov add add jno aad adc ds xor fwait jne sub jno or pop leave sbb bound inc lahf out sbb call jmp push cmp aas and add sti add adc sti scas mov adc mov push pop mov stos jmp popf enter mov adc push ja clc test repnz lcall sbb cld dec imul push and or jge (bad) int popa bound decl in es mov pop iret add mov in xor ja sbb lahf and mov addr16 lea jle js mov or and dec mov loopne xlat addr16 xchg insl adc iret or (bad) adc incb sbb imul loopne nopl sub mov into cmp dec fnsave out fistl lahf pushf shrl mov jg test push mov jg mov jbe cmp pop pop jmp outsl push test (bad) jae mov jecxz jge fstps loopne mov sbb sbb inc push mov xor pop mov dec xor cmp sbb and ret dec jecxz scas lcall test mov out mov jp lret in ds jge clc scas push xor loopne ja gs mov mov inc pushf dec xor xor push into sbb cmp jae es adc dec loopne jmp aad jp fildll shr ljmp test cmp test mov mov ret and sbb fwait jno sbb inc cmp jg popa in out cmpsl pop jecxz test (bad) in popa push fisub and cmp out and xchg xor and inc das mov outsl lahf ljmp std mov mov xor cld repnz outsl arpl test roll inc sbb mov xlat test loope out test dec loop mov adc or pushf cmp fimul ljmp push fldt push inc (bad) repz cmp in cwtl dec rol or sub roll cmpsl push sub jne mov xchg call ja push push xchg pop mov sbb mov or sbb imul jnp movsb lock lds loop ljmp stos imul (bad) rol or jno xor pop ja or ljmp pop div mov xor jl dec mov and popf or lea cmp lods mov je inc xor out dec jbe push xor inc insb push jbe ret jmp push (bad) out push in test sbb fmuls popa repz insl movsb dec clc insb gs loopne adc (bad) jmp je mov cli lahf movb xchg stos test push nop mov daa orb mov loop jle adc push push testl jns or popf out adc (bad) and push cs inc mov loopne add jmp mov (bad) fisub imul push pop sub jp mov sbb daa mov sti xchg int3 pop iret decl gs aas cmpsl hlt ja mov iret mov into test mov daa add add es les cmp adc lods cmp inc cmp cmp xor mov movsl incl hlt mov push mov aam fdivl sub mov push mov das imul subb outsb jmp mov mov in jle (bad) cmp xorl mov ss insl adc pop repz insb out xchg data16 mov adc xchg xchg xchg cmp (bad) jl mov add and ja jge sbb mov std mov (bad) jo mov dec (bad) xchg inc jb pop rcll cmpb add jnp mov sbb testb out insb stc jg inc lods fst mov gs cs (bad) cs sbb adc sbb sub cmp push out scas cld in sbb mov sub cmpsl imul mov inc pop push (bad) stos in jnp lods stos aad pop and movsl lods aaa out clc hlt cmp cmpsl gs mov adc mov cmp cwtl jp pop cwtl cwtl mov jl or xor lret push xor nop cmpsb xchg out xchg (bad) ljmp or inc adc mov and insl data16 lods int3 add pop cmp inc mov mov (bad) or push es insl adc stc cmpsl fwait out pushf sbb std test inc cmp popf sti insl xlat lock sbb cmp pop cs jb imul sub loopne or (bad) push jecxz add pop scas test or unpcklps cld int or jbe jae lea mov out mull or nop movsl sub stos xchg (bad) xor xchg loop xor xor jl enter daa cmpsb aaa xchg pop (bad) in pop es pop dec (bad) pop adc sub insl ficompl ja decb roll jmp gs hlt cs add scas cmp sarb pop push xor or fisttpl jmp pushf mov lea xor sbb lds mov mov mov sub push push sbb lret test std in adcl add adc in out or mov mov sahf shlb sbb nop xchg (bad) shlb xor cmp mov sub mov cltd test lods (bad) xchg or add mov (bad) cmp inc mov popa or sbb jecxz xchg push outsl sbb fbld (bad) or pop adc pop sar push sbb sub mov icebp ja ja dec cmp lods xchg repz sub int cwtl aas (bad) ja gs jns pop clc fdiv sbb xchg push mov sti (bad) mov outsb lods mov cmp mov nop lods sub mov or sbb dec adc loop xchg cwtl lret (bad) cmp push add fsubrl stos push in out push mov inc pop sbb movsl push jecxz leave pop ds int add outsl and inc xchg lods popf sarb mov sub (bad) jge jmp cmpsl add sbb sbb jns (bad) (bad) cwtl lods adc and aam mov jle out (bad) das int3 xchg or aad movsb into add jne outsl fstl jp xchg imul fs shrl pop fsts loop jp xchg enter insb ss lret pop pop popf (bad) cs cld pop add enter dec (bad) repnz cmc inc sbb hlt xchg clc add adc roll xor xor lea sarb ud2 (bad) sub das cwtl xchg dec adc xor push push clc mov dec imul xor in fidivl (bad) enter out aaa test cmp or cltd cwtl xchg sub adc mul add cmp mov notl jmp mov orl ficompl add mov into adc mov xlat out jecxz pop and in addr16 add pop jmp push lea add lret cwtl inc dec popf push mov or out (bad) mov jae pop xchg sub lahf (bad) neg cltd outsl inc mov (bad) push and repz imul jp stc fmull je and mov jg add jbe arpl xor sti sub push or push daa les mov push movsb mov push cmp push pop jecxz cmpsb adc out mov insb hlt lret mov mov fmuls adc test stc adc mov mov adc mov xor clc jno or mov call mull dec jge xchg mov rol pop sbb ror sub lock sbb ret push push fisubr and movsb mov insb daa (bad) mov ror negb bound ret andb pop mov add in mov std or shl sbb cmp lea pop in push push xchg mov push xchg nop ret idivl and pop stos testl lea jbe sbb or cmp xchg pop cmp mov pop or push cmpsl or inc dec test (bad) pop add jae mov cli mov out dec jae pop sub push loopne cs sbb sti outsl adc nop cmpsb mov dec addl decl test enter incb cmc xchg (bad) cmp sti push xchg lods fwait xchg repnz jl leave xor sub fnsave andl lret push mov loopne les movsb ret cli scas push jecxz repz (bad) out jo comiss lahf xorl mov subps xchg xchg jge int lret push cs dec sub (bad) stos adc and push lret scas dec in sub dec inc pop add lea mov mov inc pop ret aam xor mov xchg (bad) dec (bad) lret insl cli pop (bad) cmp mov (bad) dec mov repz sub and bound mov jne stos pop (bad) xor outsb mov dec imul jle mov out xchg outsl sub (bad) mov outsl cmp add call idivb pop dec pop test je out sub inc mov loope sbb sub loop insb pop in stc ret pop cli loope jmp xchg inc xchg sbb sub mov lods or inc jg (bad) pop test adc and sub or sbb ja sub pop and dec pop xchg push rclb (bad) in xchg popf push lods leave in or lock and lret in mov es out aad xchg dec cmpsb test repz xor cmp outsb outsl pop adc inc lock push or pop shrl je fxtract test sbb in mov sub and and aas dec xchg clc aad sahf test cli or push jae popf and int xchg add xor lds inc mov sbb adc sbb mov hlt movsl mov inc inc insl or and xchg inc mov in sahf jbe stc cld jne add inc orl sbb fs push iret aad mov (bad) mov jecxz xchg pushf push mov jo jl push mov lods in in sub xlat aam xchg lods xchg mov movsl shrb jle mov (bad) outsb out sub jbe mov push (bad) scas push movsl out in mov popf xchg push add sti sahf mov inc mov xchg mov push mov inc or scas cmc cmp mov inc jno jp loop leave cmp in out or pop cmp jmp idivl int xor jmp lds or ss popf mov test dec in mov loop push jne data16 add jl cmp cs mov push jmp mov (bad) jne cltd pop repz mul pushf dec pop or stos mov jle repnz sub pop jns pop sub movsb or (bad) cwtl jns rcrb in fstl jo movsl mov fwait (bad) jmp (bad) jo lret loope add adc mov idivb mov xchg int3 jb out test rolb pop push mov fsubs pop mov mov test ret mov pop jecxz or hlt out dec dec and xchg out or stc mov lods xor cmc scas or sbb cmp scas mov mov pop mov pop push shrl imul test xor push pop les ljmp jbe (bad) je xor and jle jno cmp not adc hlt and lds xor mov les sbb and sti lret add mov jb in nop pop mov xlat rcrb jo push je lahf sub iret leave dec or and bound mov cmp sbb lods iret fwait xchg mov fldenv dec sub data16 cwtl add dec push jbe sbb pop xor scas jecxz fstl or adc xchg lds ret test or add lock mov push imul movsb dec mov cli popf sub mov cmp sbbb das dec inc or ret push (bad) or cmp lds mov cs (bad) and les lock rcrl cmpsb (bad) lret mov cmp mov pop (bad) jne mov std fcomi out jge popa or setns pop push cld movsl inc hlt or lret je mov push sbb aad mov push js cli inc cmp aas enter inc add pop add hlt mov adc mov mov movsb sub mov je (bad) xchg push fistpl mov mov int3 jne dec les or call hlt (bad) test popa js out dec data16 lea ret or mov sub xor adc enter clc add mov pop dec pop mov jbe mov out xchg mov inc popf shll cmc pop addr16 and popa or sbb lods call pusha (bad) (bad) xchg fldl xchg arpl js sbb push xlat fs adc mov std test je enter xchg lods jmp xchg jo mov cmp aas cmpsb cmp adc movsl (bad) sar mov pop dec and js and mov sub (bad) imul adc test lcall cltd mov lea lcall xor lods jbe dec les test and push jbe mov push pusha push in lods mov divb bnd jo mov fsts clc clc sub mov and insl sbb outsb or (bad) inc sub icebp push rcrb mov and leave xchg cmpsb js inc xchg neg sbb loop jbe fsubr xor mov sbb clc mov pop imul js ror xor fwait inc pop stc rep pop jecxz in addr16 jno dec inc xor loope fbstp jle sbb push repnz (bad) ljmp inc icebp jbe push and orl pop push push mov push (bad) into xor fwait mov hlt adc dec loopne jb jne mov xchg add push in clc lahf lcall into add xchg cmp mov fidivrl and sub inc mov push or push mov rorl push arpl push cmp pop inc out lds lcall rolb push sub call push mov cltd jmp stc mov pusha sbb cmpsl jp xchg (bad) sbb inc fldcw aas jge ljmp dec mov or add jecxz stos adc adc xchg jno adc ljmp mov push xor aam lods push pop movsb dec xchg in mov bound sbb mov jp push push mov and (bad) jne mov stos ss dec (bad) loop inc adc repz stos cmp adc lods xchg dec xor mov into sbb xchg lea out sub scas popa rcrl ja shr (bad) iret pusha xorl mov sub adc stos jmp dec jmp rcrl lock subl orl xor mov and mov cmp push data16 xor or pop cmp or dec pop xor lods jmp fdivrs xchg leave iret mov lcall aam xchg ret in jle jecxz xlat push cmpsb bound mov mov je dec mov adc inc rcll dec sub push jb (bad) mov jae cmc lock cmp push jmp jbe pop jg insb sbb mov sarb jmp jo mov adc iret fscale inc xor push dec aas vminpd lahf mov imul test (bad) ss adc mov repnz and push cwtl icebp push push sbb pop int inc ljmp cmpsl xchg mov and pop std lods mov xlat and push leave mov sbb sbbl cmp data16 pop inc xchg mov jge (bad) or cmpsl imul out dec popf xchg sarl xchg xchg popf mov cmp or add and jns testb cmpsb addl int sarl pop sub xor xor inc jecxz icebp inc pop push fcompl or push dec lods stos jmp sub or pop jnp cmp mov cld outsb pop cmp pop push jl mov sbb ret or daa ds mov inc jno cltd in pop nop mov mov fsubr pop in xor data16 stc cmp lock mov xchg popa std shr test daa mov mov mov das test movsl pop (bad) imul mov in les clc mov lret jge pop inc popa push sbb adc jecxz mov mov or lcall xchg shr xchg xor and pop add push pushf pop sbb inc lret insb ss xchg roll jbe subl ljmp in or push stc sbb mov rol or pop mov jnp stos sbb jo xchg ljmp inc scas test xchg cmp dec fs mov and xchg nop lds mov aad pop shlb push sbb cmpsb sti jecxz icebp jp lods jge call mov dec les xchg push sarb and movsb dec popa mov in (bad) fldl sbb inc aad insb cmc repz push inc aam aam lods test sti fimul or push mov push mov or and jno xchg push lcall outsb inc inc cmp or icebp jbe mov js and or popa sbb hlt pop mov mov pop cld ss mov add jp test testb push pop rcl outsl test nop adc orl mov jmp xchg sbb or sbb test rcr and dec lahf jl mov (bad) call shrb xor lcall addr16 cltd push inc test sbb (bad) cmpsb add fs sbb cmp outsl or inc mov cmp jne mov ljmp xchg jnp cwtl mov imul mov fdivs xchg cmpsb in mov mov (bad) xlat lea inc hlt mov add lea sbb test andl popf sbb sub cmp cwtl call inc push je add dec lods xlat out xchg dec mov rclb or pop loopne enter mov inc mov (bad) xchg test push and mov dec lahf and sahf xchg inc jo hlt (bad) in sbb jmp jnp xchg repz mov dec mov frstor add mov cmpsb push out jns out push adcb nop mov xchg (bad) (bad) mov fs cmp loope popf out std addr16 jns arpl rcrb sub and mov cld cmc ficomp jbe lret scas and fidiv mov or add add mov xchg pop push fistpl push cmp adc sub jmp jne insb test adc jnp in pushf dec push loop mov rclb xchg push mov daa sbb insl test or jbe aad jp xchg jecxz cli call sti mov cmp pop mov cmp js cmc or icebp push (bad) aas push cltd pop testl dec push add lods lret pop lods mov pop add xor mov sub icebp cmp xor imul jge repz ret out repnz xchg das sbb dec movsb sbb add xchg inc dec sti xlat push les xor mov out scas ja std dec mov sub lods jnp cli or jmp adc add mov imul inc and inc test sbb inc arpl loop xchg sbb mov aam pusha add (bad) mov imulb cld jle add and adc clc adc icebp out lret and in icebp sub or out mov das and inc dec cmp call sub movsb pop scas es les sbb (bad) jno xchg lock xchg (bad) shl or add ljmp mov daa pushf xchg jo dec pop repz arpl out mov aaa mov repz fimull push mov push or push lcall fnsave stc jp sti sub in sarb sti fs hlt aad xor lret cs xlat jge popa push mov (bad) out dec pop (bad) jmp lea popf enter xchg pop data16 xlat outsl stos push addr16 outsl push sbb pushf mov loopne stc mov jno push (bad) push imul pop int3 add sbb repz jl inc mov push pop shrb pop jge adc test adc sarb js and pushf (bad) iret push mov insl or outsb test lahf daa sbb cmp inc lea jns sub test imul mov add xchg mov cmp sbb lods cmp loopne mov (bad) incb int3 jp adc mov dec in outsb (bad) stc mov lcallw adc int shrd cmp push inc popa mov addr16 cltd sub sbb scas mov mov fistpl add inc mov inc minps aaa jmp mov sbb idivl aam negl dec outsl add insb lds pop adc xchg sbb mov mov sbb sahf (bad) enter xchg xor fistp or xor or sub xor or sub and lahf and mov stc iret xlat sbb or mov mov imull fidivl and aaa dec pusha mov repnz push pop nop ret aam fimul call xchg mov incl push fwait pushf pop xor loopne fstps fsubl pop pop test inc outsl lahf test sarl xchg daa insb inc lret mov inc push cmp call xor in cmp push test addl test mov inc mov mov aas xchg cmp scas xor scas dec pop or push imul insb dec xchg mov daa repz add shlb stos das sbb or and outsb test or cmpsb sub into repnz mov xor pop xchg ret sbb jmp add cmp ljmp int3 test daa inc bound movsl (bad) repnz enter fidivr mulb xor popf or shrb cmp aaa aam insb cmp (bad) mov mov cmp mov sbbl dec roll out sub adcl cwtl add mov aas inc stc sbb es mov dec pop gs xor ljmp add int3 test cwtl and sbb cmp sbb push and mov push (bad) ja or push lcall lods pop jbe repz daa mov sar in (bad) ss jbe lock inc pop fbld ja push mov jg pusha mov cmpsb xchg (bad) pop dec sub loop aam int3 enter push es enter sbb pop mov lahf add xor lds cltd mov jmp jmp or idivb xor pop sub mov adc mov outsl add movsb xchg push std fisubl inc push mov jle sarb sub (bad) loope fsubs repz or imul add pop movsb stc push pop data16 pop push ljmp add inc push loop,pn inc shll inc lcall mov lahf lret sub mov cmp fcompl lret stos dec scas ss cmp cmpsb (bad) in sbb scas dec pop xlat or pusha push cmpl sahf cmp cmpl (bad) pusha sub push addr16 mov dec mov or shr adc (bad) pop xchg icebp xor sub data16 jp mov mov adc sbb add push xchg mov mov arpl mov cld mov hlt mov sbb repnz repz pop dec push push adc push sbb repnz mov stos mov cmp aam lret and dec imul cmp xor clc out jmp (bad) or mov mov xor xor pusha sbb in dec sbb arpl push fildl adc jnp (bad) test inc add adc out and jne ds sti xchg pop xchg stos jbe add ret mov pop lahf xchg and jbe mov loope call (bad) sub cli pop jae out gs aam xchg (bad) cmp out cmp rorb jns fstpl cmp mov sub (bad) add (bad) icebp in sbb push aaa ja stos dec xchg and out cmpl hlt cli subl cmp cltd fsubrs ja leave fwait xor inc or rorb lds aam lret push pop lods fmull sar jle ret or or data16 sub dec aas stos cmp xor hlt sub dec add fwait adc pop sub mov scas xor (bad) mov in int3 sarb cmp xor popf push scas (bad) gs fmul and flds or rcr mov lret pusha sub jo sbb sbb jae lahf add push fiaddl pop pushf fstl jmp cmp outsb jmp mov stos add stos pop adc (bad) (bad) mov mov cmpsl mov push lret mov push xlat push sub pminsw pop dec or jbe or pusha dec pop sbb lahf decl arpl push lea mov and pop mov pop insl cmpsl cld aam mov xor inc mov fimull sahf (bad) es cs sar xchg test fwait mov out mov movsb cmp (bad) fistpll fisttp gs jb out mov pop clc cwtl das xchg pop jmp js adc mov inc xor in jae es sbb push jle cmp jbe lret adc (bad) fsub mov lock jns mov pop ss mov cmc or push pop mov ljmp movsl aam cmc mov add dec sbb dec mov (bad) (bad) cmp or jo adc jbe mov mov mov (bad) or mov xchg movsl or mov pop add repnz push cwtl inc add lock and ret and (bad) fwait add mov (bad) mov movsl cmp mov pop popf (bad) xor jl (bad) cmpsb addl mov js ljmp fs shl cmp stc mov sbb dec or inc xchg decb push mov imul pop bnd add cmp dec pop dec cwtl jne ja imul cmp inc (bad) int imul das adc mov jl sub lods sbb cmpl lea lods sbb mov icebp popa and jge jae mov lret ret cwtl scas add lret or xchg xlat insl fwait lcall into fnop movsb fisubl jmp icebp mov repnz mov pop mov sub (bad) (bad) into lods cmp in dec sbb push lret fstpl inc prefetch hlt mov (bad) arpl aas jecxz or mov or push cmp data16 xchg and jge loopne mov hlt (bad) adc add pushf mov xchg (bad) dec clc bnd notl adcb pushf pop push sub inc mov lods inc in mov push jns andl sub pop fimull out repnz sub in js pop das dec push mov and ret lret dec add ja sar xchg sbb push int xchg push mov push es das stc decl das mov pusha xchg adc adc dec dec out sbb scas xchg push push imul insb sarb in fwait cmpsl aas in fmul (bad) dec lods dec cli lcall xor pop or adc mov and aaa in mov sub cmpsl sub sbb lret add jmp rorb pop scas mov decl push push fnop hlt dec sub pop dec mov push in mov xor mov test dec stos roll sub into loop adc lret les adc std pusha ret sbb xchg pop dec loope movsb jbe jp aam jne mov push and mov mov inc int3 sti stc icebp jg xor rcrb rorb (bad) repz cmpsl add pop fwait movsl ret push rcrb in stos iret dec adcb xchg push mov notb clc push mov adc hlt sub daa xchg inc loope stos jl xchg pusha mov out loopne jb mov and mov loopne mov popa push and jle pop inc xchg cmp (bad) jp mov js sahf sbb fsubrs xor cmp inc mov adc shlb push inc mov sub xchg push xchg test mov and (bad) icebp jge (bad) pushf and inc dec xchg imul loope push xchg repnz decb sbb jmp mov sbb mov cmp lods mov fsubrl adc pop mov mov or lahf jmp pop call fs inc gs test or dec pop dec in mov fnop cmpsl push jle test jne movsb fxch xor pop cmp lahf adc movsl nop js adc pop pop cmp and or sub push push mov mov push lods int jl clc test in fsubs jbe or inc pushf xchg add adc (bad) pushf movsl pop outsb pushf push inc (bad) and pushf mov hlt cmp int jge jmp mov cs or repz mov dec inc (bad) in mov pop pushf cld test mov cmp dec xchg lea int3 mov mov xor out sahf (bad) dec aad ret imul adc pop push popf jmp les ljmp fsubrl add add mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret xor xchg push mov mov cmp adc loop xor jle pop and mov sbb jle inc push call pop ret das out shlb dec or jp xor push push (bad) aam dec popa mov fidiv out xchg mov jg jmp mov (bad) out adc xor push lods adc aaa ja add push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret push fwait cmp inc jl push clc test test push dec jne mov out jns loop dec mov aaa cmpsl aaa sbb push adc fsubrs lea lcall imul stos mov jge xchg and enter and mov test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out xchg insb jb ljmp dec jo pushf mov fcmovne push testl cltd daa cmp lret sahf xor loopne add rorl push popl dec xchg test mov sbbl xor test lds sar (bad) inc mov call and add and lret dec call test (bad) xor sbb dec push xchg fimull (bad) loop lods or cwtl cld push mov (bad) adc cmp loopne xchg gs dec in aam xor int sbb or sbb xor sub lahf fmuls enter test and ficom subb mov mov or jo xchg int3 push insl cmp push (bad) mov in mov icebp adc loop dec xor cld shlb aam inc dec add pop mov fistl push inc jno ss aaa (bad) dec pop out cmp (bad) cmp dec pop sbb adc cs movsl dec jl xchg cmp lock mov xor add in mov jno xor ret sbb push repnz push mov shrb into idivb movsb cmp dec sarl mov lret inc sub pop fwait out push or ja mov cmp mov cmp int mov push fldt cli lcall inc xor inc inc xor sub fcomp or mov mov fsubrl pop popf sbb out inc movsl add mov ljmp adc sub xor cmp lods add je nop jp insl mov fbld jae ds cmp xor sub pop xchg jns and mov jl inc jae pushf sbb idivb push jne pop push sbb ror xor push or mov xor pop rolb outsl inc (bad) mov push push test dec std imulb sbb adc adc adc or sbb pop fsubs and mov jb dec xchg sbb adc ss push pop xchg nop adc inc mov sbb xlat lock clc xchg aaa lock shl dec out data16 xchg popa mov js pause add mov into sub je xor mov lea roll add sbb out leave adc sbb inc (bad) jo out cmp xchg ljmp gs sbb int3 xchg dec shrl mov orl cmp in or dec popa (bad) sbb and fisttpl jo cmpsb xor sbb icebp xor pusha lods mov loope lock sar push mov add add dec adc rorb xchg aaa add push scas jae (bad) gs xchg pop in lock add jecxz sub (bad) dec push push add test stos xchg mov pop inc and jmp test inc add clc addb punpckldq adc pop or jne in cmp dec aas lcall cmp add mov sub out in cmp mov pushw push (bad) push jmp mov push inc cmp out and ret push mov adc jecxz,pn jl xchg sahf pop pop call and jo imul nop inc mov push call js dec push or pop xchg inc (bad) roll sub pushf movsl inc fisubr icebp or or xor dec dec and and pop dec push aam inc xchg xor incb dec sub fwait imul xchg mov (bad) mov xor push inc in sub fimull ficompl (bad) jge push lods pop nop adc leave js ss sub test outsb je pop pop cmpsl add out lds addr16 js dec lahf add lds in inc cmpsl adc ficompl or stos addr16 fwait or mov adc repz push arpl mov arpl mov in mov mov mov mov jmp idivl fidivr pop enter ds xchg imul xchg repnz mov hlt les sbbb scas sbb pop jo jne stc pushf cmpsl dec add push pop pop repnz (bad) or jne push cli add mov adc in fbstp int3 pop xor dec outsb movsb xchg imul jecxz ss push clc fldt rcl mov shlb popa push icebp popf iret test inc sub cmpsb inc mov and jnp andl subb push ds in sub pop repnz inc xchg xor sub sub lea pop jle in ja jae incl sub jg fimull pop mov push scas (bad) xchg aaa inc testl or (bad) repnz xchg sub mov or pop xor mov in push mov cmpsb push sub clc mov mov movsb aad stos push popf or lea fistl int3 adc aad pushf out jno cmc sub sub cmp fisubrl fst inc and ret rcl cmp sbbl in inc mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 xor xchg push mov imul jbe add aam test adc mov (bad) repz pop sbb push sub out fwait sub jecxz test fisttpl xchg cmc les mov pusha xchg jecxz jmp jmp mov mov dec es outsb lods pop sub icebp mov xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 xor xchg push mov imul jbe add aam test add dec js inc jg fiaddl shlb das (bad) out mov sub pushf dec push xchg dec sahf sub lret sarb js push adc mov inc jmp jmp lret push mov inc pop inc mov outsb in or cmp jge mov jno adc shll push adc mov addr16 mov mov es test sub lds je sbb leave cmc in inc fcompl les sub add iret and and push push mov mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 xor xchg out xchg insb movb test and aas sbb xchg clc jno,pn cs xchg push stos lcall inc cmp movl movl movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 xor and push dec in push cmpsb imul not xlat jecxz mov lret push jge xchg sahf adc xchg aad mov pop mov sti shll fsubs or pop xchg jbe pop scas mov popa sub jbe xchg jge cmp popf xor dec mov or test rcrl sub test cmp dec lds das adc inc mov les out or push xchg fisubl dec sbb mov es sub and add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg xchg (bad) aad frstor sbb adc test pop cltd dec jne mov mov push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 xor xchg out xchg insb addb fcoms xor outsl inc adc jge xor mov or xor sti push xor and ret lods and test lods (bad) out jge xchg movsb scas ffree jecxz ficoml incl cmpsb inc cltd or pop les mov sub ret xchg sub xor pusha and mov dec movsl mov sahf xor ljmp fdivs shrb mov lods rcrl xchg mov adc sub pusha jno sub ja loope mov and adc repz pop cmp stc jge sub (bad) pop xor jno das mov push jbe bound mov mov iret stos cld fiaddl inc cli jge inc pop jae sub popa mov push clc and push aad sbb clc stc cmp jle pop push push insl pop mov subl dec repz leave inc dec mov outsb cmp pop dec push aam scas dec mov adc dec add iret push and cmp lea loopne sarb pop es out sub scas sar cmp inc clc inc call ret push shl xchg cmpsl test cmpsb ud2 aam rorl ljmp sbb bound pop int rcll adc push out pop mov call daa adc adc cmp mov jb sbb mov add inc scas cmp and mov jl cmp push mov std sti xchg sbb or xor push lret cmp fnstenv ljmp jnp push sub mov mov sbb cmp loop (bad) mov call cmp push popa push xchg pop xchg roll test xor push lods pop test pop in out xor push into jge leave adc pop mov daa bound aaa push dec mov cltd adcb mov aam jp and add mov sub mov push data16 repnz xor shr outsb jae (bad) sbb xchg mov mov push sub pop and jmp dec cmpsl icebp subl rcrl mov pop sbb out jnp mov rorb or mov in int3 cmc es lds stos xorb add pop or rdpmc cld in aad rorb js movsb into mov adc imul xor cld fisubrl pop push xor fist sub mov xchg movsb test inc mov lods sbb into int3 lea mov lods mov jg mov inc cmpsl push push movsl pop push mov cld je and dec stos xchg lods imul add mov das lea pop bound dec mov cmp outsb scas sbb lret cmc dec into js je sub push neg (bad) cmc adc int movsl mov test movsb shrl gs into lahf mov (bad) xchg mov shll mov aad cmp push xor dec cmc add testb lret imul int3 into cmp ret loope test mov sbb or ljmp xchg (bad) aam flds sahf aaa xor inc mov sbb imul fiadd xchg call outsl dec xchg jns sbb enter pop sahf leave cmp xor sbb insl mov mov or imul add dec mov xchg sbb mov les out (bad) (bad) pop fsubrl mov loop push popf stos mov mov std stc cli xor fwait dec enter mov shl push add jnp cmpsb and jno lods inc dec shrl push mov xor mov std jle scas jo sbb adc mov ljmp mov andb div adc jo sub fildll add jae sbb popa movsl scas inc sar dec sahf fwait adcl cmp cmpsl push sbb cs mov ret iret imul icebp mov outsb and jae adc mov sbb sahf adc or jge jne shll shrl cwtl les mov fsubr xlat stos (bad) shrl jns fmul xlat push sbb push imul in cmpsb jecxz call xchg out inc sbb sbb (bad) jo sbb fldenv stos (bad) pop repnz add pop cvtps2pd sub adc aam push arpl in gs idivl jnp xchg push call sbb andb push xor (bad) jno inc lea jecxz mov frstor inc dec mov inc cmpsl mov add loopne dec inc mov lcall mov pop xchg push or or jle pop lods sbb pop push rcrl mov mov adc outsb lret sahf xor rcll inc and orl test jno jb ror or je mov mov mov mov out dec xchg mov jb sbb adc mov cli es and xchg sbb pop mov aaa aaa fldl2e ret ret add scas xor hlt imul mov (bad) stc xor inc xlat mov and pop data16 mov pop fs xchg or push adc xor add mov clc (bad) jae mull insb sub and lods mov andb inc or stos mov sub adc sbb fbstp les nop push xchg cmpsb jae and int3 nop ss cmp push cmp inc adc or xacquire sbb outsb add jo repz adc inc dec cmp push and xchg dec outsl orb loopne cld push mov mov jo mov movsb ror aam scas testb insb push xor repnz movmskps dec adcl call fs xor or out faddl inc fs xorb push jns add or mov xor add or cmp lods arpl xchg mov ljmp and sub jbe push js mov inc mov cmpsb into test mov or and jle sarl cmpsl lret push test add jmp rcrb cmp jle fadds ljmp lahf leave adc and mov pop jb in and je data16 dec pop mov imul aam or sbb pop pop dec cmp mov and pop adc or clc aaa aam in and in cltd cs or sbb insb xchg arpl dec hlt mov imul push (bad) jg cmpsb pusha bound idivb (bad) (bad) test enter push fcmove cmp imul adc test add movsb jbe sbb int3 in add xchg sbb pop xor lds xlat dec enter push fwait mov loopne xchg loopne leave adc (bad) rolb testb cmpsb hlt fisttpl mov push call les hlt pushl das lds jg (bad) jle pop repnz add jae loop and mov test js jbe add and adc testb out ja lods xchg lahf lahf lock popa cwtl dec pop call pop or loop mov movsb (bad) daa dec mov and rcrb stc test fldl (bad) lods pop inc imull cli arpl and adc (bad) jmp add xor xchg aas fwait lds sub imul je std push nop jg mov in lcall fs sbb inc lcall xor mov and stos gs cmpsl testl jge sub inc mov push mov call sub push or cwtl in xchg lods sub cltd pusha or mov cmp sub shl test ss std rcrl cmp xor enter js imul sahf xor dec inc push fnsave dec scas mov xlat push in jmp fcomps pop mov and cmp daa ljmp popf add xchg cmp je mov out pop adc xchg loop cwtl cmpsl call mov lds add cltd sbb iret mov inc out cmp lods jno in or loope or ret xchg mov (bad) push cmc cltd or mov in and scas mov sbb dec xor push push idivl pushf ret add cs mov pop cmpsl add push inc ret sbb int3 jg pop test cmpsb inc mov lods daa mov ss icebp (bad) lret xor jns mov xchg push sub inc sub fwait push mov ja inc jae mov pop dec stos gs hlt and aas out out and ss jl andl (bad) dec push cmp je push test add sub loop lods roll repz sub xor mov cld cmpl xchg pop and int jl inc ss out push imul adc pushf jge ret mov jo insb mov jb dec ret sarl outsb pop cltd (bad) push and imul (bad) cmpsl mov jp jb sbb cmp dec leave sub pop push aad (bad) aad test loope clc mov outsb push mov push es or pop enter movsl loope gs adc xchg je jg mov push cmc stc mov jecxz lret push push jmp jecxz adc and mov movsb lds mov enter loopne jl or hlt or and lret popf aaa mov cmc sbb mov dec mov mov push popa pop mov or jle sub into pusha cs cld jmp xchg gs stos ss loope mov loopne lods cmp pop frndint add bound add mov add stc dec popf f2xm1 inc push jg sarl adcl rcr sub pop mov sti and loop push and add aaa scas divb les dec and enter push cmp adc (bad) outsl fildll gs dec pop shrl or (bad) lahf lret jmp mov add movsb cli movsl sahf faddp inc inc test or cmpsb aaa mov push push cmovg or aam sahf inc cmp negb (bad) push sub xchg out jno loope lods mov pop add jne push cmpsb push adc lret mov push xchg dec (bad) fmul pop xchg dec or adc inc cmp jmp loopne jp sahf sub mov sbb adcb (bad) ljmp jge scas sti sub push nop push (bad) leave repz int3 jg add xor mov test sbb pop push fdiv adc enter hlt mov xor pop fcompl inc add pop iret cmpsl and fcmovbe and and xor adcl ficompl (bad) pop pop sub fbstp mov jne cmpl xor rcrb leave inc rcll das mov xchg inc push or lods jmp xchg fdivrl das popa cli jl sbb mov add (bad) fldenv addl push mov inc jne jl cmp jnp or lods les popa xlat inc lret mov outsb pop push or cmp and insl mov sub lret pusha xchg mov int inc imull rorb push (bad) dec test sbb (bad) call sub out popa mul push out xchg xchg push dec cmc push movsb lret (bad) jmp add or cs xor fwait xchg cmp lret decl popa pusha mov popf movl shll daa mov and hlt sbb test push lods jbe call (bad) jne data16 add outsl fdiv outsb jo daa inc jp fstpt sahf mov loopne (bad) mov xchg sti mov clc push sbb xchg xchg (bad) mov push mov pop mov (bad) repnz sbb (bad) adc bound add push add push insb ja xor mov pop lcall sti insb lods loop outsl add ret ja int3 xchg xchg pop adc dec or inc clc push xchg popa push out mov and pop pop dec (bad) ror lahf (bad) pushf cmpsl arpl sti jnp or sbb xor stc mov imul cmp inc addr16 adc and ret pop mov add jmp arpl xchg out roll addr16 push lods mov jo inc push mov jcxz and lods pop push jne sub in outsl xor out and (bad) lret dec jmp push xor dec cmp out out in xchg xchg mov cmp or iret popa leave adc mov pop push push pop test pop dec ret (bad) lahf test dec andl xor sbb mov adc (bad) lret (bad) jo (bad) push add add sub mov mov lods cmpsl cwtl and outsb ret repnz loop stos push notb repnz movl aam cmp test mov fs lods mov jmp push pop enter leave or test cli (bad) dec int3 dec and dec xchg add xor add mov adc out pop mov mov repnz (bad) arpl outsb (bad) fistl addr16 cmpsl in jmp adc cmp aam xchg mov mov fsubs sti rcll jl movsl jle pushf adc orb and stc sbb mov sbbl in std mov insb inc and outsl inc pop test addr16 dec dec pushf lds pop mov or xor orb jb loop test mov aam xchg mov push jge mov js mov push dec xor sbb add aam aaa clc ljmp push add out inc pop hlt xlat inc loopne stos sub dec std dec xchg test test sub push push mov inc cmp mov and (bad) movsl popf sub push mov adc push aaa adc add or int3 lret mov inc jle movsl neg cmpsb push out daa inc push cwtl (bad) in je stos data16 out push xor imul mov sbb paddw jo mov pop cmp mov mov leave mov ret cmp dec (bad) stos and and xchg mov mov jns ret in xor xor mov and (bad) sub out insb ret mov bound in lds jo or xchg mov fadds push push push pushf lcall dec xchg ret dec fsubl sub cld push (bad) ljmp mov lret or fisttpll cs ret sub fbstp clc mov add sub or push loopne xchg fs xor frstor cmp xchg idivl mov and mov data16 jmp punpckhwd scas stos or push push jecxz cmp jns jb push mov cltd jmp sbb outsb mov xchg cmpsb dec cmovg stos mov cltd rcl cmp bound nop mov (bad) shll movsb repz inc subl iret cmp jle imul dec (bad) popf or mov push dec mov fnsave repz mov (bad) dec lret mov stos in outsl mov popa ror orb pop test setle mov mov and ret sbb aas lods les mov inc das adcl sbb nop idivl and repz (bad) (bad) xlat jecxz lds outsb add mov aad sbb popl jns es das cld push xlat push std add scas xchg or xor mul repnz mov sub mov and pop jae dec lods xor dec dec shrb add lret nop (bad) xchg dec jbe repz insl mov andl movlps addb fistl adc sub cmpsl rclb int cli xchg jmp mov subb pop sub inc andl pop shrl jmp loope (bad) push loop mov (bad) sub mov dec push mov pop in les enter pop shll and imul (bad) popa out stos stos mov scas xchg and je mov adc and adc jns stos cltd add fidivrl es imul pop dec xor mov xlat push inc or movb rcrb out stc lcall loope or cmc add xchg sahf push xlat int inc mov out push into push pop add insb std clc (bad) jg clc mov aas inc push dec pop lcall inc lahf lret cmp mov (bad) shrl les push add dec push setae mov rorl add sbb into adc das in imul test inc pusha movsl pushf mov test inc xchg xor popf mov aam (bad) mov lods lds push xor dec mov push push (bad) and fimull xchg notl mov inc pushf inc add call jnp insl adc cmp cmp sub cmp and addr16 int pushf or xchg (bad) jb push arpl push push mov xchg jg and xor cmp lret ret mov ret inc scas loopne popa into jecxz adc dec fldcw xchg loopne std xor scas mov movsb iret mov xchg outsb leave cld xchg out jns cltd or mov fstl and divl sbb test mov pop sub aaa pop sarl dec clc sub adc popa push cwtl pop or cld in xchg jp cmp sbb (bad) pop movsb fisub mov xchg mov lock xchg add bound inc cmc inc pop push rcrl (bad) repnz xchg cmp (bad) xor ret lret rolb call xchg push push push outsl dec loopne test sub idiv in pop dec (bad) inc cmp insb dec inc mov leave mov fstp movsb je lcall fwait js pop and lcall nop dec and int3 dec mov cmp xor scas sti cmc mov sti out adc sub mov arpl inc pop les ds mov decb les (bad) push inc rcr push dec push aaa xchg les cmp andl iret jle adc pop sub sub and dec lcall pop xchg sub push aad (bad) lds pop leave fbld cmp mov inc (bad) jl mov jge push xor jnp mov jmp push xchg xor mov (bad) lods test xchg lret fdivs fildll nop add sbb mov jno dec xor pop ds mov int aam mov test (bad) cltd mov mov mov dec lret sbb adcb fsubs mov fnsave push popf jmp jl jnp packuswb mov add in pop repz and sahf addr16 loop pushaw or adc lock rcrl cmc int and nop outsl push idiv jbe repnz jae hlt arpl jbe popa int3 stos jp clc addr16 cmc xlat in daa lret or jecxz and inc out push arpl mov mov mov outsl cmp mov xchg mov push std inc jne lods cmpsl out lods xchg pop jmp scas sbb cmc add jbe (bad) sub pushf mov pusha hlt sarl pop mov dec dec inc xor push fnstcw ja pop mov outsl sub xchg push jae jl mov lcall movsl es inc pop les out cmp dec inc je pop xchg mov add lods adc fldcw cmp in icebp mov sbb cli sbb xchg mov in mov fimul test insb cmpsb pop cmp add push cli call mov fldt push (bad) push pusha push push mov lret cmp movsl fsubs jnp sub test daa xchg adc mov enter and out mov dec push rclb mov adc jns rolb movsl fwait test fmuls inc cmp jno pop (bad) jne fs push into xchg inc pop and dec sub mov pushf adc and xchg sbb outsb dec sub inc fcmovnu rcl xorl mov jp scas add cs lret out and cld arpl jecxz jbe mov jb fsubp out ljmp jmp int add add sub and or push data16 sub adc loope lcall pop fadds shl (bad) lods mov jmp push pop lret mov lcall add adc rorb pop jg inc and fistpll and adc sbb mov cmp fimul int3 cli fmull in jge icebp dec push jns pop scas and dec stos loop inc push ficom inc adc mov std imull push in adc cmp push dec es dec dec pop out movsl mov jmp gs and (bad) pop out test sbb jb xor into (bad) mov mov push jb (bad) out les nop cmp adc cmpsb lret out dec or stc xchg movsb iret pop jmp stc scas inc xchg addl in push arpl pop ret das lea mov add mov mov std mov pushl adc sbb insb into add xlat arpl mov xor movsl arpl mov and imul repz rcrb dec add int3 int3 int3 int3 int3 int3 xor cltd out fild pusha (bad) idivb dec pop (bad) mov cmp mov push hlt ret fcmovb movsl sti push push or negl pushf jle (bad) movntps push push xor sbb pop inc test sub arpl mov addr16 jno sub lds or shr xchg sub add out js inc aad test pop mov jg mov imul xchg dec mov mov arpl mov and jge mov loopne out push sti mov push test mov add jae inc jne xchg in pop inc pop fisubl jb out out pop adc lret pop (bad) lcall jmp notb fildl push jmp inc fmul imul xchg mov into out repnz mov stos fsubl and inc cltd cmp repz das pop inc adc movlhps and dec add into mov xchg lret les das loopne cltd add out imul push or sub dec push adcl dec xorl test push shrl mov mov mov pushl insl jae jge fimull es imul sub test and sub pop mov mov shl cmpsl xchg shlb mov int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 test or push mov xor pop fcomps fdiv fcmovb add ret xchg fldcw xor pop jp (bad) xor clc pushf outsb (bad) fsubrl xor add pop (bad) lret test sub cmp cmpsb mov scas test sbb lods adc jmp insb es int3 mov ret lret jl pop inc add enter (bad) js mov lods xchg imul mov or xor push loop mov mov jo pushf rep pushf daa mov dec rolb idivb lods das and fs pop adc jo lret lods shrl addb dec imul pop adc daa loop sub icebp push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret pop loopne imul sbb icebp gs mov and stos nop ret pop and pushf or sbb or fsubrs pop xchg pop inc jl pop jno cmc les jl or mov test sbb mov pop out xchg adcl aam pop and jge mov dec repz jb leave xchg inc adc push mov cmp arpl insb mov sbb lret imul sub fucomp in rclb outsl insl (bad) push mov out stos es sarb sbb ja cmpsb out mov push popa mov pop out pushl push (bad) loopne lahf mov repz lea dec mov and repnz dec dec popf js and push cmp lret or sbbl bound popa mov mov pop cmc cmp addr16 adc popf aaa xor sub cli aaa jbe mov xchg (bad) mov mov js aas push inc rcrb in xchg lret loope cmpsb fildll and and fbstp insl mov cmp jo push cmp test aaa ret inc (bad) xchg push jo push gs orl les popa loopne (bad) (bad) mov cltd dec xor xor mull sub cmpsl pop out insl adc shlb test cld mov enter inc inc sbb mov xor mov xor push push pop adc fstpt cli sbb in xor outsb mov cmp int pop inc jg cmovne push mul sarl push dec lcall sub imul push test (bad) add leave imul xchg call (bad) aaa popa das ss insb loope jecxz popa aas pop mov sbb jl jecxz mov push pusha mov add repnz xchg sar and push loop add xlat testl aad aaa sub lods mov (bad) int3 out mov pop ljmp push pop aad outsl pop adc sti dec jno,pt sub mov mov push xchg jne aas inc sbb xchg mov jmp ficompl fsts insb arpl cli xchg (bad) xchg jae ljmp sbb (bad) flds and rolb push pop inc and cwtl adc mov jle inc cmp jae incb jp addr16 imul loopne ds inc xchg (bad) hlt loop sub dec xchg dec push mov adc pop mov jmp test push lods mov cmp pop push jp cmp dec rcrb xor add ret mov cmp (bad) dec mov xorl js sbb imul sub mov xor ret in cli ret jecxz pop inc pushf mov mov xchg jno inc scas std pop fiadd inc sub cmp outsl call pop or push mov sub push in xchg dec inc scas xchg push adc and mul popa or lock push push push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 xor xchg out xchg insb mulb inc imul or nop fidiv jp mov test or xor shrl dec pushf or insl (bad) jecxz mov lcall xchg cmp out call das outsl adc pushf pop inc ret (bad) movb xchg hlt movsl pop sub (bad) gs dec adc add (bad) push jnp cli adc xchg hlt leave sbb mov cli xor sbb mov sub into mov jg ljmp jp sbb les flds imul cmp clc hlt pop pop xor test subb mov adc pop cmp shll out sub push adc test (bad) xor mov das rorl das mov pop js or ss jo scas xor cli hlt mov sbb cmpsl fs lret dec out outsl outsb std dec fs inc imul jb mov mov adc ret int3 stos aas fst fistl mov sarb call lcall cmp loopne dec fisttp mov push jbe popf push lret loope sub dec dec add gs insl cmp push leave scas pop popa jge bound jnp xchg mov lock (bad) call or es or pop pop bound decl and ret jbe lds push lods mov jae lcall dec pop jge xchg dec mov cltd push sub inc mov ror js pusha fdivs dec and adc cmp sahf pusha xchg jmp jb out xchg das lret rcrl mov sub les test out jnp cmp inc arpl cmp mov jg mov mov adc mov fs pusha cmpsl mov xchg xor mov pop mov mov imul cmpsb repnz mov sbb cmpsl sub aaa sub inc cmpsl arpl inc fsubrs push lock fisttpll jmp test mov push ljmp js fmuls lods mov shr fstl push lds pop mov arpl scas in and (bad) in fcoms outsl mov mov sub adc (bad) or ja cmc xchg (bad) sbb lock xor mov jnp mov int3 (bad) dec adc push ja out pop in andb or sbb inc xor fsubs mov mov sub (bad) adc push inc shr in (bad) and lea ret (bad) insb xchg xor outsb sub cwtl call or shrb xchg jp iret in cltd pop test subl ds data16 jg arpl cmp cmpsl inc rorl stc mov pushf fwait bound xchg mov mov jle jmp insl jge add sbb xlat std stos fbld push mov in lock push sub adc out setbe xchg xchg dec sub and test daa test mov ss (bad) test xchg mov test jecxz jg sti addr16 mov and bnd jecxz adc jbe adc imull fwait ja sbb push out adc push repnz movsb or push inc cmp sub lret or cmp xchg pop or in pop imul arpl (bad) and out repnz gs sub sub sub cmp add or jmp gs movsb xchg pop sbb shr sbb mov aas aad sub (bad) mov and inc ficomp jno fisttpll daa cmp ljmp adc jne and push std pop mov leave jo dec (bad) out mov jp jne in jg mov jns addr16 push xor mov and in (bad) ja jne clc repnz rorb (bad) pop test sbb mov std xchg ds jge xchg ds cs arpl addr16 xchg jne dec pop push sti sahf cmp arpl pop test (bad) jbe push in idiv shlb ret cli cmp cld and popf xor adc leave jo pop and add and aad and and mov mov jge jo cmpsb mov jno aam (bad) cs push sub ror sbb ss and pop push lds mov fbstp dec scas push adc rclb (bad) es adc pop xchg inc add and mov cmpsl stc ret dec outsl sub add lock sbb mov dec xor or pop xchg adc jge jo xor jns push lahf and mov mov pop cmp sub jbe insl outsl fdivrl lds add jg or aas out push insl or and and sub ret xchg cwtl push mov aas jp inc out ret pop popf mov mov mov push out shrb in sarb into dec inc (bad) shlb test add mov mov gs push or pop mov fs add inc fnop sbb cmp adc daa inc popfw mov lods mov cmpsb mov (bad) imul xchg xchg (bad) push iret dec jg xchg mov notl (bad) (bad) cmp xor xchg xor and rclb (bad) push cmp jmp pop jns adc rolb sbb and pop push (bad) lahf push hlt shlb sub scas lahf push or stos push mov sub (bad) std sub xorl ss test hlt xor sub or (bad) adc imul or cld and rcrl xchg xchg adcl daa insl shld test sub js addl pop cld inc mov leave or or xchg push push mov and dec or (bad) mov inc pop push xor mov mov push addl loopne data16 (bad) je fwait pop xor sahf jge mov lods mov mov notb (bad) stos jecxz std popa outsb iret push movsb pushf test xchg hlt popf mov aad fs jge insb and or stos fstpt jae,pn dec loope pop push cltd std out pop mov scas fisubl push adc mov pop cld lret out mov dec shll adc ja out test mov outsb push mov add inc jno adcb fisttpll cli push jo popf call fisttpll das icebp dec cmp mov lgs push leave ss lods add (bad) mov test sub sbb adcl push xchg jnp adc lds ljmp pop cld fsubl bound rcll jnp mov adc cltd dec cltd sub sub lcall pop push adc fisubl in ljmp loopne pop push jns nop sbbb push xor push mov cmp (bad) jb addr16 add call jne jb dec adc mov (bad) jmp dec xor lods outsb and mov out out xchg mov cmp xlat shl icebp pop xor sub mov lods ss cltd adc push mov xor nop inc bound or pop hlt repz fidivl addr16 jae and cmp test out jmp out fnstsw jbe and lcall lea addl in xchg mov inc push std dec ljmp push mov mov push aam in cwtl ret and es lret pop in or pop jmp xorl lcall lret shlb xchg (bad) in mov out ret push jno scas fistpl add packssdw mov inc jnp cwtl mov push int dec ret push sbb enter push lret sbb mov pusha nop into push adc push or dec and sbb xchg add mov ret ret sub pop jecxz es imul (bad) and jge mov jo int3 mov repz sbb icebp rclb lret jge pushf test jns push inc mov stc mov popa and mov mov xchg pusha and dec in fisttpll dec xlat jnp test andl push mov leave shll xor pop mov ss jb jle incl sbb out out neg push jmp xor mull mov push sub aad mov inc sbb das mov popl sahf lods pop sub les push xchg pop or popf sbb fistl cmpsb dec push mov lods scas sub xor popa les test dec jbe cmc lret orl xchg movsb mov pop fwait xor stc shr and mov aas jmp clc cmc jmp mov mov jbe std xchg and sbb inc js dec (bad) call xchg add loope daa xor sbb mov sbb dec mov test mov fisubrl sub sahf scas scas lret lock xchg lret cmp nop mov sub jnp fildl mov jae jo lods (bad) ret mov cmpl dec mov (bad) pop lods adc outsb popf and rcr and add pop movsb xchg inc sar insb cmp pop popa mov xchg push fs and jg es pusha mov popa xor cmp mov popf pop cltd inc int3 or pop xchg (bad) sub and inc ljmp xchg adc dec push inc xchg sbb fimull add or aam push arpl mov sub cli pop mov xor es sub and and xchg mov (bad) jmp daa or push bound ret xchg rcrl mov imul mov pop inc jg into shlb adc daa sahf add rep fs in mov mov pop pop cmpsl aaa mov cli push push gs iret bound aas jae inc jle out loopne outsb test mov int3 mov out push test aaa sub cli mov roll xchg dec cs jmp scas adc sarb out sbb lock jg pop out call jb lahf mov pop fcmove rcl mov fisubl xchg jno mov and pusha adc jmp popa (bad) imul repnz adc jnp jae std mov pop xor or cli xlat jnp xor rclb inc dec xchg jb fdivs sti mov scas inc adc push adc xchg dec and test fistpl sub inc es xchg pop fmuls in fst mov aas pop lcall test (bad) sub push mov and fsubrl loopne push negl out adc pop test addr16 xor ss mov sub inc and adc sti jno das cmp aad xchg xchg gs pop mov cmc hlt mov cs or sub inc adc lds cmp cltd mov imul lds cwtl rcll push test lods inc pusha pop and aam xlat push roll jb lds fsts ret and popa data16 sub cmc es push or es and mov sub inc sub pop sbb stos lods and lock sbb mov insl xlat sub jl shlb adc cmp stos mov dec stos push cltd fdivrs das jns mov lds mov and int3 or jo,pn les xchg cwtl pop jge (bad) push xchg dec sbb lock mov in and dec pusha inc or subb mov and push push and cmp mov mov stos push sub fbstp lret cld leave les mov push push cltd rcrb cmp aam push lock rcrl or lcall add and test leave jle pop pop xor mov rcrb scas and pushf insl or xor bswap xchg and outsb cmp jno cs into jno xor lret lods ss mulb pop notl popa sahf shrl inc into inc loop lcall std cmp test (bad) dec push sub scas dec ds pop movsl aad test push popl gs clc addr16 mov jmp js pop ficomp in mov (bad) ss mov ret xor add pop add fwait (bad) les ss sub pop pop dec cmc movsb inc out fcom lods ss mov sti cs nop fnstenv std inc lahf jbe (bad) out bound cmp push clc ja fisttpll dec loopne push xor arpl aas fstps nop inc xchg or jle sub test push mov inc dec and ljmp push outsb inc cmpsl in int cmp data16 inc dec adc pop aas and iret mov sbb ficompl (bad) imull insl mov mov test sarl xchg hlt dec xor jl jae mulb pop add cli loopne movsl push cli icebp out ds (bad) std add mov or pushl xchg shll xchg (bad) jmp cld sub dec (bad) sbb pusha fcmovbe icebp lcall sbb ret xor stc dec in and inc subl lock push sbb mov icebp test cmp inc fwait outsb inc lahf roll xchg jnp mov push loope stc cs xchg out stos mov push ret icebp outsl loope jmp lods fidivr push ja lret ret mov and insb clc push aam icebp mov pushf es (bad) inc pop jg cmp cmc mov in orl jl sub jns cmc xor popa repnz pushf mov hlt xchg jmp cli sti fdivl test stos sub iret in mov cmovg mov cltd insl xchg pusha (bad) stos test pop call jle in xor mov xor aad inc lods cmp hlt mov mov (bad) lahf jl adc mov not push or mov fnstcw sub rclb and mov (bad) adc sbb int adc stos fsubs mov cmp mov xor (bad) movsl push cs mov adc cmp adc add or int3 leave and mov adc ljmp mov int lods pop jnp call in xor pop pop sahf mov jge (bad) adcb or xor mov outsb jae dec sbb fs push pop sbb add fwait (bad) mull inc scas icebp sbb jo inc (bad) mov inc jb repnz pop popw cmp out clc ret mov xor adc ret add mov inc sbb lock dec dec pop xchg cmp push mov in adc in mov test roll arpl in adc adc aam mov rol test xor inc loope jmp iret pop mov xchg inc fsubr dec pusha and xor xor jo add mov icebp push enter add or in out sbb mov icebp adc mov nop sub mov or int3 jb pop addr16 push call jnp cmp adc das je sbb sub mov outsb and dec push sub cmp cmpsl or sub fnop cmp push scas gs inc push mov xchg mov inc mov lods push sub dec dec or jo out dec inc mov daa inc xor xchg fild xchg xor jo sub movsb jb iret cmpsb inc fwait dec in pop out lcall enter fucomip scas scas lds pop insl push mov xor divb in pop in mov add adc shrl add xchg push or jae clc mov stc (bad) dec addl lcall pop dec push mov addb cmpsb xchg pop mov lret daa mov std adcl sub lods fild in add pop mov in inc negb push sahf lds cwtl sub loop arpl adc repnz and jne pushf ljmp mov leave xchg ficomp xor and lret lea (bad) icebp repnz sahf dec and adc sub jnp je (bad) hlt push addr16 sbb fisttpll cmp push js adc enter call dec sub mov mov loope sbb xor mov popf movsb subb adcl bound sbb mov stos rcrl hlt mov movsl aas xchg enter fsubrp sbb (bad) repnz fcoml out je mov daa xor cmp sub pop xchg or mov mov ret dec test out xor in and push inc outsl outsb or (bad) mov and xchg (bad) cmp in cmp icebp fmul addr16 and jae jle cltd lret jg ret or xchg lcall (bad) cld out jb jbe bound mov stos bound add imul jae push sbb fnstenv add cmp inc and push dec and push (bad) mov (bad) push xor xchg out sahf ja (bad) shrl jl lds (bad) repnz adc ret lods jo xchg sub test sbbb cmp add xchg adc fs (bad) jnp sub sbb pop fcoms hlt int3 and jne dec cmp stos sub ss into adc add dec inc mov lods push lahf rep outsb stos dec cmp jl fsubr add testl fxch push push cmpsb adc loop notl xlat mov rcrb jb stc pop inc dec js sbb sbb jl shll out add inc subl jns outsl rcll fbld sahf arpl pop sbb loope rcrb cmpsl pop cwtl mov pop and and cmp test test and push inc call lods push lock sarb xchg imul inc cwtl gs xor sti sbb inc push jmp cs adcl mov adc mov rcr mov xchg mov xor or or push jle and mov or mov cld adc mov loop bound push in ljmp enter testb test mov lcall pop in gs cmp aaa add add mov lods nop mov push jo pop fstpl dec into pop sub and xor add lret (bad) jb arpl push xchg sub shl imul inc or adc mov scas and add dec mov jl sti (bad) dec add xor mov popa xchg sbb shll pop jbe mov push dec sbb sbb test jae fwait hlt jle int sub cs insb mov sar pop cmpsl push jbe (bad) lret loope out dec test sub gs xchg dec in lret mov add ljmp or pop fbstp es inc mov fild stos loop or xchg push sbb std (bad) data16 cwtl mov test imul or xchg xchg sbb int3 (bad) sbb or ret lods cmp fcomps mov subb mov insb sbb pusha pop or jns jmp ss inc pop in dec cli ja out xor xor out fwait sbb (bad) popf lods mov lahf fdiv add addr16 mov out mov in pop test xor out fs push pop push daa inc lcall sub mov xlat mov adc xor mov dec dec out jno (bad) cmp pushf repnz cmp clc cmp cmp fimull scas pop divl jmp mov inc movsb add out mov mov movsl imul icebp je pop xor jno fisubr (bad) repnz jmp sbb sub sbb xchg or and arpl notl jae lahf sbb jp inc sbb mov xchg js cmc cmp mov cli gs add inc mov adc enter push outsl push mov push enter push sti shrl fwait mov push pop leave je xlat cmp scas imull in lcall cltd icebp mov arpl xchg lcall xchg jbe push push mov ret mov insl jno test imul xchg jmp or sub shll in imul in test fsubrp test cli loope dec in push mov pop xor mov ror or sbb jl jno mov or les inc jnp bound loopne or shll pop rep pushf xchg push fisubrl xchg pusha cltd xlat into jge mov pop in xlat sahf inc (bad) dec inc sbb sbb jb mov push hlt adc out dec fs pop jecxz or push push je dec jmp sbb add push mov lds outsb pop or popf lock shlb aad dec pop sti sub and enter xor aas sub dec fnstcw movb test lods je call jmp push enter sbb add adc push es and pop ror sar xchg pop and dec mov int aas jmp xlat mov test xlat jge je (bad) or mov xchg insl pushf sti test shlb scas pop andb add int3 pop adc xchg xchg (bad) in dec pop out mov ret cmp (bad) pop (bad) stc and mov mov dec (bad) xchg in in mov xor loope inc cltd cmpsb and int3 jns jl mov jmp in daa js xchg movsb out (bad) (bad) mov out add mov jp adc sbb inc cmpsb jae movb sub pop std jmp push push mov cmpsl jo loope xchg inc sub lret fwait test sub gs xchg stos sbb (bad) (bad) das or fmuls sbb rclb mov test mov enter xchg std scas push add mov sahf orl push imul aas fistp ss (bad) jo test jo lahf push push xor leave sbb jno push hlt push (bad) imulb icebp or lods outsb scas clc fnstcw and lods clc and and sub xor out insb pop test xlat adc test icebp (bad) push (bad) in int sarb imul mov add cmp xorl aas xchg inc dec mov (bad) mov sbb mov pop jbe add xchg divl jns insb and adc lcall push fidiv jmp ret (bad) xchg sbb out aaa leave rcrl decw leave pop fimull mov mov cmc lea aad add scas adc stos enter push or lret stos sub roll cmp cli ds xor inc scas inc xor add jmp sub data16 xchg sbb mov dec shrl jb mov not scas ja dec dec push pop adc cmp out xchg lcall dec movsb xchg inc jbe icebp je fsts push (bad) adc iret xchg lock fidivrl dec popa movsl int cwtl push xor sarb sarb int3 dec fnop hlt or cmpb sbb cmpsb loop dec xlat (bad) (bad) jo dec fist inc inc push (bad) jp and push fwait mov ds sahf test mov and pop lock pop scas sarb add push dec xchg xlat mov or fsubrl adc jbe pushf notb insl sub sub pop dec cld push adc daa xchg inc pop pop jb call inc sbb pop es inc cmpsb clc add dec test lcall dec mov dec cli dec js sub in xchg lods and or push fldenv call in dec cmpsb mov mov mov jo lcall and repz adc es rcl jbe jle test sti cmp sahf dec inc pop icebp lea push scas pop orl aad xchg stc push sarb lock cmp call pop xor push lock mov sbb xchg pop jge sub outsb lcall je sbb (bad) jecxz mov fwait inc xchg jae std outsl inc push push test jns sub es cmc jl int3 mov popa andb ret jmp sbb and imul pop push cmp mov sti into push sbb clc repz das repz ret sti gs daa pusha xchg call lods (bad) iret ss xchg inc mov jbe outsb aaa push (bad) lock push aas dec iret mov cwtl fdivrs movsl mull mov push mov lods mov std loope add jge cmpb jae pop ja sbb and cmpsl out add (bad) in and jnp xchg imull push jne inc add cmp sahf dec mov push pop je cmpsb (bad) push sbb les ds dec popl mov dec std jns mov repnz pop es ss mov mov mov sbb jo mov ss or repnz xchg jbe ss pop cwtl push cmp cli fs push mov fwait (bad) loop outsb push dec sbb cmp cmpsb mov fsts xor cmp out sahf mov push cmp add (bad) cmc sarl mov cltd adc in mov mov testb adc stc (bad) cmp out xor scas hlt loope test push call mov mov incb xchg pop or mov stc push mov aad dec inc lods add and mov hlt cmp adc daa sti xchg bnd mov lods xor inc mov dec xchg int3 xchg pop lods inc mov ljmp mov gs inc sub mov add pop jno imul cmp xchg call mov (bad) loopne jle outsl rol mov or paddw xor and ret stos cmp inc out xor movsb (bad) lret movl add popa xchg mov jg gs test xchg push dec in pop shlb ds out and xchg jl loop mov gs std mov test idiv mov mov xor mov lret adc mov cmc shlb outsl mov add test ret repnz icebp das push mov inc mov das add data16 mov iret jle jnp test dec leave xor mov test out cmp into add test add inc das sub add jo mov mov dec mov (bad) cld ret adc cwtl and dec repz push xchg hlt hlt pop loop scas stos add pusha jo xchg mov ds mov jg out ljmp mov popf mov cs cmp imul pushf fiadd std lock mov xchg push adc aas and lret adc hlt std cmpsb and and sahf or sub jae shr cmp xchg imul cmp dec add and shlb call mov jns mov mov scas fstl es decl es gs add mov adc mov pop loop jle mov cmp sub test (bad) xor gs add int xchg fs mov xorl cmpsl js fisttpll test cld mov shlb aas lock (bad) fiadd (bad) dec lret iret test jbe in push (bad) cmp je daa mov push push jg pop jb cmpsb xchg cmp fwait imul push mov jle les (bad) mov inc xchg push jne push inc push data16 push out es lock cmp adc fs and and outsb insl pop aam pushf lret in mov jns lods rolb or cmp xchg mov hlt and fnclex pop int push dec sub sub insb push jb aaa outsl dec out pop inc push jne mov fwait scas aas push int3 sub (bad) cmp jbe xor or test pop nop or in cmpsb enter xor mov mov imul inc sbb xchg add cmp jle test add dec xor xchg jl (bad) mov shrl or dec sbb cmpsl mov add mov rcrb leave dec jge fidivr shrb and pop mov mov xor cltd push loopne arpl ss sbb push adc (bad) sbbb pop adc mov mov pop fisubl xchg fs jge cmp outsb push xchg push scas inc jp xlat sbb dec enter push mov add loopne xor out inc mov dec jo or mov cs adc ljmp je jo jle (bad) cmp cs rorb loop or jns roll ds loop mov mov outsl pop in pop cmpsl hlt stc test mov enter movsb jl fisub fiaddl and or add add pop jecxz mov xchg adc lret mov (bad) (bad) cmc pop cmpsb jae inc cmp insb outsl insb imul leave aam push add inc in mov fsqrt inc lret out leave inc loopne imul and ja pop and push mov movsb idivb mov cmpsb xchg cmpsl mov sbb mov enter cmp lods sbb bound mov push or cltd mov in scas dec push aad or ja mov push sub and pop and rcll mov xchg fnop pusha lcall sti mov clc mov enter pop and int3 jmp jo dec lahf stc push mov inc pop movsb lcall notb cmc sub inc xlat sub outsb repz cmp das push std je sub mov push sbb clc sub inc mov dec cltd xchg sub and stos (bad) lret mov inc aas fs icebp mov mov inc xor inc das lret mov stos mov sub lea imul and adc xchg push pop dec mov adc gs stos (bad) out add mov adc mov adc add lahf mov or sbb cwtl and mov mov dec in mov int jl or jmp fcoms or sbb cli insb pop repz cmpsl adc inc jg nop jbe cmp sub cs mov stos je int3 (bad) dec insb mov aas sub ljmp adc jb iret xchg adcl or bound addl movsb les insb or mov adc (bad) icebp mov sbb (bad) mov jb repnz push dec sbb inc test lret dec (bad) loopne inc lahf pusha adc jo in xor and out out rcrb lods les loop mov and addr16 test xor dec out lea pop addr16 cmpsl jecxz jbe pop ljmp int pop fisttp jge push xchg aas icebp (bad) js jl dec ret mov mov (bad) insl pop sub sbb mov repnz mov rep ja pop out rol imul sbb into addr16 bnd adc in push mov and enter int xor pop test popf sarb mov mov mov and and fbld insl push mov inc push nop into adc mov (bad) or push dec push les test push orl sub gs sub jg lock arpl in push js add push sub ret jle pushf not andl jae sahf jb pop dec mov mov or in cltd loope lods into mov mov jae jno call mov inc inc sub mulb addr16 push xchg int jecxz cs xor dec fiaddl or mov mov lcall cmpsl pop pop mov push or les nop out cwtl fnstcw mov (bad) jo lret cmp mov xchg iret test jecxz xor pop cmp jae mov mov outsl stos jl jecxz ffreep or pop jmp js popf add mov pop push cmp jmp mov jb xchg imul adc pop xor repnz jae mov mov mov mov rorb jmp mov push or jl jo jo js mov aas ds scas push in (bad) decb cs ljmp jo clc add cwtl fcoml mov lods jae test adc mov sbb inc ds in inc cmp xchg adc aad es jp cmp cmp scas pop leave fucom inc pop lea lods cs add rcll adc push unpcklps xor jge add fyl2x mov push inc enter jmp adc aaa (bad) mov inc fdivs mov jmp mov les loop lds insb adcl xchg call jp lock push repnz push test aaa cld adc push addb mov (bad) cmp cmp or or pop mov mov xchg rcrl lods xchg dec int3 ret mov jae movsl sbb movsl popf or nop mov push scas jo xchg or je std loop outsb loop pop dec push push sub mov mov cmp and sbb xlat jae inc pop add xor js insl cltd push clc addr16 stos mov or pop ljmp into je sbb mov scas sbb jb in push lret and sbb mov leave cmovo ror enter xchg lret movsb cmp add mov sbb and pop imull xor loope jbe pop adc and lock push ret push cli fnsave movsl jns mov or dec add push xchg push ja cwtl dec out mov lcall fidivrl in cmp movsb gs mov test je (bad) fistpll pusha cmp or inc addr16 xchg outsb daa (bad) mov sbb xor leave push test sub hlt pop jb mov adc dec mov mov fdivrs in add sub sbb xacquire cmc (bad) loope mov lahf sub mov cli mov push rorl (bad) (bad) sti pop cltd push add xchg adc jmp dec jl add inc lcall subl dec dec insl push outsl clc or iret ss imul in add cli (bad) pop test jle loope xchg stos add push test es pop (bad) pop lods mov lods test and aam ret movsb sub sub pop cld ret pop shrl cwtl sarb adc daa push jl out and das push lods jns stos loop adc mov into inc icebp mov fmuls aaa loop (bad) push mov pushf lods inc out xor inc movsl int cmp fildll ja shr ror addr16 cmp jecxz cmp roll fisttpl loopne ret sbb jnp cmp mov bound mov pop xor cmp inc scas mov add jg jl outsb jl inc (bad) iret (bad) mov mov cli jns push or rolb add repz jnp ss mov movsl cs pop test repz in sub ljmp inc mov adcl (bad) clc add inc lcall sbb jmp adc test stos in dec popa jl and sarl inc mov or iret in mov data16 call xor je sbb cld jle inc lock dec dec (bad) pop pop dec nop pusha jmp (bad) jne pop sahf pop xchg fsubr jg ljmp pop pushf sbb outsb (bad) inc arpl aad insb and out fisubr mov mov lock std add mov int rcrb xor pop sbb (bad) rcrb pop xor and push repnz popa (bad) int cmp addl mov ss lcall out add mull jbe lds into pop pushf mov dec (bad) xchg xchg mov inc sbb repz loopne js xor dec inc push jge iret jecxz mov cld fsubl mov in pop xchg lcall les ss pop push push fsts out add (bad) ljmp adc cmp (bad) aaa das mov pop push call and push and fldl2e add sbb leave stos mov sbb xor pusha dec (bad) out in pop mov aam xchg add cmp lret adc sti add call jo fs or fs cld jo push pop sub and and mov add int3 pop jp stos xchg lahf loopne psllq hlt incb (bad) (bad) aam or push repnz push jnp fxch lods lea mov shrb (bad) mov mov sub adc test xchg cmpsb inc out xchg push popa shrb adc stc jo scas loopne and mov push test leave mov inc stos sbb sub rolb dec inc int js fimull push push mov add stos mov ds jle mov out scas sbb xor into (bad) flds (bad) xchg sbb add inc neg bound subl data16 jns pop sbb pop xor lcall cmc (bad) jmp inc push cmp mov scas lods cmp scas fiaddl jnp adc scas aad xchg dec fimull ret cld data16 mov push lods and dec dec cwtl mov ja cmc stos sub push fdivp pushf icebp test dec cmp inc pushf sti jge movsb cmp pop shll xor aam pop (bad) adc dec or je jle,pn push push lods push sub sub xchg lods adc pop insb imul std stos add ret push sbb sbb pusha mov std int3 mov cmp mov pusha hlt (bad) xlat and add pop cwtl out mov inc sbb sub shlb ds insb add mov in ret push (bad) out pop cmp shll mov test sbb jae inc pushf push cmp fdivrl les lods cmpsb jbe lret subl int3 cmp push sub pop mov mov xor dec push inc mov mov out sti xchg subl xchg ljmp inc mov nop xchg mov dec inc insb jmp stos mov xchg adc outsb push test push (bad) and push out dec in sub fwait aad cld lea pop adc lret shll mov dec div dec scas inc pop popf jg sbb insb sahf or das ljmp xchg jmp rclb add cmp push push xor cmp data16 xchg pusha jg fimull sub clc cmc popa mov xchg iret inc mov std pop dec and insb je jle sub xor shr in fmuls or test pop sub dec ficompl adc lret (bad) push mov add icebp fmuls inc adc cmpsb jp mov pushf rep and mov cltd xchg sbb cmpsb xchg movsl sub gs sbb push and in inc mov jb cmp lds cmpsb lea lock aam sub clc aas (bad) stos lcall pop xor push aam and aam test hlt jl cmp cmp and es pop loop lods mov mov mov leave add xchg mov repnz or rclb push fildl xchg and stc inc jge pop mov and repz leave stos mov push stc fdivs lret xchg jo ret (bad) fildll daa hlt xchg ljmp or xchg out (bad) repz xchg or pusha sti (bad) push fbld movl loopne jnp cmp add jb xchg sub out insl xchg fisttpll pop sahf (bad) mov clc imul mov dec push sub and push (bad) and pop nop (bad) jb push lahf (bad) xor mov jecxz loop aas jnp inc inc push mov inc xlat cmp push lret rep into call outsb aam repnz dec adc xor fsubrs xor mov stos out pop jecxz int3 inc push and and icebp test dec jl,pn mov js es je enter ljmp mov sbb (bad) jmp add xlat sbb aaa or sbb jns ffreep fdivs mov mov xchg mov int (bad) and dec or xor std adc push add sbb cwtl xchg movb jns out mov mov lods mov mov data16 sub call addr16 lock insl inc ret adc cld cmp dec test (bad) inc pop lods jg cmpb fcompl adc jno jg jecxz cwtl adc add sbb mov popf in dec dec insb mov add in out pop sub test movsb or mov bound sub adc int imul pop inc fcmovu enter sbb xchg mov scas push cld arpl lea sbb cmpl data16 out shlb rclb mov lahf mov (bad) jns xchg mov mov pop arpl mov push mov lods ffree mov jno ret jge push xchg adc in cmp mov adc and (bad) stc add int3 aad je stc mov (bad) xor ds pop xor jo mov jne dec ret adc add sbb jmp sub call iret test out (bad) mov fistpll (bad) jecxz mov jne (bad) (bad) xchg xchg xchg test ds (bad) pop les mov int outsb shll mov outsl dec sbb pusha xchg xor daa mov leave jg out cltd pop pop shl xchg sbb mov and mov lahf and cld call mov hlt lods in jmp push popa subl lea mov cmp test aaa (bad) cmpsl dec jns sbb inc por xchg sub je fidivl rcr repz mov daa pop roll jmp fbld inc cmp mov pushf and pushf adc sti push cwtl je into imul mov and mov adc sbb xor data16 mov mov mov nop mov incl in in cmpsb cmp dec lret jle sub rcrb xchg jg aam imul xlat or xchg gs and xchg jno je insl clc lret cmc (bad) loopne mov popf mov leave or lods js cmp test scas jbe incb dec insb push daa aas adc sar and out rorl shl into and xor jb insl adc inc pop mov jbe pop arpl jge in sti or aaa scas and pop sbb cmp pop mov fcomps repz sbb (bad) icebp jg ljmp jg sub fnstcw fcomps jb test jmp in arpl xlat (bad) ss and rdtsc adc push imul popf mov test insl dec hlt jg jl pop dec xchg std (bad) js and addr16 and inc sti in movsb into aam lea insb leave cmc jbe std (bad) xor add mov cmp out outsb mov idiv adc mov add xor adc mov clc and adc aam push cmp fsubr sbb cmp loope xor (bad) (bad) dec add dec and aas lcall xchg test int3 ds mov dec mov js fwait pop jle out sarl fucom jnp cmpsl je or xchg shr (bad) fucomip scas dec mov pop lcall in jo xchg push and loop rorb sub jg sub mov inc adc xlat adc int out xlat bsr gs clc inc and rcrb sbb addl jo (bad) mov mov push mov mov pop sbb lods in mov lret jecxz sub sbb mov pop shll pop lock aas mov daa popf (bad) push loop (bad) cmp int3 fwait or inc icebp mov push pop ror cld xor pop and int and (bad) (bad) mov sbb fild pop enter loope test cmpsb add pop addr16 xchg xchg rol fcmovnbe adc jp jmp inc mov clc int stc push fistl dec mov sub mov pop sti inc rol mov cs and sete mov lret or fwait out mov push in cmp xor pushl fwait mov inc repz pop jbe sbb cmp inc and adc arpl pop jmp jmp iret mov adc mov cld and inc inc popf cmp adc rcrb aaa int3 nop les loopne in sti sub cmp lods adc in xor mov adc and and out ds nop (bad) out jmp pop xor (bad) in shr jne inc mov adc sarl lds sar sbb aad push roll pushf pusha imul jns (bad) xchg movsl or lods push mov out cmpl stc shrl pop stos repnz stos in inc adc (bad) or imul mov mov mov xor or std push rorl sub int mov cmp cmpsb push stc adc fisttp jge pop (bad) ds lea iret inc add jl push orb ret sysret sahf add into jns pop jecxz push lret outsl adc xchg insb in adc aad or outsb xor out dec in sbb ret cmp loop ret jle cmp jne rcr xor xor (bad) inc mov push mov jnp scas fisub dec xor test fs mov or mov notl in or push std sbb jl mov cmp ja clc pop imul xor push std mov push xchg and mov sbb push (bad) notb (bad) std testb push jbe (bad) jb call jle out mov and aam addr16 adc inc mov ja and call rolb in cmp (bad) into dec pop insl inc inc dec sub xor adc testb lcall int3 pop pop les (bad) idiv xchg roll xchg clc jp mov daa nop mov mov push push xor cmpsl mov jp lret loopne fcoml ss dec ljmp cmp jl adc fmuls adc (bad) testb or mov adc sbb inc divb mov loop push pop mov sub gs loope push jno test adc pushl ja adc cmp or insl jmp ds cmp daa mov jl (bad) outsb dec adc cltd sarl int3 or ret xchg mov adc lds xor adc mov xlat xor cli out int leave sarl and aaa mov scas and inc test das fcoml rep pop lea into out lods repnz pop loopne jecxz out ja push shrb stos rcrl push ss ret sbb xor sub lret aad imul mov scas xchg (bad) pushf adc insb mov add mov jne or bound lahf (bad) sahf iret and adc inc hlt sbb daa inc xor lock add clc (bad) imul jno dec sbb test aas add outsb cmp lds pop xchg cmp add mov and add es add cs cmpsl mov mov xchg dec int3 scas xlat fistl outsl cmp mov mov arpl fnsave aam dec hlt test clc loopne jl mov (bad) addr16 pushf repnz ffreep leave frstor push sti jmp outsb mov lcall into hlt cwtl loop repz mov adc mov (bad) into (bad) mov mov les add cs loope daa test sub je pushf rcl repz mov les or mov inc clc out push cmp pop mov and xchg cmpl scas cltd loope scas daa pushl int3 mov push lock sub cmovs in ficomp cmc arpl pop xchg mov fldenv cli je adc or xor repz sbb mov int3 and cmpsb icebp jo hlt (bad) dec test test int3 jb,pt dec iret arpl sub div movsl loopne mov aad fnop lods sbb popf repz pop fiadd xchg dec pop mov push xchg sar (bad) sbb in adc sbb or push cmp and sub jmp clc fwait push fwait inc ljmp adcl hlt push jno loop aas jo hlt dec jno jnp and test mov addr16 mov stos and or dec std stos aad xor mov (bad) mov mov or js mov mov jle std push mov (bad) pop adc cmp cltd mov jnp dec jmp data16 aam sbb and add xor jo xchg push nop or pop xchg lahf lret sbb mov repnz ret sub inc sbbb add xor push adc jno int pushf xor aaa pop add incl setns (bad) in adc xlat test dec mov and cwtl jns lcall roll mov cmpsl dec lods mov add cwtl ljmp insl mov cmp push pusha rcl cmp call es popf push scas xchg ficom lret and jp pop popf dec push sar in rcr pop ret sub inc sbb rcr out jo ret fs and out lods or repz mov or inc xor xchg lock and mov roll push xchg jnp lret jne fldenv rcrb lret dec sbb mov outsb sarb inc out pop gs fdivrl or lock cwtl push push xchg ja dec fnop ds xchg icebp mov add iret scas shrb inc sub mov std lock adc mov pop stos in negb scas mov xor ret popf (bad) mov dec xchg inc imul or lock jle jnp aaa stc aas ret lgs imul outsl mulb mov shrl lock mov stos xchg jae mov hlt sbbb cmp enter and push or pop jle push sti out jae stos sub or or cmp mov les cmpsb sub repz imul mov add jnp ret pop pop test fnstsw dec pop movsb dec pusha push inc dec popa sub adc mov aaa jecxz jge imul mov jbe xchg cs cmpsb add sbb (bad) sub cmp fsubl in lret rclb popa pushf inc and out and push sarb mov add dec xor dec and mov out stc cmp jb bound xor jno jl or jbe cmpsl xchg ds je mov inc in mov and jne bound or pop hlt stos lods jg outsb mov and (bad) mov mov add cltd dec and xchg mov fs jae mov pop sub dec cmpsl aaa push push mov xor gs add out aas mov push sbb mov push mov mov nop popf sub aaa pop jl pop jl cmp repnz mov xchg in int lahf rclb or sbb push lcall mov insb in nop fdivl add mov push popa pop dec icebp mov jg out add xchg dec pushw mov out sub jp pop inc (bad) or push xor dec cwtl ss cmp inc jne (bad) push inc xlat and fadd or jmp and rclb inc rcll addr16 mov fild lcall push jmp scas popa mov jecxz xor sub cmp dec push mov insb shrd movsb gs std dec sbb and push mov icebp mov inc mov mov jge js or sbb js je gs stc stos int cmp div test xchg mov sub enter add dec in out daa cwtl push push inc and (bad) sub jno or (bad) gs loope jo (bad) dec and aas mov inc (bad) sub jns jo adc std sub fild lods mov push repnz push out mov mov ljmp push adc push inc mov mov sub inc fcomip xchg add shlb or aaa mov out jg cmpsb test pop lea cmp ret lods lock and mov out pop test mov in and or bound aam pop dec jbe mov sbb or in and dec fsubrl xchg (bad) xor gs jmp fwait dec mov mov jae cwtl mov xor jno arpl ja int3 test mov mov sbb (bad) pushl push jge sub stos into mov pop sub lds inc aas cmpsb jns insl clc imul fs add push (bad) add pop rorl lahf je inc push scas mov add push or daa out (bad) fsubrs movsl cmp cmp jle mov adc rcll inc call jns dec dec ret xchg js pusha jns test cltd ja repnz push push test aad and xor arpl stc inc loopne sbb aaa or dec js dec inc faddl gs cmc arpl mov mov sbb icebp prefetch xchg icebp push push loopne pop adc daa ret stos jecxz cld aad xor mov inc aas aaa mov (bad) fwait insb xchg sbb inc sub lods pusha enter push xchg jmp xor xor dec jmp rcrl (bad) (bad) xchg fidivl iret sub inc mov lods pop and in cmpsb test mov outsb adc insl dec mov lcall add int pop sub lret cld aad movsl leave cltd xchg push enter add repnz popa or dec in je cmpsl mov aas out shrl add jae in push (bad) outsl or out out mov cli inc int and cwtl out fmuls shld shr aas das jmp sbb into test or lret in fs lock add mov add mov push gs cmpsl mov lcall and push mov (bad) ds xor sbb and jae mov in insl jge loop pop or enter push fistl popa bound ss imul (bad) dec adc ja mov cli inc cmp add aaa psrad mov sub push stc stc in sub pop fsubr or ljmp rorb or sub pcmpgtd in stos xchg ucomiss mov xchg fistl (bad) ja and dec jmp push pop movsb test mov xchg pusha imul xor out dec popa lret (bad) mov mov dec sub cmp inc imul sbb mov int pop (bad) dec inc out cli sub cmpsl sbb sbb das pop xchg dec scas in (bad) (bad) xchg shll fbld ret jg mov pusha aad dec xchg int3 (bad) and inc arpl sbb xchg cmp ror bound xor pop dec add jno fisttpll sbbl (bad) test rcr push cmpsl xchg sub int pusha in stc and xchg pop (bad) mov adc repnz jecxz mov mov and andl arpl fmul movsl mov mov xlat push rcrl es pop arpl or or bound push or adc (bad) pop pop pop cmp fsubs jnp adc xchg pop fsubrp jnp ja test fidivl das ja or stos cwtl loopne adc push in mov mov jle int push inc sbb mov (bad) xor pop scas mov js pop out out imul call push repz sub lods xchg jns mov mov push sti aad mov dec mov adc cmp lods dec mov rcr out push mov addr16 cs mov push dec in std cwtl inc pop push fs lods jns and loopne cmp mov scas (bad) (bad) push mov pop mov and pop movsb and jbe inc movsl mov insb jne jl sar addl sbb xchg mov stos ja cmp jge in js (bad) loope mov fs loop fisttp and and mov or imul sbb fsubl out or popa aam push sub loope movsl popf fcomip inc push dec aad fldl popa popa bound sti xchg cmp adc xchg sbb bound push xchg xchg add and ja (bad) pop cmp sahf jp cld cld jbe mov leave (bad) stos push mov dec cmpsb push loope (bad) pop mov xchg dec leave push loop pop inc out mov mov pushf (bad) mov xchg adc std lds mov sub mov out (bad) sbb and loop xor (bad) loope fbld dec ja arpl in xor aaa pop pop pop xchg lods lea jae sti ror xchg lret push cmp adc jge loope std sub mov lock mov (bad) sbb adc into in lcall jns sbb (bad) jecxz mov sub (bad) adc and inc outsl fld pop lods jecxz sub inc enter jns sti mov sbb push pusha sub mov mov push into cmp push shll fild inc call dec incl jl adc xor sti pushf xor lods pop mov pop aaa jl mov (bad) sub add push cwtl fisub ficoml push lret js enter push mov jnp sbb jb and mov push mov clc jne in leave inc pop pop or xchg nop jns sub pop lret insb mov std rcrl push nop imul cmpsb shrl push add stos sar push mov push popf jg mov adc mov cmpsl push andl stos addl jecxz out movsb and in cmc lret loope jae or xchg ret arpl jno aad pusha bound daa sarb mov sub aad push jg push popa (bad) (bad) xor clc gs xor and aam test pop iret pop lds cltd cmp outsb jmp dec dec outsb test fistp push (bad) add (bad) and mov mov pop mov pop xor lret aam test ret orl out pop (bad) mov punpcklbw pushl push pop fldt mov push mov (bad) sub fsts push repz bound into lds lcall lret sbb push and fs sub xor sbb or arpl mov add xchg push add push push lock or and xchg mov mov jp jmp imul loop mov mov xor lods lret shr mul mov out ljmp xor push pop mov icebp aam mov ss xchg sti pop hlt lea sbb add mov dec jp inc rol pop fs imul arpl or mov push test in lea and notl xchg popa daa sub pop mov lcall cmp jb sbb repz dec push dec test fmuls stos leave and fs int inc cmp leave sbb pusha push fwait je dec add add add dec in fwait loope dec xchg popf add loopne cmp aam jo jno pop loopne pusha lret es aas popf popf mov or jge sbb leave jno sbb mov inc or lret sub add xor push pop xor leave pop mov sbb inc jns push (bad) pop (bad) arpl mov imul xorl push aaa jnp (bad) icebp call dec jo push add fwait mov fbld jle mov xor fs fbstp pop mov shrl es and fsubrs test mov jno xchg gs adc push jl mov repnz aas cmpl fistp arpl lods add and xchg pop sub bound loope fstl test fldt (bad) mov ds movsb data16 cmp add and and push stc sub mov cli outsb enter mov cmpsb shrb mov cmp xchg sub and loope fwait cltd (bad) xor ret mov sahf jb std aam loopne pushf mov es xchg xchg es lret mov cmp call into (bad) xlat gs push std ja pop push aas or ss or (bad) mov inc stos out inc (bad) jmp stos lock test mov imul sahf cmp or cmp push jmp add sbb pop add mov xchg mov call mov clc dec std loopne pop xchg leave shrl imul popf pop rcll cmp in sti (bad) iret (bad) cltd icebp into js or insb dec pop je lahf (bad) fstpl movsb xchg lea jg outsl or mov xor push adc mov test (bad) sub cwtl push in xor push push fwait mov push scas out rcll and pop xchg jmp icebp (bad) fmul imul fwait stos cwtl push insl popf mov push jno mov ja jg lds cmp pop xchg fs dec mov sahf loopne (bad) push in call lret orl adc jns dec dec cli (bad) popa mov or fistp jns add or jb inc inc outsb mov aaa icebp cmp and popa cmp adc sub pop daa and push (bad) mov push or into cmp lock out nop pusha ret in mov lds and sub add xor popa shrl add sub sbb push sub pushf mov data16 add fs mov jg daa xor test mov repz cmpsb push dec adc iret mov imul insb arpl sub inc cmp mov outsb sti mov gs push in and outsl xchg sbb fisubrl push insl cmp mov lock imul lea call loopne adc mov adc (bad) addr16 xor inc clc in cmp clc fs loope inc mov cli icebp push incl mov dec sub mov add popf sbb flds mov mov popf int in dec dec pusha mov fstpl jno push sub nop mov adc jmp cld fnstenv sbb xor add rcrb lock or cli (bad) pop pop fmulp out test add push push push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov dec in pop jnp adc call (bad) les cmpsl mov jno jl iret in (bad) in dec lahf dec imul std inc cmp cld rclb (bad) loop fnstsw out push xchg cmc (bad) roll out jmp or ljmp roll push addr16 rorl sbb xchg movl fdivrl shrl jo xchg jo push cmp daa xor adc ds jle mov arpl dec ljmp pop movsl ffree jge lods lds mov in enter iret cwtl data16 addr16 jnp popa sarl into add fstpt mov add cmp out sbb scas dec add mov and push sbb or int mov lock mov cli and roll mov inc ret lock out adc pop pop sub pop out jge jno add lds sbb push sahf fiaddl add xchg sub and scas lods sbb inc sub dec mov aas dec dec mov mov xchg insl mov (bad) nop jnp insl and rcrl hlt (bad) lea and cmp rclb jno mov mov call loop xchg fsub cmp sub dec sub cmp (bad) fstpl pop inc push (bad) int3 push lcall xchg pop repz jnp sub xchg lret leave aad stos inc jl dec aas mov lret mov fidiv jg lcall and jl mov adc scas jns and icebp les mov imul clc aaa ja test imul addr16 xchg lret (bad) sub mov out inc sbb mov xchg sub cmc jmp je push push fldt cmp mov inc cli adc cld xchg jo aas mov ficoml out jl imul inc aam lds xor insl mov mov adcb pop (bad) cmp or ljmp iret (bad) mov scas in push sbb call notb loop pop and arpl mov mov outsl subl jnp push outsl cmpsl ss mov mov in mov inc add (bad) cmpsl mov sbb outsl xor nop pop bound xchg divb lock jb cli (bad) (bad) adc in add scas loopne push fisub cli mov mov ja arpl test outsl xchg xor and aam lods pushf and inc push mov mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret out push xchg aam mov xor pop inc call jle adc les xor popa sti or or add lea pop stos scas test xchg cmc les daa jbe scas subl popf jge daa in inc lret lods mov inc push mov and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov dec in pop jnp adc call (bad) les mov jno jl iret in (bad) in dec lahf dec imul std inc cmp movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 push push push mov dec in pop jnp adc call (bad) les scas mov jno jl iret in (bad) in dec lahf dec imul std inc cmp mov xor pop fistpl movsb out adc icebp call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 lret out inc imul mov xor push clc test test push dec jne mov out jns push mov mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out xchg insb jb xchg dec jo sub into inc lret leave imul in sub jle sbb mov out ret pop mov lock scas (bad) sub aad adc xchg cli lds nop jle out es je es adc inc jmp ljmp cmp mov je pushf bound xor add (bad) add (bad) loop jl and rcll lds jb mov dec aas mov push adc (bad) xchg push scas push add lahf in imul pop mov sbb cld xchg push fbld (bad) repnz ljmp pusha (bad) and inc out sbb xor lea and movsb xchg dec popf dec out out enter clc pop (bad) (bad) mov jmp nop std push sub inc lock cmp xchg into popa pop fnsave rcr aaa icebp jns imul and mov add in stc fcmovbe xchg das sbb dec dec push pop jno cltd or jae or mov xchg and out adc pop stos lock mov cmp jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor cltd out pop push (bad) pop lcall into aas mov aam dec sbb ret scas adc sbb xchg and lea xor cmp pop cmc push movsl pusha insb pop push in fwait sbb daa aas inc mov out jge xchg jmp int3 int3 int3 int3 int3 int3 int3 int3 lret push mov lea mov push and stos add int sub (bad) mull jno cs xor and jae xor inc lea or cmpl add movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret hlt mov arpl adc cld xor in fs repnz jns pop mov fimull lock add mov jno adc mov test cmc les popa repz shlb sbb inc loopne cmp jp jmp out pop daa cmp mov cmp cmpsb lods (bad) addr16 js adc cltd popa arpl (bad) (bad) dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out xchg insb mulb xlat loopne cmp dec rcr insl insb and xor icebp repz lahf dec imul std inc cmp clc sar and jo iret fldenv lds and or out jmp into jge xchg pop lret insl xorl pop in fs cmpsb mov cli popa dec or mov adc mov les xor xchg sbb mov arpl mov mov es adcl and dec mov cmp or xchg fildll add cld xor sarb push add pop popa (bad) and inc imul mov pop inc fdivl mov push repz mov cli hlt adc sbb (bad) out es iret push ss bound dec adc or cmp (bad) mov fidivrl or imul iret push xchg ficompl jmp or inc inc mov cmp jo dec xor push nop sub jmp pop pushf inc pop out mov neg mov rorb mov sbb jnp inc psadbw adc loopne es push lods adc enter insb pop popf stos mov xor cmp test test leave add jge arpl mov mov cmp test cmpsb inc ja mov pop out mov mov ror aaa push mov adc xchg xchg add sub add iret arpl push push xor inc nop sub inc or jns dec rclb dec jnp frstor sbbl das out in jo or mov mov xchg sub add sbb std loope mov stc les into dec pusha dec leave xor sbb loop mov and sar dec repz inc cmp (bad) sbb mov dec sub imul sahf lea mov push iret push cmp lret sarl fmuls nop jns paddsw fstps cmpsb push insb fst sub xlat and scas fstps cltd or fimul jbe jo jmp pop mov or stos sbb cli inc jle pop icebp imul mov aaa ret gs mov das int3 mov push pop sub pop mov call inc nop mov mov jne mov jle (bad) loope sbb test loope decb jl fucom adc popa mov daa dec mov or jno ficomp les rorb (bad) push arpl cmc pop decb test mov cmpsb or push push int3 aas mov lcall push sbb js add cmpsl fwait in aam lods adc push and and or add cwtl and or jge (bad) decb mov out lahf repz jp lock and jmp in in addr16 out lcall add push mov mov cli (bad) and push adc adc in cmp pop sbb add dec cmpsb mov xchg notl xchg insb std lock or adc fsubr cmp test xlat add in hlt sbb (bad) (bad) sub lret mov xor fs daa test push jl mov sbb (bad) xlat xchg jl and pushf pop push pop enter (bad) dec cltd push cmp pop jno ret xchg mov iret bswap push addr16 fsubl out push loop xor mov mov je addr16 xchg lahf andl push jae dec ja outsb popf (bad) sub inc jl and lret jp push pushf push push or arpl imul pop stc std shlb pushf pop sahf pop enter mov and stc push add and jecxz add orl push das add sbb fistp stos mov pusha push push cmc lods adc jg sub xor mov scas aam fwait clc cmpsb jecxz inc push stc push popa jl pop jmp mov lods mov insl xchg cmp aas call fnop outsb (bad) shrl fldcw test nop dec xchg daa push pop sub fldl js stos fwait inc mov fs cli in je aaa mull cwtl pushf xor rcr out sub sahf nop jae sub sub jge into bound and mov imul jne decl or dec mov push mov jb rcr not xchg int3 mov lock inc mov xor xor es mov cltd repnz repnz (bad) cmp dec xor xor mov std loope rcr sbb pop add out divl or ret data16 insb rolb adc jl add dec lea fstpt dec shrb xchg lret ret mov mov insb out ja ljmp insb sbb (bad) xor or pop sbb in adc cmpsl and add adc cmpsb ret sbb (bad) scas dec cmc es scas call test pop pop (bad) stos popf adc lret pop fwait cmc cmpsl jno out xchg jmp mov scas jnp nop mov fcomps fidiv into jecxz adc in rcll mov jb jmp popa sahf (bad) notl adc and lea pusha das mov sub nop dec jbe (bad) int3 add scas stos icebp jb popa mov lahf pop add mov sbb mov jmp roll jbe cs pushf clc je fidivr sub out addr16 xlat ret dec sub loope pushf int3 (bad) push fisub lock (bad) push pop push in int enter out inc arpl mov and push pop sbb repz xchg jns inc mov es lds cld dec cwtl sub xchg adc push xchg repnz mull mov arpl dec sbb push (bad) pop xchg push fistpl outsl jge aam jno call xchg mov lahf fist pushf inc in xor add inc xor mov and mov aas fnop or xchg jecxz jnp aas inc cmpsb pop and pop ret pop jge adc inc int3 js ds and ss stos mov cmp mov sbb mov inc lea stos leave mov je std mov add rcl int add push push stos dec fidiv dec sub test push pusha push fldl2e lahf jl pushf inc adc jae xor pop inc push lret popf stc xor fisttpll add pop jb leave mov stos jp jl scas mov inc insb je ja insb or sbb cmp fs mov (bad) mov std xor xchg lock dec ljmp sbb mov mov sbb inc or imul dec aas (bad) jns push sbb dec aaa add loope fs adc adc or lods dec jecxz fdivr mov (bad) aad xchg aaa loopne cmpsb (bad) adc push std fwait lods stos cmp sar mov ja dec jecxz adc push inc jmp mov movsl dec jl leave mov hlt xor push adc jl lret cmovno ds push ljmp dec pop mov std (bad) mov in and std dec dec mov or fwait xchg ret pop fldenv in push xchg cs movl orl xchg sub outsb inc lret mov pop add outsb jl or hlt push rol aam sbb jbe enter int3 inc pop mov (bad) std or or jmp push and pop popa ja xchg sarl lret inc pop call and xchg jp out mov jo xchg mov and hlt stos fwait ret push xchg add xor jmp int3 int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 ret pop loopne sahf push xlat sbb xlat arpl xor push jbe sbb jns adc inc add xchg mov inc fs shlb pushf adc cmp sbb add xor scas push inc mov hlt lret ss fucomp jmp jmp push or xor inc inc jmp mov je dec and insb stc xchg push test ss add pop test jo nop push repnz jle not int3 inc push fdiv lcall int3 inc push ss iret aas sbb xchg cld jecxz (bad) cli mov push jo insl or xchg lea sub int3 mov fldl2e mov mov pop or mov movb adc xchg push push mov jmp into repnz jb daa push addr16 fisubl das lret iret mov inc cmc rolb pop movsb int3 dec sbb popf dec push sub bound mov jg int out cli mov or nop jo push push jmp imul and lea sbb ss outsl cmp (bad) mov push (bad) hlt (bad) rorb cmp lret repnz add neg sub sbb dec pusha lods into pop dec mov pop es fwait cltd orl sbb push dec xor pushw sbb in xor push xchg inc outsl shrb xchg fdivrs jbe dec icebp add sub mov cli lcall inc mov inc pop loopne rclb stos bound jmp dec mov in neg popf in sbb in or scas cmpsb cltd mov inc aam (bad) movsl sub or dec push in aam imul push push xchg imul mov roll inc repz jecxz lods nop and dec add and or adc in mov xlat aaa jb das lcall push sub inc mov hlt rcl lret cmp and movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 lret push cltd adc adc jl into inc cmp adc push imul sti test pop imul mov rorl inc lcall fisttp dec sbb jo or fldl dec push and add test add adc pop lea inc add sahf add fs leave stc xchg push insl xchg push jb push fldl dec adc adc mov sbb xchg lods cmpsl sub jle push out pop xor test dec (bad) aaa sahf inc (bad) data16 fdivs mov jns test cltd xchg shlb in mov xchg fwait pop in pop inc add or dec sub adc xchg jb cmp mov mov nop jo adc xchg cmp jmp push adc sub ja repz sub sbb mov loop pop jmp adc loop push jb aas push lds test xchg jmp mov xchg ja dec fnstenv aam cmp inc pop gs xchg jnp jmp push push jg data16 inc loope les daa sub mov sbb imul cmp mov xor add mov or push add je fmul test sub and ficom or xor pop je lods xchg dec mov addr16 sarb orb repnz or sbb pop mov out mov cmp icebp les test aaa repnz pusha jb movsb sub mov xchg xor lds pusha sub jl jp bound mov out cs xor divl xlat push (bad) xor inc or pop js jp push mov (bad) icebp repz loopne and xor mov rcll inc xchg mov sbb pop hlt popa fldcw orl jecxz imul imul lods data16 stos mov cmpl nop lret in fsubrs rcr insb loopne into sub insl jnp jbe jo or sbb mov cmp in cmc jl cwtl outsl sti dec add push mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push push push mov dec in pop jnp pop lahf call (bad) les jge jno jl iret in (bad) in dec lahf dec imul std inc cmp mov push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out xchg insb jb xchg cs movsb inc shll mov in lahf mov or stos in fidivl lea xlat push mov ja mov or mov int mov test mov sub xlat mov mov cltd mov dec insb jmp cli cmc cmpsl xor push inc jae sub xchg icebp inc stos jae cmp xchg inc mov cli push jp pusha (bad) or fisttpl jne (bad) int3 rcrb xchg aas mov out push and add fdivrs mov lods lods cmpsl pop notb repz push fisttp jmp aad int3 (bad) call out out lods jmp cmc in sbb nop xchg mov in mov mov je aad adc pop rcr pop xchg sahf jnp arpl mov add jge push mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 xor add bound rclb cli sbb les stos scas call adc jmp ret in and popa mov inc jle femms sub rorl mov movsl fldl adc dec sarl (bad) or ds or xor dec fadds mov pop mov in cmpsl jo add push (bad) into or and xor int popa jne push cmp dec push inc cs xlat insl jmp inc loop (bad) stos jp in dec shlb cmp in lods mov das ficom add push mov mov aad lret in incb addl or mov mov hlt xchg sbb xchg (bad) mov into imul sub imul repz repz in shr push lcall (bad) outsl mov psubusb (bad) mov pop inc xchg adc (bad) insb adc add mov mov xchg cmp lret sahf fisubl pusha popa mov and push out loopne loop sub ror aaa lods cmp inc and push (bad) push mov push xchg inc xor and dec add scas sub and mov push mov push jmp es and cli insb cmpsl jmp les stos or test data16 movb mov add inc mov cmp out lea add nop xchg add cltd push data16 sarb jmp rcr mov into add call mov pushf popa scas arpl iret aam adc or icebp lea cmpsl sahf sub ljmp cmp mov sti xchg cld pop cld mov mov push push jnp fdivs pusha ds btr xchg xor jbe pop jne test pop addr16 mov test xchg dec repz aaa shrl mov sbb pop jecxz sarb movsb or push in cli out mov push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 sbb push mov cwtl sub and mov lds mov add mov and mov xchg les stos push test pushf cmc (bad) (bad) adc cmp jp pusha insb pop push xor or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 xor roll ljmp push int adc (bad) mov cltd movsb jnp or dec lahf dec imul std inc cmp push mov and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret loope xor mov and jne,pn mov or mov xchg lret nop fimull and push lret dec sbb shrb sub mov pop jmp fstpl inc push pop mov out gs push bound or scas clc sti xchg cmp loope fcomps lock and jb mov fisubrl mov into and jne cmp lahf (bad) cld sub je pop in jmp cmp or dec add fucomip mov insl test or push push pushl seta or ffreep aad dec enter inc repz stc jns sbb pop mov das sti ds call xchg addr16 add jnp fstp in lret and jle mul jae mov pop jnp sbb fbstp push xor xor sbb push push inc xlat mov push mov jne jl imul icebp sbb pop gs into pop push sbb lds mov iret mov mov inc pop dec pop mov rol test cmc lcall mulb sub sbb mov cmp mov mov (bad) pop int hlt lahf add lds idivl out xor xor inc sbb add cmp pop mov enter cli lcall aam xor mov lea lcall addr16 push (bad) insb mov fstl ficoml jnp push scas inc lea in (bad) mov jl add xor jno jne and lahf or fucomi sub xor sbb mov add in jo sub std xor ljmp mov leave sub adc repnz rolb das pop xchg (bad) pop insl lret pop (bad) mov rorb cmp ljmp stos xchg sarl mov sub test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 inc bound add loopne pop mov ja cli std outsl (bad) aam dec adc mov out jns sub push mov push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out xchg insb jb xchg fcomi pop mov js pop xchg xor cmp xchg lret lods jle mov orl xor inc dec std and cmp push lods fiaddl aaa jae sbb addr16 dec or add in mov cmp repnz jmp sbb mov int3 test cs adc inc in test pusha rcrb add dec or xor mov and pop add adc es adc xlat (bad) cmp xchg enter cs pop push push mov cwtl sbb jmp pop scas mov (bad) out cmp ret jae xchg push cmp std inc inc jb call out outsl push cmpsb je xchg sub aaa mov jmp fldcw loope xor xor dec imul mov daa fcoms xchg lock test mulb push stos lods jp push cs aam push inc es dec scas (bad) sbb (bad) push mov and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out xchg fs sbb iret ss popf es (bad) les mov jmp fidivl unpckhps out data16 fwait ret xchg jnp xchg and or les push push out push xchg cmc push mov push je or mov xor and icebp xchg int and mov jp cmp sti and jne adc mov push jge jge mov jo dec test fistpl xor cmpl sbb and test adc imul add and push dec inc (bad) cltd push ss jo xchg out daa fidivr fbld pop mov fsubs sub mov xor dec inc sti mov ss sahf mov mov sbb push mov push (bad) xor sti es int mov rorl shrb ret shlb adc add fwait aaa movsl push ja xor dec mov dec (bad) pop adc or mov xchg xchg jae jo sub insl dec mov es mov sbb out push inc mov ds js pushf movsb mov cmp pop pushf jmp push rolb xchg adc aas cmp push cmp mov sub xchg mov iret enter push fisttp stc xor outsb nop inc lahf cs ror aaa cmp ret jne or push leave xchg negb sub (bad) lret pop cmc inc std add lahf out in xchg rcrl rcll adc dec add cmpsl adc (bad) aam mov sbb cmpsb test ficom fyl2x jno movsl popa scas bound cmp and (bad) mov (bad) dec fstl cmp in lods mov dec bswap jmp inc mov clc ja jge shrl adc popa sbb jg dec (bad) xor jbe clc sub ret push sub sbb mov push mov push mov cmp cmp int3 lret cld adc dec ret (bad) xchg add (bad) (bad) mov sub lret pusha call lods popf jb mov out adc or pop lahf push rorb into jne imul cmpsl cmpl nop jae nop xor aaa aaa out pop ret xchg sbb mov cmc jns jbe (bad) or sbb insb cmp out ds adc inc loopne (bad) sub and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 xor xchg out xchg fs sub dec jo nop mov fstpt mov cmp cmc ret dec mov push xor fdivs rol js insb adc adc rcrb out gs pop arpl fsubrl pusha push sbb fs ja cmp xor xor or add inc mov fs pusha stc jmp pushf xor mov shrb lret jb xorb xor lods cmp push xchg jle mov and mov in lar in and mov ret je popa gs pop push clc push jecxz mov add dec mov mov lahf mov das rorl and shr test imull inc lahf mov inc jg ds cmpsl mov leave ljmp add fisubr popa mov mov (bad) aaa xchg bound decb rcrl push movsl dec cmp cmp xor xor in ds xchg std mov or int sub lock fnstcw mov test insl cmp imul gs cld mov sbb or (bad) mov cmc or inc xlat pop mov pop lret (bad) int cmp arpl xchg xor add mov push push fldcw or and test popf dec push push dec sbb (bad) mov xor cwtl inc mov in call adc mov sbb pop negl xor leave jae sbb frstor stc bnd es call add dec fist mov cmp jp aam xchg int cld lea and das (bad) lock mov xchg push xor and mov xchg sbb scas add cli sub lea mov sbb cmp ja sbb lret xor jnp mov hlt xchg mov mov lea cltd test cmpsl mov lret into add fstp sarl (bad) mov mov rcr dec and icebp in movsb mov insb add test sub jne jg push xchg jg xorl jg cmp adc cmp push sub (bad) dec adc popa int3 xor pop mov or push aam mov idivb dec push loope fstpl xchg outsl mov rolb xchg scas clc sub gs cmpb mov repnz fdivr sbb mov xchg cmpsl xchg pop sbb adc mov shl adc mov addr16 xchg mov push add bound loopne pop add mov icebp je mov inc mov outsl fist test stos add enter stos inc in and mov mov popa cmp fmuls mov jle (bad) cmp jno jb gs push gs sub (bad) xor insb jnp mov xchg iret test out aam pop or and cmp test inc sub movsb mov hlt stos repnz and loop test out int3 fs popf test dec pushf in test xor test lds cmp daa push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out xchg fs jnp loopne jg dec stos and and or dec push in scas dec jae sbb lret fwait mov popa add inc push cmp jmp fdivrs adc fdivs bound daa jmp test shrb cmp loop adc test popa or out jnp push test cli (bad) clc inc xchg sub jle loope cmpsb jne std lock arpl movsb or je subb daa dec out inc mov roll cmpsb test insb sbb lret aam outsb push or lcall int3 sbb mul hlt sahf adc cld xchg lret in fidivl inc add mov and ljmp jns iret jne mov ds insl pop and data16 popf mov shlb xchg xlat mov stos push das jmp sbb subl inc jmp sbb dec jg test ljmp push int3 jno mov dec js adc (bad) repnz movsb mov pop pop xchg xchg fcom add ljmp mov std js adc in lcall lahf mov nop sub (bad) adc pop nop add lahf iret movsl and xchg mov aaa mov xlat inc cmp fistl push rcrb push in dec push rcrl xchg xchg ret out xor cld cmc test adc std fcmovu sbb loope mov push mov mov cmp jbe daa xchg mov inc mov ljmp push jge pop subl add or mulb pushf lahf dec subl sbb arpl cwtl push imull pop jo or push mov pop in xchg pop sbb dec mov mov nop xchg xlat dec mov cmpl (bad) cld jbe rcr shlb (bad) dec ret xchg cmp mov (bad) idiv repz sti fldt mov push xchg cmpsl push mov xchg adc mov pushf jge mov mov ret xor inc mull add jno pop call jb and mov sub (bad) (bad) or xchg add jb (bad) cmpsl aaa mov add lret jb add scas loopne xlat data16 xchg (bad) mov sub sbb aaa cmp mov xlat add (bad) loope mov jbe out xchg nop in sub sub jg aas inc fldenv mov and inc xchg mov dec or mov xlat or negl in xor or xchg mov fchs (bad) fcompl mov jmp cli add or mov jnp mov mov dec in mov pop push push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor lea mov jmp xor sbb jb outsb (bad) xchg js jae test xor dec pop je mov into out cmp bound int into dec shll test or lds inc pop pop loopne stc aaa lret cmp or mov push out pop xor sbb mov add pushf dec icebp xchg adc les inc mov inc gs mov push aad mov daa sub mov sbb sbb (bad) lock mov xchg iret fstpt pop sbb push xor add xlat or shrb clc mov in mov (bad) imull jo and inc lds sbb push xor movsl cmp divl xor fwait cmpsb mov pcmpeqb mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 lret push int and push mov test jne call test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 mov dec mov (bad) dec loop jg enter and mov dec push mov fnstenv cmp sbb orl inc xchg mov es ljmp sub pop push xchg cmc sbb out mulb bound daa scas add imul push lods fbld test aad ret lret mov (bad) mov or mov push push push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor aaa mov sub xor dec mov nop arpl sti stos repz xor sub jmp ja xchg xchg test test sarl mov cmp inc sbb in incb loopne push loope dec imul cli jne js lods pushf bound xchg add mov popa cmp mov cmp sahf cmpsl add dec dec mov ja (bad) ds mov repz push out push lcall push test mov mov leave xchg cmpsl xchg popf dec add cmpsb aad adc aas add push pop and (bad) cmpsl mov fidivrl imul les jno add adc pop into scas inc mov jae xlat mov (bad) sarb pop xchg and (bad) cmp call inc test inc int3 cs outsl xor mov mov aas mov adc pop data16 imul cmpl data16 push xor bound int dec fmull aam sahf fistl cmp movsl sbb inc ret adc mov mov cwtl scas mov test dec ror push mov icebp lret (bad) rdmsr jecxz je (bad) mov loopne mov xchg (bad) pop push mov out jle inc mov cmp es inc pop or add push call sbb push gs dec xchg out fistp inc jae mov fistpl mov call sbb adc dec cmp pop add sti push sub ror mov sub cmpsb cmc xchg in cwtl loope mov scas pop loope daa push add mov movsl dec cmp ljmp cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 xor xchg out xchg insb jb (bad) (bad) mov xor mov into fimul push push mov mov (bad) dec cwtl xor mov daa ret jo loopne cli jmp test or negb hlt pop xor scas test and fs jmp sub cld lret sbb push (bad) ljmp xchg gs pusha push push dec xor push pop cld jno cs out jmp jecxz jp push jecxz leave ja or xor int dec flds mov jle xor lahf adc je adcb lret ljmp mov xchg sbb repz mov lea sub adc cwtl popa jge adc sti inc imul in and (bad) dec pop fmul sbb gs and mov pop jns mov mov xor pushl sti scas pop stc cmp test mov loopne mov lret adc xlat outsb xor cmp or jge repz pop (bad) and jne,pt iret imul in add sbb mov sbb xchg xlat out les mov cltd imul push mov imul stc pushl inc push adc pop jno xor cmpsl sti jne xchg pop inc dec data16 int mulb addr16 dec out jno scas int3 mov rcrb add xchg mov leave push push sbb outsb sahf std inc (bad) jo ficompl push pusha imul pop arpl sub in aas pop mov mov pop push mov mov add push cmp loopne push pop lahf sub inc jl lcall daa in aas dec lock sub dec sti jbe repz out insl and std inc scas call xor and jbe std xlat mov cmp fld insl cmp test rcrl movsl jae aaa (bad) aaa leave dec pop dec push scas mov mov imul sti cltd rol out lods dec scas add cmp jl adc mov cmc shrb cmp (bad) (bad) jbe mov out adc push mov sub xchg cmpsb fisubl jg in scas out sub xchg cmp xchg insb mov fdivrl inc mov or pop and sbb mov test push test mov movsb loop loopne mov lods in daa mov int3 sbb int3 fnstenv ljmp test fstpt push jp mov fnstenv pop imul cmpsl adc mov adc mov adc mov adc mov adc lea adc mov adc lea adc mov or cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc test mov jl in jmp sub leave mov shl sahf add cmp sub scas into sbb mov sbb mov (bad) jecxz ds cmp jl cmc imul mov jge mov and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov sti nop stc pop into int3 test incb xor mov fcmovnb ja pusha adc pop xor daa repnz daa test stos das fsts push pop enter (bad) lret or mulb jbe jns mov adc scas xor cmp and jmp leave test test and xor sahf xchg push pop and adc lods adc xchg pop cmpsl jge add int3 out leave cld dec and and scas in cmpb stc adc sub sub jl mov fild lret iret jbe rorb jo cmp xor adc fnstsw mov push add sti call es mov fwait mov imul push mov sub jg or mov (bad) sub dec insl xchg pop les sbb push sub inc jno add sub pop rclb (bad) push sahf ficompl or imul hlt add movsb adc (bad) clc mov xor rcr enter xchg dec xor push push jb leave ds sub cmp sbb (bad) out pop push mov cmp das xor scas stos dec add imul outsb push mov mov dec mov (bad) jno,pn push or inc ss je movsb add fs jp mov xchg and daa (bad) mov pop jge loope ficom add jne mov loope test jo enter loope lahf sub inc jmp sarl lcall insb dec mov lret jo push je mov call popa out aaa mov mov mov fimul mov jae mov aad adc mov (bad) mov cld scas je cmpsl faddl daa mov pop mov lds fldcw lods sub and jp ss cmp pop mov xor gs xchg jg cmpsl push mov push mov pushf gs nop lods sub xchg cmp (bad) sbb sub sbb aad (bad) cmp js xor pop into ds clc insl pop mov xabort hlt push (bad) mov push cmc out in pop push cwtl or popf push adc popf leave or das pop adc jnp mov push inc iret xchg cmp or stos jle rcll push sbb xchg loopne (bad) inc sbb nop int mov jmp ljmp pop push in xor stos (bad) dec in xor mov les pop cltd mov fnstsw fadd es and xor inc cld nop push out push ja sub (bad) out push ja cltd in nop mov inc jecxz inc out nop (bad) shrl incb or sub fidiv push ljmp (bad) or sbb (bad) jno in pop mov les mov inc mov jb (bad) fisttp aas cmp xchg out mov xchg cld das hlt loope inc (bad) mov push push out add sub jmp xchg dec push inc aaa imul out icebp pop pop or aas push (bad) jae sbb mov jno pushf fstpt inc sub lret cli or jae add (bad) lods push and call xchg hlt push pop loop,pn ljmp add dec lods mov xchg push repz mov push push or sbb inc adc lcall mov pop andl out push pop insb adc xor pop ss adc mov and aas adc push movsb decb pushf test mov vmovups dec std xor adc jmp pop push dec js (bad) aam jp stc sahf adc mov test fistp and xchg cmpsl xor or idiv sbb push mov inc push lds das mov (bad) clc mov in in popa in push repz add sub mov jecxz fisubl xchg inc iret popa das fimull addps (bad) rcr sahf sub cmp lea or outsl adc loop pop jnp out push inc scas lods pop xchg ficoml fistpl hlt adc out aam sub in test mov aad int sti sub xchg stos fsubl divb aas fldl adc sub enter cmp sub sub insb leave add outsl aam add fsubl in dec mov icebp iret mov push or xor fistpll add out push adc or cli jmp jle and iret fcomi dec dec out imull add jb (bad) fcmovnu lcall mov add loope (bad) mov add jno mov fildl cmp imul dec jle lahf cmpsl adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 xor jp,pn lahf mov test fdivrl int xchg inc (bad) test xor or xchg sub test out popa lods mov mov jnp aas cli insb jne push sbb stos cmc stos sbb dec jae lds pop xchg lahf (bad) (bad) in jecxz mov pop repz iret cltd pop fs pop (bad) mov push popa lods adc clc cmc mov je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl daa repnz pop or sbb push jns cs aaa sbb add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 lret push xchg lock jg push and in test jb shlb fidivl std mov aas xchg cmp or cmp push in ja mov test in jmp cmc les xchg out imul mov add xor stos xor lret adc mov test lret (bad) ljmp (bad) mov add cwtl xchg inc mov or popf shlb test lods nop (bad) cmp jge outsl das (bad) iret mov jp mov mov xor pop mov je pop dec jecxz data16 sbb add adc and push loop (bad) cld xor in jp scas sbb pop mov mov test mov shl pop jb mov repnz mov and mov jg mov lea pop in xlat xor aam test mov rcrl and fisttpl mov and mov les xchg imul dec push daa fisttp fdivs aad and inc stc cmp test xchg (bad) xchg data16 sbb out push jl gs mov push clc dec lock jns ret sbb mov push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor out xor dec mov xlat dec int pushf sub rorl inc fisttpl pop sub mov inc pop stos stc mov nop add jae dec jmp cwtl scas lret mov out dec fucomp icebp test sbb icebp fstps push mov icebp lret and (bad) sbb outsb or idivb mov jge or icebp jb xor nopl mov cltd cmp scas xor fsts cltd dec sub cmp ds dec sub push push mov jnp cmpl inc imul repnz popa stc out loope mov popf (bad) sbb jbe cmp cmpsb imul das pop adc fwait pop dec xchg insl notl push iret cmpsl int3 push mov ret jmp jnp fwait cmpsb mov test jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 xor xor fld dec loop mov int3 addl xor sbb clc inc lcall jge addr16 lret and loopne outsl cmpsl adc sub mov lcall mov je inc cmp mov xor lret ljmp hlt (bad) in push out ds mov or enter mov push stc sbb inc lahf fs daa dec ficom outsb imul jo test nop pop add mov fist test cmpsl push test jo pushl mov push aaa cltd (bad) sub cld fisttpll push jne dec sbb xor push cmp enter cmp or div mov shrb push addl jle divb mov aad inc and xchg xor (bad) in xchg (bad) dec cmpsb and sti mov jb (bad) outsb lods mov ret ja dec inc nop mov jb dec mov push out lret mov add and and repnz cmp mov push mov or mov jo adcl lret adc std inc out fisubr xchg imul sub sub dec mov test in ret mov ja es and lds inc lods adc insl imul lds xchg (bad) mov mov inc pop jl insb or xchg ljmp in dec fisub jp cmp adc movsl mov daa mov in mov ljmp xchg pusha loopne (bad) push jge xchg das les lahf sub sti mov jg aaa out in cmp dec (bad) ja and jp push in cmp push rol mov mov jecxz xchg xor pop sbb lret sbb (bad) (bad) mov and lds push pusha xchg outsl fild fidiv stos movsb and dec repz test icebp lahf pop fstps hlt cli out in adc push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 xor out xor dec lods (bad) iret jo enter push jb mov aad jmp es lahf cmp push pop inc fidiv lock pop mov and mov pop and notl and out jmp les fistp cmp mov lock test adc jnp (bad) jne jge outsb in (bad) add adc movsl sbb (bad) das inc daa fstps adc inc pop jno inc cld xchg mov les lds stos pop fwait lock lds mov jns xchg xchg or sarl pop imul nop inc inc jge aad into int movsl insb bound adc std sahf das loope cwtl pop dec adc loope pop dec xchg push jnp cmc inc xlat mov dec pop pop push popf scas jmp jnp fwait cmpsb mov testl mov cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 xor pop fcoms mov loopne ss push cmpsl outsl mov mov in sbb mov xchg (bad) das jle fwait shlb jmp pushf jne ret fisubr fildl jmp les daa mov sarb xor push ljmp dec add call mov or xor push inc add cmp push imul add movsl or jne out lods mov adc mov aad xlat and ds cmpl mov and push call add arpl in sbb rcll inc push push pop orl roll adc aas mov adc cwtl push bndldx shlb cwtl push dec sbb les int3 dec or mov mov sub sti dec sbb jmp or inc inc cmp xchg bound test pop jae sbb push fildll inc es mov xchg daa mov xchg push adc test push repz sub mov adc aaa jle leave xchg ss jg loop adc lock mov and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor repz push stos pushf nop stc lret iret int3 test xor nop or sub jno push pop enter cmp mov fldt mov stos mov test jnp ret pop sub jle jl cmp and rorb dec mov lret adc iret pop fsubrs adc (bad) mov inc in or or add stc sub push test add xor cmp cvtps2pi stos std into push mov jo mov out rorb dec lahf out jge cli sub adc jg mov daa jne fwait dec insb icebp test xor add mulb mov clc cmp pop cmc imulb lahf ret hlt test push mov xor pop push mov and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 xor daa add xor shlb out mov aad test fisttpll push push pop call add mov shrb pop sub cmp call ds sub out jmp dec sbb repz in decb clc enter jmp xor ja,pt stos mov or cwtl xor bound lds cmp xorl or cmp js cmpsl icebp adc stc arpl mov jmp cmpl es nop pop sub push jno xchg jmp xchg xchg inc mov jns push pop inc repz stc stc add pushf movb int in nop xchg (bad) nop sub cmp pop in cmp adc das test push xlat sahf mov pop pop cmp call fild mov xorl cmp ja lock mov into popa sub mov (bad) jle test outsb xor sub inc sub lods adc (bad) pop add add in ficompl sub pop es push mov pop es sbb adc lcall aas inc je push lea mov sub sub xchg sarb pop fdivp adc test je mov js test icebp push or push mov jmp int (bad) ficoml out leave and add das cwtl jne ret inc leave xchg dec fwait cmc clc stc lcall sar mov cmpsl mov jp or (bad) adc lock aam scas arpl test (bad) and lret nop inc loopne lds jbe mov testl cmp or lret out sub pop fldt hlt insb sub mov xchg push adc push mov xchg mov mov outsl mov iret loop or add add add push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 lret jbe push negl imul push movsl popa int3 aad test dec in xchg xor or sbb dec fdivl es (bad) das fsts dec push mov adc shlb lret imul pop add lds mov lods dec cmpsl imul mov cmp mov outsb and add xchg pusha orl pop push lret out lods jae lds lret adc dec add nop (bad) sbb cmp add in in and pop mov sbb ds dec push sub int3 cmpsl jns jb jmp and out cmpsl jno (bad) push inc stos adc adc mov imul int3 dec jge pop add dec subb ds hlt (bad) sub dec mov pop jmp aad add inc adc pop inc adc inc xchg nop and es call cld outsl add push dec sbb pop cmp cli xor jb or cmp outsl icebp sbb lods add pop lods xchg xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 xor xchg jae pop mulb inc mov sub shl push clc test test push dec jne mov out jns pop and or cmpl xchg mov cmp aaa leave add or cmc (bad) cmc ffreep dec (bad) (bad) je (bad) jno sub or xchg xor imul dec clc loopne test and pop xchg mov ja mov aaa jg popa mov enter sti mov insl sti xchg xchg scas out fistpl outsb es adc jecxz pushf add fldl2e push pop cmpsl pop addr16 hlt addr16 mov xchg lea iret lds jle xchg mov and fistpl (bad) out lock inc or mov jae test (bad) int test and add lret insl ficomp outsl xchg inc fnstsw repz xlat sbb dec mov jnp repz mov or adc mov xor xchg nop adc sbb (bad) fidivl mov xor stc xchg inc push inc add loop push pusha inc mov sbb popfw cmp stos cmp push dec lods into loope xor adc arpl inc je xchg jnp xor add jae inc pop rolb les popa loopne cmpsb mov mov add or add xchg cmpsl nop enter cmp pop sub fld lods (bad) rcrb sub mov out or nop jno dec mov rcll lcall lcall mov fs cmp cmp fucomp in stc or lea arpl int3 in nop adc pop xor icebp les outsl out jmp (bad) aam or add (bad) iret movq xchg mov test mov fdivr sub and jl sbb aad mov adc pop dec ror xchg cld mov enter dec mov or stos dec pop xchg (bad) push mov sub or cmpsl jge fsts add sub ficompl xchg rcll js rclb aam jb mov mov (bad) in nop sub xchg fs jae mov mov mov pop jbe bound push imul dec mov dec enter aas dec inc mov rorb add pusha sbb lea push (bad) jmp push les test pop pushf mov mov int3 mov inc js std das push lock int add shl out and movsb inc sub pop xor jbe movhps sbb imul enter (bad) pop xlat sub xchg inc loop mov stos out (bad) int3 sbb xchg add push in (bad) inc xchg pop stos (bad) mov cmp lahf insl insl fisubr enter into push lret xor xchg xchg cmpb pushf jae mov xchg adc cmc adc test jge pop ja stos (bad) out scas or hlt in mov push pop inc sar cmp dec pop push mov push mov lret aas cwtl push (bad) jo cmpsb ss mov mov dec jne div test sbb xchg sti in popa sbb out outsl xor lahf ds sbb or outsl stos and fstp in push fwait jo inc xchg mov decb push mov pop adc dec clc or test fidivrl call out sbb js sbb pop scas pop (bad) mov xchg (bad) dec (bad) loope lea xchg fimul mov pop sub ds imul adc (bad) aam imul mov nop ficoml les addl test mov sbb rorb pop jb and das mov dec xor fwait push lea inc out or xor push in adc pop jno sub loope sbb mov mov (bad) (bad) push adc cmpsb or outsb xor (bad) jmp inc mov xchg jg aas in sbb dec lods push mov and pop das out dec in fsts mov sbb out loopne mov mov mov clc aas jno scas (bad) jl mov xchg inc mov push arpl sbb sub scas (bad) (bad) fiaddl outsb hlt outsl sub call cmpsl jmp and inc jg lds jcxz jae rclb mov mov enter mov fisubrl cmp jmp add mov jae mov jne jmp dec push out mov xor pop cmp push rcr icebp fstpt rorl mov stc lret cs dec cli movb divb pop add pop xor cmp ss xor xchg xchg xlat push insl lret test icebp or cmpsl fsts xchg rorl scas sub repz jl shrb fiadd mov cmp stos adc jle pop or out into out nop pushf movsl in push add cmpl inc int adc popa outsb aaa push cmp std cwtl push rcrl pop lahf sub (bad) xor xchg pop orl shrl (bad) jbe mov insb cli pop es adc push (bad) add mov dec mov mov movq add inc std push aam or mov xchg xchg add daa inc push fstpt fisttp pop push stos loopne idiv das cmp dec in or out bnd or jmp gs out lcall ja int stos lahf pop movsb and in mov xchg cmc loopne fisttp adc jmp jae lcall jmp jle xchg mov aam dec add mov shrb arpl mov push jmp outsl rolb sbbl jnp xchg inc cld jecxz std iret cld les aad fiadd xchg jl xor lods push xchg sub add (bad) lock fs outsb movsl fcmovnu mov cmpsb lods dec mov loop xchg fist pop inc in out std xor or les outsl push les test (bad) lock xor rol sub jecxz loopne mov test sbb mov dec pop popf jne adc imul shrl dec push and into out mov cmp popf movsb fwait pop push sti repz push (bad) stc mov lods pop in popf (bad) pop sub dec test fwait cmp push push pop jnp je xor jb jo cmpsb and int3 lds inc popf add lea mov or icebp push test lock lds bound loop and ret repnz bound mov adc and cmp pop push movsl idivb add popa push call cltd fnsave add mov sbb jmp mov inc xchg out mov mov sbb jmp cmp push ss sub loop (bad) mov xchg lahf cmpsb dec pop dec shrd xchg in (bad) xchg fldl or addr16 (bad) mov adc sahf sub leave repnz xor int adc jecxz lods fwait cmp xor inc out repnz (bad) dec sub mov call xor (bad) cmp aad icebp idivl nop xlat popf das xchg ss mov xor dec out test fwait cld divl pop add or aad push dec fsubr insl (bad) sub mov insl (bad) lock (bad) (bad) dec xor pop push cwtl xchg xchg stos mov int lret sub sbb fmulp repnz and out (bad) mov imulb js jnp add fistpll fcoml jo lahf std das lods mov adc mov (bad) nop xchg add loopne sub add jns pop (bad) out mov xor cs push pop dec xor pop subb cmp pusha fwait inc mov aas stos (bad) mov inc mov adc mov dec dec jl jno mov add cli push outsl in lock add jbe fildll fcoml shll xor fisttpll (bad) add nop and ret push pop push add pop and jp or and fs aam aam adcl mov into inc out mov and and sbb ljmp out push push cmp jge sar fimull and xor xor fdivrl fist sub aas out cmpsb out cmp ja or mov mov mov push inc inc fwait das pop inc mov rcl sub aam lds out pop cmpl mov out xchg in stc xchg stos sbb stos lret adc movsb or mov mov mov or cld adc jno mov jmp in shrl add addr16 xor loop adc inc dec mov pop mov movsl test sbb pop xchg rorl call and push pop jmp push xor mov mov mov xchg arpl scas and mov and push mov sub lret push sbb mov pop push sub in das insb call push in lcall push arpl jno repnz icebp outsl call push xchg pop je pop push lods je mov xor repnz cli xchg outsb mov (bad) jge stos push outsb fwait pop repz push mov sub or mov lret ja add je jno push loopne movsb mov cmp dec lcall out cli xchg cmpsb pop cmp mov fcoml xchg pop mov (bad) mov pop adc pop cmp sar aam and out imull cwtl dec jo lret das into loopne and xor outsb adc int or push jb cmpsl adc mov (bad) into push dec insb and add sub imul aas movsl dec popa push lcall mov cli jl insl clc in (bad) pop testb xchg sbb lcall pop sbb and fwait mov lods jl incl test push mov jne ss pop in mov push loop arpl xchg xchg mov sbb xchg sarb mov repnz or fisttpll pop (bad) xor and or jns movsb test fstps xor pop xlat inc push sub and loope mov adc jne outsl das lcall test nop xor dec (bad) cmp cmp movsl add (bad) and fistpl lods int3 mov jnp loop popf push lock aaa or leave dec in fs push iret xchg pushf dec test xchg mov add inc int mov loop fs push xadd dec stos cmp cmp xchg and notl xchg mov in xor mov add pop imul out jmp xlat pop outsl push repz or addb adc movsb jmp (bad) out pop jge stos mov out es (bad) push pop pop (bad) outsb cmp mov mov lock inc cmp mov ljmp xchg mov cld movsb or xchg pop rcrb or loope jo cli js and in jns inc ret inc xchg lock mov and es pop pop aas and icebp xchg scas imul xor inc cmp rclb cmp ret mov rorl mov out sarl aad out pop stos sbb xchg mov loop rcll jl mov xor cmp lods aaa xorl xchg outsw es xchg pop (bad) jae lret jnp ljmp sub ficomp das aad roll ret jg jae out xor iret push mov xchg sub test leave xor mov mov jle mov mov ret (bad) hlt call lods mov dec das movsl mov aad enter add cwtl or lods dec sub je jno pushl movsb cmc jg or (bad) (bad) lahf fildl xlat popa pop or das ror dec inc sbb pop out xorb dec jp xor dec fdivs pop andb xchg out ret sbb fnop std lds xchg shll in (bad) push push sbb clc iret movsl mov push cmpsl rcrl xor stos adcl jge jl push mov xchg sub cmp sub fcomps fwait push cmp and sti cmp aas loop loopne adc cmpsl dec adc aas xor lods aas push les scas xchg aam pop xor push jge adc rorl pop adc stos push insl push pop out in enter push sbb jmp testl dec out sbb sub (bad) pop cmp jg and movsl insl adc cmc repnz cmp adc mov xor rol sub loope clc addr16 mov jnp bound and int3 fsub mov push popf stc mov xor ljmp and inc faddl mov out mov fsubs test mov lret adc mov movsb out je pop fdivr stc push or clc test scas and aam dec dec loope (bad) fldenv jae adc or push and xlat push cli rcll and ja popl and sbb mov cmp (bad) hlt (bad) dec push das xchg mov xchg and test mov adc cmpsl cmp jg imul pop scas movsb dec xchg pusha fldcw xchg (bad) pop mov arpl data16 dec cmpsl or fsts loop sbb pop ret mov andl mov pop in out sahf pop imul icebp pcmpgtb repnz imul jl mov test sub jne lcall push mov xor cltd andl test stc push sbb jo xchg mov sbb sahf jmp in movsl aaa sub mov sub dec lods hlt push test jns push bound fstpt cli cwtl hlt push and rorl push and movsl jecxz inc cmp pop cmp mov aas pop shrl or es in xor cmp pop dec jne addr16 int jg and sahf jb insb lret mov movsl push pushf ret mov adcl dec pop cwtl xchg pop mov in push test xchg xchg push inc jl sub dec rolb subl push cld adc jbe (bad) mulb jne jo out mov in adc add cwtl cmp insb xor icebp add sub xor mov cwtl push mov lods repz stos xor or dec push lock arpl push push outsb xchg sarl subb sbb movsl push (bad) lock sub mov outsb xlat push movsb xor xchg sarl imul pusha fcoms inc jge (bad) aas dec ja mov cmp loopne leave (bad) sti pavgw push lcall mov repz sbb iret lret stos mov cmp fdivl mov or push stos cwtl or xor sarb jecxz pop sbb dec imul test mov pop add mov add mov mov nop and pop popa ljmp mov (bad) and lock mov inc adc arpl out seto outsl xchg adc push cmp pusha movsb icebp mov jecxz ds js xchg fisubr sti jp jmp shl adc mov loop into rol and jno xorl in nop mov adcl bound jecxz pushl cmpps fcoml aas xor inc and pop out mov xchg aaa (bad) push lods add (bad) loope int3 mov insb dec push or nop cmc inc or out push cmp es xchg mov popa cwtl loop mov rcrb aad pop aaa popa add sbb sti idiv mov xchg popf lds sarb insb mul or mov insl pcmpgtb ljmp xchg in jae mov dec mov (bad) out dec cmpb fs xlat sub rorl adc scas add add fwait js in les mov mov pop mov mov andl adc and imul mov mov adc aaa fistpl inc das sbb inc sbbl insb pop or lcall dec xlat lret push push and push add ljmp (bad) int3 gs pop mov xchg and sbb push cmc (bad) bound stos sbb imul aam jl int3 shrl jae xlat add dec fistp xor adc outsb xor mov fbstp addr16 inc add pop enter lcall out or std mov jne cmp jmp hlt dec or imull sub (bad) inc push push sbb loope ja fildl ja sub push (bad) or xor mov lea jl call jg inc push inc loope jne adc cmpsb xchg adc mov cmp sti xchg out sub xchg (bad) cmc outsl in mov lret iret xor xchg (bad) jge xchg push iret sub xchg add and out lea cmpsb fmuls stos je shlb enter adc sbb pop and sbb hlt add lret or imul sbbl add out adc cld (bad) out and lcall adc in popa dec and (bad) adc rorl lret jge inc fwait outsb fwait in add rorl fiaddl push loope inc mov lock scas push out bound insl push add faddl add jg mov jae xor add adc lds xchg in imul ja test adc xchg inc inc arpl jnp jne cs xor bnd (bad) mov imul mov push mov call dec jnp push call out adc pushf pop xor scas sbb or das lds movsl (bad) divb pop pusha cmp sbb sub lcall sub in sbb mov xchg jne repnz call arpl stc fstpt add mov xchg sub add push jp dec rcll out pop fnstenv nop loopne std adc das in add out (bad) nop pop mov pop mov outsl inc imul push jmp (bad) frstor insb dec push xchg es call fidivl push int3 pushf pop mov xchg aas fwait mov and repnz stc inc ds cs imull jbe or sarl test (bad) (bad) inc pop movsb jno in sbb inc aam test (bad) movsb inc out data16 mov test mulb dec repnz add mov or jno mov and addr16 sub xchg test mov mov mov or push in xor xchg cmp in xchg cmc pop scas inc mov sub stos (bad) loopne inc cmp xchg sbb clc andl (bad) dec outsb (bad) xor repnz js add jb mov sbb mov sub lea inc sbb fdivr jg cmc rol lock dec dec ss xchg inc (bad) in xchg cwtl clc xlat xchg and push adc lahf rorl cmp xlat scas push pop in or cmp cmp jnp jg hlt mov (bad) shl fwait dec xchg nop shll lock cmc ljmp (bad) scas push jno jnp (bad) test cmc xor mov pop mov cmp adc cmpsl fmulp inc fcmovnu es pop push push stos sahf dec and imul add sub out mov ja pop mov pop sbb dec scas pop adc cmp loope out push aad movsb jno mov mov mov add dec lret xchg add popa stos dec sahf jge int decb mov outsl imul aaa jb pop jne pop xlat jg cld mov data16 adc jmp fild scas xor movsl pop stc jle imul xrelease push xchg mov jl sub insl (bad) js popa add arpl movsb pushw sub aad mov adc jb ja mov sbbl aad jno push int3 les sub aad nop lods ss or mov fistpl add imul stc (bad) adc cmc fnstsw ret bnd xor xor cmp push sub jl mov fs mov aaa bound xor mov adc sub out aaa imul cmpsb xchg dec inc sub sbb popa push adc repnz push aam sub mov scas decl add xlat and nop push (bad) mov xchg sti mov rclb (bad) rcr jmp aad repz scas data16 clc repnz add je shrl imull push inc pop xor jnp push repz mov dec jns jo,pn sbb ds add out xchg or cld and in sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out mov dec mov mov cmpsl push outsl iret jno jmp jae repnz jle and enter dec int3 inc mov xchg dec push sub (bad) push ret cmpsb in jmp int imul dec movsl dec adc xor inc js jb outsl and push movsb clc inc pop enter ret add jl mov add cmpsb xchg xor stc (bad) or pop fstps and cmp xchg inc outsb xor and (bad) fmulp xor cmc fnsave repz mov imul sbb xor push sbb lds jne les nop stos mov cld repz xor and cld inc fisttpll (bad) mov or imul sti jns ss (bad) jnp inc xchg (bad) push mov shll pop fcmovbe cld aam xor pop movsb nop add or sbb dec rolb (bad) movsb ficoml pop mov loope out addb mov mov xchg int3 inc lret push mov add aam sbb leave adc movsl mov cmp andb addr16 xchg sub push dec push lahf lods lret pop repnz jg shlb sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret xor xchg push mov imul jbe add aam test repnz or jg push push mov jge gs jl push insb outsb dec push ret sahf in add int scas cs xor cmp les inc pop push scas xor lret mov cs push xor imul (bad) sti cmp adc in sbb loopne ror mov ljmp cltd notl jnp test cmc (bad) lretw and xor or gs fsubrs xor or push ja (bad) mov addr16 ds fld push (bad) xor sti je enter adc in push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg sbb fidiv jo orb and fdivrs ss dec xor icebp repnz jmp inc cmp xorps mov movq movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 xor xchg sbb out iret iret enter rcll stos jne,pt mov out or in mov xor lret and xor gs outsb pusha jo inc xchg pop (bad) js pop test mov out jge xchg push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 xor xchg push mov imul jbe add aam test xor sti ljmp jg mov xor pop xchg ljmp icebp jmp sbb xlat add lret or or xchg sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 ret jl xchg mov imul int3 xchg lods jge push clc test test push dec jne mov out jns push mov sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret lods add dec mov push and push mov mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 xor xchg out mov cmpsl idivb cmpsl xor (bad) dec adc pop gs xor mov mov push xchg mov or hlt xchg push push aad not add dec and aas inc mov out jge xchg and sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 xor xchg pop cs lret mov (bad) pushl jmp rorl arpl sbb mov ror out jnp pushf in inc lods iret daa pop fcompl jo cmpsl inc das lret inc mov out jge xchg lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 xor xchg out pop (bad) mov push and mov mov test cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 xor xchg push mov imul jbe add aam test ds push fs dec dec xchg aaa xchg jp (bad) pushf bnd pop sar cltd dec sub mov insb mov out imul jmp inc stc aam inc xor and mov xchg je mov mov call push push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp sub add mov push (bad) icebp int3 test pop aad cmp xchg aaa subb push sbb mov jg jge add int3 xchg fwait pusha jmp adc mov out jge mov sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 xor xchg out mov cmpsl idivb cmpsl pusha ljmp dec jne mov out jns push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 xor xchg out mov mov adc fsubrs xor mov cmc repz cmpb xlat xchg jp (bad) pushf (bad) (bad) adc xchg fwait pusha hlt test add cli push push (bad) popa mov stos les mov mov je aad fs (bad) in xor mov stos scas jp jno dec cltd mov stos aaa mov lds stos jecxz lods aam inc out rcrb xchg sub fstps fild (bad) popa mov out dec mov sub pop dec outsl int das ficom push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret xor xchg out mov mov fstps cmpsl pusha ljmp xchg cld divb fidivr std and testl push or jge jno sbb das push sub daa mov mov xchg xchg xlat cmp aas mov xor push mov sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out mov xchg test jmp adc int3 push cmp ficoml les inc jle cmpl xor xor int3 in cmc stos pop mov lods aaa push fdivrs add and lea mov pop sub mov xchg pusha inc subl xchg aad pop sti mov xor xor enter or cmpsl je test xchg push and push and push aaa jecxz lds mov cld jo xchg addl clc add imul or scas jge xchg pusha cli sbb xchg in repnz fmull jb lods imul dec sarl jnp mov sub sbb push jmp xchg (bad) (bad) fimul scas aad cld out or push xchg sti mov or jae cmp mov cld inc sub popf insb mov xor (bad) (bad) cmp stc adc movsb roll sub mov inc and loop sbb and out faddl push sbb mov or or mov sub repz dec aas xor sbb or cmpsb mov loopne mov add (bad) mov popf rcrb mov gs jl adc jne or addr16 pop add push jb out dec xor in int lcall xor int fmuls jmp cmpsl aaa jecxz xor cmp jb xchg pushf push lahf sub cmp pop lahf sub inc jmp out (bad) popa pop xchg push lods out mov mov rcrb mov (bad) sti mov out enter test mov dec xchg mov iret sbb not insb aad mov mov rolb inc mov out iret jno out subl xchg roll adcl xchg xor and frstor push jl xor out dec inc mov adc gs jg scas fsubs out add vsqrtpd out mov mov iret push pushf pusha call mov (bad) cli lods or mov sub pushf cmpsb inc sti mov orl sahf sahf out and cwtl andb mov lods pop rorb shrb inc jge in mov inc xchg test test decb shl test cwtl bound bound fldcw insl push leave mov mov push xchg ret pop sbb push adc mov js inc (bad) insl (bad) out insl aas shl lcall mov rorb pusha mov popf into jo mov aas js int3 and pop cltd push mov lods cmp das jge ljmp sub (bad) jne inc mov cmp and xchg mov nop jo cwtl jae out dec dec (bad) dec mov (bad) icebp insb cmp fstpt push sbb sbb leave add stos mov out jecxz rcll adc pop push bound mov rolb or fs sub push inc aam sbb inc call inc in jg jmp sbb mov insl subl leavew push or and dec rolb fs push xchg push push jl repnz sub imul push cmp adc dec sti cli daa xchg mov (bad) scas jcxz pop mov loope insb and xchg aad icebp jmp add andps aas sbb mov lods (bad) mov lods outsb jbe lock (bad) test dec and sub add jo or pop pop lods xchg cld jae (bad) aaa stos fimul cmp rclb (bad) sbb fwait and pop mov dec cmp and mov pop cli push push xor cli ja scas rorl std movsb sbb int3 test push xor ljmp js mov cmp roll cmpsl test stos mov lahf jae bound clc ja test ja mov or stos cmp fsubs das push scas mov pop in jl js and out cmp xchg (bad) sub std inc and jmp push hlt dec mov jae mov and data16 enter mov out adc adc lea push cs jnp lds mov pop insb bound scas in es inc or fisttpll popw mov mov int3 cs or pop jmp aaa cmp push cmc popa push xor into sub rorl jne jle sahf add inc mov jno loop movb ds fldenv test or jb adcl sub ljmp pop jle sub repnz pop js mov scas dec and mov loope (bad) out imul rcll das jo outsl jg ljmp mov adc jno dec dec cli or cmc int3 pop xchg testl cmp ret popa repz aad push sti cld (bad) or sub js push mov sbb loope out das fstpl add jl sbb push mov dec cld add jnp push add mov add cli mov pop in (bad) out jl sub cmp adc mov sbb jbe fcoml adc sub pushf xchg pop (bad) icebp lret pop (bad) dec fs aas fxtract pop js lods xor out loopne lcall mov ja xchg notl aad inc mov dec jle ret cmp xor sbb and dec mov aaa and (bad) adc mull xlat cmpsb insl and das inc jl loop js mov jns test jns inc xchg ret adc and mov je cmp xor inc fdivl outsb insb mov jmp int3 lret jae inc inc stos pop mov (bad) xor aad outsl push mov push mov mov dec sbb and stc imul int ss mov out xchg dec ljmp mov push repz push mov xor inc aaa lock cmc pop add sti cmp lods hlt (bad) xchg orb sbbb loop dec cmp push repz sahf cmp add pusha ljmp push dec call and sbb lock in movl (bad) (bad) xor jne enter mull pop push cmpsb cmc mov sbb popf (bad) sbb lods inc pop ret push loop jle mov ret daa push rclb cmc je or mov rorl pextrw mov jecxz jmp adc test jns inc stos pop mov add push outsb pop push aas mov add xlat pop push pop loop inc (bad) xor adc leave push popf and mov inc xchg fidivr das pusha inc cmp xor sub inc or pop mov sub inc ror pop mov push pop sub rclb cmpsl or test fist sub jnp dec xchg mov adc mov enter dec scas add imul js nop nop mov les stos mov jbe lret sbb cmp loopne and pop inc sub test int3 mulb jecxz xchg adc dec sbb xchg jl dec add xchg test or add clc push (bad) hlt test and imul add test aam mov fwait or in inc cltd test (bad) aas aad or les in out scas daa xor sti ret xchg pop ficom out dec ds add mov jo push pop outsb push mov in xor lods xchg cmpsl mov les mov mov jo sbb (bad) lods dec insw sarl aad imul shrl stos jmp div in ficompl sarb inc fs ss cmp lret mov mulb fiaddl dec incb sahf mov test aad ret mov dec (bad) cltd xor (bad) stc addr16 arpl sahf jp or aad test icebp movsb sub fwait (bad) jmp outsb mov test pop es adc mov sbbl les push (bad) mov int (bad) mov loopne inc sbb call or das or add (bad) popa xchg xor jno and adc mov ret scas add dec das inc sbb xor neg shr or shrb test adc sbb jns xchg mov in or and test lahf cs fucomi dec xor sbb popf inc inc lock bound add imul cmpsl ret (bad) jge shll (bad) mov orb jnp call mov push stos sbb lret mov pop sub out mov sar dec pop push or add popf or jns inc fwait test lock inc stos mov mov and nop scas xor arpl add bound sbb mov jg mov into in (bad) sahf inc ds xchg or lods add and inc dec dec mov test xchg push xor xchg adc fildl mov pop pop dec xchg mov lahf in xchg sbb jbe sahf sbb mov lods sbb jns je aam mov mov xor push mov mov jae shr repz pop test into add pop call or ret sub pop iret mov aas push lea int3 frstor add mov xchg nop mov nop inc adc hlt push xchg jge sub sub (bad) shlb pop lret mov insl mov jo (bad) inc insb inc xchg in mov je iret mov outsb jae cmp jne (bad) (bad) inc sbb pop sub movsl mov (bad) aas cmpsl sbb shlb mov jle enter and fcoml or mov leave mov jno mov out adc rcrb pushf and dec xlat lret push ret imul je adc dec mov js aas mov xor or or nop pop cmpsl jb xor add xchg iret push insb notb push (bad) inc dec mov add jge repz fldcw imul jl sbb aaa sub or aad cmp adc sahf add scas aad imul mov lret jl stc cmp jno (bad) dec cld mov dec nop scas mov out xchg lock mov sbb push push out cmp hlt mov jae cwtl push mov pop test les pushf (bad) fstl pop pop mov ficom jb lret mov pop xor pop dec popf add add push ret stc pop ss ljmp mov pop psllw out mov adcl jmp rclb or adc shrb out movsl jecxz jecxz or mov jno xor fsub sbb mov jb clc cmpsb imull loope inc pop add lds pop adc add xchg xchg jle nop cli dec pop ljmp sahf jns sub jo pushf scas in movsl scas inc pop out pop andb and pop rcrb jp jo addr16 add cwtl sbb jge and loopne scas clc jbe stos inc sub xor ret or lret in xchg loop cwtl imul stos ficomp lock mov ja sbb jne adcb negb test or sbb pop or push incl enter insl stc sarl aad mov sti xchg add pushf add aam jne pop adc lods add mov roll or (bad) rcrl push lret sti sub into lret shlb out push sti or dec (bad) repnz or cmpsl pop dec jle push and test pop push jo cmp loopne cmpsl push mov hlt fwait popa add fisubl cmpsb and shll fidivrl or mov out mov std cmp rol cmpsl movsl cmp stos mov push xchg push jae (bad) repnz fcomps (bad) push out pop scas pop out mov ljmp push mov mov xchg cmpsl adc push in dec cmp roll out fimull push inc clc stos (bad) icebp lcall lcall mov cltd xor mov dec cmp out sbb pushf sbb xlat int xchg sub mov push leave fwait mov mov stos adc leave cmp fdivs pop nop adc pop pop lods fwait mov xchg push lahf pop out dec jo leave inc dec and test ret scas (bad) clc pusha in cmpsb xchg into fsubrl mov jecxz or es adc loop rcrl cmp mov push je std mov cmp inc inc clc sub mov push lret cmpsb rcr pusha cmp aad pop dec and fsubrs aaa or int int3 inc and xchg outsb dec lea test add pusha lock pop pushl inc arpl je add dec dec add xor das arpl (bad) imul in add nop loop jg cltd adc loopne ljmp inc mov test mov mov inc (bad) clc dec adcl cmp mov xchg xchg mov push mov test daa pushf nop loop jl movsl xchg mov and push cld lods sub or decb mov out dec out pop je je fistp and cmp sub jl xlat mov sub dec inc cmp sub (bad) jnp (bad) test adc dec sahf rcrl dec add fidivr stos push out insl stos pushl or idiv cs xor in (bad) mulb les pop ret bound add dec test push cmpsl jmp jg cmp adc and and sub cmp add fisubl jnp adc imul jnp cmp mov xchg or flds mov or inc inc je enter jns mov adc cmpsl std pop cli add dec nop int add mov lcall jecxz or enter pushf jmp mov popa lds dec outsb lods pusha jle xor xchg xchg idivl (bad) xor mov ljmp mov fisub inc pop cld jae outsb adc insb mov ror in mov push sub int3 push imul cld cmp sub divb sub ret adc and xorl das jl (bad) insl ds addr16 adc in cmpl imul inc xchg out mov xor adc scas adc andb sahf (bad) testb (bad) xor xor xor stos add faddl add xor pop pop jae test repz add or push (bad) sub subb (bad) das pop jae andb scas mov lret push pop idiv sbb xor ret or sti mov andb adc cwtl jge shrl jge imul pusha insl xor ret mov dec jno fndisi(8087 sub sub push in out insb fs lods rorl add movsb aad test or lock adc and int ret std xor mov ret test leave mov pushf xchg in dec and jp mov aad mov pop sub mov mov stos int3 mov sub xlat scas ja cmp cmp push stos out xchg cmp or ja jno mov popa adc xchg sub mov xchg lret jmp pop rcrl mov cmp gs out int3 mov xchg jg adc dec or jo adc mov mov push or stos cmp pop cmc lods sbb in mov xor mov add mov mov inc mov andl into pop cmp gs inc (bad) jb cmpb mov in int3 lods mov sbb int sbb sub xchg andb push (bad) dec jge iret inc (bad) ds or fldt pop mov sbb xchg fldenv repz sub mov aad inc sti das jns sbb dec inc or jmp pop sub push test loope dec pop jg fidivl cmp roll rcll push sub xchg xlat lea pop insb daa aad mov insl aam pop jle jmp pop loope,pt gs pusha jbe je jb sub mov pop enter mov xor pop (bad) cmp dec inc or test shll jae imul mov cmp iret dec dec sbb lret cmpsb jmp (bad) or push lods dec rolb and dec outsb push adc and push rclb std dec cs jg xor jg xchg in mov push xor daa xor jecxz notl jns mov pop and in jne add or daa into push std test (bad) xchg je outsl addr16 mov push dec push into dec imul dec jge push cltd addl lret addr16 clc and jl dec xchg test sub inc push mov cmp test sub push xor mov jmp or ret and pop xchg xchg push mov jns dec xchg adc bound and arpl cmp cmp (bad) dec pop nop mov repnz xchg adc pop inc sub (bad) sbb xchg inc dec fdivl mov ss ret dec mov ret aas mov push adc rcrb dec sarb lods iret xor movsb das in pusha ljmp nop xchg fsubr or sub jecxz insl pop bound or scas inc inc jae push and pop or mov mov movsl repnz jno dec aad pop mov adc clc sbb inc ds xchg sbb push lock or arpl outsl and loopne in aam rorb mov lcall (bad) dec jno mov push fistpl and loopne fnsave repnz inc mov dec mov fwait sbb out jmp push sbb es push cmpsl rcrb out inc popa mov dec enter pop pop stc pop push jl push test push ds aas or mov pusha hlt inc and and lcall push cmpsl lea add mov loop cmc push mov js xchg pop js inc cwtl int icebp inc out pop js (bad) cmp lods jecxz adc (bad) jb loopne (bad) je xchg faddl loop jge dec or inc in dec or scas inc and lods or mov insb add rolb mov out sbb sub movsl (bad) js fidivr mov cmp iret dec pop xor inc out dec out (bad) enter repnz outsb xchg add jne lods or insl out sbb inc xchg mov or (bad) mov dec adc sub test inc jnp aas mov int3 in add dec popa mov loope lret ljmp in or pop inc inc enter sbb repz sbb xor jle dec iret repz in mov pop arpl or push hlt int outsl cs and mov xor fcoml lea pop ficoml pop hlt ss adc cltd je adc lret fldenv add mov sbb and inc (bad) cld repz dec mov gs adc cmc cs fstpl pusha xchg scas jne push out out xchg stos (bad) aaa xchg rcrl jno jae mov mov dec ret fcomp xor jecxz stos xchg mov xchg xor fbstp mov aad cmc out jns enter cmpsl or orl mov push rcr sbb rep cmp inc and cmp dec pop sbb shrb repnz test nop movsl out inc push pop int3 inc insl (bad) jmp mov push pop lds mov mov jbe mov sub xor jo cmp popa ljmp (bad) mov push xchg jg pushf xor jae outsb jne push nop daa push xchg (bad) cmc jg and jo jo sub dec sub lea jae and and cmpsb push mov lods arpl das je push lock ret fnstsw or push stos xor int3 ret or xchg pop test inc lret xchg (bad) orb xlat inc insl mov mov adc pop pop out push xchg int xor xchg outsb fsub inc test cmp cmp cmp sbb jle fstp (bad) outsl dec lret repz (bad) into mul cmp push aaa movsb xor dec sub push (bad) out ficom jecxz or int3 add pushf shr pop mov cmp xor pop ss lret (bad) or sti and popf ds mov sbb mov xchg lods ja in mov call out stos xgetbv data16 cmc pop jge and add push dec sbb lret xor pop and sahf and in and mov sub jle dec adc andl mov iret dec inc push es repnz dec adc out push push pop mov in push pop rorl inc fdivrl mov dec (bad) sbb xchg lret fisttpll mov push std fmuls push inc lcall or nop push jb push sbb push jge sahf adc pop sub push lcall ficomp push and adc jl mov cs jle popa add nop mov (bad) sub add sub (bad) xor mov std pop mov cwtl adc fistl inc int3 adc adc add sbb xor pop cmp movsl mov ljmp push insb xchg repz dec mov scas (bad) mov addr16 gs pusha pop (bad) pushf je pushf mov aam adc inc mov mov es repz aaa or add adc cli dec push jo xlat add push inc jl adc cltd out xor cli xchg jb cmp mov ret sub pop mov jnp cld mov lods insl xchg pop notb push push into not jecxz test popf add xchg adc dec fisubl add scas std out xchg lods mov nop lret (bad) dec xchg adc cmp inc lcall inc pop shrl push (bad) push js xor jo jg cmp loope das pushf adc sti test dec or xor jno inc out (bad) push jo loopne push jmp stos push jle pop sub mov inc jae sbb scas and cld xor (bad) mov movsb jmp cwtl andl leave mov inc push add dec pop inc nop mov and jne je clc or (bad) in push mov sub jg mov pop loop faddl xlat mov (bad) mov push imul mov out inc fs orl adc and (bad) into or mov mov lea mov jae add ds ds add push push in lock inc out aad dec xchg cld aas inc movsb push lods out aas leave shr xchg dec dec lret lds pop jge inc or pop inc push movsbl mov jnp inc jno ljmp jb lea jge sbb shrl enter nop in aad and jnp mov mov dec sahf mov mov cmp ljmp je xchg pop call jo jmp sub or mov pop mov cmp mov insb mov mov dec jecxz dec std adc ja jp and (bad) rolb push jle das add loop stos lcall daa mov ljmp push mov outsl or ret clc bnd or imul mov pop jecxz adc cltd dec pop adc outsl pop adc jb adc jl cmp dec or dec lea mov jg scas pop in out fcomp cmp daa mov lods (bad) inc add dec rclb and stos mov popf movsb xor dec and (bad) xchg pop ljmp fsubrs jae or cmp mov addr16 rcll jmp push fcoms jecxz or and sub xchg push cmp xchg xor cmpsb scas pusha mov icebp lcall xchg xor (bad) fs shll cmpsb outsl int3 insb fs std repnz xor stos inc add sub adc push lods mov xchg dec out leave jne sub in in ret cli jbe lock cld xlat jo push inc xor ds fiaddl push dec xor inc aas lods mulb out insl scas mov mov icebp imul push ljmp lcall repnz scas dec into test addl fwait mov imul push xlat call arpl mov mov dec (bad) shll fist mov mov sahf xchg cmp and mov mov divl jb adc push inc daa sahf in and ljmp pop dec mov adc jbe xor adc dec iret lds or fdivr sub aad hlt fdivs test dec nop push mov out std and lea ja into outsl aaa adc pop dec fwait sbb das pop pushf repnz stos push push pushf pop xor enter dec pop or add pop (bad) outsl ret insb les fidiv out ja mov rcrl mov popa ret push stos je and cmp das jns add mov stc xor movsl btsl mov sbb dec fwait push out sarb int jle imul pushf dec push cwtl lcall es pop pop push lods shl jne sbb out in push jmp lds addr16 add add jp imulb outsb arpl mov roll push xchg (bad) (bad) arpl mov sbb fdivl xor cmp sbb jmp push cmc insb sbb out aad dec cmp fincstp mov mov (bad) addr16 mov in and movsl sbb inc mov and gs mov iret mov sbb insl arpl (bad) imul fild pushf push lea push mul enter int mov not mov (bad) shrl adc fwait das jle fadd test (bad) hlt add mov and insb lahf cli add enter xlat jns push mov adc in sbb push xor iret xchg (bad) testl out adcl out mov xchg lods dec jno add cltd adc ficompl stos push sahf add shl insb mov ja sbb and sbb sbb cli icebp gs pop test stos insb arpl xor inc scas cmpsb daa xchg test scas in aad adc xchg lock add jg mov xchg sbb ret test push int fstpl dec popf ret mov xchg jl jmp push xchg adc stos jns pop in or mov jmp mov lret stc (bad) ret fs clc ss push bound das test adc cmp mov dec cld addr16 pop add jle insb insl mov mov movsl inc cmp rorb scas add sti scas out sbb fistpll ret ret data16 imull sbb pushf xchg (bad) xor adc fs adc jmp inc dec dec push mov jnp and fisttpl stc adc ja (bad) mov and notb sub cmp insb sbb sub das mov cmp (bad) fimul adc xchg stc or test pop xchg call push loopne lret (bad) push jp jne test mov adc test jg mov cmp in stos mov std pop (bad) mov (bad) rclb loopne jecxz cmp sub in subl popa or jno ja dec scas outsl test sub mov aad out and lahf jae insb lea sbb stc pusha sti cld into fdivrl fbstp add test fidivr (bad) pextrw mov adc sub mov cmpsl or sub mov xchg xor push ljmp loopne mov sub push pop stos add xor dec mov test call xchg insb xor dec adc cltd push fucomip outsl push sbb cmp adc mov or xchg push lods repnz leave pop das pop xor imul fnstcw fdivs adc push orb inc mov sbb sbb ret sbb cld inc test xchg insb addl xchg lock dec mov cs push decl lret loop jne xchg dec mov stos pop aam xor in inc mov sahf sub addr16 xchg (bad) push add inc sub fmull push mov add test inc das shl xor cwtl xchg ljmp mov jb sarb ret sbb movsl dec cmpsb cltd adc rep (bad) imull ret pushf xchg iret or hlt dec rolb mov xchg lahf decl loop insb dec fcmovb je jo adc dec pop sbb insb (bad) add test mov cmp gs add cltd sub xor outsl popf dec sbb jo,pt pop xchg hlt and pushf faddl int sbb or shrb pusha cld add daa cs cmp daa add dec jle aam inc push ljmp and jmp int and loopne test mov jp mov add jnp leave out xor xor icebp push pop ret (bad) loopne ss sbb out arpl add inc xor mov jl add (bad) fmulp sub ficompl sbb cmp push xchg js xchg movsl inc sahf jge incb dec inc jbe (bad) lock (bad) les mov shrb push in rcrl mov ret and outsb mov mov mov es jge adc inc and cmc push mov ljmp lret into add push mov and inc pop jge scas leave rcrl xchg cmp lcall repz sahf sbb mov push fs pop lret inc call (bad) xor inc inc mov adc mov mov jle inc ds scas aad cld (bad) lock cmp (bad) mov movsb xchg sbb xchg push add jecxz lcall xor pop loopne aas mov popf mov mov aaa mov xchg xchg shlb mov jge adc in test mov jo (bad) aas sbb mov pcmpgtw aaa out lea cmp inc and xchg and enter xor cltd ljmp or sti cmc (bad) imul and pop cmp jge (bad) repz and cltd mov imul xchg mov and outsl (bad) out mov mov bound pop movsb repnz push iret cmc xchg push sbb inc lea xor and fisubrl cmp xchg les call xchg imul adc add sbb cmp test lods xchg cmp sub mov xchg unpckhps scas cmp and sbb inc popa lods and pop jae mov lock sub into sahf pop daa dec clc lods addr16 ja pop inc add repz movsl jp xlat in xlat adc inc (bad) adc mov mov (bad) push cmc xor xchg xlat jns test cmpsb ds or stos out sahf mov and or iret ret arpl pop xchg and and test (bad) sahf ret clc dec add xchg pop adc (bad) pop icebp jecxz cs jne jmp cmp mov jns aas mov xchg out pop dec es sub arpl outsl (bad) dec mov gs or mov dec cmp mov xor lretw adc sbb cwtd inc scas and xchg leave xor or pop jle xor add cli outsb shrb mov sbb rcrl (bad) loop cmp sub lea sbb movsb jle inc adc add (bad) cmp loope sub jns xchg subl adc mov inc roll push jne outsl xor jns inc icebp sti push mov sub rol adc dec shrl add or cmp xchg add cmpsl xlat adc mov movsl xchg push cmp divl loopne mov add dec add cmp push imul add cmp cmp fwait sub inc mov lcall fisubl cwtl insl ret pop add mov into out imul mov pop hlt sarb and cmp in jae mov mov mov lret and and je icebp stos mov pop xchg xor mov mov pcmpgtb push fiaddl pusha add xor xor dec lods xchg adc and xchg jne fcmovb cmp sbb stos pop loopne in scas movb inc inc mov mov mov xchg loop adc lods sbb mov imul pop (bad) sub jp inc dec xchg fistpl pop sub les ret in jmp push scas push enter (bad) and inc out into inc inc aaa push dec out mov ret jno cmp cmp cmp dec pminub sub push stos ret test adc and nop sub mov jb rolb xchg sub je outsl xor jae out or sub pop push sub test push bound mov sbb sub nop adc es sub push sbb cmpsb out shrb cs es push popa mov add rcr std lods ss in mov pop pop dec mov push arpl or pop add mov pushf imul pop adc jnp mov mov std test dec pop movsl fs jge test ljmp xor lret mov xchg or aaa fldl popaw std es jge shlb out in movsl ficompl or mov (bad) (bad) adc mov cmp repz pop jae sbb in out inc out jp movsb into (bad) jo mov inc sbb cmp or cmova mov (bad) and (bad) hlt jp out push xor sub xchg cmpsb jo mov jae out or roll or xor std and xor mov jle call mov sub clc fwait xor outsb hlt (bad) sbb xor ficoml outsb pop jb scas push xchg cli mov and sbb mov pop stc aas xchg sub mov cwtl push inc cmc pop (bad) dec cwtl add out mov dec mov scas sbb fldt sub mov ficoml dec sbb xor push (bad) out fistp test mov xchg sub ja and xchg add push repz nop (bad) or insb in and and cmpsl push lods lock or fadds ss xchg xor pop push xor movsl mov (bad) stc outsl sbb mov xchg mov gs push dec cmpsl push in gs jp mov sahf cmp cltd dec stos sbb ds ja enter loope fldcw and push jbe lret scas cmp je mov add mov in stos jb std negl xchg sarl mov out add inc repz push mov out push push inc imul outsl push jp roll adc add dec lret cmp xchg jno nop loop (bad) je sub jge xchg int (bad) iret ret or add and dec aam sub lock add mov inc stc sbb push jbe pop push gs (bad) insl mov mov std arpl popa imul leave stc andl push addr16 add push in and fidivl das mov outsl out xchg out daa leave add pop lahf dec in jp sbb cmpsb stc pop movb movsl push cmpsb loopne xor test (bad) sbb sbb into add insb pop xor pop xor inc jno inc stc rcl aam cmc das mov or sub jp mov xchg loopne add test mov (bad) fistpl movb pop jecxz mov pop adc mov mov mov push add dec loopne ljmp loope lcall fisubl (bad) xchg in inc cmp les dec xorb pop jne inc mov pop mov xchg mov sub fstl les pop inc jne push fwait sub push push cmp (bad) cltd adc mov mov xchg push fs (bad) mov pop xchg fbld nop push jmp aam lcall jo sti int3 dec shl mov adc add mov lock movsb mov inc (bad) movsl pop loopne pop cli or cmp xor mov das test xor ret mov (bad) xchg mov fdivrl and (bad) xlat mov xchg xchg aad mov mov or xor es sbb lahf (bad) or and inc push aad jl movsb sub addb push gs and mov ror push lahf popa and fidiv sti in shll outsl arpl jecxz cwtl mov ficom leave mov xchg lea sub clc dec ds jae dec mov jl xchg and pop xor adc fisttpl cmp push mov mov and (bad) and dec sbb (bad) pop xor adc inc dec mov leave xchg in xchg arpl hlt in dec cmp xor mov cmp pushf jo js arpl push out dec and push and lcall xchg mov mov divl cmp mov movsl dec loop imul ja insb andl shrb jle dec push cltd mov xchg pop adc cmpb lea push ja adc (bad) iret dec jns ja pop push stos cmpsl sub imul mov dec inc adc lods xchg aad movb repnz jmp arpl jle sbb cld mov push jmp mov lahf or imul push mov sub jo sbb ret ret mov rcll sarl cmp and fdivs fldenv mov mov mov orb mov push and mov lods cmp int ret inc imul lcall xlat push pusha leave mov pushf mov push jl bnd mov hlt into in (bad) adc outsb sbb mov mov and jae into sub loop adc in (bad) movsl cmp adc (bad) ljmp cmp (bad) aam (bad) pop cmc lret iret fistpll shrb mov xor mov cmpsl cmpsb ss mov popa xchg mov xchg fildll bound in sbb mov fcmovu (bad) jae dec xor mov out into jg sbb (bad) arpl jle adc push loop push andl and aam inc push inc sub popa dec add lret mov and (bad) out cmc lock aam out or into in sub insb loope push and lds cmpsb xchg adc mov cwtl sub arpl fwait and and mov mov mov push outsb outsb pop push mov daa jle xchg mov adc rcll and lock mov lret xor test dec add inc in rcl mov stc inc mov mov mov iret push push cwtl jns add dec mov mov inc inc cli xor pop mov out scas sub push adc xchg loop jmp stos sub jo add and sahf xchg out hlt into sub lret lods dec sub mov jle mov xor push inc inc mov iret sahf push lret bnd xchg pop stos mov stos xorb fidiv dec dec sub inc ljmp (bad) js jns sarl push cmc mov mov jnp mov pushf imul xchg xor add inc adc inc neg and sbb inc mov dec std std outsl mov pop cmp pop (bad) jo sbb mov xor sbb ret and shlb pusha int3 imul lret cmp mov inc je stos fisttpl jecxz int3 jo shrl scas sbb test cltd mov inc pop dec mov cmp test adc jo lea inc or in xor aaa cmc test xchg fcompl or fistpl loop imul ja mov push imul fcomps mov ret pop sbbb sbb call (bad) xchg jns pushf int3 out jo push aam iret (bad) push popa enter pop cld inc mov cli in mov mov pushf mov adc adc out js mov push mov xor mov pop outsl lcall scas aam (bad) jle rcr push push loope outsl clc jp fistp mov ljmp jbe xor jno jp imul pop scas mov (bad) outsl outsb in jmp ljmp mov pop in dec xchg lds movsl pop lahf xor js hlt in jmp xor pop sti out popa iret and arpl out sbb arpl test insb jl inc arpl (bad) cs stos push in xor add xor outsl xchg adc popf inc rcll aam dec push outsb xor or xchg push inc xor and cmpsb inc adc push sub faddp and cli fwait iret inc pop and nop cmp cli push lods mov jnp ffreep push jmp mov rorl iret lret xchg scas inc pop sbb addl xchg rcrb cmp jle mov xor sub xchg add mov nop mov sub mov in repz fnop mov add dec cmp andl pop mov xlat fstps inc std xor xor add xor or dec pop cmp cltd and movzbl sub adc shrb xchg (bad) or jo pop adc dec adc jae in inc sbb rolb fcomp decl in test (bad) push cmp adc sub mov add ret and lcall fisub (bad) xor and mov fnstsw mov test sbb (bad) inc imul fstps or (bad) mov scas mov adc jno push insb lods push push inc jle shl or and or scas sahf clc data16 jle xchg pop dec movb adc xor jnp lods je add movsb pop cmp adc mov and inc xlat lret inc cs outsb scas push out jo pop (bad) setns inc pop (bad) pushf lret enter out leave repz icebp dec jge mov stc cwtl cltd xor push insb dec sbb add lods shrl aaa imul inc pop cld clc cltd jb mov fmull xor cmpsl fmuls xor rclb jne ljmp and lret mov or addl out js daa push sub pop mov ud1 dec mov fwait cmp xchg mov inc pop adc or sbb push mov jns and cs loop imul push loop add adc (bad) pop imul jae inc pop xchg fsubl cmp scas xor fisubr dec es popa mov cmp inc cltd pop (bad) cmp inc and xchg and fcomp mov sbb pop test into pusha cmp push flds addr16 pop in leave inc stos inc leave test imul pop jecxz and cmc push jae pop rol and aas out push pop mov sti insl mov js rcll out (bad) mov jo pusha icebp jp (bad) call (bad) adcl (bad) xor cmpl je add stc adc call lcall imulb adc sbb xor cmpsl or stc mov ficoml xchg test inc scas pop mov insl insb into dec decl imul mov mov or shll pop mov leave adc lods mov aaa and stos jne jmp int icebp sahf jne mov lods xor jb ja (bad) xor sbb inc pop add sbb add leave mov out pop pop xor mov sahf xlat fdivrl mov or insb pop loopne adc pop xchg jmp inc cmpsl aad jmp xchg adc gs sbb cltd pop fsubr mov dec jo ret clc (bad) push inc ja inc add mov push xor repz xchg push sbb aad shrb or rcrb jmp inc js adc mov outsb lcall mov or mov ret mov clc push push xchg cld pop ss cmpsl sti xchg pop add int (bad) jmp xlat jecxz pop inc faddl inc fdiv jne lahf add sub movsb cs inc inc (bad) (bad) movsb fildl sbb add push lock insl repz flds inc cmp push loopne test jmp dec push xchg cmp xchg mov pop push call mov popa push lods sub stos jne dec outsb jl mov (bad) xor xchg push inc inc sbb sbb daa push inc xchg xor into mov stc outsl mov aas pop jae (bad) out cmpsb sbb cs divb aaa out or adc gs pop push mov flds fnsave pop jge mov pop hlt adc and mov (bad) mov push mov mov daa xchg add lock imul or jo ds or stos jp imul sahf ljmp aas sub lea sbb adc jo fsubrs and pusha adc mov les xor xor pushf dec xor and mov ss mov lds scas add jo lds ss enter int outsb loop cmp aad sarb loop pop push call push sbbl jne push jb mov cli in and subl fcmove mov sub cmpl and and inc fnstsw inc (bad) pop daa cmpsb and (bad) iret fldl roll dec pop inc mov mov adc (bad) sti and xlat lods mov mov push mov cld cs sarl bound idivb scas ret int dec sti sbbl inc out or push fistl lods cli clc fucomp jbe mov mov adc mov jb adc repz xlat mov or dec push inc out dec pushf pop jmp lahf out repz lds insb ljmp js in inc mov push cmp sub push lods dec movl call fdivl arpl cli imulb jbe (bad) xor adc test fcompl je jle pop jno jbe iret or mov lods pop cmp stos pusha aas add cltd xchg jbe stos int sub fwait testl mov sbb aaa sahf fiadd (bad) int3 dec push push into or pop ret lret in jecxz pop pop jmp loopne sub icebp sub aad das or jp lahf mov cmp add shlb lret and jle mov inc and in imul mov and inc int3 mull fnstsw into push jns cmp mov mov push mov cmpsb adc pop fs mov push inc jne and mov xchg xlat minps push adc bound xorl cwtl push jbe lock insb inc sub popf pop icebp ja aaa popa cmc roll push cs (bad) into and xlat test push adc sahf hlt and push cmp lahf rclb jnp push aas and lahf cmp jecxz or jae sbb inc gs jle or sbb pusha insb add (bad) (bad) and ret jg cmp mov (bad) icebp mov sbb mov inc aad xchg aam (bad) cmc sbb adc icebp scas pop cmp mov lds cmp and xor rsm push jne hlt lods out or out xlat mov nop adc arpl stos sarl jo sbbl pop mov add push loope pusha inc scas mov xor mov bnd out sti mov sub push and loop sbb and aad pop (bad) repnz jae repz js out in jns sub jmp dec and xchg xchg jp and pusha xor stos cli ret loop mov push cmp outsl push es mov dec es lea push lods mov xor fstpl xchg mov mov lods fild (bad) xor mov fiaddl push daa sbb sbb cmp orb xchg pop jne fmul xchg mov insl data16 mov push adc sbb outsb add shll and jg scas int3 pop mov or mov mov pop xchg mov xlat jl cmp stc popa ret pushf and and imul lcall mov (bad) popf mov pop test xor push lds mov sub test dec and dec add js insl jge jo cmpsl ficoml mov dec xor in pusha jl lds rcrb push mov xchg (bad) jb jmp loop les xchg insb xor dec add or or sbb fcmovu cmp cli sbb rcrl xor add lods push insl mov mov push mov out sbb (bad) js lahf cmp or fwait xchg out imul push (bad) js fcomi mov xor push mov sbb int3 sbb pop in push faddl pop test xchg (bad) add cld dec fisttp std add sbb aaa inc fs out xchg sub jle xchg stos mov xor push push pop mov lahf fisubr mov or mov cs data16 mov xchg mov test out (bad) xchg xlat fmuls testl xor xchg popf inc jbe mov frstor pop dec int3 pop add xchg sub jae mov (bad) cmpsb xchg sbb pop mov bound rcl push lcall or xor aaa (bad) pushf pushf lahf xchg enter es push je lds jb xchg aam outsb jge ret mov in pop cli add out loopne push jbe pop or outsl dec sbb lock add push dec adc into xchg fs push daa mov xlat cmp fnstcw out jne push out mov cmp dec mov int3 daa sub out jge mov inc lahf test ficomp and aas das pop test mov leave out cld adc cmpsb cmp loopne cmpsl dec mov or xor jne int mov fwait mov cmp je mov and mov cmpsl jns imul scas int imul mov jbe mov sbb mov (bad) ja jo test jno pop insb out add fcmovb in inc inc les and pusha mov mov push cmpsl dec jae stos pusha call (bad) (bad) adc push and and ds jne mov fcomip mov cld test test xor fiadd adc push test push (bad) pop xchg mov fs mov and mov adc pop das lock ja pop daa mov mov or dec push mov cs in sti imul lret inc cmp push push js pushf pop in push pusha adc stos jnp pop out shrl mov push or jl jecxz data16 aas push bound mov arpl dec mov lcall xor cmpsb add lock into lret arpl out push sub pop repnz mov jg int3 movsl mov mov outsb (bad) clc mov jns mov xor sti lea clc and or adc movsb xchg cmc xchg bnd fnop xor lods mov cmpl push xchg lret add in mov mov pop mov sbb cwtl xor (bad) cs stos fwait mov sahf stc pop push popf gs mov add out orl fiadd add push outsb or inc mov sbb je les push sarb test inc jnp nop sbb mov mov xchg push orb jmp das pop shlb bnd xor cld push (bad) jle pop mov pop test lea lcall dec or mov pop ja std pop call lock mov jae test pusha xlat subw (bad) mov insl mov test sub xchg ljmp push mov popf xchg xlat bsf sub and xlat mov add xor xor and mov jl pushw xchg and int lret not test das xchg dec pop pushf sti push aaa add repnz dec sbb add cwtl popa (bad) (bad) test xchg ret jae jmp adcb test xor mov lret loopne daa lock arpl ficomp scas add xor cli push rorl pand in and imul cmp fidivl sbb cmp sub jno dec jns mov mov test lret cwtl or push pop lahf outsl loop push sub jecxz xchg xor inc sub dec icebp sub mov mov sub lods jno add add pop push adc xor or bound (bad) jbe fcompl sbb pop and sti mov dec mov ret adc pop icebp daa dec sub test (bad) mov push popa fisttp popa lds pushf jne cmpsb xorb mov std nop outsl push and imull insl imul adc jo aam das push (bad) iret mov aas adc push mov icebp xchg int3 jp (bad) aas sahf arpl sti (bad) jmp inc pop leave icebp notl cmp xchg lods dec jo push test cmp xor mov pop imul mov cmp dec test jns mov dec ds xor pusha out sub sub je fbstp mov sub jl mov je cmpl aaa int3 stc leave fnstcw loope insl lret or dec pop hlt sub push sub shlb xchg mov fs pop dec add jge outsb sbb adc in xor mov mov lret sub xchg pop cmp pop dec arpl xor jge lret je test add and add cs push vpsubsw mov and cmp frstor or and sarb xor adc xlat mov or push (bad) xlat dec cmp pop push dec dec in and jo jge sti lock adc sarb xor pop cmpsl fdivs jo loop push test dec cmp xchg push rdtsc pop mov jbe and cmpsl add cwtl cmpsl jge js add jne pop adc std popa jp leave fld ja sub sbb in jae xor (bad) into clc dec dec rclb fsubr push push lods mull (bad) in cmp (bad) xor outsb cld jg ret ret xchg add ret dec mov jb lods into add sbb xchg daa or imul fimull push sub push cwtl jmp push out xor out in das aaa pusha insl pushf cmp stos push lock jecxz xchg movsl push (bad) xor inc pop adc pop in test sbb inc clc aad inc dec das pop xchg dec movsl sub into repnz add (bad) in mov dec jo mov pop orl in iret push jne pop (bad) movsb inc fimull insb jns sbb cld xchg aaa popa out mov inc in pop aaa jl rorl jle sbb inc xchg mov cmpsl pop test push or or dec push cmp pusha loop enter sahf jne iret pop outsb inc push test mov test cmp repz mov push sbb iret jb test push ja movl adc lahf jge mov pop mov fnstcw push sbb sbb jge jns xchg imul jp out push ljmp sbb ror lods cmp in xor movsl lea daa outsl jmp mov ja fisubrl pusha xlat inc xchg cwtl repnz push or mov test fwait in in cwtl cmpb lods shrb xor sbb jge dec pusha (bad) iret popf mov (bad) xor sbb jae out in or or (bad) fsubs push push mov mov xchg mov movsl shld add jle dec sbb fldenv into popa jns pop enter push repz pop fcomi jno sti mov mov mov mov push xor repnz popa test fcomps gs push rcr xchg mov xchg out mov mov les mov subb cs add mov push cli mov dec daa (bad) loop int leave rcrl xchg data16 sub js into inc mov cmpsl inc pop jae jo and rcrl je jno dec jle lds out pop cs lods xchg or mov mov sti lcall clc jp shrl ss mov negl dec add push sbb mov mov push sub cmp mov mov test pop stos jno xor mov sub xchg sbb js test shl into sbb fcomps ss mov stos sub cmpsb das xlat jmp hlt xchg jb rol xchg and jae fistpll dec xor xor pop sti cmc scas jge lret dec (bad) lcall cmp pop (bad) add dec xlat push notl movsb std push mov pop dec push and push mov inc sti sub push popf (bad) cmp sub jge mov call add movsl fs imull jo js inc lods rcll enter and push (bad) adc xlat add jns cmpsl jno cmp sbb pop and add fcoms push mov lcall insb scas jp dec xchg movsb test add pop dec dec xchg xchg lock fdivs pop (bad) mov pop das add (bad) inc insb adc insl scas loope and in cltd int ds sub outsl out into push inc dec shrb cmpsl arpl mov cltd sti test push div push test les js jnp fstp fwait xchg xchg inc hlt xor jb mov loope sub cmc push adc fs inc negl (bad) jmp pop inc fcompl (bad) iret sbb or out clc jb jne pop xchg lds (bad) sbb hlt push je in mov arpl xor xchg ja mov ljmp xor xor and jp fldt inc ja leave dec leave loopne (bad) icebp xor add dec sbb pop push (bad) push adc push dec lahf fbld stc leave and push lods (bad) xor sub sub mov sub mov push jb mov (bad) sub push sub mov inc and in out andl cmp sahf imul clc xchg sbb lret int inc cli mov pop and mov scas inc movsl adc mov fiaddl xor das hlt insl push repnz add inc adc cli nop and pop cld inc fisttp xor aad mov dec cs pop rolb adc pop mov int3 fwait dec sub aad ja jmp lret cmp sbb loopne sub jp imul jmp test inc (bad) xor out sbb out dec lcall inc xor fisubrl test sbb ret (bad) mov mov sub mov insl and int out push dec (bad) cltd arpl daa dec jp sub fdivrs scas mov adcl cmp xor sub cmp in les pop je cmp inc in jmp xchg sub sbb addr16 ret subl inc rcrb inc inc or repnz push cltd out mov mov shr iret add pop lods repnz mov jge sbb pop mov jg fcmovnbe imul icebp imul jecxz mov inc jno arpl add mov (bad) jge int jle pop sti fldenv enter jae icebp xchg ds out pop jb mov adc jl fdivr std pop xchg sub pop ja aaa mov jo cmp pop cmpsb das sahf jae lds scas imul lret cmp loope dec xchg pop mov movsb push fisubrl fiaddl mov mov movsb je xor sub or xor rol cli cs mov fs and testb xchg pop pop xor ficom in inc cmpsb pop es mov mov ret (bad) idivb js lods xor imul sub int ss pop mov cmp push mulb cs loopne pop mov sahf pop mov mov jge int mov fldcw dec adc push insl rolb xchg push push pop sub inc dec and sarl jnp divl sarl fdivp pusha cmp stos jmp mov add insb add cmpsl test adc push mov rolb pop stos lock xchg stc ja movsl mov clc lret stc scas into fisubl call out add pop sbb xchg mov xor jno xchg mov int3 pop push xchg xchg idiv aam mov aas xlat mov inc dec mov adc les adc pop xor mov dec mov int3 mov ret sarl hlt sbb mov mov ret xchg pop shr test jmp sbb jb fwait (bad) cmp enter xor leave sbb js xchg push and xor xor sub xor fistpl insl sub mov scas inc (bad) push adc repnz iret add test adc dec pop repnz lea jno push ficoml stos dec xchg sbb idivb mov into divb add jp xlat push jnp (bad) sbbb push in jne call jl or cmp inc or push sub lret imul xchg jno ds movsl cmc push sbb lds fisttpl xor lds mov mov js imul movsl jp mov mulb cmpl and adc sarb insl sub sahf add pop mov pop xchg jmp and and (bad) xor (bad) jne lds push int mov cmp test sbb mov loopne jae fcomps hlt pushf js icebp mov jl mov mov bound fnstcw pusha push push sub jg dec fisub dec sbb mov push jecxz rorb dec sbb add loop into xor jg std lods shrb addb xlat lahf (bad) in cmp mov sbb mov sub clc mov pop repz fs lock jmp push pop pop jecxz cmpsl xor cwtl mov xor rcll mov sbb xor jg inc addb sbb add (bad) adc rorl stos outsb mov fcoms aam cmp mov push imul addl and dec inc rcrl mov mov arpl (bad) push xor loopne in fucomip lods mov sbb add jge sbb rcr cli mov mov and (bad) cmp nop jno add out sub add xor xor in xchg sub sub adcb add or push dec inc sti (bad) push (bad) mov xchg test adc cwtl aas fstps push jno cmpsb jge mov xchg sub adc dec div push jl xchg popf lret ret jle shufps fdiv or cmp stos insb sub fs sbb sub test lods stos jae fcompl pop andb sub pusha movsl mov and jecxz xor adc cmp sahf xor notb mov fucomi ss arpl xlat test cmc push test rolb out sub inc mov jnp mov sub icebp loope mov mov dec cwtl fdivs xor lods xchg push ss pop sbb dec stc fstpt lds daa ret ss rorl dec loop jbe jle mov mov out xchg pop push mov or xor jns rcll cmp in mov jmp shrb adc rcll jmp mov inc jb jae sub in shrl notb smsw or hlt fcoms int3 or (bad) or je dec adc xor push pop into xchg cs rorb (bad) pushf scas fnop jns pop sub xacquire int adc xor daa loope and ficompl jo or popf popf sbb xchg or xor push cltd and je cmpl inc xchg xchg add push in and mov fildll insl jle ret fdivr out les cmp dec or jbe (bad) (bad) xor pop repz jne add movb jbe and cmc xor lahf sti add mov mov je mov inc or jne (bad) add pusha sbb push cmp mov pop add push jns add cld (bad) jp jl rcll xlat lcall ret out in in cmp sbb popf test data16 aad gs sub pop lret adc mov jl mov pop mov cld and dec iret push repz mov pop bound movsl xchg sarb xor mov pop daa idivl dec out fs (bad) in lahf outsl jo sahf std cwtl adc (bad) std lret in mov imul out push inc (bad) rorb imul int adc dec dec sub mov loopne mov xor loope ljmp out cmc pop push loop mov jecxz (bad) cmp dec ficompl mov test sbb jmp push cwtl int3 sbb push call dec shll lret test lcall jp xchg enter adc sarb or mov or lods (bad) mov fsts in push jg xchg push and jle mov out je dec jmp test mov (bad) pop fimull rcrb push cmp ret outsb es int3 scas and std lock js aam (bad) sub pop pop adc fnstsw inc or jns imul std cld add inc pop mov mov or lds and in sahf aam mov sub push into lock loop mov aas aam pop inc adc mov or xor addl in and mov repz ret lcall gs mov repnz sub mov inc stc mov fdivrl es movsl mov ret pop jne lea cmp loope pop dec sti sub aas sahf mov inc sbb xchg mov inc xor sub cwtl aam js jmp popf ss jp mov mov sbb into rcr xor push (bad) dec nop jne xchg cmpsb lret sub jl pop inc sub push (bad) xor ret mov lret sbb repnz aaa add stos mov lock (bad) and lock daa sbb fwait mov push clc sbb sub pop ret cld js sub bound lods call fadd push fucomip adc jmp cmp test div test jge mov jecxz dec fist and push mov xor sbb stos int3 stos inc push out cltd aad icebp inc mov and xchg push jnp jb cltd cmp fisubr or test dec insb xchg or ss call dec in outsb fcoms xor mov pop jne xchg and icebp je jmp sbb insb cmp (bad) dec sub ljmp pop jo in push sub int3 push sub inc mov test xor dec iret push cmpsb scas mov xchg pusha outsl (bad) cltd push jp movsl cmp cmpsb jnp js cmp adc jge iret cmpsb nop out xor mov icebp std lds stos jle test out mov adc or je jae mov pop pop mov fxch bound stc mov jns mov cli mov or repz cmp fdivl sub fsubr rcrb mov or push and cld add mov mov sub inc jle pop mov (bad) test push loope cmpl sbb lret xchg lock mov fisubl pop fcomps mov push aam enter ja stos insl cmp xchg mov xchg ret push mov xchg mov sbb ret fimul mov cs push pop loope xchg ds xchg inc and pushf sbb pop jp sub imul arpl mov xchg js mov fucom fistl lcall loope push lahf pop lahf mov mov push test adc xchg cmpsl stos add in cltd xchg inc push jmp or xor sub mov dec clc test mov pusha push or sahf out lret add pop loop cmp dec mov (bad) jae push in incb popa mov jg sbb test mov pushl pop xor push rorb repnz dec mov pop (bad) negb sahf fcoms subb loop fldenv fwait outsl lahf clc dec mov es and int3 sub jbe inc repnz ror (bad) sbb dec das das gs cmp js (bad) mov push aad mov int xor pop xchg in pop fisttp int mov mov lods fdiv popa jo jmp aaa cmp jp std repnz mov movsb xchg push cs mov jnp and dec fcoml loope ljmp inc or sub sbb test adcb rcl in (bad) sar (bad) mov inc js test xchg adc adc (bad) in fsubrp jle sbb addr16 addr16 sub pop inc insl or (bad) sbbl dec xchg push jl inc mov xchg test or imul cltd or mov xchg inc dec push rorl push add add in imul jns add mov or pop xchg (bad) cmp mov ss lods cmp outsl aam cmpsb mov out dec jge mov sub hlt push lods mov rorb mov mov orl xchg in mov add inc std jl stc xchg rol xor aam push xchg nop pusha repnz fs xor insb scas cmp push adc loop test mov clc push divl cmp xor add and inc cmp shl mov pop fcmovb imul cltd adc add sahf std and fcomps and mov inc (bad) neg push sbb (bad) xor insl or fidivrl jg aad fwait xchg ficom in mov lret jns or ss mov cmp inc jecxz xor int sbb inc mov inc sub cmp and (bad) (bad) (bad) and push lds lahf ja popl mov lock sub cwtl sub jg xchg aaa lret push xchg (bad) mov xchg cwtl in arpl inc dec push hlt pop pop xchg enter and mov mov sbb mov cmp in imul out mov jns leave cmp popf les int mov aas (bad) movsl fnsave cmp in pop shll xchg aad mov cli aaa mov in repz leave mov dec mov out pop push sub sahf xor lods jno int mov imul ficoml or inc mov sub sbb popf into daa jg and sub xchg add xlat cld add xor push dec hlt inc jmp push roll mov push xor stos adc movsl fiaddl dec es ds adc cmpsl ss std cmp sbb inc lock call dec push leave (bad) aaa aad jg mov mov subl mov dec push ret sbb inc imul dec lock cmp push cmpsl insl pop scas jg pop add fstps scas in mov push lret stc shrl pop mov into (bad) data16 inc popf sub adc mov cld cli aas and shll push aas push cmp and mov push mov out stos (bad) xor and orl push sbb shrl mov xchg dec stc jae jecxz movsl adc lahf pushf fldl fidivrl repz cmp xor sub xor inc cmp lahf pop add ss cmovge movsb mov and icebp jge inc orl pop fsubrp in (bad) sub packsswb inc insl pusha pop push scas fidiv icebp daa jo and into add push insb mov cmp ljmp pop sarb xchg fnstenv mov addr16 pop fs mov daa scas pop sar jne repz push jmp push cld and lret hlt sar std push sub notb xchg imul sub cmp jne sarb xchg into repz dec xlat inc stc lret pop pop mov dec mov jbe pop lds mov sub push (bad) jb or xchg mov aas jp pushf ret insl xor repnz push outsl adc cmp mov xchg jl mov sbb pushf pop fiaddl outsb decb and (bad) sbb pusha pop and or mov mov adc lock push in mov sbb outsl in movsb or jnp or das ss sbb ljmp in pop dec (bad) cmpsl scas jle cmp adc lcall std lahf pushf and jecxz inc pusha cmp adc mov fmul xor shll jecxz out les stos js hlt jo pop cmc les es pushl or sub mov xor lcall js adc outsb ss jae xchg or inc push andl xor sbb mov mov rcr dec stc xchg stos repnz negb call mov cmp loope sbb pop imul adc sub out arpl sbb lock lock dec cmp ret loop rcl sub xor or fisttpll pop data16 push hlt and (bad) les inc lods mov loopne dec sar std aaa mov fsubl cs jne fsubrs and xor add xchg jnp jo cmp ret jnp pop and dec into rolb pop dec movsb mov mov mov sbb fidivrl repnz cwtl or adc frstor (bad) mov retw (bad) stc dec mov add lea lahf out cmpsb xor dec and leave out (bad) out mov leave jns push xor cwtl push jp insb mov cs mov add and enter sub movl fstp or mov mov mov xor push mov mov lock add in mov push (bad) rcll incb lods sub orl lret int mov hlt out cwtl loope xchg movb xchg mov jnp mov insb sbb inc rolb lods dec or push gs sbb nop mov xchg xchg hlt sbb (bad) sub lret fsubrs aam mov and test cmp aam mov push mov sbb and dec pushl push movaps int ss jne mov or and cmp fwait sbb jns out xchg test jl or jp jae movsl and les pusha (bad) fild cmpsl or pop add sahf in push ret mov popf (bad) aad sbb fmul insb push out cmp mov dec push sbb jl inc push movl xchg xor xlat mov jae orl sarl mov push sbb pop pushl out and cld mov jb (bad) out out mov add mov and jmp gs xchg inc outsb fld movsb cli push mov repz sub out out repnz mov add or stos adc jmp push mov cmp sbb hlt aaa pop xchg inc rcll es cli test xor adc (bad) and sub pusha xor inc and bound add mov lcall push push sar call jecxz push pop std mov call xchg (bad) std xlat loop shr xor xchg adc pop jl sub aas fucom rcr cmp push cmpsl push fnstcw cmpsl mov int3 sbb mov jbe aas pusha push ss in dec lods cmpsb cmp jg stos decb push sub mov (bad) enter inc add outsb into in ljmp scas mov jno jl scas das lea inc cld jecxz jmp cmp fsubl lock (bad) push dec mov jecxz sub fsubrp ret and loope sbb ds add cltd inc add add mov insb stos pop iret fcmovnbe movsb scas dec sub rcl jl jmp push adcl xor and repz mov in in in inc dec xchg cmpsl or mov inc pop push mov mov clc mov sub mov add imul loopne movsb inc jb icebp sti pop cmpsl cmp mov popf mov movsb mov insb (bad) xor outsl adc lock rcrl mov sbb clc pusha mov into push push add (bad) xor xor xchg nop cmpl movups fisubl mov out cmp lods inc cmc loope lock loop pop in xor loope sbb adcl ret insb pop push ret push hlt xor stc cmp nop and sub adc jmp sbb outsl enter in mov xor repnz dec cmp mov insb inc mov dec les ljmp push test lods cmp inc leave cmp nop pop cmpsl sub in pop jbe shrb (bad) jns out push dec inc xchg push in popa enter test jmp xor loope sbb hlt cltd adc es push daa jns push pop mov mov push dec sti xchg xor out test pmulhw test or shl aas outsb mov mov pop or pop clc xchg xor sub gs ss sti or fistp mov mov fistp imul xchg shlb jle aaa sbb stos adcb lods pushf imul mov out insl (bad) imul jns push imulb das mov fldl mov insb mov jb arpl aam loopne repnz lods cld xor scas das sbb hlt xchg cltd test cmc pop jp or mov scas push sahf aas test sub jmp dec nop xchg push jecxz fistpll stc or jecxz inc addr16 test cmp push je jg jmp mov cltd daa mov adc fisubr movsl ljmp push je movsl and jp test hlt out subb fisubl mul sub movsb lret jmp repnz in cmpsl adc dec xchg mov mov clc xor add cmp inc cmp mov xchg jno mov xchg ljmp and rol lock ror repz jb xchg and imulb fbld lret mov bound mov adc pop push xchg or daa inc scas or pop jae jmp cmc pop inc cmp or testl pop jbe mov jb adc sub mov movsl jmp adc dec int3 int in cld and or pushf aas test xor mov sahf pushf ret cltd dec daa outsl clc mov adc dec inc ss out and jle adc (bad) test add (bad) popf xor js sub mov push xchg cmp fimull loopne or xchg jo rcrl in cmp inc push aaa adc xlat xlat stos cmp sarl insb jae pop out mov cmp shrl dec push popa push push in mov pushf mov pushf (bad) outsl test mov outsb repnz fwait imul hlt imul nop pop cmp ja testl bts leave mov loopne outsb movsb xchg adc fcoml jnp sub cs cltd ss (bad) fisubl adcl mov flds cli mov adc movsb sub stos dec je mov sbb hlt insl (bad) loopne fcoml jb repz mov fstpt mov mov (bad) xor mov mov adc jle in aam lret popa inc jp mov scas cmp rcrb stos aas sub mov rorb mov inc jle stc fsts inc dec push jecxz je (bad) or dec cmp mov lea pop fidivrl push cmp clc inc mov mov insb jnp cmp push aaa cmp mov inc lret inc sub fdivs shrb addl movsb (bad) dec cmc das inc into fdiv xor xchg push cmpsb cmp jp sbb stc in mov mov mov (bad) sbb (bad) notl xor sub and pop imull cmc jecxz popa sub adc jg not rcll mov fnstenv ja pusha lea (bad) mov fcomip inc test xchg in or movsl shll sbb inc fistl ret fucomi xor cmp add add xor pop inc out push mov mov mov dec and dec dec fwait pusha jo inc ror xchg loopne aam subl sbb pushf insl mov mov xor or cmpsl (bad) jp cwtl sti cmc std and mov inc jns push cmpsb xchg bound loop in xchg repnz pop cmp sub mov push push xchg faddl mov jb inc push push sub sbb pop in sbb inc loop (bad) scas push cmp jb (bad) jne push cmpl or mov xchg add fbld or mov stos (bad) jmp mov jecxz jmp and leave add adc jns sub fcoms call loop dec fmul dec adc sub in xor (bad) sub rorb fidivrl incb pop lods inc aad imulb das loopne daa mov mov add daa loopne inc xchg loope popa xchg sub jp aam cld jnp or movsb arpl (bad) outsl les sbb pop divl or in imul loopne jno and mov add cmc dec inc sbb sbb out gs cltd aas enter clc jnp js inc mov adc xchg cld jge in in (bad) cmpsb cmp mov mov xor in ret aas ja mov push out adc mov fidivl pop jmp and imul arpl cli (bad) arpl ljmp lea popf sub out iret mov pop xchg incb or roll push xchg xor adc in xchg cmc or (bad) xchg mov orl lret lods mov jo ret stc ss mov incl loope pop (bad) stc push sub jecxz into call push and out jge fidivr fistp std inc ret mov mov fadds xchg inc mov and jle add hlt in sbb cld je pop mov clc frstor daa (bad) jecxz add fstpl fdivl cmp pop cmpsb inc xchg cmp hlt sbb push stos outsl addl je sub push cmp ds sahf inc or int pop adc xchg cltd inc jnp hlt and pushf (bad) xlat mov in xor cmp test and test stc cmp insl mov jno add cmc cmp or push sub repnz cmp inc arpl ret arpl mov cmp jecxz test test js mov mov push aam ds pop xor loopne mov loopne inc and mov xor sub out (bad) negl mov pop mov insl pop push aaa pop pop idivl negb pop mov xor icebp icebp add insl xchg pop mov out pop adc xor mov push jne aas sbb cmpsl (bad) out sub enter int3 lret int popf insl out pop js repnz in es adc dec mov call and or adc adc (bad) iret hlt pop outsb xorb iret in (bad) scas (bad) ljmp cwtl xchg bound cmp inc cmp scas out fcomps (bad) cmp xchg aaa xor dec repz sbb (bad) jns test xchg adc adc inc inc punpcklwd aaa lcall outsl jne jg and dec sbb xchg adc sbb sbb xchg xor mov push roll jb add imulb push pushf jne add jmp test lahf fxch push jmp xor xorl mov stc test pop icebp sub push sub mov in stos ljmp pop cmc add xchg insl xchg sti mov lods adc negb sbb mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 les popf xchg test es xor aam insl push mov in lcall or cmpsl xor push cmovns mov gs fwait pusha jmp repz daa lret inc and out jmp inc mov flds leave shr fstl call push pop aas xor int3 pop inc mov pcmpeqb arpl les xor aam add inc mov mov cmp cmp mov mov icebp nop leave int jnp push push inc (bad) rorb push popf incl xchg xlat cld xor cmp push push mov inc movsb mov out cmpsl testl fs shll sbb shrb adc popa in jle jne mov jne push sti clc jns es mov jae xchg and testb push or arpl or jno aas xchg sub add fnstcw repz int popa ds outsl mov jmp or ret in sub cmp stos cmpsb dec dec and push mov inc xor test (bad) cmpsb insl mov inc jmp aaa lea mov add mov mov popf xchg in xor inc stc inc lahf sub lea push enter mov insl lcall negb cmp cltd add dec lds push data16 sarl enter fisttpl inc in fist fdivrs cld pop mov jno in or sbbb mov mov lahf sub imul out jp cmp int3 add clc test pushf sbb loope xor (bad) jp outsb push popa fs xchg decl loope (bad) push sbb mov inc mov xchg rcrl inc adc mov mov imul adc push (bad) (bad) shll adc add xchg nop jge aad mul add and pop cld cmp lret cmpsl sahf jl in push sub lea push pushl pushl call add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret les (bad) dec pop sbb int3 test in bound out test pop dec xchg mov lds das das mov xor das xchg sub jne mov clc cmp or scas and mov dec mov cld pusha loopne sub mov int3 std pop movsl push inc loope gs dec xchg aaa mov inc js jl in leave dec pop push xchg lret popl lods inc xchg scas xor ret pop xor pop jg in mov sub inc xor inc lahf outsb scas ret push mov cmpsb std jo pop int imul xchg fistp cld xor inc pop pop sbb sub add sub dec imul outsb cmp imull (bad) and imul adc popf hlt jle divb jge clc push fidivr jmp jb jmp pop aad into dec repnz pop sbb mov push sub fistpll mov mov stc mov arpl sbb cmp xchg sub jo shll rorl adc jnp cmp inc inc mov mov aam scas dec jg xor jo xchg stos shrl in jmp or lea mov push std ffree (bad) dec pop sbb js in xor cmc xchg icebp into pop lahf stos or arpl push icebp xor (bad) jno or inc cs push je dec fcoml xchg mov and jp mov xorb movsl adc cmp in or arpl paddsw pop jo inc scas push cmp and add push mov sbb mov jnp cmp (bad) sti test insl jp ret push mov mov mov mov add cmc cmpsl adc cmp lahf mov mov add xchg test movsl enter dec rep cmp scas (bad) lahf add adc test neg inc clc nop cltd sbb dec add push movsl mov mov dec inc fmuls sub rolb jb pop mov mov adcl rclb dec out jo mov sub or jb out test sti (bad) js inc in arpl sarb and jns cmp add les popa adc (bad) lea (bad) test shr and pusha pop roll sub cli lahf add pushf jl (bad) mov imul ret push or adc dec pop cli and dec xchg int3 mov faddl cs dec pop lret jecxz adc mov inc and ror jl aad push mov (bad) cld push cmp hlt cltd test adc insl outsl mov and mov int3 fdivr mov fnsave adc aaa ror xor xchg gs and fsubrp xchg mov push ret std call gs or ret cltd mov repnz and mov jne loope (bad) mov mov sbb cmovs lret cmc sbbl cmc mov lcall test or test pusha and bound faddl or js mov shll scas movsl in cmp aad xchg mov pop scas jmp xchg mov (bad) leave push dec pusha cld outsl (bad) in repnz dec and mov and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret pop cs rclb movsl xor aam pusha test adc scas inc dec pop mov or or mov dec lds jno dec dec push xchg dec cwtl daa fistpll jecxz mov dec push or adc jae hlt xchg mov or xor ja int inc icebp mov dec cmp mov adc add pushf push xchg inc mov stos cmp mov repnz push dec sbb add push push out mov jnp imul or fiaddl add fstpl (bad) pop sarl lahf out scas sub push or dec popa (bad) and dec push sbb sbb add jmp jnp in shr dec jo inc cmp jnp sub rcll add sbb xlat (bad) lcall scas inc sub popf push add sbb (bad) fidivl and test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp xor xchg xchg sti popf into int3 sub mov int sub sbb pop data16 sbb test cmpsl in or in mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret xor xchg jae pop out pop cmpsl inc loope das inc and jmp and mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp xor xor cmp push inc jp push icebp pop addr16 sti rcl fistl in mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret xor xchg in mov fsubl test mov sub mov jne stos not ret loop and inc and lock and push bound sarb or push jnp push jl enter sbb ljmp stos mov xchg sbb jl arpl in xchg and adc in jge inc dec rcl icebp pusha shll adc cmp pop inc stc mov push (bad) jmp inc cmpsb jmp jp lock lds add (bad) mov in or ljmp sahf mov fs std xchg sbb out clc xorw push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret xor xchg sbb push jmp cmp xchg (bad) loopne mov add add inc add pushf lods adc add int3 int3 enter mov jnp (bad) sub adc loop mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret das and out mov push mov add or dec add mov (bad) decl add js mov mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret xor xchg sbb adc jg sarb loop js cltd (bad) jae jno jge iret in jmp (bad) mov add add es sarb push scas sti cs int3 mov push cmc les jle imul cmpsb mov mov mov xchg ror loope loope rclb inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret xor add sti movsb adc xor jl xor add xor push add sbb or push mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret xor xchg sbb mov cmpb enter push xor jno sarb jmp fs out les insl in nop cmp push mov call xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret sub mov out and (bad) mov ds ret scas lret into stos cld jbe push iret (bad) mov add mov mov daa push mov dec in in imul mov inc sub cmp cltd dec jns mov push loop and cmpsb pop repnz loop (bad) jae add push mov push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret xor xchg out pop jb (bad) jge sti inc fmull addr16 or xchg cwtl rol (bad) jp pop push mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret xor xchg out pop aas mov xchg hlt xchg or in mov popa add es loop push mov push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret xor cs mov cld in jb les or in insl xor xchg in jp mov ret xchg js (bad) push (bad) pushf xlat and pop xchg mov popa push pop daa sub jecxz jno push and pop or adc xchg or inc cld push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret sub hlt sub pop push mov push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret xor xchg out mov jb movsb adc sub aam adc xor xchg mov repz sbb mov data16 bound or and (bad) movsb pusha jmp dec aas loopne push mov push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret xor xchg jae pop test fcompl das inc push mov sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret xor xchg sbb das addr16 imul push into outsl jbe sahf xchg adc ret leave loop dec sbb fcoml in push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp xor xchg sbb das xlat icebp imul push aad jbe movsl mov pop fcomi jbe loop aaa imul sbb and lods notb sbb in push mov lds lret or gs xchg add gs (bad) lcall dec xchg loope test sub and insb jae pop mov or dec xchg sbb shrl pusha (bad) push or in cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret xor xchg sbb das sub imul pushf dec stos lock mov lods sarb or mov or mov stos sub repz fcmovnb popf ret insb xchg pusha aam mov or xchg cmp call xor cld (bad) cmp in add sbb push int3 imul in gs dec mov sub stc sbb cmpsb (bad) ss mov fmull addl mov push in int xrelease test loop push out jno sub mov xchg clc lods cmp cs sub fcmovne negb icebp call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 xor xchg out mov mov loopne push nop adc sub fcmovnu jmp add in daa mov dec imul std inc cmp push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop jecxz rcrl sub pop sti or cs xchg nop call nop mov in pop push xchg mov div das or add xchg jnp rcrl (bad) push dec cs imul add fisubrl pop fisubl jge call outsb cmp mov mov lods mov loope repz jo mov inc xchg cli icebp adc cs push or sbb jb mov pushf in mov jle pop sub mov shll cmp gs mov test adc cmp adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc xchg push aam cmpsb ret hlt and push pop std aaa sub imul mov cmp aad movsb shrb or (bad) std ret in fstps mov xchg popa mov mov rcll mov lds mov mov xchg into jb inc push inc dec test out mov mov lcall and enter aas cmp fnstenv sub dec push mov mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret xor xchg sbb xchg sub les mov cmp insl testl lods sahf xor lcall xchg loopne loopne and mov adc or jbe out jge je (bad) dec mov cltd in leave data16 icebp shr nop xor enter xor leave fsubrs out test out pop loope mov (bad) add push push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret xor xchg out mov enter (bad) not loop (bad) mov mov sub in cs adc lret push (bad) aas mov daa pushf in push mov xchg lcall movsb out adc inc and push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret lret test push inc lcall adc loope xchg in (bad) decl or (bad) (bad) call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret xor xchg sbb out iret pop and pop les mov sbb sahf test in jge not cmpl jb movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret scas lcall mov test mov test push push movsb scas xor fcompl das inc and push push add add push mov cmpb jne call call push call pop mov pop ret scas cmp movsb lock cmp adcb mov push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp xor xchg out pop (bad) xchg popa jnp movsb dec jl and jo lahf mov dec mov xor add les xchg sbb les push lock imul movsb dec push xchg cli mov or rcll fstl out test and jg stos inc push mov or aas mov pop xchg (bad) pusha jns pop mov sbb lds ljmp stos adc in push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret das loop lds inc add aad ljmp mov push mov loopne aaa out inc pop pop adc mov mov mov cmp je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call es repz sbb test into neg dec roll xchg (bad) aam test xchg lods lahf ret jp pop repnz push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret xor xchg out mov dec xchg xchg cs movsb inc add cli pop imul xchg in fidivl leave adc mov les add mov mov mov sub cmpsl jno lahf push push xchg dec dec sbb mov mov into in adc inc push mov push pop stos (bad) xor adc (bad) dec and and sarl imul out lods jne pop pop push inc mov push fwait sarb adc dec popa fwait hlt mov out jne jmp adc loope xchg jbe cmp rcr jge gs fwait jne xchg xchg out ficom out pop lods and sbb js mov push mov or fsts mov outsl dec pop adc repz push aas sbb in push insb pop scas out mov lret sub fwait into jo fnstsw adc sti add shl xchg adcb (bad) adc push pop sbb (bad) aad nop or inc adc push and cmp cli jmp hlt cmp xor incb test jae test mov insl mov xchg aam cmovns lcall and xchg inc insl bt movsl mov shrl dec es xor lock sub jae mov sub pop mov icebp or jl sub sub jns sbb cs push cmp loop push mov shrb jne xchg das notl (bad) clc inc (bad) stc push les adc std jo sti std aas add pop or cmp ds inc pushl and orb xchg insb icebp cmp cmp and movsl (bad) leave or push leave xor mov add inc push fs jp movsl push xchg inc adc adc sub ret push mov addl add mov mov cmpsb add jg sub mov sbb push mov loopne aas lahf sub mov push cmp leave test in add push xor xor je lods iret cmpsb push out mull cmc mov repz mov jecxz dec repnz jne mov test sbb sbb pop roll call cmc adc loope inc fdivrs add bound fsubl movl outsb sbb mov std mov jns sti mov xor mov test inc pop ror cmpsb sahf push call enter ret jb xor popf repz jae xchg cmp cmp inc popa jae jg iret xchg in icebp fbstp addr16 mov cmp cmp pop mov in je lods xor adc lea push fistpll lret fcompl jle subl fucomp iret pop pop pushf mov push mov push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 xor xchg jae inc dec mov inc xor fcomp xor xor hlt ret scas cmpsb xor push call mov mov cmpl jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 lret out shr mov jge outsb js xlat cs pop aas and add jmp xor add lret mov adc (bad) out mov mov roll xchg cli (bad) mov call mov loop js mov (bad) movb mov and add mov xorb mov (bad) jae pop into mov or sbb hlt or sub ss mov mov (bad) bound in sbb popa jbe and mov js test js push xchg (bad) mov jne aas xchg xchg push bound add fsubl mov out mov cmp pop fstps ret (bad) jb xchg icebp out cli shll out xchg or mov cmc push stc jb mov mov insl push inc add testl fisubr andb aas mov shrb xor aad imul es dec mov push mov pushl mov call pop ret lret out add lcall ss cwtl mov aam inc cmpsb in lods push outsl xlat mov push ss (bad) and add sbb mov dec scas and out fstl and adc push jle sbb shll push std rclb cltd mov xchg pop (bad) jp push andb in stos aaa arpl push push push push push call add ret lret aas orl xchg sub push int adc adc into insl sbb pop call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret lret out add mov pop sub nop fidiv xchg lcall ret cmc cmp aas xchg sbb push mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp lret out shr push lahf jge outsb js xlat cs pop aas and ss scas call test adc imul add mov and pop sub mov xchg popf mov xchg cmc les mov mov cmp xchg sbb inc call push fiadd aad jb or add out ja mov setno popa into shl cmp inc scas inc es pop mov mov in bound (bad) lret cmp cmpl sub js push mov movsl rorl add adc movsl (bad) rcl (bad) ret pushf push fmul out clc jns adc paddsb and add fistpll test cltd and pop int sub imul fstpt jno or popa fimull cmp cwtl inc adc dec jmp out (bad) jbe int lret push mov xchg adc add in mov cmp nop sub fcoml pop push jl xchg sub adc mov (bad) xor mov jbe cmp test and in out push (bad) dec mov mov or pop mov inc imul xchg adcl in sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp lret out (bad) je mov sbb xor shlb sub mov call scas repz add mov mov sub lcall iret cmpsb cli dec sbb add out mull push scas cli stos mov cmpl ljmp mov xchg loope rorb mov inc xchg and in and mov push mov cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret ret push cltd test leave int3 test cmpsl movsb (bad) mov lds push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret lret out add movsb jg push cmpsl (bad) mov lds clc sbb pop mov fdivl (bad) or or mov aam jo cs call jae dec iret mov cmpsb andl cmp mov xor stos rcrl mov popa and and add mov aas xchg insb lret jbe das je into adc loop push mov inc mov push or dec mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret lret out fiaddl xor arpl out movsl xchg inc je xor ds (bad) fadds xor fisttp xor out jno xor das mov push mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret lret out flds dec mov popf lret lds cmp sub ds stos cli mov push dec xlat xchg jae push mov adc mov push mov push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret lret out add mov sub call sbb push ret outsb jle out push push push sbb sahf sub out xchg push fisttpl push mov mov xchg mov lahf cmp mov rorl cmc in xchg mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc jmp cmp idiv fmul pop out pop sub int3 mov jmp or add addb pop stos push or add insb dec popf movzwl sub je sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret enter hlt sub (bad) nop mov ds loop test aad call icebp push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret (bad) es inc add popf sti sub adc xchg mov adc movsl scas sub push jne jmp jnp mov jns sub inc sub mov (bad) inc addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret jbe dec ds lea mul dec lods pushf out jp (bad) xor (bad) aam dec fld sub ret ficompl xchg xor sbb sub dec xchg outsl pop cmp outsb fcoms mov add les loope out testb repz stos fs jmp mov in add outsl and jne sub repz mov lret jb jl nop imul out push push sub push inc lods in arpl out imul ror jnp mov mov cld jo xchg push add push out pop jmp ret stos test popa stc dec jmp in sbb xchg xor add jb pop lods xchg fimull pop and xchg scas mov push lret stos jae out push sbb mov andb (bad) sbb lcall xchg jle push clc and push mov sbb sub sbb mov ja mov rcl push arpl pusha inc fnstenv sbb push jge,pn mov leave inc and je ja xor adc (bad) dec dec aad pop neg (bad) ss add out call push es ss mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret lret out add xor outsl (bad) mov add mov cmp sub mov out or shr push push mov mov lcall insb sub dec fdivs pop fdivrs jo jne jnp xchg add ss cmp add xor in add cmp cmpsl stos jo cli dec pop inc mov mov orl out adc imul push mov notl fildl sbbl mov mov push mov push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret sub adc xor lock (bad) push mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret ret stc cmpsb jl jl jge iret testb mov mov mov add mov jmp xchg mov mov or pop push push ficom dec popf mov push mov mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret lret out add movsb dec add mov and push pusha pop lret ss (bad) add inc jg inc rol jnp mov sub out xchg cwtl or rcrl or dec (bad) mov mov sbb mov inc in jecxz out pop int push shlb dec cmp push lret or pusha outsb cli sbb mov mov xchg fisubl scas push rol das adc lds push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret lret out add sti inc inc jmp pop loop xor jno (bad) mov or out fwait pop adc xor push sub adc popa hlt fstpt stos xchg sub pushf dec (bad) mov mov dec inc cltd mov shrb sbb inc mov mov inc lea lea cli loop or inc mov mov cmp iret fadd rcrl xchg adc or mov jae add adc inc cmpsb inc inc jnp fcoms adc mov cwtl repnz sbb out xor pop or loop icebp data16 insb pop nop out mov cmc cmp nop jno push push repnz sbb push mov xchg dec int aad mov jge idiv scas repnz dec out push dec sbb pop pushf inc mov (bad) push arpl adc and pusha dec aad push insl sbb outsl dec nop pop push call in sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret lret out push jl mov in adc xor inc in mov mov out xchg (bad) jl call in pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret lret out and movsb fidiv jo nop arpl fiaddl jb int3 mov mov loop sub add inc and lods mov pusha jmp ss push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret lret out inc cmp jo in pop insb in xchg addr16 mov in pop mov xor fisttp jno cmp or pop sub ficom scas insb pop pop shrl sub and jnp outsl outsl push in inc or pop test sbb lret mov es sub test cmp aad dec jg mov rcr xchg xor or push js lcall jecxz aas popa std push mov mov rolb mov push mov sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret lret out add mov adc in adc ret popa in xor icebp repz push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret lret out (bad) inc insl adc and stos sbb je pop xor xchg aaa out cs rolb mov es push lcall add pop xchg cmc aad data16 packssdw stc test imul dec movlps inc jmp stos mov (bad) pop mov mov idivb mov ret in sbb ret inc sbb jmp mov lds or mov mov mov cmpb ja addr16 sti int (bad) xchg push adc sub mov flds movsl data16 jnp mov scas sub movb or das mov test cmp movsb mov outsl and inc add iret test adc iret test adc iret test adc iret test adc iret test mov mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret lret out shr enter mov sub and cld adc loope fistpl mov rolb lahf or fsubrs addr16 fucomp lods inc andb adc ljmp repz mov pop je jecxz sbb xchg loope sub sahf pop int3 ret push les sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret lret out (bad) dec and cmp leave insl jecxz (bad) cld es cmp repz int3 (bad) xor sbb shrb mov push fistpl js dec sbb bnd cmpsl mov cmp arpl cmp mov (bad) dec nop pop (bad) in mov mov das stc and cmp jnp mov push mov mov mov movzbl push call mov movb mov mov pushl pushl call pop ret lret sbb arpl pop (bad) inc sub mov dec adc jae es cmpsl imull mov stos inc jge xor ja test pop out pusha jmp and rorl xchg cmpsl out divl js inc popa adc mov dec je stos scas shr leave dec addb pop (bad) out popf daa jl ljmp cmc mov cwtl pusha ret sbb dec in xchg js and dec icebp and cmp dec mov inc (bad) aas mov out rcrl pusha or and lahf xchg xor iret mov cmpl pop data16 xchg pushl push insb cmpsb lcall fildl adc mov add push jmp add dec or out mov pushf cmpsl loope nop mov push mov mov sbb jmp iret cmpsl push mov xor jl rclb dec sti dec jns push push iret (bad) cmpb je mov ret push push push push push call int3 (bad) mov dec fstpl push test xor dec inc push int and mov orb push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret lret out shr mov sub (bad) divl jmp outsl mov or mov jle inc jb mov and push mov inc cmp sbb jo mov adc ljmp inc std jle ficoml cmp test mov lret pop mov mov das fadds in and int test insb push pop jo mov out lods push jecxz push lods cmp ret notb cmp jns fs push add cmpsb inc adc fdivs xor in or nop sbb cmpsl aad ret push jmp lret loop adc rcrl fsubrp mov scas mov adc bound sub push inc (bad) divb mov mov push or ror push xchg mov sbb out adc jnp gs dec aam sub or inc cmp movsb ljmp cwtl leave pushf stos pop jl nop cmpsb pop arpl in loope call es cld aas xchg inc dec mov xor jno mov add aam xchg lret fidiv ds and xor adc dec and cs push inc fcomip fwait pop or lret rolb jge mov pop xor jne scas test mov add jb lcall xor enter dec cmp imul inc in js pop mov in sbb jmp mov fwait jno jns fs cmp movsl and icebp les inc dec and stos jmp jae (bad) mov or xchg dec imul inc mov scas (bad) xlat pop lods cs xor into lahf repz pop arpl jne popf arpl in cmp (bad) ret int3 pop xchg mov cmpsl push mov jmp arpl cli (bad) loop gs out sti inc dec sti aad add pop lock and movsl lahf imul cmp cltd test adc fstpt push sbb loop lock cmp aam fidivr stc icebp incl jae (bad) mov loope test adc ljmp sbb and je cmp jmp (bad) xadd cmpsl ss inc scas enter mov aas inc or scas fimul movsl pop outsb or imul xorl (bad) loopne cmpsb cmc cld sbb push lock cmp out lret inc mov add (bad) pop cli andl aam test inc xor sub pop inc leave cmp xchg pop and test push sti xchg pop (bad) in fisubrl add ret dec aam inc fstps mov fwait repnz js repnz dec stos push into outsb cwtl pop cld xchg mov sub cmp rcll shlb shrl mov or sbb xor mov or lret das lret stc mov push sub and add mov loope jo and jp or push aas push xorl outsl xchg movsl jmp mov push icebp push sahf test mov add add mov repnz pop scas cmp popf nop incb or shll bound lret decl xor cmpsb lcall fcompl inc add inc adc and push cmp cmovae addl pop inc cmp js inc decl test push rcll aas jb dec cmc clc ss mov jg xchg and push mov dec or xchg xchg xchg loopne pop (bad) or pop xchg sub cmp es shrl and popf jmp clc fcmovne mov mov mov jae pop arpl pop js cli mov sbb adc mov mov mov outsb rcrl dec mov js int sbb fsts pop inc shl cmp mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret lret out add ss sub jg jmp sti adc outsb call lods fisubr pop out push (bad) daa xor cld cltd bnd pop shr sub scas ret mov jnp icebp or cmp stos cmp fidiv das in xor nop in nop fsts test aaa inc pusha jp in dec jne int3 cmp push mov mov scas dec int3 loope rclb inc push inc and shrb inc xor jge mov call fnstcw in pop cltd in push pop cmp repnz in (bad) mov ret add enter push mov pop cmpsb lcall and and sbb sub add out arpl push and push cmp addr16 mov jne data16 test fcomps dec movsb or adc ljmp or sbb or (bad) repnz outsl je pop jmp mov xor mov xchg cli std lret aad sbb lock fstps dec loop add inc cs gs cmp mov test pop xorl test int jl lret adc test scas scas fadd mov in sub fisubrl or fiadd rorl int3 cmp lods pop addl or push icebp jg add dec and stos rcrb fisub pop sub ljmp (bad) stc add js cmp lret sub inc cmc add pop jge and and pop (bad) pop and mov jmp push mov daa push jo fiadd insl mov mov push cmpsb sbb xchg or jmp mov push jmp mov mov sti xchg stc outsl sub ja lods jo add mov inc xor lods es lea inc stos (bad) imull aad mov dec or stc push pushf mov es scas dec fidivl add mull mov inc imul pushf mov mov mov dec or in js pop fisttpl rcl insb outsb add lods nop xor fidivr and mulb add sbb lcall cli pop daa sbb test loopne fldcw popa inc or (bad) or adcl fmuls cmp lret sub and sub xchg xchg add cld test out add mov insl jo leave sbb jmp mov cmpsb adc pop mov xchg std insl test lds les jno in sbb call xchg in push cmp dec jp stos mov imul aas xlat fidiv mov jp cld push fidiv int3 adcl jo outsl loope jmp gs negl mov ljmp in mov (bad) clc pop out stc cmp lods pusha cmp mov aad add xchg xor movsb loop bound add std fwait mov (bad) divl mov inc push jne mov and fs lods adc js mov pop mov fisubl adc add lahf xor (bad) mov mov push xchg aas or popf and mov subl testl lea jb or adc ds sub out jb ffree sub in out addl (bad) int3 gs add lods inc xor nop adc jp ss cmp sti inc cmpsl dec (bad) bound inc push or insb jle dec insb pop pop push jl xchg add cmp pop pop les ds fsubp cmp push inc push mov mov xor jmp scas pop mov sbb imul cmc jg rorl mov inc jbe lods or sub mov dec cmp insl or mov pop subl jne mov xor out mov mov in push lods adc les in lret out out jg repz sbb orl pop or sbb fdivl ret fcmovnu leave loope xor icebp std dec cld sbb lahf sbb fstps sub adc sbb dec outsb adc dec in push inc and xchg gs aam imul fchs addl mov mov adcl push mov or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret enter ja mov ds push sbb inc in in iret fildll cmp pop and ret fild lds mov pushf in inc lods jecxz gs sub mov dec jge jbe sub xchg inc xchg rcrb cmp daa pop clc shl mov adc inc es mov test js cmp jle cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret iret xchg rcrb push sub or sti push (bad) cs push lock cltd push (bad) sbb cmp sub mov call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret lret out (bad) rcrb es xchg mov jb ss cld test mov lods icebp repnz mov push push mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret lret out (bad) repz push lock ror loopne out (bad) and xchg fcmovne (bad) mov cmpl dec inc (bad) push and jg dec mov aad bound das call add inc std sbb loopne imul outsb mov aaa push xor std mov push mov addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret ret stc cmpsb jl int jge iret testb mov and in repz mov mov cmp jecxz dec and sub lods gs cwtl push test bound es push mov push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret lret out push jl xor mov xor pop mov call in pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret lret out fstps sti pop movsl mov inc mov and cmp adc or testl jmp cwtl roll xor push sbb xor or movd pop add adc nop lahf jno mov push mov mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret lret out shr ror xchg lds push (bad) fadd aam loopne cmp pop sub add in xchg out mov notl mov fcoml das fsts dec int3 icebp cli dec pop stos mov call push (bad) adc mov mov insl vpunpckhqdq das inc int sbb add pop push jo jns and add imul mov cmp cli sbb mov ret dec push js mov lods aas nop arpl insb repnz cmp stos xchg fidivl mov in adc xchg jle mov xchg scas mov lret cld mov mov sub into mov mov (bad) mov pop pop (bad) imul xor testb sbb jae divb aaa out push push fwait fs push push call xor mov test setne test jne call movl call xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp lret out imul jmp inc loope call in mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp lret out cli neg jno,pn pop les mov call in mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret lret out imul push bnd xor and push test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret mov inc xor sub inc shrl in mov cltd cmpsb rclb lret or add into jne rep out or gs add jecxz test int inc test dec loop pop std push in mov push mov push call mov push mov call pop mov call mov pop pop ret scas push dec insb mov aaa popa cltd test lock call icebp call test jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret lret out push jl mov nop adc sub fstpt mov push mov push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret lret out (bad) or adc pop int in or pop sbb repz push mov mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret lret out add xlat mov hlt push roll jb add add cwtl mov out push jne fdivl cmpsl sub jecxz and rcl lret add inc ds test mov arpl adc and cs jecxz mov lods int sbb shrb mov pop ret cmpl pop inc clc jne int call in mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret lret out lods ffreep mov (bad) adc notb arpl pop cltd je jmp adc jmp mov inc and daa push insb addr16 and fimul out imul aas xchg or adc lea in subl inc mov mov inc pop sbb cmovb mov cmp into fs shrb adc xlat mov dec int xor mov mov arpl xchg add int3 mov jp pop lret in sbb in sbbb (bad) xchg (bad) pop push cmp pop insl je pusha mov sbb (bad) jae push push sub inc cmpsb les lock xchg push push enter mov mov nop imul cmp (bad) cmp scas call ljmp and cli mov pushf pop fnstsw jae data16 test sub int3 jecxz sbb sbb push scas adc mov (bad) decl (bad) jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret lret out shr lods add incl clc imull sub insl idivl ss in push enter loopne aaa ss sbb push inc dec and push ljmp mov les daa lret or pop xor xor pusha adc insb leave loope out in cs dec add xchg int fs int3 mov jmp mov out call jge add and xchg cmp insb fwait inc (bad) adc sbb movsb push arpl out sarl pop mov push or sahf mov dec sbb xchg dec in (bad) mov cmp pop adc xchg mov pop leave adc and ds dec sbb mov pop ss mov push add scas dec jnp jle mull xchg pop data16 cmp adc fprem xchg pushf fldt adc js ds mov xor aaa test mov enter inc inc mov sbb clc lcall cmpb (bad) out cmpl mov sbb cmp push mov out jg iret sub mov push scas xor push ds pushf xor mov jo mov inc mov fwait test cmp stc pusha mov int divl mov lahf pop int3 mov decl mov sub outsb push shrl in mov icebp fdivr and in (bad) xor push xchg dec push ljmp sub mov test cltd int sti pop xchg scas arpl ds xchg or dec scas cmp test rdmsr and out rorl add ret push mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 lret out push dec popa fwait clc ljmp mov in mov clc inc pop mov or fnstsw or ss push popa push add add jo jne out push cmp pop and loopne xor lret sbb jmp lret pop aas int3 pusha popl jb inc (bad) into push push mov sbb push insb inc mov pop (bad) in lods dec dec push dec loopne fs es push mov push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret lret out add lcall ss lcall mov mov ja jg shl or mov fisttp mov and imul test push push call andl push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret lret out and pop es pop pop movsb arpl or sbb scas adc stos out add jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret lret out push dec popa fwait cld loop int push int3 and cmp lock and ss xor bound or push mov mov in out cmp in lea imul cmp imul mov push mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret ret xchg mull push and sub rorb push scas clc adc xor jmp xchg xor adc dec mov pop (bad) fdivrl sbb cmpsb (bad) rcll pop imul add ss test sbb je cld jmp shll mov dec out cmovg out inc mov scas lret pop iret outsb hlt sarb (bad) gs mov in mov jbe xor mov cmp aas push adc sub lea inc aas push pop adcb push bound cmpsl jns jne aad jns arpl adc pushf outsb or outsl cs arpl pop sarl scas out lods add shrl test jns pushf dec cmp sub ds xchg or or lock cmp inc sub jle add adc rcr sbb daa int sub stc data16 xchg or loop out mov test cltd test mov cmp mov into loop inc cmpsb cltd mov call punpcklwd push aam vpmullw pop testb cs jo mov arpl adc and lods cmp cmp dec xor inc adc mov or repz test inc nop mov jmp in mov je xor lret lds out push adcb inc mov mov test popf in adc mov sub (bad) (bad) dec daa jp bound icebp (bad) or test mov xor daa push push pop in pop mov movsb push cmp call in push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret lret out shr enter jb sub sbb adc ja (bad) in xchg xchg aaa orb clc mov cwtl sbb (bad) fisubr pop push fildl outsl std xchg add ds or cmp pop mov push mov mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret lret out add hlt mov loop aam fistpll or xchg push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret das adc jb mov push dec fstpt jle (bad) sti (bad) pushl ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret lret out shr int3 int3 testb pop pop mov int mov leave pop sbb jo jmp (bad) xor mulb dec xor dec nop (bad) mov lret push jnp ds push inc or notb dec mov addr16 stos dec cmp inc jmp xchg cmp inc mov cmpsb mov (bad) dec jb mov (bad) or dec sub enter mov sub cmc mov data16 and mov imul xchg jle jmp mov loope (bad) addr16 cli xchg mov repnz cmp push sub cli jmp imul cwtl rorb ror (bad) sbb xchg test daa fiadd xchg icebp push jl and cld (bad) mov lds lea xor lock mov iret cmc std iret sbb push and xor jbe outsb xchg mov stos pop inc adc sub add sub jb int jns sbb cwtl lcall sbb add scas out xor js adc mov aaa jns outsb dec arpl mov stos arpl inc add cmp xor mov push sti dec adc out jmp fwait or inc leave das mov jbe push sub andl testb mov pop shr lahf inc scas (bad) adc test mov adc jne push or aam xchg push ror out in mov sub mov (bad) pop lock sahf rclb sbb (bad) and (bad) mov xchg add push xchg icebp or push and in mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret lret out fstps sbbl cmc xor insb les sub fidivrl push (bad) dec leave pop enter jecxz jg dec push or mov ja aaa (bad) out jecxz adc and cmc add push loop repnz jb fiadd adc mov mov shr test push mov mov push add push int mov les pop dec inc popa ret loope pop xchg insl mov xor dec (bad) test mov mov jg or adc push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret lret out push dec popa fwait clc ljmp mov sar adc fist pop sbb or pop mov xchg int pop sub sbb psubd add and mov repnz rcrl stos mov pop mov inc jmp lods sbb cltd mov test addl mov cs xchg add sub fcmovnbe push xor push test aas xchg adc out adc repz dec add mov push call mov mov lea push push call mov pop pop add mov pop ret lret out shr xchg add incl clc imull xor mov pop xchg out xchg and mov (bad) mov mov push in fstpl fcompl lret or mov xchg fnop insb test mov outsl xchg ss add inc dec mov cmp pop hlt cmc cmp outsb in xor mov mov jns push jns aas and adc int stos xchg int3 imul scas (bad) aas es (bad) flds aas and or cmp jae lret aaa jmp enter sti push xchg das mov popa lret cld mov mov ffree pop pop fisubl fidivl int3 sub inc in adc loopne add shl pop pop fmul mov cli aam stc pushl mov jo mov fwait out jns pop cli sarl out xchg test sub sbb xchg dec push cmp ret or xchg (bad) push les pop stos rcrl jne fstp hlt or jp and bnd leave inc lret pop add mov cmp dec mov popf xchg icebp sbb dec push (bad) fildll int test cwtl dec mov cli fdivrl loop dec fsubs ds xchg out jo mov push sbb rolb adc pop pusha orl pop push jl scas (bad) mov dec cmc (bad) push cld jmp or push fistpl mov (bad) sbb and insb pop xor scas mov mov mov cltd out arpl lret mov push xor test xchg in sub iret loope outsl dec jbe sbb sbb je cmp ljmp daa lock scas mov pop sub rorb push (bad) dec and pop inc sbb cld xchg dec andb pop cmc adc mov xor inc into inc loopne (bad) (bad) outsb pop sahf stos pop cmpsl pop cwtl imul call cmp push xchg jo adc and cs add packsswb movsb sahf mov insl sub add push push push sbb insb jp (bad) xlat adc notl shrb mov jne (bad) add xchg mov int3 dec rorl es sti lahf sub sti mov lret pop ret sbb dec fisub add xchg clc lods std movsb test stc xchg adc fnstenv and loop inc call das fldcw out mov mov inc arpl xor mov push dec dec nop pop test mov and pop (bad) inc push inc push xor popa frstor pop iret dec mov adc lds mov rclb bound and mov add xchg pop mov add adc mov cld cmp (bad) ss cmp jb stos add fsubrs mov push mov push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 sub cmpsb ret hlt or cmpsl nop fisubl push (bad) pushf inc fcmovnb enter fstpt fwait jmp mov xor js push das arpl push mov mov cwtl cmp pop xor outsl sbbl test ror xchg pop out adc data16 icebp push hlt push inc cltd jmp into or jmp mov cmp nop mov xor sbb or pop xor test fcmovu bound addl mov add sti aam push and loop mov add shll mov std sbb mov mov lret mov (bad) test push aaa jge sub jbe loopne out and jnp jecxz addr16 popa bound sarb addr16 addr16 out call lock psubsw push (bad) aaa ror rcpps jbe int aaa and push jl mull push cmpsl adc sub popa int3 pop inc xchg fcoml imul rcrl imul shrb in dec repnz mov out inc or add mov fimull pop dec outsl xchg mov push mov mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret lret out (bad) je mov pushf xchg cmpsl in lret jle mov clc inc lcall jge push rcrl sub jmp cmp dec subl jns lods mov push mov push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret enter lea fsubl lods push push (bad) push mov cmp sub xor push ret in xchg inc push xor lods daa pop sub imul les aaa dec cmp out jmp inc xor pop xchg lret lcall fadds push ja les nop xor inc dec (bad) add cmp push negb popf jge ret nop add push je lods mov add dec out fxch sbb jge fldt sahf and (bad) ds and arpl push and pop and pop dec or mov mov lods out cmp mov mov in add and add mov pop sbb fdivr pop or mov push cmp adc out clc imul jae insl push es sub mov xchg loop incl out xchg fdiv ret aam and xor and inc add das iret inc jle (bad) pusha push ficompl into xchg sub pop dec xor dec stc push and xor iret inc dec sahf xchg add dec xor scas mov adc or mov sbb jbe sub mov dec and test das jecxz es push cwtl nop popf xchg ss mov out movb loopne (bad) enter (bad) fldenv (bad) lock xor and cli and mov adc gs cmp fwait jo loop and loope jmp jmp icebp inc lods xchg inc and jo xor mov add sbb push add call in sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret lret out shr enter jb sub sbb adc ja (bad) in add clc mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret lret out push dec popa fwait (bad) bound lahf sahf fcoml xor cmc jg (bad) repnz add or fcompl andl rcrl add mull ds aad adc jo add sub pusha scas add stc mov cmp je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 lret sbb push fdiv ret jo divl popf movsl fisttpll lock fsubl out fidivl or and int3 pop xor dec cmp and nop push ja movsb mov jle mov movsb push lret mov in push popf mov imul loop pop push xor cmp rorl jae mov mov test jge sub add push call mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret lret out shr mov jmp sub (bad) in loopne xor test clc xchg shl jae mov mov or xchg sub add in push mov lahf outsl xchg cli push scas xchg cmp add iret inc or or mov mov decl adc mov cs push popf xor inc rclb adc into les add inc push jns push fist cmp dec sar cmp insb arpl into sarb scas out lods lds inc stos mov jne pop xchg push lock arpl push aad enter mov lods lds jbe int3 aaa aas cmpsb mov push mov push mov mov cmp je mov mov test jne call mov pop pop ret lret out push dec popa xchg idiv add jle xor addr16 add or outsl inc push ret in or xchg lcall lods out rol or and (bad) incl dec or mov add movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret lret out shr ror pop pop int3 test les mov in jns cmp cmc stc cmp jge inc aaa xchg or lahf fdivp jne adc icebp (bad) cmpsb adc sub roll adc rcrb gs inc sbb mov in rorl hlt fs mov add cmpsb mov ret xchg adc clc aam xorl movsl or cltd scas xor pop push push fdivs sub cltd dec inc out js in (bad) (bad) (bad) mov mov sub inc es inc scas das xor enter add lret jne call jmpw clc fsts jp ds int ret mov scas clc lcall pop leave pop sbb add lahf adc rorb divb mov xor out mov imul in sbb xchg mov pop loopne je into popa xor xchg push xor sbb js or jmp insl push push lcall dec and jo mov test inc and sti sbb cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 lret out shr or jge outsb js xlat cs pop aas and add inc adc enter test jecxz xor fldcw fsts rcll cmc pop inc and dec arpl cmpsl xchg test cmp insb repz lahf push mov inc jmp call mov or xchg pop pop inc mov jle fs xor inc xchg stos aaa addl (bad) and sbb push (bad) push mov dec (bad) ds xchg mov stc mov inc jl ljmp rorl out add data16 dec inc fucomip imul or loope lods xchg pop int in adc sub inc imul adc sub setle lcall imul clc ret mov sti or push fbstp sub das dec nop movsb push xlat or sbb dec rcl iret pop or and jae notb lcall inc xchg test pop icebp imul outsl add nop xchg inc outsb ss jno movsl xor xchg call xor icebp fisttpl aam mov jl dec shrl jne push orb sbb xor or sub sbb dec pop push iret and movsb mov ds and pop mov mov sub popf das iret psrlw cmp cmp add jne add sbb adc xchg mov pop xchg insb aas fdivrl out aaa push inc es push inc mov cmpsb jo loop xor out push jb jb mov push sub jmp xor lock jo sbb xor sti xchg or xchg lds pop jb psrlq mov call insb cmpsb jo jo std jp xchg push jbe iret mov popa aas xchg jecxz fwait ljmp cld jle popa scas aad push nop mov aad inc imul adc push xor push pop ret or pop dec stc outsb cwtl mov rcrl xor adc mov adc popf jge xchg adc in fnstcw sub fistpl pushf cmp jmp mov sbb or clc idivb test es fistpll ss jo popa call push sub lods aaa cmp mov mov xchg hlt cli fisub sub pusha jo add dec hlt push lcall fwait sub push sbb imul add mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret lret out shr enter jb sub sbb adc ja (bad) in inc xchg aaa orb clc mov xchg sbb push dec shl shrl dec push xchg jbe adc or lcall rcrb push xchg stc aaa inc lret fsubs iret jecxz push (bad) bound add xchg xor clc push sbb js popf and scas xor mov jno xlat add lahf jns neg or mov lock fwait imul cli sub repz shl ja push (bad) faddl jmp xchg cmp mov loope inc (bad) push push xor add adc push call in mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret lret out add lcall ss adc imul cmp mov mov jp lcall add or insb jmp test lret adc xchg in adc cmpl icebp dec mov push mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret lret out add lcall ss add imul cmp mov mov jp lcall add xchg sbb fdivrp jecxz mov dec scas test lds iret push movsb sbb in out sbb frstor mov mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret lret out add lcall ss pushf fldcw fsubs cmp sbb addr16 mov jns addb sub sbb fiadd mov lret mov rclb push mov inc mov je aam enter mov mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret in jno mov pop orl mov js adc jo jp inc sarb mov pusha push bound shlb mov dec sbb icebp (bad) jge lds sbb jnp jl aam cmp jge pop xchg sbb sub test cli insl jmp jb inc scas pop outsb mov sub jge xor jl fisttpll adc nop cmp xor mov add mov xor ljmp dec sub lea mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret lret out shr ror inc repz or sub (bad) cld outsl addl or dec push push pop mov hlt or fisubr mov adc jg jno push xchg outsl out loope fwait pusha pop out out call dec rcl sub dec sub mov cltd mov xchg loope mov les ja inc and add inc ficoml mov icebp mov mov sub dec mov xchg or adc out and mov dec dec pop dec mov pop dec outsb inc or rcrl push cld std iret jmp or data16 pop push imul inc cli aam and sbbb dec das mov dec cwtl in je repnz lea cmpsl outsl ficompl pop cs faddl (bad) cmc cmp xor inc jmp mov jmp sbb out push xchg arpl adc mov or mov push mov push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret lret out shr int3 leave sub cld sbb mov pop std mov mov das fild jmp aaa aaa sub stc dec dec sbb push xchg and fcmovne add inc mov add icebp mov add in sarb xor fmull icebp pop clc popa and lock mov push scas test inc (bad) imulb movsl mov xor insl sti leave (bad) push sti loopne repz sub pop sbb cs jnp jecxz js jo es mov jno imul shrl lea push aam jge xchg mov mov test xchg sbb push xlat xchg mov mov aad (bad) imul mov push icebp mov sub daa xchg xchg push mov add (bad) mov mov pop fstps xor xchg cmp leave es vpcomb jmp jmp je or (bad) movsl jns xchg cmp ret das dec xchg and xchg nop mov das sbb dec mov add and and push mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret lret aas sbb add xchg dec mov vscalefps mov data16 push nop xor iret ss push call and ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret lret out add sub adc mov mov push mov pushl mov call pushl mov call pushl mov call pushl mov call pop ret scas mov aaa aam xlat pushf push mov ret xchg es pop inc or lea pop lahf mov jbe andl or sarl fcoms mov ljmp mov fidivr hlt sti sbb das inc loop jl jns aam (bad) fistp xchg data16 insl jecxz xor mov add cmp xchg push andb outsl push sbb arpl leave or clc in out pusha aad insb xchg in xchg adc jno push in dec mov mov imul or repnz orb push icebp lcall leave add xor xor push or into in je push xchg (bad) cmpsb test jmp adc out add mov in call mov push scas mov cmp cmc pop push jmp pop xor es jle add ds jbe aas adc sub notl mov inc adc and and add cmpl jbe jge aam cmc xchg mov mov dec sbb andb xor test push and dec push push mov hlt fcmovb icebp test div test (bad) ss sarl aaa cmp iret push sarb push insl or pop xor cmp cs pop mov mov inc mov xchg push xchg mov push cmp pop mov push in xchg dec push adc mov leave inc lock mov push mov pusha add mov or push mov mov pop cmove or push cmp jmp dec dec iret arpl and (bad) sti rorl in adc jne lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret das sub jmp fs les (bad) lret pop test mov mov movsb mov inc (bad) mov inc inc sub gs popa push add add and add scas add mov mov es fs mov xor add xor push lcall les sbb lret mov adc adc ss lret cli in call and mov and fsts or jno fwait xchg or cwtl out pop das test not sbbb in jbe add or push mov add sbb pop mov or in or jbe scas ljmp fs mov (bad) scas pop adcl mov push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret lret out shr int3 int3 testb scas popf cmp fucomip (bad) aam or repnz ss out mov not fwait dec and or fcoml das fsts rcll fistpll stos lret div jmp mov mov inc jmp call lcall jge,pt pop inc mov jno (bad) add sbb add out push jns lcall push add cmc xor jge sti cmp test mov andl aas adc mov pop mov (bad) push stos dec xor rcl jnp imul aam dec (bad) fsts lods stos xor arpl pop movsl iret and repz sub sub adc mov mov imul add mov dec pop nop push iret or dec mov (bad) pusha inc xchg js jnp ja jno and mov mov push mov mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret lret out push dec popa fwait clc ljmp (bad) mov scas or insl pushf mov jne call jmp arpl cmc add std cmpsl enter daa sub pushf dec sub add add dec dec adc add add pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret in lahf mov xchg dec (bad) neg jo pushf out xor pop push mov in ficompl push fidiv les pcmpeqd sahf and insb outsb mov xchg mov xchg (bad) into or mov adc inc call mov push mov push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret lret out (bad) inc inc popf sub dec mov xchg jmp mov stos jge mov pop inc inc mov jge pushf and inc add stc outsb jle push ret mov mov iret loop sub cmp cmp jl test mov pop jne xorl fdivs outsl shrl inc aam mov (bad) jne adc rcrl sbb insb shl add adc inc and dec rorb dec sti lods scas xchg jne imul cmp fnstcw sbb leave bound clc or mov ficom mov xor mov mov fstps adc jg xchg icebp push mov sbb add out repz test add sbb decl or shlb cmpsl mov aam insb fcmovu xchg pop fwait notl cs int cltd add cmp imul in push daa cmp pop or mov loopne adc ret pop pop pop mov mov repnz xor push orb jbe stc and jl ss std mov mull jl (bad) pushf sbb jbe movsl xchg xchg dec mov call in push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret lret out or (bad) lret pop cwtl pop jb xor lds repz pop sub xchg test rcrb (bad) (bad) out jno pushf pop rolb sub sbb jle sahf lret in push sarl int mov inc fbstp mov adc add stos push pushf xchg adc cmp dec or mov fwait (bad) (bad) add loop (bad) dec dec dec incl push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret lret out cli lret dec cltd mul jo fsub repnz xor and scas cmc lret mov inc (bad) pop xorl pop (bad) sarl sti sub push pushf fsts push add xchg pop add mov movsb push lret mov ljmp je jmp test xor xor jge inc lcall outsb js dec push mov mov daa dec je aaa jle lahf mov in ja cld movsb movsb cmp ret jle mov call lods sub jmp movsb stc mov cmp inc mov push cmpsb sbb (bad) imul in mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret lret out add fwait sub lret test xor cmp and insl loopne adc pop pop mov lods sbb (bad) mov dec lea daa pop mov and mov pop cld jae and test test dec addr16 mov dec and lods stc xor xchg push cmp pop test sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret lret out shr mov clc imull xor mov pop into (bad) fs icebp jmp or dec jle pop sub mov inc xlat daa mov pop jb jmp repz (bad) sub and lret (bad) iret push inc mov xchg repnz aas ret (bad) ja push fcompl in mov in lahf xchg (bad) in xchg dec shlb out je sbb dec loopne addr16 cltd dec inc out js in sbb lret rolb repz pusha into mov cmp dec pop je sbb sbb out xchg std mov ja loope stos push mov sub adc aad pop frstor adcl (bad) sbb sbb imul out aad jle xor (bad) jg es adcl mov xchg test fstp mov mov cmp inc xchg mov pop mov push pop push iret sub push test ljmp push ficompl lret cli jae in fsubl mov dec in fidivrl or dec jb jo pop mov (bad) add pop and mov mov and sahf add test fnop into arpl mov add icebp cltd js mov jmp mov mov cmp and push pushf or rcr mov aaa les jno mov inc mov sbb and es sub mov cmp popf notl scas pop popa lds ror adc mov scas mov aam adc cmc add mov iret test or ja (bad) mov push mov mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret lret out add lcall ss xorl mov dec out pop xor mov jno mov iret dec icebp data16 add pushf jne aas ret mov add push pop or out imul mov fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret lret out add cmpsl cmpsb (bad) cld (bad) fsts add mov push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret lret out shr les jmp sub xor fldt lea out rclb repnz add push xchg nop cwtl cmc sbbl les daa js adc icebp ja adc mov fiaddl and int3 mov mov xchg in sub popf mull xor inc (bad) out pop lods add and shrl push cmc imul pop and xor mov stc popa push push mov out into push and dec cmp push pop adc xchg pop cmp pop into icebp shl mov scas adc xor test clc outsl cli dec push dec sbbl and adcl (bad) mov pop movsl sbb lods jmp mov mov cmpsl repz (bad) jb call in sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret sub push divl pop dec sub jmpw test test push dec jne mov out push mov sub and fxch fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop adcl cmc lret lods subl jo (bad) (bad) (bad) xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp mov sub movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp mov fstp fstp fldz test je fchs ret fstp fstp fld1 ret mov push sbb cmp sbb push int aas cmc sbb xor xchg aaa mov lret and mov fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg adcl lock fstp fstp fldt or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret and inc dec cmp rorl test and cmp and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret lret out add movsb inc sbb xor dec out pcmpgtd sbb inc push repz pop mov and add ja sbb xchg cli push fwait daa lret or stos in jmp cmp adc ds push repnz fwait jmp sub loop sub cmpsb aas inc cmpsb scas and jge aaa cli (bad) or mov cmpl push fistp push cmpsb inc daa dec push aam lock lret sub mov mov in xchg in push pop clc jo lds fs cltd pop jb jl add (bad) iret cwtl mov insl pop lret popf sti je lds push mov orl imul inc mov lcall mov into shr pop add call psubd lcall mov (bad) or data16 pop pop call mov insb push inc data16 aas mov push xchg inc xchg smsw adc pop jge inc xchg clc inc jo lcall mov mov push mov mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret lret out shr (bad) int3 testb pop mov gs cmp loopne,pn push ret fidivl dec jle fwait pop sub xor nop cmp je xchg fwait (bad) sbb dec mov test out imul xor andl mov xchg dec inc lds mov push imul mov cmpl push (bad) mov and sub inc daa dec out inc mov adc mov outsl bound pcmpgtb push sti mov add xor iret push in xorb or dec sbb add aas pop insl outsl test adc xor mov or out or add lods rdtsc std int3 push sub in cmp and addr16 scas ljmp cmpsl xlat push cmp xor jg adc push jnp call mov dec fildll sbb int add movsb push jmp sarb je jle cwtl sub adc mov pop insb (bad) rorl aam pop cmp mov jbe push fcoms sub xor aad popa into int3 lahf and (bad) in int3 sbb jbe outsb pushf ds movsb cmp dec sub jge cmp jge xchg mov js (bad) (bad) data16 inc or mov enter andb push xchg stc add mov sub push cld jae jo xchg mov sbb and mov xchg in push xchg cmp dec aas lds xor in or jge jne mov repz inc aam mov mov add daa int jle jne movsb imul or inc cmp jle xchg lret stos adc scas inc push xchg and stos clc pop dec movsl lods dec fwait out xlat insl and or lahf jno and outsb fidivr dec cmp arpl dec out mov mov addr16 loopne mov adc shll mov mov shrd das rcrl (bad) or cmp mov add addr16 mov sub jnp mov ss mov mov cwtl cmc ret in cli stmxcsr or test mov cmp xor addr16 in lock in add (bad) sub jl into lods xchg pop pusha testb out sub icebp sub lret (bad) jmp xlat cli aad jae inc daa ljmp and xchg test fildl les mov pop push (bad) in sub loope xor roll or or adcb stos lcall mov pop test dec out dec xor sub push sti cmpsl (bad) cmp push das arpl test jl ljmp sbb ljmp lock add push gs stc out xchg ljmp hlt out rolb adc add push lret jl loop sbb and jne jne call in push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret lret out shr (bad) int3 testb inc mov gs jmp push push in and jecxz push fistl incl adc cltd popa (bad) sbb xlat iret sahf in dec lea andl mov adc inc jmp std cs jmp ret cld addr16 xor add outsl mov mov xchg ret in and outsl push test aam lds aad out jle cltd imul and daa ret cmc push popf lods jmp jmp movsb (bad) aas call jo xchg sbb push pop adc push aad lret bound cmpsb insl jnp lds (bad) pushf out (bad) test cpuid mov sbb adc sarl xchg (bad) mov ret in mov shll sbb leave dec out add ljmp dec fs mov out hlt inc jp lods sub pop cmp (bad) mov mov xchg mov call (bad) lock dec cmc lahf and mov xor xor and lods jge addb xor dec push xchg aas in sbb icebp iret mov or mov cwtl xor xchg push loopne cs or pop mov mov sbb out pushl int notb out mov inc movsb cmpsl dec sarl inc aaa inc fwait push cmp adc clc mov cmp xchg in mov mov dec pop cmpsb adc mov leave aaa push dec lds scas push jne lret mov loopne fcompl push repnz out mov stos test out push mov mov data16 pop jo fwait xchg daa sahf cmpsl jl and lods stos or imul (bad) out pop sub mov call sub subb scas add cmc stos xor mov clc and jo push jle jg lock iret out lock call in sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret lret out shr push mov popf xlat cs pop aas and mov mov (bad) add lcall andl aas ficom dec push arpl or adc sbb aaa popa adc insb lret cmpsb push movb ss jns mov aam ret cmpl mov pop mov fwait popa ret push lods pop sbb ror cmp es rclb daa sahf pushf mov jbe xor pop xchg jge shl jg xchg xor and movsb in inc sbb xor movsl data16 insb imul ret mov test and and and cmc cmpsl je sbb xchg mov cmc pushf xor sbb insb ljmp add in jg pop inc scas mov imul add test call fistp (bad) mov test int3 loop fwait xor icebp jae imul xlat lock inc mov in adc jb dec shl jo mov sub dec and mov dec mov mov xchg out movsl mov xchg in (bad) aad push mov push scas mov inc push sbb xor into and push in nop daa mov out xchg xor aaa sahf cs push or push js mov sahf lds adc jae sbb cmp in mov mov cltd push out pop xchg dec (bad) out lcall lcall mov mov fwait pop (bad) in out jno in mov fs stos push mov (bad) xchg (bad) decl and fidivr andl out cmp bound adc out jno push push inc in repz roll out clc aas pop aaa mov sub in (bad) bnd mov push jno,pt pop loop add mov push popf jno dec adc xor (bad) in xchg (bad) sbbl dec aam xor add add mov mov cwtl pop dec sub xchg scas rclb cwtl punpckldq dec fsubl jno rorl sub pop fimull outsl (bad) add push cmp mov ret push xchg fdivl jno gs adc rcrb (bad) enter aaa cmp jae clc jl mov xchg xchg sahf scas subl jo jmp fistp mov lock (bad) mov sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 lret out add fwait sub adcl jne cmp ja adc xor and add dec adc fwait dec into push mov or sub in icebp pop pop and out jge je lds int3 (bad) into test dec xchg or imul outsl fwait cmp fldl hlt arpl mov iret addr16 ret roll mov mov push dec lock mov arpl cmp les rcrb pop add or sbb std fcoml lcall fldl popa fwait cli xor dec sbb jp lea (bad) mov (bad) jbe hlt mov push cltd sbb add mov mov sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret lret out add fwait sub adcl jne cmp ja adc xor and add dec adc fwait dec into push mov or sub in icebp pop pop and out jge je lds int3 (bad) into test dec xchg or imul outsl fwait cmp fldl hlt arpl mov iret addr16 ret roll mov mov push dec lock mov arpl ss pushf loopne mov test stos repnz jne mov cli lds icebp jl lods decb insb lret stos das push cmp iret or pushf and icebp push movb (bad) add mov push mov mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp lret out shr les jmp sub and daa xor pop (bad) mov jle push jge push subl pop fdivs cwtl les xchg es sub cwtl popa push ret mov fbld lret or rolb xchg mov enter pop repz push (bad) xor inc icebp dec outsl jge or inc (bad) jae inc fnop sub jge in inc jo nop in test cmp push xlat adc loop mov adc sbb add rolb outsl adc and mov xchg dec add xchg add add xchg pop lret sbb je cmp (bad) sbb pop loop lahf and xchg xor test je cmp inc push push int3 dec jns jg ljmp (bad) xor adc lock and aad xor ss rcrb cmp aad push clc test jne outsl dec sub push mov xor xor mov mov mov shll out adc push and aaa or inc or aaa sarb (bad) mov mov push icebp repz pop sub jge psubusw in repnz mul xor inc clc inc das sub cmpl mov (bad) fisubrl in push das imul mov fisttpll and lea or (bad) or or incb mov inc mov rcr mov and dec in push or daa or and mov loopne mov push mov ret inc cmp xchg sub mov push mov sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret lret out flds adcl pop mov sub mov cmp fistp inc movsb orb lods push mov test pushf fistpl icebp inc test jns lret repnz pop daa out lds pop in inc cltd mov inc jbe lods repz stos data16 mov mov in and mov mov inc gs (bad) mov ret es jns (bad) adc cs dec sub aas mov popl stos mov sub les call in cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret lret out shr jo jge outsb js xlat cs pop aas and xor adc (bad) stos (bad) mov fistpl xor in cmpsl (bad) mov paddd mov sbb (bad) repz les cmpsl decb lds jmp fisttpll fwait (bad) sub aad fmull fbstp and sub inc dec inc jnp push xchg cmp out adc popf mov ljmp scas xor pusha push movsl cmp sbb sub stos ljmp cmp les outsl pusha inc mull jne dec cltd pop lret jns push xchg or jbe cld mov out clc notw shll hlt add sub sbb pop fcomip dec (bad) hlt xchg cmp mov (bad) mov mov (bad) (bad) icebp out test arpl aad into lcall pop (bad) adc adc repz call mov dec in imul jmp int add sbb pop hlt push jae jmp xchg jne mov xor movsb pop dec mov and adcl dec bound jne push pop push push scas daa jg enter (bad) xchg cmp enter out ljmp mov pushl sub ret into lds add dec and dec imul jae lcall cwtl adc negl adc loopew push sbbl fidivrl pop adc lods aaa repz and fcoms mov inc fnstsw xchg outsl rorl dec (bad) stc or mov adc jp jmp out test sar jecxz jno mov movsb std jbe mov cmpsb mov jo mov mov stos xor cltd jle jle (bad) xor push cmp jecxz and mov cld sub fcom xor imul mov (bad) push fisttpll daa cmpsl in mov jle adc insl enter adc das mov lods push pop gs push mov or jns add and fistl and mov gs loopne (bad) ljmp leave sti cs sbb in jo loop rorb out mov xor dec fiaddl mov sub imul and xor mov mov push or sbb adc or test call xor ljmp adc jecxz pop mov cwtl ds xor call or or cltd lds jbe xchg add and mov js pop mov ficoml adc adc aas mov add xchg mov sub sub imul and mov iret (bad) add out jle fs pop test mov and mov stc jle pop (bad) mov loope jae and xchg add andb push push ret pop call ficom adc loopne or lahf rcl stos jp hlt sbb sub pop inc xchg cmpsl cwtl andl (bad) xchg cmp adc push popa xrelease cltd repz pop add sbb cs mov add cli (bad) mov or mov xchg pop insl add push xchg in xchg aad sub jmp shlb dec pushf pop push xor lds shr pop and repnz xchg sarl xor movsb or push or rorl test xor dec sbb mov arpl sub lock xor lahf movsb mov sbb lds mov cltd enter sbb rcl cmp jmp std mov cli cwtl cmc lahf test in dec out lods mov push mov sub jns test or nop mov cli fstps aad imul jg xor sub test add or addr16 dec jbe cwtl pop push stos movsl mov stos aas bound fndisi(8087 rsqrtps mov mov imul xlat sub and cmp cwtl insl and jae imul dec push xchg xchg cltd loop aaa jb andb hlt loop jae (bad) ffree movsl cmp xchg sub scas (bad) xor sahf lret (bad) xchg mov push cwtl mov sarb ret in and xchg leave mov in pop xchg inc sbb jp fistpll or cmp cmp enter pop aas sahf and sub dec add jmp test ds leave jns cld es int push add dec dec not test es aad inc adc cmpsb out pop cmp adc inc push push aam outsb push outsb xlat arpl dec aam mov sahf (bad) and lcall cmp cmpsl or movsb addl pushl imul sbb sbb adc mov in cmpsb push test mov gs xchg xchg add xlat mov test inc lods lea pop adc mov mov jg in call sbb xor (bad) mov push negb inc xor outsl ljmp inc nop fisttp sbb mov adc popa int3 add pop test mov xor xor test imul cmp test jl addr16 xor jno sbb fildll jmp leave nop inc mov cltd (bad) fnstenv orb sub (bad) fsubrl ret xor cs loop pop pop in scas xchg (bad) jbe pushf xor jp bound mov (bad) movsl in pop inc (bad) jp negl lds hlt cmc add mov imul std push test and in jbe pop ret (bad) in pop imul fcoml lret xor fldl dec mov and pusha insb roll (bad) shll adc pop mov out cmc rcrb sub inc pop ja test push jb loop (bad) and jae ret loop mov jle cltd cli xor mov aam popa dec out fxtract arpl and mov js and pop cmp xlat mov incb push out sahf adc outsl pusha aam adc pusha test movsl mov (bad) sub sub imul xor sbb cmpsl test test mov and inc xor mov inc add mov xchg orb mov std push test cmp arpl (bad) mov sub insb cmc fnsave fsubl int sub mov dec daa adc js jnp imul test mov fldcw lcall je imul std (bad) in rcrb adc cmpsl mov in idiv dec sbb sbb outsl mov sub pop call mov fistpl mov pop sbb bound frstor call xor pop inc cmp call repnz nop shrb jno mov lock push ret mov cmp (bad) adc (bad) adc mov pushf je into iret cmpsb jbe push lret dec cmpsl dec sub pop dec cmc ss xchg push out repnz or dec mov je ja (bad) or and sarl sarb outsb push fidivr (bad) jle notb rcrb jbe jnp call xchg jmp (bad) subl test pop insb cwtl dec rorb push cmp xor das pop aad pusha adc sub push insl ss push idivl loop mov out ljmp stos inc pop adc test dec dec push aad stos repnz (bad) jp mov mov sub les fsubrs inc pop dec gs aaa xchg push pop dec jp sbb dec repnz scas mov scas sub lea pusha clc jmp sbb (bad) push int3 mov in ljmp adc test mov scas and xchg xor decb jl and out mov int int3 jo or test sub cs adc jle xchg xor or lods lds xor push mov in mov jbe pop loope xchg push lock dec mov mov jmp or repz push xlat xchg xorb or fwait add mov ret push sub xchg push jno jne xchg xchg pop mov repz add push ds sub jp loop xchg int rcrb je xor jle xor stc cltd cmpsb psrlw adc xchg enter fsts mov jb bound xchg inc jmp arpl sub pusha jmp add dec outsl or adc mov xor data16 hlt cwtl inc (bad) aas cltd iret or xchg and cmp out mov xchg xchg jne jmp nop rep mov aam add jmp sub cmc sbb rorb int3 jne jge cmpsl mov jae aad out (bad) dec sar mov or sahf loop fwait cmp mov repz push fidiv jmp (bad) outsl and pop xor sub addr16 mov add das fistpll push aas popa jb xor xchg sub ja aaa fcmovne leave inc inc cmpsb jb dec loop in inc sub cmp mov aam push rcrb add ja mov or or pop stos pop cwtl fbstp outsl rorl add shlb push jns pusha xchg (bad) sub in pop sbb adc jbe in ficom (bad) mov sbb loope ljmp add adcl les rep repz fwait cmc adc dec push push in dec jp mov cli xchg pop mov mov movsb aam sbb leave inc rcll insl sbb jnp push push inc push (bad) fstl push dec movsl fstl jns push or mov ret stc jmp inc ja jmp clc or pusha pop loope loop bound jg cmp imull mov insb fmuls (bad) pusha adc pop imul je cmc mov test (bad) lods cld cmp stos push lds adc jle,pt or jg mov push insl jb,pn dec mov dec sar jne or (bad) nop movsl repnz iret mov xchg mov and dec push cmpsl mov mov adc mov js mov adc or xchg bound pop cltd inc sub pusha cwtl lods mov mov mov call push jl insl push cli jecxz push dec cli lea int das pop mov mov jbe shl lret movd push pop sub push push mov sbb rol (bad) or scas loop repnz pushf cwtl and jb fidivl movsb inc xor inc ror push inc ljmp lods (bad) shl mov push lods les inc movsl fidiv fsubs (bad) movlps jb cmpsb out jg xor mov inc sub fxch repnz gs (bad) sbb shl mov inc jecxz imul add push je cmp xor xchg out cld (bad) in xchg inc adc mov or lcall lods xor cs adc pop fsts mov mov sahf enter pop sahf lcall sbb mov xor push inc jmp dec and dec pop xlat or xlat cmp mov lahf mov adc lret fisubl cmp es mov pop js mov cli stos push cltd push mov jno outsb ret adc adc stos iret es lods add cli adc mov out sahf push xchg dec std sub rcll rorl orl pusha leave stos mov jle jno push incb mov mov pusha fldl jl push lds mov inc xor sbb insb cmp aaa xor ficoml sahf mov push lods push mov inc push pop lret xlat pusha les xchg adc nop movsl mov sub shlb sbb inc cld mov add loope dec xchg mov das mov out cmp jns lock mov adc cltd pop pusha (bad) xor popaw int xchg div leave ret inc jb adc aas les and leave mov mov sbbb fwait enter xchg mov xor mov xlat mov lahf divl cmp dec add mov mov inc movsl adc mov or and cmp push mov fadd cmp (bad) mov fcomi ja mov mov mov (bad) jno adc int3 sub aad cwtl mov and sahf dec mov inc and xor jne ror sub outsb gs arpl jl mov lea fst sub sub add (bad) dec cmp add sbb cmc out mov enter push xor out dec es call adc push in mov dec decb and addr16 xchg dec dec pushl jb clc (bad) fisttpl shrb mov les repz xchg icebp aas cwtl clc jb pop sub mov xchg dec jmp push (bad) cmp repnz sub inc push test sbb inc in shll cmp imul mov lret jecxz fdivr push mov (bad) mov adc sti inc push lret sbb psubsw adc les enter movsl jge fwait add icebp ja icebp negb jg jnp cmp mov sub cmc popf xchg mov rcrb scas sbb jnp fwait pop mov es add enter sub pushf out lret insb xchg in loope mov cmpsl mov nop fsubs loop inc popa addl (bad) and jp jecxz out icebp repz cmp add hlt dec sub mov sbb mov jb outsb jmp add or dec test jg xchg pushf cmp sbb aam xchg mov aaa add shll xor popf and insb popa enter stos and cmp cmpl mov call popa cmp fidivr sub aaa clc sarl mov test fxch clc and test mov test or and jne sub add stos adc cmpsl bound mov sbb jp push (bad) lock push les dec mov sub jo and push daa outsl cmc cmp adc xor daa rcrl jo pop cli cmp mov imul mov loopne mov pop and cmpsb sarb stos clc (bad) xor iret cmp cmp aad loopne cmpsb mov cltd out dec mov repz mov or lret ret mov pop sub test vcomiss xor mov jns stos ret imul andl cld (bad) fsubrl jb bound leave mov or outsb push push imul and adc ret jl je xchg mov ret and scas dec mov push or pop sti lods add xor inc push ljmp ret dec push sbb lods insl js jo lock ret adc test arpl ss fistl sti push sub lds inc rcrb (bad) sub and dec fisttp shll adc dec and jl or lea pop imul push mov inc cmp lret mov lret mov pop hlt cmp arpl sub push mov push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret lret out push dec popa (bad) clc ljmp cli jb mov test jne push out or xor mov addb lods lahf fdivl aas sbb dec adc add jge xchg jb cmp and (bad) mov or mov jb insb dec popw pop aas inc pop push les push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret lret out cli neg jno,pn pop les mov call in sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret lret out (bad) divl cmpsl adc inc mov in pop push push pop sub push out (bad) sbb pop inc sbb or (bad) fsubs test pop push fucomp negl xor pop shrl cmovno imul sub lds int xchg andb jo (bad) mov stc pop leave adc mov icebp mov loopne cli cmp fdivrp pop mov push mov mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop ret jp inc mull (bad) fdiv std jb push and add icebp and sbb mov adc fcmovnbe pop xchg jno imul ja mov mov in or adc call call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp xor xchg jae pop test fcompl das inc push mov cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 xor xchg out pop mov jo shrb sub lret (bad) xchg jns jmp push and add xchg pop loop fiaddl and rcrb inc mov out jge xchg push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret xor xchg out jno (bad) jbe cmp push inc lods mov adc pop das cmpsl mov in in je data16 insl mov xorl jmp jne sbb fidivl xchg movsb out adc aas inc mov test mov lock add pop and mov and cmp jne fnstcw mov and cmp lea jne jmp push pushf or rcll iret sti push mov dec sbb in (bad) xchg cmpsl mov rcrb adc sub imul cmpsl mov daa inc sub insl jmp lret cli test imulb pop and std pop dec inc fsubrl into push sub jns ja,pt xchg dec push cmp push sub sub mov mov (bad) addl les inc out (bad) shrl sub pop addr16 cmp jmp sahf push jbe aam enter outsl xor push push mov (bad) xor rep (bad) (bad) mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg push mov imul jbe add aam test sarl xor in ret xchg cmp push push clc dec bound inc sub pop stc addr16 cmc les insb mov pop imul jmp mov addr16 dec dec xor add jmp xor dec in inc loope adc inc pop mov push jo cmpsb jne movsb and nop imul pop push xor aad lds mov mov arpl out subb lcall ljmp pop lret in enter iret cwtl xchg mov fs cld xor add in stc popa or (bad) and inc movsl or lods and xchg jbe sbb inc xchg mov mov aaa cmpsb pushf xchg movsl mov mov cli hlt mov jmp mov aad test (bad) xchg bound or clc pop mov add sub inc add and sahf ficompl mov and and repnz cmp stos jecxz xchg loope test cmp pop dec mov xchg scas xor xchg jnp xor add iret imul sub lea rcll pop mov (bad) cmp xchg out pushl add lahf cs mov cmp mov insb lcall arpl mov xor push add nop dec mov adc mov add mov out fisub cmp bound jmp lds xor inc mov lahf sub inc jmp and ja cmp sar in mov cmp mov jns out cmp dec jnp or insb mov fcomps ss add fisttpll insl repnz repnz mov ja pop cmp cltd inc lahf jg dec repz mov fild out test and (bad) imul mov jle and sahf or aas dec repz pop lods push mov popa int fisttpll outsl addb mov ja outsl fidivl out pop outsb divb aaa or pop leave and sbb and push push (bad) push loopne aam lods pop sub fimull popa imul inc clc js popf push push or xchg mov mov std lahf adc xchg js add out pop ljmp testb lds scas mov add sbb sbb std mov push rorl mov adc test mov call inc sbbl mov adcl outsl lds jae push inc pop (bad) data16 aas cmp pusha rcl xor adc fidivl sarb lcall or popa into pusha mov lret xlat push stos (bad) mov sub add in lods out push add shl push xchg mov bndstx pop js imul adc fwait repz test loopne sbb pop in adc mov insl sub cmp out lock adc es into inc cmc jno les or leave pop cmp stos xchg xchg or js shll mov add mov and popa and ss cwtl push lret mov xchg into push lahf ret sub and jno mov fsubrs add cmpsb sbb push fwait shl fsubr mov mov into jg add hlt loop and (bad) outsb mov cmp dec les pusha rorl sbb mov scas aad mov jbe clc pop jnp movsl jnp dec add sbb dec mov pop jb test xor inc arpl mov push fs pop inc mov pop dec loope and mov add xor cs and cmc fnsave xchg std and sbb scas popa arpl adcl aas stos test sub lahf or mov pop fldl (bad) aam mov lods dec and rclb int3 sub dec adc popa movsb sbb xchg int xchg (bad) lahf jmp mov imul unpckhps xchg fld inc add mov dec stos je mov popaw xor inc push out inc mov push insl adc mov pop push ficom jle jb mov aad insb jle aam fdivs pop bsr pop pusha jl pop nop ret xchg mov (bad) push call adc aam mov xchg rorl sub mov in jns and sub pop and repz test mov xor push xor fcoml jmp jbe int3 sbb sub jae fstps outsb add into cmp std jmp test in pop nop roll insb pop mov scas dec jp push xlat xchg lret xchg sbb out pop push dec out xor jle dec inc pop mov jge loopne mov repnz mov adc out dec loope loopne add test cli popf loop lods lret xor add aam mov in push dec pushf inc inc mov sbb cmpsb dec inc push imul mov jecxz pusha sbb jl xor insl in adc int3 aad ret lret stos or les adc jp repnz mov (bad) pop push jne imul mov cmp and cmc cmpsb jae int pop lret roll cmp pop jbe pop or fwait cmp xchg (bad) and jecxz mov xor mov data16 call mov std call sti cmpsb mov repnz mov or popf dec aam push loopne mov sub dec int mov xor or push popa out loop adc or jmp repnz add jle (bad) mov cltd out pop es xor cmp cli loope push mov lods aas aad mov and iret xchg inc pop out rolb mov add push daa dec ret outsb xchg adc xchg dec mov repnz add (bad) jecxz loopne lret leave std outsb push or lock pop pop je dec mov es (bad) cmp cmpsb mov movsl pop jnp lock fsubl rolb in lock add mov dec out mov push (bad) jb aam repz push mov inc sbb pop push insl xor push test pop pop cmpsl add or outsl pop inc flds lahf mov roll push rorb xchg faddl flds sar cmp popf sub jb je mov xor push add mov pop cmp popa mov mov inc scas test cmpsb jnp add test (bad) xchg lock push push mov faddl lret popa push sbb xchg cld (bad) (bad) (bad) inc bound sbb sbb dec push cwtl add lret cwtl sub test ss push addr16 xchg push and lock push int3 xorb shl icebp or aam insl nopl dec adc xchg pusha xchg add xor pop cmp enter sahf (bad) repnz jne aas mov cltd or push jl std mov xchg (bad) pushf insb pop (bad) out mov bound stc repnz mov sub aad add cmpsb arpl xchg aaa into inc xlat dec add sub cld (bad) ret sub cmc test sahf out push sub lods adc lds inc addr16 sub dec ficom addb test add std dec mov lods pop daa ficoml dec loopne cmp cmp ljmp mov mov data16 mov mov dec sub (bad) pop aas ljmp jp pop add pusha cli lods (bad) cltd mov pop das fsts or scas cmpsb jle gs jle scas dec ss xchg adc nop sbb (bad) sbb (bad) xor movsb xchg sub mov jno mov mov xchg mov jnp sbb aas pop or out xchg or xchg mov xor scas sub xchg aam inc cmc sbb orl and sbb aaa cmp jmp cmp movsb pop int ret sub stc ret jno popa xchg mov dec or cmp cld loopne xchg int3 in mov dec in sbb jo rorl pop insl adc jno push mov dec or push pop or xchg in mov out lret jecxz int3 sub not scas xchg push int3 sub pop push mov xor imul fcompl cmc aad arpl pusha push hlt dec pop popa mov rdtsc xor push sub out enter or mov mov stos stos in je inc push adc dec jg cmpsb adc xchg negl aaa std arpl lret sti (bad) pushf aam dec cmc ja pop xchg les pop jnp (bad) (bad) mov sub pop jo bound mov xchg gs cmpsl cwtl std mov movsb or fwait cld jecxz cmp aad gs xor dec mov push or es push orl and lret and incl cwtl cmp idiv jecxz sub mov dec jmp out out lock jo enter mov mov mov movsb insb fsubrl or dec stos sbb mov sti sub sub push sub hlt sbb fmull iret cmpsb and xchg daa test insl jp in das pop mov mov and cmp mov fs cmpsl div mov shl xlat bound (bad) xor imul (bad) nop pop lcall mov mov mov popl cltd rcrb jbe lock loopne incb xchg mov scas cltd push movsl mov fdivl std push lret pop js cmp mov popa int3 into enter jmp jne pop icebp and xchg es daa mov shll imul xchg fwait adc or xchg ret imul mov inc xchg sbb fdiv push sbb std xchg jl inc bound add or jnp faddl jnp inc sahf inc adc fmull lock jo mov jmp adc scas lods repnz (bad) ss add mov aad outsl dec arpl xchg cltd and pop out lea jle jno std xlat mov and xor pop xchg mov sbb lahf pop lcall out or mov sbb adc pop lahf shr cli mov jne mov leave cli pusha leave jg test pushf jae and sbb in sahf sub std into push imul movsl addr16 cwtl pop enter insb push sub cli or or ret (bad) (bad) push xor push repnz pop and (bad) jecxz test sub into jl pop fwait xchg daa insb movsb pop add cmp cmovno and cmpsb xchg and insl dec jno inc jp fsub (bad) push mov xor jnp ja test outsl cmp (bad) pop adc or fdivrp dec in push adc jb aas out pop movsl jnp out push shrb sub push insl mov nop jo or push dec mov add jo mov loope jmp xchg out mov and push dec add xlat lock sbbb popf stos mov aam testb sub add ret adc pop add test or in imul ja mov push dec ja mov sar mov mov mov adc fmulp mov adc fwait mov bound cmp (bad) repnz push test jmp or sub (bad) mov sub inc ja rcll adc cs mov pop jge mov adc sti or cld jge jno dec mov cmp or dec push mov aas outsb jle rcrl cld outsl adc repz outsb out loope rcrl stos pop enter add jbe mov test adc inc or xor out fucomp xor mov push (bad) adc cmpsb mov fcmovu arpl dec or out cmc sbb stc sub insl mov pusha or push adc sti xchg mov faddl or mov fstps movsb pushf pop out push adc fidivrl mov loope push les call mov insl daa inc push push push add xchg out (bad) push dec dec stos jnp,pt pushf mov mov pop push orb call inc rclb rcrb push fwait mov insb push mov fidivr mov pop push jns mov xor mov jnp adc and test lret dec xor add sub xor neg enter jns shll sbb xchg cld dec mov and cmp out mov fs mov fldenv sbb lcall sub je iret (bad) adc sub (bad) mov push or nop jnp jge in pop popa stos sub jne gs sbb in stos and dec push bound mov pusha icebp sub pop (bad) in xor and lcall mov inc movsb leave mov xor adcl adc insl cli lods jne (bad) (bad) pop and es inc lock pop imul sub pop add in fbld xlat ljmp psubsb jmp outsb cmp sub xor iret fwait loopne stos or je rorb (bad) or rclb (bad) jmp shl cwtl repz inc aas lcall repz cmp cmpsl lock pop and loop mov sub mov sbb popa cmpsb dec sub push sub movsl cwtl mov push (bad) jge insl cs in rcrb ret lods pop lcall sar fnsave xchg mov das cmp jne les adc mulb mov rorl addr16 adc pop mov cld es jo int xor jecxz lret push xchg sbb les xor xchg jo ret lret sbb call je dec mov call test push mov jno and in arpl sub mov cmp mov xor shr loopne iret daa sbb add xlat jnp,pt jecxz pop add ja mov cmp (bad) xlat loopne xlat and std lock stos lret mov test loopne ret lret push lods push aad jnp xorl es xchg jmp mov movsb and adc fxch xor pop sahf inc cmpsb dec sahf jnp decl sbb dec and mov das mov leave xor cwtl mov (bad) xor or jmp dec fnop repnz test lods test cmp sbb jno ljmp hlt scas test iret je mov fs jecxz fwait lea inc dec lahf mov aaa or ss push sbb mov (bad) pop addl insl iret mov roll ret fucomi adc dec addl pushf incb and xor sbbl push push push rorb lret cmp lods cltd mov xor add sti lret iret mov add inc sbb negl test aam xlat and sub int3 mov mul pop (bad) mov sbb cmc mov mov je outsl mov popa push sub xor cld (bad) (bad) in sbb aas xor jmp das jns inc test push cmp shr addr16 mov cmc cmpsl cmovo mov sbbb or mov mov negl hlt in rolb and addl (bad) fucomi mov out rcll push bound jae fisubr and iret test adc xchg mov stos outsl aad pmullw fisttp js and bnd cmc xor mov cltd push inc dec sbb mov dec (bad) sti aad (bad) jl or push into push popa push out xlat out dec mov fisubrl ljmp xchg aad jae mov movsl mov div jbe mov lods lret sub mov out rol mov sbb jmp mov pop outsb inc daa stos and jge cmp xchg pusha insl adc adc adc jecxz fimull pop rolb jmp fcoml jo fmuls jmp pcmpeqb mov ljmp push mov mov popa jmp lret hlt mov out or pop dec sbbb sub rcrb jne xor (bad) pop (bad) cmpsb and (bad) sarl cmpsb push (bad) shr jle xor outsb in sbb fmuls js mov xchg inc fimul and inc push or pushf or in scas out sbb mov mov inc push cltd push dec test push gs testb push out fs aam iret inc dec into in pop orl daa lods mov aaa pop add mov into imul or cmpb add into insl mov cmp push mov (bad) fidivrl (bad) stc jmp sbb jno int add rcrb inc xor lcall mov xchg xorl fidivr push sbb dec repnz insl xor dec movsb ret cltd mov add test mov mov add ret xchg inc jbe rcrb hlt cwtl aad ljmp aaa push stos aaa iret inc iret fwait cs out jo fisub int imul sbb sti in ret das push bound or out rcll mov pop inc pop je mov ja loopne frstor cmp (bad) xor mov aaa cs loope,pt mov lret mov scas mov rcrb lret sar loopne mov cs xchg cwtl pop xchg jne inc enter pop (bad) mov add test sub dec out xchg sbb pop cmp dec cmpsl xchg xchg pop scas test add adc fadds inc popa rolb test add lcall mov inc push mov loop popf popa (bad) cmp test and xor into sub lock sbb xchg xor push mov sub mov mov cmpsb adc fnstenv mov ljmp stos and push pop pop pop scas jbe jl fsub rcll movsl xor decl inc adc pop (bad) xor mov pop in inc insb mov aaa in out stos fcmovne enter mov xor ds test cmp lods fmul (bad) ret jne ja adc mov xor mov rcll movsb cmpsb clc mov mov fdivl pop sbb jmp int icebp sub fmull xor out (bad) push shll xchg loope and and movsl inc mov inc xchg dec and xchg sbb in jno cmpsl test and aam sbb xor lock in aam jo pop aas adc xchg subl cmp dec push cwtl addr16 ss mov sub scas cwtl (bad) sub push int3 mov fwait sarl xchg pop in adc add pusha adc jae mov insb ret pop mov movsb add jl jno mov sub in arpl add cmp pop clc cmc rcr subl loopne adc mov cwtl jmp push inc popa (bad) clc (bad) mov mov add and sbb pop lods adc fcoml pop popf sub push repnz sub jp mov dec std mov or add shrb inc pop push sahf add pop and pop and repnz push xor mov sbb ss or jg mov ja shrl jg inc mov adc jecxz or sbb pusha jmp jecxz jmp cltd aaa mov inc xchg mov xchg cmp ljmp pop cmpsl std psubsw mov cmp repz xchg sub movsb add in push inc fwait dec sbb test jnp je jne push pop sbb mov (bad) mov jecxz addr16 loop adc or jns mov cwtl push cmp enter mov insl fcom push jle inc push out mov iret cmpsb std iret cli push mov nop cmp je in into adc push lds cli lods retw push xchg (bad) lock sti outsl fnop dec mov es or test push fsubr xchg sbb dec scas and std push inc dec sbb ss lret mov call jg sbb (bad) lds adc loopne lods jp xchg mov jae std jo inc lahf icebp jns jecxz jne xor xor and or push or addr16 lock mov mov (bad) push int push roll outsb jmp xchg sbb jecxz and dec fiadd sub stos xor sbb push mov mov pop mov (bad) arpl pop add adc out hlt test jmp gs dec inc mov inc test xchg cld jno push dec jno inc add adc mov sub jo and cmpl xchg and mov xchg sub sbb xchg push iret fldenv fimull test movb outsl outsl fsub movsb inc test popf aaa inc inc cmp and cmp cld loop pop jbe lods xchg push push es and stos test mov (bad) lock and inc or incl xchg dec mov outsl clc (bad) leave (bad) cmpsb je adc fsubs daa (bad) xor lcall mov mov cld mull or push les dec pop jo (bad) xor stc mov mov scas mov push xchg and (bad) sti out mov rol pop ret mov dec cli pop (bad) (bad) lea mov dec mov inc jb std rclb inc insb mov mov add (bad) jge inc xchg (bad) cmpsb icebp or cwtl int3 or lret ss xor add push cmpl neg xor cs pop shll sub popa and xchg fisubl insb xchg aaa pop dec dec inc rcr cmp and add mov mov pushf dec flds cwtl (bad) scas lahf xchg dec mov mov int3 cli mov and mov mov jbe (bad) sub jne push jo push inc fcomi std repz ucomiss psrlq or (bad) cs in (bad) jg add jle fimul js sub bound aam pop mov out testb xchg pop or xchg fsts sub daa jno push and aas (bad) shrb mov sbb sub fdivl jl rclb stos pop jp fwait fwait rcrb lahf popa in cwtl push xchg jmp lret dec movsb xlat enter fisub mov sub outsb dec int3 loop (bad) rcrb aas jmp sbb dec inc xor inc pop xor cmc cmp in mov jl or sbb and pop leave (bad) hlt icebp push or dec dec jb xor fsubrl add fs sahf xor mov (bad) pop push mov notb xchg or clc jmp mov outsb inc js cmp insb shrl xchg popf jl xor cmpsb pop mov les addr16 mov mov scas in ss fistl sbb jb movsb out xchg scas fdivrs xor jae pusha bnd mov pop push rcr cmp dec int3 lahf scas lcall xor mov out aas mov dec or dec iret pop push fs lret mov sbb mov xchg scas pop jae xchg lock adc sub mov inc imul jbe inc cmp arpl arpl push and sub sbb (bad) cmpsl sbb or das jge in jl pop and pop in scas aam add (bad) mov sub movsl daa lds stc hlt aad adc out cli outsb (bad) (bad) mov lret push dec and add loop lcall inc push or pop mov add push xchg xor pcmpeqw jmp inc addr16 mov aam arpl sub cmc cld xchg out inc (bad) out or loop push adc mov (bad) sbb jge pop mov and xor lds jnp sbb cmp in dec cwtl mov xorl roll outsb repz xchg (bad) cmp push push fbstp add stos xchg insl mov jns lret repz jns dec pop es jge popf add mov ljmp mov ret icebp add xor xor xor out inc cmpl cmp loop or sbbl inc push cwtl imul sahf adc jmp mov xchg xor jp cmp sarb wbinvd jg jp int3 sbb insb aad pusha mov mov dec rep xchg mov and push pusha pop cmp aas call sub rol add mov dec loopne pop stos fwait mov popf jo outsl mov and xchg ret (bad) dec cmc out jae stc add and pop sub xchg dec sarl sub je jae fsubl or mov js add loope movsb adc loopne mov pushf enter jge cli int3 push jnp incl repz int in inc push sahf pop xchg mov pop jge mov pop jecxz aad inc scas into in scas out popf mov push jl push lds and xor (bad) mov add cmpl or repz mov mov lea rcrb jge pop hlt add fist sbb clc repnz hlt jg pop scas inc mov cwtl add push jge xchg lahf sti xor xchg jge push test xor aas cmpsl pop jmp shr lret pop clc and ss inc enter out or dec mov out data16 leave imul xchg loopne les leave lods adc jb es iret xor push ljmp test inc (bad) push imul call sub xor repnz pusha fdivl sbb adc negl mov or clc inc enter pop push push test popf adc aaa xor idiv cmp xorl mov rcl sbb into add push call push mov push xchg sub and mov dec or in push out sbb jmp loope incl dec push lods jo xor es xchg icebp add pop scas insl inc adc (bad) sub test ja (bad) das out xor cwtl stos andl lock sti sub lcall mov and push in cmc mov iret lret aas in jnp pop inc dec popf push xor xchg lods inc sub iret jecxz lock imul jae or cs adc mov fmull (bad) dec xor (bad) data16 cmp mov xor jp add mov bound cmp clc adc int mov testb out and je int3 nop into cmp dec add xchg rclb sub fildl lret mov nop or inc (bad) (bad) ret std mov aas cmpsl call lret pop inc mov sbb pop or ja mov dec jo sbb pushl mov adc lea addl or pop push iret lods (bad) fisub mov (bad) fmul and outsl sbb outsl mov ret cmp repz lahf dec lea adc stos arpl repz mov mov divb jp fcomi imul jle test sub pop add xchg pusha dec sbb xor ds add jge stc xor fcompl loop in cmc mov ss cwtl lea sahf xchg (bad) add sbb mov test out add pusha insb inc and jg lods dec jle in fldl sub inc mov add lcall imulb pop xchg adc stos scas inc iret pop xchg add movsb xchg sub pop int aad cmp scas fisttpll inc ds xchg aam inc pop dec xchg cmp nop vsqrtps stos insb push jp pop xchg sub mov add mov fwait scas aas push int3 sub loop int3 sbb fcoms mov dec loopne sub dec ror stc push or fcompl les pushf lcall pop mov ja,pt mov mov nop or and fbstp cmc insl cmp mov repnz ds dec in sahf add lret frstor (bad) popl test (bad) cmp xor fs sub pop xor jmp cmpsl ljmp cmp mov push lock ja cmp push xchg sub dec push pop int pop or sbb hlt icebp xchg gs mov mov hlt shrb sbb mov jecxz fldcw push push popl push out inc rcll scas dec hlt xor stos (bad) aad pop jnp xchg nop ljmp hlt icebp sbb xor sbb pop fcmovb fucomp outsb cmp push into in mov (bad) scas arpl fs pop mov das jg roll hlt lahf fwait out push xchg cmp dec pop jnp out cs out dec cmp pop movsl lret outsb std rcr rolb shll dec sub fimull hlt rorb loopne xchg ss inc xchg daa inc (bad) cld addr16 stos and push mov in lods add das je cmp add pop push xchg (bad) je clc dec or and mov je inc mov sub fnsave push in (bad) repnz sub cli sarl outsl iret pop dec jne,pt mov mov cmp jmp fucom add cmp ss lret mov jb mov loope or pop jge enter sub jae sti bound pop mov adc (bad) xor mov clc (bad) cmc es or sub or mov adc push (bad) xor leave and xchg (bad) cli (bad) or inc jecxz xchg pushf mov and lahf (bad) cmp adc pop aad movsb pop cwtl jae out aam js fnstcw or xchg (bad) xor jns popf jp arpl dec and adc mov (bad) out and mov data16 mov mov lret add cmp push inc inc inc pop dec iret repz and testb rcrl std or nop push xchg pushf jbe shlb xor add pushf les sub jns dec cli icebp jp or mov fcompl jne jno add mov xchg pop pop mov out setbe jmp loopne cmp faddl jp push xor sbb int jl clc jb (bad) orl jle lock loopne or adc sbb das es lds dec cmp call mov xchg mov ja fwait mov push sahf xlat cmp xchg xor pcmpeqd out sub pop repz movsl pop movsb fstpl frstor movsl sarl jo and push lea stos cmpsl push fwait aad ret mov test in jl mov cmp cld or or cmp push inc adc fistp jle hlt (bad) adc pop sbb and inc repz notl xchg in sub repnz repnz mov dec fs push xor push pop cmp out in cmp gs sarb mov push (bad) repnz cmp pop xor mov outsl in inc pushf mov inc sub or push idivb pop push dec call push ss (bad) sbb lahf cli mov jge ljmp mov sub enter xchg test mov add fnstsw (bad) int3 mov (bad) add mov inc fsubrs scas or dec pop cwtl jb icebp rorl mov ss hlt into inc push and rorl sbb bound (bad) inc or adc (bad) and adc test mov push jle das inc sub xchg mov cwtl pushf sub xchg cltd cmp mov stos push loope ja and pop std test insb in (bad) jno bnd stc or jae fdiv in pop mov add bound lock sub sub jb push out jecxz pop shrl popa leave or mov xor scas jl xor mov xchg or jp fwait jmp sti ret lock roll or leave cmp dec cmp js enter dec roll push andl mov adcl movsb adc sub push movl (bad) dec cmp inc dec cs enter xchg add loop fldcw adc ss les add adc insb pusha cwtl push lds cmp or jmp xor (bad) ret in out xchg adc mov int inc in or cmp popa scas lret inc (bad) mov mov pushf data16 xor jecxz movsb inc test jl mov sarl add das push push sahf sub int xchg add xor rcrl xchg pusha sub add mov movsl in scas push test sbb mov into dec out lcall dec pop mov out (bad) divl adc add ret xor sub bound mov mov jno pop lea fdivrs mov cmp fs or loope stos add out push cmp inc mov mov push sub int3 jge fs rorl (bad) sbb jbe inc and push mov sbb mov movhlps jno and pop dec mov enter sarl ss or repz jge addr16 adcl leave dec ret ss aas scas dec fistl xor cmp inc mov xor cmp inc inc jb xor and notl xor (bad) outsb rcr lcall stos fs push stc pop push sbb and and mov iret pusha or pop jb lods mov xor inc popa in push fs cmpsl leave or rol test cmpl mov push fdivrs mov lods in cld pop pop xor jmp fimul out pop xor xor es clc bound mov dec mov lods imul pop (bad) neg cs orl adc nop mov adc clc iret pusha cmpxchg cmp pop xrelease scas pusha lcall add out leave popa test mov sbb dec push dec std movsb or inc popf in mov ja rol negl cmp mov dec sub mov insb lret cmp jb jno sbb cld fsincos push data16 ret lea sarl (bad) jp jle add pop mov xor int3 inc pop divb push (bad) ljmp out lcall ficomp mov mov inc popa ficom ljmp aad sti outsl jne ret cltd pop fistl and shr loopne loopne pusha ret cmp bound jns dec cmp sbb xchg mov xor push fwait adc scas es (bad) xor mov mov adcl sub les or int enter jle mov cmpsl sahf dec rcrb pop gs incb sbb sub push and pop or fsubl mov test ficomp pop or dec adc imul arpl xchg fdiv or dec (bad) mov mov mov sub mov inc sub or in xchg mov rcll cmp fdivs rorl sahf adc xchg arpl cmp (bad) aas pop pushf cwtl or pop jmp mov or sbb xlat fisubr mov push adc (bad) insb dec test cmp int3 jbe inc pop ret dec dec pop sarl push xchg cld cmc sbb hlt and rorb fcomps or loop imul xchg push pop sub das push scas shll xor sbb mulb mov rcll cld ljmp (bad) fnstenv jne fidivrl cmpl push scas inc push out out and and jae fidivrl lret mov gs ret (bad) insb and (bad) jo jge movaps sbb sub jbe icebp mov fbld mov fistp xchg jl push pop in testl cmp mov inc lret xor test cmpsb cmp push mov jp jmp sbb roll sub lret xor into push sti loop divb xchg adc push xor dec push repnz adc or xchg (bad) xor mov lds pop loop inc icebp arpl jnp cmpsb pop inc loope sub add inc jno cmpsb push popf dec mov cmp jnp or sbb (bad) or not pop mov xor in pushf mov enter dec and lods xchg popf mov int add sub out fistl neg lahf (bad) or mov arpl xchg (bad) in out cmp das jno lcall pop xchg push push div or mov insb in push xchg xor push add les inc inc mov cltd sbb and adc int3 icebp sub adc mov mov dec mov xlat in push mov pushf mov jmp inc pop mov stos mov jae pop lcall push push ss jb xchg xor lods test mov cs add inc pop mov movsb bound sbbl dec imull in pushf push popf pop lret pop testl outsb jae stos pop pop xchg das jmp loope mov pop pop cmp js mov movsb lock xchg test (bad) pop cmp cmp decl and mov cmp jae mov push xchg in push xlat enter clc jae ljmp jnp icebp cld mov das sub cld push dec xor push sahf incb pop pop test test mov in test mov or pop leave fiaddl xor xor sahf iret and jno xor pop les popa je mov add test dec push inc sub dec or sub not cmc lods (bad) icebp pop stos sahf cwtl mov sbb prefetch or int3 xor pop test aad sbb insl aas cmp arpl scas dec jg cli das push pop pop cltd neg push xchg xor xchg fisttpl outsl mov ja arpl rorb sbb and fwait lret enter into mov cmpsl aad push lods mov int3 scas faddl mov aam ljmp rol adc xor and dec xchg xchg cli sub loop and (bad) jo insb imul mov mov jo std mov out mov sbb fnsave cmp push (bad) cmp jb xchg (bad) mov nop in in inc xchg in bnd (bad) daa xor test out push das loopne pop and mov sub mov sub pop pop push and push push loopne xor out adc push and sti sbb test shrl fcoms and addr16 and gs mov lea mov adc push jmp pop xor int3 mov xchg or add add xor cmp jp mov or (bad) xchg sub cmc loop das and jo mov jae imul mov or ret in cwtl insb sbb das push add repnz pop jmp xchg jno movl dec sub int ljmp out inc sbb (bad) mov xor cwtl stos js in gs inc fwait mov loop imul add repz cmp in mov mov ret test mov cmc dec cmp pushf or in jp push repnz xchg ds cs sub jl sahf fiadd scas imul add mov or sbb std inc add and mov lret gs and test push fcos loopne int3 lret stos in pop cmc jnp mov imul (bad) sbb test outsb insb (bad) jae push dec push mov push mov push imul xor mov cmpb lcall mov or add in sbb aaa or mov out push pop pop rorl imul test mov stos mov loopne push mov mov mov jbe add (bad) js jnp mov pop fdivs sbb mov mov (bad) idivl aad adc scas dec xchg mov (bad) out sbb addr16 cwtl (bad) ret repnz xor repz gs jg push xchg lds mov xchg jmp xchg cmpw outsl outsb inc mov mov or push cld cmpsb arpl rcrb xchg mov inc cltd jge scas outsl nop push sbb mov jno stc mov negb push xor jl cmpb or mov sbb mov sub js ljmp and mov and dec or adc shrd (bad) jo cmp xor cmp push pop dec sbb add fdiv out pop popf xchg mov iret (bad) or add arpl lods idivb pop jle (bad) repz push fmul enter movsb les mov cld add mov cmc lea push and cld mov popf sbb dec xchg push adc std out daa out jnp and out sub cli negb ret xchg enter push push pop stos fwait mov add and dec scas mov mov inc popf addr16 imul inc bound xor xchg fmul mov cmp es cltd cmp pop in lock test push ret lret inc stos push lds ja mov pop mov xor xchg and out mov fwait movl add push xor sub nop out jne or ds js ljmp mov xchg test xor ret pop mov jle ret stos mov mov lods scas fidivl xchg aaa pop mov (bad) jmp lret pop adc and jns add mov jecxz scas cld ss mov xor xor and pop es aad movsb mov call lea pushf lds pop xchg icebp (bad) ds addr16 dec cmp lods movsl inc and or xchg jno (bad) lret jno cmp mov jb,pn aam int3 inc mov cmpsb sub dec sti scas add rclb aam pop mov icebp mov jge mov inc jae popa jl jecxz dec inc inc mov xor mov lods mov jo xchg mov pusha popa and inc mov cli add fwait mov and ds inc mov icebp lock and pop mov bound aam out or insl xchg inc dec xchg inc jb out jno and js jg push setae js cmpsl (bad) loope push aaa adcl lret gs mov frstor dec cli xor lcall in cmpsl pop sub or add pushf mov in pushf sub les or jl add es xor pop adcb aaa ds scas jns das mov lea mov jle in cmpl fimul leave cmp loopne xchg add out and hlt in (bad) lret xchg mov pop enter adc inc mov test sbb cwtl jl bound cmp cltd js lds dec fsubrs std sbb mov mov out aas mov dec xchg and add inc jns mov scas aam lret fcomip pop int3 test push scas in xor aaa loope push lock xor sub lods scas jo loopne push out fnstsw jle pop xchg stc push xor and ds mov testb iret fldcw add test jne jbe mov stc mov add mov inc push mov adc pop dec ret jb cmp out fsub jg sub repnz bswap xchg pop pusha and mov shr test lods jp in ficom or insl lret xchg sbb mov jb fbld and dec xor dec (bad) mov pop lods jae inc popl into pop xor xorb mov push or xchg mov lds rclb adc ja jecxz xchg leave popa lcall insb and fildl lock pop adc inc jae adc dec repz inc sbbl lret lods out (bad) es out jnp cmp mov fistl jecxz pop inc cmc xchg jae out in sub int3 test push stc jle xchg push insb in and (bad) mov cmpsl iret mov les js lret inc lret mov and pshufw cli mov (bad) xchg xchg sub movd dec mov pusha in in aad mov xchg repz cld mov or mov or (bad) out int push jge aad pop mov or sbb cs push lds cltd xor push je rcrl cmp pop pop lahf or mov aaa pushf cmp add and xchg ds imul xlat or iret sbb loope mov sbb inc jg mov mov shrb lea push and mov imul or mov repz loope push inc fidivr jae xor clc scas int daa jl ret insl or jno lret xor dec cmp lock scas lcall pop mov sbb std adc mov (bad) lods out adc mov push (bad) out inc lahf movsl mov sub adc sbb std enter roll mov mov and push ljmp rol (bad) mov in in es pop mov mov jge pop xchg inc dec shrl mov (bad) pop lahf mov out inc sub scas mov jb xchg cld sub inc jae push mov xchg ret out cld xchg adc mov sti dec lds lret mov cmp lcall test setg mov push and outsl jecxz ss jo fsubr test mov sbb inc fistpll add mov xchg fs dec adc mov idiv inc sub pop push nop pop lods scas ljmp cmp loop je push in adc int3 lods mov je pop enter je rcrl aad lret mov push lcall stos out dec or sarl pushf push mov cmp jmp fsts stos sub and (bad) jecxz popf in add jp,pn es push mov cmp aaa enter inc addl adcl ja sbb imul cli out aad cmpsb jle lret sbbl dec ficoml mov xchg mov cmc dec mov ret movsb test inc sbb mov (bad) scas out pop push add aaa sti and and aam fs dec and ja xchg pop jnp mov das sahf jb,pt cmp jbe sahf shlb orl inc cmp js dec stos add mov dec adc xlat xchg jle stc fdivs dec sti loopne cmp jno mov test lret sbb ja pop mov xor les dec enter or dec push dec jnp loope daa adc jp add daa fsub adc lods scas outsb cmp bound jns rolb mov in xor popa test and in xor lcall rcll adc cs or mov dec pop sub adc mov (bad) mov sub subb arpl das icebp aas fwait mov fwait cmp scas and dec mov or lret or adc xchg cli lcall and shlb dec jae pop push jo and mov add sbbl daa and sub push sub or nop inc iret push ss fbld cmp icebp cmp out fadds sbb inc inc js inc inc cmp adc inc insb (bad) push xor loopne loope jnp sbb sub aas sbb repz xlat test jg lods pushf cwtl sbb cmp and inc ret lods insl icebp or push sbb xor fimull xchg (bad) adc jnp sub cmp fimull cmp mov and jge (bad) adc incl add mov mov fisubr xor push leave test inc pop mov cmp loopne mov les jbe pop in test mov enter scas mov (bad) cmpsl inc mov xchg or sbb out pop sub notl mov sbb rcll mov adc enter insl or leave fiadd mov mov dec aas add addr16 lock xor mov mov dec or pop sahf or cmp pop mov sub jg push pop decb movsl insb iret (bad) jmp fcmovnu add add stos lods mov adc out fsubrs fcompl mov jo in inc inc aaa sbb dec adc sbb sbb mov xchg daa iret iret jp add mov sarb push cwtl sbb imul out faddp inc pop (bad) xchg pop shl out sbb pop push fild inc jmp add repnz stos rol add sbbl leave std cli add jb loopne imul sub push cmpsb push popf popa cmp arpl out and xor push stos int dec cs aad inc sbb and out inc and icebp (bad) subb cmp xor inc incl les cmp cltd xchg test jp sbb push out aam syscall test sbb test xchg loopw cmp add sbb sahf inc or icebp jb xchg xor addr16 icebp pop loop mov ret (bad) mov push xor popf add and das es inc jg inc jle jmp cmp mov cmpsb push arpl xchg sbbl xchg sub loope pop int int3 mov arpl mov pop lret sahf add pop sub iret jnp mov jns (bad) pusha (bad) adc mov push xlat cs pop insl adc sti leave imul lock jnp (bad) fs xor inc xor cmc and and mov mov lods cwtl push dec push jno adc fstps int jns lret mov fsubr mov add out sub divb and mov sbb push fdivrl (bad) and mov test cltd dec and mov mov sub xlat cmp mov adc arpl (bad) mov xchg imul mov wrmsr fmulp (bad) mov or mov push add je hlt pop xchg hlt idivb in mov (bad) (bad) (bad) and mov mov test mov or xchg scas jmp enter adc in xchg cmpsb in cmp xchg add sbb nop mov push sub dec sti sar mov mov jae in and mov mov or sbb (bad) jnp sbb push iret add mov pop stc mov hlt and xor adc js add test jecxz jmp push movsl pop inc test sub xor dec push movsb orl testb mov and sbb test inc ret push cwtl lret add test lods inc lods fcompl aam or adc leave add adc scas dec cmp dec xor inc ja test rolb xor aaa sahf mov xchg push mov mov pop mov aas xchg adc jo fdivr (bad) and sub pop cmp out push and not fnop mov push push push inc lcall lret gs (bad) enter cli cmp or scas or pop neg xor nop aad cltd ja iret mov push xor sbb xchg and dec xor leave (bad) (bad) loope cmp mov lds push pop jns push fistl ljmp loopne leave fmuls jl movsb cs dec (bad) dec lcall (bad) (bad) mov push fstps pusha orl xor ret dec xor xchg add mov push xchg jae dec sub in add addb mov push ret pop cld fmul push in ljmp or jp or xchg sbb aaa (bad) mov pop int3 adc bound jmp inc in add or sub std movsl inc out mov fist orl enter jl xchg lret jne ja dec mov xchg cmpsl xchg imul std jno imul or les fnsave ror out scas sarb cmp (bad) xor sub ss dec fbstp jecxz,pt loop loop (bad) (bad) dec dec push sub fildl (bad) mov inc adc cld int3 into inc jg faddp push lahf add jecxz dec aaa lods adc aaa (bad) jle addl sub xchg jne adc ja lods xchg inc lds cmp inc out jbe clc xchg cmp xlat (bad) rep pop mov inc xor mov dec (bad) test and cld cmp inc push jmp sub dec xor adc divl jne aad pop pushl enter jg dec test xor adc out mov arpl xor int3 clc out sub dec mov movsl mov pop sbb xorl sub pop add aam js or cld imul jle stos mov mov add iret insl clc jmp fstpt lea mov jl (bad) outsl or xlat idivl sbb shr pop push and stc fidivr push dec pop popf jl nop mov cs hlt mov and (bad) xchg mov inc pop inc push push leave das int lods dec xchg cli pusha stos mov adc sbbl inc js mov decl inc mov clc in sub addr16 in fistp xor pop pop fnsave test mov push pop mov adc push inc mov sub push aam ss xchg mov mov test scas arpl xor mov arpl imul xor int3 jecxz aaa ja outsb dec push insl mov or orl into lock arpl (bad) hlt not cmpsl es int3 out jg testl push jb xchg jecxz inc sbbb lret sbb stos jb adc out insl cwtl scas lret push daa lcall mov lock jmp cli push (bad) popf je int ljmp dec sbb pop add inc cmpsl sub (bad) notb in mov dec shl dec ss jno add adc jo adc push mul setge cwtl xchg inc xchg loopne inc add lret push je stc aam inc pop pop pushl jmp mov xchg outsl fsubrl mov arpl das cmp in ret fdivl pop push out cmp jg orl (bad) pushf mov js (bad) sub cmp fisttpll xor xor pop push cld mov mov or pop insb add insl sub iret ljmp xor out xor inc fildl and xchg shrb dec jmp cmc jno ret cmp mov jne lret or outsl lret clc int jge inc cwtl dec aas add xchg xchg out out in movsb test cmc (bad) jnp mov (bad) test outsl sub push lods mov xchg lahf sub add inc xor jmp clc add repz jp std sbb jno pusha leave jge dec mov push sbb pop dec sub inc mov ljmp inc mov in ret mov dec aad mov int mov insb hlt push or lods popf xchg xchg je adc sub xlat loopne pop notb add jae push das push push ja out and push hlt lret jnp (bad) cli push ja jge jmp sbb shr sub fs ss ret add sbb sbb je xchg and add clc gs es sub xchg sti mov mov or dec xor (bad) movsb notl push mov (bad) adc bound dec loope shll lock nop dec jge sti in (bad) ja adc sub mov inc add mov bound mov test xchg xchg dec lahf pop mov jmp pop cmp add push add loopne cwtl mov mov mov sbb fcmovb movsb pop sub mov push sbb pop cmovs stos (bad) (bad) pop hlt cmp add fprem xor or jo popf xor push pop or aad inc mov rolb cmc add sub dec lahf jae inc call push and (bad) pop pop popf xor fs out and lret pop fstpt sahf gs dec fsubrs movsb (bad) in leave mov icebp mov adc imul or icebp or (bad) imul xchg ds sbb sub test je data16 cld or push sub jle adcl jne sti inc inc xchg jo sub call sub push in fstl or add cmpsb stc fwait dec xchg nop cmp repnz and icebp rcll gs cmpsb rcll insb nop inc inc jne jo add frstor push or aaa aaa jmp xchg xchg rcrl jl or sbbl adc xor adc es inc inc mov cmpsl or xor push add in fs jo addr16 fucomi mov push aas add dec or pop cmp xchg sbb jno push push inc jno lods adc les aam xchg into adc (bad) shlb dec cwtl and cmp test add in loopne cmp outsb movsl jl push push cmp mov fsubrl repnz ss fidivrl out fidivl (bad) lods sub in pop inc adc stos in icebp adc sub mov and dec pop int push fisub loop into or mov loop and test jl out out addr16 mov in dec repnz fisubrl cld adc mov sbb mov mov and sub mov leave scas pop sub inc jae push dec pop xchg sub je out xchg adc in pop and ror fsubrl or idiv mov in lahf rclb mov lea jl pop mov flds mov push pop rorb mov and xchg jp mov icebp lds and jb imul push pop fsubrs jnp aas icebp in jle addr16 and fidivrl jge jbe addr16 insl repnz adc rorl cmp xor (bad) mov cli pop push xchg jp cmp lret loopne ficomp dec sbb or mov stc or lret pusha sbb add cmp es (bad) mov insb lahf std shr jno pop and or pop xchg pop adc push mov push jns and adc cmp mov jbe xlat jle mov stos flds ficom jnp mov pop jb push jle sbb add mov imul popa lods lds sbbl rolb cltd xor mov or adc clc inc ljmp pop loopne add pop lret cmp mov xor xchg cwtl sahf repz xchg mov xchg std sub int3 inc (bad) cmp sbb mov fs popa push aaa cli lahf inc aas fidivl jl jae jl xchg xchg pop xchg (bad) push mov mov daa xlat clc mov inc mov push cmpb dec (bad) leave push xorb cmpsb das enter jg push (bad) cld add scas mov les add cmp bound or mov daa cmpsl int3 sti sbb sahf fbstp out fisubl pop int3 mov push cmp xlat xchg out (bad) out pop push or int3 (bad) jle aam ds push divb jno or repnz or mov inc fs dec into aam int3 enter sub ss sub mov inc xchg lods test in leave inc sub pop into pop or std inc mov test push out pusha mov outsl pop jns pop repz ficompl std push ret mov add pop shlb int3 and rol movsb sub pop (bad) insb outsb mov (bad) dec push cmp mov xor das xorl push into sti dec bound fsts les cltd inc jecxz inc cmpsb add icebp mov pop gs dec adc sbb pop int sbb jno and hlt dec leave push repz push push sub ss outsb sahf or inc (bad) into gs movsb mov cmpsl or movsb mov in jne push xchg lahf aas (bad) in sub movsb movsl arpl addr16 inc xchg mov (bad) std dec mov xchg xchg inc insl and or push movsb in jnp cmp add repnz xchg sbb (bad) xchg jp inc add dec dec lds pop push add int xor xchg xor stc lods jnp (bad) (bad) lret fs aam mov add jb xchg ds shll gs and cltd pop lock cli (bad) add pusha ljmp dec or (bad) push jb ljmp lods call xchg roll imul int3 inc mov (bad) mov or push fbstp xor lret dec dec inc pop dec sahf push push leave dec rcll loopne les push test (bad) into in dec das int3 mov pcmpgtb hlt pusha int out dec fs push bound les test dec sahf in push mov cmp sub ret cmp cwtl jge or inc inc or and test xchg in and and cwtl sub fisttpll pop (bad) les les sbb jnp,pn sub (bad) or pop xchg mov push repz mov xchg add add and js leave jp push lret jns jae fsubrl sub push cmp fbstp push divl lahf ljmp in test iret hlt jle cmc adc stos xor xor cmpsb ja mov mov jnp pushf xchg (bad) sti pop xor mov add ror xchg inc or lea xchg call push jl rorl ds mov dec ljmp push or pop sub (bad) mov fs add je cs mov out leave loope stc in xor mov test xchg cmp xor inc in jle push xor or shrl addr16 ret add mov cmc jo (bad) aas sbb (bad) push out les cmp jmp mov adc dec insb gs (bad) cmp insb lock xchg sbb jg or mov in das fsin fcoms and dec xchg xchg and jmp loope xor cmp pushf inc mov dec (bad) jl mov adc xchg (bad) jnp mov push out sub mov lcall push out mov mov sbb or push mov mov rolb xchg mov lock lods popf movsl clc (bad) in fsubrl push rcrl (bad) push int sti out iret lahf stos push inc mov and or xor (bad) decl pop sti dec scas xor inc ds pusha or adc xchg dec ja int3 fmull inc push pop pop push pop inc out pusha test pop insl aas push je std mov mov scas fsubrs imul rcrl mov icebp add sub pop xchg jmp ficom mov je jmp push int3 pop mov push sbb rcl pop dec out inc jmp cmp jl adc out imul mov mov je sbb push mov cmp fldcw aam dec insb hlt std and xchg test fs aad js jecxz mov (bad) rcll (bad) xor pop enter sbb and xchg lods xchg push iret hlt adc clc ljmpw xchg arpl xchg mov shrl dec icebp add lods aam mov and push movb test ret pusha fnstcw rcr ret sbb push mov push rcll jno cmpsl lods cld fs outsb sub (bad) xor int test and inc clc into cwtl fistl rorb mov das push or in clc or mov imul test dec xor int3 or pop xor add cltd xor gs sbb push sub mov or jno and xchg daa jno sbb adc dec xor nop mov and cmp pop cmp ljmp ret xchg xor daa sbb push fnop out (bad) push pusha mov adc dec or dec movsl rcll xor mov adc xor in pop dec and shll sahf mov pop cmc jl aas mov scas add adc dec in sti (bad) sub inc iret mov fnstenv push in xchg add lea mov pop jbe fnsave popa mov sub push jg aad test mov push movb dec cld push sub ds test sbb sbb push popa cmp cmp push ja mov rcrb vmaxss cmp mov or jl pop dec xor insb push insb repz inc fidiv pop gs faddl push nop lds jg sbb cmp and cmp add call sti popf jmp int dec xchg dec cs icebp das lcall push dec sarl out test xchg lods push and rol xor dec negl mull dec arpl push fnop push cmp or push xchg push out lret push adc jle bound push push je pop pop das sti cld popf push cmp and orl mov xchg jbe adc fwait icebp arpl dec inc adc jl pop or jg push xor (bad) push es jnp lahf ret or xchg pop clc pop xor dec (bad) dec or ds fcomi add sbb pop xlat pushf imul xchg pop or out cmc mov inc xor test xchg xor js cltd mov mov insl andl enter mov lea into mov sbb sub jl sub sahf mov inc sbb mov jno jp fwait xor ret ror js pop das mov lock comiss cs ds pop je int3 and cmpb fwait jp test mov fdivp jns push push hlt repz out sti in pop (bad) imul jo jecxz and jne push jb ja test jl fs jnp dec in pushf in stos mov mov sbb cwtl fisub cltd adc mov (bad) mov push lea sbbb es fstps push cmp jge mov jnp inc xchg je mov and jecxz xor add addb aaa (bad) push sarb insl pop push jl das add dec js mov pop or scas jecxz data16 sbb inc or mov inc or xchg and addr16 cmp xor shrb jl or and dec cmp jle and cmc pop inc int3 imul loopne xor fbstp repnz dec push sahf and loopne mov imul cmpsb jge sbb lods ja push cmp pop sub sub jg mov push daa xor outsb ret (bad) out ljmp dec jno fsts xor jmp out out push push pop jns je in cmp aad pop sbb in fldcw and adc popf ds mov jb dec cld and fidiv sahf cwtl mov cmp pop into (bad) popf lcall mov test test mov mov add imul in icebp dec mov lcall lahf add out js cmc xchg push or add push pop icebp addr16 (bad) mov sbb imul cmp jne sbb stc fs xor pop and add testb push fs cs stc in inc icebp xchg mov cmp in push sbb (bad) sarl jle subb add in or mov into sbb pop xor mov jo xlat aaa aas sysenter adc rolb jecxz fdivrl push push mov mov sub jno and outsb (bad) stos mov adc jmp popa (bad) jle jecxz mov js,pn xchg outsl sbb sbb adc into mulb ret dec xchg pushf adcl cli dec fldenv mov xor es jmp push mov loope movsl cmp loope cld dec lds pop je popf mov outsl pcmpgtw repz stos sub addr16 jmp ja jecxz jmp sbb and inc mov inc test std dec repz pop outsl scas mov add fisttpll xchg or mulb stos lret xchg dec in imul into push mov pop xor and sbb and arpl adc push sti fdivs jp ljmp aam (bad) jle clc imul daa push test and add insb push shll xchg addr16 jge fsubs repnz xlat dec xchg aas outsb leave pop in in xor fsubrl sarb xor dec imul push in push jae fidivl sbb jmp (bad) sarb subl and loope mov and mov mov mov test ljmp dec xlat int3 sub movsl (bad) sbb inc outsb aas daa dec fcoms inc loop add sbb dec mov xor in jne fstpl mov mov into out xchg push mov sahf dec clc repnz test (bad) mov pushf lods mov ss outsb pop insl pusha inc frstor out or adc inc add movb movsl out sub xor xchg ss xor mov lret lea jl in jo jg mov inc push push sbb sahf ss fdivrs add in jns dec dec mov arpl into in repz pushl mov lods nop mov es cmp push popl inc adc pop and out adc fadds jecxz scas mov in call fistpl fwait sub cmp push negl pop mov jg mov add cs daa push pushf out enter jecxz jp or bswap ss outsl enter inc xchg jmp cmp xchg inc sbb icebp jmp shll test cmp jnp,pn sarb ret or mov pop pop mov aaa lcall sub (bad) loop jp cmpsl sbb xchg les jb xchg test movsb nop jns mov fstpt loop dec rcr jo sbb xchg lret int mov xchg adc das jge push push push sbb jo fbstp mov loop pop icebp lods sbb mov scas cmp out sbb and aam ja bound and mov xchg fisttp xlat jae mov mov psubb fidivrl push jp lret jg stos sub and out xlat dec and mov mov cld es repz cmp dec xor test xchg leave lret mov add movsl lahf in cmpsb ficom inc test shll fiaddl mov cmpsl sti and pop cmpsl lods ljmp dec adc fs mov sub adc je xor or cmp mov lods push cli xchg mov xchg ficom out mov jno js cs lods adc scas scas aas cmc sub data16 pop loop in jnp cmc dec xchg mov je repz push sbbl pop aam mov int3 add movsl xchg lea aaa cmp sbb or inc xchg lahf pop test sbb movsb daa lahf xor pop lods dec and inc push hlt loope test mov xchg mov dec aad pop adcb xchg inc fbld jbe and mov repnz xchg mov in jns imul adc push int mov call mov test push xchg mov imul push dec loopne or faddl inc outsb mov pop dec lahf test xchg adc jns and sbb cmpl ficoml iret mov mov mov lret xchg stos mov mov jge xor add pop mov clc mov dec fs or mov adc call fsts inc push jecxz pop sub dec jb (bad) rclb jmp cmpsb cmp inc mov inc fsubs add clc mov ja push int3 xchg movsb loope lods clc aad cld outsb pop lds mov mov xor xchg lds test add xchg andl add pop pop les (bad) add sar adc bound cmp xor xchg subl mov sbb xor adc xor das cmp adcl adc ret ficom pop (bad) mov loopne mov (bad) xor mov dec popf sbb stos popf jle int3 mov push cmp sub icebp and xor lock dec or fidivl dec repnz push cmp ret aas mov lods lea mov sahf xor mov mov popf (bad) mov gs push push mov push fsubrs adc dec dec jl (bad) jmp iret lcall cmpsb loop cltd stc mov add mov dec test das add aas or cwtl pop stos push dec add je ret lea jno icebp push inc loopne pop xchg cs lods jo inc and cwtl outsl iret xchg jmp xor mov stos jnp sti popl shlb xor sbb mov add add sub mov and pop xchg ds mov jg aas lea repz hlt mov sub add pop xor adc push mov mov adc ja xor and std sbb mov xchg xchg iret daa lea movsl cld enter push sbb mov jmp inc in sbb scas loop insl mov inc icebp enter mov shr imul xor scas pusha or cmpsb push or cli mov dec mov xchg pop (bad) fiadd fadds or lret mov mov jl mov push pusha addr16 add mov cwtl push push pop xlat cwtl mov dec sub daa mov cld dec mov mov fsubs loope imul dec in je jecxz jg stc fxch mov ficompl les mov je add int add cmc lahf pop rcrl rclb pop ljmp ret aaa test out jl dec mov xor in jl hlt sub inc cs cmc or gs jg dec rcl out and add sub jns es and mov jge add incb addr16 outsb cmp repnz jbe icebp lods lock mov add or cmp (bad) mov jns int mov xchg push xor dec and es int3 inc fsubrs fisttpl loope add imul cmp insl cltd iret xor cmp in clc inc or jae sbb xchg and rcrb adc pop stc loope ds lods lret push inc dec addr16 jge adc sahf popa or push cmp adc pop jmp pop loopne mov dec add js sub arpl add xchg movsb mov mov ffreep lock in (bad) push or inc jecxz jne pop popf dec push into cmp fwait push sti ds push xor (bad) dec addr16 out in rorl (bad) sub cmp mov subl jmp adc inc inc fsin idiv mov mov pop sarl mov in or daa cmc xor daa cmp lcall adc fbstp int push out incb sub adcl out jb mov sbb pop jno xchg jbe repz jl xor aad mov pop arpl mov test lahf sbb push sahf cs sub xchg js inc mov arpl dec loopne imul gs lock pop int3 adcl sbb ja test xchg sbb cmp lret or out loope jns push outsb inc jnp sub mov push jo (bad) sub push jae lret aam jbe lcall or or push (bad) ds xor pop ds mov pop sub cmp lahf mov jmp and pop dec jl sbb icebp std in cmp and setb and es or mov pop popa and imul or (bad) aad push bnd push pop push and mov outsb loop mov bnd xchg cmp sub push sbb rcrb cwtl movsl dec repz fdivs aas icebp cmp jmp cmp ljmp fs cmpsl aas iret and nop cmpsl xchg xor lret hlt xchg push test cmc mov or xchg pop push mov mov sahf jo call pop pop shrb adc loop repz cmp mov mov pushf inc cmp repz call sbb insb test je cmp dec pusha ss fsubs pop sub cli xchg mov sbb sub out movsb data16 insl mov cmp sbb je jnp hlt lret mov sub inc mov stos divl stc cmp push fsubrs fadds or int or or push shrl in pop mov add ljmp jns cmp dec in and iret xchg repnz sbb test daa psubq (bad) in arpl dec addr16 jb jne (bad) test fdivr lea and mov lahf pop (bad) aam dec insl jle inc into jne (bad) mov lret pushf inc mov inc addr16 in lea pop mov insb xor rcll sbb and mov xor ljmp adc pop loopne pop pop pop push (bad) xchg lods inc pop jle mov daa dec mov pop mov push inc sahf or shll add jne mov loop pop cmp lret add xor xor lea fs inc in cmp adc xor sti or dec mov jg fwait sub test pushf ret rcr and add xchg pop inc ljmp addr16 data16 dec pusha (bad) push hlt mov dec mov test mov scas (bad) jge das and in push stos outsb in fiaddl jecxz mov cmpsl mov jmp jns aaa and imul push insb into cltd stos ret stos add (bad) push pop or cmp mov into ja jae (bad) mov clc cmp movsl dec das cmp add (bad) mov into adc sub in mov sarb (bad) xor xor dec sbb popf mov das (bad) iret outsb icebp xlat cmp cwtl fldcw and xor push test mov xchg stos inc inc mov pop lock mov jge lahf lcall lret push jbe push out mov movsb (bad) xchg test fisttp inc clc push add xor cltd lods push push push mov hlt repnz xchg out cmove jp xchg outsl stos popf test xor adc loope das lret ja ja lods in std sbb mov and in clc dec in mov pop add je imul bound inc loop xchg lock mov in lret xchg mov subl into xchg lock lea clc lret lock (bad) (bad) or movsb dec incl imull mov mov pop (bad) in (bad) (bad) int xchg pop pop cli in lods cmp repnz adc xchg repz and sub lret adc std jno mov sahf cld (bad) push push sbb or loope push xchg sub fdivrl stc pop fmuls inc lcall icebp (bad) out xchg icebp dec xchg mov arpl pusha fistl jbe,pn add int3 in sbb ss repnz and js mov push pusha (bad) cmpsb cltd mov or rcr pop xchg ret loopne dec push xchg inc jge jns jmp or outsb xor mov jae jle loopne lods test mov push pop cmc lret stos mov ret hlt add mov dec insb repnz loop aas roll pop push sti outsb (bad) sti fprem test dec dec mov nop dec push mov movsb xor arpl aad lret push loope les movsl xchg jl push lret fisubrl lods push orl mov lds (bad) push in in mov pusha mov ret mov (bad) in dec cmpsb mov in jns jo lods stos out scas jp inc xchg int mov outsl scas or mov popf fstps jne or cmp sarl mov (bad) sbb lods inc sub sbb repz pusha pop push or add jecxz andl cli idivl bnd jne xchg es popa jne dec das or out clc jl aas stos movl addr16 push nop adc jb jecxz mov out sarb xchg fadds adc mov outsl aaa or les mov mov xor xchg sub mov sub mov mov shlb mov inc push dec shrb inc mov sub arpl mov (bad) out testl adc jmp bound pop fiaddl (bad) and xorl jo jl sarl jmp adc cmp jae stc jle data16 and xlat scas cli ret inc pop ret ret mov addr16 test out push (bad) xor lcall les cmp fstpt xchg pop ds or mov mov popf test xchg js out lods push clc roll inc xlat jb xchg mov cwtl xor mov or ret enter inc xor (bad) mov incl adc push test cmc lahf cwtl lock jmp sub xor adc xchg test jecxz dec pop adc or cmpsb sti inc push add xchg jns gs rcl fistpl into dec push icebp scas push popf push in imul cmc jae (bad) and fistpl xchg fs es dec push push inc mov fwait ljmp xchg into xchg add int dec or cs es loope iret loop push int rorl gs stc je sbb jns adc popa mov mov into out and adc js xchg scas sbb (bad) out push add insb sbb in mov mov scas sbb jge and sub out loope imulb (bad) fwait aaa les stos mov int3 mov inc jg mov adc adc pop mov mov xor ss sub pop shlb stos repz (bad) imul outsb mov movsl mov aas mov or sahf dec mov or mov jae pop jne mov ret lea mov mov mov idivb mov scas jae insb or arpl es ficom arpl enter dec fwait lods sub xor loopne mov xor fwait lea add out inc hlt push mov jnp (bad) mov mov outsl pop add mov mov lock int test in or add in or in cmp outsl fsubrs jo test xor fstps mov das repz stos dec mov std loopne aas sub fisubr notb outsb sbb test add popf and mov mov hlt iret sub xchg aam bound push and loopne xchg pop rolb std mov mov clc ret xchg or pop xor (bad) cwtl pop push lock or les adc stos mov jmp lods xchg ds jbe test popa adc xchg add mov xchg pop cli addr16 sub mov push cmc lret into mov adcl jne lcall push call pop or xchg je out call pop mov (bad) aaa fdivs shl sbb dec popf lahf cmpsb push push pop cmpsb jnp stos hlt aas xchg xor cmp popf nop pushf dec test xlat fwait jb out push cmpsb mov cmpsl lret sub sbb pop cmp jmp testl cmp pop xor movsb daa out xchg push lcall in inc mov jp sbb fisttpll jl (bad) pop int3 (bad) int3 pop jb adc push arpl xor bnd xchg out jb out movsb int3 adc mov push out aaa fs jb push sub xor imull ficompl cmp xchg dec arpl mov jecxz,pn inc je jne push popa adc push mov (bad) in push rcrb mov fnop test push adc push inc cld jns movsb add pusha and mov mov (bad) fimul push xchg jae adcl (bad) gs in push pushf xchg daa lods dec lock fwait hlt mull inc mov jne loope (bad) cmp les mov daa or in xor xchg xchg rclb jecxz aaa cwtl jge pushf inc imul xor gs or decb pop (bad) (bad) mov mov mov dec add cwtl xor inc inc mov movsl mov loope or in push pop xor fwait cmp pop dec xor and mov icebp dec hlt and jmp js not sub xchg and inc clc mov (bad) mov fwait mov stos int3 scas xor sbb loop das inc xor pop mov pop out icebp nop sarb scas pop and out xor pop roll cmp or lods jne xchg jb addr16 pop insb or xchg out js (bad) mov mov lds jno adc jb xchg xor cmp add mov jno das mov sbb cmp adc popf sahf inc mov xchg push xor pusha jg sahf cli hlt sbb mov xor sub vmwrite xchg inc cmp jbe cmp test sbb mov ds cmp pop in aaa xor mov mov gs push xor test and pop lret adc fnstcw mov out sub add pop jae pop fist pop lahf and xor mov mov or xchg xlat fiaddl movb push cmp test sti ret adc mov sbbb into push sarb pop mov popf inc cmpsb jae stos push cmp sub (bad) icebp or sub out enter push adc fnsave sub insb popa stc mov imul jns mov sub scas scas pop lret outsl test dec test adc aad fcomi sbb xchg mov adc not adc inc lret imul xor sahf push ljmp in sbb data16 mov push movsb btr jp imul mov out sub fwait scas or lods lods outsl sahf stos shlb adc add cld cmc aaa jg add hlt xchg fist cmp mov aas add iret or pusha mov inc in xchg xchg sbb ja call scas inc sbb sbb cmpsb jg ja push cltd scas lds xchg repnz jg fldt mov add jecxz mov cmp mov push leave movsl push mov in jo int mov xchg dec push popf lret out push cmc mov js add sub sti or push arpl mov jp xchg xor cwtl xchg pop stc and fwait mov fnstenv out out sub or out mov pop je (bad) fldl2e mov xchg mov int3 xchg lret mov pop insb xor orl outsb dec or add jb jo inc dec fsubrs int3 fistp in inc jecxz inc lret dec push jle mov int in mov and xor pop or xchg and mov popf push aas pop sbb shrl push push fisubl lds fwait out shlb push rcrl cmp rclb icebp mov mov sahf out xchg push push inc push cmp xor dec (bad) cmpsb mov hlt movsb adc sub repz sbb xchg inc sub divb mov dec test xor fildl xchg inc out mov aam mov inc jb push cltd into aam xor xchg inc incb dec adc iret in inc xchg sbb add mov rclb pop jbe fisub sbb sub cmp mov xchg es add adc and sbb (bad) mov aas push daa xor adc or pop movsl fmull divl outsl sti and mov test or (bad) jno cmpsb xchg (bad) lea stos inc mov popf sbb mov or adc scas int push sub pop push or popa mov jbe incb and pop out add or and stos ror addr16 or mov mov dec xor outsb mov push ja xlat dec push aas mov adc xchg sub fldl push imul lret mov lret adc hlt xchg push jge add ds scas icebp into lods xchg int ja and (bad) std bound pusha add push cmp dec mov push aad aad daa inc push push insl pusha ss add std stos jmp xchg adc das mov mov push add decb mov clc movsl out push (bad) pop cmc push inc out int3 into xor fdivr mov test movsl sti (bad) pop pop cmp out pop jo sbb fistl cmp sub inc (bad) rcrb ror xor ljmp inc sbb jl into add das call outsb adc pop cltd push mov stos pop add xchg hlt cmp or scas push push pop stos les test lds or cltd cltd popf sbb and sbb xlat ss test jmp call dec or daa dec in arpl add sub mov adc push cmp fistl xor lea ljmp jnp lods data16 fwait cmp push pop imul add pop repz pop js fcmovb push push sub incl add jbe dec or ja roll aam and adc lcall arpl popa test push inc sti cli int insb clc dec das aam and pushf iret pop dec xlat fnstsw inc jb cltd xor xchg xchg push lret or jmp test test cs jae fstpl mov call out enter mov cs fidivrl pusha mov jo test mov test adc in lods push (bad) cmc or jle sbb addr16 jo (bad) cld cli jno lods adc sbb lock arpl and or cmp mov movsb push repnz call cmp sbb imul (bad) dec mov mov pushf out xor jg,pn sub fisub inc ret int push jmp scas in (bad) in jmp fmuls imul pop dec rcrl cld push ja push leave or (bad) mov cmc mov xchg int3 cwtl shr cmp pop and test mov out mov daa push and rcl xchg out xchg pop xchg xchg hlt (bad) xor icebp int3 pop pop pop jmp add fisub jle lock mov xchg outsb inc aad dec bound push shrb fsubrp push push dec add imul mov xchg (bad) out fbstp unpcklps sub mov es jle cmp inc lahf inc xor push int lds sub or jno scas or sub xchg mov jmp mov insl inc mov jge pop add call fidivrl xlat jp dec or andl lret test popf jbe jmp daa gs sbb push and add nop lods pop mov cltd inc pop dec nop ret jge jb sbb sub bound sbb cli ds or push mov popa mov loop mov jns les (bad) mov lret mov mov adc popf jmp dec scas sub cld out pop jecxz lods fstpl xor sti addr16 sub sub cs sub enter or loop pop xor andl jp or int3 jmp mov into xchg mov inc inc lahf mov sub mov out insb pop (bad) ja or aad iret add push jae cmc inc jns icebp sbb sti add push dec inc lods das sbb sub outsb mov xor enter and aas pop mov cwtl rolb jge test int3 insb movsl dec stos jecxz loope mov push adc cmp sbb repnz jns pop out adc inc mov data16 ret (bad) adc cmp cmpb imul imul mov xor xlat cmp or pop sahf (bad) xor push jnp lods es stc ficompl jne aaa pop fadds sahf dec pop inc mov scas sti add sbb xchg or cwtl sbb js (bad) cld xor mov and jb jecxz inc cld sbb repnz or inc (bad) (bad) insl sub adc xor mov pop push (bad) xor repz in xchg mov data16 pop push gs xor add ljmp jb (bad) lahf mov or or xchg xchg and in inc jmp xor jb and inc imul mov jae xor sbb aaa xor mov add add loop aas sbb cltd dec rcll fwait in ret jb or jmp shlb ja push data16 and add inc xor jecxz jge popf cmp or rolb cs js out inc xchg or in imul arpl insb movsl sbb or pop cmp jmp stc ss dec loopne into xor and jle jl mov mov sahf cmp adc scas fsts in xor test push cld stos nop mov jae sub inc insb flds sub arpl ret cwtl mov adc sahf jg addr16 adc out cmc pop xchg cmp mov dec pop dec sbb in adc add in inc sbb mov dec ljmp pop mov push jmp pop jg aaa jge sub js push jnp movsl lds or inc jg cld mov iret jbe lock mov (bad) xor jmp daa lret fadds push jmp stos dec jmp push aam (bad) (bad) cmp cmp bound roll cmp ds xor and adc adc or jecxz iret rcrl insl mov xchg rcll mov repnz pushf mov push mov (bad) mov dec mov bound aad inc jcxz pop pop cli cmpsb xor push (bad) dec testb jmp mov xchg (bad) jno or js arpl xor or pop jo fbld out push loope in adc ja (bad) cmc test shlb cmp pop mov cmp lahf (bad) sub pop jne call cmp out push or pop pop pop fnsave repz mov pop jo xchg mov stos cmp shr mov inc fcmovne sahf sbb fwait call xchg loopne pop pop js xor xchg rcrb xor rcll xor mov fs outsb insb adc (bad) mov subl stc loopne mov ficompl fnsave test sub insb scas icebp add outsb push lret rol test fdivs mov jae mov mov pop icebp xor pop pusha add add cmp das cmpb outsb pop pusha sbb mov and cmc dec inc out jmp dec cmp mov or fnsave movsb aaa loop push outsb sub xchg fild or addr16 neg sbb sahf xor (bad) imulb jne lea cmpl pop int3 cli add rolb adc test dec dec fiaddl loopne and ljmp insb lock ljmp repnz enter inc mov pop loop mov test xchg mov jg push push in sbb mov rcrb (bad) int outsb xlat clc xchg mov mov adc insl push cmp stc es lds and std jl push pmaxub popf xchg mov out add inc mov pusha rcrl xchg lds ds (bad) leave testb popa aad adc repnz jp adc aas add dec xor jnp fnsave cmp movsl lret movsl or mov repnz cwtl mov mov or xor loop rcl jno nop jmp push add inc xchg daa xor or jge push das in sarb inc mov sub fnsave clc imul mov lock insb aaa pop addr16 sti outsb inc std fisubl adc test adc push ds (bad) mov cs ret xchg ret mov xchg sub inc bound fisubrl add xchg cs outsl aaa ljmp push repz cli xchg test dec jne xchg push fdivs lcall mov pop fbld lcall or mov (bad) or popf pop lds jo adcl or sub mov xlat (bad) int clc shl pop lock icebp (bad) fist pop addr16 mov (bad) dec inc lock or cwtl pop mov dec pop push mov iret and fwait xchg inc xlat (bad) test sbb fnstcw in ljmp repz xchg and out mov fs popf mov mov or cmp pushf fnsave cmp add leave imul jae in or xor mov ret inc fdivrs inc daa outsb or dec subb pop movsb loopne inc jecxz add mov jmp std sarb cmp movl push dec sar imul outsl sbb dec cmp inc imul pop adc mov std pop adc stos sub call jmp dec scas mov push pop in decl push cmp adc push shl dec jnp pushf sbb xlat stc pop adc enter sub iret xchg xor sub les jo,pt outsb (bad) stos daa mov add mov mov adc jo repnz lea push mov roll add bound (bad) jge dec stos ljmp and pop or dec ss mov ret add push das leave push pop push stc cmc and ss cwtl shl roll cmp mov jle loopne mov pop mov xchg jl scas jb loope subl add (bad) out cmp mov test adc xchg ja mov icebp imul daa imull add movsl adc jnp,pt dec sti sbb shrb jno and fptan in js iret sub pop add sbb inc sbb pusha inc inc fistl lea inc cmp test fwait data16 xor pusha sarl arpl ret cld adc bound js (bad) (bad) repz sub jne fldt fptan movsb idivb cld pop ret arpl in jecxz lock inc lds adc lods cmp (bad) into insb das push maxps shl imul inc pop cltd dec fildl scas mov dec ficomp mov xchg insl pop push push (bad) sbb inc add adc stos (bad) jae jbe xchg or pop mov movsb repz insb aaa jbe mov icebp lds repz ret inc dec sub fiaddl sahf (bad) out mov sub (bad) mov dec jno cmp test xor mov and jns int add xchg subl movl movsb lods inc stc xchg mov (bad) mov pop adc pop add notl jno sub pop jns mov push outsb fdivs arpl dec arpl loop cli imulb jl sbb fidivl xor out (bad) adc xchg das cmp je mov jb jmp lock or and aas movsb mov test fisttpll adc lea fcmovu imul mov lods cmp inc pop xchg repz xor out mov and jp add aaa xchg mov out cld cmp lcall dec xor test (bad) dec call sbb add sub repz sub pop mov xlat adc fist xchg cmpsl dec out xchg imul push mov stos out or xchg push mov mov fnsave jmp mov inc mov repz add (bad) jnp cmpsl and lods sub movsl sbbb das (bad) or lahf mov insb test or mov mov mov xor inc js xchg or arpl adc xchg jne imul in cmp lods ret push jae cmp jnp jp and adc neg xor (bad) or xchg movsl mov pop cli gs insb add lahf and in push jb and add sbb push in inc mov dec xor jle aaa mov nop jno les cmp inc cmp mov sub mov mov push dec lret push cmp rorl arpl mov popa push insb fisubr sbb (bad) je inc push out faddl aam clc iret or inc imul sbb in stc int repnz jl sti and fmulp add xchg mov sahf push fsubs pop or (bad) frstor scas xor aad int3 xor test add xor jo pop dec aam in mov push test in ljmp dec inc fdivrs nop movsb sub and mov adc jno bound xchg push lods dec movsl lcall (bad) mov xabort movsl xchg fwait inc sub std cmpsl (bad) repz arpl popf xor inc out jp stc cmp stos jnp add and mov stc mov bound cs jle mov stc das push jo test mov nop pushf jo das mov rcll add jno rorl adcl dec cli aam in (bad) iret lds sahf dec testl sbb enter fcmovnu test addr16 or out cmp cwtl dec arpl (bad) fcmovnbe sbb jl ja int3 push adc mov sbb aaa mov fwait into lret cmp cmpsb mov inc das mulb into push cmp call mov jg das daa or mov int pop xor xor xchg xchg jo xchg mov imul lods int jbe xchg mov push cltd push lret mov lods dec xchg pop les inc fxch jne sti or or call outsl dec lods cmp jns xchg dec jns ds xchg pushl mov mov push movsb out in xchg mov lea sub adc pop popf push cld pop and pop xorl adc xchg cld pop fisubr cmc sbb add jp pop pop aad out shrl push mov jmp add fldenv push xchg dec and test sub xchg test andb fdivrl sbb jae std out push insb mov dec in adc into test cmp dec loop mov add ds lret mov aas sub stc aaa and dec mov xor into aad pop (bad) add out (bad) fwait aaa mov test jno sbb mov jo cmp mov inc ds das jns dec out mov sub test and (bad) ss pop je lock push mov enter scas adc cmpsb test pop inc faddl sbb push (bad) lock shlb push test xchg jae adc inc stos jbe lods ds add sbb stc scas jne mov cmp sub roll and ret jle ret lret ss jb mov (bad) xor jl sub or and sub (bad) ficoml lods scas cli fist test pop aad sbb int addl mov aaa aas cmovbe stos lods cmp out jns pop inc sbb add add outsb adc loopne dec dec push jecxz adc cmp notb pop daa pop mov jecxz sar leave loope pop cmp pop test rolb in sarb (bad) and out add lret in pusha in packssdw xlat pop popa outsl (bad) (bad) push scas jge (bad) adc in popa jl ror repnz jge add push xchg ds jmp adc loope sbb lock pop adc xchg adc ss std fwait jl jbe stc sub nop push pop or jnp movb in mov into (bad) sbb xchg push je xor add add jno sub push jno lcall (bad) std int dec loope mov out and inc imul popa ljmp and fwait sti loope or arpl dec mov pop orl xor or imul insb pushf adc out or ja fistpll mov test cmp lods dec push mov int mov int3 inc and test pop push jg adc cmp out out sub in xchg cbtw icebp sub out aas jecxz sub lds jns mov push int3 push test lods out rcrb mov repz sbb inc lods std test loop test insb sub or in daa jp roll xchg adc hlt xchg push jg pop mov sti xchg nop pop mov lock popa jp jp ficomp aam in xchg inc pmulhuw xchg and inc (bad) or mov int xcrypt-cfb cmpsl and or ret (bad) jmp cmc and jns inc imul dec in int mov stc mov fldcw adc lcall ret dec dec xor pop mov sub xlat and in sarl inc xchg jbe mov es arpl in adc mov push sbb inc mov jg push aam jae mov jmp mov divl lret ljmp sbb push pushl ljmp ja,pn dec sbb pop enter push mov cmp out inc lea mov es lahf mov push or js,pn xchg enter adc add inc lods xchg xlat loope insl jne sbb subw inc popa and test pop dec sub sar fidivrl int3 xchg pusha and push addb fistl dec or lahf sub dec or pxor sbb sbb cli adc mov lods jecxz jp or xchg fildl lahf (bad) cmp lahf jle out nop addr16 add (bad) push xchg lds pop subl popa test imul sbb lea cli (bad) xchg lahf cld adc pop and out gs mov decl mov sbb fdivrp pop xor and rcll push mov inc pop into in add inc fstl pop cmp xchg mov pop mov inc mov and inc push and mov sti pop push outsl (bad) xor lcall mov xor loop mov xor pop sub inc mull (bad) cmpl mov push push pop pop mov jge sub xor fwait pusha repnz rorb xcrypt-cbc cmpsl push pop mov adc pushf movsl out test imul push iret outsb and xchg push in sub mov sub xchg dec (bad) pminub lahf mov movsb popa sarb in idivl mov outsl je xor pop es adc push fcompl mov pop cmpsl xchg and loope iret sbb test addr16 iret aas jae cmp or jl xchg xchg sbb cmp popa sub or aam pop push push cmp (bad) mov ds mov dec sub fisttpl mov stos scas cmp hlt loopne sahf cmp inc mov popa nop add sbb push enter (bad) ljmp inc xchg add add fs popa rcrb add out js adc gs (bad) xchg push movaps cmp xor or jns jns insl rcrb js xor dec mov cmc xchg pop rcrb jecxz sarb push push xchg loope idiv push ret scas jle push outsb pop enter iret lods cmc insl push popa repz enter xor cmp das pop popa sbb les xchg aad or jno jbe and icebp imul or pop xor push aaa inc imul mov sbb and ffree xor xchg cmp inc jo ret dec lods out push lods pop repnz jnp imul rol lods jo jnp and cmp push mov je,pn push or jno inc loope arpl cmp sbb inc pusha sbb ret loope mov sarb mov mov dec mov jg out loopne cmp mov mov sar outsb mov push loope mov arpl adc dec fs stc push jo jb add cwtl mov or out jle sbb mov or mov or jae push (bad) iret pop test lahf sbb outsb subl fcmovne adc lcall fwait cld push pop int int3 aas lods jmp xchg out push stos lcall sarl lcall ret outsl mov xchg ret sbb or xchg fcmovb inc ljmp movsl mov xor mov add out clc testl jbe or and cmp nop pop push dec sbbb cld mov mov ficom mov ror scas push (bad) dec test sub adc mov sub iret (bad) adc cmpsl iret in mov pop mov imul pop push into sub jg cmp lret mov or jle jb loope or aam aas adc and imul add mov adc or jge push mov dec mov bound mov xchg push iret test dec mov mov inc ficomp popa (bad) jl sub stc inc daa jle dec ss ficom jge cmp push (bad) adc in test inc mov rorb out icebp xor ss out push outsl movsb inc lret xchg add fdivl decb push mov mov negl xchg clc jbe cmp inc mov jmp scas and jge cmc outsl rclb or adc stc mov jae and in add adc int3 xchg xor addl jnp pop leave mov xor fs or test add or inc mov (bad) cld bound jb push nop adc scas imul aaa mov sar push lret sub fidivr xchg xor in cmp lods sti jo mov test pop (bad) dec mov sub or xchg aad xchg dec sub aam xchg imul pop inc (bad) (bad) push into inc add ljmp and cs insb mov mov cmp (bad) pop test xchg dec in mov cmp jg xchg loope movsl cwtl repz xchg push push jnp (bad) xlat shll inc das pop out lret jnp test sub rcrb pop dec ja insl push int3 mov (bad) popf cmp cli xchg cld push jg in imul addr16 in jae mov (bad) add sbb out pop xor int mov pop inc sbb lods jne lret cwtl test pushl movsb add mov hlt enter fbstp fisttp pop sbb cmpsl mov cmpsb mov movsl jg mov sbb je cmp add stc (bad) out nop out sub out lret (bad) pop lds jnp jb sbb push jbe fisttpll and js add jb jb scas addr16 jnp int3 cmp (bad) enter popa iret les (bad) std gs mov or movsb call sub xor mov inc mov cs jno adc fcompl cmp jbe sub and push lods out pop add and pusha movl xor aad xor ret popa mov cli or ror mov pushl cld and hlt mov jmp jae les nop ror jns or push xor aas (bad) cmp jecxz cli push pop jno incl jbe popf cmp mov gs pushf (bad) (bad) gs push cmp les jp and or popf (bad) add lock jle cmp fadds (bad) mov leave cmp xchg xchg sub sbb push data16 aaa ljmp fchs in iret cltd sar pop jp mov mov xchg aas cli mov daa or xchg pop lret mov (bad) xor sbbb aad ret ss jecxz adc (bad) xor inc int or jae pop test fsts pop or leave ret adc out and fnop or add (bad) adc mov (bad) push push xlat popa adc inc cmpsb add scas sub jne push bound cltd lcall mov push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret lahf cmc lods shll cmp adcb js (bad) (bad) jmp lea jmp enter mov test out sbb clc test test push dec jne mov mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp lahf push scas shll cmp adcb stos lahf fcomps add fcomps mov sbb jge dec imul std inc cmp mov aam sub mov dec loop (bad) ljmp pop xchg test fstpt mov (bad) xor push jne mov pop ret cmp ljmp (bad) mov lds sar bound hlt pop push out les pop inc icebp dec fisubl mov movsl mov (bad) mov adc arpl fisub pop pushf xor jb mov movsb sbb cwtl enter popa xchg (bad) shlb pop xor in iret out mov inc imul clc ds xor jbe push (bad) lret sub cmp dec jae xchg xchg pushl mov (bad) stos (bad) mov xor movsb pop add out cmp std push (bad) or pop rclb sbb mov (bad) int out fldl2t call sbb pop movsl movsb loopne xchg rorl test adc jg stos je in inc sub (bad) repnz push jbe popf push shr cli mov xchg lcall iret add xor sub and (bad) (bad) inc cmp mov les popa loopne in xchg push xchg pop sub in cmpsl push cld dec xor xor sub rcll stc lret cmp adc call or out imul pop inc js xor jmp jnp jg xor and fwait mov sub add ret xor inc test and (bad) ds mov xor or xor xchg mov popf cmc mov je,pn cmp imul add ss popa mov lret inc mov std sub and push fdivr inc cmp call stc sub rorl push sti mov cmpsl popa fisubrl cmp fs icebp mov jge mov subl mov or aad jb fnstenv (bad) push ja jge rdmsr push popf push and loop inc ss sub int3 inc jae jp gs ror scas push sub add sub test popf mov jns add js arpl xchg rcrb jno fildll loope dec aaa jle push gs add (bad) data16 xchg in aad jmp lret lods sub pushf sub xchg mov xchg add and (bad) jb mov fs ds out movb pushf jecxz dec cmp popf dec xchg sub (bad) sti mov sbb enter xor mov mov inc inc imul int3 aas mov (bad) dec sub in movsl js fisubr pop std xchg (bad) in push test mov out xlat cld ljmp lock cltd push mov or fbld push test dec in jle imul lcall mov mov sub movsl ljmp dec or ljmp sub int3 sub jmp mov fmuls ror jae mov cmpl inc pop rorl aas outsl jle cltd sti aam mov int3 push sub mov xor test stc popl mov push js sub js shlb stos fs xor sub push fsubl push insl mov jg sub fcomps sbb cld lahf mov ljmp into movntps mov into data16 jne and sbb push sub (bad) aaa popf pop xor mov jge mov or fstpt scas notb ljmp pop cmpsb mov inc mov inc pop push cmpl das xchg sub adc pop jb popf loop fdivl js mov rcll xchg fstl xchg mov arpl loope and dec arpl rclb lret xchg lcall mov ret mov xchg or sbb scas loope in jae xchg pushf ss les push inc sbb xor sub xchg adc push fsubr jno lods cmpsb out cmpsb pop in das stos icebp insb xchg jbe fwait scas (bad) in adc jg inc aaa rorl xchg mov xor loope sahf lock cmp out push (bad) jae cmc icebp lods imul ffreep xchg jnp push pop scas adc dec fwait xchg xchg jecxz mov cmp aam imul push push jae es (bad) mov cld sub dec push inc push test lods mov sub inc int3 cs repz test jl push cmp fnstcw (bad) icebp repnz xchg in arpl popa lcall pusha xor xor (bad) cmp outsl out mov (bad) idivb int call ds push das mov mov inc stc stos sarb dec fsubr fsubrs decl add or dec faddl cmc stc ljmp mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 sub add shl inc loope mov popf cmc int lret lods aaa repz xchg dec out clc notl mov pushf cmpsb xchg dec pop mov mov aas or rcrl lods adc xchg std dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret sbb pop sbb pop sub loop jae adc xchg mov enter adc jle ljmp mov fcomps ljmp out adc out pop jle cmp push pusha xchg push lret enter jns (bad) push sarb out sahf sub int3 cmp xor mov inc sar les xor pop mov sbb cltd ret dec ja adc jle es inc arpl aad insl insb mov or cmpsb rcrl or jnp adc inc xchg mov scas std xor loop rcl clc fcmovb add (bad) and dec faddp sub outsl mov adc (bad) ljmp icebp out insb jg mov xlat cli lahf les in test pop jecxz sbb pop aad popf mov xchg pop rcr scas lcall xor popa cld loope int sbb inc xchg cmp pushf mov loop push mov cmp adc loope sbb push psubq push shrb loopne and loopne and out push imul sahf js loop mov sub scas sbb iret div adc push cmp or lods lret movsl pop das jae (bad) lcall insl bts sub inc pop add pushl push xchg sbb xchg push dec in mov fcoml in mov and xchg fldl gs inc mov imul out fistpll cmp loop decl xchg adc push jg aaa sub test pushf sub gs or and loopne adc out mov sbb rorb int jp cmp ljmp push in and ss xchg cmpsb outsl xchg out mov add adc scas in xchg popf aas pop daa fwait add loop xor mov addl fs jae,pn and hlt cli out enter stc (bad) test int3 mov pmulhw mov stos lcall pop add jb and add pop je out inc xor outsl lahf scas mov arpl in int (bad) addr16 bound mov push ja mov jge mov data16 (bad) aam out pop mov bound xchg push aad dec dec stc test inc loope mov aaa stos xchg aas test xchg sbb lret std lcall imul xchg jge mov pop lock pop aad inc sbb sbb mov sti (bad) jmp xor pop out sub xchg mov cld push mov scas add imulb js fisub pop add ja out adc loope add arpl xchg out enter xor mov cmpsl clc hlt xchg push repnz fwait addb pop (bad) mul in call fldl mov sub movsl ljmp fwait bound cmc jmp lcall into nop and and jnp iret (bad) (bad) cmp orb inc xchg push imul pushf mov test lcall in lock sbb push stc and mov in movsb cwtl push and ret lock and jne push add outsl (bad) in repnz mov jnp add or add test pop push mov int xchg pop or stos fmuls adc jno push xor mov push loope or mov lcall xchg jns fwait adc in cltd ds mov sarb add jns push lods xlat scas mov jae cmp aad xchg out and bound jg cmp in fsubr sub (bad) xor inc imul pop xor loop aad ja (bad) push aaa enter xchg ret adc in movsl mov mov inc mov push orl mov (bad) jge xchg mov xchg imul sbbl ret or std jg add stc adc std lahf cmp in pushf jne repz scas les push jb repnz mov inc int3 bound pushf imul pop mov mov pop xor stos subl sub lahf add jo pop mov xor jle sbb sahf mov in iret sarb int3 sub aaa mov in (bad) dec lcall sarb stos sbb fdivrs jno push xor call or nop dec adc jecxz jp in inc int3 cs repz imul iret sbb fidivr (bad) icebp repnz xchg lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp lret out je call mov add jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 enter dec mov fistpll jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 sub add add inc loope mov inc dec std decl ss decl ss decl ss decl ss dec pop mov les sti fisttp ss (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lahf xchg test mov inc cmp adcb test add dec xchg stos xchg loopne rorb stc decl (bad) (bad) mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 enter sub dec int3 jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp enter test (bad) jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp enter push mov fist xor je sbb mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 enter sbb xor (bad) cmp sbb mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lret sbb pop sub pop sub loop inc cmc lods adc add std dec int3 int3 int3 int3 lea jmp lea jmp lahf mov in push cmpsb inc cmp adcb lea jmp lea jmp lea jmp lea jmp enter pop mov fistpll jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret lret test mov add sbb clc test test push dec jne mov out jns or xor std incl adc fs incl (bad) imull std dec int3 int3 int3 int3 int3 int3 int3 sub add shr inc loope mov adc xchg xchg dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lahf cmp push cmpsb inc cmp adcb jmp test push mov jmp int3 int3 int3 int3 int3 int3 lahf fldl push cmpsb inc cmp adcb mov jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp enter inc sub fist xor iret push adc mov jmp int3 int3 int3 push mov push call add ret lahf leave xchg mov inc jae push adcl or sbb lods adc jno std dec pop repnz and fistpll jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lret sbb pop lret mov pop sub loop push loopne loopne cmp out jns xchg fld1 out or inc jae push push push and adc out iret lahf push sub xor mov sbb or inc repnz mov xchg movsb mov mov add pop mov pop cmpsl loopne jne (bad) mov bound (bad) daa stos pop jg push mov cmp jge xchg jo mov push mov out addl jmp mov leave xlat out add ret adc movsl int3 dec pop cmc xor push mov sub pcmpeqb pop mov and mov sub out mov jmp in and (bad) or stos (bad) imul dec call cmpsb push sub mov enter adc cld shlb jne jecxz ljmp pop bound inc nop cmp xor xchg cli movsb and (bad) and fwait sub mov subb xor fimul stos dec (bad) stos stos sbb and in inc scas gs jo jae rcrl sub cmp fdivrs adc push push cmp aas cmc and sub pop loopne jo repz and jno pop and xchg popf loope shrl inc mov pushf mov pop and ja xor xchg push stos rorb jno movsb ret xchg push push in or add jle add mov push adc mov test lea cmp xor adc mov arpl daa push into test cmc out imul push lret lret jbe push insl xchg mov inc jp out shrb pop xchg xor aad aaa scas cmp mov xchg xor ljmp push cmp mov inc cmp repnz mov push in repz dec lahf popfw pop lret sbb ret xor adc xor jg aam mov enter xchg enter idivb sbb mov sub addr16 insl push xchg js push jmp sub pop cmp mov ljmp xor fld arpl push cmp xor mov adc sbb cld aad daa fwait xor mov sar jb push test xorl push cld dec cwtl scas pop out xchg jg jb cld (bad) jp arpl xchg xchg pop sbb dec and ficoml lock cld cwtl sbb and mov jne cmp cmp mov fsubrl pop std lret push addr16 lea mov stos push lcall loope cmp aam fmuls test ficom insl xor dec jle push add ja addr16 push sbb ss add test or mov arpl push out inc xor and arpl jae ret add iret test cmp jne sub push outsb cli xchg mov mov aaa sub jns int dec or or ds lods cmp mov ret test adc mov insl pop fildl cmp mov stc dec out lock sahf xor xchg mov mov adc (bad) lret les inc dec inc lds fdiv xchg and push fmull and lods aas out cmc in mov fildll mov adc add pop add push jl jbe int3 and inc xchg cs push inc fldt pop pop fs jne adc add lock ret mov test sbbl dec inc mov push pop fcmovbe adc xchg mov fbld mov sbb dec cmp daa mov hlt pop push cmpl mov sub (bad) jns and mov cmp jae out mov mov adc js stos sub loop clc pop imul add adc jns add pop int3 movsb and sub push push movsb xor mov jl sub std fisubrl push outsl mov fstps out testl outsl lahf out es adc aad in pushf mov (bad) aam lods fdivs add pop dec pop and movsl mov mov adc arpl mov stos aad pop and jnp xor or insl iret getsec fstpt lahf xorl cmp test push fiadd and sub cmp push insb js notl popf mov stos adc push ret in pusha movsl xchg outsl mov dec xor and out xchg cmc xchg sbb lcall push repz call loopne popf iret sbb cmp (bad) icebp repnz xchg in arpl popa cli rorl xor sub jns sub lea or lea sub pop pusha jbe xor rep ret call mov add jbe mov dec push aam les shll imul (bad) std add inc ret int3 out out cmp in pushf fs in outsb jno lret xchg inc jp clc orl pop test inc and push push into jae and outsl nop aad xchg fcom and xchg push jecxz mov inc or jle inc pop lods or ljmp in add (bad) jle test daa sbb lods fidiv fcompl mov cmpsl pop fstps (bad) lods scas roll pusha fsubrl add js fwait mov jbe daa ljmp sub pop mov inc stc xor xchg por jbe test mov test lcall lods push jbe mov xchg imul pop sbb inc pop in repnz sbb lret in xchg push repnz rclb dec mov mov arpl sahf jmp fiaddl pop inc (bad) std push and sub jbe fnsave cli mov mov mov scas inc inc sbb and inc jae mov pop lock inc int3 int outsl stos fdivl cmc jnp xor xor mov lret loopne test mov adc cmp mov mov jb fidiv lods hlt pop repnz stc int cld test jecxz xor mov jmp inc push sar hlt lahf jnp leave sub out insb loop add cs gs mov nop cmpsb scas test (bad) mov repnz cld into int pushf xor add daa sub shr sahf adc push popa aam (bad) fdivrs lahf pop pop std and sarl shll nop negl jb (bad) xlat icebp hlt (bad) mov push pushf pop mov scas (bad) fmull fsubrl rclb arpl bound or push jl dec lock mov sar inc dec cs inc lahf mov xor xor das jbe sub stos lods in xor (bad) cmc push fcmovnb inc sbbl fxch pop sbb fldcw push mov add mov cmp cmp mov xchg ret rdmsr insb xor push lcall aaa push cmp test xlat in sub cwtl xchg sbb addl pop call pop sub ret push and into jl mov in jne outsl dec into bound mov lods inc sub jmp sub xchg fnstenv test mov mov call in dec imul fsubl vmovdqa insb insb dec aam rcl lcall add jnp jne mov test push aas lods or stc lods xor pop fmulp repnz and cmpsl gs mov (bad) or data16 enter and xchg push (bad) jne sub les insl loope push subb repz test movsb fildl js pop ret cmp dec lret add in data16 push xchg das ret cmpsl mov je fsubrs pop dec add fdivl mov ds mov rorb (bad) cmp xchg sbb aas lock movsb lahf push push insb inc sbb lds rorl (bad) fistl mov xchg fiaddl push test addr16 push inc push fwait jmp outsb mov test addr16 imul aam jl xor fdivl mov cmpsl mov cmp xchg jb cltd or scas dec outsl cmp xor cmp adcl dec rcrb jne sub sub inc outsl cmp dec pop xor add es or sbb dec sti push aad test xchg sbb aaa ret xorl mov sahf cmpsb nop test in push add pushw in dec sbb repz in push mov aad cmp inc dec call inc fldcw sbb jle pop sahf push loopne sub jecxz inc (bad) loop push push push mov dec popa in push popf mov mov xor mov imul lods adc dec and mov and lahf stos int3 or dec (bad) and lahf ljmp xchg lods movsl cmp leave mov mov adc ja jle mov das insb call push in lcall xchg lds mov in mov pop jae push orl (bad) push mov loop test push (bad) mov repz sbb out and sub les aam fwait mov mov push gs adc lods loopne xchg jns cmp push out nop aaa push inc mov mov scas fcoms cmpsl divb call popa std mov movsb xchg mov and cmp add pop dec in add jb in call adc xor ja out mov fldt test sub mov cmpl pop cmp cld pop pop push ja mov dec cmp es sbb adc mov in mov fwait stos or (bad) mov das jge xchg icebp jg cld lds push orl imul into aad daa dec add dec das (bad) sbb lock dec inc rcrb push inc es or outsl inc xlat add mov adc fcmovb push out or bound add repz jbe mov ret dec out sbb fstps stos dec es and lock pop push and push je mov stos cli mov pop adc or clc ljmp jae icebp loopne es add cld and testb clc sti fildll insb push pop iret push repnz cli das gs xor and gs fsubp mov rcrb lcall test lea repnz clc xor xchg arpl pop add jae cmc jnp idiv pop int mov daa jno dec stos sub xchg mov dec dec dec ret push fst int3 inc daa btr mov and push pusha in out add clc lcall or adc pop rorl adc (bad) ljmp mulb xchg int3 push mov clc mov stos iret xchg pushf je xchg and push jg inc shll push js inc dec xor inc xchg xchg out rcll rolb pop adc xchg add fcoms (bad) arpl or push repz aam stc fstps dec cs mov ret jle xchg bound idivl mov xchg jge jle sti int out addr16 aam leave data16 cltd sub loopne pop cmp scas addr16 add int3 inc iret push push test inc jp outsb enter xchg mov xchg lods cmp mov and pop cmp imul jnp mov andl out mov adc and mov loope ret mov in mov cmc popa adc shl (bad) jae cmpsb rcrl push push pusha xchg andnps or xchg pop push je jg xchg cmp pop arpl jno sbb les js popa movsl dec pop xchg sbb jae mov dec add xchg pop jmp insb adc push cs cmp dec push mov sti inc leave outsb inc cli mov sub pop mov push scas add jb mov adc loopne sub repz xchg and in enter xor es movsl jp cmp (bad) paddd pop sbb mov adc cmpsl pop cmp cmp jns push mov shrl out or movsl adcl gs push sub push subl ficomp (bad) pop mov push jle add cmp in test jge mov sahf (bad) out lods push push hlt mov pop scas sub mov dec icebp mov mov scas notl push jecxz jecxz mov xor cmp push add jae test lods mov push mov lar in fidivl sub or push repz lods movsl sub (bad) fbstp mov in into rcl inc sub lods mov scas outsl (bad) aam mov fs and outsb xor scas je lret ror sti cmpsb scas push ret loope in xchg rorl fdiv mov mov mov cmp loopne incl nop in jb lret jmp mov popa pop repz xchg xchg (bad) fisubrl lods add mov add or xor mov xchg icebp repz lret pop mov daa call imul jae (bad) mov (bad) ds loop daa mov aaa mov lea sbb dec jne push xchg movsl jb lret adc ret push clc mov mov rcrb jecxz mov mov mov out inc outsb mov test (bad) adc movsl arpl test xchg and outsl and test insb daa xchg adc and cli idivb sbb mov in xor mov jns pop mov ds cmpsb lods popf xchg (bad) outsl add negb adcb cmc stc imul pop in add into xchg call adc mov lods lea pusha jb sub fidivr inc repnz imul int cld (bad) or rorb push xor push sarl push dec lcall mov and inc mov jnp mov int3 (bad) pop insb pop sub (bad) test push or sar repnz ret pop rdpmc pop (bad) mov jb pop pop aam fisttpll push pop jmp and mov icebp xor cwtl jno push sbb jp sbb xchg mov jae fnstcw nop jb jp imul inc test jg nop popf outsb idiv pop cmpsb push (bad) xor xchg (bad) cmc or out andl test leave dec jp xchg adc jo std sub daa cwtl jnp mov dec out mov fistpl inc mov fbstp cmp mov orl sub or pop and aaa push shrl sbb movsb push lock xor pop push push lea lcall jecxz pushf insl imulb loopne pop sahf and cmpsb adc stc pop jns movsl mov aad lock cmp cs sbb in or and dec gs mov xor adc push push and adc mov xchg push pop jmp dec insb dec jg add add std xchg out jno ljmp loope int3 cmp jg mov jp outsb cmp rol xlat addr16 divb or jecxz mov push ret dec pop inc lret add mov pusha fisttpll in push add xor push lock jb into lods (bad) popl call aaa jl or fadds fidivr data16 outsb data16 (bad) dec push lds mov lods add pop pop arpl ret jo xchg pop repz movsl mov loope hlt add cmpsb pop scas dec mov rcrl outsb scas movsb mov push mov lock lret sub lret dec aad xchg aaa movsb pop je sub loopne jae movsb adc xor and lea mov xor call mov jmp lret sub lret dec aad xchg aaa movsb pop je sub shrl xor and lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out mov cmpsl mov adc stos lahf enter movsb xchg xchg jns push lea sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg out mov stos idivb mov mov idivl cs ret shrl lock add xor mov sub pop nop jbe xor xchg sarb mov inc mov xchg test xchg in xchg loope xchg ja inc pop int3 cmp cli mov in or or cld lods xor jecxz out cmc xor inc test pop xor mov add mov ljmp les (bad) rcrb sarb shl sarb iret sub movsb sahf bound lea mov pop fld1 pusha jge mov lahf inc rcrl mov sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 xor xchg out mov mov rcrl cmpsl jne mov sbb cmp icebp int inc sub sbb lods xchg jbe and push sbb pop call cli arpl pusha pop outsl (bad) icebp add sbb mov in push in hlt in mov test aad xchg les push add inc (bad) jne in (bad) repnz stos notl ds in in jmp inc lods fidivl xor in pushw push cwtl and sbb popa mov das ficom push lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp pushf rcll mov fmull inc js mov mov test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xor xchg push mov imul jbe add aam test cwtl or jecxz inc push repz push outsb sbb das fsts pop jno cmc les jge aam cmpsl dec add fldt inc insb ret dec test mov jecxz jmp mov pop mov jb dec fiadd jo cmp fs pop (bad) jbe (bad) xchg pop cmpsl sub xor xor xor daa and imul inc sub mov sti in mov test fbstp xchg pop xchg repnz aam mov and mov and fwait (bad) scas sbb scas sahf fmulp lea xor leave jae jge jbe cli mov push call jecxz cmpb testb pusha and add push clc lahf add stc sub mov lock lret les or insl addl (bad) nop jmp leave inc dec fs stc push and cmp cld idivb add into push and push stc jns mov push pusha lock outsb jnp mov gs fs mov repz inc lahf cs lret leave mov adcl mov mov add and pop jo (bad) xor nop cmpsl cmc enter xchg rcll and rcll fdivs enter sub data16 sti push xchg cmpsl arpl daa push jo and cmpsb jne xor xchg mov icebp cmpsb cmp cmp outsl shlb test dec xlat loop cltd cmp shr push cmp ss mov movsl dec cmp ljmp arpl roll jge dec test insl mov cltd mov in out mov xchg adc or test adc mov pop push movsb add push in cli out or mov popf es into lods push pop call push popa js ss ror or int3 inc fimul in fcoms pop mov sub or cmpsl cs iret jb jg addr16 (bad) cli xor push push insb cmpsl mov jne mov fstps (bad) dec sub mov test jg mov insb lret cmp push (bad) ja out push mov xor std dec (bad) in inc sbb lret or insl in lds bound mov ficom mov adc int arpl xor adc dec jmp jo mul xor leave inc inc les xchg or push sub das imul dec and cwtl sahf (bad) out leave ss popf nop (bad) lods testl adc sub adc add cli sti and cld je and das jle (bad) out jmp fnstsw sbb cmp and (bad) fldt call (bad) sbb push add call push push hlt sub push adc aam (bad) push dec mov (bad) mov xor fldt imul daa xchg lds mov xor loopne cltd sbb mov mov repnz out sub je dec fcompl sub das lret clc pop push xchg pushf jg push mov int3 addr16 mov jp daa push nop mov in test pop fwait sahf pop cli daa jbe add into icebp fldcw pop dec dec lahf dec xlat sbb add arpl fbld inc xchg mov xchg xor mov adc cli call pop shrb fwait loop popf pop or sbb and (bad) insl icebp loop adc and stc sub lock (bad) jno xchg jo mov mov xor mov mov and out fcoms xor jge mov mov fsubrs adc test cltd add (bad) adc sub hlt and mov lahf mov push lret push outsb mull mov ss xor pavgw imul xor fbld inc ret cmp movsl jno lea aam outsb roll jns push rcrl xor sub sub idivb xor gs in jae push inc adc fsub xchg xor cld es cltd (bad) dec popa sub dec movsb add adcl loopne lret loope lahf roll (bad) std aaa enter aas push dec pop jnp mov xor sub xor mov cmp cmpsl or ficompl sub dec fist pop pop hlt in addr16 push into dec aaa cltd jg arpl in loop je (bad) xchg add fistl je cmp adc pushf cmc mov daa or cmp dec clc xchg mov (bad) sti xchg mov out cmp aas (bad) add ss cltd jle lds jge insb sbb fdivrl push sbb push pop cmpsl shrl mov xor imul repnz jbe jp jbe lahf jle shr fwait lahf inc ds outsl out in add rorl xchg hlt add ljmp xor clc divl push test cmp popa jl add loope hlt inc mov popa push ret fndisi(8087 cmpsl xchg xchg testb (bad) (bad) movl add das das jb (bad) push and sbb push lods jmp add mov (bad) push les out roll fs iret pop xchg dec push fnstsw xchg (bad) mov xchg sti (bad) and and xchg cltd xchg inc add push xlat sbb jbe adc adc bound sub fsubl mov push mov or inc arpl popf jb sbb aaa and jno stos pop clc rcrl fs outsb xor nop cmp popf dec sbb daa bound inc notl cmp mov mov stos leave add aaa jns insb mov fdivrp pop mov mov mov pop clc xor movsb rcrl imul push xor mov or shlb fsubl outsl lret insb imul add dec sbb movsb fldenv dec lds mov stc cmp xchg cld (bad) mov (bad) mov (bad) xchg das aad jmp out adc mov ss fcompl add sub repnz pop cmc sub mov rcrl das (bad) lods je add xlat mov sti movsl hlt sub int3 icebp xchg jbe mov loop sub pop push bound or push mov cltd jno xor shlb mov icebp jne pop aaa push (bad) lret cli mov jmp popf push (bad) mov sarl mov cltd jb jnp or inc mov xchg jp js repz mov jno imul fiaddl lds jmp daa movsl (bad) dec pop fwait push pop (bad) xor jae imul test xchg movsl mov and icebp xchg cmp mov mov inc fist or stos rcrb and jmp xor jmp jb and cmp dec mov pop imul les xchg popf fidiv xchg jns mov xorl sbb dec hlt xor (bad) inc sbb jnp add aas jecxz sub pop inc add aam and or push loope mov and lds repnz push sub and lahf or adc into fnstsw jno mov enter or adc mov mov cltd call mov aam mov mov add or loopne jmp imul in mov insb (bad) hlt push mov cli in jo mov jmp mov xor lahf sub mov mov ds jle lret inc jno adc nop mov pop cmp jp scas xchg lods insb inc divl loopne mov push fldl mov adc jnp and imul fisub xchg lods rolb shll xor hlt xchg cmpsl mov inc sub mov inc int enter scas add cs cs add ficompl je,pt mov xchg stos or gs pop ja push mov pop js lret pop dec mov aas pop mov mov outsl lods adc cmc dec shl scas mov repz int subb mov pop jecxz test ret jle loopne xchg out sub jl out add or cli push xchg bound adc (bad) int insl push xchg push in mov popf insl mov in mov (bad) adc fmul mov test loopne mov (bad) nop in aas xchg popf pop or mov jge mov imul (bad) push push pusha call mov lahf jb mov (bad) aas ret xchg outsb pop mov mov test mov lcall mov adc or fild (bad) xchg sub insb out stc out lea or es std ficomp push adc mov and ljmp xor mov xchg repnz (bad) enter dec xrelease fdivs jge and imul add es and mov je jno ss cwtl xor push out lods ret daa mov and rorl mov xor mov insl xor jl mov cli out xchg mov push cmp aas mov xchg aad ficom outsl into lahf push cmp (bad) pusha add imulb sahf inc movsl in into inc mov scas adc push dec insb mov pop lahf (bad) mov sbb ja dec mov sbbb imul data16 sub lea adc enter mov inc jecxz (bad) cltd add adc cmp lods pop inc mov insl fsubs mov mov cmp imul aam push jg out sub shr flds rclb sub push push jp dec loop lcall roll add push (bad) mov adc inc or xor scas pop sub mov sti mov jno fstpl add cmpsb dec rcrl adc aas push das clc or push inc jle cmp fwait jo fldcw xchg mov jns push lcall (bad) lret outsl xor pop adc test push add addr16 mov bound inc (bad) (bad) jmp cmp jno pop dec add pop cwtl xor and xlat outsb jnp push sbb loopne or sub test push sub sahf xchg mov gs mulps mov pushf (bad) fstl ret pushf mov jae out pop popa mov rcrl jge sbb test mov or push inc dec or mov jb int pop ljmp shrl je xor pop (bad) in rclb cli outsb mov push or rcl and mov aam clc lcall addr16 and call rcr jne xchg pop or ss lods pop test cli mov fnstenv cmp adc les shlb imul push mov pop xor enter pop (bad) lahf adc mov rclb sti ret jle sub and sub rol ret cmp fsts leave and add mov add xchg js adc (bad) mov push or insb adc hlt push aad sar fwait pop jno cmove (bad) ja divl add inc out movsb testb mov mov dec and sbb pop dec fild inc lcall push repz int out (bad) mov sub ds mov popa jb push rorl clc loop shrb cs imulb stc pop xchg out jno aam lods sub movsb loope push and fs scas add mov jbe (bad) and daa pop fwait popf test lret dec adc test loopne pop inc push sub clc sarl pop sub ss or subl sub or jbe inc xchg jg les adc xor push adc fwait pop sbb cmp loope add sahf dec pushf cmp xchg stc xchg nop vpunpcklbw xor or cltd jmp in inc cwtl push sub push mov jns push jmp add inc pop ret es lea push insb aas xor out xchg ficomp hlt xchg test sub xchg mov push add pop lods and lcall js fwait add movsb adc mov arpl xor (bad) xchg xchg imul cmc cwtl push jmp mov push mov jecxz popa adc insl push cmp stos int jne jbe test ds pushf mov xor push btc xchg mov fcoms sbb popf scas aam hlt arpl hlt fucomp jge push xor out scas lods inc and dec shll pop xchg iret out daa lcall adc pop inc adc sub aaa adc xor dec in push sbb ret push sbb fwait hlt mov clc es aaa push fistl lcall or ljmpw jmp and cmp and dec push (bad) sbbl pop (bad) xlat and mov (bad) adc lret xchg daa xor jb pop sbb dec mov xor movsl adc cwtl js,pt mov cmp xor (bad) int3 pushl aaa mov test xchg cmc (bad) pop fldl ja aad fistl sbb (bad) repnz sbb outsl jns xchg dec cmc icebp leave or lret stos mov fdivp or ljmp in les jl dec inc xchg jnp out jae inc inc fwait mov clc test cli push sbb cmc dec xchg lods xchg inc mul xchg lahf mov fwait ja sbb lahf sti (bad) dec adc popf cmp mov dec jle jp outsl insl je dec rclb aad popf push add lods cld les jns adc adc fsubrl mov test (bad) fisubl fcomip repz mov xchg add push test stos jb and dec je (bad) movsl leave xlat push shlb xchg addr16 sbb rolb pop inc insb pusha pop jg mov test leave pop idivl mov add add stos mov hlt add jo (bad) mov mov pop pop insl sahf lahf mov daa int3 cwtl movsb iret mov pop push cmc popa inc or inc aad les mov add imul (bad) into nop sub leave sbb fbld add aaa pop (bad) ja jl push jnp xorl aam dec jnp and rolb inc jb rolb icebp push sub fisttpll enter sahf mov xchg call fisttpl clc les push and inc xchg das cmpsl lock scas scas mov pop jmp push loop xlat xor adc push loopne cmp iret jecxz xchg ja cmp push data16 cmovge aad in shlb or (bad) dec inc push sbb push ljmp xchg mov push in jecxz ja out es push dec push pop or xchg add sbb cld and mov scas inc xchg jb push adc push dec adc mov xchg push cmp dec jns (bad) sbb cltd das faddl pop mov xchg xchg push loopne je jno (bad) imul popf imul jge jnp mov pop xor adc jmp cmp xor pop mov mov pop inc push in (bad) mov xor jle data16 mov ror mov inc sbb imul repz ljmp int jg pushf ret pop das push sub (bad) mov or cmp xor cltd jno cmpsb adc loopne mov add arpl cmp rcrl andl push mov scas out std xchg mov mov divb in lods push push inc dec pop jecxz inc xor fdivs sub mov dec scas jg cmp mov pop loope out push outsb mov inc dec lea je inc pop push int sbb or dec sbb sbb mov add pushl adc pop (bad) test jl lcall xor mov lock rclb es divb sub pop in out push xor stos pop or jns fiaddl lcall sahf repz push mov (bad) sbb jnp lcall add fisub daa pop mov (bad) outsb lods fbld pop sbb jne rclb ficompl mov or inc mov lods sbb jl std inc jle or xor clc push loopne fstpt mov iret (bad) adc adc mov push adc ljmp int3 dec aas repnz push pop sub adc leave cmpsb pop in fdivl fbld out mov jp lods pop add cmpsw mov rorl sbb fs adc push enter dec ja sbb or and jl or add sbb (bad) popf int mov insb and dec mov sarl (bad) les lods adc fnstcw xchg inc (bad) push leave or test cmc imul fdivs ret sub ret jge sbb insl roll xor (bad) add add lods (bad) fidivr xor in xorl inc jg and das sbb sub jnp push dec ret jecxz inc test mov bound stc pop arpl xchg aad pop data16 push mov mov or jne addb xchg sbb push mov test cmp dec pop mov jp popf dec in mov lcall push jmp mov adc mov push test loopne (bad) leave push fildll push sbb jle pop test jno (bad) ja and call ljmp and dec or int nop rorb xor pop jmp hlt sarl adc push int fs mov mov fsubrl and adc or mov aas mov insl fwait test or out les jne (bad) or adc xchg jge jge jns fnsave sbb sbb imull leave pop insl pushf sbb les repz jmp es js lcall gs ljmp pop push sub mov and shl dec mov roll mov dec cltd xchg pop dec lods mov push outsb add mov mov fsubrl imul test dec cwtl notl call fisttpll std insl or (bad) mov ficoml xchg adc in in leave rorb cmp dec ficompl sub insb aas xor rclb jge data16 jbe popf inc xor jbe,pt push add mov jne mov aaa test xor dec jecxz inc jecxz mov iret lock into xor das ds xor push sub rcrb insb sbb aad mov popa push push inc pop ret add rorl sub outsl lret push or xlat mov xor dec push dec clc mov xchg mov inc inc push movsb addr16 xchg cmp mov xchg push cmp sub xor xchg (bad) mov cmp out xchg test xor xchg sub fcoml inc pusha adc test mov les cld xchg sub xor or pop insb notb out out cs daa cmp pop pusha mov test mov lret sar rcrl pop lods in ret fwait pushf add cmpsb aam repz xchg ds orl aaa pop stos out outsl add jp rcrb cwtl fucom (bad) idiv push stos mov jb nop and ss lahf dec mov adc into (bad) fisub mov fsubl lahf loop pusha xchg fnop mov sub dec (bad) not loope jae cmp push push cmovno mov addl pop out in and mov xor lret xchg mov ror rorb ss push (bad) jmp and inc push sbb cmp icebp stc insb (bad) cwtl mov cli cmp lea std mov sahf fbstp jge gs cld xchg xchg lea jl aam int3 jns je jmp (bad) cwtl or out and jecxz lret adc pop adc mov push jmp sub add and dec jmp pop icebp and mov mov rolb dec dec mov (bad) (bad) imul sbb jno (bad) imul cld sub xchg int3 mov jb test sbb add stos inc jmp mov push (bad) pop dec sbb iret adc jne adc test inc cmp jns xorl push adc movsb pop outsb and pop cltd push inc pop and loope and les xchg aam xchg xchg pop dec (bad) fwait cmp and sbb and ja jne xchg jp push (bad) divl dec in mov arpl dec loope gs pop pushw xor and mov sarl and mov jmp mov push hlt adc out dec fs js call mov cltd push push je dec jmp sbb std cmc cmp xor les cltd push or cwtl loop and xor cs xlat lods ficom dec daa std iret popf (bad) jae lock dec and lret cli popf les (bad) lods inc jg mov xor mov repz es cmpsl mov cmp popa mov les cmpsb inc xor test lret mov mov and jecxz push mov mov daa mov stc jl shll fsubrs sub out push (bad) mov daa pushf imul mov mull inc xchg dec inc (bad) icebp mov pop sub aam mov mov xor mov ja sbb jl xchg inc ret stos je icebp cmp mov ret inc push out testl mov addb xchg call arpl mov inc rcrb jnp mov aaa or pusha xchg xchg subl dec jp lret ss cmp ljmp repnz cmp inc ret inc and sub jns test sbb test cmpl xorl cli dec daa add gs loop push push pop loopne cmc (bad) pop push mov xchg fdivrs or test xchg pop adc adc sbb and push pushf imul jb mov dec scas sub imul xorb lcall (bad) mov loop test jle xchg or lea jp jo push pop das xor xchg xlat pop out mov pushf fildl out imull cmp mov jnp or ds test and adc sti and repz fdivr movsb (bad) push je add dec decl inc and je int rol cmpsl jmp mov sub enter sub sbb or mov jo in lret mov cmp push imul lcall fcoml sbb cmp dec (bad) (bad) out lcall push xchg nop mov sbb aaa add mov sub ret scas popf repz pop lods add fisttpl xchg aas push lods rclb cwtl inc cld std mov sbb iret push iret pop into sbb out frstpm(287 dec add jo xchg ja xor fwait inc imul push enter mov dec or inc dec (bad) leave xchg repz fmuls movsl mov fldl js int3 loopne push cwtl cmp sub into and mov ret or xor jmp rcr test (bad) or mov stos imul bound xchg (bad) out popa ficompl jb js fisttpl pop out call inc js cmp xor imul loop ficoml dec fucomp gs xchg jl sbb or cli sti scas sbb sub jo inc fwait pop and in scas outsl jbe inc stc decb call stos (bad) mov out aad sbb sbb lods inc jo aam push jge mov jge inc (bad) mov in fisubrl mov repz test inc inc and cmpsb dec jns cmpsb jnp mov popf add jo adc mov aaa mov gs xor lret lock lahf jmp add cmpsl negl outsb xchg xor pusha sbb daa (bad) sub lods jmp mov out outsl bound add movsl jge stos hlt xor insb ficompl ljmp test (bad) adc out cltd lahf cltd lret loop sbb divl jmp adc pop lret dec jbe (bad) loopne loope mov xor iret mov push aas cmpsb and push pop xchg cltd lea sbb xlat and daa movsl or jo stos in (bad) or scas adc mov loopne mov fidivl or cmp iret bound jl pop xor and daa aad cs or fldl movsb aam dec (bad) cwtl add lods jb pop xchg jg xor xchg test in sbb push out (bad) outsb aad jne loope push sub fwait pop jge adc inc sbb pop pop pop pusha mov mov xchg je mov cmp mov jno scas stos mov icebp xchg add xchg jge xlat mov or mov jmp lahf pop xor adc icebp cmp mov xor push xchg mov aam (bad) mov xchg or xchg push pop dec js mov mov inc daa (bad) popa mov mov or push push les inc outsl push or xchg dec mov movb or cmpsb ret sub xor fwait pop pop mov cmp or sub mov or inc (bad) adc leave cli mov jl fcom cmp push in sti or cmc and lret cmp rcrb mov (bad) insb xchg or pop int3 sbb std add (bad) push imul pusha and pop mov leave imul dec shrl jmp btc or cli adc sbb push lret lods leave test movb xor cmp add shrl mov nop jle mov mov xchg ljmp jns adc test mov inc adc adc or clc mov jno lods fs sbb movsb in and out add ret sbb (bad) dec (bad) jae mov jns jmp jno mov jecxz stc out xchg dec scas jo lods loopne mov adc cli scas idivb (bad) push (bad) xor repnz je movsl or push xchg xchg adc int sub mov mov clc xchg dec out inc lock sub mov ja (bad) mov std das add data16 push mov insl dec outsl dec ficom cmp adc pushf xchg (bad) addr16 inc out ja push cmp clc loop lock and mov inc or aam hlt lret jae sbb xor repnz scas xor ljmp push pop (bad) mov pop movsw jmp cmp ds mov add (bad) cmp jl fwait je negl scas and cwtl push dec add mov scas lret mov push mov imulb xor fwait ret (bad) pusha into xchg in xor add cmpsl (bad) mov xor mov adc es inc cmc add pop ret cmp jl daa push inc cmpl pop nop jbe add pop mov fmull icebp and add aam mov dec sti frstor (bad) shrb push sub lret enter or fdiv in dec mov push (bad) mov add xor pop std int aam push push cld sbb mov pop mov call je pop cwtl (bad) push jge mov cli stc lcall adc cs in jg xor mov sbb push stos pop inc cmp (bad) insb rcrl mov fcompl push mov daa sbb adc insl out xlat push add add mov nop rcl pop fistpll jp mov rorl mov leave lods loope add (bad) xor (bad) ds scas imul pop insl cmp mov sbb jbe pop cltd orb adc ljmp cli dec andl add bnd test lret lds mov inc iret dec (bad) inc cmpsb cmp (bad) rolb sahf jge sbb ljmp popa vmwrite or rol outsb andl pop adc fucomip es xchg lret cmpsl (bad) in test jmp add popf adc ret popa push sbb sub push into sbb pop mov xchg cwtl inc inc mov inc adc cmp loopne jae nop bound scas pop adc xchg or jl aam loopne push nop jne cmp mov jmp or fwait lret data16 xchg addr16 mov inc mov lods mov push push gs imul in mov mov enter xor orb daa sub cmp jg push sub cwtl lret sub and mov ret push cld pop xor push lods js jb adc lret (bad) add cmpsb idivb sbb rcrl stos sti sub mov es lcall sbb aaa fisubrl push inc inc jno loope lds ficom push push and mov cmpsb dec ret outsl and insb cmp xor aad cltd dec repz test mov mov fstl mov or aam icebp leave mov push call incb dec or lds inc sub or xor sub mov fildl pushf push cmp mov rclb dec cli pop or xlat roll cs sti xor mov sub inc and js and xor dec adc jbe and inc pop jge xlat mov jp cld mov adc mov pop or fidivr aam test xor xchg sti sub sub cmp cmp inc ds and push pushf mov test mov pop inc dec or xchg xchg or xor and cld cs dec sub js insl or test sarl xor (bad) fs mov mov test or cmpsb repz dec mov in out stos movsl add (bad) xchg adc xchg and inc loop imul inc enter jo push jnp jge xchg (bad) nop mov js lods fnstenv sbb addr16 pop popf std test aad gs loope stc data16 cmpl mov or sti addb loop xor sub into or push jno mov nop adc and outsb dec push (bad) and pop (bad) addr16 test lret aad cwtl mov out sbb adc fs (bad) dec push dec inc xlat ljmp xchg sub popf dec xchg mov outsl dec cmc inc cwtl outsb je sbb and xor dec mov jns into push stos mov cmc cmp iret sarb stc sbb adc sbb cltd xor pop push (bad) cmc add ja dec gs aam pop repnz add mov pop add and mov out jno stos in arpl mov scas xor lock ret fcmovne je adc inc loopne adc jp pop in and mov shr jne bound out hlt repnz test mov lret das push add (bad) repnz arpl adc je (bad) xor or sti jp mov add jle mov cmpsb push nop js push xchg test fmull sbb aas mov cs loope adc inc fs insb cmp mov les mov jge into dec mov imull jns addl jmp xor pop pop dec scas (bad) adc popa fwait lret pop mov mov cmc dec or aad sbb xor adc inc inc adc arpl pop jecxz adc je push or push aaa lods loopne add in pop and push mov xor dec dec jae xchg pop lods cwtl sahf xchg and jl sub add adc test movsl mov cli cwtl or cwtl lods mov cmpsl cmp pop sub out fistl shl shrl shl sub loop lcall mov (bad) xor fist cmp mov mov lahf in popa mov xor shrb adc (bad) loop add js jmp adc cmp cmp push in (bad) test pop sub adc dec dec dec fs mov sub fldenv dec mov cmp dec scas xchg pop fldenv popa lods arpl jns xor sbb mov mov daa pop jmp pop cmc imul jo push mov (bad) cmp out jo jbe dec jg subl push js sti cmpsl (bad) add pop xlat sahf push lds sub push test mov test pop cmp fsubl add cmc lret scas sub aam sub mov popa dec int cli pop inc or dec sarl push jle add push mov mov push cli dec lahf adc pop jnp mov sbb lods aam add outsl (bad) stos fmull push es fidivr jecxz cltd repz test addr16 and mov and (bad) xlat out fs push or xlat xchg aad (bad) add mov (bad) pop pop ja out les vunpckhps inc ret sub incb inc adc jmp or inc adc clc mov mov lods xor nop push lods aam and pushf in lahf js cs add fdivrp push fs adc lret andl sbb insl pusha inc xchg add and rolb outsb pusha lret ret push push cmpsl pop sbb xchg cmp outsb xchg adc or cmp jae pusha jo test lahf mov push add sbb inc mov inc cwtl xchg add js pop sbb xchg in sbb adc or jp xchg test xchg add jo xlat jno xchg sub lret imul mov dec inc (bad) std (bad) es mov fsub cmp out and insl cmp mov jae pop inc pop outsl mov sahf push cld inc push sbb enter mov mov lods mov cs stos xor fldt or sub mov fldt mov call rcr jecxz loopne jg lods inc push mov (bad) flds push and icebp push icebp sti pop call push inc sbb test dec icebp lods cs xchg add jecxz pop sbb jo sub loopne test and adc xor fstpt xchg adc push ja lret cwtl imull jmp xor insl sub shll mov push les xor in dec lds sbb inc repz mov adc mov xor xchg lock add push cmpsl adc push jbe and fnsave dec ret cmp sub fsubr adc xchg out (bad) in sbb aad mov je or lret dec cmp (bad) xor mov xchg sti movsl or ret std insl mov int3 ljmp xorl xchg cmpsb push inc push in cmc (bad) leave iret dec test fidivl pop fisttp jl jb mov rcrl push inc int3 lods fcompl lcall sub cltd xor (bad) movsl or test push (bad) stos or inc xlat jp imul pop mov icebp icebp mov cltd mov push pop lock and int jmp mov mov xor mov add or fcoml inc leave scas rolb pop shrl leave mov fildl mov inc popa mov stos jge xchg add cmp (bad) icebp mov mov lret cwtl (bad) and xor nop ljmp movsl mulb mov jae cmp call jno pop lret mov fildll je push test lcall sub sbb pop mov mov sbb xor out popf (bad) xchg cs push out loope dec xchg jo inc mov cld push sub sub cli add lods mov add adc sub jne lods pop inc repz fstpl gs leave xor jg push js insb jle scas enter inc sti push sti adc inc xchg data16 sub (bad) in pop mov scas jl call xchg jmp or insb add mov pop pop loope xor jecxz add push mov nop push or sub inc cmp hlt pop add int and xor dec rcrb clc adc movsl decl iret inc clc inc ret and jmp jg add arpl sbb mov out pop cmp in (bad) (bad) mov and in fwait adc adc push sbb sub fisubl ret in adc and js xor repz int3 mov rorl sub sub in pusha push cmp addr16 fs jecxz xchg lea push enter push ss popf sub aam fildl or ds (bad) mov inc in cmp jmp jg sbb inc xor aas ficoml jbe jmp lods test pushf mov jns repnz (bad) (bad) adc jbe jg mov xor push cmp iret cld push mov idivl sub lods pop cmc les lds mov ret hlt fdivrs gs insl adc jne push jmp cmc movsb sbbb fdivs inc out aam ret mov ret sarl add clc inc shl push mov sub popa fdivrs mov ret adc and lods fnsave push fstpt pop lods cld push mov adc test mov mov or mov hlt ret pop jns xor mov rclb sub out shll dec mov lcall jo jmp fist sub mov jp cmc in movsl pop jns mov adc out lock cmpsb icebp sar (bad) mov mov mov inc add (bad) idivb push shrb repz or in dec cmp xchg xchg xchg inc sbb hlt sub js bts push arpl outsb push sub jne xchg xchg andl cwtl xor lcall sbb movsb jns ret and cmpsl inc push cmpsb out pushf fisubl gs adc pop dec and sbbl ret xchg and (bad) adc dec pop adc mov dec repnz mov add in dec pop inc inc xchg pusha mov int3 jecxz jns call sbb and jne ret out xor (bad) rolb popf and cmp repnz enter xchg divb and jae xchg sub test inc sub jp pop shrb xlat or loopne scas cltd (bad) sbb lea test into sbb add imul in (bad) repz ret fldl2e mov sub push and imul jns add leave or pop in lods cmp pop divl pusha dec xor add js dec bound and int cmp sbb out popf pop jo push inc (bad) xor pusha add mov or xchg lahf xor lods push test xchg cltd enter dec jo and fimull cwtl sub jo mov pop (bad) jmp add sahf xchg (bad) clc into xor xor call fiaddl inc cs adc mov inc aad or pop inc repz in ret repnz out cld loop add clc mov jne sahf jecxz sub gs jne pop imulb push mov inc shr adc fsts out mov push jns jecxz outsl mov aad popa (bad) pop popf add mov xor add adc sub pop push scas test mov add dec imul inc cli popf fcomps adc insl into push (bad) cmp ret pop push imul scas mov aam aad and push loop (bad) xor lock jg daa sahf cwtl adc and mov jo and dec inc and pusha adc mov popa and mov push add pop jne scas add mov and lock push loop test into lods inc pop mov (bad) (bad) pusha sub je or sbb mov jnp pop dec xor xor xchg mov scas (bad) arpl sbb push xchg push mov sbb lret scas xchg mov mov push addr16 jne daa testb add pop mov push mov cli and adc fcomp inc add mov rol jns push test test xchg call cmp xor into shlb sbb sahf movsl mov cld mov ret inc ja sbb mov roll loop or insb push imul pushf lods lods (bad) ss jl cmp push xchg sub (bad) sbb int3 es in add dec arpl andb pop cmp (bad) dec iret pop adcl out test pop jp adc scas cs mov imul addr16 cmp mov push and fild cmpsb (bad) daa inc movsl mov arpl mov mov popa cmp mov adc jae stos out push pusha cs adc or scas add mov pop clc js mov sbb jbe jno mov inc pop lahf je stc mov ret ljmp hlt mov mov mov shll mov leave mov cltd xchg dec pop dec scas add int3 (bad) xchg pop pop push aaa int3 inc sti jo sti jne iret out adc fsts es jecxz test and push repnz std jns shr inc push adc rclb sbb repz insb adc inc in in cltd jb cmp jne int3 xor scas (bad) je add negb push mov fisttpll imul jmp in pop pop push mov xchg add mov mov outsl dec mov cs (bad) (bad) mov xchg push dec pop das mov iret mov stos outsl push pushf (bad) xchg xchg sub dec rol sub ficoml test in call fimul ja cld fisubr jb xor popa jb adc mov mov push and push shlb stos lret pop outsb out dec mov mov inc pop jne xchg mov rcr and and mov int jno cmp mov or fisttp sub lea out mov movsl mov xor rcll frstor mov stos movsl and jmp lcall inc cltd and stos aam cld xchg test mov in lods inc adc ret fs pop dec shrl xor xlat test stc jb mov insb rolb cmp stos aad xchg mov iret cmp (bad) bound test adc push gs rolb arpl ja adc js aam sahf push sub movl imul pop add jnp shlb mov call or push and aad stos (bad) hlt mov dec push loop or inc or jbe dec aaa jecxz mov out das ljmp lea mov cmc jbe sti dec push xchg push xchg pop dec (bad) mov inc shlb push (bad) leave lret dec push inc push cld or cmp or frstor push leave add bound adc jnp enter xlat xor hlt cmp mov jbe cmp push jecxz sarb xchg nop imul dec repnz mov hlt iret mov test icebp ret sbb mov xor sbb fistp jno in stc loopne jle dec aaa int and int3 push add rorb stos cwtl jnp test ljmp or imul mul testb inc (bad) aad xchg ret cmpsb in decl cmp das shl sbb push imul jg inc rclb cwtl inc and adc pop mov daa pop jbe xchg mov fisubl seta sbb and (bad) faddl pop mov jae loopne xor shll sbb mov stos aas mov sbb jo lods insl push xchg mov pop arpl push lods xlat (bad) test rolb (bad) mov mov (bad) and sbb cwtl pop adc adc fisttpll lcall aad pusha rclb push test xchg mov cld lods lods out fwait xor sub test jecxz adc hlt dec cmpsl or cwtl icebp add inc repz testb gs dec and add mov (bad) jp sti mov mov jbe cld inc jno sahf dec leave int3 loope lds xchg sahf jl cmp mov repz jns mov out leave xlat pop rcr and pop and and arpl sbb mov sti fmul imul fildll ror jb pop mov mov stos dec ljmp jbe out cmp adc mov xchg lea mov push mov adc ror sbb mov frstor add mov out ret push sub pop fisubr pushf cmp push push mov aaa dec out sub test and (bad) mov push mov pop mov mov out fstpl lret scas xor pop push out in aas (bad) or pop push cltd push test mov pusha dec mov mov pop pop ja or mov jae (bad) jb jno sub fwait pop mov bound test stc hlt pop sub clc xor jg xchg mov xchg insb push mov adc push pusha push sub push (bad) enter mov inc out mov mov xchg es xor adc cmp fs (bad) mov dec mov mov push aad ror test fidivrl push int3 out mov lods mov int3 sbb inc out test mov ret popf leave scas ret pop sub xor in lods mov or cmp xor mov in cmp mov mov outsb add jmp mov push aas sbb incl fsubs jle mov pop and push fidivl fs sahf cld mov jle or jg sub jp push push xchg or xorb push mov aaa (bad) jb je rol inc scas fwait jg xchg addr16 inc jg lret aas pop push push test or pop fnstenv pop (bad) cli iret add mov call test pushf sar repnz ds aad push es sbb mov int3 cmpsl mov sub jg add sysexit pop clc mov cmpsb push cmp jns jmp and fcoms leave mov sub cmpsl dec (bad) xchg push xlat sub call pop movsl xchg jg pop in in lods push sbb loop ror data16 mov stos lcall mov cli dec ret push enter or out shrb or test xchg je insb push push push or lods dec pop cmp shrl or ret and enter or mov fstp cmpsb pushf mov sahf dec arpl sbbl adc in mov add adc inc (bad) frstor daa movsb outsb jp mov leave pop adc movsl sub dec and out aad imul repnz hlt sbbb jp cmp iret shrl mov out loopne xchg icebp add nop int3 mov sbb dec je movsb fldl fiadd aam pop ret inc mov jp xchg insb xchg xchg dec or fs push xlat outsl jno and (bad) mov adc in jg push push inc loop add lds (bad) es ja les cmp xor pop es lret (bad) (bad) stos or jp scas mov (bad) icebp cmp jae jmp mov xchg and (bad) std sub int3 jno sbbl fimul faddp pop jnp cmpsl lock pop lret xorb or pop int pop aad bound loope xor clc push xchg dec or fnstsw das jb insl or sbb stos mov fnsetpm(287 fdivl and in cmp push cs push jno sbb psubsb dec (bad) hlt scas scas inc pop stos js mov xchg idivl (bad) cmp mov popa and and xor push xchg out pop test pop push outsl (bad) jle pop mov call loopne out lcall lret sbb jno push fsubrp mov dec add addr16 mov repz in sbb scas sub sbb sub idivb mov gs inc jecxz sar xchg ds popf mov std or addr16 adc fnstcw add cli ja pop std jle mov and sbb and shrb sbbb std inc pop cmp loop (bad) cmp adcb xchg push sub push (bad) push inc inc ss lds jo adc cmp add fisubrl xchg xchg jg or shll fwait movsl push popf adc add mov dec ljmp jg daa roll xchg es jl (bad) pop shrb push pop loope addr16 mov ret sbb bound stos add xor aas rcll cwtl fisttpll scas sub insl mov jg loope out aaa cs sub loopne jle sarb push cwtl (bad) lahf jo dec xor dec bound mov loope addr16 dec push call dec in idiv jnp sub mov (bad) loope jmp int3 in dec fdivs adc mov mov pop fnstenv mov xchg and jnp mov mov or adc bound cmp loopne jl adc xlat out out jmp xlat xor std fcmovnu lcall adc and stc lods pop lret sbb mov or lods loop or lret push pminsw or rcrl push inc mov push push lcall sbbl cmp mov xor mov (bad) push mov sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 xor xchg sbb bound adc out rcll loopne les mov hlt mov xchg xor (bad) jbe dec and sub ret lods inc lcall fucomip mov out jmp jecxz mov pop iret push lret jmp fs shll enter lea mulb adc xchg and sub je jne insb sahf negl mov fisubl loop jl mov mov mov inc xor dec mov jno lods lds and fild jl repz fstl and jnp push jbe cmp pop in ret jge mov fadd and aaa adc lock dec xor insl dec (bad) in notl mov sub cmpl test sti repnz pop imul les fdivs rcll sbb jle mov push out pop cmpsb cmpsb lcall pop je fnop push and push lods loope or icebp nop ja cmp lret pop nop sub (bad) jae sbb mov ret xor xchg jnp insb cmpsb ds adc int or ss cmp push notb test inc jge daa jg shlb leave push mov shrd scas enter shl js lcall jo,pn dec jne mov pop push mov mov call gs jae sbb inc ror aaa ds jp adc cs or jbe mov outsb lods sub dec sub xchg mov push pushl icebp cmpsb cmp (bad) adc mov leave mov mov xlat movl out jmp or ss fstps in cmp fsubs or les into dec pusha inc icebp xchg sarb add sub sbb repnz xor shll scas gs mov sub xchg ror vminsd or cmp insb imul and aas inc mov adc hlt testl sahf inc sub jno das inc mov cwtl sbb imulb (bad) scas out sub loop mov adc push and divl cltd popa (bad) aaa test mov bound cwtl outsl sti dec add push xor adc mov cbtw fwait mov add mov mov movsl xor or (bad) jo mov icebp pop sub icebp fisubr call add cmp push (bad) cmc mov sub or jle loope hlt pop pop and dec mov outsl push push fs adc jg repnz and xor stos add sbb push loop jae movsl movsb popf enter lahf xlat cmp inc (bad) sbb stc lods sub movl aam int rcrb sub mov and aad add mov nop bound shrb xlat clc pop mov in lods popa push fmuls inc shl or xchg out push mov fs lret pop or or stc movsl jo adc daa jns lcall mov mov mov xchg in (bad) dec call pop test push in sub sub adc ret pop gs cmpsb jne iret movsb loopne push notl xchg mov ret fisubrl rcl push jb xlat cmp cmp push fnsave sbb push adc push lea faddl ja js inc mov dec jp (bad) dec test inc cmp xchg push push jb cwtl pop data16 lret js push xchg inc pop in add mov xlat iret xor sbb mov stos pop arpl mov scas into sahf jg mov popf push repz fnsave test aas jg jecxz pop je cmp pop std outsl cli and push pop jb jmp inc mov outsl jne sbb in in and dec and xor daa fmul in dec imul fimul adc add lds sahf cld je sbb call popf jne jns inc cli mov jmp je leave xchg sarl jbe fwait scas (bad) cmp add pop cltd xchg inc jp mov int3 mov scas fstps repnz xchg in in fnstcw push insb inc cmp in push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 