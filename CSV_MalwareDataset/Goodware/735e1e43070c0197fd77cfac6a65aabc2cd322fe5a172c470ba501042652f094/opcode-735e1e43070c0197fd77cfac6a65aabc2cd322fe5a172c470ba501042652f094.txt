push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp out jl stc inc mov cmova xchg hlt pop ja pop sbb out pop jne cmp ss push push mov (bad) insb test cld or push xor xchg pushf push sbb mov mul out adc outsb and out sub daa das ljmp lock fistpll fwait cmp out popa mov jno jnp out sub mov repz shr inc test enter (bad) loope jp pop out cmp pop les jmp or sbb loope nop daa insb out testb pop mov push jns mov out mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp daa fcomi mov adc jecxz push or pop test add sub mov test jmp push pop pop js mov push cmpsl call mov out or es lret test sahf and fldt js and loop mov clc dec insb clc jge mov inc push pop cmc aas ret mov dec sti add cmc rorb mov mov fstl pushf xchg inc xchg inc das dec jbe adc adc dec jmp mov movsl lret pushf inc les dec testb out sahf mov leave push xor cmp cli sbb gs popf lock xor or imull nop out sbb jg loope smsw cmp xor pop push je add jp dec cmc sub in jnp imul in movsl lcall push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 cmp daa pop loope mov jno dec jle adc pop sahf in sahf dec test add repnz gs mov out adc mov jg (bad) inc xchg jno inc and mov stc addr16 xchg fs popa enter push jge pushf mov loopne push test push outsl cld add jbe test ror test scas jbe push mov sahf jg push cmp mov jecxz iret loopne or or outsb (bad) int3 shrl sub clc dec mov xchg leave lock pop in nop and (bad) mov xchg iret stc jge rorl adc sti je lcall mov movsl mov test and insb push cmpsb stos fsub clc insb fwait (bad) push ficoml in mov sahf test in test sbb arpl mov add mov arpl pop or xchg pop (bad) xchg stos sbb (bad) push clc mov xchg inc and stos repnz cmp jp cmp into push xor mov push and pop and lret xchg shr adc test jo xchg loopne test lcall push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jo inc fwait and lods jbe movsl dec pop cmp bound xchg popa xor adc add add adc add movsb daa mov movsl adc pop hlt add add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl in adc cmc cmp loopne adc mov ljmp (bad) mov mov xchg xor hlt andb push jmp icebp popf cmpsb xchg jns inc imul mov adc cmp test decb rolb xchg dec pop xlat xchg aad mov push imul jnp lea ret test cltd jns pop aad inc inc scas jbe idivb orl cmc das mov lret ds scas cmpsl xlat notl fbld sbb push lods xchg push or enter loop cmc pop in sbb repnz (bad) in faddp cmp leave repnz adc emms imul dec or test sbb mov push scas stos mov dec dec mov outsb add in aam mov inc mov cmp xchg push cmp in cltd decb cmp xchg stos jno push cwtl or outsb cltd test out gs dec into ljmp (bad) mov call jg pop negl dec jp mulb inc and or jb mov xchg sub dec mov adc cmp pop xchg dec (bad) hlt pop push lds xor in or fwait insb bound inc loope jp (bad) inc and push sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp xchg mov maxps adcb push xchg fidivr fidivr xorb test outsl push hlt ja sbb xor pop lock sub imul push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp faddl cmove out pop inc fwait jns fs jbe mov aas sbb xorl stc sbb call ffree push mov push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp ret xor mov maxps adcb or das jg xchg cwtl sbb xchg roll fisub rorb xchg scas xchg mov loopne mov bound fstpl into ljmp stos pop mov dec out push or jmp or push movsb fwait negb mov out fimul sub and ja jmp in test cmp mov pop stos xchg and addl dec and mov mov mov in das fistpll insb xor push aad add jl jmp (bad) push movsb mov in stc inc (bad) mov cmc or out cmp jne mov popf aam add leave xor xchg jb mov cltd imul cltd popa cltd cs pushf xor inc pop cmp dec test (bad) shlb das mov mov icebp jnp mov les repnz std insl xchg out flds jne nop xchg int push mov int3 stos pusha add jp dec loopne xor je shrb outsl sbb enter xor mov sub dec mov aaa mov jp fild xlat ret jbe jmp iret cmpsl lea xchg xor cltd aam lea repnz lahf scas or nop push gs jbe arpl fldl pop aam mov or (bad) mov cmp std mov xor lods pop jo adc inc rol in cmpsb aam and inc pushf jmp jge js or lret hlt or les inc mov lahf add sbb xchg push test out (bad) dec or inc jge adc arpl cld push imul sub icebp push push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp out xor in push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret cmp add and sbb imul (bad) pop pop popf fisubr fiadd jbe mov outsl push test pushf and xchg aas repz leave push mov push push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret cmp dec icebp and mov mov jg bndstx repz xchg stos mov (bad) sub lods (bad) out jno and mov mov loopne push mov mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc lea or mov jno dec jle adc pop sahf in sahf push pop add repnz mov dec call xor in cmp (bad) sarb fstl popf fildll push mov mov hlt and cli push nop scas (bad) adc xor xor scas mov or push jecxz sub sahf jg jle test jne push pop mov stos cmp add int3 je fsubrs cmp dec mov lea dec cld xchg xor lods inc inc loopne int3 movsl adc mov cmp pop mov jae loope mulb int3 dec int mov test mov and pop lahf jle in mov pop push push fistpll stos push and jge inc adc imul mov adc push add xchg into daa jnp push sbb (bad) jecxz aad int3 inc negb ds cmp push inc (bad) xlat xor adc incb push bound in call inc jne dec pop adc shrl call stc in sub jmp xor pop sbb test add fldl xor jnp call out mov ret (bad) dec test push (bad) aas clc fstps (bad) das xchg subl jge out in js (bad) fsts cmpsb into pop outsb adc loopne pop push insb pop cmp stos push lock xchg out push ljmp (bad) xor inc lods hlt lcall movsb shrl cmc inc je aas jmp pop sbbb sbb jb das data16 jle jns pop jge mov dec daa cmp push sub mov rolb inc xchg or leave pop stos xor adc js movsl jmp fsts movzwl xchg and daa cs mov xchg loop or push sbb bound loope,pn sbb sub sub into inc movsl loope mov ss push mov jp xchg inc inc or push or adc out push inc call mov (bad) setb mov rclb pop out mov addr16 fidivl dec inc insb xchg scas nop js repnz mov mov popa add call jo (bad) (bad) shlb sub cmp push cmc push fisttpl xor xchg lods popf pop cmp stos mov popa hlt ficompl adc insb sti inc sbb push icebp sahf mov insb iret aas fildl fcomps push repz sbb sub jmp xchg call jp push pop dec inc icebp adc inc cmpsl jno icebp clc cltd sub push hlt ror xor sub lods (bad) inc clc xchg fldt jno xor insb pop sub adc lock xor pop lods xor mov aas lret xchg jmp mov mov mov movsl test xchg cltd cmp sbb add and push orb data16 (bad) xor lea icebp pop je punpckldq push (bad) adc repz push shrb rcr jle pop xor fs sahf leave mov push repnz adc pop fs sarl push add dec dec push int3 ficompl inc (bad) loope daa sub jns icebp mov mov mov push scas xchg mov clc (bad) mov mov cmp cmp mov push cmp mulb in dec sbb (bad) push xchg push cmc aam cmpsb imul repnz add in in call nop int3 test mov xor push insl fsubrs outsb (bad) mov dec jge jmp test push sbb jae or inc lret enter call add inc push mov mov fcmovne mov adc jl jno loopne push lock cmp sub cmpsl icebp loop mov pop sarb jnp aam lods bound lods stos fwait or adc jno sarb (bad) leave into lods aam mov jnp out mov data16 testl cmp pop (bad) addr16 push inc lods cmc mov add dec das push sub mov rcll outsb repz dec (bad) je xchg pop cmp icebp loope xor arpl pop inc aam xor cmp sbb shrb iret mov aas sub sbb clc mov pop pop rorb clc aam push pop repnz call push ret and loop imul xchg cmpsb clc sahf mov pusha inc shlb mov sar mov xor out sub fwait ss aam xchg sarl enter or (bad) fbstp jno cld mov test in ja push lea aad mov inc enter inc adc std sbb inc enter (bad) mov ljmp loope call ficompl add (bad) loopne adc pushf (bad) mov mov dec (bad) jg push push lods push addb pop inc and and jp fidivrl repz (bad) fisubrl stos ffree xor subps daa mov mov push adc dec inc and xor ret dec adc mov pushf cmp fisubrl xor inc cmc pop add std and aam cmpsb enter push test jge add inc adc jmp inc inc (bad) cltd out pop mov call daa xchg into cmp aas ret in fwait mov in cld pop lock dec jl ljmp lock lock std les cmp mov je mov mov adc fcomps lods inc jo inc iret xchg jl add clc jne ss sbb and push sub mov (bad) dec ret or push jp and or lea mov and jge push xor out mov lahf inc push mov cmp pop imul jle and cmp mov arpl pop movsb nop dec push adc ret jne es test xchg mov xor std sbb xor mov cmp sbb mov or sub (bad) (bad) aad nop arpl xlat in lea arpl xchg adc bound inc int add sub fistpl add scas pusha and and cmp addb fcomps adc ds int3 dec jbe mov pop lock push cmpsb cmc xor cli hlt pop test cmp test jl push jecxz ja cltd push sbb xchg jne add insb xor cli jne xor pop pop mov dec out push sub cld mov clc pusha mov xchg jmp mov push add daa aaa sub out mov jge cmp movsl cmp stc test mov test cmp mov jle sub es mov (bad) movsb jle xchg out mov rclb icebp cvtdq2ps hlt cmp inc push jne ds (bad) lock dec ret jae sbb mov mov jg inc repz mov inc iret movsb sub imul out push mov sbbl dec push out insl push test aaa bound inc mov daa popa mov mov xor xor out loopne ja sub mov loop xchg cwtl addl xor repz scas mov inc lret xchg mov sub nop test idiv cwtl cmp iret inc test inc daa mov test add xchg cmc lcall adc aas mov sub adc cli int3 xor fs xchg ljmp pushf push test divl fs (bad) hlt repnz out out xchg repnz movsl imul push cmpsb jp jg mov into repnz repnz das pop xchg hlt rcll mov mov sub xor push sub xchg pop lcall adcb adcl and pop jp push pop mov div mov cmp jae inc outsl rcl mov popa cmc inc daa jmp dec add pushf xor xorl pop test jge or cmp clc fcmovbe loope dec mov dec add jb sbb fisttpll sub dec (bad) mov pop repnz inc mov xchg outsb cltd push inc dec mov mov scas jmp outsl cmc and pop jmp dec inc dec xor int3 cmp inc out mov in fcoml lret int iret aad sub enter cmp or out sbb mov (bad) xor in cmc push es jp mov fucomp lds fwait orl (bad) in loopne sub push inc jle cmp dec sbb sub xchg jle and std icebp (bad) mov add pop sbb jle mov pop scas out std mov repnz gs pushf fidivl lods hlt ret fcmovnu jo,pt cmpsl or or decl inc ljmp xor js popf out lahf ljmp jns sbb adc mov inc enter xchg cmpsb mov add jl mov gs or cwtl add and aad ss lods and (bad) ffreep imul imul gs sarl pop mov insl rcll fidivr pop sub cli pop and nop cltd or or ss add jb aaa sbb fisubr or ret idivl mov jns add popf andl mov cmc aam sbb push sub rcrb jae and xchg adc fmull stos push aam xchg fnstenv mov push mov pop add cwtl or inc mov (bad) cmpsl cltd jecxz dec mov push fsubrl jae add mov fidivl iret dec arpl mov stc popa and add lea dec hlt shrb jae data16 icebp sarb imul cli loopne dec push std mov xchg jno scas daa xchg (bad) mov ljmp vaddsubpd in xor lret cs and test jne lea push sub adc pop fs test sub or and ficomp cmp into jg test (bad) sbb lods in and (bad) and xor fildl sarl mov adc mov mov aad mov mov scas push bound lods fiaddl cmp rclb xor dec loope ds pop push in cld mov jae rorl jnp cltd jnp inc dec pop iret shlb (bad) aam movsb mov lods push jmp inc cmc push jnp xor inc xchg out and hlt sahf push adc cmp fistl mov cmc pushf push jmp inc push std dec cmpsb push push scas je jbe lock sbb cmp cmp ss jno repz (bad) mov lock mov push in ret cld xlat loop inc addr16 fs repz aad (bad) jae dec mov cmpsl les jbe jbe ss cld and enter fimull cwtl push insl jne and aad push popf sbb mov jae movsl je out ret xlat imul and xor xor mov test and pop addr16 fdiv or test ret mov je rorl jne jb jp repz cmovbe pop mov sub sbb aad sub sbb and insb popa call cmpsl cmp mov scas dec mov popa (bad) jae bound (bad) dec imul stos adc or fnstsw out jmp loop fstl bound leave ljmp nop inc mov pop cltd (bad) rcll (bad) (bad) mov fdivrs mov das mov xchg call mov push cmpsb lock xor loopne imull mov add push push es and fild xchg pusha adcb js mov cmp ds cmc fsts cld aam xchg sub push jecxz gs faddl int3 lods add fnstcw into sbb mov and add inc jae scas lret xor or ficoml dec sub lods in jecxz dec ljmp jb adc sbb into in sbb test xchg cmp stos cmp nop sbb ja xor push fsubrl popf aas outsb inc push push jg push jne push cs mov jp popf inc outsl add adc ret inc ljmp push mov sahf sub mov inc adc lret rorb push in cwtl loopne pop orl mov inc imul jmp mov fmull repnz hlt or orb fnstsw hlt sub ret pop xchg cwtl into mov push push mov cmp ret inc push (bad) daa shr push mov (bad) xrelease push icebp call sbb cmp sbbl mov dec adc mov lret insl lods sbb fs cmp iret mov add js js lods and clc pop in push pop shrb imul push imul xor xchg mov cmpsb rorb outsl repz and loopne mov jecxz inc ljmp mov add and fstpt mov hlt push or test mov and stos mov out cli (bad) (bad) (bad) or (bad) addr16 and vpminsw orl fidivr fs faddl ljmp shll push jne not divps mov mov jle jle mov lea scas inc mov xor int3 jns stos mov popf jle pop fiadd sbb enter inc and sbbl add sbb nop icebp pop add lods dec mov es leave (bad) test ja movsl (bad) fwait sub inc ret mov cmp je mov fisubl mov into cmp (bad) arpl pop lcall (bad) and movsb in orl cld rorb cli mov mov int aas jb faddl pop add inc inc pop add lods jg sbb push mov jmp cmp jne out aaa inc int push js iret mov (bad) jmp test pop fdivl jp mov test out mov mov dec sbb (bad) dec dec pop dec push xor stos mov xchg imul dec inc cmp pop jne ficoml scas (bad) jnp mov adc push mov jmp mov pop push popf mov negb xlat xor cmp scas push cmp dec outsl pop sbb jmp sbb pop or call daa xor sbb jl leave (bad) push in mov pop or sahf ds rclb insb jae xchg xchg pop imul mov add mov addr16 test sbb or inc lahf add dec push mov cmc inc and and enter test mov push mov jl cmp dec lahf dec cmc das mov adc hlt pop inc mov sahf or fcmovnu dec in loopne mov lods sbb add cs insl test mov ljmp mov pop je xor (bad) mov (bad) xor inc inc in and jae int3 mov scas pop test xchg call scas cmpsb icebp mov cmc cmc push adc mov lock and push push xor arpl add aaa mov dec pop fstps out js sbb test jns mov test cmpl scas dec xor das outsb add add add mov sub and xchg and test out jbe lahf jae mov inc cltd xchg or sti pushf scas out lods sub xchg insl jg in stc decb xchg adc cmpsb jl sbb mov test std push out js insl rorl sarb fisubl mov mov daa (bad) loope push testl aam sbb scas xchg jle out push mov sub mov cld sbb cwtl test pop mov mov xchg or xchg and sbb loopne (bad) ja mov mov jge add std (bad) cmp out leave jnp pop ds lret jb mov push jb dec or xchg cltd js iret lret ja inc mov icebp negb push dec cmp and xlat daa scas or out fcompl mov js cmp sahf dec xchg jno dec xchg int3 cli cmp cmp dec out mov adc xor lret sub or adc cwtl pop mov xchg loope jb sub pop nop (bad) mov xchg sbb dec pop add lods inc dec bound popa (bad) movb ds pop test sub mov ds add test mov movsb movsb push push pop repnz dec add jae jns add pop inc and sbbl lar add mov push sub push imul repz sub (bad) inc xorl movsl leave arpl fsub lods push icebp jae addl inc inc dec rorb adc inc jns jae mov dec out sbb popa stos push icebp lods outsl aam xlat in popf fcoml or mov int3 inc inc mov and mov xlat test pusha (bad) frstor pop dec dec outsb nop push (bad) add dec loopne sub test push lds dec mov pop rcrl jnp (bad) hlt jbe jnp push dec dec dec sbb add loop xchg (bad) std mov das sti push mov aas xchg enter jp xor imul xchg jb push add sahf dec or push mov movsl out jns lret jl scas in dec xchg gs inc cmc jbe push pop and bound xchg push mov scas stos int3 jle and out loop push xlat mov mov out (bad) mov ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp les push ljmp sbbl (bad) (bad) mov jno ss repnz adc inc push jle xchg insl cmp adc push or lcall dec sbb dec outsl mulb loope push mov loopne push test push outsl fbstp sti in cli lds cltd hlt mov fstpl test jae test sti cmc jmp aaa cli push pop add scas xlat icebp fwait lock roll ret addr16 in fidiv in push xor sbb cmc icebp or sti inc (bad) repz push push dec sbb out cmpsb call insl pop dec int ja,pt jle sti inc faddp push add gs orl movsb mov not cld pop imull add out lds je push or push push mov test out outsl lret add push mov cmc pop cld repnz rol out cwtl mov inc mov stos out xchg (bad) mov lods adc dec sbb in mov pop pop movsb aam in loope jecxz inc dec (bad) lahf cmpsb fisubrl movsb adc mov lds stc sbb xor shrl cld inc sub clc jo mov adc lea es xor cld add lock adc fadds sar dec add jns jge (bad) ficom stc adc add or xlat xor test inc add or inc add icebp or iret pop sub mov (bad) bound jmp xchg push xor xchg jmp jne and jmp add sub testb mov or sbb ret in jmp jne fwait xchg ds pop xchg xor push (bad) xor mov rorl in fnstenv mov xor shrl ljmp cmpsb pusha pop fstpt jle out test or stos test xchg insb jge sarb out pop arpl imul aad into or enter xor aad push fdiv and popa out cmp lret adc mov xchg mov adc (bad) lret or daa call or in push and mov mov add sbb (bad) js jmp inc xchg dec mov cltd les mov cltd pop lret mov mov ret je pop fistpl inc fimull lahf jnp lds adc das mov xchg ret push push les pop jg je out sbb sahf pop and (bad) sbb rclb xchg push pop adc sbb jge sbb sub inc push xchg gs xchg xlat popf sub pop pop outsb out shr mov mov sbb or loop jmp push (bad) sub mov mov mov pop cs push aam popa (bad) xchg push inc xchg stc push mov sahf mov push mov arpl out pop push cmp mov bound add ljmp in mov lds jno stos xor je test cmpsl test pop sbb es inc and insl adc ljmp mov movsb jecxz push mov pop adc test lds imul sub xor addr16 mov and (bad) pusha cmp sbb inc test push out cmc mov stos das xchg inc sbb xchg dec and mov test add jae xchg and dec and mov addr16 (bad) fistp cmc jge stos xchg push inc adc jo sub or xchg pusha test or mov mov xor jbe sarl inc sub xor mov insb dec (bad) testl inc mov (bad) cmp xor inc testb fildll mov xor pop imul ret cmp test test int (bad) in cmp and inc lret lods mulb test add mov push xor xor jno stos loopne ljmp xchg aaa daa lods pop enter inc mov inc ja scas adc imul cs pop jnp xchg rolb popf (bad) stc std push inc jp sbb popa inc std pop inc pop loopne adc mov adc xor sbb jns sbb cltd add movsl xchg rolb (bad) pop lret jo add (bad) (bad) lahf or pop dec cmp and das jle insl and movsl arpl sub dec sarl std inc jbe insw inc push pop push mov dec fnop adc adc test data16 (bad) xor sarl mov dec ja shlb mov pop cmp icebp jae xor hlt mov dec add mov add imul cwtl inc sbbl add stos cs pop shll sub mov je bnd or jns push repnz test mov push dec cmp iret test bnd mov adc add jno adc scas adc orb mov inc inc fimull adc aas fwait mov nop loop out sbb push fcmovbe push lock test mov lods insl push (bad) mov (bad) mov mov rcll nop aam adc aas push icebp cs fwait cmp std notb mov adc adcl aad push jge mov ltr lods lahf xchg cld pop push cmpsb xor insl mov (bad) aam les clc (bad) mov ljmp or mov push test sub testl mov addb repnz hlt jo mov cli dec mov sbb xchg cmp xchg (bad) lods into hlt push fadds sub aas inc in aam and jns xchg add mov movsl hlt cmp mov test mov (bad) fs cmpl sbb cmp dec lcall jl bnd mov iret aad add (bad) xchg lods outsl xchg bound jl jne cld (bad) push insb cwtl push cmp cwtl xlat jg pusha sbb stc dec dec mov xor sbb ret push adc jae pop mov cli aaa js add aas and js push cld pop push icebp xchg cmpsl add sub mov mov pop lock push addr16 cmc dec sub stc lods inc sahf or xor (bad) cmp ret sub mov leave cs xor or icebp jl test lahf pop dec ss add into inc mov pop inc ficom cmp inc mov (bad) shrl popf xchg movsl ja cltd mov dec xchg xchg or loop in out or cmp popa movsl outsb repz hlt adc push or jle jle xor dec xlat (bad) in lods mov dec mov iret fnstenv jg xchg aaa bound and dec mov mov and test cld addr16 push xchg roll jnp mov xchg mov incb fs lahf int3 ret lret xlat loopne sub aas outsl and cmp inc scas aaa or adc sbb push jnp (bad) sti into pop cld idiv pop lods int (bad) je inc test (bad) and pop outsb inc (bad) xchg or push sbb push sub dec fmul jnp mov cmp lock (bad) into pop lahf sbb mov mov and jl and out jne mov movsb and in popl int push popa inc cld movsb dec adc jns push xor stos adc sti xorl cs sbb sbb call cmpsb fisttp lods mov aam mov xchg data16 dec adc pop ljmp push jnp cs (bad) je mov aas xchg and inc ret and ljmp jmp sub mov fstps inc inc mov pop dec pop out in les jo xchg xchg xor ror cltd fbstp adc inc ljmp sar jmp inc adcb je sub push clc push arpl fimull (bad) dec push loope push inc jp clc dec in fcoms fcmovnu (bad) lods (bad) lret nop rcrl xchg cmp (bad) xor add ret push imul outsl jmp dec mov xchg pop pop xlat out adc cmpsb cmpsb loopne test push jl (bad) sbb sbb es adc adc aad mov into xchg out and add inc push jle insl enter in mov and jno cmpsl dec or jl pop out (bad) hlt jge ret xor mov sub lods mov inc push sub call jl or xchg inc mov pop dec xor ss sahf movb pop sub jne stc add push loopne call sub or aaa out jge pop mov and xor push xchg repz cmc inc cmp dec daa daa add inc push pop pop lahf inc sub push enter lds and jae jae mov lahf xor aas aad std roll and out mov mov mov nop jmp lea mov (bad) movsb push outsb fstpl flds mov negb ficom in out lods pop pop pop cli fidivr adc out or xchg (bad) lcall jae xchg inc pusha int nop cmc lods mov int3 jne dec push mov das sub inc or cmp lea or les (bad) cltd fstpl ficomp (bad) test sub dec cmp lcall push xor adc outsb lds out fcom dec xchg xor xorl int jno jae or jmp mov cmpsb xchg sarl or mov pop and mov push mov pop cmp adc roll mov jp dec inc aam orl lods lret and lcall movsl pop mov xchg cmpsl mov add out fwait bound and pusha (bad) scas xor push xor lcall xchg pop jae pcmpeqw cs jge mov push hlt mov (bad) popa mov (bad) ljmp leave fs inc je rclb stos cmpsb xlat sarb enter push jl xor dec push mov fmull test int mov jecxz mov sub inc out mov and jmp nop add data16 fcomip dec mov jecxz (bad) sahf mov in push popl mov aam notb or out xchg pop sbb std dec pop gs mov or loopne mov dec cmpsl cmp inc cltd xor adc jno cmpsb mov in push add cmp dec outsb mov mov adc stc and aas jmp mov imul jno fimull fnstsw and aas add lret xchg divb test jle mov and pop fbstp mov pop adc (bad) into mov cli jl stos icebp daa out shlb pushf xchg daa out insb jg cmpsb xor xor xor push mov add (bad) inc add insl outsl add xchg cvtps2pi xchg hlt jmp (bad) (bad) sysret mov cmp stos dec cmpsl lcall and and in test adc cmp fwait pop (bad) jp xchg cmp jecxz adc push rcrb icebp push (bad) in notb mov scas std xchg clc lea mov mov xchg add mov push add mov sub hlt fwait xchg daa and test stos add add pop loop dec call and cmc sbb loope jmp push jae mov push pop push jle sub inc outsb jle add cmp pop mov fisub pop stos or stc sub push cmp cltd push pop flds nop and rcrw jbe add push sbb sbb aad mov test xchg cmp mov cmp and jp mov push fwait xchg mov sbb and (bad) icebp inc dec int pop test xchg lcall ss lcall add or fstl jg shr mov cmp popf inc sub fxch sub mov and (bad) xchg dec or test inc sbb cmc subl sbbb cmp shll bound push lods imul outsb (bad) push rorl es add and add push pop push mov add aad xchg dec xchg ret stc add test xchg into frstor pop in leave lea in and jmp jbe,pt sti sbb in outsl sub shlb jmp dec jp (bad) clc rcrb cmp aam xchg cld imul das xchg jno int jmp fdivp loopne sub mov push lds cs pop setns and test pop fwait push aaa mov xlat xchg movsb dec cld scas sbb push inc out (bad) insl fwait mov mov pop outsl in cmp adc out mov pop cmp cmp out add adc push sub aas call cmpsb into fimull ss fbld mov shll push mov dec and (bad) pop fadds movsb sub push dec mov scas sbb imul cmpsl jbe (bad) call int3 lahf data16 rol cmp inc inc inc out imul mov les pop aas fwait add pop mov adc cmpsb in sub lcall sbb es imul je cmp lods lods push xchg repnz add lods sbb popl xor xchg add lea out add into test jns int3 jmp sbb mov negl and lods xchg jl mov inc inc shr icebp jo push je cs mov gs es pop jns fs (bad) sbb inc sub es mov sub lock mov (bad) jne leave adc push pop jnp push outsb and sbb lock jecxz xor xor jge add icebp push adc sbb jbe mov (bad) lock lret test and pusha (bad) test inc sbb cwtl loopne and add dec lock mov and mov or inc mov mov xor cmp (bad) scas push adcl pop add outsb push sbb cmp add inc jns leave mov inc stos adc icebp pop mov hlt fs pop dec lods mov hlt lds sbb xchg int lcall jge xor inc mov sbb scas mov lods push lret mov jle jbe lods push jae scas jno data16 stos cmpsl mov sarl lods les jmp aam sbb mov and ljmp sbb sbb negl and pop push sbb xcrypt-ctr cmpsl sbb dec sbb cmp pop test aam call jp in pop mov fisubrl mov add in in addr16 mov call clc mov adc popa das lret in sbb cmp aad push fwait loope jmp (bad) cmpsl and pop dec in sub lcall mov loop pop lods jns out vmread popa pop mov xor out pop and cmp lret jge inc bound jo jl jne lret xor inc cld push fstl lret add pop popa lret hlt and loopne in xchg cld jp rol dec fnstsw fucomi mov cltd pop faddl rcrb inc dec jne sbb repz movsb stc cmpl rorl mov dec mov xchg push sbb hlt add pop jle ret imul fistpll jmp inc sbb or xor mov jmp sub sbb popl lds sti xor (bad) je sub mov repz pop jne rolb sbb xchg inc xchg out or and out inc mov and out in cmc sahf or pop add sbb in aam sub push mov fmulp nop push loopne xchg or mov rorl lret popf xchg imul mov cltd add arpl in les (bad) jle int enter fimull stos fnstcw sub dec and fcomp xor mov repz adc dec or xor add fidiv mov mov (bad) dec outsl xor rcll and popf lcall push aam cmp dec xchg cmp ds les shll or int3 mov leave inc jmp jbe (bad) aam xor outsb jno inc jmp cmp out mov push lock pop les pop sbb fidivr cmove sbb lret lcall les push stos imul jne xor mov push mov inc (bad) fistp mov mov lret test adc repnz jle cmc test loopne adc sbb clc pushf xor rcrl jmp bound clc add fwait sbb push mov xchg jg ds fnstsw inc lea jecxz incb mov jg pop jle stc adc fucomi push adc pop ficomp push mov mov imulb js lods loopne mov jg xorb fisubr scas addr16 jge adc xchg aaa push push inc repnz int add sahf mov fnstenv test in xchg stc add jge aam jae or push dec xor or jbe rolb (bad) inc and sbb adc xchg mov cmp pop lret jo pop ja jge mov ret cmpsl inc ret std notb jmp fdivrl loopne daa push push and in sub and mov sub cmpsb jnp sub xchg mov cli pop call dec sbb ficom repz dec popa cmp ret mov add cmp push fldenv mov cli stc ds add xchg mov divl add mov cmp cmpsl (bad) rcl mov in daa cli outsb ret sub mov repz and mov test or and pushl adc inc dec sbb neg mov cs fistl notl mov inc stc push mov push stos mov (bad) mov neg fstpl and sbb js pop das sbb divl sarb ja mov incl adc push adc in test negb cltd dec imull sub popa jmp icebp or pop int3 xor lock add jno ret fildll repnz mov aaa push orl fsts call iret daa mov adc xchg pop sub cmp adc xor dec dec xchg pop mov dec pop int jnp xchg and fcompl fsubr pushf int cmp ja ret xchg mov mov push inc (bad) jmp mov pop mov cld dec out (bad) hlt cltd clc js fistpll or push enter push jmp inc pop enter xchg adc inc sbb in pop cmpsl pop jae vpsubusb add inc push addr16 xlat inc insl test cmp es divb pop sub cltd ficompl jnp mov jge push sbb jge (bad) imul jl pop mov jbe dec iret daa inc sub int3 xor xchg lret or gs xor add lock cmpsl aad mov cld sbb imul fldcw repz outsl ljmp stos push xor into adc (bad) pop pop cmc pop mov fidivrl mov lahf das fadds cmc rorl xchg xor enter or sub add jg add andb stos iret inc cmp cs loope sub hlt (bad) dec (bad) dec or pop je mov les stc xchg enter mov into imul test clc outsl pusha push aas aam xor sub sub (bad) iret or xor jmp ss add pop cmp mov in negl popa pop xchg ret loope xor pop xor addr16 and ja sbb rcll pusha loope call pushf popf insl cmp inc jne jle push lahf pop lret mov adc push movsb add fcoms addr16 xor inc sbb cmp lsl cltd mov push nop loop pop ret push push push gs insl add fnsave cmp shll sbb (bad) pop fisub jl cmc cs cmp cmc add js sbb das dec rorl lret sahf or xchg push notb or or call mull xchg test pop mov dec and push in pop call push dec dec jle jb jg fsubrl and push sarb inc cmp mov lods int3 jb xchg mov jns push mov lds cmp aaa (bad) or jb shrl shlb mov addr16 or mov cli push daa xchg mov data16 call icebp mov xor imul das movsl jne sti sahf dec (bad) mov in sub mov lea shl push test mov add cmpsb inc mov sub mov inc loope cltd and mov inc cmp push fwait lret lcall out and add call cltd fidivr push mov scas add in xchg pop test jg jle and std add icebp lods push sub lea imul insb sbb shrl fistl jecxz in push lahf cmp xorl jp (bad) leave je ret sub adc mov adc in cwtl arpl jecxz dec or pop stc mov sbb std lds pop jo cltd mov int mov stc repnz mov mov lds clc sub in movsb jmp cmp jbe aas mov fs bound sub or roll sub xor sub addr16 or scas push out and daa add and and test arpl push (bad) sub pop movsl roll cmpsb stc cmp lods inc and inc xlat add cmp jne dec lahf out ret mov insl lahf xor rcrl add fnop mov repnz outsl xchg add xchg pop lods jl or mov pop int3 mov stos jl jae inc xchg sub movsb sub xchg scas les or sbb sub and iret xchg test bound int repz int3 mov xchg push xchg add push ret stos pop test and mov jg fxch addr16 mov rclb mov xor mov mov or xchg add xchg or test push stc inc es sbb loop ror int3 jae push inc xchg xor mov pop pop jl ret fwait mov lea fstl push sbb cmp out xor xchg test notl out gs and aas push and mov add aam push into xor arpl movsl ja loope push mov jecxz inc pop cmp dec pop data16 mov jg fldl cwtl push addr16 or fstpt jg inc add jo jmp mov sbb fwait xchg test adc mov clc cmp int3 jmp add cmp je sub sbb mov inc (bad) cmc lods or clc xor test lahf ficom xchg adc aas mov adc repnz arpl lret sti mov iret cwtl iret int3 pop sub pushf hlt mov fcomip or mov fidiv out lret dec enter into pop ret jg push mov (bad) mov mulb js adc cld inc add xchg mov jecxz dec call adc out xchg mov jno shll imul movsl pop frstor enter adc sub and (bad) aam mov cmpsb aas adc fadds loop xor mov push add setbe out mov xchg les popf push sub xor push push adc js xor ljmp sbb addr16 (bad) in jae mov lods pop add sub cld sub or mov gs inc mov adc sub cltd lcall es fstpl popa ds push sub sbb cmp pop push hlt test daa inc mov ja movsl icebp add inc int push adc (bad) test mov add ret jmp xchg (bad) in aas cmp loop and call fadds mov mov cld adc push hlt pusha das fimull lods push daa bound inc ret out cld test mov jb or test daa in inc outsl jb cmp jge nop gs add movsl sub cmp xor inc ret cli cmp sbb pop repnz sub push enter push inc cmp and or (bad) mov in mov adc add test clc inc push ret cmc jns popf ljmp push mov inc and mov in pop add lea je sbb xchg or lods sbb dec les fisttp je fiaddl fadd cmp pop mov xlat scas es std add pop xchg or dec or inc sub andb rolb fs fldt mov mov or pop (bad) hlt inc mov hlt push jnp xchg int inc fs mov lcall (bad) mov or xor popa pop add jno (bad) mov mov push add sbbb shlb (bad) sbb xchg mov sbb inc sub fwait shrb jecxz dec rcrl arpl jo sbbl nopl movsb xchg es mov jge fiadd inc cwtl push xchg into cwtl jnp enter es loope ja sbb out fdivl pop add cmpsl cwtl mov pop sub mov cs arpl mov push sub pushf repz jmp outsb mov xor je inc xorl xchg pop mov in xor fwait add movsl push adc gs mov in test jno xchg lahf dec movsl movsb cwtl xchg pop outsb push lea mov cmp mov in (bad) decb repz aas mov push icebp jae xor or and jbe mov addr16 gs (bad) add ds inc mov notb nop pop (bad) fldcw mov popa and bound pop sub stmxcsr or insb out lods xchg js cs xor hlt and in adcb sbb or mov adc and sub xor adc repnz mov mov ja,pt jo cltd ss out pop test push adc or lea leave push outsb xor jbe pop inc movsl cmpsl xor and aaa push lret inc and popa pop mov ds fstps xchg out enter lods sbb pop sbb fsub mov mov outsl (bad) out mov mov mov add push lret (bad) je mov dec loop (bad) fprem mov mov mov (bad) out mov and je sbb test pop and insb lds add jno (bad) dec pop fstpl pop push sub push push mov mov xchg sub or xor cmovb dec fs fsubr mov mov out add cmc loopne les or xor xor sub cmp inc cmp loop jnp lea adc cli xchg cs mov rcrb pop mov pop fcoms xlat sbb and stos out movsb push popf and loopne add cmpsb (bad) jmp or mov mov pushf mov ret popa push mov jns jecxz das (bad) mov and hlt mov shlb mov loopne jo mov pop fwait dec mov cmp xlat and popf jmp out nopl int xchg outsl aam or jae imul xor scas movb mov jmp push shll sub and (bad) mov std lods mov sub sahf in arpl pusha lds xlat lods (bad) dec adc notl insb aas mov jnp fcmovnb (bad) jl in mov inc loope sub outsb sbb adc add into adc dec cmp mov in out sbb dec push jbe adc jge push nop cmp xlat loope cmpsl adc aam pop push or sub scas mov fwait mov add inc jo popf (bad) adc outsl jg pop inc aaa negl repz pop xor add push sti fsubl jle mov lret fucom cmc xchg test cmpsl inc xchg scas out arpl test dec cmp xchg cwtl inc and jns xchg (bad) mov mov inc (bad) dec mov cmp cs ljmp iret jle jle (bad) jno sbb jb imul inc add rcrl xchg (bad) jecxz mov adc push js xor push sbb ljmp inc repz cmp jo inc mov out push (bad) xor inc std push lcall aaa adc ljmp sar adc adc sbb jmp push push int3 sahf pop lret insb fld and xchg adcl inc sub pop pop mov and std outsl mov enter sub and push mov ficomp lret xor (bad) jns pop stos loopne movsl mov ret mov fiadd sarl jo das pop dec movsl mov insb mov dec or lods dec jns js jge dec sbb cmp mov je (bad) div push mov popf push jnp scas les mov sub (bad) je sti and pop and sub dec aaa dec pop addb mov cs sub mov das scas or pop cld test mov xchg pop sbb aad xchg push and pop jge insb addb xchg fwait cmpsb fidivrl push (bad) incb out or imul adc (bad) adc mov sarl bound and imul rclb popa lock cwtl dec das out lock adc push push fisubrl repz cmp pop imul (bad) stc loopne add push std data16 gs mov shrl repz rclb loop add push lods pop lock es cmpsl jbe adc fucomi (bad) xor push lret test cmp pushf pop lahf ja test inc mov xchg xchg and enter mov dec xchg add rcrl cltd clc inc outsl push fnsave rorl movsb arpl mov or movsb pop mov or cmp test sahf enter cmpsb lret lods shlb test jmp cmc lds aaa div repz pusha mov push int lock pop push cwtl out mov fs jno into pop inc ja hlt and cld mov les cltd and mov (bad) sub jbe fs pushf xchg xor ja adc cmp lock jns cld data16 daa mov dec adc movsb jo sbb inc repnz mov inc mov fs lock dec int jge pop xchg cli cs xchg stos dec stc push push adc xchg dec fisubr outsl ret popa clc push dec mov adc dec sbb mov clc jg dec ret pop in add pop adc xchg mov ja ljmp jns cwtl arpl jae hlt sub sbb or hlt and cmpsb icebp scas xchg in (bad) xor out and cli cmc and xchg jge xchg pushf fwait das rcr dec shlb pop and xchg and (bad) in or jecxz cmpsb inc fdivs push mov das std (bad) gs dec inc loopne dec lock repnz and inc (bad) adc leave push ror push sbb in into inc fs add push cli dec jns sub xchg int jnp inc jmp arpl popf xor and and aad mov jno fcomps sbb (bad) pop mov mov scas pop adcb sahf divl je xor xor lods push cli jns fild or sbb arpl adcb add cmpsb pop xchg inc sti and inc sub xchg add pop hlt add in in cmp lods pop jl dec test je lahf mov jnp and hlt (bad) call ficom pop add ss sub push in pop and insb repnz popa mov add mov idivb adc cld xchg das xchg lcall cmp sbb test push sub sub and mov negl mov mov in and clc loope fsubrp fcoms js pop imul push dec aad cld mov pop xorl sub and pop fwait pop mov xchg in sbb mov adc inc xor leave push and loop (bad) cld dec mov aaa mov cmp sub out xlat dec dec mov pop std jns ret xchg mov ror and push add loop sbbl add pop sbb pop loope mov (bad) ss cltd test lcall rorb add ss sub lock roll dec popf gs btc (bad) stos test cmp fiaddl pop sbb jns xchg (bad) je inc out and mov mov pop mov or and (bad) push out stos push mov jns xchg (bad) xor lds or inc orl jbe outsb rcrl movsl enter fcmovb dec lahf xor cld sub pop sub and adc stos sub sub add push test sti mov leave scas mov add (bad) in out sub pop les push ja pop xor (bad) mov sbb pop inc test (bad) lret xor ret jmp adc mov sbb mov adc sub cmp pop leave loop sar cmpl sahf xor nop aam int xor into lcall es stos fnsave add xor jle cmpsb (bad) out (bad) icebp les stos (bad) (bad) lret push xor (bad) jo mov stc or scas nop inc adc xorb jmp sbb hlt hlt sub xchg stos pop pop xor in (bad) mov icebp dec mov cmpsb int jg mov sub push aas loopne pop sub lock mov lret pop xlat out pop std xor pusha mov jmp loop and fild push dec imull stc add in call stos insl jp lret sbb ds jp pushf pusha insb fstps pusha mov dec inc ljmp adc test into cld xor pusha pop jg js rolb cwtl lods sti dec in call adc fisttp imul xor repnz inc cld out push mov icebp icebp dec fwait mov mov fsubrp push scas popa sbb mov cmpsl jo in cmp adc inc adc pop sarb dec fdivs or arpl mov jge test aas pop mov or push pop jb jle push jb mov sbb dec dec or mov loop push add ret mov jns pop dec push mov shrb sbb scas cli int3 inc and pop ja xchg jl xchg inc pop je xchg lret mov or cmp fninit (bad) sub mov mov mov cmp fisttpl ficompl rorb insl repz mov pop (bad) repnz inc mov mov push pop lea mov jns call lret rolb data16 out dec jecxz in or loopne sub xchg xchg test or bound testl xchg add sbb adc (bad) notb sbb adc and sub lods inc movsb jmp aad inc adc lret sub jne fwait out js data16 sarl adc add pop inc jge ljmp mov mov sub orl add xorl movsb out lock mov jecxz sbb ret xchg jne push sti cwtl imul push or cltd insl xor cli lea repz mov cmp jmp hlt divl sbb fldenv mov mov jnp je sbb cwtl notb sarb xor and subb test fbstp push cld stc sbb lret xchg imul cltd mov call fsubr (bad) mov mov rcll push inc stos mov jp (bad) clc cmp (bad) xor pusha repnz push popf mov adc jno leave (bad) aad cmp mov or push sbb inc in test xchg sbb lcall out cmp loope lods cmpsl shl jmp mov mov ret inc fistp mov aas loop xchg loope lds inc hlt loopne xchg add push lahf dec cmp mov pop jo add push clc xchg cmp mov nop imul jb push add ljmp iret enter xchg fdivl sub aaa (bad) daa mov sti xchg stos add add or shlb cmp sub jnp or addr16 call stc inc dec mov (bad) ret mov add xchg mov push cmpsl jge xor dec stos jnp push lods sbb cmpl int3 and adc sbb fs xor pop mov imul xchg sbb (bad) mov (bad) je sub dec (bad) ss sahf jmp xor mov sbb (bad) in outsb push cmp mulb flds inc mov stos fwait inc aaa sarb in imul xlat imul hlt sub xchg lods xchg cmp pop adc leave push xor inc fucomp mov (bad) or sbb xor ss inc bnd (bad) adc incl jnp dec sbb fnstenv (bad) lock jo mov inc int3 js sub sahf pop pop shrb add or mov dec in ds mov (bad) mov (bad) lds fsubr rcll dec push (bad) in sub pusha jmp sar cmp mov and sub insb inc movsl xchg xchg sbb mov dec inc sbb cli cli scas cwtl ret into lcall jle fwait neg hlt inc push lds xlat inc dec or fsubl xlat push je cmpsl xor adc (bad) stos inc outsb sbb add outsl fwait cli jge push movsb out sub out cmp mov adc loopne aam into xchg jecxz sarl es and adc aam pop mov xchg arpl inc icebp push sub mov sbb ds jno sub sbb insl lret movsb and xchg hlt mov mov daa test ljmp outsl testb push xchg outsb pop sbb mov xchg mov cmpsl test mov pop adc pop repz xor and inc sub hlt dec iret push push sub inc in mov push lea lret std sbb andb cwtl in lret jle mov pop out adc mov jae sub sbbb ss jg std push popf nop (bad) mov inc into mov (bad) adc mov in test inc jo adc insl out or jo pop outsl js push and add mov mov rol mov fildll out pop pop into adc xchg cmc jae (bad) mov ret test and mov (bad) mov mov sbb sbbl cmp jae ja jbe (bad) ret roll ret xor xorb sbb nop je int3 sahf adc add loop out adc inc jg cli cmp lods jb xchg lock nop push aas lcall cmp mov loopne mov notb leave push outsb or xchg ds adc adc mov mov (bad) cmp cmpsb push sbb in enter xchg enter adc pop gs mov std mov and daa mov cmpsl repz adc sbb test test add jns mov sti xor mov lret jle scas inc pusha xchg mov xor movsl xlat dec fsubl mov fwait aam mov inc add rcl jp cmp or cmc lahf dec ljmp xchg jne aaa addl adc insl pop enter jecxz loop std (bad) and push (bad) sbbl mov pop fstps (bad) sbb stos pop mov fsubrl jae lcall sub add push or js clc pusha fisubr adc pop sbb push jno sahf jmp pop fchs and lock pop pop in inc and xchg dec and out test dec les rclb int sub out fistpll gs repz inc fist xorl mov pushf adc (bad) js call xor jle adc scas repz add idivl decb jae fildll inc jbe jno jns lahf jae dec mov popa out fnstenv fs stos in lret das adc stc lcall fsubs loopne pop ljmp ret out cmc movsl cmpsl jmp push push xchg pop and push dec ja cs mov jne jnp pop lret cmp dec (bad) mov call jge (bad) scas inc push adc mov pop cvtps2pi mov insb push adc jecxz inc pop mov fbstp and mov lret jg sbb sbb fstpt mov aad lret inc mov pop add inc test pusha xor bound sub pop shll lea test push xchg ficompl fs notb xchg enter pop out or and push cwtl (bad) rcl dec cli (bad) xor ljmp dec cltd pusha and xor into iret mov fidiv push and shrl test mov in dec push jnp (bad) call fldenv stc movsb push movsb jns aam xor es add push sub cmp leave testb xchg pop mov push mov negl jp (bad) aam (bad) adc dec cmp sub mov movsb adc cwtl cmpsb jp dec ds inc in sti or and scas lock jno pop push jle,pn sahf mov pop or add ljmp test xchg outsb or adc data16 stc jmp jno pop shr repnz ret xor jb sub rcrb push jb and repnz fimul and xor dec xchg xor jecxz loop inc jge gs sti mov jnp out push mov push mov leave pop sub push arpl (bad) js sub imul fwait gs pushf or xor cmp fwait inc xor fcoms mov push movsl push xchg inc adcl dec xor push dec out int inc popa ret or pop mov insl mov outsl adc sar loop outsb xchg and mov dec dec scas adc test mov mov dec dec rcrl lret fidiv or rcrl add dec sub add scas adc xchg out adc mov je (bad) jne (bad) rcll aas or xchg rcrb pusha jo inc mov pop test js lret (bad) aam (bad) jo fsubs dec jae push sbb xor sahf push lret movsb cltd and push inc xchg lods dec ja aam icebp out dec push mov lods mov xchg cltd (bad) (bad) jecxz pop mov stos mov pop xchg insb cmpsl add push gs mov sub arpl mov (bad) ret mov fwait sub test add imul jecxz ficomp lahf inc mov xchg (bad) dec mov xor mov loopne jb testb cmp (bad) adc jp cwtl fsubr cwtl arpl (bad) sbb push in int3 in out mov mov pop mov mov adc cmp xor or (bad) (bad) movsl (bad) push push outsb sub lods cmc and insl jnp test cmp (bad) cmp pop push cmp iret add adc mov roll fiaddl popa rorl and out push mov popa mov mov lods (bad) ss ret inc cld dec xor decl addr16 scas or movsb (bad) xchg leave dec lcall inc test scas mov add fdivrl divl ljmp cmpsl mov xor pop roll lock (bad) pop xor (bad) inc mov lods xor and adc pandn sub sti xchg pusha sbb popf cwtl lods outsl adc cwtl mov (bad) mov jo sbb pushf rolb inc fidivl scas adc fdivrl fild jno push je mov fmuls sub push lds lock dec sahf (bad) jl mov rcrl jo xlat jns xlat int3 cmp cmp dec shr loope nop icebp test test fidivr xor pusha mov data16 adc fimul push xchg mov adc adc or arpl shrl inc pop das push cmp scas jecxz sarb pushf movsb push imul xor repz popa pop or scas jne pop pop cwtl pop cmp in sbb orl aad jo jmp mov aaa and sub sbb push sbb pcmpeqb sahf adc pusha jbe jnp push in outsl xor cmp pop insl in (bad) lcall pop sti inc aas jge dec mov and arpl mov out pop in add out pop ljmp cmp call dec lret out cmp dec notl sar xor pop cmc push clc fs aad adc push icebp push dec jg sbb fnsave hlt mov fcompl lods mov sub dec pop push loop mov scas mov loopne or inc test sub ja out and out mov jmp in decb pop jno outsb mov push pop (bad) and rolb leave loope movsl mov cmp lahf clc mov aad mov inc fildll inc xchg sub dec outsl jmp push cld lock mov sub push cmp xor xchg xorl outsl push dec cmp dec sub nop adc stc inc (bad) sub sbb mov mov std sahf pop xchg loopne mov pop loopne repz arpl adc fidiv xor imul xchg xchg outsb in inc add adc inc arpl popa sbb push and push roll dec mov jo jo or push jne movsl fcomi pop cmpl xor or xor sub sbb inc or andl cltd jo hlt rcrl xchg (bad) (bad) mov and jp out into cmp dec ret lds leave adc in or add mov fidivl mov mov push xchg (bad) mov sub inc fmuls mov jbe test in sbb pop leave aam sbb pop pop aaa ja cmp cmp mov fadd (bad) popa stos xchg mov rcrl sbb test mov testl fst (bad) out and xchg stos enter (bad) js adc xor repz jmp or fstpt daa rcl into jp movsb sub movsl push mov leave pop mov jl aad or bswap es into inc fistpll scas sub push mov lret xchg xor adc fdivrl cltd sub xor adc xor insb adc stos dec cli cmp push adcl int out push loopne lock ljmp ffree xchg add cmp add movsl pusha cmp mov pop lcall cmpsl sahf sti cmpsl dec out inc lret les adc pop mov mov sub call jnp mov sub in mov fwait push arpl mov jecxz push bound fldenv xor in int3 stos mov ljmp dec or mov pop mov xlat sub pop inc cwtl loop mov out add insl popa not and sub scas or sbb cmpsl cmpsb in (bad) add sub push xchg xchg inc rcll out cli test or sub fucomi mov pcmpeqb orl outsl and hlt jl mov loop lds cmp orl push mov push clc xor jle push lods roll in lcall push insl scas cmc fmull sbb and cs inc es je and sub pop dec pop sub push cli and scas xchg mul push mov outsl push and nop lods lods fimull or push jge adc mov scas push pusha fcom mov pusha cmp outsb pop rclb call inc xor loopne xchg xchg nop dec pushf mul lds add stos adc push and add mov ret stos fwait cwtl mov xchg and mov mov adc inc xchg mov inc add (bad) push fdivrs push dec mov dec pop add nop (bad) pop jecxz pop (bad) popf mov mov fdivs push inc or popa adc (bad) sbb pusha fldt sub xchg ja mov insb fadd hlt out ds add js cwtl insl adc test outsl xchg mov adc cmp lods push cmp push roll inc bound arpl cmc add xor push rcrl pop mov pop in push inc imulb addr16 insl xchg sbb and (bad) outsl dec cmp sahf (bad) inc ficomp or in mov inc sub dec sbb or cli jmp adc fadd int ljmp inc sub lret mov andl ja mov inc jmp xor js sub pusha push mov push sbb push xchg sub sub imul mov adc clc leave add lcall cs sbb (bad) imulb negb add push sbb jg pushf test sti aam jns push enter (bad) stc fcmove loop pop xchg aas mov mov xchg cmc inc pop mov pop cltd cmp daa outsl dec and faddp mov push jge inc push ja jo dec icebp pop test cs imul or mov xor cmp pop add mov int3 sub inc inc insl je es scas pop add mov add add insb adc mov cmp sahf sub jb push jp arpl fsub shrl es mov fcomps and ret (bad) aad push repnz ret mov inc fsubrs rclb outsl int andb lock imul and cli out sarl inc loop (bad) icebp adc mov stc hlt adc dec scas pusha pop mov pop out lret or sub dec sub or add pop js and jns mov or lcall or and fisubl push adc (bad) test cld push cmpsl cltd fwait int3 push dec adc test mov outsl or add stc or xor inc cmpb dec pop pop ret mov lret pusha sub mov stc jle imul and mov ret jecxz int push mov idivl cwtl xchg cwtl push repz inc sub inc push sub ret repnz mov imul sbb inc dec inc inc push or cmpsb sub inc adc lods fistp iret movsb (bad) (bad) nopl lret lds inc sahf out arpl push mov ret cmp mov loopne bound xor jae (bad) xchg ret cmp pushf cmpsb xor dec mov shll jmp jp xchg (bad) xchg pushf sbb cmp inc icebp xchg jle lds xchg mov mov mov xchg adc insb or fimul and (bad) cmc mov in mov lahf das nop fildl add (bad) xor adc lea icebp mov out xor sub addr16 sbb loope mov or mov shrb mov xor cmc outsl push idivb enter jns jl daa ja or scas jne or xchg dec mov mov xor sub sahf xchg pop scas jo adc pop jl push xor xor addr16 mov sub gs sbb cmpsb (bad) jo cmpsb icebp pop sbb dec jmp fisubr cwtl xchg mov lcall xchg int sbb jno movsl push push scas enter jns jmp add mov push out insl daa xor sub mov pop lock (bad) xlat (bad) popf push mov je push es cmc jg fcoms and lea decb sbb pop fwait mov cmp in dec data16 or stos push in out add (bad) aaa rorl jno jge dec add sbb ja jecxz xchg mov inc jnp fbstp (bad) out xor jne popf adc leave push stc ja aaa lcall shrb ja mov mov daa mov xor xlat loope cld insb arpl lret (bad) js,pn arpl xchg (bad) push leave aad movsl sub xchg std push arpl pop (bad) jb xchg stos xor mov hlt inc push dec jne cld lcall fwait rcl fisubr or adc or mov cmp or fwait lahf push lahf imul push adc dec lcall cld orb pop push mov imul andl cmp push push sbb sub sub jl (bad) stc imul pop cmpsl push add (bad) aaa loop push and sub fsubl xor in mov xchg jg jle push test in inc xor insb stos (bad) out test (bad) mov dec callw je pop pop xchg mov xor (bad) imul mov xchg movsb xor insl add jbe xlat jp cmp hlt pop je add add js gs adc flds add mov fdivrl jl xor es mov cld ljmp pop sub dec push inc test jmp xor sub ret push ret out stc adc pop push inc inc and mov push fsubl xor rcll stos inc lods repnz and add sub data16 mov mov cwtl imul or movsl ja loop (bad) or sbb xor rcrb add jno std aaa push mov clc popf cld pop ja mov test aas jo jb cmpsb mov cmpsl mov cmc xor ss push pextrw mov (bad) outsl jmp or jns jmp stos mov js imul mov rep (bad) mov mov roll bound (bad) jl and or and mov sub movups dec mov mov adc fcoms and jbe jb (bad) fidivr sbb jno rclb push dec push pushl cwtl jb out lret mov push mov push push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret cmp jo or jb scas jmp lods cmpsl aas cmc mov xlat clc out jb cli mov push call pop ret and insl pop cmpsl sbb pop movsl pop stc cmp push or outsl jp cmp add sbb push adc xor push lods adc aaa ja add push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea sub cmp jmp in dec xor and push fdivrs nop lret aam mov inc dec jb ret aas sub imul cli adc inc mov dec lret imul scas mov mov push test leave jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp mov sbb sub (bad) fcoms push or add loop push js ss push jp mov pop es ja rcrb bndldx repz mov add scas xchg or pop sub rorb inc test mov scas adcl enter gs sbb pop (bad) and xor sub push pushf aas lahf daa push cmp or mov lcall inc mov mov lret or cmp (bad) ljmp mov pop mov sbb add (bad) mov or jg or rclb xor jg insb jb or mov push in jp adc sub mov enter lcall sbbb pop stos cltd dec dec scas xor jp cmc scas add sbb xchg adc jae xor out jmp faddp pop xor stc mov les sbb add inc pop lret and lcall (bad) dec mov movsl popa orb dec xchg inc push cmc push or std xchg lds mov sub neg ror mov mov shrl clc adc loopne rorl mov aad xor cmp es shrb sti add jmp sub ja into xor cmc pop scas test rcrb push mov push pushf cmp adc cmp (bad) mov iret movsl int cmpsl push dec mov repnz (bad) ds clc jnp std cltd xchg int3 jnp test stos jmp xchg push jl ucomiss fdivrs xor cmp sub lods les movsb movb mov dec leavew loope cmp xlat cltd sbb push xchg pop mulb lret add jl (bad) mov cmp inc cmc loope int cli out scas sub mov xchg ret sbb incb iret in mov mov insl in rcll lock (bad) iret inc (bad) cmp daa and stos icebp in xchg mov lods stc pop lcall mov xchg mov inc cmc mov mov jmp int into push push mov pop xchg mov dec or fwait mov popf xlat outsl in dec hlt cmp fs adc mov mov jl xchg xchg xchg insb out cld rcr popf sub dec sbb test pusha xchg cmp xlat sbb mov sahf pop pop mov push pop mov and imul sbb mov sub ficompl push xlat fisubl mov mov push xor ja movsl (bad) push adc es jg jg xor les repnz icebp sub ficoml inc adcl pop mov push (bad) xorb sahf lods das push cli inc inc jmp fsub add add imul je jb into push mov ljmp mov pop and movsb in dec jbe sub mov dec loope add cld and push (bad) sub sti inc dec iret pop (bad) sub sbb mov movb imul nop mov push out int pop repnz and and push jne popf movsb mov mov inc dec adc loopne sbb cmp lcall push popf mov xchg sub dec cmp cmpsl test cld xor les fnsave sub popa cmp mov cmp push or sub fbld rcrl hlt adc fidiv dec int3 push dec pop sub dec aam or out jb jmp sti inc aam and aam cmpsb aad cld or aad or push outsl dec mov roll cmp mov or dec mov sahf adc adc pop jbe,pt in mov push aas pusha rclb and inc jno xchg repnz xor mov (bad) fadds (bad) push and pop stos inc mov call push imul nop dec jp add xor mov cmp dec cmpsl test jmp out shlb mov xchg cmp pop lcall stos fcmovbe adc push es aam jmp push leave ss cmc xor dec cwtl ds push mov xlat cs pop (bad) and int pop jne dec sub xor xchg std ret leave mov nop sti ret cmp mov fcomp jl or mov movsl fidivrl mov sub mov dec ljmp mov (bad) adc xor in xor sub mov mov hlt movsb fiaddl mov ljmp xchg and inc mov mov pusha inc jecxz sub jp iret fnstsw testl out mov jno jno push sarl sub decl xor push or dec cmp push dec mov out xchg (bad) sbb aam pop add loop dec pushf sub cmp test adc lret jg fadds and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 cmp daa mov adc jecxz push or roll in ffree es rclb sub push push cs enter sbb and or sub adc add xchg jae sub test ret sub adc movsb push test adc jne xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 cmp daa out out mov jno dec jle adc pop sahf mov enter push xor dec xchg sub or push adc pop leave dec pop pop sbb mov fbstp icebp pop arpl cld mov push dec outsl insl sub into adc addr16 sub push das nop inc addr16 cmp and pop adc loopne outsl cmp rcll icebp test dec xchg add xlat insl shl js sbb aad das dec arpl sti mov pop jmp cmc xor sub jge xor inc outsl push out jge inc jmp fnstsw mov adc andl icebp mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 cmp mov jb mov mov jno push das in adc and xchg ljmp mov push lret jo and pop popa ffree movl movl movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 aas lea sbb test lods test inc fwait xor (bad) xchg in xchg ja add mov scas xor hlt inc sub (bad) test sahf dec daa inc xorl in jo fisttp icebp sahf arpl and xor inc orl movsb jnp shrb dec xchg mov jnp mov int3 cli sti loope (bad) je jns das xlat xlat mov hlt test cmc pop addr16 cwtl jno push xchg aad inc mov mov sub and add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg pushf imul and xor imul movsl sub jle imul and push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 cmp mov jbe and insl dec mov and insl fwait mov dec movsl fdivrs int3 fisub aas push inc sahf int pop sti pop fsubrl or xor xchg bound cli insb sbb add arpl dec lret shlb test cmp push scas in push jnp insb mov lea (bad) popf les jo enter insb push test jp jnp cli jp mov dec lea divb shlb inc insl nop add xchg add not pop sub int mov outsb jno push fs test fmull push cwtl aaa fdivp sub xchg (bad) jb daa leave mov lock (bad) adc (bad) fidivl fwait insb cmp movsl (bad) jl push push xchg mov cwtl mov jb sahf pop cmp sub and xor nop inc (bad) jmp xchg adc cmp inc jp or jp push and out mov jmp fsts inc dec les mov xchg sbb xor call mov lret ja push xor inc adc pop mov fwait xor arpl ret divb mov icebp inc cltd pusha test scas iret fsts outsb push xor cmp pop pop je scas les nop inc push mov in mov pop xlat out setg sub in js add jge (bad) gs int popf and dec movsb adc dec push mov and mov cmp jne cmp stos cwtl or icebp (bad) shrb (bad) mov sub xor pop out sub icebp fsubrs test js jno pop insb jns dec cld sub or or lods dec push ss xchg sbb jno leave or mov jmp in mov in aas mov sub jno fdivrp stos idiv mov pop pushf (bad) in decb insb push jl dec fsubl push out sbb sbb add xlat cmp mov jecxz into repnz mov fs aas mov test lock int rcr jns insb jno xchg cmp sti cmp cmp mov jmp inc std lret mov fnsave push mov add inc mov push fwait addr16 mov mov call push push add pop jb push out test xchg out ds sbb push add ret arpl or xchg sahf out mov pop fwait mov mov dec jmp (bad) lea xchg inc outsl adc mov shrb adc pavgb sbb fidivrl xchg xchg cmp movsb mov and sub in pop pushl cmpsb mov cmp test repnz ja add add out rol stos fidivl popf stos fs sbb or fdivrp rcl add pop adc sbb outsb jb,pn (bad) es or xor push outsb or sbb dec insb mov dec inc lea out mov fmuls cld ljmp pop mov (bad) pop xor or sub pop adc insb and fbstp or (bad) add lods aad es clc stos cmp mov cs lea scas push cmp iret adc clc pop jge addr16 jp xorl push mov in and imul sbb add mov sbb jp cmpsb add nop test hlt stc or push int or ljmp pop mov xor xor loopne popf daa stos in inc push or or adcb jl mov dec pop ret leave adc push enter pushf (bad) dec adc push jns subb add dec scas jg popf enter mov std xlat push push and mov add loope in fisub faddl fldenv aaa push dec xchg clc and adc stos out mov ja add push jnp into daa and cmp (bad) push outsl push sbb mov addb sub dec xchg dec bound sub inc fwait jae mov mov mov pushf jp jge fnop loope xchg xchg pop aad aas pop or inc cli push push gs xchg rcrb out sbb sub push ret das out xorps repz imul int xchg or or ljmp sbb sub int jge repz lods add ljmp cmc sub inc sbb lods std loope inc ja push sbb sbb xchg mov adc icebp stc (bad) mov stc jmp dec add daa lret inc pop add sub xchg push lods clc mov data16 lahf testb xor mov pop cmc pop pop lcall (bad) icebp jns jnp jg mov mov xchg cmp pop inc scas int3 adc cmc out rorl sbb or outsb pop jg out rcr and cmp ss pop nop into cmp dec mov imul lret xchg js xor jae arpl adc sbb mov mov mov pushf dec ret inc sahf aad mov fildl or push stos out enter mov rcll xchg (bad) bound add adc ret mov stc ljmp cmp xchg jbe push or cltd sbb hlt das mov les push clc adc (bad) push cltd mov rorb fsubrl cwtl repnz mull inc iret cmpsl dec out (bad) clc cli sbb insb lock mov xchg jb (bad) mov add push fs lods push mov dec icebp call insb lds int or mov sbb xlat push pop add lods mov and lds stos mov jae or mov dec adc outsb adc mov scas jecxz in mov inc lock lret xchg or mov lahf adc icebp jnp std xchg cmp cli iret andl xchg in arpl roll pop fadd and jmp in fldl jb xchg dec ret dec xor pusha mov dec arpl mov and xor gs loop inc mov mov ja adc cmp cs mov lock or mov popf cltd (bad) call jp leave lock jns call std jg add xor leave add mov dec (bad) jo mov pop frstor imul dec add jge je testl (bad) (bad) repz xchg pop out movsl mov sbb xchg sbb jnp mov cld cli push and fldt sub hlt cltd push pushl xor add cmp mov push insl xchg cs mov lret lret (bad) lock lret xchg jno pop pushf pop dec rorb jl ja imul aam loop push arpl xlat dec pop xchg in push and cmp push jno orl xor repz scas or adc push cmp jecxz enter mov dec lock out iret xchg jmp (bad) sub sbb roll fmuls rcrb push out lret movb mov add enter out lds push dec lret loope ret repnz mov neg sti xor cmp pop mov jp lret pop test xchg stc cmp int3 int aad fsubp or lret add test (bad) enter fdivrl sti mov sbbb fs mov mov andb mov popf mov inc loope xchg pop sbb mov lahf movsb xor push lret fs les loopne add pop mov adc stos add arpl lods bound ja call add stos bound outsl cmpsb incl test mov (bad) adc call mov pop or jge add sahf add push pop inc lahf and mov push popa aaa shrl xchg jmp jmp push in mov ja leave sahf shlb scas xchg dec mov add repnz jle cltd (bad) jbe es jno leave push push jp push xchg or dec ja hlt fcoml ficom jg sbb mull inc push or and or xor dec push pop jl pop xchg int imul scas mov jge cmpl jno mov ds mov jb js mov icebp iret inc cmc pop mov sbb jg outsl outsl data16 mov inc pop lock std add add lcall xchg xor mov xchg or cs pusha adc into mov repnz sbb (bad) push (bad) and add or js popf bound (bad) sarl mov dec mov inc cmp cmp stos push mov add and gs adc adc push popf popf mov sub cmc jnp dec push pushf pop sbb mov pslld leave xor imul xchg es sbb push jb jnp cmp (bad) mov sbb fs mov call icebp or or nop cmc std mov rcll iret addr16 dec push out mov xor jmp hlt cmp aam imul mov push pop lret mov cwtl sub cld inc bound add lahf mulb dec cmp aaa push popa pusha sbb in jo popf (bad) jno scas cmp pusha xchg jge xchg movsb arpl dec lds (bad) ret out dec mov (bad) mov in leave clc sub and outsb push insl je sbb dec cmp push xlat cli fistpll les stos or push push push xorb popa (bad) cmp inc add sar mov fldl2e adc inc mov test jo xor mov ja or roll push sbb in scas jns mov test out outsb xor loop add push xor fwait or xor xor lock rclb stos pop push dec cmp adc ss in call xor imul dec push xchg xchg xchg js xchg inc shrb and out mov outsb fisttpl test popa add lret sti pop sbb adc adc int3 outsb xchg clc mov mov mov push mov pop imul gs mov mov mov adc push les pop jbe sbb and (bad) mov repz mov xchg or imul ret pop (bad) rcr adcl sbb cmp add jae cld mov cld ret xchg cmp add fistpl jne jnp shll (bad) mov mov data16 xchg mov enter sub (bad) sub mov loopne aam mov dec ret mov push adc pop push dec mov sbb and clc jl dec dec (bad) pusha and movsl and jle mov loope add faddl cmpsb daa pop mov ret js cmpsb lahf (bad) cwtl lods mov lahf sahf leave inc addr16 outsb jne (bad) adc or pop sub scas mov jmp rolb sbb jb outsl sbb insl or and je cmp push jmp lds push pushf add mov cmc jg outsb inc pop shll insb (bad) mov aad mov sbb lds mov call push fwait adcb in cmp stos or js sbb ljmp sti (bad) insl stc repnz jge pop xchg pop push mov ds add cmp inc xchg push or (bad) rolb loopne xor rcll add xor push fwait adc sbbl jecxz sbb and adc pusha test push rclb xchg lcall test sbb cmp test stos std and adc ret push movsl sti push or mov movsl and cmc and mov mov pop lret push and dec and cmp (bad) int3 and push and sbb adc xchg lods iret dec xor idivl aam xor dec push or inc push fnsave gs sub push repnz push daa mov fisttpl decb rorl (bad) (bad) imul fdivrs jae stos jae int3 adc and and rcrl and sub mov out xchg loop add pop and idivb inc das outsb xor cwtl divl lock int3 adc sti sbb mov or clc push xbegin mov dec popf mov inc cmp sti (bad) jno cld mov rcrb addr16 jne mov subb movsb ja or mov hlt in stos loopne and repz add adc jl inc or lahf jno mov mov out stos arpl pop int jns push fisub lret lds push insl adc mov xor push enter and jp xchg loop (bad) fwait lcall lret lods jbe loope insb fnstenv je dec push dec (bad) or (bad) dec divl push add fisttp notb neg xchg jo aas pop xor rcll das jp pop jmp cmp mov jne dec and stos cld inc cmp dec scas arpl in jb call les repnz je pop sahf scas sbb and push int fisub adc je call out mov nop mov cs (bad) movsb adc cltd mov loope adc cmpsl inc jecxz sbb lret pop and stos adc push ds jmp out lcall cmpsl outsb (bad) mov fwait inc (bad) or jecxz xor mov or pop inc in sbb aad add icebp out mov dec inc xchg adc sbb or pop adc mov mulb jb (bad) mov jno aaa subl mov pusha xlat lret mov ret xor pop jmp mov xchg inc mov in (bad) fsubrp add addl int add dec rclb lcall test xchg sbb sbb sti test mov push mov cmp mov stc jg jb cmpsb sbb lds inc pop xchg lods xlat xchg xor ljmp inc inc (bad) jb mov addr16 xchg pop cmp jno sbb xor xchg (bad) dec sbb cmpsb mov idiv mov cmp xchg push (bad) jae push sbb adc mov lock je faddp push dec outsb sti (bad) in adc mov faddl sbb mov push jl clc in mov pop into lds jns inc inc jg pop and push fildl daa jbe sbb xor dec or push pushf loope push mov jmp iret lcall or insb arpl mov movsb idivl jnp and mov mov inc jg xchg inc inc outsb mov sbb aas lods sbb mov (bad) incb dec add xchg pop mov inc out xchg gs bound push test mov pop mov lahf jmp fmull adc adc divl dec outsb loop xor xchg pop fcomps xchg arpl icebp popf push xor or mov (bad) pop (bad) je rcl jae mov adc add jne sahf (bad) xchg ret rcrl xorl xor xor out aad and cld data16 sub scas add cmp or lret icebp inc adc or inc sbb add cmp outsb xor push jle ss sbb inc mov add dec cld mov fldcw loopne and repnz jmp jno xchg and daa shlb mov push aam fsubrl xchg inc push fdivl cmp cmp add and sbb (bad) xchg jge leave push dec mov sbb cmp lret push aad and outsb cmp ret in xchg (bad) dec in xchg das pop lea mov test (bad) insb jb jge dec jb cmc cli ret arpl js roll and cmc inc push out mov cmp bound and sahf fmuls out cli adc sub sbb sbb mov (bad) mov sub pop inc arpl sub insl sbb in pop lea jne xor inc stc xor sbb repz sbb popa (bad) jmp dec push call bound mov movsb mov push lret enter sbb jp push sbb cmp sti pop test pop adc push add pop les mov iret stos insl and pop pop add cs movsb popf add inc test fnstenv mull mov lret mov or stc cld sti push fnsave mov js insl cltd pop jecxz scas inc lret mov jno jae (bad) jo xchg cltd jb (bad) gs xor insl (bad) sbb pop push mov ds lea add xor jmp sub cmpsb xchg xchg jns or aad loopne mov cmpsb cwtl jmp (bad) rorl xor or iret add mov push sbb jg lock or pop lods inc pop rcrl lock mov mov out or cmp stos and adc movsl and (bad) mov mov jnp in lahf das pop imul dec sub or ret jge andl (bad) scas sysenter rol jno sbb in add cmp xor jnp shrb and mov jne ss (bad) negl loop dec (bad) dec adc dec and mov mov ja stos mov pop loop xor daa repnz jge in cmp xor loope pop shll repz outsl push push gs xchg cmpsl mov push xchg xchg loope and (bad) pop arpl stos mov lret test (bad) idiv push xor cmpsl (bad) cmc sbb mov stos jbe cmp out lea cwtl push fwait js lcall scas pop fstps mov push mov ds fistpl (bad) out pop mov xor je outsb arpl mov xor sbb dec jno add test jmp or adc xchg push jg or ret and iret mov ret mov sbb mov inc mov sub push bound lock push push scas mov mov and gs pop push xchg (bad) lret divl add jg add mov add hlt pop xchg xchg jb xlat pop mov mov jnp in (bad) repz xor aaa add inc fwait xchg bound (bad) icebp cmp jo shrl dec insl cmpsl mov cmp jnp lcall lcall sarl mov adc clc in psllw push sub mov movsb push lods push aad stos data16 pushf fsubs ret sub negl adc xlat lret addl subb loop mov and ss sbb popa push xchg inc sbb xchg mov (bad) pop mov mov pop in out fnstsw pop int3 movsl insb aad jo ret movsb arpl and mov and jo cli sahf popa popa and mov mov sub jo into or pop popf mov popf jl les cltd adc push pop divl pop fwait or pop and push je mov movsl lods inc out jl stc adc mov or pop fadds sub xor sub mov adc xchg push mov cwtl data16 pop push add and popf add xor sbb enter or mov cmp movsb inc js cmpsb popw jo (bad) cmp mov pop xlat and aaa lahf xchg push add fildll pop (bad) out push into adc loopne ret inc mov push fisttpll fsts jb mov jno push push subl jbe lret mov sbb pop jle test popf fcoms js imul push std (bad) test dec inc test and ljmp ret aam push jb or repnz jge sub mov xor push xor pusha cmp lods verr stc or ret icebp stos addr16 jne scas inc rclb sbb movb inc in adc xor cmp push lret (bad) and nop gs repz xchg fldl mov mov fisubl cmp scas cmpsb or mov aad add imul lods fucomip sub jns nop lret lret or add stc mov adc or js adc jp inc push xchg pop xor jne pop adc nop js sahf je ret pop les icebp movl inc scas or inc adc adc mov sub les stc jb test rol enter xchg int fist movsb cmpsl int3 cmpsl outsb out and je imul and mov xor xchg jnp fsubs mov out test imul in mov pop add inc lcall pop mov sbb cmpsl dec lods lods push mov daa push daa out sbb fs cmp sub outsb mov sbb dec std cmp cmpsb xchg out aam push sub cmp add add cld outsb dec cmp xor push and pop movsl dec push and sarb shl xchg fwait scas jns inc jg dec ss xor nop stc sub or in call mov pusha cltd rcl call test inc jne outsl cmp mov jmp jg and repnz xchg arpl mov popa pop aas pop popf ret mov scas sar adc nop nop inc arpl rolb bound ret call imul jo and lods repnz jae movsl hlt das push inc scas ret mov sub fwait cmp out sahf cmpsb out sbb inc xchg out xchg (bad) mov push xchg fisttp jns stc fldl xchg sub add dec ss aas dec push cmpl scas dec mov pop in js xor sbb clc and dec pusha mov sub addl mov push call int3 int3 int3 int3 int3 int3 cmp mov pop add xchg cs inc mov inc lcall out jae xchg test hlt das dec popa adc (bad) jnp cmp xchg cs sti into jne movsl jle popa jecxz wbinvd outsl pop mov std adc jmp outsl mov mov xor repnz test pop daa push cmpl lea cmp inc sub nop roll jbe cs or call pushf jbe xchg push loopne incb sbb int3 call inc mov gs xor or out in mov lea ficoml add ret outsb stos arpl sbb loope jnp push (bad) cld fmul mov fldcw fndisi(8087 dec std nop mov daa mov (bad) dec into loope daa lret push mov (bad) imul int sbb pop mov out loope sub add cli repnz or push popa inc cmp mov fcoms bound pushf movsl adc mov jne mov js lea push dec push inc sub adc jb cwtl pop xor inc dec push sbb lret stos mov push or push pop emms stc es jg into push fistl add mov pop movb mov out pop push dec and int3 in psubusw pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 mov or test (bad) dec sti movsl pop sbb (bad) or or mov fstp mov arpl xlat lret adc arpl arpl popf add sti pop fcompl scas xchg xchg iret xor fstps sbb cli inc (bad) gs mov mov loopne push test testl ss add and in daa aas shrl cs cs stos or scas mov in jbe xchg sahf dec fldt test xchg (bad) lret cmp xchg dec arpl inc in push sub (bad) or (bad) cmp data16 mov sahf add loopne mov repz xchg sti gs push ret adc (bad) int bound push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 iret sub mov add inc je xor popa ds xor mov sub or int3 shll push jle ljmp adc leave imul jecxz jmp lock clc jmp jge jb or test pop data16 ret pop cmp dec daa push (bad) jb sub insb mov sub in inc les adc shll mov mov sahf push (bad) push out std xor dec dec pop stos and leave jnp dec call xor repz mov test outsb nop adc pusha into lret dec (bad) mulb push push ljmp cmpsl out push (bad) mov pop mul xor cmpsl xor (bad) fnstsw mov clc movsl nop xlat scas mov push ficom xchg xchg xchg dec (bad) das rcl int3 les mov mov sbb pop jmp fidivl sbb xchg (bad) xor lcall lea aam lret cmp incb pop adc xlat sbb mov lods andl pop (bad) adc xlat inc lcall movsl jae push xlat xor jne cld jnp test xchg mov mov inc xchg aas pusha lcall sbb pop lcall dec cld xchg push mov sbb fwait jg pushf outsb test push mov and aaa xchg push inc roll or call mov mov jmp ds inc cli and in and mov lods mov movsb jb test sub pusha (bad) mov rcll xchg scas stos sbb mov ljmp cmp xchg (bad) faddp add in jns adc aas xor cmp mov xor sub xchg sahf (bad) cmp push mov dec repnz push hlt imul fildll test lret clc dec imul scas sub sub push dec imul call and (bad) inc xchg lcall nop int3 push pop scas add ret int3 mov rcl sbb fdivrs pop pop jl adc or xchg inc pusha adc push mov fistl fildll dec pop out sbb push push ljmp (bad) jmp int mov (bad) mov mov gs xchg push insb pop in das pop adc cmpl adc cmp jle or (bad) enter lods mov mov sub divb lds adc push arpl dec xor addr16 rclb sub sbb addb dec mov xchg jg mov mov subl sbb pushf repnz xor mov jnp sub sub jb packuswb (bad) push push std jg jmp nop or data16 std cmpsb xchg adc das insb clc je mov xchg ss push add mov mov js sbb xor mov pop in add xchg in fidiv into push push imul push ljmp cmp pop jmp fs add inc cld inc xchg and push mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 cmp mov xchg je nop test dec lcall mov iret (bad) adc xchg add cs int xor imul or pop lock sub imul int inc adc gs outsb loope mov std inc bound mov movsb push test push outsl xlat and jae push out in mov (bad) fist mov out insb dec outsl inc pop dec mov sbb in test mov mov pop push pop mov ret push add sbb mov int3 addr16 fcoms sub cmp and in xchg mov gs mov jecxz aas sbb dec repz movsl mov pop push sub xchg ss xchg ret sub and dec decb or sub jmp and ret xchg ja cmp or aaa pop cltd pop or add adc cmpsb arpl and pop popf jne loope dec insb fnstsw ljmp xchg (bad) insl sbb sub push pushf ffreep push cmp mov shrl mov sbb jge mov or mov xor lea add adc frstor xchg jae scas iret bnd jmp jge pushf js sbb dec ret enter sbb out (bad) in pop rol sti pop scas (bad) cmp push lock arpl mov push pop xlat sbb iret inc iret adc inc add repnz js popf sub mov add sbb enter out mov pushf xor lahf add pop xor sub cs xchg cmp push mov scas (bad) inc jg addr16 fwait xchg adc enter jge and cwtl inc xor ljmp loope mov jno pop inc dec negl xchg pop xor fistpl jae hlt test jp or scas cmpsl lods hlt data16 aad push push loop lods in scas arpl imul cmc fdivp fistpl enter adc rcll int3 jg inc mov xchg fdivr and cwtl movsl xchg mov adc and mov fcomps push jo push daa sbbb outsl push and mov pop mov ficoml mov cwtl pop mov pop dec ret div inc adc jnp sbb add add lcall mov cmc sub aas int mov mov push (bad) dec pusha xchg or push dec inc sbb je mov push sahf pop hlt fucomi and sbb mov mov xchg aaa out inc mov sub movsb or mov pusha jle cmp ja xor ja cmpsl stos ss and aad lahf or mov push push lcall mov imul pop lods popa add jecxz std cld enter nop push adc cmpsl push jo push aad xor mov xor (bad) add imul sbbb sarl repz jp cmc pop mov xchg xchg jle jb insl (bad) fiadd imul dec data16 repz and xchg shll xor hlt jge pop in push or stos dec aas pushf mov es fistp fstps jecxz loop lea sbb repz push mov (bad) push mov in clc pop repnz push scas scas pushf xorb push int3 rcll aaa ret dec push cmp in mov test imul mov inc stos pop mov scas xchg add push cwtl cs test push mov mov pop sahf ljmp dec clc (bad) inc cmp (bad) iret jmp push or js xchg sarl cmp mov daa mov xor push push inc stc adc add push jg xchg (bad) cli jecxz xor (bad) sbb sarl inc jmp adc fmull push jp pop push pop or pop insl mov outsl in ljmp xchg lea jmp adc cmp rol inc in cmp mov adc lods xchg in test stos outsl mov mov loope push jae cmc sub cs mov jae pop dec mov add sbb ror fist jbe scas xor adc icebp icebp xor inc dec shll outsb dec icebp iret xlat gs jge cli add fcoml (bad) iret add pop sbb popa add test movsl mov mov cli rclb test xchg xchg gs (bad) adc (bad) (bad) lret dec iret mov movsb dec js popl dec lock adc mov dec add and mov inc test stos push and jg pop std (bad) clc insl pop in repz adc roll pop inc adc (bad) jle push jg lock mov sbb insl mov xchg cmc inc pop dec mov out movsb out pop add sub push sub insb (bad) in cmp (bad) aas xchg sbb or leave movsb dec inc mov add adc cmp outsl ja add add dec (bad) or cmp shll add gs or jo mov mov jae mov jg inc nop add mov adc loopne (bad) sbb roll mov lcall imul push lret xor add test mov mov pop adc aas mov (bad) movaps adc push dec sbb xor jnp xchg push push cli jnp mov pop (bad) push dec in pop ret push jb mov ficompl push scas ss daa push push aaa movb inc jmp ljmp aam std or sbb pop xchg nop push cmp push dec xchg jge std pushf dec ss hlt cmpsl xor dec shl xchg enter fwait xchg or mov cmp leave mov pop (bad) das repnz data16 xchg or xor insl sub add mov mov nop sbb inc mov add fcomps icebp popf mov and xor out adc pop add xlat pop ds xchg into pop scas popa mov adc addr16 inc adc pop dec pop aam or mov xor inc imul loopne sti mov pushf pop and xchg jp inc das movsbl stos movsl push or std jne rclb fcmovu or pop inc repnz add xor test inc es mov pushf std rclb or sar or cli xor sbb flds or shr dec xchg std mov stc sbb aas mov xchg lock addr16 push sar mov test mov mov push fwait mov outsb cld test inc mov jno gs cmp mov insb es mov push hlt das imul mov xor jg sti in mov pop and or xchg (bad) mov loope les pop cmp sub mov popf xchg test in jbe in mov lahf sbb repz push sbb jns hlt push xor jecxz in adc inc dec aad adc into and cld jno popf xor in pop je cmp push pop enter cmp bound aam mov xor in jnp stos jp popf inc fsubrl fwait sarb mov sarl xor cmp lret jge or and push jbe lods dec jno jb push and into and adc pop adc popw scas movsw mov (bad) cld jo pop sarl das add cmp jle sub push ja ret or out adc call in adc fimul mov mov outsb imull mov push push flds push inc mov insl dec mov cwtl push xor (bad) push pop push xchg pushf cmc in sbb cltd sub dec (bad) out lods ljmp push stos outsb xor jp mov int jecxz adc dec and shlb ljmp add pop cmpsb xor mov cwtl mov xor fimul push mov (bad) lret xor mov mov icebp stos out or mov in push lahf xchg outsb cltd js pop adc and inc repz mov cmp mov or push add push add faddl outsb arpl subl mov out pop inc ja inc jne sub add loopne dec es mov push push jns jle xlat mov add dec int3 push shrb adc insl or sbb imul popf outsl or adc sbb mov clc div xchg jno adc xchg jbe stos leave and pushl add inc jnp lea or push cmp pop jmp mov dec add push dec fldcw sbb push mov push (bad) int3 mov sub mov les out popf loope rcrb leave fmul inc das or and mov sub lds (bad) and pop bound jb and pop jg cli (bad) aam mov in xchg mov loop lods (bad) fwait inc mov jp xor inc mov push jo jg xchg xor mov inc call out cmp xlat and xchg xchg adc lock ficomp xchg pop imul and mov mov lcall fmull repnz in cli jmp cld or scas popf mov sbb jl fcomi xchg cld mov push cmpsl sti (bad) mov pop cs jmp dec and jmp dec lret popaw mov lahf out xchg std adc xor sarl xchg clc inc inc mov fild dec out sub ljmp xchg (bad) (bad) jae out ret lcall outsb (bad) aad nop aad in xor cs xor mov sbbl out jne cmc sahf fwait jae push lret mov inc (bad) sbb addr16 loope je out lods and in leave push lret push dec and mov sub cmp repz adc ljmp icebp lret loope push nop inc pushf push out mov in mov sbb push (bad) into pop adc push clc xlat ficom js pop aad fsubs andb imul jns push rcr loope repnz xchg push aaa jg xor sahf js les mov (bad) loopne ja mov ss push (bad) or sub pop cmp icebp shrb mov jns lcall cli jbe into cmp jmp adc in ficomp lcall and pop push pslld leave ds push pop js rolb sbb rcll adc mov stos mov inc mov xchg int push push sub insb xchg icebp pop or adc std adc xor repz cmp shr inc xchg pop (bad) (bad) int3 sub cmp push mov (bad) scas pusha fildl or cmp xor mov xor fiadd sub aaa js fstps out js ja xlat jo or (bad) shlb push xlat data16 xchg cmpsl mov push sahf out notl aad xchg add pop pop cmpsl push and addr16 ret popf mov sub inc fildll mov push (bad) xchg loope adc fsubrs insl inc push gs or stos ljmp or mov outsl xchg lods je push (bad) jle iret outsb cmp push sub mov cs mov clc dec add xchg pop pop loop lea daa and enter incl lcall rcrb lods lcall sahf lret decl dec out aam loopne enter std adc or fiadd test lret xchg inc mov push pop das mov dec into lods aad daa js repz and movsl sbb out sahf mov mov lret nop ja pop movsb mov cmp dec xchg pop jns into fist xchg test outsb mov scas add mov (bad) shrb xor mov and push sub iret mov add xor add popf adc jno (bad) xchg popa adc loope or popf add (bad) adc push test mov lret popf mov cmp jg jne icebp rcll ds sbb scas shll out adc mov cmp call iret insb (bad) out lea sub adc cmp pushf stos int xchg cld imul sub out movsb sbb movsb push add not roll pop repnz xlat push jp idivb nop xchg fcoms xor dec add adc sub (bad) xchg pop mov jmp dec push push fild int3 movsb pop pop movsl or loopne xchg fabs je jnp mov xchg sub jge push mov addr16 inc push test sbb data16 dec dec push mov repz jge xor inc pop mov fs sub sbb mov cmpsl sub dec cmp cmc in or inc scas add out xchg (bad) sbb scas or fwait xor jl (bad) fnstcw out dec lahf dec push movsb mov in xchg in dec negb push ss inc faddl jg scas ret mov ljmp in cmp out cmp mov jge pop adc sub test in push es aas xor cld stos cmc add fistpl pop andl pop cmpsl mov xor lods sbb push insb loop in bound pop pusha (bad) aam mov lods aaa and mov cmova (bad) addr16 cmp pop jge or inc add mov outsl jno nop in push push std jmp in icebp jecxz inc push (bad) jmp push dec lret (bad) or stos inc fistl and aas add adc negb popf mov rcll out add sbb iretw std inc and add sbb and dec test xchg (bad) in mov jmp mov in or sbb jg outsb scas nop and xchg in inc in mov jge std xchg dec sarl roll cmp mov xchg fwait jo lret icebp or into stc adc mov adc out repz es repnz (bad) sar out mov push popf mov jle mov and jo in jno test mov aad lock dec outsb xor cmpsb mov idiv mov cmp outsb jnp xchg push push jae roll push sbb adc mov repnz push into cmc out movsl push dec mov push mov push lods ja mov je sub adc jbe hlt and jae add mov jno scas sub movsl cld dec fnsave sbb cmp or add push xchg enter cmp jecxz mov xor jnp inc push sbb insb clc jl mov loopne adc inc add ljmp and js mov mov cmp icebp cwtl xchg cld and cli push in mov mov movsl push out out cmp lods cmp mov dec cmp cmc sbb cmp mov aam ds lahf xor out cmp js aad jns mov or pop scas dec int3 jg das push xchg mov call jno shl add ror pop mov cmpsl push ja mov pop jnp out test fcoms mov cmp pop imul inc js icebp add or xchg scas mov aas xchg xchg insb scas xchg xor (bad) adc (bad) add pop jecxz or jo rol jb dec sbb push arpl (bad) pop ds or test pushf fwait mov xchg sub lret sarb mov fistpl and dec pop jnp inc jnp fiaddl sarb scas mov adc stc sub add mov rcrb ret jp pop push add mov jp inc repnz lahf cli jns dec mov lock add push out icebp xchg xlat jae mov push xchg js iret push loopne xchg das and stos inc pop push push mov aad pusha into mov cmp add add out cli adc out (bad) fcmovnu out push cmpsb mov lea dec arpl dec lock or cmpsl gs lods pop inc or jl push hlt jae in xchg jnp cltd faddl dec cmp add mov cmpsl dec mov dec dec jl aas adc enter es mov hlt xor adc ja sbb push sub repnz sbb imul (bad) fdivp mov or dec jl and add jae fistp cmpsb sbb cli sub adc pop cmp int out nop (bad) and mov cltd loopne push icebp jae jg lea add fsubrl nop (bad) xor aam sub sbb stc call lods inc pop push ja insl jp push movsl pop cmp cmp mov adc icebp lret sahf xchg mov mov cmc lret sbb pop dec push sbb mov loope test fwait inc cmpsl or andb hlt lock or xor push jl scas mov xor test rcll iret mov lret aas adc imul dec xor jge in mov ds sahf dec pop scas xchg and or pop sbb adc adc push pop push mov inc dec lods mov sbb push (bad) mov sti lret jle sub shrl push pop fstpl pop stos (bad) leave jge or mov and in aad sbb xchg jb or mov xor jnp sbb (bad) out xchg dec inc pop jle aaa stos out push push arpl mov sbb and cmp mov dec jmp in test mov in dec hlt jle sub ficoml inc push arpl fs mov shrl cli or sbb aad scas ljmp stc in inc cli insb add cmpsb mov aam adc push sbb and (bad) clc mov push push push inc sbb ss into jp lea adc popa adc test mov repnz call scas jle int3 jmp jmp add stc or mov (bad) jae dec fsin mov dec mov bound sbb mov lods out in mov test pop cmc xchg clc inc xor movsl jmp cmp cmp sbb int3 push aam and in rclb or in out xor in xor jl int aaa mov jae fcompl xchg or rcll inc add push mov xlat cmpsl movsb or outsb pop cmp stos mov in lahf fwait movsl fist arpl mov test mov sub xchg in dec stos rcl jo mov test or mov mov mov push dec std rclb xor pop pop and xor shr insb aam xor push into pop add push aaa incl pop in aaa shrb sub jbe test push add icebp popa arpl ret cltd in bound fs dec mov stos dec pop leave popf jmp daa into push xchg jle test cli cmp push add pop bnd or inc fsubs mov cmpsb mov inc pop xlat aas jno inc xor lods cpuid xchg mov jns repz mov pop outsl stos mov ja cld mov sarb mov gs and sub pop divb dec pop or (bad) test and movsb inc sbbl pop dec adc mov scas arpl xchg and adc insl cmp xor daa iret adc loope sbb dec push insl cmp out and jo or dec inc (bad) xor mov pop das aaa enter daa sahf pop sbb adc jp out in inc jb pushf dec insb sbbl imul cmp sbb xor mov fcoms lods mov das jmp add add and out sahf call dec (bad) or stos sub fild sbb fidivr xchg jnp cmp sbb loopne loope push das xchg addr16 call cmp outsl ja fdivs out sbb test into sbb inc mov xchg lcall gs xchg mov adc sbb insl fs and stc inc jns xchg mov arpl xchg test fild jns dec fisttpl frstor fstl and inc xchg mov inc push jno mov mov into mov ret pop pop fimull pop push lock jmp cld xchg mov shrb aam inc stc test xorb jp hlt lea jne sbbb je inc pop incb int3 push mov xchg sub sub jecxz lret mov stc in fldlg2 xor and insb cmp xor movsl sahf jge pop fisttpll dec pop push xorl ficomp shrl cltd xor movsb (bad) inc push dec mov add popf enter add and push ficom mov data16 adc xchg add outsb sbb out add in push cmp adc ljmp add sahf cwtl mov mov cli mov lods shl inc mov mov push lcall sbb testb mov sahf jl xchg xchg pop es lock xchg mov cmp leave dec or enter lods xchg pop in cmp pop sub (bad) adc mov pop xor sub and adc or (bad) rolb and shll or sbb dec mov popf stos addl loopne pop mov fildll jge xor daa adc out or (bad) pusha iret aas jmp loope mov sahf inc mov scas jp and cmp insl sub fwait js jl loop pop lret in sub fisttp add inc out (bad) sti mull inc mov sub cwtl outsl jl and sub pop mov adc mov lods test arpl mov daa xchg sbb sbb imul mov rcr xchg or addl in mov ret sub xchg mov loopne test adc shrb loopne fdivs stc jb cmpl (bad) sar lcall inc insb mov fisttpll inc loop sub push sbb pop sti mov xchg loop dec daa push xchg jb data16 test xorb (bad) pop add lock into sbb add lods cmp in inc test jne or xchg xchg divb jbe insb mov test push push push (bad) cmp adc test pop inc xchg mov mov (bad) jb and cmp mov pop std test xlat rcll sahf xchg xchg jp jecxz and pop mov (bad) pop xchg mov mov adc mov leave ja or daa push std mov imull inc adc push mov pop popf sub push mov xor mov fwait in xor add cmp (bad) stos pop pop das scas call fnstsw xor lea push out add cmp adc inc imul bound xor jae fsub (bad) pop jae int mov mov std cltd jl cmp xor adc movsl sbb pop int3 push cmp mov mov es jecxz nop frndint and in sbb test dec sub roll pop push push leave pop imul push addr16 xchg (bad) cltd pop shrb push jne mov jo pop xor insb subl pop out pop ja push stos je aas xchg (bad) sarb add xor insb loop (bad) bound and inc add sbb decl and pop mov das pop jbe or fsubrl lret je loopne test adc mov or pop cmpsl clc nop iret xor dec je pusha push cmp cmpsb subl adc or add dec (bad) vmwrite data16 add frstor jb push cld in jbe scas nop out outsb enter repnz lods push (bad) and cld mov xor imul xor cmp ljmp (bad) xor rcrb pop int3 sub or int3 pop shrl das jg shlb ffreep mov test inc jo xchg fmull clc scas mov shr stos ja sbb cmp sub xor mov je test and ljmp inc mov es lret mul add xchg mov sub (bad) ss hlt pop test push sbb icebp mov dec pop dec fnstenv mov mov and dec sbb movntq sbb add leave push lock mov xor fisttpl push cmp dec lahf test pushf sub cmp shr jg cmp fwait lock mov rolb pop leave shl xchg addr16 xchg test icebp lcall jecxz and jmp mov clc pushf push lahf mov faddl add cmc cld xor adc inc xchg xchg dec mov xchg jl imul pop xorb jo fist push int3 out scas push cmp repnz (bad) or cmp push (bad) scas int3 lods push ja loope push test jae sub dec test inc (bad) push test and push js adc mov cmp inc notb push push das cmp jae les pop mov gs adc xor sub or mov mov mov jbe,pt roll jno fidivl mov out sbb mov arpl add xor call sub xor fsts lods inc in jp scas popa mov pop loop adc or cmp test pushf xorl xchg dec xor and fwait mov lods (bad) jle adc xor (bad) jl pop push mov inc push es cmp adc cmp or icebp (bad) call inc out fucomp iret rdtsc adc pop add or xchg dec xor push out mov iret cmp std (bad) arpl (bad) sub sbb fsin dec or mov mov add pop dec fstpt lock fidivr idivl repz adc sti sahf pop shll setnp stos enter pop out imul sub mov push stc jae or fnstcw push cmc or fildl decl jno imul subl add into mov and cmp iret cli push sahf in cmp mov in fiaddl stc pop pop test xlat movsl ja mov push and test pop in shll add push test rcrb lock cmp sbb or or addr16 lcall fs mov inc fsts jge cs mov int3 mov lods iret js jle lcall xor and (bad) mov jo loopne mov cmp lret jno pop std loopne cld xor dec imul js (bad) fistpl add in enter sub or cmp fwait and and sub adc dec mov mov sub adc rep jp popa movsl xchg xchg xchg out fcoml in (bad) outsl (bad) in mov stos inc stos daa pop inc test jb cmpsb jnp push and (bad) test jae popf push in scas sub rol inc or push (bad) seto jo xor int clc movsl insb sub flds dec add (bad) neg dec data16 rcrl into stos cmp jg push out mov cld add mov xchg inc sbb cmpsl cmp movsb or cs add sbb out lret enter pop loopne jns push cltd lea jnp dec repnz cmp mov push arpl int3 pop sbb cmpsl dec cltd faddl mov cli mov mov dec pop jmp mov rcrl inc in mov adc insl and popa pusha adc and cmc pop or in push jnp mov lahf sbb aam pop (bad) leave pop cmp fsubs or (bad) mov mov mov test test lds sbb (bad) rclb cmp cld sub insb inc mov jecxz shrb mov xchg push bound (bad) mov mov insl dec sbb fcompl test fisttpll sbb mov adc andl jnp lods lds xchg or fldl mov pop pop test xor cmp or aas mov dec jmp stos cmp xor sub or shr and sbb popa lods jl loopne data16 pop lret mov add data16 roll movd sub mov imulb jo ss sbb dec xlat jmp mov push push push cld imul push pop jl pop xor jge repnz add mov sbb (bad) daa jge sahf cltd and scas mov ret jo mov dec or inc adc inc mov repz jmp cmp and mov pop add xchg in dec sub adc mov sub loopne mov out push outsb jmp (bad) movsl jns mov aam jb popf ficomp lret mov mov xchg sbb dec cmp add push mov pop mov and or nop arpl cmpsl mov loope imul mov inc xchg mov push daa jno and pop int3 cmp out (bad) cmc jge pop add int cmpsb push and fisub dec icebp jp mov or push call cwtl or adc negl cld mov cmc (bad) cmpsl adc fldenv adc xchg jmp add repnz xchg int3 insl stc mov adcl jne std xor (bad) pusha push cmp mov push jle pop mov jbe gs jle pop xor stc pop dec popf dec mov iret ret outsl fidivrl jmp hlt ss (bad) mov mov sbbl jne pop outsl jnp push add push (bad) rcrb icebp cmp lock add mov mov push jl adc add loopne imul sbb jmp mov inc jae out or jo cld xor sub dec pop jp daa sub add js mov fmuls adc mov sbb xchg lea xchg ficomp cmpsb push outsb fwait add jle mov jp das mov pop mov and aam jmp mov pushl jns out mov mov fdiv fwait push mov dec adc pop adc cs pop dec hlt stc mov jmp out pop xchg pushf xchg mov js fstpl jl addr16 cmp push add adc cmpsl xlat mov js ret icebp mov sbb lret dec cwtl fiaddl sbb repnz sbbl imul in cmp movsb push mov dec or jbe push jbe xor movsl addb pop jmp cli xchg (bad) pushf fcoml pop mov imul mov add lock jb jecxz insl (bad) aas dec xor dec adc lock or cmp loopne sbb cwtl jb xchg popl (bad) hlt call shrl and adc cs cmp push jecxz imul pop mov adc mov pop push cmc sub clc and clc les insb mov or pusha inc jno in lahf and jns sbb sub movl sbb and dec inc imul cmpsb rclb popf popf fwait out add rolb ja mov or psubq mov adc inc jle mov pushf inc insl jae out es inc jbe pushf cmp loope pop clc aaa mov dec inc lods imul pop outsl stos xchg cmc int3 enter ret shl jae and movsb mov mov xor mov psraw push xchg movsb or push in jle xchg dec outsl xor mov sub (bad) mov xlat out xlat mov sti insb cmp lcall lret jbe test and jo (bad) jae mov clc subb lcall mov test aaa pop pop cld test pushf movsb std add mov mov dec add xor xor mov lcall or pop cmp mov not cld pop cs mov add inc ds mov (bad) stos adc mov pop pop into int3 inc mov fadd hlt imul mov (bad) enter or movsl jo xchg lods jg xchg out aam lret xlat nop rorb and sub lods adc mov fwait jbe add mov push dec xorl fadd test fcoms sub sbb push in xor mov mov pop sbb jnp in leave mov sub repz add or (bad) jbe (bad) cmp push dec push lea cmpb iret mov push sub fisubrl cmc sbb push or add add push int3 stos fstpt mov mov mov lods test mov addr16 or or inc or test shrb inc stos lahf sbb add mov jne sbb in push adc mov pop cld xor adc test imul mov das jns cmp push push mov loope dec push das ret cmpl je out data16 and pop mov shrb (bad) outsb rorl and cmp lods les inc test test cmpsl data16 lcall jg sahf mov mov mov jg cmp rorb es push mov jnp jns addr16 jecxz dec (bad) iret or scas push stos fldl into dec cmp sbb scas jb sbb mov pop inc pop in in inc (bad) jae sub sub sbbl in int3 shrb jge sub imul and cmp (bad) sbb (bad) call and lods xchg xchg mov pop pop mov dec gs repnz sub push mov mov pop in icebp flds adc add mov lcall jo push shrl pop pushf dec or lods xor adc int notb incl in mov push cld dec out dec jbe aam shlb xor test add outsl out sbb xchg imul sbb (bad) enter shl lock dec inc testl cld add fildll out xchg jp or mov lods aad dec clc aad dec stos inc adc jb hlt add dec inc xchg test fwait sbb lods imul out movsb nop mov pop ds cmpsb imul xlat ds imul sbb dec xor xor sbb outsl push std mov gs sbb jge out mov add cs (bad) mov cltd sub mov sub push mov jns jne ss scas cmp dec xchg rorb subl (bad) sarb in fdivrs cmp sbb je shrl push mov xor pop psubb sbb pushf int3 aam enter push lahf adc mov mov loop pop out jmp iret pop mov (bad) inc cli movsl outsb xchg push lea inc stc fs push (bad) enter xchg rcll js add out gs mov (bad) lods mov std push imul mov fwait mov xor lock adc inc sub (bad) jmp xor test sti or adc jecxz add pop sbb jns fwait xchg cmpsl fdivr out stos test push jle jae int pop inc arpl add movsl fidivrl mov loop jge push pop mov sbb jne outsl cmp cld dec fdiv (bad) out aaa cmp lea push jno cmpsb out clc jg sbb push adc mov dec inc (bad) addl adc and jb dec mov push mov push dec lahf mov jno cmp mov sub push aas test negl jg xor call aaa subl out add lods sbb mov gs xchg scas or push mov xor outsb jle add inc pusha xor fcoms and out dec (bad) lcall out insl add ja mov xchg adc push jns inc lcall test lock add sbb fildl rorb movsb mov mov inc mov movsb sub into lret push lret mov iret push jecxz movsb loopne xchg or add jmp jne pusha outsl jl pop add cli dec fstpl in test add cmp and pop (bad) sarl bound mov std mov sub mov fs orl mov pusha loope mov xchg sbb xchg ficomp mov mov lahf or roll inc popf mov mov movsl nop pushf cmpsb jle xchg fnsave rcll adc cmc cwtl mov push mov stos xchg movsb mov sub sub jno mov or push xchg sub adc lcall mov jno sub mov cmp je cs lock cltd xchg jecxz aaa movsb loop inc jle jne mov (bad) jmp sub pushf ret mov mov cmp (bad) jae pop shr js inc aam in jb lahf iret in cltd cmp fs pop int3 pop pushf mov and mov cwtl jnp inc or cmp mov and and test xchg mov loop xor icebp cmp mov add push mov loop cs sti fild popa inc out out mov rolb sbb push sub inc push push test adc pop lret mov mov xorb mov loopne add outsl pop stos pop and mov dec int3 (bad) sbb dec lock mov jl or imul int xchg xchg das in pop popf fimul dec leave mov add push add int3 adc out xor pop int imul lods lods aas jo (bad) enter cli add jle fsubrl idivb sti push and or stos aas aas cmp lcall subl adc cmp mov lret jmp cld and scas int3 dec (bad) int3 inc inc (bad) cmpsb sub mov js data16 inc and jb pop push call outsb inc inc (bad) xchg lret push rcrb sti cmp test lock adc out push cmc sub int jecxz bnd (bad) jb xor scas pop mov mov xchg mov popa mov push mov xchg scas pushf xor jl scas push pop outsl xchg fadd xchg sti (bad) jbe nop mov imul icebp loope loopne or mov icebp das stos les popa mov mov push cld mov aaa mov lcall add test push mov jmp das mov mov mov sti mov rol sbb sbb push cmp clc cmp aad adc mov add dec mov (bad) pop in ret fnsave pop lret inc cmp ror add ja je lods daa sub sub pop and gs faddl arpl fwait insb cmp jb and sub jmp pop movsl popf scas mov leave (bad) aaa shll add or loop cs imul jecxz mov push mov call scas pop jmp cwtl out out test xchg adc sbb cmp pop dec lcall int sbb in andl pop mov jne jno test pop icebp pop lcall or loope lcall push jg fadds mov dec xor popa pop mov add push fistpl hlt mov pop and mov sbb or push loope sub add jle push cmp jmp inc pop mov mov xor xor dec add inc mov (bad) push lock dec icebp inc dec xor xor mov clc shlb xor imul (bad) mov or arpl ss jl in pop push inc pop hlt xor fcmovnbe cmp push mov mov xor hlt sub data16 sar movsl enter mov cld icebp sub daa ds clc push jle test jp jns mov xchg jae jae and movsb cmp mov adc mov call lods out pop xor in jb jnp divl jmp es jle pop push fsub dec stos call fldenv jge (bad) std dec sub cmp scas xor cltd add shrl adc adc sub aas cmp cmpsl out mov add in inc and (bad) fdivrl loope lret stos movsl cltd dec pop sbb outsl push imul stos mov test out cmp push fsub pop hlt es stos push movsl pop bound imul pop xchg jle push pop push xchg jne int3 lods je xor cltd xor cwtl test mov std insl adc xchg xchg (bad) leave xor dec movsb push addr16 xor loopne cmc or call movsl mov cmp mov mov call into insl scas xchg pop push jecxz xor ret repnz mov popa in lock movsl xor jge incl adc (bad) std pop xchg cli adcb loope push and in push mov inc cs cltd pop outsb jb cmp inc cmp (bad) divl inc mov xchg fistpl call (bad) lret lods stc cmp mov jo jno popf sarb (bad) in (bad) repnz adc dec jle iret push mov jb (bad) mov add adc scas popa (bad) xchg adc es mov sbb push mov rol int mov xor out push sbb jns sbb add mov mov jg loope inc jg mulb xchg imul fidivr cmp mov and daa jo mov or pop cmpl cmp cmp test xchg lock jns (bad) inc or flds aas es lods xchg mov pop test add mov loope imull test inc push add add or mov test loop (bad) dec ret xchg ret aam pop mov in push movsl jnp ret rclb fidivl mov mov inc mov and ja nop and push imul stos sub cmp je jmp stc xlat int3 and movsl pop jns ret and mov and dec mov lcall jle inc pop push (bad) mov (bad) add enter mov or inc scas pop or (bad) (bad) fsubrl mov mov cmc xchg inc inc outsb clc fs jle fldenv xchg ja pop add push out cmp out pop ret mov mov push leave pop mov fnstenv mov pop sbb out push leave test or push xchg inc cmp movsl jecxz pop gs cld lods and fisubr daa js mov pop (bad) mov sti mov dec and sub adc daa into mov std xlat add (bad) ds mov and mov mov xchg sar pusha add nop mov pushf out int pop adc aaa out and iret (bad) xchg pop lock pop stos ds inc mov adc adc mov popf mov dec lahf fstp repnz rcll xchg xor mov scas sbb push addr16 mov cs repnz cmp add pop mov and add fistp xchg fisttpl push aam cmpsb and push fsubr mov aas or inc stos fwait sub add ss dec in xor nop inc jno adc lock loopne cmp cld lret fisubrl sub cmp jmp es sbb bound cmc mov fcomip imul mov nop push adc or orb mov add fmuls xchg cmc scas cmpsl ljmp sub push out push and mov cmpsb sub sbb dec push sbb test into dec xchg lods fiadd out jg inc mov dec jo dec jnp in pushf call mov xor in inc xchg xor aas xchg in lds je pusha xchg pop pop pop iret or push js sub add cwtl add xor jne les push mov hlt movsb sub jmp lods dec loopne mov mov push lret iret loop ss mov or xchg notb rolb int movsl inc insb ds sub loopne lds pop popf mov cmp nop pop cmp pop out push cmpsl ror inc cmp xlat enter push sub hlt pop adc push mov xchg dec mov mov pusha inc repz repnz mov notl in xchg lock jecxz jle insl js jnp xchg repnz jo xlat pop xchg loop,pt sub sub ss lods cmp xchg or cmc xchg sbb and sbb push (bad) dec call inc push out mov shl add mov fstl mov shlb mov movsl nop and mov jne jp jl jae test mov lods adc inc hlt sub cmp cmp iret push cli pusha sub adc sbb adc call lea jne mov bound pop xchg nop int3 loopne inc pop mov add mov mov push dec adc cmp mov inc test pop cmpsl inc dec mov dec mov fs leave adc stc mov (bad) or adc dec or test adc dec stc sbb (bad) jecxz sahf nop mov rcrb aam bound mov xchg ss mull dec shrb scas push pop cltd cltd movb mov dec addr16 or and imul adc mov inc fs gs stc push pop (bad) mov rorb fidivrl jecxz and push inc sub sbb xchg push add adc xchg sub and xchg cmp mov pminub cwtl add imul ret push out sbb jae fmull inc insl xor repnz pop unpcklps pop or scas push mov add lods dec add inc test loop inc inc outsb inc std loope (bad) sarl dec addr16 mov rcrb inc mov xchg mov call sub mov push pop jae xlat in and xchg push sub subb xor dec pop lods cs or mov jle shrb mov outsb out add inc out mov and test add xor clc push sub ficoml movsb (bad) lock rcll out push and sub pop adc mov xor sti into arpl sbb (bad) and stos mov push lods lret jle jnp xlat pusha in jb icebp mov ds fisttp jecxz cmpsl and push repz adc rolb aam mov xlat mov gs fldcw or jg pusha stos cmp into xorb movsl fstps or fisttpll shrb gs mov imul inc mov add pop mov ficom movsl in dec pushf test ret repnz jg ret cmpsb loop xchg loope mov mov sub popa adc mov sub xchg ja inc (bad) loopne adc xchg popa daa scas mov lahf jmp rcrb data16 mov jecxz jne xchg das je ja mov in notl fistp popa mov xchg or cmp (bad) jb mov jecxz loop (bad) jae adc xchg fisub loopne inc pop pushl xor popf push outsb or movsl sar adc and sahf (bad) xor ja push loop adc adc int rcll pop dec test pop mov insb dec ljmp push xlat clc rcl mov iret pop call mov out out add (bad) pop fsubs sub fs out xchg cwtl add sub lods dec cli add push pop xchg daa xchg sarb (bad) jmp jb xchg es cwtl cmp clc jecxz mov ja push mov rol add lret mov aas es cli mov popf mov popf dec cmpsb (bad) adc xchg xchg outsb into pop aaa jmp loope repnz out jl push mov loop shll pop (bad) out outsb mov add or add jb (bad) jae clc mov test pop dec adc mov pop mov sub scas call adc adcb sub in subl dec popa sbb nop jno stc ficomp push sub sahf (bad) data16 mov shrb insb jae pop sub cmp das pop push bound jmp xchg sar jmp push jnp sub add or fdivr test dec xchg in xor (bad) ja adc ret test addr16 repnz sbb dec (bad) iret lods mov xchg in fsubrs mov add cmp insb xchg or add pop adc mov push push cmp leave mov popa pop jo mov in mov rclb or jae int fadd inc enter pop repnz (bad) ljmp or mov ljmp movsb xchg xlat inc mov rorb mov add add pop jg xchg (bad) cmp jg mov sub cmp lds lea lret cli xchg xchg (bad) dec mov mov mov sub dec (bad) aaa lds mov inc mov sbb push int3 nop or hlt movsb or int xor inc add fmulp add imul inc lahf leave outsl add jne lock mov les jbe add popa sbb jmp outsb in adcl int xor mov es cmp lods xchg pusha pushf daa clc cmp gs xor int3 sbb nop iret jle xchg das (bad) fistpl (bad) lret inc mov mov test jns loop dec (bad) lock arpl pop mov sbb (bad) xor std call push lret push jge (bad) push fwait jns,pt nop pop dec dec pop pop jbe jp enter enter jbe add jnp cmp aas push cmpsl fistpl sarb enter fwait imul push mov insl push jmp mov xchg test mov pop (bad) pop mov outsb inc and cmp jns and out mov orl xchg cli xor lea jp (bad) pop or mov mov decb fisubl xlat fdivl lcall outsb insl cmp jp cmpl ret les push shll pop dec movl lds (bad) pop or in incl out add call in in or bound dec cmpsb inc lahf aam xchg xor mov xor push popl out repnz push and xor jp test cli (bad) ss shr pop mov (bad) lds int push sahf mov sbb xchg sahf mov in xchg ret inc push sar lcall inc xor (bad) xor adc sahf dec ja xchg or add icebp dec lods sbb mov ds popa mov push pop jge fidiv mov (bad) mov fsubrl sub in scas cmp outsb mov mov push xor (bad) jmp or out fstpt (bad) loop jg loop xor inc ret sarl stos and arpl inc inc ljmp mov ret mov loopne (bad) push pop and xor arpl shr fnstenv push mov sbb mov out xchg and dec xor jns cltd fsubr lods add pop scas hlt mov sub (bad) adc xor xchg fisttp adc mov out push or and ljmp push daa pop pop out arpl popa js gs movsb leave lock dec pop xchg and push adc dec int3 adc fwait stc mov pop mov inc stc stos cmp cmp nop xchg icebp jmp imul fldt aam movl outsl and imul xchg jecxz mov les fwait mov cmp jecxz xchg dec pop into dec into (bad) mov inc (bad) xor add in dec aad repz jge in jmp xchg xchg mov push xor sbb shll jno xor pop stc pushl ds ret outsb xorl inc adc cmp mov push and aad (bad) jbe adc in sbb xchg adc and je and jae lock bound xchg or clc mov jge aam stos xlat outsl (bad) fstps push les adc das in fidivr dec aaa cmp ret outsb push out les cli loope les jo jecxz das popf sbb dec xchg into pop negb jge scas pop dec xchg outsl cmp aam mov add into movsl xchg in fcomp imul fbld sbb popa daa push jo mov mov push dec scas inc adc xor push jl pop cli repz daa push stos addr16 jg dec pushf or out js fwait push les dec cmp push or inc jl cwtl cmp repz int les xor or test push mov sbb (bad) stos les push jmp sbb sbb sub jnp test cmpsb and inc lahf push cmpsb sbb lock mov inc push or xchg out leave mov jle repnz cs jne ret mov jnp jne imul test push mov sub cs fldt xchg and xchg mov fsincos adc lods pop mov adc (bad) imul jmp add mov jmp subl call jbe ja inc mov jbe cmp jnp mov cmc sub sbb pop inc addr16 leave push aam fs pop jg or in rol lods iret cmp bound add ja (bad) nop int mov int aad jnp cli out dec sub stos jae pop divb shlb cld out cmp mov push jle (bad) call imul push fcomps fsub in je xchg cltd mov xor inc push nop out mov cmp or pusha imul sbb loop (bad) xor mov mov rcll mov fsub mov xor mov pop inc push fidivr je dec scas popl das mov jg jb shrl icebp (bad) mov xchg lfs inc stc rcrb cltd mov add push call std fs lea add jmp pusha fldenv leave or inc cwtl cmc mov insb push dec subb mov xchg aam add andl frstor cmp call out pop adc fcomps push or shr ret pop (bad) into sub lret cmp dec mov mov aam imul addr16 jnp xor repnz mov iret mov incb jne jbe xchg xchg mov outsb xchg rol stos clc loopne sarb xor test dec push movl lock icebp cmp (bad) and jle inc mov scas jbe outsl mov mov aad cli hlt sbb hlt or add sbb hlt scas nop dec repz mov (bad) xchg add pop incl leave mov (bad) and fbld pop rorb jno,pn out cmp and mov sub mov repnz jecxz shl pop push leave and push pop nop mov in mov std out das in push (bad) leave das (bad) push add ds sub adc inc fcmovb sbb sub push pusha mov and push fbstp mov xchg pop cwtl nop mov push dec push add or sbb addr16 cltd in leave push sbb dec push scas daa out std xchg aad or ja movsb and mov and dec ret jmp scas rol inc cmpsl dec jae dec jg in mov add ds (bad) jecxz push mov stos cwtl inc lahf dec sub loop xor lods sub sarb cld inc sub aam movsb fcoms xchg jb rcr in (bad) je lds mov bound dec (bad) xlat and sbb test or sub in sahf lds pop or sbb pop pushf sbb sub pushf mov decb imul popa in into fwait inc pushf mov sbb and out sub sbb pop out mov stos fsubl jl into mov aaa dec sahf or (bad) out mov lods movsb (bad) stos sbb jns aas mov mov add fwait xor or rcl push mov ret jmp cwtl mov imul cmp push mov mulb sub push nop lea jp mov inc sbb hlt std jno fdivrp fidivr xchg movsb aam lea mov addb or xchg repz and push push xor mov in loopne mov lds mov jne xchg outsl add mov jnp data16 rdpmc jbe xor inc test dec inc pop sub sbb fadds sarb inc in call jle lret rclb ja xor mov mov rorl mov sahf jno mov das insl adc subps or and pop push lret pop pop sub and add pop daa sahf int3 sub jg add and pop cli mov andb pop push inc pusha mov ss fs inc inc inc outsl and ljmp imul mov inc fucomp dec mov movl addb fmulp dec scas pop mov fistp movsb cmp push jbe shr les fisttp jg js jecxz xor popa ds push sarb mov leave aas leave pop adc push js jmp aaa enter lcall mov cmovle stos rcrl cmpsl mov add mov ds std xchg bound test inc rclb mov in sub pop mov mov je xor popf clc xchg push mov mov lock adc pop jne test aad cmp mov sub mov push pop dec inc adc repnz sub lret sarb cli clc out cwtl (bad) push push xchg test fbld and imul adcb hlt sub mov (bad) fstl cmp push mov mov xchg mov in jge pop mov cmp push in ret (bad) (bad) in or in inc jmp in mov scas push mov mov xchg inc mov (bad) pop sub sbb (bad) adc pushf dec fistp rcll mov xchg mov xchg sub jo cmp scas ret dec movsl inc pop mov daa xchg pop cmpb xor lods push popf add out bound aaa jo push mov out ficomp jae sarb (bad) out and xor xchg mov popf repnz inc dec mov mov ljmp lods sti and (bad) outsb int jge dec cmp movzwl sahf dec and add (bad) dec rclb pop cli inc mov and lahf and jo pop dec outsl jg outsl cli sub in psubsw xchg movsb dec mov xchg sarl adc pop mov sbb sarb insb dec push xor lcall ljmp inc or lods (bad) addr16 xchg dec cmp mov mov push jns sbb push mov leave mov sub icebp dec repz shll pop data16 xchg cmpsb mov icebp add sahf pushf xor in fdivrp ljmp loopne mov sub fistl ret dec inc int3 (bad) aaa adc mov mov jle sub jmp sbb xchg out data16 out sub jp mov push pop lea int sbb cld cmpsb cld ret mov pusha adc (bad) push sub je push or pop insb and js jl add std test xlat int3 inc push in popa movsb call pop fwait mull and or push or mov pop sti and mov inc lahf xor sub or test (bad) jno adc mov jp push lret cwtl mov sahf cld test cld lahf lcall rorb ja jmp sahf cmp and negl jg (bad) dec mov daa fdiv bound dec sbb pop enter dec stos data16 (bad) (bad) dec push pop jecxz xchg sbb jp int3 xchg rcll mov adc xchg ss or and pand mov adc movsb fcoms push mov fistl inc ljmp mov out (bad) loopne inc sub into mov cmp mov mov add mov push and mov xchg ret loop mov cmp or mov out mov out pop mov cmc repz jbe dec (bad) idivl stos in cmp sub aas add (bad) popl ds scas adc sub push jp or xor sbb and xchg imul dec and dec sbb (bad) stc jbe sbb stos pop outsb cld incl into sub addr16 loop add jnp cld test pop ret les iret add adc sub fisubl lock push cmp xchg xlat sub aad pop and jne sar inc push jecxz (bad) fxch adc andl stos aas jg push dec xor sti ficompl daa gs inc cmpsl pop hlt test cmc lret jmp (bad) lea push daa adc xchg stc mov pop enter (bad) mov mov nop xchg popf pop pop insl jp (bad) add lds ljmp fldcw jmp dec mov mov out in sub mov fcompl fs sar cmp jne mov and push popf jns (bad) mov std (bad) dec xchg roll push and mov das sbb jmp dec aam pushf inc xlat (bad) xor mov xchg scas mov movsl mov je xor scas ljmp mov gs mov inc jg and mov jp and lds pop dec in js js lret adc mov clc out and cli push js adc dec lea jnp lahf pop push ss pop push cld hlt mov imul cmp lret mov in in mov scas sti lods push stc mov mov (bad) fildl loope sbb out push jbe imul pusha xchg add fneni(8087 xchg inc mov loop adc mov jge inc les pop inc pop pop jnp sbb jmp push mov cwtl popa dec xchg mov test or sbb (bad) and (bad) cmc sbb fucomi lods vmread decb popf mov pop aas inc or mov jl push loope cmp mov sti add or (bad) pushl (bad) push push sub cmp loop push nop mov stos mov (bad) jae call ljmp jnp lahf mov lret mov add in (bad) bound cmp push mov sbb mov out pushf popa xchg ljmp leave dec imul jle dec jl lahf and add sbb test cmpsl push push push push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 pop les dec aad sbb sbb dec xchg (bad) ljmp (bad) mov mov sbb sbb call ffree stc pop jae sarl jns push enter fisttp outsl (bad) sbb fcoms mov mov (bad) push (bad) push hlt xchg out negb lret cmp fs ficom in cli ljmp cltd cmp mov scas es mov lds sti popf sub xor das pop add lods out and fbld sub mov inc fsts sub push dec xlat outsb mov movsl inc pop sub inc out jge leave ljmp push outsb les rorl and mov adc xor fisttpl jb das mov (bad) mov inc loopne xor mov nop loopne sub and add (bad) cmp mov cwtl cld in adc mov mov mov out cltd and push stos out push pushf and mov jne or xlat push inc dec mov mov jp push and mov xor nop dec push hlt push pop and cwtl mov test mov (bad) stos cmpsl or ss stos lods xor sbb jo adc cmp outsb out daa jb inc lea (bad) nop in sar js jb inc cmovp xor adc xor mov pop ljmp in popa adc movb adc sahf mov pop shrl cwtl pop and addl and inc pop add ljmp ds frstor lods mov or xchg inc in xchg lods jge dec or icebp out mov sbb aas pcmpgtd hlt (bad) sahf aad jbe jbe sub fstpt divl addr16 ljmp int xor pop int3 xorb scas std inc xchg fs pusha pop (bad) push imul out pop mov push lret mov subl lock inc sahf dec pop mov dec mov loop in movsl xchg mov popf test xchg sbb sbb dec xlat adc add xchg int pop icebp ljmp and inc adc dec stos int3 xchg mov mov popa dec hlt repnz fcomps inc sti addr16 xor sub (bad) and push fs (bad) xchg jno sbb arpl je mov xchg sahf pop mov and (bad) or xor or mov lcall sbb cmp in mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ljmp movsl pop sbb mov add push das jnp test mov gs jmp js adc arpl lahf fisttp outsl push mov push call jge dec loop push and mov into rcll in and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 pop les dec aad sbb sbb dec xchg scas loop sahf in jbe stos (bad) mov mov sbb sbb call ffree movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 pop les dec aad sbb sbb dec xchg (bad) pop sahf in jbe stos (bad) mov mov sbb sbb call ffree mov pop cmp jno test sub imul call testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 (bad) sti pop dec adc pushf test (bad) outsb dec jmp in dec xor and icebp mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp mov sbb mov pop push jg and lcall push add (bad) (bad) (bad) test mov fwait out xchg push stos pop vmwrite sub xor faddl cld adc popa (bad) sub je ret out sub test ret sub loop push mov std add fcmovnbe pop cmp movsb imul jl jg sti das (bad) xchg fisubl cmpsb movsb jmp ror dec pop add mov stos test inc pop jge xlat mov dec mov icebp lods insb movsb orb xor jecxz inc daa mov fucomip arpl (bad) repnz imul jbe emms pop dec leave (bad) fnstenv lock mov roll iret add movsb jmp inc fisubrl pop lds clc xchg mov ja scas pop add pushl push mov maskmovq cmpb aad mov aas (bad) mov les sbb stc ds cwtl out (bad) jle jbe test (bad) and icebp sarb inc fs cmpsb pop outsb mov add sbb mov sbb rorl inc add (bad) mov add jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp mov adc jae movsb xchg call cmp stos (bad) xor or jns xchg lcall push (bad) mov xchg test mov testl add inc mov dec lret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 mov lock pop dec fimul pop sbb cltd roll push in dec xor xor test or and ffree mov movl movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 (bad) jnp pop dec (bad) push cmp cmp dec ja insl shr dec xor xchg or jp fs shrb mov mov fidiv jle (bad) loopne xchg mov or (bad) sahf std pop mov jg cmp xchg aaa popa push mov cld ret pop xlat int3 lods in std push jne jb fcmove jne jp decl dec cmp ljmp in mov jmp (bad) dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp mov xchg push dec (bad) fildll xchg outsl jbe sub add dec (bad) mov sbb call ffree std pop fistpl add pop sti or mov add xchg dec mov sbb sub xchg shlb cmpsb mov push (bad) xor lret push out jl,pt enter pop test jbe inc imul push adc (bad) pushf std aas cli mov or shl jl sbb leave inc das dec arpl (bad) mov pop ljmp xchg adc movsb cmpps ret sbb sbb leave repnz mov jmp ret pop dec int sub cli mov aam xor cltd bound jno addr16 insb daa into fsubs jp dec lahf pop sahf mov mov sub test push sbb lock outsl in jl jae inc push xchg test notb sbb popl cwtl out inc mov lods movsb sti and xor outsb mov push dec or sbb xchg scas (bad) push (bad) cld gs stos insl stc pop sbb add cld movsl jecxz (bad) mov in sub movsl xchg mov stos cs insb sub sbb jbe hlt (bad) ret sbb out (bad) lock (bad) insl push in adc scas movsl shlb ljmp add mov sbb jle sub and pushf cs mov arpl xchg xchg clc data16 in pushf or cmp adc lret ror test call clc lock push mov fwait or jl fisttp inc sbb nop mov testb xchg lods sti xor add jbe xchg jns sub icebp push ljmp mov insb push (bad) js xchg fiaddl mov cmc orl xlat dec stos enter inc add lret sbbl mov ja and cmp lcall popf cmp bound dec movsb int jge adc mov mov jg rcll xor and mov sub cmp cltd loopne fadds cmpsb mov movsl mov adc lock inc mov add repnz pop lahf mov pushf pop jno pop dec cmp dec cltd clc push dec cmp push xor sahf pushf add dec call mov leave or and push fidivr lret loopne pushf repz push leave lock jno out adc test inc out cmc push pop mov push xchg fwait and pushf push lcall test pusha test dec push hlt cltd and and cmp shll int3 rcr imull xchg div jno sar aaa (bad) and in jp inc xchg jmp stos enter mov pusha xchg das mov test sbb mov xchg lods push call in sbb xor je cli xor es mov fnop leave dec inc stc push jle out repnz or loop add add sti jne dec (bad) mov inc xchg aas mov cld adc mov outsl out rcl in js ret pop add sub push xchg dec pushf out mov mov repnz (bad) loope jno xor mov jns rclb mov icebp popf insl mov cmp sbb outsl lahf loope push cmp test mov and (bad) pop jae je or jo jmp repnz aad and lcall lock repnz out jae push test test sub adc inc clc fistpl fimul popa stc push jno pop imul and mov mov test int3 dec jbe mov pop sbb push sarl sarl test aas cwtl lret daa adc inc iret xor negb cmp popa xchg arpl jno jnp cmpsb jp movsl out push pop push (bad) mov outsl inc add ss movsl jmp fistp xchg add inc (bad) aaa dec sbb lret sub jne xchg xchg adc test lods rcr (bad) loop fucomp popf inc cmpsb lcall add jne rolb es jno sub rolb movsl out std aam jecxz sub cmp dec xchg push pop divl xchg in pop sub xchg into sub rorb shlb imul shlb in movsb xor mov dec pop loope adc add mov std dec push fwait ss push inc lahf (bad) repz inc imul test lea lret out jg hlt mov adc jbe xchg movsl fmulp mov inc sub sahf test iret lds jb mov lods stc jno cmp (bad) xor mov in lahf push sbb dec adc out rcrb or push (bad) xor mov cli mov aam mov pop es adc push lds sbb int ss and xor xchg daa nop add (bad) mov fstpt mov pop mov xchg xchg dec xor fisttp neg imul adc pop sub addr16 push dec repz icebp push jmp pop inc fneni(8087 andl loope pop add xchg cld out inc or xlat js bound lds int3 popl sub call jp push scas or cmp (bad) add add add add xlat xorl push fmull notl sub (bad) out fsubrl pop cmpsb sub iret sbb sub mov gs cmp mov repnz mov (bad) faddp xchg in mov or sbb (bad) cmp lret and mov das jns inc sbb adc mov cmpl adc rcrl jg mov ja and push sub aam cmp stos sub dec mov xchg adcl in ljmp aad fisubrl movsb and dec add sub sub add fistl mov frstor mov jo popa adc fisttp mov (bad) push sbb ror imul add fisubrl inc sub fcompp pop fnstcw adc fbld pop push cmpsl adc in fstpt add out pushf or frndint mov jge sbb out push jmp mov rcl fstps lds and lcall outsl sbb mov mov xchg or mov stos js mov xor scas mov push mov jge xorl jl add lds jp sti jl out jbe ds pop pop fcmovbe lds sbb pop push lahf inc arpl sub jnp push (bad) movsb jl lds stos insb push mov adc popa in lret or rcrl movsl mov das pop rcrl pop mov mov sub ljmp aam cwtl xlat xchg mov pop or jge jns mov jmp out ret inc jno and sbb aaa aaa je fwait enter dec das cmc xchg pop lahf and fimul insb xchg pop test icebp aad imul les ret test pop adc add lahf icebp cmp lds rcr xor repz xchg jo test inc nop mov push jb shrl ficomp mov and lods test or stc aad pop pop dec imul cmp inc addr16 push sbb xor addr16 inc pop outsb pop mov or fistp xchg push das push movsl xor pop in jnp fisub pop cmpsb xor test cmc clc fidiv fnsave mov fabs and cwtl xchg xor mov inc test push lret mov fcomps insb bound aad pop arpl cmp mov ret and gs fild in and mov shll shr cmpsb addr16 dec int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 iret sub mov aad mov sbb push fwait bound mov push cmp out xchg aam test fcmovu jno sub or adc inc cs xchg ret or or or push adc std and jmp mov pop leave test add jnp push (bad) lods sbb insl xchg add enter dec inc scas aad dec fs adc mov jno mov cli cmpsl mov mov insl adc iret add dec cmp dec adc mov jecxz adc icebp lds clc adc lcall jecxz (bad) jbe outsl xchg lds push adc mov mov or outsb pop cwtl pop adc ret push cmp outsl dec dec pop imul or fiaddl (bad) (bad) mov movsb pop aad (bad) sbb cmp (bad) test xlat lret mov ficom dec sbb adc xchg add sbb xlat test cmpsl sbb and mov lcall push dec xchg xor shlb cmp add mov sbb lcall add or push negb fwait (bad) xor jbe jmp test test cld inc and mov mov jp mov (bad) or push je stos into (bad) jae lods inc clc insl stos mov adc cmp (bad) push das adc mov xchg cltd aaa iret data16 imul adc fwait dec stos out jle jmp inc mov fstpl cmp cmpsb push leave out loopne jns sbb std inc shll lods call xor imul dec insb inc inc xchg fistpl add jl xor xchg mov cwtl popa (bad) imul inc mov (bad) dec or outsl mov test fs scas sub jo movl insb gs push push and movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 mov popf loop push jecxz orl add outsl cmpsl or mov mov sbb xor adc arpl push out or xchg xor aam test sub imul jp leave cwtl add gs mov jne push cwtl enter ret lcall (bad) push add insl js leave repz pushf (bad) in or test insl arpl xor sbb js out das mov push in xlat insl jmp fldenv jns jnp push lods push jl jmp test push (bad) popa leave dec mov mov cld lret jmp adc mov push lods rcll xchg xor pusha pop je pop ja faddl push dec jbe jle lea mov jb aaa mov sbb dec frstor (bad) sub push call (bad) aaa jmp in or mov sbb jecxz xchg cwtl cmp xor adc das jg stos sbb sbb pusha int xor pop int fistl cmp add xchg pushf inc sbb sub aam enter xchg lcall movsb icebp xchg lds cmp or jecxz rclb into sbb mov mov faddl loopne,pt into arpl data16 (bad) jae dec adc pop outsb in pop incl jmp es mov push jns lods ret mov fld push in in push pop pop pop js mov add add xor (bad) notl adc jae or or sbb xor dec and nop xchg inc xor mov add adcb test and test stos pop insb imul add bound ret push jmp repz mov lret je xchg popf sub or jmp call pop mov or push daa insl out push stc into loop mov imul in (bad) lcall cli sbb mov pushf ret pushf and sub mov sbb inc adc fmuls es push daa jg xchg (bad) xor inc cmp sub add ret test push inc xchg xlat jecxz xchg and (bad) and cmp dec adc push inc push dec dec push mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 pop les dec aad sbb sbb dec xchg dec rcrb jbe stos (bad) mov mov sbb sbb call ffree mov push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp mov sbb cmp add and hlt jo iret aas xchg fidivr cwtl mov mov mov sub xor push fsubs jmp movsb xor repnz mov or dec xor push (bad) cmp mov push cmp in push and push test imul loopne cmp data16 jb push adc stos icebp repnz pop sbb testb movsl lret push pop cmc fcoml ljmp enter sbb clc sub popa enter out int3 cmp lods xor mov fnsave test xor and in (bad) sub pop cli daa outsb sbbb int3 outsl test pop jno add fcompl push pushf icebp pop or xchg push movsb xchg in or es test les pusha and mov das and mov push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 aas (bad) or jmp sbb mov lods xor (bad) mov out and mov movsb ret sbb scas sbb push sub mov enter inc dec popa dec dec adc adc adc fdiv xchg jae mov push or adc in xor xchg push xor test xchg out das xchg stos pop mov scas fsub jp cmp dec sbb sub ret test fcoms fbld cmp xchg mov loop xor (bad) icebp or sti inc cli (bad) faddl pop adc call ja mov cltd out cmp sub clc pop js inc dec jmp fcompl sub push test dec jl idivl xchg mov sub daa movsb ja jl add xor inc in orl lods hlt ret sbb sbb in jge pop adc aas dec popf cltd hlt push icebp sahf and xchg pop jbe idivl imul mov das mov jne sahf sbb pop inc stos mov (bad) sub dec lds xor dec mov sub scas jne sub push mov das lret xchg push (bad) fmull sbb into mov jmp iret icebp cmp test cltd dec adc fcmovnbe out pop outsb adc imul push gs cli (bad) (bad) xchg test in sbb int3 dec adc lcall add mov nop xchg stos cmc negl ljmp jp inc push sub sbb dec sarl dec out or mov mov and inc jle addr16 hlt (bad) sbb xchg lret lods les idiv test movsl pop and (bad) or jmp flds pop mov lock popf inc dec negl pop fistl adc test insl jmp scas insb es out aam push mov mov call nop ss mov xlat push (bad) pop popl popf push mov push push mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 xor mov or push test inc fwait mov push jbe jp in cs mov outsb sbb mov push adc cmpsl clc jb mov (bad) mov add int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 cmp mov xchg add jno jbe fcomps cltd pop sahf imulb dec inc loope mov sbb call ffree push mov and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 iret sub dec push jmp jns sbb test mov or pop mov fistpl mov scas sub xor sub movd mov pushf push inc sbb push cmpsb adc sub fadds jb ja cmp push insb bound hlt rcl idivl adc nop decb test pop adc cmp xorl push cltd push adc inc or (bad) inc fisub xchg test incl lret jo scas or ret mulb pushf xchg mov (bad) sti outsl xor (bad) push in mov cld sbb repnz into sbb jbe test jbe pop push std push jne call fnop aam sub mov call stc mov mov andl dec and xchg (bad) insl push or or xor imul scas out (bad) fstl (bad) test icebp push mov loop adc pop enter xchg pop or insl movsb push mov das je jecxz ds dec das pop pop (bad) out mov sarb mov mov push test dec adc dec pop addl xor repz into stc mov iret std mov scas lcall xchg pop in aas (bad) in shrl pop inc jge inc push lea adc in insl mov cwtl mov ret mov in jno jg repz test fstps jns stos (bad) dec xchg imul cs or push or imul loope movsb xlat jl arpl ljmp adc mov or pop push dec call int pusha (bad) repnz repz push dec ds enter mov enter xor insb mov scas fstpt and mov push cmpsl lods hlt scas and scas push addr16 sub mov mov in pop mov sub test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 dec imull div jo mov jge or outsl sarb or xchg and or pop and push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp mov sbb (bad) fcompl paddsw sbb (bad) dec loop (bad) mov add mov lret daa aam mov ret xor repz sub inc add inc inc mov jle push dec jb push leave (bad) in add outsl xchg dec aas rcll cltd addb daa cmp out jl imul lahf cmp adc pop cli inc sbb scas sbb xor and pusha inc and lods rcr aas push sbb dec jbe add lret in add lock lea add (bad) lret mov cmp and fwait adc arpl xchg fstpl mov notb sbb les lock mov outsb and aad sbb jo cld sub xchg (bad) daa add or data16 gs addr16 add aaa mov cltd push pop push add xchg jmp push add jns ret icebp jl je rclb cmc sub test jnp xlat idivl mov and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp mov sbb jne dec xchg (bad) jle popf hlt dec (bad) xor pop sti cld mov outsb into jge mov adc push aas outsb out std mov ret je popf in popa testl push andl ja movsl jmp cmp pop adc jmp inc cmpsl pop into push sti mov les dec outsb in ret scas xchg add push sbb lret lahf adc rclb lret sbb fdivrs (bad) push xchg addr16 out pop and pop hlt or lds jns fnsave pop xor lret pop sub push (bad) jge fmul repnz xchg insb gs (bad) aad inc in dec mov bound aam push pop dec cld dec xlat pop gs call push lea jp test jb fcos aas fildll call jne imul sti jp mov xorb js into cmp inc (bad) push mov stos outsl dec ja stos out imul loop das fstps adc pop je cmp mov enter inc adc mov cmc jecxz mov lds pop add dec and in cmp (bad) aam mov (bad) push pop mov sarb in jo xor call jo mov fcomp shrl xchg pop xor clc insl addr16 sub or scas sbb out scas mov adc and nop mov mov orb scas mov (bad) iret add pop mov mov inc ds push sub call ljmp je nop sub sub fistl fwait fwait xchg dec cmpb push mov cmp jo pop clc je xor jmp add inc xor jge xor fwait jge inc call adc (bad) xor dec adc inc repz mov dec (bad) jmp call xor cmpsl insl sbb scas negb in jns test and add dec sub inc test (bad) movsb movsb fdiv xchg cmc cmpsb scas or xchg mov dec push es cs push jns loop sub (bad) popa cmp in into mov int3 test jae div out cwtl sub or rcrb or push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 cmp mov mov xor fcoml and bound push (bad) cli mov scas faddl add pop xchg mov jnp jae sub mov cs lds in inc rcrb sub fnstenv push pusha xorl push mov test lock add std loop cmp fldl adc cmp out inc fsubrl mov std aaa jns aas loop sub incl adc xchg adc (bad) cmp push into push push or push pop enter pop mov aas pushl cmc daa mov sbb push push pushf mov movsl in aam pop sub sub std shrl inc mov mov mov mov and mov jae mov adc cmpsl mov rolb ffree ret dec jp push fidiv xor pop xor cld mov lods ds faddp inc lcall rcr mov iret xchg push es pusha lahf loop or inc dec in imul inc or clc mov cwtl mov dec adc push jge repz and xor and jb mov enter and enter and and dec jecxz jmp clc xor lock cs int3 xor jmp and inc cwtl mov xchg scas sti adc fistpl mov xor fstpl (bad) std mov push sbb add lcall cmpsb mov add add push nop pop sub push cld pop cmp inc add enter je and adc xor inc loopne addl lods ret das lock mov push lret test sbb inc test jae cwtl dec and xchg pop lahf pop cmp cmp (bad) mov scas push push and xor in jae push mov repz idivl fs xchg (bad) pop pop fs inc call mov cld cmpsl lret mov insb es in aas lea dec imul ja,pn out and fild mov jb push inc pop add inc pop add ret mov fcoml sbb imul jbe cmp lds or fsubrl add pop jl inc xchg pushf aaa pop lahf aaa add nop dec pop sbb sbb mov mov jnp aad push fs mov sti add add rolw xor rcrb add (bad) addr16 jge lcall test dec cwtl fmull xchg push popf mov push std xor enter and xor cmpps cmp cli cltd pop es mov xchg mov outsl and mov fimull stc mov xchg test in sbb (bad) push or mov and icebp pop xchg mov fs jbe pop sub jp mov and push xor xchg add xor in dec (bad) pop adc addr16 and loope sbb imul push cmp pop and daa or inc push pop adc cs xor outsb lods mov lds mov fcomps sbb in and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp mov sbb cs (bad) adc and popa push pop mov je outsb add pop pop out in mov xor mov das mov and aad aad push jae mov scas cmp aas mov (bad) scas inc add lods scas (bad) pusha popa fldt add push mull pop loopne or ja cwtl jno mov dec aas cli push insl data16 xchg xlat insl jmp repz leave xor ja mov aad cmp loopne test jb push lret xlat arpl adc ljmp repnz (bad) sub jle sbb mov (bad) popf push mov mov call movsb or xchg cmpsb jge pop mov cmpsb mov (bad) fsubs lahf jnp sahf cli xlat lret mov push push sbb adc pop xor (bad) pop mov ljmp stos or dec imul dec xlat mov adc cmp mov fs icebp insl xchg icebp das jo insb or inc lret rol push out dec sarl cli mov push in (bad) push in jo int3 hlt aam mov dec xchg cmc lds sub xor daa lds xchg ljmp dec out in push jnp call scas mov faddl pop popa fist insl lea fsubr jo out mov or add data16 jl gs outsl lahf jae jne rorb mov fs adc es pop sub pop xor out sbb pop mov (bad) fisub cs stos repnz test xor gs ljmp xchg fstpt lods sbb ret inc mov daa lods hlt scas pop xchg fimul mov mov mov mov (bad) mov out push enter addr16 xlat test mov or (bad) imul jge cmp mov fldl jg lret sarl xor push jo mov mov mov cmpsb int push fist push fdivrs mov mov out int3 dec ret (bad) lret clc pop jp sbb out cmpsb fwait adc or dec push inc xchg rcll add ljmp js mov and stos cmovno jne push cld insl loopne test fsts lods negb loope push inc mov xchg sbb test jb out xchg xchg aad fdivrl xchg sbb jbe dec loop push mov push icebp xchg aaa (bad) push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp fnop jb cs pop and clc mov and cmc push andl mov mov mov cmp mov and aam jmp jle sbbl gs dec lret pop test adc nop (bad) pshufw push cwtl xor push mov into sub jb pop int xchg (bad) out stos jl js lods pop cmpl fildl loop mov mov bound jno lock mov lods mov cmp push testb dec nop mov xor fmull js xor lock mov sbb inc in movsl dec push adc mov cld or xor fsts mov scas mov sub das xchg inc out inc xchg push test xor jmp cmp test jno inc cmpl je mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 (bad) aam (bad) stos mov sti movsl pop sbb (bad) hlt mov sbb and add test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 cmp loope (bad) mov mov roll inc fwait mov mov push repnz pop pop ja cs push push out xchg and xchg sbb and inc or or cs test mov cmpsb or jge repz rorb inc outsb insb leave adc xchg enter (bad) ds dec loope cmp fsts push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp out add mov inc (bad) test push or adc add pusha mov dec es lret icebp out les inc mov mov insb mov mov ds add popa xchg fs push mov jo faddl pop mov xlat (bad) dec stc adc fcoml mov cmpb jns repnz xchg ljmp sbb imul les and dec mov xor mov (bad) (bad) inc das sbbb sub enter out pop ret sbb (bad) cmp or ret sbb or (bad) xor cltd aaa and jnp adc pop dec ret imul mov dec xor push mov inc cltd mov xchg pop sbb fsubrs pop jle sub sbb sahf lret rcll dec movsl sbb sti push insb pop mov (bad) xlat mov jg in cmp fdivr mov sbb mov loopne mov mov in (bad) insb mov add xchg xchg pop xchg push mov push js iret popf cwtl xorl jmp or lds in (bad) (bad) push int3 xchg addr16 adc sbb lods inc cwtl dec mov sub stc hlt lcall (bad) icebp dec mov push adc adc es dec loop mov mov pop mov push cmp mov inc fs and pop mov cltd adc and dec aaa cmp cltd xor mov fistl negb mov push push mov out xor add adc loopne clc test mulb adc mov dec mov (bad) sbb (bad) insb cltd shrl popa adc les mov jg push repz mov ds cmpl jne cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 cmp mov sbb lods mov sbb vcomiss cwtd jne sbb test xor and xchg lahf mov xchg and dec (bad) xchg sbb jno xor adc pop cmp addr16 lea pop jno adc push sarl xchg mov idiv call push adc push nop jno inc inc pop cli or repz dec or mov in cmc add loope mov loope cmp bound fstl pushf test sbb xchg addr16 ret xor cmp sub adc cwtl xorb xchg in stos inc adc insl leave idiv bswap out jb ret sbb push cwtl cmp xlat mov addr16 sbb pop cwtl rcl mov dec mov mov daa mov sbb jae pop loopne cmp mov sar cmp in in stos fldl aad (bad) ret or (bad) scas xor fstpt ss cmp or stos mov or inc jl pop roll cmpsl xor push xchg shrl das and cli sti mov mov daa inc stc fistp xchg jecxz or jbe cmpsl jge add or adc lret mov repnz das out mull push clc js xor and dec andb shrb rol mov imul mov shrb out sbb mov mov cltd xor std sbb add mov pop not out inc addr16 adc iret mov lock (bad) xor cmp lods xor pop and arpl leave pop out adc mov popl mov sub orb xchg pop xchg xor (bad) push jo outsb mov call sbb sbb shrb push hlt jo inc in add mov icebp or lods push mov (bad) jmp pop out xchg and fild cmp mov push fcoml outsl push (bad) imul imul sbb stc scas out pop dec jp sub fildll mov or das shrl aas inc mov jb ret jb pop add rcl outsl inc pushf sbb (bad) jge mov mov cmc je (bad) into lds pop adc xor cltd sub dec es pop mov psrlw pusha in mov scas in arpl sbb jg (bad) sbb pop mov sbb or xchg lret and dec add adc les mov adc mov adc mov adc mov adc lea adc mov adc lea adc mov or cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc adc pop xchg mov fwait mov push push xor scas jbe js pop outsl call xor mov pop mov cmp xchg mov lret pop xor hlt push mov in mov push mov and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 aas lea push outsl mulb orl xor popa mov out adc jle insb sarl sub lret xchg insb test cmp xchg test mov adc add in enter outsl push lret in (bad) fnsave add adc aad push mov pusha pop ret pop pop ret in push movsb mov je insl arpl inc push bound mov (bad) lcall xlat mov dec iret fldl ja test cmp mov loop xor hlt mov orl lods out or or pop (bad) jno sarl inc xchg adc sub rcl adc or mov fimull mov mov cwtl testl (bad) push mov sbb add add mov pop insb adc push in adc inc inc sbb mov mov loopne push mov jle sub ficompl cs cmp or push mov int3 or gs aam mov or sub mov xor nop aas and xor cltd lods xchg push mov cmp or adc fstps aas pusha lcall jle inc mov cwtl push cmp fwait in push imul mov adc fsubrs push imull ret sbb mov (bad) enter popf mov pop sub test (bad) daa test imul repnz xchg pop out adc sub mov push pop pusha hlt mov sub mov lods add movsl add ret cmp (bad) push xchg packuswb push inc pop sub adc push mov jbe mov aaa mov test mov mov in push imul imul add fildll lea cmc pusha sub mov iret add mov aam mov dec mov les inc push (bad) jae mov push push fcompl and js adc push cli addl movsl xchg add loope xchg jo cld ror mov test jecxz outsl outsl out add inc pop hlt sti es in jo mov sub xchg push lock int3 pop jno xor test jne js push rorb scas mov add pop jnp cmpsl adc sbb adc je lret jo sbb repnz mov lahf mov iret ds inc test leave sbb and mov pop shlb push adc addr16 sahf jno (bad) rcll in mov in mov jns enter je xchg cmp sarb fstps test cltd mov pusha lods mov pop scas or push scas fldcw imul mov jg sahf mov xchg adc in jge xor push idiv jbe jecxz mov jns sub test inc (bad) dec out mov jmp sbb ror ljmp push pushf pusha lcall fcoml xor mov jl inc push in xor sub xchg in sbb mov xor mov jle cmpsb mov (bad) push testb (bad) lods push lea pop push mov icebp jo or push sbb dec mov pop std fcmovbe jno inc xlat out (bad) pushf ds addr16 mov aas lcall jns adc dec shll mov adc pop gs out dec pop jl into jp and xchg adc loop loop stos cwtl mov dec mov sub and push xlat jl enter test push mov scas test push push (bad) mov repnz iret sub push sahf dec fcoml repz pusha or (bad) xor cltd or mov add test out icebp add adcb out jne jge loopne imul add clc bnd pop jne adc mov sarb mov adc mov ds pop dec push nop (bad) ja cmp test add dec inc pop loope adc cmp loop push into loopne xchg sub js lods jmp add add adc jae sbb add add imul insl aas ljmp sahf in add test xchg aaa loope les bound xor jne orl sbb lock pusha out jmp sbb push inc fisubrl mov adc xor xor call ror mov roll arpl jb jle sbb pop scas test inc push sbb enter cld mov or xor adc cmc ss xor push cmpl icebp mov in jge enter lahf cmpsl adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 cmp mov inc ficompl sti dec addb jne call (bad) enter stos cli push xchg or aas mov mov das clc dec ror ret add mov mov adc inc jle nop ljmp xor arpl fxch lret es jae scas jo mov ficomp out and dec cmp adc mov cmp je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl sub cmc cmc fs xor das mov movsl add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 (bad) aam lds push inc push xor ja test or mov dec or mov int call push ds xor lahf fisttp outsl pop jb std adc xchg fs andl aad add pop adc aaa xchg xlat dec sahf enter (bad) ds dec loope cmp sub mov mov fsubrl adc out (bad) and jl mov mov inc and mov fdiv or xchg sub or in imul fcmovbe mov push mov jge stc jge inc jl xlat and and adc loope,pt dec call xchg pop xchg jo icebp xchg sbb repnz insl fwait mov rcrb rep fidivl (bad) std mov pop fildll loope sbb push inc (bad) sub ret call cmp rcll xor int dec ror bound lahf or xchg adc jno imul out nop addr16 mov js jae pop test xchg mov mov xchg (bad) cmpsl jmp mov push fwait popf (bad) pop lea push in sarb insl arpl imul mov cmc aas pusha lcall pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jmp mov mov loope stos inc gs xchg jbe push adc mov addr16 and sbb jbe pop mov inc lahf ret repnz adc lods mov rorb pop dec mov add rcrb lea rcr push aaa fistpll vmovups or mov xchg xchg in push in sub cmc sar or ret jmp mov jns sbb lcall dec shl jecxz or (bad) popf scas int cmc call cmpsl jns repnz test adc cmp jns push fist pop aaa les (bad) orl inc push dec add aam cmpsl push pop pusha jbe ljmp pop push xor aaa ja xchg cmp test jno inc mov test jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 cmp mov cs cld popa mov mov addl and push stos mov das xor sbb add test push xor lock sub imul pop test outsb popa mov mov fwait (bad) (bad) iret test lret mov dec fist popf lret imul sub stc (bad) cmpsb cltd aam cmpsb add clc mov arpl rcll mov cmp and sti je sbb push add and or std mov sub adc movsb jb cmpsl jns out and xchg xchg cmpsl pop push and inc mov or stc mov lds jb or pop push fwait and push (bad) outsl lods inc push std and mov popa fcmovu mov dec mov pop fld shll xchg js (bad) sbb sub out in inc (bad) dec loop out jp popa jg mov sub rcrl (bad) cmc or dec fldt dec std ss dec mov sbb mov jno cmp inc icebp (bad) pop push sbb cmpb jge jge faddl lret and (bad) xor rcll add mov inc loope (bad) in add push (bad) push mov ffree lock outsl jp sub sbb mov (bad) sbb ss paddd sarb sub outsl mov out dec lock dec adc (bad) iret jg in push test (bad) dec add inc daa sbb out push (bad) pop ret inc lock loop push jno adc scas xchg fcoml adc and and imul and inc jle les lods ret jb (bad) push mov test jge and adc bound add xchg (bad) sbb (bad) enter std inc dec imull stc dec ret scas pop pop cmpsb xchg xlat cmc leave add sarl loopne loop in xchg sti dec dec mov mov sub fsubrl mov pop popl popf sub push push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 aas (bad) or jmp mov jle xor pop rcrb or or in jbe jbe scas hlt clc or jp fwait out xchg xchg ljmp mov xchg push lcall fistp mov inc repnz das pop xchg rcrl (bad) gs (bad) push lcall add sub adc ljmp ficom cli ret call rolb push mov (bad) push imul mov sbbb mov (bad) cmp icebp sbb imul inc push sub inc xchg imul out out cmp mov out or adc cmp cli pop mov lcall sub lock sbb sub xchg cmp test jno inc sub testl mov cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 cmp arpl mov ljmp or jae xchg stos iret push in jecxz mov pushf mov adc add in rcll inc ret shrl mov push push mov dec (bad) cmp lret adc or repz lods sbb push jnp mov dec bound xchg ja in adc jg int lret addr16 mov jb dec pop add xchg push mov mov outsl xchg (bad) inc mov aaa adc cmp repnz or aad xor add push pop fldenv out sub push (bad) jae lcall outsb std fildl xlat cmp jno fist and aaa lods push inc xchg (bad) into repz mov shrl xchg sbb jnp jb xorb xchg divb mov mov sub (bad) imul jnp inc cmp es xlat cmpsl stos pop pop and rclb pop leave fistpll sbb rorl clc movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp fnop jl (bad) imul ret inc dec adcw pusha daa dec stos or xor bnd lret cli pop arpl sub out push (bad) loopne lods outsb inc xchg nop data16 adc (bad) out cmp mov or loopne cwtl mov jns push jmp repz std pop dec loopne sti mov add in jl push push (bad) jae pop sbb and cs push scas dec in push repz push pop pusha loop out pop ficomp lahf icebp sti inc leave loope loope mov orb out cwtl test iret cmpsl sub pop ljmp mov das ja stos inc jae lcall outsb xchg jge lahf pop sahf fs push xchg jb xchg in cltd lds jae nop gs sub and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 cmp or pop addr16 rcrb sbb mov hlt out (bad) in mov add inc cmpl fisubrl cmpsb and dec sub jne test std in push aad inc popf clc xchg jns mov lret cmp jo inc add lahf adc lods (bad) mov lea (bad) jle jbe jecxz test xor out add pop push pop aas dec (bad) jno repnz cli das ljmp mov mov jp cmp aas push cs and or test fdivl xor enter ret cmpsb mov xchg (bad) loop out ja test jbe pop (bad) sarl mov xor bswap xor inc cld xchg (bad) stc sub jg sub mov daa xor mov dec jb jno (bad) (bad) or add (bad) movsb imul ss stos dec aad dec pushf inc sbb dec push addr16 xor arpl clc (bad) in gs (bad) out mov mov mov lahf bound das test (bad) sub insl inc mov in fldl lret xchg movsl sbb gs sbb movsl cltd mov call test mov mov stos lds push jne cmp divb mov insb and or jbe outsl pop mov add ss jnp lods int3 jns outsl xchg add jl mov or out inc push rclb int nop shrl inc cmc xchg stos neg ja and insb cs scas and sbb push je lcall mov subl scas ficoml xchg push sub icebp push or pop test rolb (bad) call popf lods xchg sub outsb or pop inc fdivr adc and mov and add lea push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 (bad) dec fisttpl mov fbld fnsave jnp dec cs mov cwtl pop sahf sbb sub xchg add sub xor out mov and insb mov cwtl xor lahf in fsubr push cmpb popf lcall daa dec outsl scas push movsl scas xor adc (bad) push fwait inc mov mov aad dec nop adc gs test jmp es adc mov mov add insw jmp pop dec das cmc fsubl mov or adcl enter outsl mov pop test sub mov idivl adc push aad or pop push cmp mov xor cmpsb mov lret lock fsub jge outsl nop in mov mov fst in and jbe mov or mov jmp repz popf pop out cmc jl dec ret pop pop xchg test mov push xchg fmuls (bad) popf pop mov dec xchg cwtl daa cs nop add jae cmpsb sub insb rcll mov std push pop sub lock and (bad) xchg xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 cmp orl push test scas jmp in dec xor and sbb xcrypt-cfb cmpsl loop outsl fstps mov sbb enter jle jae lahf out or inc lods mov repnz daa jecxz daa daa out add aaa lds inc in or pop xchg inc dec lret add jns and hlt mov pop adc loopne jp mov addb push adcl fstl sub inc lret mov dec sahf cmp (bad) pop stos notb mov mov ror inc sbb and lods cmpsb inc pop ret jns out mov sbb sub or stos xchg dec push jae mov (bad) adc dec push jmp or jp mov movsl cmpsl mov adc imul frstor sub jae mov cmpsl movsb adc push dec push push add test jne dec pop push ss int pop in add jge adc insl mov mov push rcrb inc cmp in es jbe jp aaa xor lahf ljmp sub in in icebp leave push xor dec repz mov jae mov call ljmp hlt push mov dec fistp aas pusha lcall jle pop ds arpl leave cltd rclb and aaa sbb in or test mov mov jp sahf xchg (bad) xchg arpl inc add cmp mov dec popa pop outsl (bad) subl push mov roll adc int3 sub lea inc lahf cmp mov adc sbb stos (bad) (bad) lret adc mov fisubl pushw decb jmp ret popf and pop sarb stc lret pop pusha pop mov jo and andl xor pop mov aaa mov and iret fdivrs xchg leave sub mov push adc ret pop push dec mov aam inc and cmpsb fs lcall xchg ret scas shlb dec pop daa sti mov mov push je cmpsl shl xchg pop mov sahf stos push inc xor xor orl mov adc add xchg fs scas leave xchg jbe sahf mov push (bad) xor inc or jmp mov cmp bound in add bound in loopne out mov fcoms mov in (bad) arpl aam cltd test push xchg je mov (bad) pop std test xchg ret insb sbb cs sbb cmp pop push xchg mov cmp std ja dec cmp mov lea movsl push aas ja pusha add jne std aas lret xchg sbb std mov jecxz and sahf jge xor jmp xchg pop adc pop xchg lcall lret cmp sbb sbb inc (bad) xor mov outsb pop fisubl loopne out lcall (bad) lcall jg int3 inc adc jmp mov xchg (bad) mov loope xor adc aam jp push adc lcall loop (bad) fs inc bound mov aas sbb int3 dec (bad) loopne loop in dec cli fwait pop sar mov sbb insl push xor dec mov mov pop mov lock inc fs stos jl in aad cmp stos mov jl cmp repnz (bad) aad jns sbb inc or movsb aam jo fild in mov ljmp test xchg movsb stos fbstp or xor pop xchg sbb fcmovnb inc lret inc or cwtl js inc cmpsl add push mov (bad) mov rolb mov cltd fsts pop in (bad) (bad) jns loop pop jbe mov (bad) test pop inc mov movb inc add push rclb adc ljmp loopne xchg ljmp andl sbb and (bad) inc mov jp jns adc flds and in movsb hlt popa mov adc mov (bad) jo popf popa sub sub mov popf pop (bad) xor dec push xchg or je adc cmp inc jecxz xchg jno mov sbb lahf xor fwait lock icebp cs or push insl jne add leave ja jb push or ds icebp mov repnz adc dec mov imul add out adc dec jbe imul popf inc xor jle xor jmp lcall xorb loop rorl cwtl outsb cld push push fs inc push jg pop inc sbb test adc mov inc inc out mov adcl outsl sub hlt pop es pop dec lock jno out dec inc push lea stos loop lea bound jl inc xor jae ds (bad) aaa jo inc cltd xor mov lods sub adc jo jo mov cmc and or inc lret xchg and pop arpl scas jmp sbb adc add add cmpsl sbb push xchg cmp add (bad) adc sub fsub ljmp mov pop sbb mov std jo xchg stc (bad) jns mov or fs fisubl cmp cmc or insb push jbe mov into mov push sub mov mov dec dec roll mov imul mov fmuls shll pop mov sbb stos sub xchg push jmp movsb lcall (bad) pop nop mov inc cmp idivb imul mov mov test inc adc mov add movsl lock in andl or push stc mov (bad) mov or lret and (bad) mov mov insl aas loope push loopne pop adc mov fs adc pop mov xor inc cltd inc push dec lods mov daa rclb pushf imul jb pop push mov mov out xchg bound lods jbe dec imul popa push xor cmp cmpsb cs ja (bad) aad inc jg lods les and mov mov adc cs adc xchg lret xor mov gs fistl add xchg js call mov xchg mov cmp lret jmp push adc cmpsl cli mov push aas cmp jg dec lret (bad) and outsl lcall xchg push and aas js jle pop xchg in das jno mov mov out mov enter movsl sbb adc mov add sahf cli fs add leave push andl inc push cmp stos aad add clc int3 insl (bad) fcmovne adc xor dec outsb add push sbb js cmp jg movsl call cld xor decb das fstpl dec dec or fbstp mov xchg scas sbb jae inc cli cmc cltd loopne (bad) dec aad stc lods imul cmp out aas out push enter fs dec aaa repnz inc stos addl xchg (bad) ficompl dec test shlb cmp cmc sbb xlat push aam mov sub cmp cmp test pop pop mov lods sub in inc (bad) sub das je je fbstp sub mov and jmp sub lahf xor xor cli testb std in in aas mov jle inc (bad) cltd nop mov (bad) out insb add or fs inc lds xchg and add cmp mov out or arpl lods push int loopne ficom xor call sbb out jne les ljmp xor inc dec pop pop jae rcl scas fbstp lret xchg je mov (bad) aam xchg mov loope pop jo jecxz icebp adc push lds sub test mov adc jae mov or add test jge mov sbb in sbb xlat pusha dec mov popa push dec pop loope sbb adc lret add add rclb lahf sbb aaa dec rcrl stos aaa adcl and inc push xchg inc lds es mov xchg pop insb es test jae xchg in out and std sub inc les mov sbb mov (bad) int pop jae aad hlt loope push mov mov cld sub sbb je or cmp jmp pop inc mov cmp movsl jno pop xchg jnp bound icebp mov dec mov sbb sub rclb ret (bad) iret repnz jbe add jbe or stos mov lock pop mov adc adc lock xor jne xchg aad adc xchg inc movsl sbb lret mov pop clc jne pop sahf sub in bound test mov dec pop popf fstpt jmp std in pushf test imul and sbb dec mov test leave dec xchg rep mov mov cmp xchg fldt dec cmc inc aaa jae,pt jo and fistpl mov insl call lcall mov xor sub int3 sahf push imul sbb xchg rorb pushf fincstp test dec into jmp or jmp xorb pop int3 and imul cld cmp loopne stos lods rcrl cmpsl pop lret ja pop and jle xor lods test icebp adc push inc or (bad) jne and add cli insl movsl pop cmp xlat js mov lret and jecxz (bad) out bswap cld int3 jne or lods lea push in lea fs fdivrp sbb fcoms insl aaa test inc data16 push pushf dec popf jle sub mov add jns jno aas or ss sbb std popa ret push imul inc pop pop xor aas sbb rcr add sub fs mov in call inc cs xchg xor sti (bad) mov jns lcall or in inc subl adc (bad) js adc mov and cmp mov fsts js jmp jae adc loop insl incb inc sbb fbld out repz aam jecxz sbb xchg inc xor jns dec negl jae pop movups ljmp lcall gs pop xor or daa cmp jg inc inc push mov aam lahf jmp sbb in or movsb sub mov and aam mov aam jg (bad) mov in in xchg add insb add cwtl rcrb leave stos pop dec and aaa xor (bad) cmp (bad) push cmp xchg and or lea fcmovb mov adc in mov iret (bad) dec repnz and jne pop jg arpl cmpsb lods int3 test cltd cld fwait outsb adc mov pop addr16 rcl push xchg test cmpsb pop fimull mov jo cmp (bad) xchg movsb ret xchg add xchg sbb or fwait popf push out fstpl in jb jmp and xchg mov lds mov push xchg ret ret inc mov into scas call imul mov movsb inc pop lds enter cmp andb mov pop jge xor mov sub sahf sbb in (bad) lds xchg xlat push aaa add cmp push pop and xchg cmpsb sbb jno std xchg (bad) shl and int scas and mov int inc ljmp cmc jne stos mov loop js movsb daa jge add pop mov mov mov gs adc add outsb mov pop inc mov push sub mov insb (bad) shlb xor loope or jl daa jb push das (bad) and sbb mov cmp sbb adc fiadd push in inc jo push sahf mov sub (bad) push daa fwait pop jns loop push cltd ret (bad) xchg mov (bad) pushw inc cmpsl jns mov daa pop sub lret outsb xor movsl lahf call mov xor call pushf mov push jb inc jp aam adc popa push mov sbbl inc and dec mov sbb push out les adc cmpsb ja stos or shl fiaddl scas out sub test inc and or jp xchg sahf mov (bad) mov out xor inc cmp xor out pushf arpl push mov subb cmp lret adc xchg test mov ljmp sbb leave les andb lock pop (bad) sbb (bad) dec push mov inc icebp lahf popa xchg fcmovbe sbb push (bad) or rclb pop inc jns or xor add sub add (bad) int3 loopne cld push je adcl scas add (bad) mulb inc es out xchg outsl je,pt mov incl inc sbb inc insb inc insb and mov add in jmp (bad) fsubrs push daa mull test mov stos arpl cmp cli lcall mov cmp pop xchg mov out or bound daa clc cmp cmp data16 push pushf pop mov pop data16 daa inc mov stc inc push jno (bad) cwtl sub mov daa xor adc mov pop jnp mov jno test shrb pushf mov and sub add xchg dec sbb (bad) fistpll int push xchg hlt pop sbb add or jne adc add (bad) xor adc fadds stc mov movsl sub ret pusha add inc push out js repz inc imul adc (bad) into call mov add aaa mov cwtl mov jmp add or test test sbb leave dec mov push enter iret fstl and in ror movsl add cli jae cmp dec icebp aam mov add stos test mov addb stc movsl je sbb push adc lcall jle cmc daa mov jno stos mov jb popf loope mov mov outsl adc je pop xlat loope dec sbb call mov les nop int3 lods fs pop arpl push rorl sub or pop popf mov ret sbb neg sahf (bad) pop movsb and ds sbb lret pop test jl lock outsb js xchg xor push xor insb ss mov stc imul jbe (bad) xor sub pop cmp sbb ljmp sahf int fnop fnstenv adc arpl pop pop jnp into jns inc dec sub mov push mov push push xchg jl jmp jae aaa xchg sub imul jae jl fiadd inc int3 mov push pusha gs adc mov cmp jmp fadd mov divb and or and jbe jg fisttp sbb popa push inc xor xchg xor add nop jns dec xorl ret sbb insb jmp ss insl je push sbb bound sbb dec push cltd inc add repnz xchg jnp or sbb data16 rcrl repz and cld dec jno push in sbb leave adc pop fstpl mov shl sbb push popf in cwtl fwait and inc mov cltd or mov (bad) xchg dec xlat in jp arpl mov mov jbe pusha aam sub leave xor jne aad xchg les cmpsb inc push jle dec sarb (bad) sbb xor mov sub clc xchg push push in pop xlat adc sbb dec xchg std add adc int push lea jp mov jmp push aaa xchg imul jae hlt inc dec or out cltd js repnz mov cli jecxz push loope push dec andl scas fistpl adc and add aas fistpll fdivs repz sahf sti sub fnstcw lock loop pop leave inc pop inc loop mov add or mov movsb add jp cs pop lock lea aaa pusha dec lods push scas outsl xchg push pop push ds or mov std ss dec mov jns jo (bad) push and add jnp push mov les mov mov dec rorl js es pop add sti stc sbb xchg xchg push sbb mov mov movsb insb add imul mov pop pop icebp lods jo or pop pop inc push fnstsw adc loop lret into mov shll cltd push movsb lods and jns cmp lea popa scas cmc jge loopne xchg cmp mov sbb (bad) scas je aam xor (bad) stc jmp les inc cmpsb push sub test dec nop nop cld fiadd sbb int (bad) daa cmp mov xchg push jl inc lock sbb test lahf insb add sbb outsb jecxz sbb int3 out cmp jmp fcomp popf jno sti adc call out cmpsl adc and lcall push aad movsb fwait jg sbb fldenv push imul and cmpsb test sbb and cmp adc bound cmpsl mov popa inc inc mov xchg (bad) (bad) and sahf mov insb test pop inc push loope jb ds pop hlt ret je enter xor lcall hlt and dec mov (bad) lcall repz jp mov repnz dec mov mov add mov pop or add stos sub pop dec inc cmp sbb (bad) iret fildll lret and inc daa pop test out xchg insl outsl je mov mov aam cmp xchg and jle repz adc iret jge xchg inc cmp int3 pop les xchg je scas cmpsb add xchg jo dec mov sub cmp inc pop and pop push push inc xor popa pop imul (bad) push lahf inc ret mov mov and push add sarl push pop or mulb cmp cmp movsb mov cmpsb in pop incl or gs movl push jo inc mov mov (bad) pop mov ror dec fcompl addr16 jno jle sahf ja mov or sub sbb xchg mov aad into jge push lods and mov cmp xlat lcall std add std xor jo nop sub test imul test fsubrl test mov xchg arpl rep xlat mov mov (bad) push test jge jmp or mov daa int3 xchg sti pop xor sub lea pop push stos dec sub data16 stc mov mov or lds es sar xor add (bad) xor pop xchg loope push xchg (bad) inc or xchg push ljmp mov mov xchg inc imull inc (bad) stos push leave push inc leave and negl cmp (bad) push sbb push cltd aad sahf (bad) xor sub nop fdivrl shll mov inc xorl insb inc stos test inc iret sti cmp inc add push mov arpl xor fsubs mov sub into (bad) fwait mov cwtl jmp fwait cwtl xchg or popf js pusha add bound scas add adc inc dec push jnp sbb rcrl jnp pushl jnp fucomp jl lahf dec test push (bad) ljmp and cmpsb cs rcrb lahf push cmp and repnz fadds fucomip jno sar outsb dec inc or lahf xchg dec mov movmskps xchg ret sub and xchg add xchg cmp out outsl hlt orl xchg cmp mov mov pushf pop insl sub jge sbb xchg add popa pop xchg jnp pop lods fwait sahf mov push or popf push loop push dec stc outsb or inc inc push xor repnz and and das xchg movsl lcall in lods fnstcw push imulb outsl fisttpll testl jle push stos xchg lock hlt in cmp (bad) sub jmp dec jg ss push adc cli push jnp jb and jno lds add inc ret int lea jae inc in jg sbb xor inc sbb scas adc in scas push mov sub movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp ret xor push cmp jl and push hlt inc test cmp ret dec mov pop test xlat arpl push repz mov insb repz push cli rorb and xchg ret inc push scas mov movsl mov and or jecxz insl ds in push mov mov cmc or outsb out cmp push adc clc push lret xor inc (bad) (bad) xor jb pop adc (bad) aaa hlt pop xchg loop (bad) pop mov icebp mov cmp jno mov loopne (bad) imul clc (bad) sbb inc lretw push adc addr16 (bad) in push jmp cmc inc test sbb andl aad dec inc sahf pop outsl es mov lock mov push hlt decb pop hlt pop cltd sub pop cmp and add sahf lret and and out mov loop les adc lret jle into push push test test inc out push ret sbb (bad) fsts incl fs jecxz shl dec stc inc cmp loop decb clc popa (bad) sbb js pop jg inc pop push mov outsb stos inc lret jp or mov fs xor xchg or movsb hlt adc psubusw pop push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret cmp daa pop loope mov jno dec jle adc pop sahf in sahf xor sbb or push (bad) xor dec mov pop icebp xchg ljmp sub cli clc in pushf adc xor fist es lret test sahf jnp pop cmc out imul mov into mov dec and mov cwtl insb call and cmpsl lods cmpsl and inc stos test cmp sbb mov inc mov ja (bad) je and sti inc lret sbb add popa cmp mov cmpsb cltd and sti loopne,pt negb cmp push psubb orl mov push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp faddl cmove mov inc fwait xor xchg xchg sbb and mov sarb call ffree xorps mov movq movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 cmp xor cmp mov push in inc jle xchg (bad) test hlt jo jae inc sbb sub lock cmp imul mov adc lcall rclb les push mov arpl dec lret push mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 cmp daa pop loope mov jno dec jle adc pop sahf mov push dec mov fsub adc les adc and xchg (bad) sarb dec addl push mov repnz dec lret push mov sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 iret inc mov and mov roll jmp in dec xor and in sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 (bad) cmp add mov pop mov dec sti movsl pop sbb in mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 cmp xchg mov aas (bad) icebp mov fmulp and scas and leave mov xor lret stc sbb or xchg test sbb scas inc xchg or hlt push mov in mov dec lret push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 cmp sub push mov xchg pop inc cmpsb add cmpsb push js (bad) lcall daa fnstcw loope xchg je out mov jmp pop daa adcl mov popa or mov mov in mov dec lret push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 cmp xchg dec sti movsl pop sbb jl adc leave cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 cmp daa adc mov adc jecxz push or addr16 push scas test xchg adc or sub fcomps add xchg mov dec or repz adc xchg addr16 mov pop cmp jl ret jmp adc lods inc rorl and push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp and faddl pop jns mov sti dec addb or pop stos and pop fwait mov lods (bad) out jno and push loopne popf jnp pop subl xchg jns push push mov in mov push mov sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 cmp xchg mov imul xlat fimull imul adc in sub or cld mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 cmp pushl mov fdivs bound pop sahf popa aas push addr16 fs mov mov outsl add cltd fsts les sub rcl or mov lcall mov inc mul (bad) or sti sub and out push nop stos lret fisttp rorb pop in push aas cmp aad push div push jo inc dec jmp jle pushf inc movsl popa push aas jne outsb cmpsb stc test xchg test int3 aaa les xor xor icebp or sti inc push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret cmp out xor mov imul jle add notl icebp repnz jo xor lret leave or bound ja rcrb rcrl call sub jge aam nop jmp enter push mov sub mov cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp xchg je mov outsb sbb cmp fnop push nop sbb mov movsl cltd (bad) in cli pop mov lret mov pusha out mov pop cmp xchg aaa repz lock loopne clc frstor aas cmc stos sahf popf or lea sub or shlb hlt lods push lods pop jne icebp jae add cwtl mov repnz add mov dec (bad) mov (bad) aaa ljmp fstl jo adc and fisub ret inc lret sbbb or mov insb popl sub dec imul clc xchg ja jbe push aad xor jne outsb ja or pop aam mov xchg xchg (bad) xchg hlt push arpl insl pushf mov xchg fldt inc xor into icebp push fdivrl iret jbe out pop push adc push or movsl mov add inc outsl pop lea inc negb ds xor adc insl xlat xor shr jb icebp into mov cwtl and ljmp pushf shrl fbld sbb mov cs mov inc sbb jecxz in mov popa mov ljmp mov pop fcos mov into aas pusha lcall push leave xchg lods fdivs push das and imul fisubl cli push dec sbb jb (bad) push stc pop and mov int je mov inc lcall cmp mov gs (bad) int loope rorl lcall fdivrl push nop jle push sub lret adc jo sysexit cmc fs push dec inc cmp jnp add ret sbb mov mov mov push and jg les add xorb or lea inc push or or ret das outsb and (bad) fiadd test lock out test scas cmpsl pop xor loop or xchg push push (bad) fidivr xor imul movsl notl fwait jmp (bad) scas adc fdivs jecxz fldenv lret (bad) inc lds xchg jne pop dec pop in jns mov xor jo sarb inc inc sti mov sbb push adc cwtl (bad) sub inc dec shr mov jecxz nop lret sub jne mov or xchg addr16 scas mov xchg xor xor pop dec xchg mov das adc xchg xchg cmc adc add call arpl out mov xlat pusha rclb int cld mov mov jmp sub stc fidivrl jge daa out insb lahf out js into popf xchg stos cli mov push insl loope insb mov cmp sbb insl out or fdivs and mov mov mov in ror in adc in pop fwait xchg sbb mov push imul ds outsb dec lret (bad) outsl fnop (bad) out lds (bad) xor dec stos mulb inc inc pusha ret mov mov inc test pop sbb adc sub gs xchg mov (bad) popa scas mov lods cmp aas push rcll lods cltd lahf sub jae sub sub stos push ret jp sbb mov pop stos mov cmc dec leave repnz enter cmp jo cmp test movsb inc (bad) mov pushf negb and dec insb pop nop push pop add inc stc rcrl int xor ret das pushf in mov pop fsubrs cmp lods dec ljmp addr16 imul push jae mov dec ror fsubl notl pusha mov insl xchg imul (bad) idiv aaa xchg xlat or je or xchg out clc jmp imul add stos push shlb test inc scas ja adc xchg popa gs lods idivl pop mov add sbb repz lret fucom xchg sub fistpl push cwtl popl xchg cltd push aas adc iret es jge mov mov fwait stc (bad) mov jo fldcw sbb pop mov iret ljmp cltd out xchg pop lret pop adc cmpsl mov lock jmp (bad) repz test (bad) out mov fcos adc mov pop and es and out jbe pushf or inc lods cmp int jbe into jle mov mov add (bad) (bad) cs xchg jo f2xm1 mov in inc dec ret add imul ss cs add ficoml pop in in inc sahf cmpsl lret hlt into dec inc adc add aam js rol pop inc movups xor cwtl adc push jnp pop push mov es or mov inc inc lahf jae pop add xor js mov mov xchg dec ret pop jge dec dec inc jnp pop fs int xchg aaa and gs adc int3 lock xor stos jl fdivs and xlat cld out insb push xor stos and mov cmpsl and (bad) loopne cmp out push mov loop jge (bad) pop jge add cli pusha mov add aad out jnp sbb inc (bad) cmc test fnstenv xor jae jae dec fnop xor xchg lret mov ds push jne inc mov dec pushf mov xor jg jo cmp repz mov jo sub outsb mov and inc fsqrt dec int3 sbb jno popf popf push jle test mov ret flds call or jg scas push jmp add aad mov push pop xlat enter add adc lret movsb jl fidivrl les arpl xchg std pop out (bad) add jl mov pop in rcrb rclb (bad) and fdivr sub or mov cli enter cli (bad) icebp push cmpsl inc aam add into jo ret inc mov mov loopne mov imul and sub sarb dec or fsub into xlat lahf dec push xchg xchg cmp mov cmovno adc dec dec and mov movsb nop scas mov sub (bad) xor xor or rcrl ja lods and pusha movsb aad mov arpl jno adc jo sbb (bad) and or jne dec cmc rolb into cs incb xchg xchg leave fisttpll int xor sub add sahf movsl call mov int3 ror pop sbb jl inc ficomp jg mov pop xchg inc adc (bad) in jnp test sub enter cmp int stos xor inc pop dec std loope jbe cmp dec pop mov jno xor lret mov les push jl (bad) jecxz sahf clc xchg push xor sti sub and pop jp into aas mov pop add cmp shrl push es (bad) and push mov cmp dec xor cmpsb ret loop xchg outsl and cli shrl lret cmp xlat mov dec cmp fstpt mov mov and das mov lret adc push adc aam mov insl mov mov js stos pop fsubs cmp aaa pop pop xor daa dec fadds enter sub pop js mov and jecxz inc xlat dec incb incl into in pop add sub std cmp push popa pop mov imul mov test movsb cmc mov mov sub dec jge inc inc pushf sub bound mov and jno push repz mov mov adc or inc jne cmp or sbb push repz (bad) fwait aaa mov dec hlt dec arpl stc sbb pop sti fcoms inc mov pop pop xor pop sub cwtl clc enter (bad) sub mov ffreep pop inc sbb ret (bad) (bad) dec inc imul jg mov xor iret out sbb loopne iret mov pop fwait pop push roll in pop popa jmp ret inc cs hlt das add pop push sub and xor or js adc test bound (bad) adc push fwait wbinvd mov mov xchg les xchg cmp mov xchg cmp in adc sub (bad) jl (bad) mov cmp jg mov sbb fwait pushf test pop stc aaa adc sbb sbb repz jo push mov fmuls cmp xor jge xorl mov call push lea jecxz sub add adc into add jg dec cmp arpl xorb fnstcw fnstenv adc xchg dec xchg and popf test aad adc (bad) mov jae push movsb pop mov pop dec and push cmp mov ja int3 mov pop les dec test sub popa xor mov loope data16 outsl cmp add ljmp lret add jo mov inc mov mov xchg out negl jb pop jbe mov jno mov xchg adc fnstcw add push cwtl inc out cmp in int mov xchg push push xor sti ss inc rsqrtps adc jle rcrl inc mov push or push jmp lret out es fs sub js movsb movsl aad imul mov aam pop fdivrs (bad) ljmp cli and fcomip (bad) or cmpsb push push xor xchg jmp jb inc push out jge repnz inc inc fidivr movsl sbb and jno fisttpl lock push dec dec insl stos sub in mov arpl inc fstps int3 fdivrs xchg mov ja pushf out loopne cmp fsubs or xchg daa push push mov sub repz push sbb add xor jl pop test xor mov test js lods aas push sbb fisttpll cld xchg stc dec loope mov fbld inc fstpl pop les das pop call lcall jg dec in and frstor sbb arpl push xchg mov and jg mov xor rcrl imul icebp lea lods push inc jg mov ja pop orb paddsw jae xchg pushl ret loop arpl int3 or and sbb pop ja (bad) push out pusha push shrl les hlt sbb nop mov repz inc mov fcmovnbe sbb sbb pop sbb js sub inc insl stc out and (bad) mov popf sub xchg aas mov and add idiv lea mov jae pop iret int3 jae imul push pop pop xor xchg pop cs sbb cmp adc lods adc leave sbb sahf and lea les jp sarl xchg sub cmp pop mov aas adc xchg fisub cmp (bad) movl jecxz (bad) jge mov cmp out ret adc out sbb iret lds jg mov push xchg add sub int3 dec fadd js addr16 ret push mov insl and (bad) pushf dec shll rolb lcall pop push lret das clc insb hlt push adc (bad) sub lret add or inc (bad) inc dec cmp pop jno enter loop test adc pop (bad) lcall or es inc dec add inc mov leave push lret pop pop push jge dec dec cmp shr xor repz xchg pop out push stc push insl add cltd mov dec and dec insl xchg inc mov inc add push or mov jnp in push fsubl sub sub scas fmull xlat ret ja ss mov dec std xor cmp push mov adc push push dec addr16 pop out jbe lods and je add fsub jno repnz test mov je mov jg pop inc cwtl jns dec cld or xlat jle xchg test sub stos arpl jg mov lea cmp or cwtl mov mov adc mov (bad) pusha sbb pop out adc or (bad) ja mov xchg scas aaa scas (bad) mov hlt push dec mov (bad) sub mov (bad) mov stc (bad) ljmp (bad) sbb jo js mov out cmp sbb lds and push mov mov movsl aas fwait xor push dec inc inc inc aas pop add xor xchg inc out stos mov mov lods mov (bad) dec shlb ja fdivs nop lret mov dec fistl loope add add int3 dec push cwtl xor lods jmp adcl (bad) xlat hlt inc addl fimul mov das and std js sbb dec fiaddl (bad) add inc add es inc ds and dec fwait sbb push jmp mov pop mov iret push icebp adc fsubr and jge jg sbb jge scas ja xor cmp adc test fsubs dec lahf mov sbb hlt and fdivrp fwait aad adc xchg test cltd jnp add (bad) outsb into sahf loope xor adc push dec inc and pop ret (bad) adc out hlt xor mov and xchg sbb fstps sub (bad) stc push inc mov dec fidiv cmp xchg outsb mov (bad) xor orb (bad) into pop aas inc pop lcall or add and lret pop (bad) idivb call pop ret out in in lds enter gs mov mov sub mov mov add out out addr16 adc add test xchg imul lds leave or pusha push push jge xchg add jns addr16 int (bad) inc mov cmpl and xchg xchg es mov xchg xchg imul call pop xchg int fcoml mov popf or cmpsb push sub fsts jp xchg inc sarl sbb pop sbb mov and enter sub inc pop outsl inc mov pop (bad) mov (bad) sbb lock xor cmp bound fcoms (bad) arpl mov imul pop jge sbb mov dec movsl cmpsb lock push mov fistp cmp xor pop mov hlt sbb lret rcl fstpl xor insl sub out push push loope cmp popf lea imul xchg xor imulb in and sbb inc xchg cwtl ljmp adc mov stc addr16 leave jo into push jge or scas sub xor mov rcr int3 sbb (bad) or div inc movsl xor loope daa imul jmp in add pop pop ja ljmp mov sti loope dec test pop fcompl popa and loop and mov cltd outsb xchg arpl or pop lds aas imul shlb and jp xchg dec jle fdivrl popl lods test cmpsl pop std sbb push dec adc mov popa xchg (bad) leave lret pop sub inc mov and repz jg hlt xchg mov and pusha aam pusha and push aad xchg rcll push inc movsl jle fildl sub xor repnz lods push push mov sub and scas sbb data16 xchg xor inc loopne or (bad) xlat and or jp mov outsb push mov rcrb lahf insb jb cs mov dec cmp xchg cmp adc push test fcom inc xchg mov dec loopne mov adc sbb cwtl test ja inc out lret pusha stos out mov mov sarb sbb mov inc in mov incb call push pushl movsl insl sub (bad) jmp inc js (bad) pop xor call mov les sub ds test adc jle std jge frstor inc jge xor jle mov sub vmovups sub or mov push insl and add cmp xor dec pop cli or or lahf push fsubrl ds cli adc dec into bound movsb xchg daa cmp sahf fcoms test lock (bad) mov dec fwait insb jmp mov mov mov (bad) aam and cs pop add and pop push mov popf xchg jbe cli jns lret inc lock sarl sbb mov ret mov sbb movsl cltd (bad) cs dec xorl jno pushf cmp stos pop add jl and fisttpll inc aad and or inc push and push out or cld je or test add rorb out xor in inc jb push inc ret ret in cli iret scas test ret jg xchg xchg adc jb outsl push xor mov cmc dec lret sub ljmp mov push and inc pushf or arpl or outsl mov cmpsl fimull mov inc (bad) repnz dec fsubrl repnz lods inc cmp enter xor sbb add addl call xchg inc cmp sbb repnz ljmp ret lods push jb xor (bad) js sti xchg xchg mov clc (bad) xchg (bad) sahf cmp clc or fwait (bad) mov jl test sub pop das pop fwait adc mov and (bad) cmpsl sbb gs ret adc sbb jb repnz cld les add sub xchg xor pop jbe out pop iret push jge not and enter sbb jp mov and inc fildll mov int3 mov in push cwtl out ds out inc or push sub xchg add int les int push jo clc pop in lcall stos inc aaa mov mov push out or testb aas ljmp ja mov mov xchg and fwait add outsl and mov decb scas xor xor jle jle inc out pop mov sub xor decl mov or jbe xchg cmc push (bad) popa pop clc pop cmpsl aam jge dec daa xor mov out mov stos mov sbb roll int3 jp push enter scas stc pop xchg arpl mov negl loopne lahf mov ret pop cld push daa mov pop sahf sarl idivb pop jge out out cmc xor xor aas or xor stos xchg push xor adc les ja imul xchg dec pop push jle sub test scas aaa inc lods out movsb mov xorl mov push mov fcoml inc push dec mov int3 sbb stos arpl leave add fistpl cld call aam js sbb inc mov gs jp jno scas mov and js mov fildll mov mov fadd adc inc aad push in jno or dec in scas jne jmp es dec jae testb stos or pop mov cmc cs scas or sub fldl mov cmpb out loopne insb (bad) mov (bad) in push add inc clc dec (bad) fs je push pop lahf (bad) cld int3 push lret push adc stc adc stc lds add test movsl hlt (bad) popa addr16 stos and movsb divl (bad) mov test fistpl in (bad) jo cmp jge movsb and pop fmul outsl jno xchg fs and jns into sbb (bad) enter inc mov sbb test mov outsl xchg push inc cmp test sbb inc adc add push clc test or scas fmull aam and sub adc icebp add out mov daa cltd negl lea pusha nop inc pop add mov sub or (bad) push mov add add sub dec inc pop fwait add lds out push adc insb add jb clc je or inc loopne and pop xor in addb sbb fucom jmp mov or mov sbb xor lock xor or scas push push (bad) lret mov mov rclb pop lds jecxz cmc jg mov loope mov je and ret movsb cmpsb leave ja jae mov (bad) dec subl in int sub mov cmp int into jmp lahf and mov rolb and clc sub out stos iret cld or in push cmp inc pop int3 mov icebp or jl jnp mov out sbb std inc cltd mov adc les mov pusha movsl inc sbb daa push daa xchg cmp pop shlb xchg cli (bad) fsts push sub test pop xor sbb nop cltd ret loope inc push cmp sub pop mov or aad sub mov mov cmp lods xchg mov adc dec xlat mov popf (bad) xchg jge shlb ja dec mov push mov aad jge and sbb sahf xchg add dec ss into ss loopne dec jge test add add sub cmp xchg xchg pop and test sbb scas lcall outsb loop inc std mov daa lret idiv inc and cmp cmp test cs jmp add xor or cmpsl and push (bad) repnz (bad) daa jne loope add movsl pop test dec cmp xchg adc inc cmp and sub nop lock mov test jl movsl clc int pop addl push repz lods inc mov xor sbb sub out dec cmp sahf add push mov out fwait inc sbb dec push mov int3 xlat jbe aaa dec je jmp and out or jnp cmp jns mov add idivb jmp subb inc mov movsb jecxz iret stos xlat call cmp mov cltd fisubr and mov push leave jb push outsl sbb sbb adc add push mov je cld pop incl in rclb enter popa daa jno xchg loopne adc mov cmc push jge (bad) stc mov xchg js pop mov adc popf popf (bad) jg mov repz sbb bound rorl and ss push inc xchg inc inc das loopne jnp mov or (bad) js dec repz sub cld and inc iret and iret mov dec xchg push bound dec jg fwait mov (bad) push push out test fcoms addb xor fwait add push cmc imul inc mov aam ret (bad) mov or and lcall or inc xchg sbb and cmpsb xorl jno xlat (bad) aam jne mov pop sub mov cmp push rcrb mov mov jge (bad) jge and dec cmpsl addb jle test pop mulb (bad) and inc notb xor aam adc shll sub mov pop mov fsubrl adc pop cmp and sbb ljmp pop nop mov push iret xor jecxz fisttp xor jl mulps dec rorl movsl je mov aaa xor xor sub push mov push stos jae inc sbb iret sbb adc shrb mov fnstenv mov inc mov sbb jnp in imul mov scas mov ret movsb bnd sub adc (bad) enter push mov icebp (bad) jne cmpsb mov pusha xor jl jo (bad) pushf cwtl pop mov xor adc cmovo scas test cmpsl fmull stc or mov and fstpt (bad) insl jmp dec sub into outsl les mov (bad) fcomi adc lods pop or mov jecxz leave fisub arpl mov fnstsw jl jl sub xchg fucom add xchg mov aas pusha pop xchg xchg lds mov adc sub hlt negl insl in dec xchg or or pop push in mov lea add das cltd sub cmp add fstpt (bad) mov mov pop mov xor cwtl aaa clc cmp bound add int3 aad cmp mov (bad) pop fcoml adc dec push sbb movsl out call mov std push popa or dec lret dec (bad) or dec add scas lock in mov fisttpl pusha in jnp push enter (bad) jmp hlt xchg jl ret call add mov test mov sarl pop xor in adc (bad) (bad) stc nop (bad) insb adc (bad) ljmp or inc insl pop aad (bad) in pop mov icebp jns cmp push mov lea jb fsubs adc into lret shlb nop dec ljmp shl adc or arpl push pop idiv cs add sub fcoms shrb jp lock inc mov fimul fwait cs lods cmpsl pop add in jo outsl (bad) (bad) je in jnp xor mov cmp fild add adc mov ret jg into mov adc cmp sub pop pop ja mov es and mov jae mov aad jp rcl pop out push mov in sub lock into sub xchg dec ja sbb xor adc pusha mov adc inc popa test cli fwait out lahf jo mov add xor (bad) mov dec bound dec or and (bad) dec push daa push out imul addr16 dec cli cld jns stos (bad) sub orl pop mov (bad) outsb gs lock enter mov mov xor pop inc mov or dec xchg insb rorl scas jnp jmp jb in mov aaa fcomip jle push xor xor outsb fwait std arpl popf rclb or bound pop loop aad mov addr16 mov (bad) leave stos sub mov dec and repz mov jmp sbb ror repz push repz outsb jecxz sahf into stos mov sbb mov cmpsb mov mov cltd rcr outsl push jge and pop mov dec pop (bad) cmp mov sub cmp (bad) cli nop sbb jecxz and aaa mov sub jle mov int3 xchg aam je mov or jg (bad) test fmulp stos xor mov sub lret cmpsl pop xchg fwait jo cmp ret pop (bad) dec repz in imul mov not adc lds mov inc and xchg addr16 mov inc mov add inc fnstcw sbb dec xlat push mov stos into iret pop mov and adc lret mov aad pop test and arpl mov cmpsb xchg arpl stc (bad) and (bad) into in adcb into add lcall lea clc sub ret sub hlt cmpb or adc test cmp mov jmp out leave inc sub sarb push jae lcall (bad) pop mov mov ljmp sub fdivs cmpsb mov mov pop mov add enter mov call (bad) fisubr cwtl push xchg movb pop xchg test adc ftst push mov add pop cld cwtl test jl lret or (bad) cmpsl add or int fdiv in xchg pusha sub jne jb jmp cmpl adc (bad) xchg test stc sub jecxz (bad) je cmc dec dec inc xchg in negb adc mov lahf fptan push lea (bad) in cmp jge fisubl clc orl fwait dec data16 adcl cmp jle outsb imul sub dec add sbb sub cs sbbl jmp test (bad) negl out adc pop loope orb cmp sbb cmc outsb sarl mov sbb ret cmp or lret cwtl push subl dec jb xchg movsb sub mov pop cmp fwait inc addr16 fs pop add mov pop int (bad) mov (bad) pcmpeqd imul mov add mov (bad) lods rcl jge andb xlat fstl bound ds jge imul inc lret inc pop pop or pop fcmove mov cmc push inc mov jge mov jmp push loopne dec inc adc sub call jae dec shl mov mov mov in imul imul into jae pop (bad) insb xorl lods cmp mov push nop sub out pop mov lret cmc ss pop lods cmp cmpsl sbb popf sub pop loop in scas ret mov xchg imul cli (bad) rol mov test and and (bad) push mov pushw push mov in or cmp test dec mov sub add or pop es imul or int xchg xchg sub inc jge dec movsb (bad) xor mov cltd mov nop fsubl mov jp fwait jg dec stc pushf call mov jp scas mov jbe out orl add cwtl sbb daa out pop das roll ss cmc aaa jge pop sti adc repz cmp push dec sti lock pop and push xchg lret add sub fiaddl (bad) loope popa dec rcrb mov pop fs xchg mov cwtl arpl pop mov sarb xchg xor ret add lds dec icebp roll insl sub cmp mov mov dec ror cmpsb es imul add cmp xchg adc imul or pusha stos out pop mov mov pop sbb repz pop jge push mov ret xchg or test loop and push pop ds int3 dec mul lahf push insb cmc dec imul ljmp sbb xchg adc in es mov std and sbb and push push adc mov fcoms add faddl push xchg test push pop jnp lea int3 dec push cmp clc rorl bswap and jl mov lea out push push (bad) xor xor pushl add outsb sub fnop fcompl sbb std insl mov aaa je mov pop push cmp test outsb scas imul pop xor cwtl out (bad) mov fisttpl rolb outsb adc ja mov push mov lret loope test dec pmaxub cli xchg push in cmp xchg jge xchg std cmp xor jns jo ss mov dec sub xchg stc dec lods inc pop (bad) icebp stos xchg cmp out aas icebp push sbb in inc in insl out (bad) xchg movsb push sub jmp xchg xor out pop lret dec das (bad) lock aad mov rclb popf xchg push lods sti ret mov pop (bad) lds lcall (bad) and xchg fnstcw or push mov ret aas test xlat lret cs jge mov lret mov xchg jb push outsl add inc mull xchg inc (bad) dec mov popa shl dec test xchg vucomisd lea add fisttp mov stc xor xchg adc mov fldcw dec push jbe pusha push xchg jecxz xor or sub sbb fsubrl outsb add rcrl jns push lret (bad) (bad) xchg les jmp in (bad) je xchg out jnp sub and mov sub mov jbe add cs xor dec add sub aam call aad pop das lds sbb adc cmp into cmp sbb sub aad inc cmpsl push fadds mov es stos fildll sbb popl mov mov push aam lret xlat nop rorb adc add sub in jmp dec cwtl or (bad) fidiv xchg iret cli test (bad) (bad) sbb std cmpsl add sub repnz mov lcall mul and movsl push ficoml push inc enter inc les pop jbe es pusha push push sbb rcll lcall nop adc adc xchg das add jge iret and mov les push stos mov dec push inc push mov repz dec shrb (bad) xchg icebp push (bad) (bad) sbb lret lret ss bound loopne xor cmp jbe (bad) mov fldcw jl arpl ljmp fnsave xor sub cmpsl xor push aad nop out test rclb dec lods orl loope stos inc jl les inc fsub adc mov ds push push std xor in rcr call push sbb push (bad) cli scas lret push mov jp in mov cmp std fnsave push cld les aaa jge or jne rcll js sbb add or lcall sbb jg call and mov mov sub pop xchg stos or xchg int3 ret adc int3 popa mov adc sbb fidivl in stos push push fucomip pop xlat mov push mov loope andl cmp xchg fs mov movsl jmp cld aam outsl sahf xchg jmp in xor repnz test stos xchg sahf xchg dec in sbb loope dec test aaa fxch movsl pop sub sbb pop mov pop jae (bad) mov loop adc push out repnz xchg scas shrl int xchg out cmp jnp xlat repz xchg rcll rcll lea loope mov sbb xor fidiv cs dec add push ds popf (bad) jmp or rcrb jbe mov inc lods icebp xchg mov dec and sbb inc out lret xchg mov leave negb sbb and mov mul mov mov jge mov test insl dec je adc mov inc cmpsb pop andb int lcall xchg push jle and inc lods mov out sbb cs (bad) jbe out cmc and lock sub sbb mov cwtl push (bad) mov scas ss xchg addl outsl (bad) ficompl imul imul aas pop and add xchg fwait sbb test add sbb dec test jno fldcw pop adc ljmp stos adc addl ja pop call lock xlat and xor pop mov push pop out adc add in ret inc jo in xchg push in xor lcall add inc or in cmpsl and and mov pop fnstenv mov sbbb xlat in inc sti mov andnps ljmp sbb test and cld xchg nop cmp jo into outsb addr16 sbb int sahf xor push test inc hlt fsubrs in mov outsb add fdivrs das sub test mov (bad) pop ret cltd lahf cmp js push inc pop repnz adc sub pop cmc xchg scas lea fwait dec out (bad) or mov aas out leave or gs xchg js push test push lods je push mov xor jo lods xor int3 aam pushf jg out je mov out mov je (bad) cltd cmp jb (bad) popf xchg jmp repz rcrl cmc inc mov add in sub fsubr and (bad) stos pusha mov lahf sub lahf movb push cmp mov or xchg icebp or sub add ljmp inc ds (bad) mov fs cld inc sub cmc loopne lahf jbe mov mov (bad) or mov mov cwtl cmp faddl ljmp popf popf clc mov in andl xor (bad) adc dec pop and jle aas jbe hlt adc add arpl jp sub mov lods movsb cmp std push aam sub inc std sbb stos addr16 jmp or pusha mov cmpsb pop mov mov fmull add push popa lods jge xchg popa mov xchg mov jmp scas test ret hlt pop mov in sbb mov aam les mov outsl fsubs or sub xchg jp and lds jecxz cmc or inc mov add jle addl and add jl jbe xchg fwait mov or lret fucomip (bad) pop cmp imul push arpl shrl pop push add push stos and cmp sti xor pop jl lds jno xchg mov jne nop push mov xchg in addb loop aad cli inc dec lods cmc addl pop lods mov and and sahf mov mov daa int3 js cwtl xchg or (bad) mov test outsb cmpsb hlt stos es (bad) jo pop inc icebp cmp inc in lds add mov jecxz ret js pop in lcall sbb in in call push fsub icebp aad mov adcl and mov pop mov mov dec testl aad add cltd jbe cmp sub call aaa mov mov imul lea ret sbb (bad) jge sub sub out insl sbb ljmp pop pop add mov dec icebp hlt and mov xchg or test test pop and outsl cltd fimul daa sarb xchg lahf dec (bad) push push jnp dec or inc in mov cmp xchg (bad) jne mov add xor clc movd push inc out add bound and sarl mov rorl fwait pop adc jecxz out mov in or imull sub lahf inc cmpsb test inc mov lret xchg xchg sbb mull sbb imul xchg xchg sahf inc mov inc imul xor stos mov bound stos sub cmpsl ficompl add fidivr adc mov push adc pop aaa aam fsubr ficom cwtl xor (bad) jbe sbb adc add add and lods stos insb adc outsb imul push insb out std adc mov jle jbe jmp repz xchg (bad) aaa or dec or push mov pop sub pop mov cwtl jnp inc lds and pop fcoms outsl inc and dec push out out out mov iret pop rol insb out cmc mov dec cltd scas mov or mov (bad) shll sbb jo mov pop xchg bound lock push or outsl lea sub dec fidivl cs loopne cmp xor mov xchg xchg mov or xchg cwtl inc add and sbb mov sbb test cli pop loopne cmp in mov and and ds jns jnp jmp popf xlat jbe stos rorl mov movsb stos adc jmp xchg pop push fsts adc xchg inc jle and add out dec cmc mov and in (bad) jbe mov (bad) xor cmp ret xor loop into sbb adc sbb lea rcrl jmp mov push lcall pushf mov and out or push cs pop dec rorb push xchg movsb (bad) jns push pop icebp cmp xor ret pop adc scas cmpsb ljmp push out pop cmp lock outsl sbb and jecxz mov rcrl cwtl push or iret repz adc mov dec cmp mov pop negb sbb mov out fnstcw adc jecxz inc add and jecxz leave push in push hlt push mov in fidivl add jae test call out lahf mov mov pop mov test cmpsb in mov pop insb cmp mov or das mov mov cli test (bad) ja and push jle movsb push lods and imulb sbb mov aam movsb sub and adc ljmp push jl lods xchg and out (bad) imul mov inc sub rcrl lods dec ljmp xchg (bad) aad cli or out cmp pushl fsts cmpsb and cltd cltd xor clc ss stc repz lcall jmp inc push fisubl add cli xchg fcompl pop imul pop enter inc movsl mov arpl sbb std aad xchg pop dec in xor jl jo xorb pop das pop cmp rcl sub fild pop movb or mov push (bad) out push push mov mov or into je daa loope imul xchg inc push xchg lcall (bad) lcall leave ljmp int3 mov faddp dec xchg inc jae out lods rcll sbb add mov cs dec loopne sbb cld test xor cmp inc sbb mov jle mov xchg inc test sub mov ffree es mov aad lea insl mov in dec cltd push mov mov xor lods mov mov scas sub out lea xor std jge mov xchg (bad) xor push pop lret xor jp cmp jbe jae and push popf add inc push movsl mov push pushf movsl clc repnz cmp pop sbb inc adc movsb out call dec sbb dec sbb getsec aam pusha mov imul insl and (bad) js xor mov pop sbb orl movsl sub call pop pop push xchg xor dec xchg movsl bound daa ds push jmp sar sbb cmpsb push fcomi cld xor ss push bound cltd f2xm1 xlat rcr stos pop outsb aad adc (bad) (bad) cmp fsubr (bad) icebp mov mov inc rcll jle sahf sbb (bad) jno cmp test mov int cmp sbb push pop push subb and into add idivl mov jo mov push cli int (bad) push or call inc pop dec dec push push jae decl sub sbb jmp mov adc xor push cld push xor test lds add imul das mov xlat aad test sbb push loop cmp inc xlat leave lahf xor insb mov icebp jbe jmp inc push adc inc xlat scas mov push addr16 es mov fwait xorl mov out xor inc sbb sbb xor arpl xchg enter mov mov (bad) arpl daa sarl push fs lcall and gs push push stos adc aam dec jbe inc cs fdivl std pop adc loope,pt or inc mov test repz mov (bad) push movsl ja enter rolb or dec dec andb and imul flds iret vpcmpgtw add inc or lcall cmp mov in inc mov ret mov inc outsb movsl test aaa and push hlt mov xorl bound out popa rcll pop adc subl idivl inc hlt lods inc dec jns in (bad) jno add cmpsl fs outsl push lods insb fimull jge mov leave into mov dec xchg inc jle xchg out xlat test push dec movsl hlt stc ret aaa jg insl les test pusha (bad) aas scas pop inc lahf mov xchg xchg adc fmul push enter movsl repnz inc xor fidivr jl rcrb pop out js sar inc lret insb dec xchg or add add invd mov lret incb mov sbb fdivr nop mov lret mov je pop scas inc push cmpsb sbb int push aas test insl inc cmp inc (bad) aam das fisub test mov inc mov testb jo pop clc in fsubrl test push push dec lds push cmpsl dec xor outsb mov and xor clc das or outsb xor cmp xor je iret sub mov data16 cmc lock mov in fnstenv jno shl mov test or mov ss pop stos in jno sub aad aaa dec push jle add enter inc xlat mov imul out pop xchg ljmp pushf aam ss and pop dec sbb xchg test dec adc je lods imul push cs pop push xchg sbb jle add in imul orb gs stos sbb xchg jmp imul push lock jmp sub xor adc out lahf mov cmpsb or js es cmc sub (bad) sub gs sbb fisubrl dec add stc push js fildl movsl mov rcrl and (bad) rcr mov into and push inc jae in adc cmp mov js outsb sbb pop jle arpl mov and int jo cmp pop lahf and gs mov mov ss addl aas jb push xlat pop mov test (bad) xchg ret cltd test mov cld mov lret mov repnz mov (bad) xchg push mov movsl adc scas add or test (bad) int3 jns int3 add mov push sub mov aaa dec or pop daa pop xor cli (bad) jns movsb scas fsubr repz add (bad) xchg xchg pusha sbb xchg jmp std mov (bad) jp fwait aad insl mov adc or xchg aas outsl mov xchg scas add mov cmpsl xchg mov fs ljmp jecxz cmc inc dec inc aam or int3 dec lods pop out adc sbb sub arpl mov enter int fdivs jne sub fildll aaa dec push lret aam lods mov (bad) mov test jb cs mov xorl (bad) push mov mov nop mov sbb stos movsb inc daa inc popa sub cltd jecxz andl xchg sbb lods cmpsl fadd push add decb pop gs out sbb fdiv cmp fs sub fucomip inc lret xchg aam xor and ljmp es sub arpl jno jo inc in dec ja mov push add xchg das mov aas aam movsl dec xchg cmc cmp aaa mov xchg ret cli and cltd adc pop pxor arpl fwait pop int jns and stc testb loope xchg ret and repnz dec xchg jae add stos stos rcrb adc mov pop mov jl and xchg in (bad) mov add cli jle mov mov push lret ja pusha xchg fidivrl ret out push jl daa push rolb adc fildl dec add sbb int cld test dec jnp out push add repz mov int xchg leave in ficom jnp mov jge jecxz sarb lds aas or xchg out dec fist add xor daa inc js adc ret xchg cld mov adc loop popa sbb pop and mov or sbb adc mov and (bad) adc dec jp mov ficom addr16 movsl dec ja or mov cvtdq2ps and xchg mov aad mov add mov pop add fwait lods mov js and sbb jl push pop imul adc cmp cli or and mov in add inc fwait mov xor mov mov rolb xchg dec movb fldcw mov inc adc mov mov popf jcxz sbbl mov add scas dec xor dec jnp xchg add shr nop mov (bad) cmp shrl xchg push jae in mov pop xor fldt ja mov sar jno,pt fadds add mov fsubl lahf ljmp (bad) or inc push sbb cmp cltd inc lock nop jne cmp pop cwtl cmc repz (bad) pop mov jmp jmp pushl insl ret dec dec add pop jge pushf xor orl xchg pop scas adc mov pop cmp jo push (bad) cmc lea mov adc inc mov mull (bad) cld (bad) sahf loopne nop test cmp jo aam loope push stos je cmp stc push bound dec and or js mov lods loopne les cmp pusha movsl mov adc pop xchg cmpsb add cmp scas sahf xchg lods inc lods sbb dec roll or add dec lds ret cli leave or or fiadd enter sbb adc enter pop mov shr imul movsbl sbb (bad) fisubr cmp dec shll dec pop in test rclb or imul dec adc out xlat je icebp addl mov data16 aad adc pop cmp mov jbe mov inc icebp outsl clc and test xchg jmp mov in int dec insl xchg lret call repnz adc xor cmp lret adc dec lods movsb pop dec inc jle mov cmp and fisttpl mov cld adc mov in rcl push sub adc adc xor pop ret pop test mov adc lret sahf xchg pushf xchg or aam mov push popf ss pop sbb push fadds cmp lods sahf jle popaw ja lds sbb sub pop sub fcmovne add fwait pop loop cmp push bsr mov pop pop daa mov and or dec std arpl fisttpl lret cmp pop cwtl xchg sub test faddl cli pop or mov sub xchg clc add mov add into out dec cmp mov cmpsb xchg aam or mov out add pushf cmp ljmp fwait and sub decb lcall lret jo xchg cmp mov jp cltd inc jne call pop out mov into xchg cltd andl lret iret outsb lods mov fisttpl dec mov sti cmp pop (bad) ror jae addr16 xchg (bad) icebp mov stos and cs mov xlat mov cmp dec js or sub dec lahf adc leave outsl inc fmull in and or xlat pop andl pop mov test pop sub add pop jae cli jne push adc jae ret fldt bound jge xor mov push jo in aaa xchg enter cmp adcb xor mov jne add xor dec inc iret dec jp xchg dec and les lcall stos jno cmp fs lock inc mov push test jnp push dec add aad mov mov pushf and rcll sub cltd movsb and mov ds std enter addl (bad) mov dec and addb bound sbb outsl into or std jns adcb inc test push sar mov jmp dec stos mov mov xchg adc push mov stos pop test shll movsl xor mov sub cld xor dec push call adc jg push mov or (bad) mov iret jmp jno (bad) sbb fnsave xor mov xchg sar jmp adcl inc rorl sbb jnp mov (bad) fisubl movsb and lock push xor adc cmpsb rolb popa mov and aad andb aas add test mov lahf cli and xchg shll dec sub cmpsb jno push flds (bad) aaa mov mov pop es adc pop test pop fsubrl fwait cmp mov sbb jmp pop cmp mov pop scas mov mov fnstenv or xor sbb or add sbb int inc mov into xor rcrb mov (bad) mov sbb movsb imul scas xchg loop cli push or sub fadds adc push lret jns pusha test and (bad) in ljmp lods pop outsb dec imulb push into mov scas adc mov test mov movsb sub aad fdivl gs stc rcrb xchg dec ss rorb subl sub out sub xor lea out cli loopne jge ret lahf or (bad) mov pop cmp cmp inc out jno cmp int jmp out jl (bad) mov sbb rorb (bad) negl pushf jle aad sbb push sarl xor insl jb arpl and push sub sbb (bad) pop push ret inc add adc (bad) inc test (bad) cmc push cmovl roll mov push adc test insb lcall dec jp test pop repz push mov mov shlb xor out sub out negl push icebp mov ss xor xchg ja inc (bad) push xchg pusha inc xchg mov or jle sub scas add mov or andb or imul pop fdivr (bad) out mov pop je xchg (bad) mov xor push lds inc push jo lret fnstsw dec setno mov out pushf ja inc sub pop or mov sti add inc inc data16 adc mov stos push rcrl cmp push push sub sbb ficoml shr mov outsb xchg pop rcrl sub fnsave mov ds sub aam cmp mov (bad) cmpsb sbb adc inc xor outsb xchg ja adc jle aas mov mov lds mov arpl rorl mov push cmpl or inc es add xchg cmp lahf fmulp mov jp and gs stos (bad) aad repnz and and dec enter xchg into and mov sahf add xor jg adc jl pop (bad) lret pop scas push push jno mov jno mov into inc arpl arpl pop mov shrb and cld stc lock cs je (bad) mov movb pop ret test aad add je sbb fwait xor mov out add or mov pop scas gs leave out sbb adc mov lea sbb mov sbb lds pop jae adc mov int3 out adc enter add in and mov dec jg push lcall mov movsb jns and dec in nop in dec sahf mov in inc add pop push out jne fisttpl push iret add lcall xchg fildl jo add lds movsl mov add push push adc push jno repnz mov fcmovne and add adc jmp and and mov xchg in pushf mov fnsave xor (bad) idivl in sub sub fimull cmc dec xor pushf mov xchg iret cs or cmp fwait adc push mov cltd sub push cmp lret ds and jb rcrb xchg (bad) flds int in jecxz mov add pop or push push jo arpl movsb mov dec mov sbb xor lret push fs into pop xlat popa jmpw icebp popa push es jge aaa out and rcrl out or outsb imul or out inc pop cmpsl push adc lock dec or mov sbb test test jb push dec push mov in inc cs and add iret push jns adc add test or call ret jbe movsl jmp xor xor push jae adc (bad) cwtl sbb ret jns es pop sub pop jmp lods mov and push dec xchg or (bad) and fs mov mov repnz sbb mov jae out test cmp pop sub sahf and scas sub scas mov je rcrl xchg cmp jae mov pop xchg xchg call mov pusha cmp daa icebp jno ljmp jnp push popf pop daa xchg adc cmp pop add mov stc adc cmp daa xchg xchg nop sbb test sub inc orb mov jno loope cli lret call mov (bad) fwait xchg add insb jmp fsts rol sbb fimul cmp mov sub fwait cmpsb ss push pop or and inc lret (bad) enter divb xor imul mov shrl movsb mov jecxz or fwait jge int3 test inc cmpsb cmpsb imul mov xor mov xchg xchg dec pusha add cld dec leave jecxz or out in loope daa movsl hlt mov dec test imul adc xchg pusha adc dec movsl adc out (bad) jbe sbb aad xchg inc sbbl cmp movsl fisttpl sahf mov roll test cs sbb inc cmp sbb mov inc out ljmp (bad) dec out lods outsl out cmpsl jecxz mov add ds fistp insb xchg push xchg cltd call sti push cs xor lea adc add lds sub icebp loope mov pop dec push push (bad) repz lahf lret (bad) and out mov imul dec mov sub in push push pop cld mov incb jne arpl in jle cmp jg sbb push or aas js fdivl sub add mov cltd clc add inc jp xchg cwtl test pop mov jecxz sub add loop inc cmp aam inc decl jae xor ja mov (bad) lock adc mov imul push adc aad insb stos xor lock pop ljmp lock fimul xchg cmp cmc popl xchg jl lret nop jmp xchg aas ja mov mov mov ret xchg repnz and xchg mul (bad) mov mov jo and loop cli movsl add xor mov fldcw sbb sub das mov pop push jmp mov lret testb call scas jge call dec lea addr16 push jno fsub stos out icebp push ret out cmpsl xchg mov jg adc ret push inc mov (bad) daa xor inc dec in mov pushf jae (bad) mov jae mov pop mov cli mov ja inc inc popa data16 sub arpl sbb nop pop shrl rcrb je stos push sbb xchg dec xor or std xchg mov pop jnp xor aaa scas insb pusha (bad) cmc cmc loope sub pop daa xchg inc (bad) mov mov sub inc rorb ja in stc or mov rorb xor fidivr scas adc xchg or pop icebp shr and into (bad) xor xchg data16 jg sbb or jg and test mov (bad) stos fs lahf cmp mov ret rcrb popa shll cld ds fstpt stos add jo icebp jmp dec iret mov jb lds movsb pop push test aas out xor stos fcoms bswap stos int3 jno inc xchg inc insl push xchg lds jge test rorb mov add mov psrlw mov lret xchg and jl adc mov sbb outsl lcall mov aam mov stos or fcompl clc out not xchg mov mov mov pop movsb push cmp icebp xchg or lock dec jmp outsl std dec push clc jne mov and jmp push lods sbb adc add call cs add lods fisttp sbb and (bad) push xchg ret fldcw and inc mov mov or sbb and movsl mov daa cmp lods arpl loope sub dec pop and (bad) ss mov and push lret or xchg adc pop out push fistpll cmp fs push sbb das jmp scas in add in movsl aas xchg xchg ja int stos aam in daa xor sarb xor stos das ljmp pop test sub sbb and xor (bad) sbb bnd enter movsb mov cs outsb adc mull dec (bad) outsb mov cmp mov or inc cmp or out cmc mov dec push dec rorb mov sbb shlb inc and jge les jb (bad) adc int3 mov std jne lock scas ss xor xlat sub call push jbe das cmc (bad) aad popf popa fldl in xchg inc dec les lods cmp fwait (bad) js sub jb in cmp mov sub (bad) mov out lret cmp out js adc adc xor aam jae inc sbb jo jb movsb (bad) sub (bad) repnz xchg cmp nop dec shl or jge mov or and add or cli or lods mov (bad) sbb mov cltd dec sub insb repz cmp push xchg cmpsl sbb lcall push (bad) shrl jns cmp push and iret ret mov (bad) sahf and adc sub add fidiv in fnstcw inc xchg adc adc fstp ds outsl and or pop inc das das mov jp sti pop subl or mov je loop shlb movsl dec pushf rcrb hlt mov hlt jb pop imul test sbb int3 push lods addb movsb (bad) popf ss fidivl pop inc (bad) sti gs xlat xchg inc jp jecxz flds mov gs insb mov add xor jecxz adc lcall loope cmpsb pop mov or sub inc repz aaa pop mov lahf dec mov push (bad) shrb jae xchg loopne mov sbbl cmp lret clc push pop out je,pn test arpl jle mov daa xchg outsl cmp mov pop mov and mov test aam sti out dec cs mov xchg clc push bound mov inc ss jne sub lds mov dec mov cmp cmp ja mov push dec mov fwait andps or enter mov (bad) push mov sub lods dec cltd or lahf dec mov mov (bad) add xchg pop cmp fdivrl test push scas mov push add or stc mov push dec sarl sub int3 aad (bad) or xchg ret in and lret cwtl inc aam inc (bad) mov sub inc aas inc and mov xor (bad) fwait mov mov dec pop add xor push enter mov dec fcmovb sub mov push and ret pop mov xchg sub mov orl push in (bad) mov leave push xor (bad) jp adc and test mov inc es in cmp sub stc sbb and pop push adc lds dec mov push stc daa hlt bound cmp pop push and sti mov push into imul push data16 lock cs ret sbb push sbb inc adc cmc enter aaa adc sbb inc test sbb inc sbb push int3 aam xchg jnp imul jbe push mov sbb or scas sahf orb mov icebp mov xchg jecxz scas (bad) test mov ja dec aaa pop ljmp inc mov stos add mov iret or add add pop push pop stos cmp cld mov adc push lret mov sahf int3 push push inc pop popa jl sbb fwait dec fdivrl test in cmp jmp mov inc stc jge int3 call movb xchg jecxz pop stc adc mov jl push outsb sar push clc dec cmp xchg sti mov push mov es jae loope jecxz repnz xchg cld cmpsb push es xor fwait cmpsb xchg out cli mov js cmp mov aad inc adc sub das sbb or mov sbb je mov add scas das aaa xchg xchg inc jge adc add pop mov pop fiaddl fcomps xchg jp ror shll mov pop and mov fistpl pop sbb jp pop loop sbb add push mov fs std adc icebp xchg sub jge and push and mov push rcll aam mov les in add xchg lcall (bad) sbb scas jae dec imull fldt fs mov inc out rcl enter xor lret add into inc pop cli lods pop pop pop clc pop data16 cmp or cmp push mov cld je adc pop jp stc mov fisttp cmp sub daa pushf loope scas adcl cs dec fnstenv adc push xor or enter mov inc ret scas jo and (bad) cs (bad) and test mov jmp pop mov mov dec cwtl cmp cmpsb xlat cmp pop inc or jnp xor push jmp cmp out sub (bad) jp cld and leave sbbl dec int mov xor leave pop cwtl xchg stc out inc out or dec xchg xchg push mov adc or push xor and ficompl scas add ljmp jecxz push imul dec push mov xchg test and test popa cmp addr16 lret lds mov xor int3 mov and fdivrl imul jp xchg mov xchg dec xchg imul mov inc cmc lods xor mov iret icebp cmpsl imul push mov push inc popf sub push movsb scas inc dec sub mov or iret (bad) mov inc (bad) cld pusha and movsb mov shl mov pop inc mov aaa push cwtl and inc lods mov std stc daa push sub push push mov (bad) adc test push shl push hlt ret decb in jge or fwait out (bad) sub mov dec lahf out in inc xchg std jo and ficompl jmp cltd int rorl xor lea and int adc sub xor mov aas adc sub dec xor or mov mov fbstp adcb loope xor jp jg adc pop jae xchg sbb jo xchg sti pcmpgtb cli aaa sbb pop mov or xor jne mov or mov and add adc sbb jb (bad) adc mov div mov call pop lds sbb pop loopne sub lds add cmc ds pop (bad) jo out sub fidiv pop add enter in nop js inc dec inc aas je je es sti mov pop mov enter idiv repnz push adc sub and jecxz sahf popa (bad) mov rcll add cmp and outsb pop add stc sahf jb and pusha adc push xchg scas mov inc xchg ljmp pop arpl sub sarb fnstenv scas and ret xchg (bad) out int mov lahf sub (bad) ds outsl loope movsl js mov rcrb jb test call cmc cmpsb xchg fs daa movsb dec and js sub hlt jmp cmp xchg les push sbb fsts lods fwait pop pop cmp fdiv test push (bad) ds popa mov dec cmp es les aaa (bad) into (bad) jge shlb cs cli (bad) sub xchg into cmp scas sub add dec jecxz call je sub mov sbb mov cltd and (bad) push jne insb push movsb outsb fimul outsb add mov cmp add sar hlt (bad) mov imul ret mov inc and push aad mov dec arpl mov cli mov fmull mov ds jp call stos out fsts mov mov xchg out movsl xchg dec leave fwait mov xchg lcall push pusha xor test pop jp pop popf sbb jge sbb pop mov xor or sbb leave lcall inc push add (bad) movsb xor jg loop fcompl fsubrp ds bound popa sbb add mov cmpsl fisttpl (bad) dec or and out ret mov mov adc jnp or movsl xchg inc mov adc push in adc lods sti stos add inc xor not andl push and pop aaa rcr les repnz xlat jge mov pop loop popf out popa cmpsb cmp mov rcl adc dec mov cmp jns adc popa sbb stos repnz sub add nop iret js jg scas mov xlat subl jecxz test cs das movsb dec dec xor mov addr16 call jge (bad) mov sbb mov lret push mov sub cmp cmp or pop pushf cmp ds and gs cli jne add (bad) or mov or xor mov inc (bad) sub push stos push push rcl fstps ret (bad) fwait xchg scas in push mov clc je adc inc ljmp add inc sbb pop add inc or ret out fmuls mov xchg adc into or (bad) (bad) sbb loopne dec mov clc or scas and mov fimul pusha push daa xor adc lock enter xor inc rcrb repz push (bad) fiadd pop lret xchg pop out (bad) xchg call (bad) xor sbb mov dec dec fidivrl popa outsb sbb sub adc shrb cmpsl cmc das and xlat repz lods mov mov push les mov pop ficom clc das clc lods ss or test sub cmp rcll lret dec jle movsb pop nop and inc cli loopne fisub push les push scas (bad) jmp mov daa xlat lds popf (bad) out and xchg cmp out daa inc xor mov inc ljmp notb jle add iret arpl push jnp mov xchg loopne mov dec cmp pop dec out cmp xchg xchg (bad) fbld fist insl cmpsb mov call xchg mov mov jae addr16 mov cs xor (bad) in clc (bad) call dec jae mov cld add sti lcall push movsb (bad) aaa mov jl xlat jg insl push std (bad) sahf mov lret xor sub movsl mov jbe adc push bound fs pop icebp inc mov stc dec push sbbl aad sub sub lret and xchg jnp movsl imul lods inc cmp out add pop std (bad) dec jb and dec mov in sbb int outsb insl test add push jle dec jae mov pop push mov outsb pusha mov repz mov shll les int3 jl imul fdivl sti or cmc mov add sbb xor pop les enter pushf cmc loop rorb sub inc andb mov lock sub push dec ror push int int (bad) jae mov rcl add push and lock and ja mov int fs test jae mov pop loop push lret add (bad) sbb (bad) std push cld pop sti xchg and xchg inc clc push cmp inc cmp jae mov mov incb adc xchg adc jne pop mov add ret fdiv jmp mov (bad) mov mov or mov (bad) xor pop inc add xchg sub rclb test (bad) mov aam cmp mov pop and jbe (bad) fstp jnp sub stos loop fsts nop sub mov (bad) rclb xchg sub lret sbb cmp inc lcall adc or daa xchg cmp add cli and inc sbb into add scas cmp ror inc repnz jecxz sbb repnz or or mov ss cltd sub rolb and and mov or sbb jl pop mov inc mov (bad) test mov stc dec add pop push cmp movsl (bad) cmp mov icebp aam push jno pop or add xchg cmpsl into popa mov iret inc cld jp dec in out jge nop sahf andl jno jae sbb stc xchg and shlb inc int3 shrl xchg inc mov (bad) or or jb rorl pop cmpsl icebp test nop les fmulp popa cmpsb xchg insl xchg nop mov sub xchg fsubs ret adc aas arpl popa decb in sub mov movsl or dec daa push cmc das and movsb or add fs adc sbb pop mov inc push (bad) icebp mov shll jbe mov xor xor push and aam lods cmp pand jp stc xor mov xor xchg mov in out test and mov or lcall es jge outsl cmp jno mov imul or repz in sahf lds jae,pn sbb xchg imul in inc jp,pt xor cmp adc in ret xchg and pop sbb sahf outsb aaa lods in repz inc test dec dec (bad) jge jge xchg imul cltd pop or outsl add mov or les cmpsl test out int3 cmpsb mov lcall mov in popf aas mov (bad) jge lea pop out hlt (bad) nop cld mov add mov into ret std push push stc add repz xor dec pop mov fldenv adc mov hlt test or mov or xchg and aaa in adc (bad) out pop mov outsb imul push in loope (bad) (bad) out ret xor push daa and es adc push dec add bound lcall stos dec mov add inc cmpl mov xor (bad) xor in shrb xchg fisubrl adc cli xor ss inc inc pop xor jmp cld dec jge fsubrl dec mov pop sub leave pop and mov pop or xlat xor jg sti push jae hlt adc fdivp fndisi(8087 xor arpl mov fistl adc (bad) test jno out sub in test imull test cmpl loopne mov mov xor (bad) es push mov ja scas push mov adc adc add or daa cwtl xlat mov mov gs ret and ss mov fsts leave sbb hlt ja lea adc pushf mov out inc sti adc sub mov push call pop daa or mov testl xchg scas (bad) mov clc movsl cld fwait mov cmp xor (bad) cmp add mov daa xor adc int stos mov add lea sti ret (bad) xchg movsb or scas sub jecxz scas cmpsb and mov dec xor jns lret xlat repnz push push pop add pop push cmp fdecstp cmp jle enter call cmp repnz pop inc lahf out (bad) xchg pop pop pop adc mov mov mov or in lods fiaddl subb inc dec (bad) (bad) stos sub sbbb iret mov iret hlt ljmp (bad) mov xchg and cmpsb sbb mov inc xchg rep sub jno adc int mov fnstenv cmp scas and adc adc rcr mov decl mov xor mov adc adc sub cltd mov or test and aas dec xchg mov pop adc mov mov adc stos mov xor ds aam testl imul jg jb shlb adc jae imul outsb jp arpl icebp xchg jnp xor mov mov xchg sub pop lods int mov and fs scas push mov cmp pop (bad) push adc add xchg jns loopne lret addr16 fidivr mov ja and lret aad fmulp aad lret popa out imulb fstps adc lret pop cmp lahf inc (bad) insb fild xchg sarl aaa adc inc or sbb clc inc pusha adc sbb call stc test push in imul pop loope iret xchg lock push push inc or daa and loopne cwtl mov enter mov adc add dec push idivb push fwait sub dec (bad) (bad) mov out jb dec xor int cld sbb (bad) xlat xor jp sbb mov cmpsl subb lret ja mov sarl mov push and cltd insl ss mov loopne pop pop addr16 int3 inc scas dec pushf daa lods lcall jae xor orl repnz mov and incl dec clc sub in (bad) jmp es addr16 cmc jecxz cmp mov mov arpl mov and inc pushf jmp or fs pop mov mov lods cld loope add jne xor mov stc mov adc aam (bad) std xchg shll inc adc pusha dec mov mov cmp jns or fdivr jp and (bad) mov cli pop adc stos mov pop sbbl arpl leave mov adc scas push scas scas adc jg insl pop and cld cltd mov xchg in nop pop aam jmp cli cmpsb ret mov fistl bswap fbld push jl sti jnp mov cmpsb add in jmp mull inc fbstp shl loopne lds (bad) loopne test xor repz jns inc mov dec es in mov mov mov (bad) int3 (bad) or xchg out jno loop pop cmc negl sub loop jbe aad mov or pusha enter fcompl xlat and (bad) sarb das sbb dec out dec push js into scas imul or cmp pusha mov stos xor (bad) or mov cmp fcmove lock push aad lods aaa cmpsb frstor and je cmp inc cwtl pop inc lds fisub fwait mov or mov cmp scas cmpl test mov fsubl inc pop inc jae cltd sbb fstpt rorl aas shrb insl loop mov out xchg push cwtl xor adc inc fwait loop xchg sub addr16 jg mov mov dec lret push mov ljmp int (bad) mov bound ret repnz xchg xchg push (bad) andl mov adc cld pop jl jo ds sub add mulb pop ljmp xchg cltd mull out mov out mov mov push cmp mov inc (bad) int ljmp dec ficom xchg adc push notb adc pop out push or movsb mov loopne sbb fnstcw gs mov pop arpl cli push mov mov push pop push add jbe (bad) jg add out bound mov scas ficomp sub xchg loope pop cs cmp out xchg inc es mov out js xor insb sbb es jle jne push faddl xchg mov jg push fild mov insl mov xchg cmp xchg sub jle stc push add dec andl fldl cmpsb clc data16 je jns xchg xor cmpb stc mov xor ljmp inc imul (bad) test jp (bad) cwtl outsb fadd es inc fisubr mov dec xor jno out push je in (bad) mov push aad icebp xchg mov xchg xor inc sbb dec call jo je add pop insl ret pop push jp clc or mov in add mov jle aad pop fnstcw pop adc jl clc sub add fnstsw jmp add cmpb pop mov pop jmp je sti mov and bound cmpsl cli sbb push xchg sub dec mov xlat inc mov jns mov loope (bad) imul xlat nop xchg xor sbb imul mov mov mov mov xchg xchg fs mov fstl mov sbb sub jne jnp rcrb aad fwait pop into sbb mov loope push sub push push bswap aas and push jnp imul shrb dec lods test fbld scas in nop add imul int3 mov (bad) xchg into and mov stos add pop das jp div stos adc mov lea sbb adc iret fsubl and and jne xchg aam mov mov test mov push mov cld pop shlb stc push cltd loope sbb imul sub rcrl xor cmp ret mov jmp repnz push mov mov xchg pop outsl (bad) dec bound jle xor lods sub addr16 in add sarl hlt xor mov mov dec jg lcall or mov test xchg outsb lahf fstpt and xor inc sbb cmpsl add or imul (bad) lret xchg mov pop scas xchg fcomps fild xchg scas jb mov inc push push xor (bad) push mov int3 insb pusha sbb push pop mov clc push xor cmc adc ljmp add insl and scas adc mov lret mov cmp test int sbbb pusha mov mov js adc mov in jno xor imul mov icebp push cli add movsb out mov es ret dec push or inc into add rol inc arpl insl movsb mov lea xor sti mov pop push jo mov imul push (bad) fcomp jne and and les jecxz or (bad) and gs into (bad) mov inc test dec inc jle xor (bad) mov pop jmp mov aaa add int out jne pop jle push xor inc scas repz insb mov fistp fiaddl shrb cltd sub adc mov rorl in movsb dec mov jno in rolb mov jns cmp loop jle (bad) and sahf push daa fsubrp push push cmp scas cld sahf in insl sbb mov (bad) (bad) jp lret ja mov mov loopne js mov outsl dec test rcrl icebp push loopne call xchg cmp (bad) popa add xor dec jp sub int xor xchg cmpsb stc mov and xchg rorb cwtl cwtl cs jo out ds mov xchg jb adc xlat xchg cmp mov mov mov int popf fdivrs movsl sub (bad) inc xchg push sbb aaa jmp (bad) out sbb xchg xor aas xor jg inc add dec pop lcall outsb scas sub ret rcl and stc ds lock pop xor cmp inc test adc or xchg (bad) xchg mov jno int3 scas gs je fbstp test inc adc xchg lods call inc lock ja mov xchg dec inc mov adc mov mov push push jl mov hlt out cwtl js sub pushf sub or add ret push in push xlat lods daa inc (bad) pop loope cmp bound test mov and int out iret or fnsave ret dec fiaddl mov xor sbb and xor mov inc stc mov lret pop je ficompl ja xor or cs mov pop mov and (bad) cltd insb and loope and mov adc mov push icebp cmp xchg jae sub cmpsb nop sbb mov jg movswl jecxz dec (bad) call mov sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 leave sub les loopne jmp jg mov push sbb or jae add xor out sub dec mov push push jmp aaa lcall push out movsb or push mov adc addr16 dec cmpsb clc xchg mov std and clc cmp popf jnp jne or arpl test cltd hlt add mov jbe jnp inc adc push stc cmc sar aas mov pop into lods xchg xlat insl jmp fbld stos (bad) pop das mov sbbb cmc imul xor sbb enter (bad) jge inc jo (bad) adc and stos inc jae sbb push insb or movsb arpl xor mov xchg lahf jle (bad) and sub notl outsb or mov adc pop sub in in mov (bad) cmp rcl push sbb pusha stos pop adc inc rclb sub hlt cld or add sbb xchg ret rorb or pop flds pop in jae sarl sub push lcall mov aas ds push xchg (bad) xor rcll lret ret mov out (bad) fwait lods jae mov cli fidivl fidivl inc (bad) repz in push in adc fcomp shl sbb xchg pop inc psubsb push gs stc ss push mov in push inc adc jmp int3 dec adc inc dec jb fwait xor sub mov dec xchg stos div push mov adc add and sub sbb arpl cmpsl cltd xchg xor imul daa fldl popf inc cmc add fiaddl (bad) adc mov mov bound cmp mov and and sbb fwait enter jae pop ss dec stos mov inc dec lods xor push cmpsl lods mov cmp push jecxz in ss mov lcall movsb (bad) pop push mov jp push sbb lods pop stos jb aaa ret add sbb imul xchg leave sub lea push pushl pushl call add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret leave sub rorl mov mov push xchg out adc add xor cli les or jb imulb ret jle fnop pop xchg fsubl sbbl jmp (bad) push sbbl fdivs bound mov mov add cmp nop ss loope lock aad ja push adc (bad) outsl sahf cmp pop xlat lret std jbe imul insl push sti and iret and sbb mov mov mov scas mov pusha jno sbb mov sub or out add push mov call add xlat cli mov mov push adc call push cmpsl mov sub xchg push in xchg clc sub jbe scas push or push or push xlat mov repz sbb loopne out add inc notb sbb ror stc jl cmp (bad) jle stos out ficompl inc mov jne (bad) xchg cmp cs fucomi adc xor fstps inc mov jo inc mov dec les jo lret mov sub mov imul (bad) mov xchg mov loope mov pop and fsts cli sbb fwait dec jmp add pop mov lods in mov inc mov cli popf packssdw stc lea push ljmp mov add (bad) and xchg jecxz int stos test push jo pop ret push push and sbb push (bad) fldenv pop loopne push jnp aam cmpsl mov test xor or cmp jo dec ja inc adc movsb mov and (bad) test (bad) scas adc lret sbb sbb inc into mov jmp decl (bad) loop ja nop or sub fisubrl hlt scas in pop in cmp dec loop fsubs cmpsb xchg jb xchg or dec push mov bound jl rcr test jnp (bad) inc aad daa int3 outsb adcl movsl xchg and test and or jp mov stos test das jo (bad) scas shrl mov mov jo push adc add (bad) sub rcrl das leave div cmpsb xchg inc push xor adc add xchg inc fwait mov aad jl sub gs hlt sbb push mov mov inc pop or jmp fwait js bound jno test ds stc push daa xlat pop sub mov inc mov aam and push arpl out les scas pop mov and lret mov test pop dec test lock jge aad mov and mov cltd jge push add xorb inc es rcr outsl callw pop mov mov cwtl sub bound test popf loopne mov lds stos (bad) add push fistpll pop insb pinsrw push ja into sbb mov pop repnz loop adc inc out jle jnp or imull outsb dec lods xlat adc addr16 call xor std pop mov or dec mov lret adc add xor pop xchg cltd mov (bad) loope add rcrb inc test fs mov xchg sub pop repnz rolb mov mov mov and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 iret sub mov shrl fimull fildl inc pop xor in das or fs pop push test loop pop mov fistp xchg mov mov sbb inc adc sbb dec roll loopne bswap or lret adc pop cwtl or and xor sub stos mov div add subb cmc mov cli adc sti cmpsl jle test imul aas jle lret xchg mov mov mov outsl iret cwtl pop mov inc or cmc rclb push push icebp jl push fnstsw mov lea into jmp lock xchg ljmp jae mov pop and mov mov pop mov mov mov dec jmp stc repz fsubs out clc cltd pusha cmp mov lret mov xchg pop or in call test (bad) call les mov pop pop in add mov test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp cmp mov and mov fcoms add adc mov lea mov xchg stos (bad) mov out lret loop jmp mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret cmp xchg fsts sbb mov mov mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp cmp jb mov test add out xchg push mov mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret cmp xchg (bad) jb xor dec stos xchg andl lret in push leave pop push out xor xchg dec and jp (bad) aaa icebp imul popa out pop popf stos icebp lahf js or cltd ss sub xchg mov mov sub mov aas fmull jne dec add int3 out lock mov jb ret inc sahf cmp stos pop xchg pop loope jge inc push jne aas inc sub fwait das cmp or scas mov popa push test enter mov mov push dec jne inc xchg adc lea lret addr16 pop dec inc aas adc pushl mov call movl mov pop pop ret andl mov andl movl movl ret cmp xor mov mov push inc mov fistpll sti and add add inc add pushf lods adc add int3 int3 (bad) push dec ja fnsave and jmp mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret and fwait jle jb ja push mov add or dec add mov (bad) decl add js mov mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret cmp mov and inc test sub xor adc mov xchg mov xor and icebp adc aas push dec xchg and (bad) lret add mov sbb outsl pop or add rcll outsb push push push or push arpl inc in xchg aaa lret xor push mov inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret cmp dec dec dec add and (bad) test loope dec sub dec cmpsb popf pusha or stos jno cmp bound popa cltd data16 mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret cmp xchg or (bad) out repz pop popa mov stos pop sbb out das cmpsl sti sub pop xor leave push sbb push mov call xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret and jmp add mov jno sahf add xorl sti imul mov mov mov mov xchg mov fcomps xor sub sbb xor in lcall or (bad) cmp ret jmp mov pop lods leave and sub add and cltd lcall adc mov push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret cmp xchg xchg add test sub (bad) out sahf cmp inc or popa lcall dec and in push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret cmp xchg lcall sbb out dec movsb leave stos lds push push fwait cli in xorl xor push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret cmp aas rcl xchg cmpsb pop dec sbb jle nop or loopne pcmpeqd je sbb add xor push mov cmpsb fstps mov fimul ljmp in aas aas rcll pop repz in adc xchg or inc cld push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret and mov xor push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret cmp out loopne pop movl mov pop repz (bad) dec int cwtl iret loop icebp fcom sub scas daa jmp xchg inc lret add popf cmpsb je jmp xchg jns sahf mov in push mov push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret cmp xchg test mov sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret cmp hlt sbb data16 in push xchg add in je xchg xor out cwtl push sbb mov push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp cmp hlt stos add data16 in push lcall mov sbb add jns addr16 imul ds xor sti mov pcmpeqb xor outsb dec lahf cmpsb std adc sbb sbb push jmp shrb jns sar ret in or rcl fisttp rol out (bad) sti stc decl stos sub mov data16 jb rcrl les push sub jb mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret cmp hlt push add data16 in push scas leave and (bad) sbb shrl popa dec xchg lret out xchg and jb shrl or mov sub jge mov pushl xchg iret inc mov popa push jnp pop sbb add stc push fnstcw mov jo daa arpl mov lret sahf addr16 test daa iret sti sbbb sub sahf das js cltd ror sbb arpl push jnp add inc loop cld push mov call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 cmp lahf cmp sbb outsl xchg mov daa repnz lods inc add aam shl mov and pop popa ffree push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop out icebp (bad) cmc mov push xor sti ds mov jbe push jmp lret ss cli enter inc int scas mov outsb in sub sub dec into fsub lahf pop add test stos add mov fdivr or push clc fcomps mull scas xchg add mov int jl out and pop test mov (bad) repnz or fmull jae in mov je xchg addr16 jne ds sbb mov fisttp mov test adc cmp adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc add jns jge add mov mov sub (bad) out repz jp jmp daa loopne push loope and movsl rcrb inc sbb insl cmp or dec mov mov sub es pop sub jb mov adc js cld outsb fnsave (bad) xor adc lods imul adc je xor stc inc fldt pop loope cmp outsb inc lea and cmc stos add mov jne aam icebp in mov sbb in mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret cmp aad xchg push ljmp sbb or cmp xor std aaa and test test dec add dec sahf jmp pop (bad) push sbb adc sbb (bad) fndisi(8087 out leave cli rcll ss add in dec mov stos cmp popf ja xor lods dec es jo adc mov adc scas mov push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret cmp xchg jae dec test stos add add xchg rolb xor frstor sbb stos lock stos test add enter aad lock sub imul and push test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret (bad) pop sbb mov mov (bad) repnz insb pop or in (bad) decl or (bad) (bad) call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret cmp xor test mov and sahf das clc dec aas sub cmp add movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret mov cmpsl sub (bad) jno shr sahf pop dec fisubl mov mov xchg stos aad aam icebp xchg push adc xor cmp call pop mov ret push mov cmpb jne call call push call pop mov pop ret mov jg out mov pop push mov push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp cmp xchg jb outsb addb enter (bad) jae xor pop popf or jns arpl das push fsts test sub xchg or faddl imul fdivrl cli pop test cmpb insl inc lahf mov and ljmp push and sbb mov scas es mov std push mov push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret and push pop dec (bad) lock jg add dec lahf push leave (bad) imul ss out in sub mov mov push rorl or je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call sub fdivrl add cmp stc xor repnz rorb pop sahf mov enter addl push mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret cmp lret aaa fs hlt add loope je pop loopne repz xchg pop mov sub lods mov mov mov or insl sarl lahf fbstp sbb xchg fs enter dec ja sahf test dec mov leave cmp jle xlat sbb xor add add xchg xchg aam mov (bad) adc add mov mov ljmp ja xchg outsb movsl cmpsl inc sbbl inc (bad) and int mov and pop inc inc push jmp enter out clc mov loopne test dec aam pop push add nop xor sbb addr16 add mov sub (bad) jb aam dec stos inc test adc lea jno sahf dec sub cmp jae (bad) aad enter in sti cld repnz aad imul push insl sbb push sub (bad) jnp xchg inc sub imul insb rcr pop mov or adc jge and mov rdtsc mov mov test ret xor dec and (bad) lret jecxz outsl add sbb das pmuludq ret dec sub and popa xchg inc arpl push in inc push push or pop sbb mov movsl adc test lret pop or xor (bad) sbbl xchg xchg ljmp popa test push sub std jns jb xchg push aad arpl lahf cmp test and test dec hlt stos jmp lods mov cmp (bad) insl ljmp clc into mov inc xor (bad) das stos jmp or or icebp mov je test loope inc mov fidiv les lods jp fistpll divb dec pop mov imul (bad) cwtl out jbe cmp push pop xchg push mov inc lret jle inc int fadd sub dec (bad) std inc adc fist cmp push int3 push adcb xchg (bad) dec loopne ret pop call aad dec pop inc shlb stos jno lcall jmp mov xor push jns enter adcl sub (bad) jnp push push in (bad) push sub stos add jns (bad) divl lcall push mov out cmpsb or add imull jno push cmp pop clc aas push jnp xchg arpl xor out into push xchg pop inc jg sbb sbb push inc fistp inc cmpsl jno xchg ret mov in cmp (bad) sbb push add in cli ds daa je dec in add push mov fs (bad) push movsl inc xchg fucomi jmp sar test imul sub xlat lret mov test loopne lock test and enter push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 cmp lahf aaa jl dec mov push mov dec jnp (bad) mov lods lret mov das xchg sub sbb adc fwait test decl or cmp jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 (bad) cmp dec jbe xchg inc arpl adc push adc fcoms xchg sub add leave or mov or jg ds mov iret fiaddl xchg push adc push mov iret and popf scas arpl imull lcall repz js cltd aam jg inc cmpsl adc jp dec fwait and add in (bad) ds sub aam jae loope adc mov sub bound and into lret xorb hlt imul mov movsb loopne mov fistp std hlt pop loope xor adc and je adc je cli mov pop cmp leave les pop popw mov sub inc jns loope pop pop sub inc test idivb jns mov and sub repnz loopne sub mov sub inc sarb insl aas inc lea fidiv sub mov call in pushl mov call pop ret (bad) cmp dec jbe sub out call mov or enter fidivr jns mov push push andb pop repz add inc mov ja cmp sub pop jge aaa fcoml outsb loopne ss pop insb adc cmp pop xlat daa inc lret incl xor and and lcall sub rclb push push call add ret (bad) cmp xchg jl loopne ss sub push dec fsubrl jbe mov aas fisubrl call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret (bad) cmp dec jbe adc pop (bad) or inc ljmp add mov mov mov in mov mov setno mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp (bad) cmp dec jbe xchg movsl pusha jb adc push adc fadds push fs (bad) int mov clc addr16 jmp push pop mov xor lods fimul outsl popf xchg stc lcall repz lea insb xor or (bad) push dec mov sub mov cmc mov mov dec out imul bnd popa cmp push xlat pushf adc cld jbe shlb ss repnz div mov hlt xor fwait push lahf ss ret pop in iret mov cmp repz sub push xchg mov push mov je lock cmc inc fistpll lock xor fist mov push outsl or scas (bad) mov sub ss jne cmp cmpsb mov xlat or cmp sbb add popa sub cmp mov cmp data16 outsb pop mov push sbb xchg pop sbb jp in mov and sbbl outsl rcl mov std push pop out lea mov or mov sbb jbe and insl jbe mov pushf dec sbb mov inc sub mov inc nop mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp (bad) cmp dec jbe or pop (bad) jo scas in insl dec in lea dec mov mov adc les (bad) mov mov ret inc shrl add push enter jmp in nop outsb in mov push pushl inc outsl out adc stc adc lret push arpl bnd and (bad) test call in cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret iret jae lds mov jno fsubrs call push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret (bad) cmp dec jbe std jbe stc sub add sub mov sbb jecxz cmp fnstsw int3 popa cs stos jo fwait out pcmpeqw repz popf scas or out mov pop push lret je cmpl cmp mov cs inc fnstsw hlt mov mov add mov sub jecxz out cltd dec insb stc sahf add in push jle sahf jno push mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret (bad) cmp dec jbe stc and xor cld dec (bad) push pop in xchg sub xchg cs and daa out and fidivrl lods dec jbe mov push mov mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret (bad) cmp dec jbe stc and xor sub jns mov push and add pop pop mov loopne mov es dec xchg cld xor notb push mov call in push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret (bad) cmp dec jbe pushl inc mov stos fdivrp pop jg gs popa cmp and sbb mov jecxz popf add outsb push or inc je fisubl fmul inc mov adc jl inc loopne cwtl leave or pop inc jo test mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc jle nop leave cmpsl stos xchg or and es jno sbbl cmc pop cmc add push ret push mov xor imul repnz scas cltd das pop lcall ret sbb mov xor sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret (bad) pop or lea test mov inc cs dec xchg or mov mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret lret jmp cmpl xor push (bad) mov pop jae mov sahf push and mov cmpl je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret jnp xchg leave mov xchg jp sbb xlat imul push mov adc addr16 sub push mov stos int3 or or push cmc xchg xchg insb test jecxz dec or mov jge inc fcoml aam sub outsl mov add push insl adc xchg push fwait jnp sbb pop sarl push ret mov repnz lds data16 jecxz cmp inc xchg xor xchg fsts mov sbbl aam cmp dec ljmp mov (bad) fld enter jbe pop into (bad) leave loopne ret (bad) ss mov rcrb push or mov data16 (bad) sbb xchg push cs mov cli lret cmc push cld (bad) (bad) fwait mov lea mov adc or mov pop or pop mov xchg xlat xor pop bnd mov stos or lret pop adc rorb and shrl (bad) sarl adc icebp in out cmp (bad) sbb scas inc push pop imul mov add shll into insb xor popf adc pop mov pushf cmc mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret (bad) cmp dec jbe pushl inc mov jge insb shlb int3 lods pop in sarl popf sub xchg add mov mov fs aaa out xor pop cmp neg movsl sbb lods or aam decb jno mov lea dec call mov xlat test aad xor sub mov outsb jg lds pushf stos or push lea jg sub into lods scas (bad) insl jmp cli ret push (bad) call in push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret and aas icebp (bad) enter jb dec jo sbb inc repz mov push push mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret iret repz mov mov jno dec push (bad) fimul adc fisub or enter xchg push test mov and ja pop xchg imul ret sbb call in mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret (bad) cmp dec jbe std jbe stc sub aaa imull dec fwait sbb lahf sbb cmp pop jl mov adc out fwait push out fs enter je adc xor cmp ret aam fcompl js mov arpl rcrl insb push dec xor jg mov xlat pushf repz sti mov cmp xlat arpl jae jbe loope in push adc out push inc rcrl or mov push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret (bad) cmp dec jbe std jae stc cwtl test mov xchg enter cltd lret pushl ss inc push and mov mov xchg mov movntq in jecxz xchg sbb bound in lret xchg mov pushf in rol xchg mov jecxz je inc call (bad) sbbl cmpsl lock ja jge adc mov add pop mov xor repz test inc scas cmp sub sub test cmp fisubrl ja lcall sbb mov dec cmpsb cmpsb inc icebp outsl jne in (bad) cmpsb fcmovb jle mov or loopne inc and es adc fnstenv loop sub in and mov aad add xchg addl add adc je into jmp out adc jns in mov push mov sbb lds mov (bad) mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret (bad) cmp dec jbe add (bad) ja sub outsb mov inc insb mov fidivr fnsave cmpsb leave mov mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret (bad) cmp dec jbe dec push and cvttps2pi (bad) out (bad) jmp mov dec and in insb ss inc mov stc adc rclb repnz stc cmp mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret (bad) cmp dec jbe inc fs cvttps2pi and out addr16 test xchg je xchg xor nop mov lods push mov sub psubw xchg imul adc jp mov je mov mov outsb push lret mov xchg and xor pop push pusha mov cmp iret cli mov test and xor push lock and and jbe inc dec adc mov inc mov scas outsb xchg aam imul inc pop dec add push mov sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret (bad) cmp dec jbe std mov scas in xor dec pop pop lahf dec gs aas xchg out mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret (bad) cmp dec jbe icebp and dec add ds insl dec cs mov (bad) pusha daa inc ds ss cmc in sub sbb aas sbb popf and jb pop pop sbb xor add stc pop pushf lock in or les ret (bad) mov mov scas mov push lahf fwait jnp test test cmp cld fsubrl dec jp ds pop fs ficoml jle xchg mov inc dec pop add jp (bad) add add fisub mov push jmp scas push mov insb jae cmpsl pop lea lock shlb jbe pop (bad) jge push xor fs out sub sub (bad) mov mov clc inc fnop cmpsl int lock pop pusha test add iret test adc iret test adc iret test adc iret test adc iret test mov mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret (bad) cmp dec jbe xchg cmp scas (bad) rolb fnsave lret divl sub mov sbb jle cli xchg and dec shrl hlt pushf dec jmp push out test insl jmp xor cli scas (bad) fisub sub mov popf out in test mov mov sub mov push mov sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret (bad) cmp dec jbe icebp and rorl mov rolb dec cmpsl inc push je and hlt testl push data16 int3 les adc and test xchg imul xor inc push adc or stos sbb cmc inc dec clc ss aam repz das rclb or mov lcall and outsb in call icebp mov mov movzbl push call mov movb mov mov pushl pushl call pop ret (bad) cmp sarl pop and add mov ret sub push push adc mov xor xor add clc jno pop sbb jmp xor outsl in fsubrl nop cld push adc lret sub insl sub mov push mov mov std lcall mov aad jns xor fiadd jnp dec out adc jo outsl or push pop add fsubr in mov add mov les repz inc add inc imul loopne mov xor daa jb ret adc cs fmul jbe std sbb ret fstpl ljmp mov lods pop jbe or test add or outsl das mov lret jne scas push cmp and pushf add int3 lods (bad) addl push test mov push jle adc pop repz jns add add push push push push push call int3 lret sar aaa sub jo dec xchg fstpl add sti mov inc sub (bad) mov push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret (bad) cmp dec jbe xchg inc xor and mov push jno pusha mov and or stos mov and into mov arpl cwtl xchg loope jle mov mov mov cmp neg mov movsl out or pop in add lods or fisttpll sti add aad jno test stos pop mov fnstsw push mov or mov lcall cwtl xlat insl movsb arpl adc xor add ret and das jnp inc mov loop cmc dec in sarl jp test push push pop mov outsl xchg out (bad) mov into cltd out stc sub cmpsb dec int pop je lock int add xchg mov leave int3 outsb sbb adc das mov test push js fcomps pop push inc (bad) iret popf or xchg adc pop dec lret in insb (bad) pop subb rcll incl pop xchg ljmp adc into mov mov rcl pop aaa inc stc aam mov sahf pop adc mov scas out push and js adc inc mov pop loopne movsb mov rorl cmp scas jno push cmp mov enter pop xchg mov aad ret mov jo cmpsl pushf xchg daa out outsl inc xchg xchg pop xorb push les pop popf insl sbb jmp popf mov and std hlt xchg lods pop mov out inc mov icebp bswap data16 mov and fidiv gs jmp mov test inc push shlb xchg outsb pop jno mov aam xchg or fsts (bad) mov inc mov push xchg xchg mov addl add js scas jmp rorl fnstenv add xchg add push into leave mov dec (bad) call add pusha push mov mov xchg lcall dec mov aad jo add into (bad) jb,pn incb mov pop lret fisub outsb push roll mov (bad) in insb mov xchg pop fisubrl bnd mov fmul jmp insb outsb mov in jle jns dec sub sbb into sub or (bad) iret icebp sub add stos sub into push mov (bad) fmul (bad) inc mov lea cmp adc mov movsl xor mov stos cltd lahf push jge or cli lcall mov mov loope push leave and xlat cli pop loopne ljmp test pusha xchg push xor mull xchg pop pop adc fisubl mov add jb mov cltd hlt xchg insb mov rcrl in mov jge scas popf lcall or xorl outsl jmp push sub icebp repz jmp inc in sub add jecxz out jge xor xchg push (bad) and mov xchg add pop mov fstps jnp cmpsl or enter inc dec verr cld or pushf cmp (bad) out push fcomps fs or and fadds cmp outsl push int sti (bad) je movb or lahf into pop rclb test sbb sub in rorb fstps mov aas daa pop xor addr16 jmp insb pop sahf mov xchg aad pusha cmp imul aad jle pop insb bndstx (bad) ss addl push mov push inc push mov dec insl call jmp mov xor subb sbb cmp mov adc aam cmp inc lahf jns std mov std or push aam repnz xor mov lret insb push ja or push inc ret jmp repnz jmp std pop (bad) push rorb mov push push insl lret inc mov mov pop inc dec cmp call enter dec mov mov rorl dec or jns add (bad) cli (bad) call jne call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret (bad) cmp dec jbe std mov cmp adc cmp or sbb int mov mov sub dec sbb jp ficom xchg shrb jle pushf std adc nop push stos mov mov insl (bad) icebp (bad) cmp out test bnd out bound mov fisubl or jns xor push pop push mov mov ret call lods mov mov mov lret xor and mov movsb push push jnp cmp lock add xor pusha adc dec (bad) gs add in out movsl ror jae orl pop mov scas loope in xchg inc fiadd xor push adc (bad) or das test repz (bad) bnd or fstl popf or fisub icebp mov scas rep mov or scas mov sbb xor mov out fidivrl mov xchg sub imul lock jbe jno pop bound call inc dec js mov sbb ja mov pop lret jo (bad) xor mov lret sub loope xor imulb repnz scas leave add iret dec xor or add adc stos mov daa fstpt lahf cmpsb (bad) xchg pushf fistp and das fldln2 xor ljmp or lock mov sub push jg and out in ffreep push sub lahf xchg subl or inc jno mov xor adc lods out jge addr16 dec push setle lods (bad) ljmp adc or xlat mov stc add testb shrb mov aas and and mov mov pop and fs pop lods mov sbb xchg sbb repz xchg add loop inc dec cmp (bad) xchg (bad) inc scas inc pop push repnz setae in dec jb mov scas xchg ss bound jge scas pop stc (bad) aam imul push dec popf aad (bad) xor sbb or pop and mov int mov insb push adc cwtl sbb addr16 dec mov mov std sbb lea jne pop call mov and mov movsl and push fisttpll push jle xchg mov lret or imul ja aaa and mov pop and and and jg pop xchg adc add stos pop or xor xchg sbb test sbb sbbl pop aad adc std (bad) or pop cld mov and repnz (bad) push or js jno jle and hlt outsb inc movsb and test adc lret jge mov dec inc (bad) outsb push and adc mov sar cwtl dec ljmp lret or fistp iret cltd stc orl cwtl xlat jae nop (bad) test ljmp xchg and out ds pop cmp fdivl lcall dec out pop push pop fldenv lret outsl mov ljmp mov (bad) (bad) icebp scas loope mov pop sarl pop xchg (bad) stos imul data16 cmc mov cmp ficomp (bad) mov push andl sbb sub test push pop repz jae push das push pop xor outsl imulb dec pop inc daa lret inc dec rcl sub leave sub cmc loop mov and fisttpl sbb push movsl repz mov js fwait cmc es mov ret push mov bound xchg fidivrl enter popf je or jnp sub (bad) jne lock rorb cli xlat ret and in (bad) aaa xor ficoml cld ss bound test loop out dec loopne ret sbb mov aam sar loop clc sbbl sub pandn push cmpsb negl lods movsb (bad) ds das inc inc aaa pusha add ds out insb pop adc (bad) pop xor push inc fwait addl cmp es dec ret sbb sarb daa jno jb and test xchg and adc cmpsl pop insl jl bound loop push lcall push pop mov sub add add (bad) xor dec sbb (bad) mov mov mov adcl push mov or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret (bad) dec mov fist or adc outsl mov test aam movsb incb pop push mov push nop stos mov cmpsb inc mov push shrb xor ret incl in push sbb fildll and or mov scas mov (bad) xor add inc sub clc add cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret ret cmc fimull in adc push movb movsb popf in adc jo xchg loope sar addb push mov call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret (bad) cmp dec jbe icebp and xor and push push popl leave pop imul fsubp mov mov push push mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret (bad) cmp dec jbe icebp and dec add (bad) insb dec xor sub mov sub stc icebp xchg fsubrl arpl xlat fdivl test ror ret jmp inc xor call movsb or in ret call in addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret iret repz cmp mov jno dec push mov lahf push in sub xor outsb mov les mov and movhps imul jecxz xchg mov pop mov push mov push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret (bad) cmp dec jbe add mov inc push cmc push mov fadd mov push mov pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret (bad) cmp dec jbe loope ss int sub pop stos mov orl jne adc cmp in sub insb insb push jg addr16 addl jle out stos add arpl jecxz aas mov mov hlt jnp push lods in mov push jnp sub stos pop lods jnp (bad) jae call in mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret (bad) cmp dec jbe xchg xor dec cmp pop cmp cltd lret aaa cwtl les mov in repnz test mov addr16 out xchg and cmp xchg insb xor mov add xchg cmp (bad) std mov scas mov fstpt push adc push push scas subl pop fistl sahf cwtl mov and sub jnp inc cli adc add in loopne ret addr16 fstpl nop pop mov fwait push std sub jno outsb leave mov dec in lds outsb sbb jnp push cltd (bad) dec jb rolb rep and mov (bad) fstpl adc and icebp aam pop scas cli sub xchg adc nop insl mov cmpsl cmp insl mov sub popf push cmp push daa mov icebp shrb cmp scas adc ja (bad) pushl rorb xchg rolb add push add add pushw xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp (bad) cmp dec jbe xchg push pop dec sbb mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp (bad) cmp dec jbe mov sarl and cs push cmc push je mov push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret (bad) cmp dec jbe xchg cmpsl or movsl pop mov push test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret mov icebp fdivl daa xchg cmp (bad) fstp xor lahf scas sbb xchg mov inc mov ret push nop mov mov xor aaa lcall loopne call in push call mov push mov call pop mov call mov pop pop ret mov add xchg data16 (bad) sbb fsubrp jle add test jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret (bad) cmp dec jbe add sub outsb mov outsl dec mov ret cmpxchg push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret (bad) cmp dec jbe icebp and mov fs addl add xchg sarl call in mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret (bad) cmp dec jbe loopne sarl test shrb ret push dec lahf imul jecxz loop adc stc jl xor mov push test outsl test or mov push xchg test cs inc pop js cmp out mov adc push lcall pop fdivp mov push leave aad iret xor mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret (bad) cmp dec jbe mov mov mov fadd shll push sub push pop movsb in or sub push add test and fmuls js aam dec scas push mov adc call cmc pop dec in sbb xchg pop push in data16 push ja add or and shl xlat xchg xchg popa jno dec repz outsl and mov xchg test lret out fildll dec addr16 test (bad) mov cld xchg jle jp mov cmp inc ss jmp pop insl cmpsb inc pop sub lret push push jb inc inc ljmp and psubd push mov inc mov dec lret rcl mov sub xchg fcmovbe cs mov mull cmc sub dec lea scas sbb inc test mov adc enter mov xor ret xchg mov mov cltd pop paddsw mov mov in mov into rcll dec inc push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret (bad) cmp dec jbe xchg pop std out jg add imul sbb or cmp mov push bnd arpl mov cltd jecxz pop (bad) xchg imul fmul outsl sub cmpsb std cmp outsl gs stos dec outsl insl sti ss mov and aaa inc pop mov push sti add cmp sti mov jle cmp lods jno jge popaw push push data16 pop sbb inc ficom inc pop pop push jmp xor fcmovu mov (bad) bound enter aam js adc sbb adc cmpsb ds (bad) fwait or in cld xor shrb aas test ret andb dec push ja out call movsl int3 lds add js fisubl xchg cld sbb int3 sub sahf jecxz sysexit fist xor push std addl push cltd xchg xor cmc inc in pop and int xchg cmp dec jne push lds sbb rorb repnz mov pushf xchg mov dec out pop (bad) call shrb les in jle xchg add fdivs mov movb mov xchg push notl or push outsl pop movsl or sbb push inc adc jb mov dec into mov cmp or (bad) lahf and ja mov xchg popf cli cmp call nop dec rorl xor aaa insb nop clc ljmp iret jbe sti xchg call les pop vmovss cmp lea je stos movsl or ret sub sub sub cmpsb cltd adc aad mov loop leave pop arpl mov xchg inc xchg jns mov push mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 (bad) cmp dec jbe aaa xchg notl and repnz inc cs mov mov cmpsl and xchg sarb xchg pop jle mov lcall loope jns push mov adc mov mov cli popf mov test adc les jnp mov push add dec cmp or fstl mov roll int and pop mov push mov push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret (bad) cmp dec jbe sub out call mov or jmp xchg inc sbb xor mov repnz stos adc popf jecxz mov outsb fwait popf lds push scas adc repz in push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret (bad) cmp dec jbe dec test jp daa and push shr sbb push push call mov test jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret (bad) cmp dec jbe aaa xchg repz sub fistl pusha cmp push ja jb scas repz dec push ja jecxz sub jp (bad) ja js inc insl pushf das adc adc test xchg fs mov gs mov push mov pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret iret ljmp xchg arpl (bad) fidiv addl jecxz xor test or and cmp cmpsb ds dec aaa push jbe mul cli dec lahf fistp clc mov adc popf jl cmc cli mov gs mov icebp inc sbb inc push pop dec push fistp dec test test or add pop outsl stos mov mov adc lods mov jle xchg jmp jbe jnp sub mov jl jle and or call and push cli sub aad int xor xchg dec dec fmul dec add push decl ret push ljmp jnp inc xchg and mov fildll ds push cmpsb mov daa das or out sahf (bad) adc or jb out ja in sub cwtl mov jae fwait insb jb mov sbb push decb testl push loopne addr16 lret pop shr repz pop pop push ja incb loopne insl ss loop pop test push sbb jae push lcall pop xchg dec jl and andb js int imul and push insl jp loopne ret inc stos xchg mov jae cmpsb repnz sub fistpll inc ja sti push into fcomps xchg push lcall shlb sbb push in jmp xor stos movsb adc pop in lds push push nop push andl add jne fdivs cld scas mov cmp ficomp (bad) lahf add cltd push mov or pop jle rolb int jo push xchg adc jnp push push enter jno (bad) fildll mov push mov push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret (bad) cmp dec jbe xchg cmp inc jbe xchg into pop test daa inc lods inc or sub int3 jmp cltd adc mov pop int xchg xchg jns inc je sub add pop sub lds in and mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret (bad) cmp dec jbe cmp inc mov addb ja pop (bad) mov mov push mov push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret and cvtpi2ps ret popf jnp cmp mov xor bound (bad) sti (bad) pushl ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret (bad) cmp dec jbe xchg cmp stc mov rolb lret jno scas ret xchg mov sub cmpsl insl mov mov jmp xchg mov lahf mov adc sub jl dec push xor xchg mov test ret enter ror fstl or repnz sub xor cltd lock sub out jg jbe out js outsl mov and sbb sbb adcl loopne or sbb push (bad) aaa lods dec and ja cwtl loopne dec in out pusha cmpl jle addb shll mov sub xor shrb xor icebp mov pop jg lods pop pop mov daa mov lods push and jae add sbb or lret lods and mov xor shll xchg pop add inc inc sbb xor lods loop mov loop xor xchg lahf stos push roll lods xchg fcmovne adc sbb jne cmp ret adcl notl jp femms cmp aad xchg loopne stos loopne push xlat pop xlat push aas xchg xor mov nop mov idivb mov xor in push in nop loope leave inc cmp push es adcl add in pop sub ds rcrl jle xchg imul imul test rcrb daa inc lds shl xchg js dec inc push aad aad add fnsave sub in fidivr mov stos dec cltd or movl lods pop mov push mov mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret (bad) cmp dec jbe loope jecxz jnp clc ljmp cmpsb lods rcll or xor xchg xor xor repnz adc pop enter add cmpsl dec lahf fwait jge pop pushf xor mov insl sub stc sbb gs pop in dec pop dec inc sbb repz iret (bad) mov (bad) and cltd jno aaa fist je pop cmp (bad) xor mov out dec cld ds push pop mov jmp out xchg (bad) push je fsubrp mov sti cs mov push mov push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret (bad) cmp dec jbe aaa xchg notl and lret dec jo pop loop xor popf shll mov push mov push push push or push adcl sub (bad) mov stos adc or push jle mov popf cmp das repnz push jae jmp (bad) lret jne je mov push mov sbb mov jl imul in mov xlat insl sbb and (bad) xor fisttpll xchg pop into push mov adc cwtl jmp enter mov push call mov mov lea push push call mov pop pop add mov pop ret (bad) cmp dec jbe xchg popa std out jg add imul orl (bad) lcall mov stos xchg (bad) popf neg add sbb addr16 push ja add xor push mov insb inc ds inc bound dec in sbb push fwait jnp add out and scas (bad) sub rcrl test mov (bad) mov sub add (bad) aam pop jbe adc (bad) xor arpl (bad) jp adcb scas and and mov stos inc pop sub inc push icebp push inc dec add out out and stos adc sub dec repnz ja inc mov aam jmp cmpl fwait mov lret push sub pushf and sti (bad) (bad) or pop imul stos adc (bad) xchg push or sbb jae inc xor mov (bad) aam ret xor outsb lock fwait xchg shlb stos out xchg adc push xlat cmpsb push (bad) repnz and pop int outsl mov out mov lods out shl and into add mov pop xchg (bad) mov pop lret jbe,pn mov or sub adc pop mov arpl jae add and pop jl in adc mov jecxz cmc xchg loope pushf gs (bad) stos push mov adc stc push ret (bad) xchg bound mov mov faddp shrb sub mov dec xchg stos pop popa push push (bad) push std repnz pop and or addl jns push xchg xor xchg dec push bound adc rcll (bad) cld lcall sub icebp (bad) je lcall adc (bad) pop xchg mov mov push (bad) inc pop outsl fstpl loopne mov loope ret push adc test scas in push lea mov pause xor into ja faddl outsl adc push push and fidivr xor sub xchg popa test fdivrs insl ss lfs mov mov sub cmp mov push xor push jo insb pop dec fdivl outsb int mov mov jno mov jno or sub sbb ret mov aas jp xchg lcall lret pop or scas jae lretw jns fs xor leave dec mov cmpsl inc pop or insl mov imul (bad) clc daa pop data16 (bad) enter aaa fimull mov xchg repnz mov imul bound data16 aad bound lods stc bound (bad) mov push mov mov jnp sbb mov and std push sbb gs (bad) enter lea jg xor pop add les jle sahf lret cmp and add in mov mov dec add pop xchg insl into repz daa addr16 push mov push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 and inc and mov sbb fwait dec dec xchg rcll inc add stos mov sub ss dec sub mov ljmp jl add push jp addr16 xchg jge or push bound outsb push setl push cmp in repnz xchg aam mov aas insb insb pop out and xchg out add mov pop inc jl (bad) push aas bound sub mov sti call (bad) xchg xchg ss or bound jg fwait mov mov ud2 std scas arpl add (bad) cld mov mov xchg (bad) fnstsw leave popf sbb repz jae jmp clc enter jae test pop jmp or pop sbb lea (bad) lds and lahf mov xchg jne and jb or dec jg lock subb sbb out aas or loop add xchg xlat imul or mov push ret mov cs push lret nop pop shrb je sub mov xor fcoms mov xor push mov rorb mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret (bad) cmp dec jbe or pop (bad) push dec sub lods pop adcl stos les pop mov aas or cmp dec push push jg pop adc mov in push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret korw jb sbb rorb sub (bad) cmpsl push cmc fwait rcll xchg stos pop pop test cmp out adc push leave es test js sbb test into xchg mov cld mov jle out jp jns xor gs lods call push mov jbe xor ds or lds clc mov or into push insl mov xlat insl sbb les (bad) inc pop pop repnz sbb sbb test aad inc jmp sub in adc fld xor push es (bad) enter insl mov sbb sub movsb icebp push (bad) cwtl pop push mov jbe xchg jno pop xchg push push xor pushf add xchg stos jno mov inc (bad) sahf lret jno xor add xor dec jp xchg add scas enter aas aas out lahf pushf lds xor or divl fucomip ret or test cmp xchg cwtl cwtl das mov je mov mov sub outsl and in lcall push add inc jo jnp push mov lcall movsl call pop shl push aam pop jl inc loope push or fnop push pushf push fsubrl sbb (bad) lock out push in leave jp cs adc sub out jge add pop es add dec je pop push inc xchg adc aaa insb mov mov push xlat dec push push lahf fldl mov inc outsl orb dec add mov adc push inc sbb xlat jg dec push test fs xchg pop sbb cmp movsl xchg sar in jp mov push mov sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret (bad) cmp dec jbe xchg cmp inc jbe xchg into pop test daa inc lods inc or sub int3 jmp push mov push push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret (bad) cmp dec jbe aaa xchg fs cltd int3 mov xor inc cli cltd pop or cmp jnp jno test sbb imul push fs repnz in rclb test jmp (bad) scas repnz xchg push dec adc mov cmp je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 (bad) cmp sbb sahf (bad) xstore-rng cmpsl add scas dec movsl mov imul bound popa or test mov and subl or sbb iret dec cmp mov (bad) lret inc das loopne bound addb ja (bad) and fs xor xchg test jnp jecxz lret hlt in jbe ja addr16 test in push mov xor pop stos adc loop add mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret (bad) cmp dec jbe xchg inc std out jg add imul ljmp push pop mov pop outsb aad test mov and xchg xor or js pop fiaddl or jns fist sarl mov push mov dec jae inc sbb fs pop push cmp loop and rol jg pop outsb out cmp ficomp pushf jg inc and mov mov sbb fstl mov push ja mov pop rorl lds loop pop mov movsb jb enter dec ss push dec popf pop cs cmp cltd in sahf test pop sub cmc pop mov loope sarb push mov mov cmp je mov mov test jne call mov pop pop ret (bad) cmp dec jbe aaa xchg push cmp or repz xor mov pop mov mov xor pop dec ss mov or and (bad) incl dec or mov add movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret (bad) cmp dec jbe xchg xor mov insl mov dec test hlt mov push in cli (bad) and mov push jp fwait sub dec push pop (bad) jp pop jl mov push scas jb test ljmp das lret daa movlps jo and pop inc push rcll lret in stc loope aam (bad) icebp mov aad mov ja adc ja cld sar stos test int add out aam pop sbb int das into mov pushl int3 xchg pop int imul inc xchg adc mov clc and imul sub test sbb leave jno pusha and push mov xlat push mov leave test push cmpsl mov outsl sub loopne push das adc dec jecxz mov fidiv push push pop bnd mov pusha mov rcrl push jnp mov pushf pop inc icebp or fistp js cwtl out (bad) testl dec int out xor movsl cmp fcmovnu sub mov pop in jno fsubs mov mov das add mov push mov cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 (bad) cmp dec jbe xchg stc pop jb adc push adc add xchg test cmp callw xchg xor das jo cltd jle stos ja (bad) xchg insb cmp rorb popf fisttp repnz mov pop xchg and loopne cs sahf test pop and inc mov cmp push add divl (bad) dec push jle jbe (bad) in in loop outsb or cmc dec jo (bad) ss mov imul jne xor fldl jae add test xchg jb in push test int jge (bad) lea test fldl stc pop xchg xchg push push jno push lcall loopne adc rcl mov test mov lods jo adc sub add repz out sub insl pop inc imul imul lods repnz lock ficoml mov scas hlt test gs jmp shl mov ficoml fnstenv pop insl ljmp sub pop pop in mull mov repz inc or mov xchg sbb aas scas pop lret mov andb jle cmp negb cmpsb insl xor fild (bad) dec inc int3 cmp in sub sub fcoms out fsubrs faddp jmp push scas out adc adc icebp pop pusha pop jle ljmp pop bound rol daa (bad) mov dec xchg stos mov out mov mov ss add pop xor mov pop dec out jne push mov loopne leave add addr16 push (bad) and pop jmp fistl test lret push add in std or push xchg push push mov sbb fidivr mov sub push dec dec int3 cmc pusha jl nop push or cli or mov out test inc outsl ja repz xchg mov xchg outsb push rclb lods mul inc (bad) add push daa js int inc jne das aam xchg inc inc sbb iret push mov lcall imul arpl adc xor mov sahf cmp test je adc daa sbb dec rcll imulb decl jo add mov push (bad) mov (bad) or xchg mov push mov sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret (bad) cmp dec jbe xchg cmp inc jbe xchg into pop test daa inc lods inc or sub int3 jmp repnz int nop push aam adc loop adc in sbb call (bad) stos and popa mulb in (bad) lea loopne add cwtl mov test leave pop sahf push jne daa inc pop fs cmp sub dec push add das aad pop sarb int cmpsb fnsave (bad) push ja cmc sar cwtl jge lret jbe pop jmp (bad) (bad) lahf xchg xor xchg (bad) je into mov lcall addb inc les dec fmul inc insl outsb lods pop sbb icebp or xor add adc lcall pop inc das int int push out mov pop xchg imul mov mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret (bad) cmp dec jbe sub out call cmp gs pop xlat xchg jns sarb or xor mov ficomp fs (bad) xchg imul lret jmp dec repz enter call dec pop (bad) aad cs cmp in mov push mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret (bad) cmp dec jbe sub out call das lea pop pop xlat mov jb js adc xor arpl sbb cld inc mov or sub and lock icebp dec cmp fs xor mov push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret (bad) cmp dec jbe sub out call mov cmpsb lods daa mov jle jb js adc lret xchg mov gs loop loope ljmp test cmpsl push mov cli pop cmp add adc popf and mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret jmp (bad) adc jecxz jp ja stos push ja rcrl ljmp xchg mov fst sbb mov push aad add xor clc mov repz outsl data16 mov sti rcl cmpsb push sbb test sbbb cmp inc fs cmpl xchg dec and adc call shrb jne mov mov sahf fldcw and cmpsl fxch pop test pushf jnp xchg ds pop add out xchg call in cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret (bad) cmp dec jbe xchg xor dec ljmp (bad) xchg rorl (bad) fnstenv add pop adc add arpl push jg xchg jmp hlt in cmpsl sahf fcoml xchg mov jo repz mov xor mov push pop movsb add lret js fild test add pop fistl sub daa jl jnp (bad) mov push push insl mov mov imul pop in push je pop inc repz jle sub mov pop or mov out and iret or or mov mov inc in jge in cmpsb mov daa (bad) (bad) and sti add sub push (bad) mov dec shr mov mov jbe movsb fcoml push push jo ja,pt add cld sbbl call push cmp pop xchg test mov push aaa (bad) pushl pop mov lods daa jno or les mov in push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret (bad) cmp dec jbe xchg cmp and outsb iret sub rclb and lds stos push xor addr16 adc andl xchg lods dec pop mov mov repnz icebp sbb lods test sbb andl and imul mov jo add mov xchg push adc insb subl mov test lods add jno mov cmp xor mov adc popa and mov clc lock les jl sub leave pop repz repnz std mov cmc cli mov xchg outsb clc js lock cmp inc out inc lret rcrb jecxz insl ljmp cld lahf test out pushf lahf lret or and mov xor pop mov notl xor cld mov clc lods mov pop std xor fistl mov ret mov (bad) cwtl jp jmp inc fwait and bound addb pop insl loop jge pushf sti inc out mov push mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret (bad) cmp xchg jl xor dec mov xor push mov mov loope push insl pop aas sub jmp (bad) mov and add and ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret (bad) cmp dec jbe cmp movsl mov add inc xor (bad) mov push mov pushl mov call pushl mov call pushl mov call pushl mov call pop ret mov or mov adc mov dec mov (bad) inc fbstp add pop fistp sbb and jns je cmp incl jo je leave xchg mov xchg xchg loopne iret imul fs lret fdiv lods imul je lret jne sub stos jl (bad) lods nop adc scas jbe jp jae sbb mov sub inc pop xchg icebp sub mov cmp mov mov sub fdivrl or (bad) sub cmpsl inc out testl jbe in out mov fisubr insb pop fwait les (bad) jmp sub push mov pop xchg pushf stc imul adc imul push xchg imul dec mov jp push sub push push mov inc in pop xchg jne jp mov xlat and sbb mov pop icebp stc scas out stos or rorl notl pop shrb pop rcr out mov lret push sbb scas pop pop cmpsl lea mov mov fwait pop xchg and xchg addr16 stc negb and (bad) outsb xchg push ss test add or in push fcoms out fisub dec mov cld aam cmp adc inc or push pop push xor mov jo outsl cmp fs sbb cmp cmp cli aaa push loop stos movups pop lret scas stos lret stc int pop or cli lods push incl sbb sub inc sub mov daa push xchg or leave pop ret fadds out andl in adc jne lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret and xchg sbb jbe mov mov cmpsl mov mov xlat mov fnstsw inc in sbb andl mov xchg scas xor or outsl push aas mov mov mov dec sarb je pop cmpsb mov loopne call xchg cli ljmp ds imul fnop mov xchg add add inc bound sub scas scas mov push dec bound and inc shl in pop rol mov pop (bad) dec mov push test xor lds push rcr out mov dec dec das lock push adc cmp leave les and aaa push outsl divl das or cltd sub loopne cld sub iret jbe stc pop push je mov push mov push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret (bad) cmp dec jbe xchg cmp stc mov inc pop xchg mov out jae insb cmp in in repnz test mov addr16 out xchg and imul jae xchg xor or mov cld dec pop push lret lods test ret hlt (bad) imull add jb (bad) lret jne add and pop push sbb scas jbe loopne dec jecxz inc xchg jg mov mov inc xlat cli add push bound jns sbb aaa jmp jo push out addr16 scas inc lret pop into mov or das pop or mov outsb fisubrl xor mulb cmpsl leave pop cmc popf fldcw or jo sbb pop mov dec or in push and inc mov jmp sub adc or test xchg adc xor mov repz pusha outsb sahf or repz test bound inc stos mov and mov push mov mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret (bad) cmp dec jbe aaa xchg notl and cs fwait pusha popa inc xor mov ds pusha cmc jmp cmpsb mov xchg mov cmp insl rcll xor in (bad) scas lea pop push call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret jmp dec aaa sub stc daa cmove dec sub xchg xchg xchg sbb popf sub xor movsl mov xchg fisubr fwait push jmp add je fistpll out sbb pop repz jp jns mov jg dec fs sub insb or jo mov push mov push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret (bad) cmp dec jbe icebp cmp cmp loopne push outsl pop mov jno ljmp dec movsb push test mov push and add mov popa movl add pop bound (bad) cld outsl nop mov dec dec inc cmc cwtl lret daa and or fsubs fwait js sub int repnz mov xchg push sbb jnp andl (bad) jo std aas cli lret mov jae cmp jbe xor das les iret inc push nop imul or cmp xchg (bad) (bad) pop cli xor sbb mov dec and mov bound mov and jne mov push sbb inc jecxz push xchg mov test pop ret xchg mov and fwait add ss dec or pop xchg mov cmp jle lahf lret ja mov daa cli loop add mov push addl xor inc add out xchg dec test lahf flds in fadds rcl mov cmpsl jno lods (bad) push popf cmpsb push out sbb cltd (bad) pop mov subb mov mov push adc mov xchg sbb pop or xchg lea jmp pop mov push mov push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret (bad) cmp dec jnp aaa stos or or or call rolb mov xchg add mov mov (bad) push clc mov scas dec ja hlt repz push mov nop pushl mov sub lock imull fcomi push scas ja imul popf push lock mov adc (bad) in or loopne mov pushf popf aas ret loope xor cmp push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret (bad) cmp dec jnp mov data16 sbb ja lcall lods lret mov lcall sahf mov sub sub test lea ret in add loope xor or icebp mov (bad) repnz movsb sub and pop sahf dec dec in adc scas jo or cmp lcall mov data16 ret push push ss rclb cwtl push sti loopne repz mov shll enter scas call mov cmp ret jne push xor fcomp flds int dec out call in mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret (bad) cmp dec jbe aaa mov sub inc adc adc jbe dec jne sbb data16 fdivl and xchg call jecxz std mov sub and mov arpl neg cmp jmp shlb jmp cmpsl sub test call push dec (bad) imul jns or mov push mov sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret (bad) cmp dec jbe xchg dec std out jg add imul jne inc or mov fisttpll xchg mov es pop xchg mov sbb jecxz rorl imul cmp (bad) call mov leave loopne jg mov lds xor in icebp lods push jnp xchg ja add cmpsl pop aad hlt xchg mov xchg (bad) in test popf cmpl imul sti out aam pop sbb fiadd (bad) sbb lret pop jg mov add adc inc ret sub jge (bad) loopne out adc sub jns bound xlat inc sbb mov pop (bad) jle cli outsb je mov dec and adc mov jg cmp jne arpl sub cwtl sub add sarl es arpl sbb pop xchg ja push dec push icebp mov aad (bad) fistl ss test das mov sub adc daa pop shlb (bad) scas enter jmpw xor inc xor mov rorb inc pop pusha stc outsb outsl ror imul (bad) pop lret je push pushf jb lahf out add jbe fstl ficomp xor lock inc mov pusha sub ret xor inc sub fsubrs pop pop lods shrb pop push gs adc outsl or mov push (bad) aad pop dec cmp sbb out xor sub (bad) lods or push push das mov jg or dec push mov call in mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret (bad) cmp dec jbe sub out call lods and aaa in pop mov lret int3 (bad) sbb (bad) mov nop ficom ret sbb jbe add fwait adc or adc adc call in fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret (bad) cmp dec jbe imul sbb mov push mov push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret (bad) cmp dec jbe xchg xor out jg add imul fstl imul fdivrl mov xor bound push xorb imul arpl leave in sub in out mov movsl clc loop ret inc jns flds push adc aaa inc mov xchg or or sub popa jne mov adc cmp enter push (bad) xor sbb jle xor mov sub push (bad) (bad) xor adc je test aad repnz xchg fwait pop std push mov test iret inc and jle adc inc lock sbb out pop lods enter mov in loope push xchg sar mov loope and insb movsb pusha pop inc test mov pop mov push mov sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret and mov (bad) loopne (bad) test push sbb mov std inc in dec xor and in adc fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop mov mov dec (bad) push pop clc pop jl and test (bad) (bad) (bad) xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp mov fstp fldt movb ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp mov mov mov fcomp fcomp out test je fchs ret fstp fstp fld1 ret mov pop fiadd addr16 dec sbb sub ffreep out pusha mov aas ret pop pop sub in sub lahf mov xor fxch fstpt fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg mov lea movsl mov fcomp fcomp sub or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret sub insl in mov es jg repnz cmp je and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret (bad) cmp dec jbe pushl movl dec cs sbb incb pop ret and addr16 ss test jmp sti mov xchg (bad) sahf faddl std cmp pop cld mov jle outsl insl test jo je inc in insb jecxz (bad) push roll sti add dec cmp adc adc jnp in push cwtl push loopne jle imul (bad) (bad) jmp dec mov das dec arpl test xchg mov push (bad) cmp (bad) lea sub push mov push sbb out and push emms into push divb stc insl push inc fnop cld iret xor out test (bad) and inc mov and sahf cmpsb xor cmp hlt mov inc sub xor push int lods repnz pushl pop lods mov sbb dec popf cltd stc scas popa xchg mov sarb ljmp cmp mov xchg das stos gs mov ret mov push mov mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret (bad) cmp dec jbe xchg xor stc mov xchg cmpsl or xor add mov mov and test and pop das lods aaa bndstx mov mov ja test aaa mov adc ljmp orl in push hlt inc insb sarb lock sti push cmc mov pushf in daa jl jns push jbe push adc test dec or aas cli push insl (bad) in cwtl xlat insl jg ret test xchg fimul xchg dec fsubs popl ja adcb sbb push repz xor mov mov into cltd jge jp ret imul outsb fisubl test lock xchg addr16 dec cwtl sub hlt sbb mov and cmc sub push mov dec imul in push enter mov mov lret ficoml jge sbb pop xchg sub js mov sub pusha pop cmpsb rcrl mov adc mov jnp loop inc gs push pop mov jle in icebp xchg dec xchg sub mov fdiv jecxz dec jge cmpsl lds movsb xchg lea das icebp mov adc loope fbstp aaa in mov loopne lea imul das xchg mov fcmovne and xlat and dec cld cmp push adc sub add xchg mov dec in adc sub (bad) cmp bound cmc in inc orl pop imul jecxz jle mov cwtl gs adc shrb mov fstl mov test mov leave add mov ret test pushf push or int3 pusha add js lret fist mov push out xchg icebp lods jns dec sbb stc call out add test cs dec sub flds fisub fidivrl mov mov (bad) mov popa and sbbl mov push or or sahf out jb dec aam lds dec adcl cmp cmp xchg ret adc xor scas xlat pop push inc mov loope mov in jg out jbe lcall xor dec sar out mov mov xchg inc add jb mov mov jmp push dec lea popl jo sub sbb fld cltd fistpll cmp xchg fsubl out outsl cli inc mov add sbb jbe pop adc inc sahf popa pop xchg xchg and mov sbb das mov lret push in lcall test (bad) mov fistpl jo and cmc adc mov cld rcll sbb mov pop fsubs shlb sub cmp rcrb addl aaa in rolb xor enter into insl pop sahf cmp sub mov or outsl loop inc daa lea or (bad) or sub cmp ljmp inc out sbb repz lock push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret (bad) cmp dec jbe xchg xor stc mov xchg cmpsl sbb xor test adc out mov xchg mov loopne and mov shlb jle or (bad) add adc mov into pop ss sbb les insb sub adc cld ret sub jl lahf arpl xchg loop out dec or stos pop adc cmpsb and addr16 push cmp push repnz adc add adc sbbl inc xchg dec jnp cmp sahf xchg rolb movb jg repnz sub pop sub frstor mov in aas ret into cltd out mov daa into xor mov loope arpl jge rcrb mov test into jl sbb pop adc stc in mov or jl fstpt int repnz sbb decb (bad) dec sbb xor mov (bad) jb xchg out push inc sbb inc push ss jno cwtl fcomps enter xchg stos imul or ja or fbld dec outsl dec cs mov rorb xchg dec jnp pop jl pop cltd dec inc adc inc test push and insl fwait push xchg mov loope fildl outsl das sbb mov mov js insl adc push push and stos shr xchg adc cltd mov jns inc call lcall out xchg in cmp jne pop xlat fadd js fdivrs mov dec xchg dec push xchg ficomp stos or ss mov add addr16 cmp sub sub cltd pop (bad) daa sbb test (bad) mov mov (bad) ljmp movsb and add push adc inc mov testl pusha movsl or pop jp loope sub ret lret sub sbb faddl sti scas mov addr16 pop mov mov call in sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret (bad) cmp dec jbe xchg mov add push pop (bad) adc ss mov fisttpll pop mov mov je push ret mov inc insb jne xchg imul jge,pn or cmpsl (bad) lcall movsb push jp outsl insl sti xor lods popf scas std adc sbb add (bad) jecxz jne stos mov inc and adc sub call jp jne fcmovne mov xchg mov repz push pop add or push push aad (bad) repz mov std adc fstpl stc rep mov add pop mov dec pop sbb (bad) jge sbb lock jae repz in and mov mov pop xor xor nop fnop xor leave mov pop jle pop outsl sti sahf cmp in movsl jmp es lahf mov ret movsb mov jbe loop sub or sbb enter scas testb popf test inc mov mov cwtl and jno sub bswap inc fcmovnu xlat scas lods pop sbb push and inc dec bound push mov (bad) xor ret lret pop call cmpsb push mov dec xchg in pusha xor daa mov lret mov mov iret mov pop fmul jg insl clc enter ja lods loop fcmovnbe xchg xchg loope pop mov sbb ficom loopne push cmp addr16 mov pop in push (bad) in mov insb lahf add repnz mov sbb popa test or push std jns test dec cmpsl lock fs fldl and arpl cmpsl mov cmp stc lret ljmp pop xor pop pop adc mov je lods inc into push mov std dec (bad) adc lahf add sarb enter mov push sbb cmpsb test test stos inc xor add popf sub test mov je or xor jmp movsl mov sub adc scas mov jp jns ret int3 push mov cmp or mov dec cmp sbb mov sub push jo stc jg leave cltd ds push mov aam cmpb jl mov ds in sub dec shll mov std rcrl iret inc lret jl (bad) jnp pop notb fwait arpl test pop mov in sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 (bad) cmp dec jbe aaa jl and xor cs fwait pop dec jg lahf jo fidivr xchg sbb pop cmp mov jp pop mov or adc sahf aad repz xchg repnz imul push repnz mov jae dec enter addl push pop inc xlat sub outsb and pusha ljmp pop cwtl pop stc push and cmp fstl lock lock jo fs dec jle (bad) jbe insl imul fstpl pusha sbb fbld das dec adc mov add ret add cmp out sahf pop mov add mov push inc jno int xor pushf mov addr16 sbb jnp cmp pop clc stc das or test lahf or das mov push mov sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret (bad) cmp dec jbe aaa jl and xor cs fwait pop dec jg lahf jo sarb adc pop cmp mov jp pop mov or adc sahf aad repz xchg repnz imul push repnz mov jae dec enter addl push pop inc xlat sub outsb and pusha ljmp pop cwtl pop stc push and cmp fstl lock lock jo fs dec jle (bad) jbe insl ja add fst fstpl pusha sbb fbld cs dec push mov mov stos cwtl in add scas cmp rcl add cltd shll int3 leave (bad) xor out adc aam adc es jb sbb jnp inc fcmovbe dec mov std or and call in mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp (bad) cmp dec jbe xchg xor out jg add imul push push sti jno enter push icebp cli add stos cld hlt mov mov out std pop bound sar fs xchg inc insb jmp mov neg mov xchg cld mov mov clc in xor gs add mov mov subl mov aam jns push fstl xorb imul stos push testl mov lcall (bad) sub faddl inc aam mov (bad) jne adcb js pop add push cmp mov jo adc mov adc ljmp bound jno push jmp fisttpl fbld jge popa sbb es jge aam jae xlat hlt test jno insl insl scas push sub sti xchg hlt sub push or icebp daa jmp push add mov repnz (bad) pop add dec or inc and test dec shll (bad) xor add stos jl es sub dec pop pop sub jp or imul ret sbb xchg (bad) iret mov inc mov arpl or jle shrl outsb icebp push rorb jmp iret push pop push and or addr16 clc je outsl sub jg inc add inc gs xchg xchg push push in mov leave lods cmpb mov jnp test nop mov ss lea ljmp movsl sub pop jae test (bad) mov iret adc jg mov adc inc and push sub adc out dec xlat pop or mov mov dec ret mov mov mov push mov sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret (bad) cmp dec jbe stc and and xor cs fwait or inc sahf popa es mov adc mov ds ss sbb scas loope outsb outsb test xchg cmpsl fwait jmp xor inc aaa dec mov test mov loopne sarl mov repz push dec cltd push adc dec data16 aaa sub sbb adc cmp popa in adc dec mov pop movsb pusha pop push jmp mov pop nop ljmp into outsl push and rol add fldl xchg mov push mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret (bad) cmp dec jbe xchg test sbb add push pop (bad) adc lret aas (bad) lret mov fldl push pop test xor mov andl xchg or jg sbb scas leave sbb or cmp (bad) mov mov in lods call leave subl int3 mov add repz pop sbbl lods fimul mov mov std lods mov add insb dec scas mov add push rcr inc (bad) or mov (bad) add or test sub shll (bad) in ret mov sti sub pop in dec xor lret repz stc movsb lock fadd stc and add loopne movsb movsb or push pop xlat rep pop and pop dec sbb dec movsl lret jge in jne jmp push stos adc mov sbb pop (bad) mov mov xchg test lock pop mov lea pop mov xchg xchg ds (bad) fs lea sub dec aas xor (bad) push cmc (bad) adc out push and repz inc pop push mov push incb pop mov mov rolb push or lret jl or xor fstl mov iret jg xlat gs loopne push fcmovnu (bad) jno jmp inc push jmp daa fildl adc sbb rorl sub imul inc mov test xor lods clc mov and and call lods fnstcw sub cmp pop xchg add pop (bad) loope xchg rcrl sub push les test lds pop (bad) push sbb sbb lret cmc mov sub stos cmp adc mov jmp or in xlat pop (bad) pop int3 sub sbb outsl mov cmc jmp cmp push shr idiv jae inc xor dec and popa cmpsl jp dec mov lock xchg cmp xchg push mov rcr lock fcoml cmc fs ret add xchg out fcmovnb in fwait push adc cmp lock add and jg xchg jp and out les iret test xchg push imul add xor push hlt fsubrs fstpl outsb mov sub fs repz pop jl jns xchg sbbl add lods lds cmp popa shrb jno sbb inc movntps xorl sub mov or mov insb adc or jmp pushf das mov testb insl adc fsubp scas aas dec shll mov ss je xor stc xchg push cmc inc fsubrp pop iret insl sub nop adc int repz and push push inc pop xor push and test je lret pop push cld push cltd not jp adc add add mov xchg sbb xor inc and jb fsubp leave jbe aam test aaa fidivl dec xchg jae jo inc dec pusha push bound (bad) (bad) jmp lcall sar mov scas or mov push ficomp sti push mov addr16 test ja rolb push mov push mov sub mov sub sbb push ljmp sbb inc pop mov xor sub mov es fldt jp cld mov (bad) jno repz mov into fsubl jmp and dec int stos mov inc sti imul es push movsb aam xor stc xchg in jp jmp cli mov rolb pop test js sub icebp outsb cmp sar pop cmpsl adc inc xchg dec lret (bad) ljmp lds out mov pop das xchg pop dec in loop fstps cmp xchg dec sub (bad) sub add sbb push inc and dec (bad) sub arpl call rcr stos xor sarb (bad) mov mov lods mov in gs add inc imul xor rcll sbb adcl mov mov loop cltd dec adc mov stc inc xchg rorb mov jbe flds das mov jge add mov cmp ss push scas lret stc jne xor mov insl xor sub or fwait and push bound scas dec xchg mov (bad) (bad) arpl out ret push imul (bad) out mov icebp push jnp pop mov push adc sub mov and mov lret mov fnop add add andl ljmp aaa orl lahf mov add jno call cmpsb lock cmpsb jg arpl push shll mov mov push gs sbb mov test std jns sub xor pop and icebp sti push dec repnz int dec (bad) sarl stos ljmp push gs fcomp sub push aas sbb jge sahf nop xor cmp sbb cmc ret cltd mov js js xchg and mov push xor in hlt cmpsb and inc dec jmp mov xchg fadds or adc pop push icebp dec xchg imul adc sub ds pushf notl insb xchg fcoml xchg popf aaa test js pop add xchg xchg mov stc insb sbb fadds add mov ljmp (bad) out sub loope pop pop fwait repz xchg cmp mov in cmp mov mov ret (bad) xorl pop fldt daa hlt es loopne stos jb inc gs out andb push inc aam iret mov enter and push ds jo popf sub out loopne fldcw xor cmc cmp fwait xchg addr16 lea test or inc pop inc jmp sti call outsl fild inc sub std insl adc fbstp mov cmpsb rclb ss xchg bound test jbe inc xlat nop jne push leave testb enter jp adc xchg mov xchg sbb or mov in xchg sahf or ds lahf inc mov pop inc adc push mov pop mov mov in cmpsl xor jg test push scas rcpps je adc movsb ss sbbb mov scas cmpsb xchg outsl adc ss push insl add mov xchg pop pop ficomp jae mov dec es mulb imul pop pop mov test (bad) xor inc (bad) dec repz pop mov loopne xor icebp mov sbb arpl pop (bad) push cld (bad) fdivr push ja repnz push scas pop cmpsl mov arpl cmpsl mov out cmp and push enter rorb mov xor xlat or mov sub pusha mov (bad) dec fdivrs sbb and xlat and mov mov addr16 lock test pop lods sub push test movsb dec inc test lret sbb mov dec mov mov mov jmpw inc fnsetpm(287 lea push mov cvtps2pi lock mov icebp cmp adc pop inc dec lea xor push stos sbbb mov lahf sub mov add push mov cwtl enter and xchg xor jae ret pop adc xor add cmp fwait dec mov sub jns cmp nop push xchg loop dec mov out stc (bad) dec arpl jnp dec add push negl shll mov out dec adc fist xor ljmp sbb shrl int (bad) push popf xchg xchg dec frstor add or push cmc imul pushf jmp sbb pop dec out mov or dec sti cs outsb shll sub jecxz push lcall into add adc or rcr inc push pop fdivrl (bad) mov int mov push fsub xchg fimul subl xchg in sahf mov addr16 xor add repnz (bad) aas repnz xchg push or (bad) test mov ret push push in gs mov pop cltd int test loop aas mov jae mov pusha adc mov adcl push out add pushf push imul popa lret mov imul jmp push cli cmp popf push sub lock fstpt ret adc (bad) repnz jle in sub xchg jg outsl cld mov (bad) sbb pop mov cs out aaa cmpsb xchg jmp ret pop sbb insl cmpsb adc cmp orb loop and fidivrl sub fdivrs sbb js mov jbe dec and add repz int3 pop rcll (bad) mov adc adc add mov roll mov call pop adc xlat loop adc inc inc imul pop dec test fs inc push jp ret mov dec les push dec mov add or xor push mov add mov mov pop fs mov hlt push add sub push and (bad) ret arpl mov add xchg lahf dec in adc jge pop test push aam adc gs shrb xchg or sub mov rcll popf fcom lret mov (bad) dec pop push outsl add in add push and push xchg push movsl mov mov mov push sbb adc xlat mov js iret cmp vmovdqu stc jecxz es push dec dec xor fcomps mov push lret outsb loopne jne lret lcall int adc into mov cltd int3 or fiaddl jns cmpsl cmp push sbb out and int3 sti movsl scas into add jmp in out imul cmp push fnstcw dec cmpsb mov sbb adc jae inc inc ficom popa xor sarb xor into xor movsb add dec je jns or cld call and daa mov push sbb outsl pop scas dec fistpl scas inc jne stc incl nop jecxz lret add je sbb add sub bsr loopne mov pop ret mov pop xchg or cli loope push ljmp jmp arpl fsub (bad) out push adc pop imul inc std fs inc fcmovnu pop shrb dec imul jp fistl aaa sbb or jge call bound add push push pusha movsb inc mov jae mov xchg cmp leave out mov call mov pop (bad) sahf mov mov cmpl push sbb in cmpsb repz inc lds dec in repz sbb scas addl add fs xor and adc dec jae jl inc cld sti lods aas mov (bad) je cmp inc shll in adcb push xchg xchg out fs mov adc lcall adc xchg in in icebp nop sahf call cld inc jmp push jns push mov sub cmpsb insb jno aad sub rolb nop movsb sub ret leave sbb or aaa sti pop jmp push cmp jle mov movsl and mov adc push out movsb inc xor jmp pushf imul jno (bad) sbb mov adc jmp cli add pop mov dec xor mov lea add pop (bad) (bad) call ds jp ja xchg add jmp aam sub std or in pop mov mov stc jne mov lods jbe xor pop movsl int3 pop xchg stos lahf dec sbb data16 icebp cmp ret mov push enter arpl xor cmp popf cmpl data16 test cmp mov pop orb cli inc mov fs (bad) fdecstp sahf and mov test cmp mov loop jb adc inc fs imul cmpsb cmp sbb fisttpl xchg andl jg cs (bad) or (bad) cli in divl cli fwait out mov imul (bad) lods inc push nop sbb jle enter push adc int3 or xor enter scas stc mov aaa out adc insb loop je pop test sub lcall jle xchg lods or sub or or pop push cmc leave inc or sbb ficompl or push and push sub test push or inc mov cmpsb pop lahf in flds push imul icebp jle in enter lock mov inc and fs out insb gs ret outsl mov icebp push adc loop imull pop into test negl js insb shlb push xchg cmp jl push int aas inc inc cld or lret push cmp aad mov lds jecxz outsb idivl iret or xor in dec ljmp incb dec xchg movsb sbb sub in cmp push dec dec (bad) cmp pop std sti repnz jne (bad) pop push push test cmp dec cmp repnz sub enter not sti icebp xor adc mov test jne in cmp lcall test xchg cmp or jg mov push ds xor adc sub sbb inc mov outsl push sbb sbb (bad) je aam mov outsb push sub dec xor into pop mov out jl xlat repnz pop dec icebp push sarb js pop insb jb test push jmp mov xchg mov push dec sbb and fcompl fimul mov mov xchg adc cltd and mov std loope lods out mov es ja hlt sbb jae jle fdiv int3 inc lea add mov mov stos fidiv fnstcw into push cwtl sbb imul xchg sti jmp push mov inc push fisubr cwtl xchg popl ss xor mov inc flds inc cmp add xchg es push pushf pop xchg pop xchg aad imul loop (bad) lret xchg jb stc mov sbb xor cli ja into nop mov inc jo hlt cmp mov aaa push popf shl lds outsl pop cmp push pusha ss scas lds xchg mov scas gs outsl arpl sub push pop mov push cmp xor repnz jmp mov pop dec sbb js mov mov jg data16 add out clc add mov repz mov cmp inc jns dec imul shrl sub jg xchg inc aad jno imul dec pop in jne loop mov pop fnstsw mov sub mov sbb or rorb or insl mov enter or sub mov jne dec insl in dec xor xchg jmp loop xor ljmp aas cmp scas daa out add push nop std mov fldcw call orb mov ret lret jbe cmp mov pop ja in les pop je cli jns lds je push jl and adc pop cmp inc cmpsb rcr xchg setae (bad) jbe inc cmc pop shrb outsl (bad) mov testl lahf hlt or push add dec push or imul inc mov mov hlt mov push mov push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret (bad) cmp dec jbe aaa xchg jo adc test outsb mov outsl pop mov hlt mov push sbb js andl mov add inc xchg fnsave or xchg cmpsl xor sub test dec nop imul pop loopne push mov mov andl fstpl pushf jnp add sub mov push mov push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret (bad) cmp dec jbe mov sarl and cs push cmc push je mov push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret (bad) cmp dec jbe icebp cmp dec add push sbb insb adc xor sbb hlt add mov sbb sbb sti inc add jp sbb xor pop add xchg loop (bad) mov mov pop adc (bad) inc loope cmp mov adc pop or rcl call insb jno jmp mov negl sahf cmpsb aam xor mov push mov mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop iret jmp xchg adc daa mov enter mov ss sbb adc push ljmp adc inc fwait jne out xor and loop (bad) (bad) call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp cmp xchg test mov cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 cmp xchg divl and movq pop movsl add jb xor sahf add or fmul je jnp xchg in fisubr std jo adc and jmp pop mov in mov dec lret push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret cmp mov or cmp pushw les jp sarb mov jo int3 popa cs sub jecxz and ja das lock call mov pop in cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp pop or test mov cmp sub sbb jge and aas aad xchg push push sbb xor push mov push dec pop js and fmuls jle je xchg cld xor pop gs loope sub test add adc push popa cmc jb mov mov inc aad pop insb add and push fisubrl and aaa mov pop in test sub and push push push dec lock dec into pop insl movsl and in pop iret js pop mov add cmp out out idiv pop (bad) xor imul dec mov push js sbb cmpsb add popa sbb push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp daa jg mov adc jecxz push or push out or repnz xor mov push mov mov mov ljmp repz loopne adc fs dec and fmul dec clc es ret pop lret sbb rcll rclb cmp in add and in mov pop sub fildll lds adc (bad) sub aas cli inc pop add sub jmp fbld test mov enter jb or mov movsl inc pop sub inc out jge leave or jbe scas pop ja pop dec int je out into mov aam test repnz pop lahf jle shrb jno in insb insl cmc shlb jl push movsl test inc int les popf sub cwtl inc lahf pop sbb insb pop mov repz cltd cmp jae add pop movsb inc negb mov mov xchg xlat xor jle stos out fstps add mov jp or xlat arpl mov ss push and (bad) popf dec inc mov dec les clc lret movsb jle std mov lret ja push xor or (bad) pop mov fwait xor sub mov jmp inc nop cmp in push in adc push imul push in pop inc push jmp daa cltd mov pop gs cli aaa insb dec sbb xor arpl pop push andl int3 dec adc inc add jns xor sub mov dec xchg stos cmc notl add sub enter push sub pop cld jmp cs hlt frstor dec mov dec add and pop rcrl mov xor (bad) ljmp in mov (bad) (bad) or or jmp test xchg mov jo gs imul pusha push pop add dec ja and repz in dec out xor out lahf popa xchg push push loop lods push and mov push mov insb in inc xchg mov repnz (bad) pop push jecxz cmp leave rol adc push push jge mov cli xchg int daa fimull xlat shlb in lahf xchg movsb mov adc fldcw int ret movsb mov fildl outsl mov das xchg push insb shll div mov out adc adc xorl jae push and sub pop mov xchg mov in or iret push mov pop out mov mov push out sbb xchg fdiv (bad) adc rcll aam test and dec aas (bad) ffree mov or adc ficom xor imul aam cmpsb dec out cmp mov mov mov pusha add mov rcrb cmp lret out ljmp xchg out and dec inc shrb jbe lods mov cmp push addb dec int mov fwait ret sub inc leave adc call jno loopne jno xchg cld fptan push cwtl fisubr out add sub addr16 push pop movsl and jg (bad) cmp cmpsl push daa mov push and inc lcall add ficompl imul jne (bad) test and push ljmp ja in fidivl push jo fnsave jge jge pop jge (bad) jno dec hlt xor out sar dec jo pop mov pop test inc pop mov inc movl mov ljmp add ja mov pop dec lcall aaa insl cmp mov fstpt inc cmp or rol push or jo cwtl std int3 daa (bad) cli ss (bad) mov outsl or pop fsubs test pop lock or icebp pop add sahf cmp (bad) pop repz ljmp push in lods dec js pop lods fisub pop lret cmp sbb add cmp leave mov dec cltd data16 ss mov mull out mov push sbb pop imul and sub rcl pusha or (bad) daa mov ss lock adc leave jp xor cmp jb jmp repz adc add dec inc inc cmp add rolb add add jae jno sub (bad) xchg mov dec xchg pop gs cwtl mov test adc add mov clc push bound push cwtl pop int ds dec and dec push jle jbe inc fistpll (bad) pop adc scas and pop add sbb sub sub sub adc pop or add pop mov shr sub inc je or fldcw mov add (bad) inc cltd ja mov pop push shrb inc jecxz xchg dec outsb push or rorl aaa sbb insb jno inc adc inc aas hlt mov dec imul inc adc dec out jg lods dec jmp lods sub dec sub add testl pop pop xor push mov xor or insb or adc xor mov das or dec add pop or lock fdivs sub xchg call out xor lret pop xchg test pop dec pop sub and lock (bad) lret or div imul movb mov (bad) jnp test nop dec aad or in rcl outsb daa inc movsb jmp sbb xchg mov sbb mov push jne fnop lahf adc dec cmp call dec jp dec and cmp cld add fcoms xchg in push and or push stc inc ljmp mov mov add js clc into ljmp gs jg rcrl xchg inc repz adc mov cli or dec xor sbb fsubl cmp jb shrl roll movsb arpl arpl mov xor das leave add int mov mov mov pusha movsl mov dec jmp dec ss test mov dec hlt bound sahf rol dec test xor jbe xor scas or and jne cli lods scas test ds sbb mov in push fcmovnb xchg rorb cmp xorl aas push out xor dec leave push rcrb movsb (bad) pop and mov push pusha fwait add pop cmpsl push mov jmp mov mov not stos sahf insl ja mov jne dec adc int3 mov sbb jo jp mov pusha stos (bad) push ficompl cwtl pop add jp std xor aas fisttp call inc push (bad) pusha loopne push inc imul inc dec mov xor mov into jb sbb popf in loop lahf testb ds fcmovu ja ja cmp arpl inc aas lods mov retw push test cmp in sarb jp mov inc clc iret test xchg (bad) adc or xor push xor enter push pop pop imul adc push push jnp cmp xor pop sbb mov adc jecxz mov pop fadds pop mov cmc jmpw aam sub dec aam inc stos addb xchg and jmp sahf cmp cs mov stos stc adcl mov andb cmp xchg cli mov mov leave ss or clc int3 in outsl test fdivrl jecxz daa mov cmc std scas and into imul into lods mov loope and xchg dec push outsb pop hlt rcrl movsl pop nop popf or mov jae cs rcll (bad) cltd ljmp xchg arpl movl and aaa gs cld push sbb rcr ljmp xlat adcl movl fadds cmc test out ret (bad) sti mov push jne sarb (bad) clc mov fcoml xchg outsl jne push add imul mov enter lock hlt lock test ficomp popf pop sub mov mov mov cmp inc mov sub push sbb jmp mov pop jae mov xor mov sbb dec adc ficomp mov loope jecxz cmp sub add mov (bad) and mov bnd and insl pop add inc nop pop pop int3 pop xchg js adcb out xchg mov (bad) xor sti repnz xchg rclb jg adc fildl push pop je test or cmp (bad) lcallw jno adc xchg lods push push or push lea adc and arpl popa lods jmp push lea aas loop ret cmpsb sub (bad) aaa fiadd adc jnp cmp fistp mov lret movsl and cmp and lahf test mov adc xchg adc fmull pop dec push sub lea and movsl or clc movsb int3 leave aad std push inc push mov inc enter sarl mov (bad) insl sahf sub lods inc xchg outsb jg mov mov push loopne aam test push das lods push out test divl leave mov jbe xchg mov fwait pop dec test int dec xor mov in push call (bad) mov movsb inc js mov fistp dec or cltd mov stos call jae sbb pushf dec push fcompl add jae pushf inc mov or rcll fistpll ds push ss jge hlt cs cmpsl enterw cmp (bad) jmp in add js (bad) sub mov ds int out popa insl (bad) insl int jne push nop jle xchg pusha push mov inc bound xchg rcl rcrb leave ja andl mov jp in pop jmp out aaa pop data16 dec push arpl sub xchg jp xor add ficom dec adc jae push sbb push jnp pop fs jbe pushf mov into mov (bad) je es lods popf mov push cmpsl iret inc popf dec aaa xor les shr rolb push pop dec dec ficompl dec jno ss stc push mov add ror jo outsl add shrb movsb movsl mov push push imul mov pop cltd pushf add in jns faddl cmpsb les (bad) iret and jge lods sub mov cmpsl cmpsl sbb pop mov fistpll mov clc in jecxz xchg cli orl xchg stos mov stos lods addr16 pop push mov fs pop idivb js ror lcall jb movsl fisub mov testb jp sub push jmp sub aam cltd (bad) mov mov test push pop ds xor popa fbstp iret inc inc dec (bad) cmc jle pop cwtl sbb or jg fistpl dec popa add xchg btr sbb js push sub sbbl lods push xor and xchg aam ficoml xor adc iret cmpsl add mov sbb loopne pop adc add pop xor jae cmp pop int xor nop mov dec mov jbe arpl push adc imulb or insb popa jmp fldt mov push mov xchg or add cmovnp cmp ss push jmp pop mov sub popf mov mov add mov lahf leave push fwait test (bad) int sbb inc pop sbb jle inc mov mov out sub mov iret xor xchg sub cmpsl ss rclb xchg pop pop rcl sub sub mov (bad) sbb test insl shld stos and mov mov add out jno sbb lock fs cmpsl fwait xchg hlt push imul das and mov pop mov xor mov fisttp js (bad) into ret fwait mov adc lds adc and (bad) out push pop aad scas hlt rcr jbe,pn sub bound sbb out into pusha rorb mov inc sub sub imul movsb jmp mov cmp (bad) aam loope push or jb mov dec stos out push pop loope ljmp jo ret or je add jecxz cmp mov cmpsl xchg xor cmp ret (bad) jae pusha icebp dec nop lods enter sbb add scas outsb pop push mov mov imul xchg divl (bad) das push lcall pop dec mov lock inc adcb add xor adc fnsave pop xor pop test jb adc jl or sbb and cs in js aad jp mov mov sti xor ss mov cmp jb in lcall popa hlt popa mov adc (bad) (bad) int cmpsb roll dec sbb loopne test mulb pop repnz mov sbb aaa push (bad) or xlat sbbw loope push clflush jns fdivs sbb lds mov ret jmp aam push pop mov push or insb repnz mov test push in lock xchg cmp xor scas or lock dec jl jl inc dec ret addl xchg (bad) or clc sub out adc inc lea cmc pop push add fmul adc xor fs rorl imul rcll cmp ljmp aad js icebp sti mov sahf fwait mov mov xlat cmp mov ret adc mov jns jae cmpsl outsb test jge sub mov jmp push cmp jmp (bad) pop add lds loope mov jp cltd jmp das aam loopne mov mov shl pop cmp inc pop lret jmp xchg jp fidivrl pop pop inc pusha sbb scas fnop jecxz mov xor (bad) fsubrp jp outsb cmc xor out cs add scas cmp (bad) lret xor and stos jmp sbb add sbb xlat sub movsb stos jp mov add adc xor pop mov iret gs mov mov mov mov scas test mov sahf out mov aam imul clc xchg lcall adc jg sbb test xchg pop mov adc stc loope incl hlt jnp sti xlat inc nop jnp fstpt stc adc sub inc ret fstpt cmp cltd cmp and add push aad pop and xor pop xor out xchg push cmp rcl xor shrl dec sbb mov mov lahf xchg int3 mov sub gs test jecxz lret inc mov dec ljmp jae sbb dec inc test ds negl or mov sbb xchg data16 sub xchg add je in cwtl mov mov jmp sub jbe arpl sti xor test inc cmp jne push mov or daa push xchg fild sub jnp or stos push push xchg mov lods xchg lea xchg fcompl sbb scas aas (bad) dec inc sub fist fisub mov mov sub in popa repnz pop jp data16 es or xor movb mov mov xor aaa insb mov cmpsb (bad) pop add xchg nop lret cmpsl xchg rclb sbb lea add adc mov sub pop xchg or mov cmova into xorb rcrl leave adc inc out pushf and mov cmc pop test mov jae imul in pop int loopne je in mov call dec sub push clc roll mov popf sbb add mov sub rcll push pop das xchg dec (bad) (bad) imul inc adc in or int3 dec into add outsl cltd mov not sub aas pop xchg add bound mov jge fnstcw pmaxub lock pop add fcmovnb imul outsb ret jns call xchg and xchg jae jb fisub in sbb ret xchg pop lcall insb pop mov add sarl and xchg rcr and cli lcall out inc sbb jo jno cmp icebp sbb inc dec cmp loop inc decl mov dec imul adc xor std jl or nop xor out xchg (bad) aam adc nop xchg arpl ds push out pop mov adc inc pop test push ss test mov inc pusha add fild std jb cmp mov sbb push mov lret jmp pop mov xor xchg (bad) mov mov pop jg adc (bad) inc cli into bound pop and mov movsl pop and (bad) imul or outsb dec dec sub xchg fstl mov lock stos scas mulb add mov dec int3 imul aas stos movsb cmp rclb sub xor lds mov aam cltd (bad) ficom push scas fidiv fcom dec mov cmp cmp test push repnz mov repnz pop ret pop pop xchg jne test mov clc sub adc inc inc and gs inc inc and xor jle stos xchg clc pop cmpsb cmp insl or pop xor outsl fistpll bound popf repz inc shl rcr inc sub cmpsb ja xor inc iret adc cmpsl mov mov inc cmp ss pushf cli push dec mov fcoms (bad) push mov mov jns inc mov fs aam fdivrs nop shlb sub mov stc jl pusha adc cld cli fistp rcrb cltd xor and mov jno aas sarl mov and xchg mov pop or mov inc jl jmp inc add idiv imul sbb push js stc cli daa neg xchg xor mov dec imul cmp jl hlt (bad) adc or sbb (bad) dec push mov hlt adc inc cs sbb int add adc xchg je or push cmp or mov sub adc pusha xor xor (bad) push cmp es pop mov test pop (bad) sub sbb inc jmp popf jns outsl cmp and notl (bad) and aam loopne out sub mov mov push mov call lahf jno icebp add push addr16 or stos (bad) aaa lock js mov pop sbb (bad) xor (bad) sub (bad) and mov mov jae cmc pop mov (bad) mov sbbb pop adc cld (bad) ds pusha test jecxz mov sub ljmp xor repnz sti xor cltd or movsb pop sbb push enter fsubrs (bad) push mov aad outsb bound xchg dec sarl insb add dec jle insb adc nop (bad) fstps cltd pop mov or mov xchg xor enter jmp mov cmpsb (bad) mov pop aaa mov leave push aam outsl add daa xchg dec push imul lea jp inc fstpl mov adc cmp sbb lea mov in imul adc outsl mov das popf js dec enter movb add clc and scas lods mov dec pop repnz adc cmp dec clc jne ja cmp mov or sbb push (bad) (bad) xchg insb sbb test (bad) nop adc add repnz aas loopne mov ss xchg loope pusha outsb push jnp inc pushf cmp in mov or imul push mov scas sbb popa aas call inc call xor popf (bad) xor push xchg lods (bad) mov fs pop je cwtl mov pop fadd cld inc negb insb iret mov out sub (bad) fsubl dec mov pop stc ret (bad) (bad) xchg push int ss adc jne mov jno mov inc or and sub pop pop les xchg aas outsl ja sbb inc or roll cmc xchg mov movsl es xchg jae adc fildl xchg les repz out dec movsl jmp push and mulb into push fisub xchg (bad) mov jns frstor js add mov imul mov (bad) push je xchg and mov into sbb clc dec mov adc add aad loopne mov sahf loopne adc sbb (bad) scas lcall sbb mov mov (bad) or ljmp divb cmp mov mov add ret add pop into mov cld jns jae pop inc cmp mov fnstenv jle mov movsl sahf fcoml test int imull in pop call pop push push xchg dec enter out or cwtl arpl fldcw and mov push and inc bswap jl adc (bad) cmc push fildl rorb push mov icebp dec in fidivl popf xor dec sbb imul enter sar dec popa data16 loope jecxz sbb jle repnz jb enter mov xchg pop loop rcrb xchg inc pop or cmpsl push add mov pop (bad) push mov and pop mov sub rorl mov clc jp jno mov aaa int add jns cmp lds xchg cld fsubrs (bad) push cmp ret sbb mov outsl stos push xor mov mov push int3 out and daa pop pop fstpl push and js je sbb jle int add clc and dec xchg adc xor jp lfs jnp decl add jle or jp mov ss stos dec xorl js adc (bad) std (bad) xor stc pop mov mov xor test jo mov in out out movsl and jp imul push pushf ljmp push mov in int3 xchg mov ret pop test sub sbb and pop into mov dec shlb sbb std (bad) jns bound (bad) add xchg ror fsubrs adc sbb lods popa add mov dec sub call mov lret jmp jmp cli into lret or mov test xchg or cld sbb jne jle inc xor enter push (bad) test neg dec push jmp sbb enter ror rcrl xchg add and outsb lret leave je rcrb cmp jns loop mov (bad) pop pop gs sar test sti les or and ds ljmp or mov jg lret sbb lret add lods enter xchg cmp jno or lods xchg inc lock test mov inc pop scas ja sub (bad) lock shlb xchg out movsl addr16 ret and int3 aam aaa gs lcall xchg pop out cmp mov jne mov lahf add idiv mov jge js scas mov repz je test pop (bad) push out mov mov sti iret add clc pop jp in mov inc in cmp (bad) jno mov jne lea or loop mov inc xchg mov pushf or aaa push test xchg je push ficompl jno cmp mov pop out inc dec int3 mov jnp jg add popf je dec leave movsb sbb negl loop lret clc cmp or cmc sub adc pop cs loopne or mov rcrw mov cli cmpsl sahf fucom inc xlat outsb cmp rcrb sbb and arpl negb mov push jg xor add xchg outsb je xchg jle (bad) or icebp add and sbb inc xor mov xor cmp mov gs hlt movl (bad) add xor cmpsl lods enter sbb repnz pop outsb sbb (bad) pop bound xor jl int3 in push jl inc xchg test lods (bad) pop nop rorb xor out push movsbl inc push mov add loop sub sarb bound test cmp cmp adc mov mov xchg insb (bad) js push push sbb negl stc cmp and jl pop call pushf push push ja add sti push mov js xchg mov cmp inc pop mov jecxz (bad) in insl pop out xchg lods mov data16 cli (bad) jbe lods pusha push xchg das aam jge out xlat inc cmpsb mov xchg loop in mov push aam add adc adc inc xchg xor xor jle dec sbb data16 sbb lea jne jns mov mov aas in dec or lock cli scas std popa int mov pop movsl ds cmp jns cmc (bad) arpl or in into lcall mov out mov sub arpl test imul or loop cltd test and decl ficompl or mov push mov inc test xorl mov inc pop add in in pop push pop lods sub std mov aad (bad) sarb ds lcall jne ja inc xor pop out arpl and mov out add test push aas rcrb rcll lods mov test loopne or lds lea fisub stc pop inc in sub mov push fbld mov jg jbe lods sub cmp add cli jl addr16 insl mov pop ficomp push jb sbb add adc pop (bad) (bad) enter cmp mov not lea and xchg pop les pop (bad) mov xchg sbb mov cmp cltd scas xlat ss gs inc jo push sub xchg lret ret push pop dec sbb pop mov add dec xchg out sub mov ret and (bad) mov scas mov sbb dec out inc pop (bad) bndstx pusha mov jno test sarb mov xchg xchg popl stc add out adc scas sub loopne cmpsb push or inc fsubr (bad) movl or jle and addr16 movsb mov mov and pop xlat cmpsb cmc fsubr test out jle subb adc das jmp pop and js fistpl xchg gs fldenv add inc mov repnz lods loop sahf (bad) arpl js dec js mov sub jg gs mov push cmp arpl cwtl mov into bound in cs cmp out mov stc out stc pop pop out mov imul jbe arpl leave or mov and sbb xchg adc vmaskmovdqu mov shr xchg xlat or pop mov pop cmp xchg ljmp xlat stos and les ja xchg mov or push fisttp cmp sahf mov pop pop mov dec adc btc dec mov pop pop dec sub sub bound movsl add mov sbb jbe jnp in sbb adc outsl cmp popa push add lods adc sbb lcall inc mov inc dec jbe sub nop popa xor (bad) jmp rolb enter es cmp fyl2x mov pop xchg lea ret arpl loop dec and jbe cmp lahf jne sti rol bound cwtl inc jo divb repnz inc js test xor jns out icebp pushf hlt (bad) mov push lcall dec std xchg je xlat add sub shl jb les lock xchg push icebp arpl sub sub loopne adc outsl roll icebp das rolb fs mov mov or aaa cmp aas leave andl imul pop ljmp repnz mov insl int inc and mov nop pop aad mov sub cmc ljmp imul in in jae adc mov hlt fsubrs andl jnp lods lds pop gs (bad) jo adc subb orl mov add pop cmp test fdivp out push pop xchg in mov inc loop ja push aad mov dec push pop (bad) ds push jp mov mov js mov out sbb push mov les cmpsl mov lods mov dec (bad) sbb fidiv inc dec (bad) daa xchg daa xor add cmc das ror add (bad) icebp loope sbb jno xchg xchg (bad) cs addl add sbbl in pop das jge mov mov pop rcr add inc scas clc jmp test sbb adc addr16 fnsetpm(287 adc fldenv jo fs scas mov arpl addr16 icebp sub cmc adc stos cwtl aam fmuls je shrb or sti out add stos adc test dec leave insb sub scas or jecxz sbb mov xor jecxz test test jp mov cmpsl push imul andl mov push mov jecxz xchg xchg int3 imul cs idivl adc mov sub add push or popf xchg xor sub cmpsb ficoml jne ret fs sbb js cld cmp or push mov jp push mov jbe sub cmp cmp fimull dec gs scas xchg aam pusha aaa push aaa pop xchg flds fwait mov dec test js (bad) clc jo js clc xchg jne scas mov movsb inc xchg orl dec push in add mov sti jecxz rcr stos xor jge icebp and push or xchg ror lcall aas int3 popf js pop sbb mov arpl jnp mov and movsb jp xchg lahf inc mov sub test mov adc stos fimull scas repz mov push fadds imul mov pop lret pusha mov cmpsl lret mov cmpsb imull aam repz bound icebp pop pop shrb cmp dec mov and fmul pop and cli aaa movsb adc inc outsl andl test out in xchg lcall inc jg fidivl sbb and lahf cmc stos hlt out data16 ret jno push stos lahf sub cmc xchg pop into dec xchg aaa mov adc add xor inc pop ret into pop loop jle jne fs in lret and or jb stos loopne push pop push cmc mov inc adc stos out lret push pop ret or cs push cmpsl sbb mov fstpt lahf push enter push cmpsl in into pop mov test in pop lahf out sub lods stos or cmp inc or mov xor push sbb mov dec add dec jns loop mov cmp cld and jecxz,pt push xor andl cmp mov pop jb (bad) mov xchg sub xor xor sarb icebp mov mov imul in pop out enter insl lods inc imul out in inc das add push lods push mov jo arpl mov jp or cli jns or cmc (bad) mov mov lret or xchg daa sbb or fs add push jne out dec push imul movsl fidivr mov inc jno mov scas decb and fwait ret push lods pop pop test push mov in push add jmp mov jo sub inc je jle cli fldt push aas inc mov mov add cmpsl pop fidivrl pusha and pop ret pusha xor jno ljmp inc jge stos sti pop add and pop mov shlb fisubr xchg int3 lock mov inc adc mov lcall cmp cmpsl loope cwtl push decb or xchg test jbe inc xchg cmp fmull adc fildll mov sub jmp cld into nop int and gs nop inc inc shrb cmp mov into sbb xchg cmp rcll add mov push and push jb out mov popf dec mov push jl push (bad) jo pop clc divl stos push jb pop cmpsw adc fldcw ss addr16 jb clc pop cmpsl (bad) ja or aaa scas lret loop inc daa adc xor int clc loope (bad) roll scas test pop ljmp dec mov pop out cmp jmp ds cmp cld je data16 loopne fisttpl bound cwtl push jo test and outsl sbb sub popa and mov and test outsl or sahf jo (bad) out jbe nop fyl2x add mov mov mov prefetch (bad) mov sbb fimul mov mov test xchg mov dec jae bound push xchg call test (bad) rep or or rcrl fnstcw dec jo or push push cmp mov pop and jmp jg lret hlt push or xor dec xor loop out test jns adc loopne pop hlt fbld dec (bad) sbb cmp mov adc xchg adc xlat and pop lock inc xor cld test cmp mov imul test jmp cmp sbb jbe adc call mov mov xchg insb mov add dec in jecxz and xchg dec ljmp push sbb fldcw sbb dec and andl cmpsl subl jbe pop ljmp push mov stos xchg or frstpm(287 (bad) stc cmpsb mov xor fucom push mov mov xlat popf xchg movsl scas mov nop lcall push in out mov xor insb out inc push pop lock fadd adc inc pop add xchg fcmove dec into pop mov pop enter insl sub cld into fnstcw jno das fnstcw pop mov lds out jecxz (bad) jmp adc movsl test imul in push or cmp int3 fnstsw call dec ljmp jb int3 push mov cli loop adc mov add iret popa dec sub push and aad ds (bad) lret test iret push push ja (bad) xlat dec mov add cmp mov cmp or in fisttpll jle and add jo or notb pop push andl jmp cmpsl xchg into lahf cmp and jo clc mov xchg out shll shlb popl cmpsb mov lods pop hlt mov (bad) or fstpt aas push (bad) add jmp and sbb push mov inc cli or in das aam mov fcomip repz mov popa mov add jbe ffree test fstps push xchg dec pop mov mov xchg es fsub dec adc xchg aad cmp sahf or mov js jg add in imul jno jns fmull or shr and push lret imul and aad inc test xchg jo pop sub and sahf inc neg sub outsb lret and or dec dec xchg pop cli sbb push (bad) push test ljmp sbb aas mov pop lods and gs xchg pushf adc mull ret mov stos mov rorb cld xor inc sub bound lea lods pop ds leave xor rorl cmp add push pop dec cmpsb mov sub mov jno and add push stos cs push int3 add jp out push inc das iret and mov sub adc stc jle loopne insb add das pop jecxz pop dec or cmp cmpsl xor add push push push mov decb mov pop ds leave pop std xor cmpsb adc out inc push or mov repnz inc insb fsubrs push jbe adc jo sbb bound dec repnz inc ja sub dec dec dec or sub stos addr16 arpl and mov or jb mov sub dec cwtl jne rorb aam test sbb dec sbb mov je into add adc mov test fcompl repz jp call loop popf out scas mov sbb dec adc sub pop scas jecxz mov xor add mov mov inc or shlb mov js call and and and push (bad) dec mov xor je adc gs int ret cmp es mov mov jne (bad) insb inc dec jo push push sbb sub leave jbe loop bound xor fidivr inc (bad) insl mov cli mov mov orl dec mov (bad) leave adc stos repnz mov jl xchg std mov mov roll popf jg fistpll lcall inc sbb adc test xor loop jge popa std jmp repz dec fwait pop adc add imul sbb (bad) out push sub or mov in aad mov testl out cld and js xor xorb or and or xchg jns scas bound xchg pop mov push les pop pop out aas jmp loope add mov cwtl faddl data16 sub jae insb fimul dec or xchg out idivb mov xor dec cld cld jge add sbb xchg cli pusha dec add fsubl pop mov push inc fild mov mov cmpsb cs push add xor inc add mov loope lods fadd xor lret and inc div xchg add stc jmp lods dec cli inc out sub dec lahf mov ljmp mov mov dec clc (bad) lock pop cmp and push cmp outsl sbb mov sbb cmpsb jnp and bound mov xor inc fwait push sysexit movsb push sti test sbb rcrl push xlat or outsb repnz pop test stos cmp mov mov jo fwait (bad) daa int3 xchg push pop sub cmp jo out or and stos dec sub div xchg inc push push sbb dec cltd ret push xchg test fwait mov mov adc xchg lahf loopne bound cmp cmpb call cld test pop sbb push mov or xor xchg test mov jno pop jns scas bound push xchg arpl enter pop rclb (bad) mov out clc inc fs addr16 jle out enter sub cs mov sub and and mov bound lods int3 sbbl inc repz adc stos es aad add mov jg pushf and (bad) xor in jecxz sar es dec lahf adc add (bad) jmp aaa sub xorb mov clc fwait jle std nopl or xlat mov test pusha test sahf enter in fadds jmp cld or dec ret push imul pop push or bound sbb cmpsb sub xor inc mov sub lods repnz insb mov and cmpl bound pop jbe iret push xor fisubr outsl sbbl es mov stc (bad) aad sub rorb dec jg cmp mov arpl inc loop fstpt sub adc xor add ficompl and push in outsl or fisttpll negl sbb xchg inc pop imul aas movsl inc mov std es mov test psrld add inc fsubl xor sub adc pop sub imul and lds ds dec (bad) jg std push cmpsl jnp or out shrl lds loop adc ljmp stos je jge je loop mov or aad pop outsb cmpsb stc fbstp lea pop out aaa inc xchg mov stos pop xchg out jmp popf jns nop ficomp mov in fisubl or test ror add pop mov sarl ret mov dec sub ss cmp enter mov mov popf push in xor xorl dec mov cs jge cmp add cmp int3 push data16 mov stos pop es inc fs or out cmp loop stc or inc adc push push sti mov daa jle pop out inc sub adc jmp mov adc pop pop mov jb int3 push xchg inc pop lods mov (bad) adc xor insl cmp jae jmp aam xor inc decb mov push mov ud2 lcall arpl (bad) push test push leave aam rcrb mov mov pandn pop stos pusha stos imul mov aad adc (bad) mov or add adcl add popf pop adc (bad) out xchg (bad) mov and dec icebp dec test dec imul sub push jle push fsubr ja loope loope pushf push icebp call bound fnstenv jecxz cmp jmp xchg ficomp or out inc movsb push sub test loopne xchg cwtl call or push jb iret sub xchg sbb (bad) loopne or sbb and or (bad) into testl (bad) imul dec push testl ss lret (bad) xor push rcrb push jae stc pop cld sub (bad) addr16 insl jle fsubl (bad) outsb or pop popf cwtl andb lea sub dec (bad) mov jnp test sahf insl stos out sbb and sub fs push and lret or fisttp and loope pop cmc shrb lds add mov cmp xchg lods hlt in out stc imul sbb add ljmp bound or addl outsb (bad) pop cmp movsl pop lret mov movsl insb adc pop pop dec jo push mov add and xchg ficom sub xor jne cmpsl sbb mov xchg or popf mov jl jge mov pop jmp int3 in inc jbe add movsl push (bad) mov xchg scas pop (bad) loop addr16 lods addr16 movsl xchg and iret mov pop adc rcrb bound cmp js js lret scas lcall mov je pop mov adcb jno,pn test repnz pop fsubrs js cmp xor mov xchg aas cmp (bad) sub lcall mov push cld mul das xor pop pop xchg sbb jecxz popf repnz popf int3 lahf mov xchg sbb xor int3 aam out stos jg leave or pusha (bad) pop or inc data16 popf sbb xchg (bad) xchg adc mov jl add call jnp sahf fidivrl subl and mov xor nop and adc mov fwait xor cmpsb lcall cwtl sbbl ss (bad) add xchg cmpsb ljmp mov loopne xchg subb call cld les repz cltd and (bad) lret kmovb mov and jp lret popf sub in xchg add shll sub push repz jne cwtl add setne popa sbb sbb scas xchg (bad) mov dec cli test cmpsb ljmp push cld adc or jg daa bound loopne mov mov test push std jge pop xlat enter enter jmp cmp cmp daa movsb xchg and in dec mov cmp dec sbb and rcll lock movsb adc adc push (bad) inc sbb into cmp mov sbb mov cmp shrl repnz jns mov stos fnstsw mov (bad) lea jno jne pop inc jle inc jle mov loop,pn les cld sti dec cmp and mov arpl frstor lret es aas dec jne lds push pop mov pushf adc inc cmp pop pusha insb icebp pusha aad inc add inc gs or jns incb movsl and mov call in pop inc lret leave jne (bad) adc mov fstl popa mov int aam and inc cmp lds test sar and ljmp mov daa push mov mov jmp mov jmp addr16 xlat fcmovb xchg cld cmpsl mov aas lods int mov (bad) pop leave inc push inc and (bad) cmp mov loopne inc cmp mov aad shlb lock ret add cmp ret adc outsl lock pop dec lret int3 cltd pop sub dec adc push repz pop sub push cs or (bad) sbb lcall add (bad) cltd (bad) movsl add notb shrl xor std and mov notl mov lods loop imul pusha sbb pop decl gs (bad) aas and or push sub ret add shll stc nop jecxz imul mov sub jns adc (bad) mov inc mov and int3 mov je jp inc call mov rcrb push fs sub pop in rcrl pushl dec cmpsb ljmp jp jae add mov insl (bad) jmp dec out imul ret (bad) cld adc mov cltd ljmp fldt mov test and mov psrld mov or repz jbe sub movb sub xchg jle fidivr dec fs out mov pushf sti xchg or (bad) jg jle stc rorl add fldcw jmp icebp inc outsl mov xchg rorb mov push out scas jne xchg sbb pop lret jp xchg imul sub mov xor mov ret mov push addr16 dec js xchg nop test lock fdivl hlt (bad) rorb adc cmp inc lret pop inc add inc pop adc add jecxz cmp add mov fcomps std push xchg push call pop lret loopne dec fsubl push pop xchg (bad) lock inc gs (bad) xor jnp cmpsb ss jg in int push cmp sti mov call lret sbb lods cmpsb movsb adc xlat mov daa popf (bad) jecxz cmp mov movl aam lcall ffreep xchg stos inc sbb xor out bound loop push idiv mov (bad) inc mov incl (bad) and add scas inc out test stos mov cmp dec push dec cli jae push jbe xchg ljmp adc mov xchg in jp push test ret lods xchg shrd adc pop call fs cmpsl mov mov xchg outsb dec cltd sti test (bad) movsb xor (bad) mov pop push je mov cli adc push mov lret jp cvtps2pi (bad) in inc jmp repnz inc cmc inc rcr cmp pop jae cmpsl (bad) jbe call adc movsb mov push mov pusha xchg aam je fwait pop cld push jl ret call jle ret sbb dec jecxz xor int3 shrb jns sub dec mov sbb push inc xchg ja push je hlt or sbb jae pop loop adc lahf jmp mov popa inc xchg ret insl les rol outsl cs and pop and movl adc sbb and ficomp lret sbb (bad) fcompl push (bad) fisub repz sub sbb push mov xor nop es out push cmp dec cmp loopne or mov fnstsw pushf leave jmp sbbb das adc out inc and aad add add jns or sar ret shll push imull add test pop clc mov mov mov add (bad) insb cmp rclb es movb mov fcmovnb dec pop mov test pop in adc fcmovbe fcmovne inc jne lahf fisttp xor mov mov mov push iret pusha mov jno push mov pop jb nop cld inc imul lret bound mov sbb inc mul sub cmc popf bound add fcomps test outsl lea daa mov xor inc inc jg xchg cmc ss fiaddl aad push mov loop mov sti dec into cmpsl mov lcall push sub ljmp lret xchg mov cmp mov (bad) fldcw pop lret enter repz sbb mov pop stos es into lret scas sub scas aaa jnp ror xor pop push hlt mov xchg mov out xor mov jae pop jp out push aas mov popf mov subb adc insb (bad) (bad) and inc jge xchg xor push insb mov sbb testb mov rcrl xchg enter add loope rcr mov ljmp adc push sub xchg into add sub add aas mov (bad) or rolb sahf add movsl xor imul cli es (bad) jbe sbb mov gs jae xchg jle ljmp je enter cmp mov test lret jae into xchg mov in mov fwait ds mov decb cltd sub je fucomip stc bound push pop lret lods insb push jle push aaa sbb outsl inc icebp pop pop add jecxz mov sub cmc mov cmp pop xor daa jno scas mov mov repz fisubl (bad) and push jbe jnp fs jb imul jmp lods dec fldenv dec stc lods xor inc pop sbb adc jl addl pop out mov aam popf jmp dec (bad) lods sub mov insb mov ja fimul adc notb cmp outsb mov pusha mov lock push inc pop adc pop in daa ror sbbb and pop lods aad inc daa fsubl sahf push inc xchg sub jmp cmp sbb sti mov or scas push in mov lcall jns out aaa xchg inc lret iret mov leave xor shlb add ret (bad) stos fnstcw add add test aam inc out movsb push out jle std cmp adc adc movsb dec dec pop inc (bad) push xchg sbb jge imul iret stos ror lds stos iret out jae (bad) pop lods or js jns push aam jnp test cmpsb (bad) cmp ljmp test jnp jecxz mov cmp pop mov repnz jmp inc das ret incl push cmc outsl pop adc and xchg out insl js (bad) jge mov and push or jb mov andb push jl lret xchg or mov mov push dec lods pop (bad) out mov pop fisubr mov mov and push inc mov cltd dec mov repz (bad) sbb es xor (bad) aam add push popf iret call jecxz xor mov shll pop out repz cmp sub pop xor mov lods pop or enter movsb xor lock or pop mov (bad) jmp pusha out jl enter es xor jae in dec and (bad) in out or cli popf daa mov pop insl dec xchg push insl mov nop push ret imul jp ja scas jl sub fsubl popf adc (bad) dec sbb fstps add arpl cmp or ljmp iret mov push push ja insb cli mov repnz ds adc add cld xchg loop stc out xorb sub out (bad) (bad) jmp cli or int3 fisub sub sbb push push xor push (bad) int3 pop test mov xor mov std (bad) (bad) mov jge cmp hlt cmp adc mov sub pop cwtl js jecxz std out data16 std mov test push and lods adcl loopne adc int (bad) cmpsl jmp xchg loope or popf cmp aam aas repz roll (bad) sub xchg test xchg pop lcall inc int3 xchg mov adc sti int3 in movsb das sbb or or push push jmp (bad) das sub popf f2xm1 xor mov pop push pop testl and push iret mov je dec popf sbb bound scas push (bad) ljmp xchg (bad) cmp test (bad) bound loopne push es push push stos rcr adc dec xchg mov cltd fcoml adc xchg out mov imul imul adc inc or (bad) (bad) xor or mov iret xor movsb mov test fcomps (bad) sub cmp inc outsl cli sahf sti sbb adc dec stos mov out dec rorb in (bad) adcl adc pop push int test imul adc mov xchg xor and sub sub popf outsl jbe jnp loope test shrb push mov and dec and popf xor add push or scas xchg pop mov lock lock push adc dec rcrl out mov in xor ljmp add fcomps mov xor cwtl sub loope popf (bad) in dec outsl push lcall gs (bad) in out xchg (bad) mov pusha mul sbb jp xor adc or dec cmp cmp jmp fwait cs test jnp movsb das mov xchg and jne xor ja,pn xor les loop imul pushl je gs iret test into and lock js jno push cmpl lahf jmp out lea sbb (bad) jnp mov data16 cwtl inc pop scas outsl mov mov and jns ret mov rorb aas lds push imul scas addr16 xor pop lret out xchg or popa or out and pop std jbe lret int cmp add nop sub scas sbb fwait sarb mov push adc mov xchg (bad) (bad) testl leave xchg jns mov stc (bad) add sti lds add fucom mov subb cmp in (bad) stc xchg lret pusha cmpsb sbb pop fisubl cmpsl cmp incb xchg (bad) push stos lds in mov (bad) imulb cld mov fcompl cmp fcoms or aaa rorl out ret fdivrl mov repz mov out addr16 mov push push outsb xchg cmpl pop jo push sbb dec inc mov stos (bad) mov cld lret sub xchg call push fwait mov or fildll adc loope,pn out pop sub in fmull mov xchg dec push and test je sti rorb aas (bad) xchg ret jmp jae cmp das or nop outsl dec imul imul fsubrs fadds mov sub ret jecxz fsubr xchg sbb test xchg out lock insl fnstcw sbb jne je adc lret cmc xor imul cmpsb push mov dec into mov adc aad fcmovb sub xchg pop fsubrl aas leave mov xchg out pop dec loop lret mov lock cs jno mov into cld scas inc (bad) pop lret repnz dec adc push idiv rcll leave sbb (bad) das outsb or (bad) cli je adc push mov xchg sub decl cmp (bad) jl add xchg test xchg (bad) mov xlat test sub add add clc dec mov mov out inc push push scas loopne push mov (bad) pushf jl jmp pcmpgtb aaa xchg push in push clc (bad) jo test mov jbe xchg dec push loop shll stc sub pop sub insb inc xor mov in aad bnd add sub sub cmp sahf jns loope es stc rclb es xlat sarb mov movsl imul jle mov aam mov fstps push leave loopne into out in fstpt mov outsl cmp or pop das mov and xchg add ja inc mov sbbb mov jo or dec insb (bad) lcall add mov iretw pop pop cmc cli and cmpl dec ffreep mov fcmovu sbb xchg popa add mov cltd jns fisubl subb fcomps xchg mov jo iret sarl push arpl decb sub mov lods jmp adc iret pop cmp xchg adc or in dec mov and cmp in cmp mov mov out in or dec lods pop sbb lds adcb add pop std mov mov ficom mov cld je adc enter lods lret mov pop hlt jbe jmp adc pop adc dec fcmovnbe ds cltd mov and sub pop mov divl repz or push int3 daa popf xor or sub divl fimull lods inc and sub movsb inc (bad) psrad jbe adc add lods andl mov xchg jae pop fldenv mov int3 xor sub sub and mov iret lods clc mov lods lods stos lds loope mov and in repz inc in sub pop stc mov mov clc inc lahf inc xor sbb mov xchg add (bad) xchg fidivr xlat sti lock jbe jbe sti (bad) pop in cmp pop fs push in std pop cmp push inc push inc push (bad) shrl dec jmp xchg mov sub aad outsb xchg push enter sbb jo lea adc pop jae ja aam out ss lods ret (bad) fcmove dec test adc lret push std sub out push push dec cmpsb dec sti clc stos inc inc inc pusha push cltd lea in outsl lret or sub and iret jno pop out pop xor (bad) and dec test pop add jo in xchg inc pop insb pop test (bad) lcall add arpl push cmp add jl sub xchg cwtl movsl repz cmp inc out cmp adc fsubrl dec and ret jg mov sar xor push mov sub push pop sahf push ret cwtl fidiv in (bad) cmp leave sub hlt adc jns cltd popa mov (bad) sti push xchg (bad) and sbb sti dec xor cmp (bad) jns pop lret mov jne cmpsl repnz mov adc fdivr xor fwait loopne inc out lret inc and aad cmp inc inc adc mov daa out cwtl push sbb ds xchg inc loop sbb push pop sbb pop outsl in jns jmp or add aad cmp pusha fwait adc xchg mov inc mov sbb jecxz lcall imull and dec mov pop clc sbb xchg insb in lock push or mov jge repnz movsl dec imul int mov ja dec fldl push sbb fidivrl sub test inc jmp addr16 adc mov pop push lcall push jb mov in pop sub mov imul adc mov (bad) xlat push add inc push mov ficom andb std cmp sub sbb sbb pop mov sbb jmp xlat or jl push leave (bad) ret es lock inc jge ds fs and lahf or pop icebp inc ret sub dec cmpsl or dec xchg outsl push pop cmc push jae cmp test push ljmp loop pop dec aas fs xchg jne test pop das rcrl pop inc dec xor xor aas outsb push mov (bad) icebp sub add sub mov pushf aad das outsb cmp push push push inc jns push (bad) (bad) mov lods test or int pop sub pop lods ss adc or out (bad) clc mov jbe mov xchg pop enter mov mov insb push xchg movsb lret fidivr shrl es cmc mov push sub sbb das fnop dec inc xchg int imul sbb decb clc sbb mov xor dec cltd or xchg sub xlat aas arpl aaa lahf xchg jecxz cmp aad cmp xchg cmp mov aas add arpl aam frstor clc lahf jo mov faddp out leave mov movsb cmp or pop pop add call xlat dec jle push movsb sub mov insb hlt jae and ja ja xchg (bad) (bad) pop pop icebp push fisubrl insl inc mov jmp inc iret lret out mov in push pop cmp cli clc cmc fwait and or clc xchg in sub adc pusha popa movsb test xlat repnz inc adc decb pop (bad) popa out pop mov ljmp (bad) dec cmpsl fist fwait inc push loopne inc sub int mov in pusha (bad) cmp xor fstpt movsb cmp sbb xlat test loop sbb in inc lret pop mov pop xchg movsb outsb sub repnz dec scas adc gs mov loopne pop dec dec push xlat inc push in mov xor aaa inc mov lret cmpsb loope mov imull pop cli repz dec cmp sbb jns push xchg fwait aaa jns cmp lahf cmovg into aad loopne push jecxz mov fsubrl jo mov lret adc les pextrw cmp shll dec xor repz adc push dec cmp nop dec adc ljmp mov cltd into arpl lahf out cmp cmpsl xchg jecxz add (bad) fisttpl inc fwait lock fs pop inc add push jg jl fildl mov jmp lods ljmp xchg inc or sti movsl add (bad) dec push es jle int cwtl and (bad) cmp notb xchg iret jb nop (bad) xor ss jae or mov arpl test les lret fwait lock mov imul cwtl outsb int3 push cmpsb scas push and adc xlat pop (bad) mov lret out scas pop cwtl push mov and popf repz and popa mov jno sub hlt mov sbb sbb pop fwait loope mov test or sub cmp ret dec stos jns (bad) repnz mov lods mov sbb stos sub mov mov loopne mov inc imul in popf add insb stos ljmp cmpsl inc fsubs jg mov add stc adc fistp jecxz arpl mov shlb xor push and test push fidivrl ss push dec cmp jmp (bad) dec cmp xchg insb jae js sub fldt rcrl sub arpl mov movsl je test stos jnp sbb es cmp test ret leave sbbl movsl mov sub mov std inc xor xor sbb fidivrl out sarb rcrb les and cmp mov lret lds jle or daa lds das sbbl or mov pushf xor inc pop or in nop jbe fdivrs mov loope dec roll enter out gs lret fbstp ds lds push xchg in mov rcll pop mov mov or pop popf loope out outsl (bad) in add jne (bad) fs pop sahf add jecxz xchg push pushf fs push fcoml push imul sub pop or loope stos mov mov stos cli test cwtl pop arpl ss sbb scas or outsl xchg push stc loope cmp add mov and pop mov mov mov in es mov stos mov movsl or insb je lea xlat iret rcrb push pushf aam add jb push aam lock (bad) gs aas xlat push and pop push lahf lods mov lahf icebp cmp in push push or cwtl sahf outsb pop cmc daa or nop jnp mov outsl sub icebp jmp inc pop test xor (bad) repz pop push xchg cli (bad) lea xor cmp add cmp nop mov xchg mov sbb push pop mulb jp lret ja test dec je stc addr16 fisub or imul push cmpsl ds and loop sub arpl pop fwait mov xor das xchg je push mov xchg mov mov mulb cmp sbb mov sub les or das adc loopne xlat addr16 pop mov lahf and dec inc imul jle lcall scas cmp mov aad (bad) loopne das dec inc arpl mov sbb sti and sahf adc (bad) ds aas or xchg idivl mov and mov cmp xor cmp (bad) enter cmp sub pop leave jge xorb sub pop mov pop or cwtl and repnz fsubl mov cmp xlat nop cmpsb aaa popf (bad) les or pop insb cmpsl jnp popl inc mov (bad) xor pushf pop icebp cmp jo,pt sbb repz in and iret mov sbb push mov aam (bad) (bad) push mov inc sbb jno push imull dec ror mov adc jmp dec js or es push sbb dec xor sbb lods push data16 fnsetpm(287 xor sub push or push jl mov add rolb nop es cmpsb enter nop (bad) aas ss jecxz bound jo jge movsl add lods adc inc test lahf push adc insb sbb les in scas xchg enter or icebp (bad) jbe pop jae aam test jo adc js mov test mov cmp fstpt (bad) mov jno dec aad inc aas push mov or popf xor jle pop leave fisttpl cmp mov xor xchg xor cmpsb fucomp pop sbb push aad loopne mov xchg popf jecxz mov adc fsubs push push cltd sbb jne sbb pop daa stos int3 negl scas aad fnsave pop aaa jb sub push xor (bad) lret or push dec or push mov push push jl bound sub sbb jne cmp leave or je cmp fisubrl rorl jecxz sub aad push in dec out fimul imulb cmp outsb jns movsl pop mov jl cmpsl xor dec sbb cmp mov sbb scas add adc lret jo iret mov shr outsl mov or (bad) lock (bad) jbe gs mov ljmp fsubrl pop aas or sahf adc mov adc jae sbb mov push into leave into rorb push popf xor xor lock inc inc pop lahf into pop (bad) or jns xor daa aam int3 mov dec sahf add mov sbb xchg pusha sub popf mov test repz lods aas scas add nop sub ljmp add stos lcall add enter lahf cld add or fdivp sbb push mov lods cwtl mov and xchg mov xor pushl xlat mov mov xchg popf lea push insl sbb shrl (bad) (bad) dec lret sahf aad xlat push outsb xchg sub xchg ss mov add sbb fwait fs xor (bad) sub xor int3 cwtl js add std mov jge mov xchg jle je fsubl iret adc mov icebp enter dec inc inc push sub pop loope das xchg jg test std xchg inc or mov add inc cmp imul iret shrl out std inc outsl push test test fidivr jbe sub adc xchg push push xor test jnp cltd inc xchg and xchg mov jp jge mov ret rcl pop (bad) xor ja cmc inc mov jp inc xchg xor ljmp stc cmc push imul jbe mov sub inc cmpsb shlb cltd (bad) out mov push (bad) das and pop fwait dec jp lret pop test test aaa (bad) push lahf sti aas jo mov nop sahf lea xor adc in lret data16 pop mov and xchg or cmpsb mov pop nop in es lcall jb cmp lret pusha stos mov scas lret or jl ja cs xor leave push mov sub out lods sub roll mov test rcll or pop iret fwait insl stc push jg repz lea mov (bad) scas jns cmpsl jbe nop xor test loope fs sbbl outsl and mov xor push cmp cltd (bad) mov mov mov hlt fldl sub xchg fstpt loopne imul out das popa jns hlt mov das fstl or daa or xchg frstor cltd in xor out mov pop jne jl and in and inc lcall outsb sbb addr16 push sbb add loopne in jae lods test cmp xchg inc hlt aam (bad) repnz daa mov mov rcll push mov push (bad) incb xchg jp fdivs sub and icebp mov dec gs scas push dec mov xchg aad ds mov daa jmp out shrb ss xor adc sub test inc mov push outsb xor fild pop roll enter mov mov and lret data16 mov cmp xchg shrl lods cmp lret mov dec or aas ss enter add xor nop lahf loop scas adc xchg stc pop and rcrl sbb (bad) lcall cmp adc out repz sub cmpsb (bad) xchg loop xchg dec (bad) icebp enter repnz mov ja (bad) add movsl pop cli cli mov sbb mov mov push ficomp cmp xchg mov (bad) (bad) sbb loope scas ret mov aad clc push xor push mov mov sub std stos adc adc xor outsb dec push std pop nop push sub cmpb cmp push out adc mov repz insb std cmp mov shr je inc test bound pop test push inc pop inc and insl adc xor xchg cbtw in inc pop lahf pop mov stos jb in xor sbb mov sbbl ss dec mov xchg daa adcl jle mov aad arpl fidivrl jle sub lods push lret pop mov pop add repz daa xor adc stc push push outsb pop jno (bad) icebp clc outsl cli xchg sbb sahf jmp imul xor neg aaa test cmc faddl out arpl xlat adc or pop aaa rorl jbe xchg stc jnp ret push mov jae,pn pushl jnp pop mov aas sbb mov xor push add and out dec imul ret sub sbb subb mov lret je mov es stc in mov jnp out jp insl lret aaa icebp out sub sub jp rorb out or mov dec (bad) clc cs xchg (bad) or push movsb or lcall lcall mov mov (bad) inc mov pop sub cli cltd dec xchg scas mov in pop pop cmp pusha lods mov add mov adc cmp in notb shrb jo adc std adc or mov pop (bad) into fs push (bad) adc add add adc pusha fwait idivl dec (bad) into push xlat addr16 mov rol mov out push rcr xorb sub xor mov out xor jno add cltd push rclb lds mov xor mov insb jo iret cwtl repz cmc xor mov cmp sbb int jnp rcll into cmp aaa or into or inc test lret pop jge push xor movsb jle inc aam and enter xchg dec xchg scas roll and mov repz jg ret scas (bad) jbe and movsl data16 wrmsr pop les mov jno jg in (bad) adc pushf push mov stos sbb pop movsl mov aam les cmp or test push stos leave mov jns inc movb ljmp sbb xor nop sbb mov jno add scas ja or call call lods sbb pop mov mov sbb test shrl mov xchg (bad) jo iret jb xchg and mov lods in pop jbe mov mov pop sbb mov js pop out pop cmpsb mov cltd sbbl add clc sub out in xchg xchg pop xchg mov push int bound clc pop mov xchg popf push dec mov fsubl push push add dec push jmp xchg cld call (bad) mov out inc and mov shlb pop xor cmc sahf loope mov movsl mov mov push in push ljmp pop mov dec mov jns orl add in in sbb sbb pop pushl cli push jecxz lret sub push jbe fldenv inc inc mov xchg jbe sbb adc loopne xchg les push xchg fbstp sub popa mov adc jle add mov jmp sbb sbb sub lods dec jne data16 ljmp mov in ljmp jp xchg popa insb cltd and ljmp mov bound sub mov (bad) jno inc enter les mov cmp mov movsl xor xor xchg jge cmp xlat sahf in shlb int3 inc mov xor inc and idiv pop inc mov mov sti pushf xchg insb sub and pop fs xchg mov arpl xchg and popf (bad) ljmp adcl mov mov nop inc repnz push xor leave scas int in pop cmpsl test (bad) fst loope je (bad) in fistpl insb jg inc and mov push jo rorl jg xor out pop cli adc sub mov xlat cwtl jnp out fldl2t dec mov rolb cmp scas scas sbb aam jb lret mov and inc imul cmp pop aam fstps cwtl adc cmp cs fisttpll outsb roll ja pop jno mov lahf scas sub or std insb dec rorb outsb jnp repnz adc xchg pop push mov cmc fsubrl jne imull fildll stos sub adc dec cmp push pop js loop inc je cmc rcll or icebp movsb cmp sbb ds leave repz clc sahf cmp loopne and inc dec mov sbb cwtl pop adc arpl stos mov xchg cmp test jo lea paddsw cwtl cmp adc sbb shrl fistl lea test (bad) call mov fprem bound jge clc pop dec les outsb insb add mov test sbb shrb lock dec dec loop aam ds insb xchg push pop mov call cmpsl jbe adcl in and fdivr into les (bad) gs lock mov (bad) in fistpl lret sbb xor fstl pop andl lock mov mov insb ret stos xchg test adcl xchg pop xor and pusha into pop cmp mov in ss loope fcoml sub cli sub inc mov xor stos sbb aaa cld sbb lock in push push adc or sub mov push cli jle xchg xchg jge mov out enter pop and data16 and repnz fildl lcall into jne repz pop inc cmpsl in mov add (bad) aam scas push mov out insb int3 mov in jns xor into (bad) pop mov clc xchg pop es sbb mov xchg aam aad and adc xchg dec nop/reserved mov jnp les sahf icebp add sbbb (bad) xchg lea pop sbb ret xchg in adc lret std jne je push and sbb xor xor cltd test xchg adc inc or xchg pop mov adc mov pop movsb bound dec xor sbb data16 jo mov fimull addb gs pop (bad) and push test adc xchg (bad) bnd or out adc lds jne xchg adc sarl dec movsl fstps in add (bad) out dec lds inc sbb rcll pushf fisub lcall gs sbbb xchg mov fadd or test cmp cmpsb call jbe xchg mov add ret mov adc mov cld pop pop in sub xor hlt inc in sub pop sarb jns inc inc outsb jbe mov mov fsubr cmpsb lret rcr in fbld mov cmp test pop scas jb add or or push dec lahf les xchg repnz (bad) adc test or ret insl pop ret cmp rolb in out (bad) lods into or roll cmp sbb add mov sub popf ret jl fdecstp push lcall movsl sub stos inc cwtl dec push sahf and xlat sub cltd mov jp arpl dec shll call leave inc xchg adc int pop mov jmp sub mov stos push ds pop cld sub xchg test (bad) push pop adc sbb jmp add or iret cltd cmpsb pop add pop or xchg mov fwait jne sbbb int3 icebp and inc loopne sbb mov iret clc or (bad) pop mov adc mov sti enter (bad) repz or xor cmp adc jmp data16 jbe enter pushf jo push mov or sub stos mov jae (bad) aad push or in fcom mov add outsb mov clc mov aaa int push (bad) sub jp mov add mov dec out das pop out lock jns jl cmp dec in mov (bad) cld mov inc jbe popf xor adc adc int3 pop sbb scas call cld mov roll xchg jno adc xlat (bad) leave jg pop mov jg sti es jb clc rcr or gs sub mov dec pop hlt add popf xchg or aas cmpsb aaa lock jge nop jle movsl jne mov hlt xchg add or lcall fwait add fstps add lock test aas les inc nop lcall ret (bad) lock dec int stc or or inc mov adcb data16 rcrl mov push (bad) mov ljmp sbb push cltd cld push inc xor sub mov ljmp sbb or push aam xor mov sti xchg inc adc inc push pop into jnp push push xchg and int3 jne addl test jb mov lods gs in adc icebp mov xor inc jbe (bad) sti stos mov sbb and imul mov jmp xor mov or pop adc inc pop insl int push jl clc push sub mov inc repnz mov call push lret inc cmp imul inc inc mov rorl data16 jmp adc fs dec mov xlat pop lcall cld or leave mov mov push jnp lahf aad jp mov dec xchg add cmp or (bad) fstpl adc cmpsl push cmpsl mov mov (bad) orl fs insl mov jae daa pop push dec addr16 aaa mov xor add out repnz rolb les cmp lds sbb cwtl mov jae pop mov push sbb or or iret push adc jg pusha mov jmp movsl adc jb jne or shl ds xchg push mov inc pop daa or or subl ret jnp sub movsb inc cmpsl lds fwait lea jb clc cmp aaa push mov hlt cmp inc mov sub loope xchg nop push jno mov inc jb lret mov push and enter cs mov stos movsb stos pop xchg adc cmpsb pushl (bad) jp test mov scas fstl pop dec push mov mov sbb sbb ja cmp les movsb repnz bound cli loope add cwtl pop mov test push jecxz adc divl outsl and xchg cmp mov (bad) fimull xchg cmpsl in mov pop cmp cmp lahf adc xor fcmove sbb xchg mov hlt test xor jmp mov mov sbb adc and push and iret sbb push out adc test push pop out xor pop gs push push mov mov mov outsb and inc xor xchg iret pop xor dec into scas sub xor roll cmp xor rorl ficom inc sub bound xchg stos fist pop jl (bad) xchg jns mov jp lea enter jnp mov push nop js lret pop (bad) leave out jl pop add int out inc dec outsl sbb call fistpl (bad) push adc push aam cld fwait mov rolw outsl ss and fisttpll cmp or scas xchg pusha je (bad) xlat sub lods lcall sub leave xchg (bad) lock movsb std sub push sub (bad) leave aam inc mov adc test xchg jg out int3 push mov adc sub cmp adc inc xchg jle loop dec mov adc sbbb inc inc sub rorl push inc and jp cmp sub fidivr jb xchg cli push cmp cmp iret imul xor push xor bound insb push (bad) pop lds mov es or subl mov and or (bad) in clc ljmp addr16 pop pop jmp and sub jns ret or pop or and inc sbbl lret mov stc dec lcall data16 es mov adc adcl test adc lods (bad) mov push push int (bad) cmc or movsl and mov add inc test add xchg jne (bad) gs out xor pop leave adc inc pop inc jnp cmpsl fcoml dec cmpsb into jb xchg pop push lahf and sub mov xchg or jp pop (bad) or cltd add divl cmp and aaa add push scas pusha cmp cli jbe repnz repz pop test inc mov and sub loopne icebp lcall mov nop adc pop and jo stos ficomp rol fs mov mov dec test shlb enter cmp adc jb rcrb fdivp movsl (bad) jle push pusha jl jl adc cmp imulb out push and dec ss shrb and xchg sbb aam mov fistpll fnstenv mov int3 or adc jne xlat rol (bad) shl mov fistp ret mov add dec ljmp mov jb insl test push enter aaa or push xchg popf fcomps xchg arpl dec divb fbstp test das scas test mov xchg std or jle cli inc (bad) inc lock cmp mov imulb jge jb push jae out lock mov or movsl push and pusha xchg cmp pusha in rorb mov push or push dec aas add fimull lock in adc cld stos repnz and lret mov test xor or lods lds and jne add mov jo lock in mov lahf pushf cld pop pop and aam (bad) mov push int3 cmp push arpl cmp stos test ret in fwait mov push jne fiaddl jbe inc mov push xchg pop aas push mov jp cld sub mov dec int3 add add fldlg2 imul xchg adc mov push mov in xlat or (bad) push sti test mov mov pusha xchg inc push adc pop xchg ret nop fadds push cwtl out hlt inc mov inc lds pop (bad) lods cli or mov out jp (bad) ja xor adc loop sub sahf cs fisttpll hlt aas cld std xchg push outsl test sbb ds cmp pop inc cmp xchg sti nop lret sbb (bad) data16 pop fs rclb and jle sbb pushf pop test (bad) mov inc jle popf test and outsb data16 (bad) inc xor out sbb inc ficomp mov mov mov int3 mov mov insl adc push mov add mov jg scas cmp jl jne js push aas add pop mov mov mov gs mov mov out pop push mov and loop dec mov add ljmp add mov inc sbb sbb (bad) sub mov xchg ds cs inc int or inc cld sbb xor imul sub stc nop loope inc ret js outsl std pop mov lea jne je loopne into test pusha mov inc imul lods inc or mov es cld fwait mov ljmp cmp sbb push pop stos push inc cmpsl inc add add cmpl aam stc mov sub jbe es sahf mov into pop in mov xchg rorl mov rcr stos jb jmp sbb aam into movsl jnp push sub adc xchg pusha outsb test xor sbb jb ss pop in xor dec jecxz mov movsb insl mov push adc and fildl (bad) sahf int3 sbb rorb pop mov in dec loop rol xor adc push add lahf push and jo dec xor stos outsl movsb clc movsl (bad) cli push push inc or je sbb push fldenv imul (bad) sahf adcb fcmove clc xchg shlb push mov xor fs rcrl mov inc cs mov aad (bad) fs push addb (bad) ljmp rcrb jnp cld xchg pop sbb xor push xchg outsb mov push stos push xchg push mov enter gs mov cli sbb mov cli fisubrl fstpt das cmpsb mov pop inc mov scas push fcoml mov sbb jmp mov ljmp shrl aad or cwtl jp cmp mov dec sti in jns mov mov or pop xchg sti fstpl cmp pop pop xchg jg xchg rorl adc ss sbb bound sbb pusha fldl mov test mov sub jp mov lcall cmc sbb mov cmpsl cwtl sbb cs data16 mov nop sbb cltd dec insl pop adc loope psllw into mov and xchg mov pop ret mov sarl repz aam push lds out add push ja and push pop divl outsl mov push and jb (bad) ja xchg shrb mov xor mov repz fild outsb stc jmp push les es scas enter scas xchg movsb jl inc sbb in fadds xor lock mov and cmp fsubrs fist iret dec daa mov ljmp jp push cmp nop lods arpl test aaa jmp dec pop scas mov mov add cmp xchg jns push jo pushf loopne (bad) or icebp cmp sbb sub cmpl push mov lcall scas in pop xor mov addr16 or inc lods shl out (bad) mov sub or cmpsl call sbb xchg das add sarb das mov mov mov and sbb repz xor xchg rep mov cltd das xchg test inc xchg daa and pop pushf adc jle and lahf repnz in xchg insb xchg aad test inc insb das xchg adc imul dec jne inc pop sbb leave jno nop jbe ja (bad) pop sti inc movsl mov dec inc mov fcmovbe sarl sbb mov sti dec cs sbb imul bound sub aas or jge push mov fs (bad) fdivl fistp sbb push mov cmc dec push repnz inc or mov js daa jecxz insl scas inc movsl or jo pop dec (bad) mov mov dec sub sub mov loope (bad) (bad) xor push enter mov repz inc dec fwait call sub in inc jl jo jo ret pop lods inc jge or pop inc enter mov jp js out jmp push pop cmp and (bad) or or cld inc sbb xchg (bad) xchg push fsincos adc pop push mov cs int3 cmp pop push test insl add xchg je daa les mov push dec aas out lods shll jns and mov dec sbbb int dec lcall mov cmp mov inc (bad) dec hlt lret popf call cli inc std mov negb mov sarb stc repz sbb ret pop into (bad) (bad) jno pop sub xor push pop clc xchg mov lea imul or xor call mov int add pop fcmovbe add mov call dec and sub cmp inc cmp fistl jns out sbb pop in add or cmc adc mov add and jns fildll stos mov push (bad) (bad) fsubrs fldenv jnp pop mov push mov lock inc xchg or dec jo sub andb sbb cmp push in lahf jns fbld push and call dec aam movsl in dec push stc pop and sti divl ret push ret mov movsl shll out cmp and sub xchg nop pop jbe sbb and mov sti xchg fildll daa xor fbld iret and repnz jbe imul mov mov cmc and iret xchg loope cs cltd call frstor jge pop push pop mov sbb mov add lcall push xorps pop inc cmpb xlat mov int and add inc push int3 mov neg mov les into ss sbb dec shrl pop fild pushf jge data16 push xchg stos vcvttss2si int cmp rcr mov xchg push leave dec inc push jmp inc subl pop icebp mov mov out mov nop jecxz jns lcall roll mov cmp in aas mov in imul sar inc jl into arpl cmp cmc (bad) test imul xchg loop jecxz dec inc arpl out stos inc xchg xchg and adc mov outsl ja in pop imul mov pop cmp sahf repnz inc stos sbb mov (bad) das mov scas sbb test stc popf jl icebp adc jg cmp lret rcrl inc cli ror jnp rcll (bad) (bad) sbb je in xchg icebp rorl lahf movsb xchg cmp sarb imul xor inc cmp cmp mov push push push pop dec push shlb (bad) (bad) les mov lret aaa xor aad repnz xchg inc leave sbb mov aam aam and (bad) or mov sub dec jo sar test jecxz jmp iret pushf aaa cld xchg sub rcrl push fsts xor lgs fildl jnp and sbb ret pop xchg mov mov ds xor rclb dec pop push cmp out (bad) (bad) mov arpl dec movsl in cmp mov pop lds in mov rcrb xchg shr xor and dec or xchg je lret lods jp lods adc mov lcall repz in inc mov (bad) mov inc scas outsl in imul sbb ret pop add pop dec sub rcll loop scas jp pop adc cmpsl out xor dec jnp mov fst rclb cld pusha aas cmpsb pop cmp enter in pop or clc adc inc bound shll aam mov loop push imul fwait stos sahf sbb nop imul mov (bad) lcall aam pop frstor stos mov cmp (bad) cs mov int3 (bad) mov hlt call pop or pusha push mov out lock pop pop nop mov cmpsb mov pop jnp or ss movsl daa jg sbb inc sbb ja jb rorl jge add divl scas mov stos int3 push inc xor js in cmp jno pop push add addr16 and loopne sbb in jp or jo mov (bad) mov arpl pop pop ret adc idiv sub mov std xor pop lea sub das stc add add lods loope imul ja fs bound mov xor pop sbb fiadd mov or sub lds test enter jecxz pop fistpll cmp sbb ja cmp jns hlt in add (bad) xchg and sbb or (bad) cmp lods fs push aam addl (bad) std cmpsl dec jecxz dec (bad) xor clc mov fnstsw or fadd push lret aam out ljmp push jnp jg aas dec cvttps2pi jns adc mov jb lcall lea sbb adc xchg imul loope imul je push or dec jb push es mov (bad) and add ret push adc lret adc sbb (bad) insl call arpl sbb sti out je hlt add jmp (bad) xor (bad) cmp ds jo outsl sub test mov push jns mov fcom shr pop dec lcall repnz mov lods ds out divb pop adc arpl add xchg (bad) int3 aas sub orl (bad) pop push jbe sub pop fistp loopne js loop adcb pusha ja mov mov lods data16 cli and out dec xchg cmpsb xor jl mov into jno inc fidivr jge (bad) aad mov jne repnz les xor stos adc adc and sti popf psubw mov mov sub jecxz fsubrl mov rclb std dec jne sbb (bad) lods and jle xchg jl push popa cwtl ljmp cmp (bad) rorb bound lods fidivrl push push pop dec mov inc lcall lcall and (bad) mov popf icebp stos jne in push and and pop xor loopne mov fstpl add mov xchg leave (bad) jne fisttpl xchg aas pop xor and test dec dec arpl or mov into les pop cmp repnz mov sti jge ljmp mov push cwtl xchg sbb lret inc mov fistpll (bad) loop mov dec xchg mov out or leave aad push enter das push insb adc test xor (bad) maskmovq testl cmp mov inc sub rol adcl int int3 cmp push arpl lret fistp imul mov xchg imull ds div and insb xor adc test dec out and and pop sbb test mov mov cmp fsubs movsb adc or cld dec scas in loop (bad) push xlat mov shlb pop push push lods aam (bad) jbe arpl outsb adc subb cld xlat (bad) fisttp mov dec mov dec int in scas mov cwtl nop xor pop outsb and lods xchg test sahf mov push sbb sub push rcr sahf (bad) pop cmp dec and sub jg shl mov dec and and adc clc mov dec call sub mov adc stos (bad) fidivr cmpsl jle jne sub pop (bad) push xorb push mov sti es mov jecxz jb inc jle xchg mov xor jnp sbb mov imul test daa mov dec iret ss cmovbe repz push xlat xor mov insb repnz sub mov repnz and jge ficom sub jb jmp ret (bad) rolb jg pop sbb cmpsb inc push and push lahf mov inc xchg adc or test add lods fwait xchg rcl jp push ret (bad) jp fdivrs cli and jp call out lret inc mov pop cmc and xorl movsb sbb or inc pop mov (bad) mov mov fisubrl mulb pop mov dec cmp cmp sub xchg cwtl jge sbb sub int3 imul rcrb sti cmpsl jmp test push xor lds out ds nop mov sbb mov pusha or sbb fldt fdivrl cmp mov clc jp dec in push dec ds push aas repz enter mov mov in test and push addb mov mov divb dec das cmp addr16 leave cmpsl mov push xchg cmp imul push enter test jno in cmp cmpsb test gs jnp ss or pop mov push mov js out jecxz lods mov or ficom adc rcrb es xchg cmp rcl or aad aad jmp sub dec xor test imul fwait js das xlat mov cmpsl fwait shll or (bad) jle ret insb lahf jo test sbb or push (bad) daa les ret stc xor sub fwait jge (bad) jo subb fsubl jo and push arpl nop cltd loope popf jmp adc xor cld cltd sti and push jmp ret mov cmc ret (bad) (bad) cmc xchg lds test fisub xor dec icebp and mov adc das jno jo ret inc imul sarb insb scas lea adc pop roll loopne add js cmpl jne bound sbb xchg inc (bad) lds jnp (bad) sub ret mov lret cmpsl scas pop ficom imul push mov mov int3 cwtl in test xchg jo ja sbb push aam pusha (bad) and or (bad) pop add xchg dec add or sbb xchg adc test cld jg stc inc (bad) hlt mov aaa lods pop add sbb scas (bad) int3 xchg pop jae pop and xchg jo lods add into adc das mov jge and cltd imul mov adc movsl int xchg sub xchg inc sub test fnstcw push sarl leave int3 jnp push dec or xlat and mov push inc push (bad) dec pminub das push div and pop mov adc cmpsb mov scas push jp xchg mov frstor (bad) out (bad) pop lea imul sti inc lcall mov test cli lret gs fisubr mov in sarl loop ret push mov pop xor mov int fcmovb inc jecxz arpl mov adc lcall outsl pop addr16 mov adc sub and lret pxor adc cmp inc cli and fstps push push (bad) bound sbb bound pop sub das push fimull andl clc iret lea clc pop jle xor mov cld pop rcrb shlb adc adc fisttpl addr16 loopne mov sbb sbb add and mov mov cld inc out out add xor or mov mov push mov loop sbb xchg mov push xchg jo fadd lret mov out cwtl xchg (bad) pop or push test fisub cli fimull int adc in daa xchg (bad) xor int3 pop fwait aad sbb cmc xlat das ds fcmovbe mov sbb mov ja rcrb push jne push stc push cmp mov jnp sahf lds mov cmp xchg lods lock insb fidiv xchg add ret push mov mov pop in repz sbb (bad) jmp mov call inc roll mov mov mov lcall jmp (bad) xor sub pop arpl inc push cld fildl push insb (bad) sub or adc repnz xor out (bad) sbb and sbb pushf in ss xor leave (bad) dec jg (bad) sub dec cld xchg cli push cmp mov add xor sbb out pusha mov andl int3 mov jbe push lds adc pop add push sub (bad) pop sub adc add xor and cmp frstor aad scas in xchg inc (bad) ror ja push sub movsl out notl jb pop lret and push ret cs pop fmull mov cmp testl lret (bad) mov cmp push push jb adc sub xor push fcompl (bad) popa inc and mov jle cwtl lea (bad) cmp out rclb ret lock add or mov cmp pop lahf dec aas mov outsb fs leave adc sub or mov arpl test inc mov mov sub push push sbb and and sahf push mov dec dec dec lret inc jmp pop inc sbb sub in pop into loope push adc pop jecxz call test or add mov arpl sub cltd leave xor in in test ljmp push xchg add jb push insl fs out sahf pop pop and repz (bad) mov xor xlat pushf js sarl cli fucomp notl sub (bad) sahf test int aas xor ret push imulb (bad) dec mov push push outsl outsl mov test sub or inc loopne outsb ss dec ret mov out arpl stc cwtl or in inc inc hlt mov imul mov cmpsl sub mov push enter outsl adc xor cmp lods inc gs aam xor outsl xor jle xchg xor cmp arpl mov rcll pusha inc lods lret pop sub push mov fptan mov cmp cmp jg gs cwtl push xor in scas lea lahf jle lds sub mov repz ret or in negb out xchg or cmp xor jmp inc roll inc mov xchg inc xor mov xor lret mov lret pusha xchg mov jp inc cwtl adcl adc mov mov test mov and dec mov shlb mov xor push aas sbb or mov pop fs add scas mov movsl in rorb or aad imul push mov cmpsb outsl xchg add add sahf sbb adc mov adc aad cmp pop inc popa daa sub std sahf adc insb addb mov sarl sbb push outsl inc inc mov mov and aad add ds aam fisttpll stos shrl in xchg inc sbb test adc adc add and mov imul pop shll xchg sbb leave ds das imul or dec lea mov ret test fwait jl adc sbb sbb cwtl jmp sbb pop (bad) arpl pushf iret push aaa out jns jecxz xchg int3 in (bad) je,pn push in mov mov jo data16 mov xor idivl adc aam adc mov mov ret jae pop jge repnz pop fidivl cmc stos adc fild adc mov xchg add incl pop in lahf and popf lods dec out mov int shrl in in jg adc cmc sbb cmc repnz popf add sbb xchg sahf push or sbb push jno mov fimull mov mov lods push jo mov mov das repz or fs cs rorb int mov addr16 std fsub (bad) jae sarl iret pop repnz adc leave dec xchg movsb inc neg or jge lds adc mov pop mov push inc lcall rcrb sub mov in aam lods pop or (bad) ss data16 ret (bad) fist (bad) mov out or sbb arpl push dec lods fisubl popf adc pusha and out cmp movsl or test pop int push jno out movsb (bad) xchg adc jge addl cwtl cmp mov mov imul pop lcall dec mov pop add xchg pop mov add dec mov (bad) sub dec cmc in dec push adc xchg push and pop mull mov cmp jbe fs out push daa ss jae in mov cs out (bad) out adc and xchg sbb jo loop sarl loopne out mov cwtl ljmp mov iret mov stos adc xor int3 test in imul push enter int3 push inc (bad) pop adc daa cmp int imulb cmpsl xor jns (bad) cmp xchg call mov scas jp je inc fsubl andl xor aam loop or jnp push fcomi xchg xorb xor add push leave popl adc imul mov add push xchg lret (bad) mov sub call pop adc (bad) addr16 pop stos or repnz cmp vmread push scas cmc dec jno pushf into push dec xor cmp stos aam and jne leave or repnz pop aaa ret imul push cmp bound cltd mov movsb (bad) xlat inc jl pop fbstp rolb adc dec enter dec sub push mov mov mov lret call pop loop jmp or xchg fwait dec cmp sbb jmp gs daa sbb in sbb sub lcall test add push adc andl jg push and cmp lods jl jmp les fwait (bad) xchg (bad) fnsave push ficoml jmp sti out push dec mov pop (bad) leave pop ret rcr xor push out and add lret lods dec sub mov adc push push fildl adc or xchg push rcrl and mov mov in mov leave mov js (bad) xor fucomp add pop movsl inc ss fnstenv cmp adc inc dec add (bad) sbb push mov les in xchg pop xchg je push lahf inc and sbbl inc sub aas repz das nop sbb mov lods xchg arpl subb icebp sahf xchg add push aaa xchg jnp outsl xor pop and adc push scas inc iret nop divl xchg ret (bad) mov push inc outsb imul test mov cs mov lret sahf pop cli jns int3 ret inc test pop jecxz (bad) inc adc xchg sub div rolb or aas cmp pushf testl dec xor imul stos sub or sahf and stos adcl push ret jbe lret movsb fldl mov das jl iret mov dec jno mov pop xlat fimull in std mov cmp cmp addr16 out (bad) add jle rorl negl push jne fdivrl sub les xor push ljmp test pusha idivb push pop mov dec out addr16 add andl sub aam jp in in ucomiss xor mov jb pop dec cmp push pop push mov jg push out push ret or scas cmc dec dec sub sub adc test push cli jb mov mov mov mov out sub or add outsb sbb and mov movsb imul pushf scas lods mov sbb jge stos in mov mov xchg ret out test push das push in xor cli stos adc mov insb xor insb (bad) xor lahf lret (bad) out sub icebp cmc addl add lea dec (bad) out clc daa jbe out lock jne and mov (bad) cmp addl mov fistpl pop pop scas xchg xor mov push and mov ret jmp and test test repnz mov outsb imul push aad cmp loope push addr16 aad ja hlt sahf sub mov (bad) jae inc outsl aam cmp mov bound lahf (bad) je aaa inc mov (bad) xchg mov ljmp jns pop in bound push lcall inc gs inc sub cmc aas mov cmpsl mov mov js xor xor and sahf rorl sahf (bad) sti into rcrl icebp ss stos and sbb lds and pusha and lcall addr16 xchg adc push pop or mov sub jbe ljmp and mov fnop (bad) mov insl popa sahf xor xchg sub jbe scas jg cmp ja daa sahf lds or js cmp arpl jge mov andnps xchg repz sub dec dec add (bad) mov imul xchg das and inc dec les jge or pop pop lods cmp cmp (bad) push dec push mov lret test mov ret push jecxz hlt iret jl sbb xchg xchg sub enter push sahf push sahf and mov cmp imul imull dec dec xchg and mov std xchg repz or cmp cmp xchg mov aad mov dec rcll and fild add js into in fistl mov adc sbb or fstp (bad) out jg jge push jle xchg xorl movsl pop ficoml push fcomps jle enter test insb sub jne or lds std jl mov popf mov (bad) fimull push jbe ficomp push leave cmpsb lods in ret loopne loope mov (bad) dec les and push mov das push imul popa xor sub or lahf xor call push jo xchg ss sbb fucomi adc out rorl cmp xor gs insl cmpsl dec dec pop cmp xor adc cltd jbe push cld jae sbb add cmp push loop lahf mov mov mov scas mov aad gs in lock adc (bad) cmp bound mov jo xor test popa or insw outsb and cltd xlat pop lods aas mov in sub and push add fst jp add out jmp aam xchg aam xchg cmovp fdiv and int3 mov lret inc adc add push mov arpl push insb fldenv or xor in cmp pop (bad) lods mov cmp pop in adc clc std rcrl pop lret mov jae shl fwait push in daa (bad) stos sub inc mov ja sub (bad) inc jo cld adcl mov stos addr16 inc push mov movhps push pusha adc jecxz js or inc ja repz int jle and cltd scas test jl loop sbb adc testb sub mov inc fwait popf in popf mov mov xchg push xchg inc mov sti rcrb mov sbb (bad) adc add cmp xchg push cmc cmp adc lcall sbb syscall push repnz lods xchg stos bound out sub out js xor iret and dec cmpsl std sbb rclb negb inc push jno fisttpll out pop mov gs iret icebp xchg or scas cs icebp inc jo xor jb xor push fcoms push jmp and mov fwait push je cmpsb xchg rolb aas lods or ja dec mov lret aaa ds mov push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret xchg pusha subl mov dec (bad) dec sti movsl lea jmp lea jmp (bad) sub test xchg cmpsb cmp dec fwait aad inc xlat std inc in dec xor mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp xchg les mov dec (bad) dec sti movsl pop sbb dec movsb ret fs je push xor sti mov mov and pop popa ffree mov repz xchg jne ret mov cmpsl adc push mov jle dec (bad) nop jmp fisubl push adc orl or int cmc nop imul loope cmp imul push lock push ja enter and pushf inc mov push rcll pop pop out and ds call jl js imul inc ds xor adc out sbb pop inc lods adc in adc xor test test cmp mov xchg sub lds icebp sbb cwtl jge mov xlat inc push in mov pushf inc jle lahf push mov dec dec fnsave (bad) lahf pop mov call and xor xchg inc inc mov nop pop in lods lret popf cmp pop ja lea sub cmp xor or das sub add cwtl daa xchg lcall cmp ja lea (bad) push jbe and pushf popa loopne test adc shll (bad) jbe pop sub cmc cmp aas pusha lcall xchg (bad) iret addr16 lcall pop mov scas push mov frstor fmull imul imulb jecxz pop pop addl dec and ror int3 sbb je outsl popa cwtl or pop int dec mov out (bad) push in pop dec adc rcll cmc inc push gs out mov dec fs inc adc fbld popa mov pop xchg inc decb cmp fiaddl shrl cmp dec les adc and inc hlt xchg and push or xchg aas mov adc xchg cltd pop scas mov into mov loop jp popf cmp (bad) sub (bad) sbb cmp aaa je (bad) sbb sarb addr16 jmp jb aas mov jmp les in mulb adcl aam mov mov or adc mov lds sbb lcall push push enter cmp inc sti mov sbb pop scas xchg push push aas out sbb and rorl cltd out testl mov sbb arpl popf pop mov sbb bound or add mov ss insl inc xor mov jo dec test loop xchg div jno sar aaa (bad) in das jle cmp insl pop aad fidivr mov xchg inc jns stos jmp lret sub adc xor arpl mov aas rcrb pushw or lods push mov addr16 jno pop jbe int3 push jb sub leave daa arpl (bad) jmp dec inc pop ja scas mov sbb pusha push aas cmp cmpsb pusha sbb and shrb mov mov iret or jbe mov icebp push xor dec dec shrl lods cmp push outsl flds push cs movsb inc fcomps jnp outsb test push cmp mov mov ds repz daa lcall aad dec into mov sbb mov inc js cltd iret aaa cmc and fildl test test movsl insl xchg mov fadds jge cmpsb jne mov pop fisubl mov in cmp mov jnp enter out addl xor int mov jnp stos icebp pop lock aad repnz push dec call push fwait inc inc repz clc aam inc in rclb xor cmpsl lock and lret and (bad) or xchg enter repz ds push aad xchg cmp out in (bad) mov dec mov xchg push push (bad) mov test scas mov sbb aad lcall les jl pop mov pop loopne movsb dec outsb mov cmp ja scas pop js pop and add or xlat jb iret loopne add gs xchg mov pop das loop sub outsb or or jb shrl cmp sub test jb movsb stc in lock leave ja jb push or ds icebp mov xchg or mov mov inc jno and adc mov in imul xchg out mov idivl fs cmp or cmp mov out in mov cmp out adc out adc xchg outsb pusha cmp mov inc cmp mov test sub xchg int3 fwait pop lret xchg pop xchg loope gs aam pop mov mov jmp mov add jmp mov add jmp push mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 and faddl dec sbb repz cmp enter cld xor in in xchg xor xchg pop mov mov xchg dec xchg mov inc je stos repz call xchg std dec int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov data16 add inc jmp and dec mov shrl adc sbb in scas xor xchg mov icebp mov pop call adc imul jp test nop jmp sbb popf and repz or test into jp cmp imul imul inc lods sti xor test push xchg frndint stos test xlat insl (bad) push push mov inc repz sahf add dec arpl cmp inc into and test aam adc xor subb in jp roll dec pop mov jbe dec aam fistp add mov sti mov int shll pop or fisttpl (bad) das arpl stc hlt inc dec outsb cmpsb jg push adc mov hlt imulb aaa ss sub lahf xchg pop mov cwtl dec call movsb lock std pop xchg test leave jle les xchg cltd dec (bad) xchg xlat xor stc js mov ret fwait addr16 mov xchg fist dec jb rclb mov into push in xor dec (bad) adc mov add mov jecxz repz les lds jle dec push or lahf (bad) cs rolb (bad) xor push xchg in pushf lock adc (bad) mov movl test xchg dec cmp adc ss xor pop jle lret lahf sti in lods insb outsl or rorb addr16 or mov dec xchg les dec loop pushf push in mov lahf fwait or ret or mov mov das sub adc daa jmp sub mov add stc (bad) jmp cmp fs inc cmp mov add dec mov mov gs ljmp cmpps dec ljmp addr16 jmp push fwait imul clc mov (bad) sub sub decb daa sub jmp cmp ss popl popf jg add xor jns jecxz xchg arpl movsl cmp dec pop pop add xlat dec xchg mov fiaddl pop sbb lods (bad) dec cmpsl mov jg adc mov mov xor out add pop es mov or sbb les leave fisubrl mov jl cmp inc sti add fisub (bad) sahf fisubrl clc adc dec sbb push mov dec lahf xchg sub mov mov outsb std pop mov imul jno movsb mov jo or mov popf cmp (bad) int push xchg jo lret fs push mov stos notb xchg in iret jle or insl pop aad fimul cmc aad lods pushf scas push lret (bad) mov sub jl cld mov sub inc push mov lret sbb cmp sbb inc das (bad) cmp addr16 jno pop jbe int3 push jb decb ja imul mov xor or jmp pushw out xlat fldcw jb (bad) lock test fnsave sbb out out shrb popf cmp iret or mov cmpsl push adc and dec in cmpsl add ljmp repnz sub sub cmp into mov cmp push loop test test rolb mov je dec and jp rorb fst (bad) cmp mov aad incb or ja cmpsb lods pop es sbb leave test sub in jl xor pop loopne sbb xchg jno mov adc sbb jne in cmp insb and test push jne lods add mov enter mov mov hlt adc in aad (bad) faddp data16 xchg pop int3 mov pop push nop hlt or mov xchg mov (bad) mov and fldenv jnp xchg cltd movsb jne daa rcll fidivrl fs mov fs pop icebp xor loopne cmp mov cmp or adc rclb dec aam jmp inc sub add popf push fiaddl xlat (bad) lret push dec ss lcall xlat xchg xchg or xor xchg in xchg pop cwtl (bad) aam fdivrs jnp mov shrb in rol sbb push out (bad) xor (bad) addl stc bound icebp lea adc add cmpsl push jle fsub ss icebp push xchg jl or sbbl mov adc data16 jbe imul into in mov out mov fs cmp or cmp mov dec int3 jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp (bad) iret mov mov sbb sub repnz decl push jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 (bad) sub xor lods adc mov int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 and faddl dec sbb repz dec std decl ss decl ss decl ss decl ss inc iret popf sub cmc xchg lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 xchg add mov sti movsl pop sbb fistl jmp mov js stc decl (bad) (bad) mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 (bad) sub hlt xchg lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp (bad) sub test lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp (bad) sub aas ljmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 (bad) sub push test jmp pop fs mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push jns loope mov jmp adc add std dec int3 int3 int3 int3 lea jmp lea jmp xchg sub mov sti movsl pop sbb fdivr decl cmp decl fdivr decl fdivr inc iret int mov xor lods adc lods xchg dec int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret (bad) iret mov jge test xchg mov insl orl adc inc in dec xor and inc loopne call add ret push mov push call add ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 and faddl dec sbb repz jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp xchg lods test mov sti movsl pop sbb mov std inc in dec mov jmp int3 int3 int3 int3 int3 int3 xchg dec scas insb pop mov (bad) dec sti movsl pop sbb jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp (bad) sub aas fwait test mov jmp int3 int3 int3 push mov push call add ret xchg pop test movsb pop dec mov pop sti scas lea movsb std lods adc jno std inc iret (bad) lock xchg mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp mov mov inc xor mov jmp lods movsb and scas je fisubl cmc test dec ljmp test mov enter sar mov fmull stc adc mov xchg mul fisttpl jb subl arpl nop add sub mov daa test mov mov push ja or inc fs mov pop sub fisubr mov push cmpsb inc mov scas (bad) lcall adc xchg aam and xorl xor mov mov repz mov sub loope pop and mov and dec lds inc test jle push lret int3 push jge mov adc pop add dec adc mulb add jp add lods sbb repnz mov mov jns or pop xorb scas sbb adc imul sbbl lds adc adc cltd ret mov xor (bad) fwait mov xchg movl jmp in mov int3 jo pop out test jb sbb fist and aas scas ljmp fldt repz stos cmp adc cmp mov repz jns or jp jle stos mov sbb jl mov mov fisubrl pusha es jl mov shll push xor xchg pop sub rcll test (bad) jmp sub fsubrp (bad) icebp inc jge aam (bad) in lahf aas addl dec mov out dec aad dec pop or add cmpsl xchg jge,pt mov cld repz (bad) cmp inc cmp cmp xchg sbb or mov add fsubr sub test xlat cmp xchg mov std xlat xchg pop and mov add adc (bad) ret inc (bad) jne rcrl aad xchg xchg and adc fwait in loope cs icebp jbe and and inc push mov push push not dec addr16 pop es repnz and add mov dec mov loopne adc sub xchg cld repz adc sbb lret movsb loop je test roll scas adc xor mov mov jmp inc inc test fs xchg mov jne push xor adc cs pop es mov repnz inc pushf lea dec mov xchg ret cmpsb mov daa popa jle push inc shrl mov sbb aad xchg push cltd adc sub pop sahf cwtl into data16 sbbl fs or pop lret lock adc cld jno and aam mov mov and sbb or inc jb inc add pop test scas and std insb (bad) (bad) (bad) inc in or xchg mov push mov insl js out or mov xlat repnz push (bad) fs insb jp pop ljmp cmpsb and mov cmp xor insl push or leave push and sub ret fldl2e cltd scas xchg (bad) daa aas loopne cmp js mov mov faddl cmpsb sbb ja lock lcall push jecxz fldcw mov and inc (bad) out sub jae xor cmp inc cmp push xchg int and adc nop dec inc sub cmpsb out sbb mov movsb mov push cmp jae pop adc pop (bad) andb jno adcl lock mov cwtl cmp test stos xchg xor adc xchg add adc (bad) push loopne jns loop adc or or andl (bad) pop pop push mov push stos jg dec scas and in leave or jb aam pop inc sbb dec (bad) jmp sub in sar pop fmull (bad) rclb push xor mov and adc jmp inc out aad mov int3 dec enter jne sub xor sub add mov dec pop add jl bnd jo insl lahf cmp mov push xor mov aaa gs rorb push jbe stc dec xor sub dec mov ljmp mov xchg ret pop jnp inc adc or inc push aad push fldt jbe imul xor fistpll fs cmp or cmp mov out cld mov push mov inc adc cli mov xchg push and and (bad) xor scas outsl xchg dec inc and iret fstpl jp cs mov leave sub test das bnd outsb cltd ds loopne loop push xchg jo divb js pop aad push and inc xor adc xchg fstpt stos adc sbbl push xorl aad enter xor jno jae divb lods popa (bad) inc jle mulb lea mov push hlt cmpsb sahf cmp jne adc cwtl cltd imul mov sbb insl cmp clc loopne shr or daa ret int outsb scas ret or sub decl repnz fs ret xchg mov pop fwait andl lea push push cwtl bnd or inc pop cwtl repnz ret adc cltd daa inc into xor and sub cltd sbb dec loop imul orl push js pop fs loop pushf arpl rorl loopne mov fadds pop sbb aaa push mov scas iret inc icebp mov test inc cmp mov xor sub movsb into loop sub pop pop add mov sbb andb es add std inc pop es cld jge (bad) push fdivs xor adc xchg adc jno sbb fld and fwait xchg push pop xchg xchg fbld imul jg mov addr16 int3 and mov jecxz enter sahf pop push mov mov dec orl cmp lcall in xor or mov or clc inc jle fstpt cmp pop (bad) jg jbe jae cmpsb dec icebp jmp int mov pop pop push dec loop push jo aad stc lea test adc shrl inc test jb push jg cwtl sbb add loopne or and stc loope fwait hlt cmpsb push mov adcl daa mov sub xchg scas mov cmp arpl pushf in lret outsb into lret divb mov test inc mov add aad in inc mov xchg popf ljmp jg mov inc les cmpsl jns adc sbb sbb test movsl mov and dec push repnz and dec into add jmp and jmp (bad) int3 pop ficoml and mov adc xchg (bad) das gs and (bad) ljmp movsb unpcklps roll dec mov sbb push iret add in popf nop sbb push jnp lret jmp hlt sbb addr16 js stos sbb or pushf mov fistp mov sbb (bad) cld icebp push dec aas std push (bad) in inc mov out push xor loope into dec xor cltd popa fnop mov xchg xorb enter gs fbstp sub mov jmp dec jmp cmp out lds popa mov lds and jecxz dec pushf xor dec (bad) lods xchg mov gs cli enter xor fs xchg push add mov pushf xchg jp hlt or pop jbe pop mov jns cld push push jbe (bad) hlt test cwtl fidivl xor inc pop jnp mov xchg scas iret add stos dec jg sub gs (bad) inc cmp adc push xchg call mov and mov cwtl sub imul xchg xchg aad in popa pop shl jg popa jmp ret inc (bad) cs std (bad) lret arpl jp sub push mov fmul xchg inc pop push jmp inc push loope inc in mov dec adc mov jp pop mov mov andl adc xor lods test out das inc or ret pop jle in sub dec or sbb xchg pop mov fisubl pop sub iret imulb jnp pop add mov js sub cmc dec lea daa adc jle mov ret cmp popa push aaa fisubr test imul jnp sahf cmpsb sbb inc or outsb jg fnstenv jae cli iret into (bad) outsb push std das (bad) jecxz ret aas dec mov rcrb dec push popf (bad) push or loope movsb inc mov in sbb in in stos mov add and scas mov gs pop popf fstpt inc out aas inc pop in inc sbb mov call (bad) fbld or jp xchg add scas iret cli lods push sub and popf ret or inc (bad) dec subl sub es dec test pop fsubrl nop pop xor lret scas mov out sub push jb adc out popa inc in add roll insb and inc jae inc sub add dec push mov push cmp xor xchg (bad) or ret or lds and ret dec lret dec cmp (bad) cmp and ljmp stos jne xor nop add inc mov cltd in mov ja jmp xor cmp xchg inc sub fsts or xchg mov movsb pop or mov pushf add xor push push push pop xor pop call cmpsl cmpl cmp dec arpl jecxz daa cld es add movsb mov imul ja push sbb jecxz dec ficompl dec and aaa loopne mov (bad) aam jno add das mov and in clc mov andl inc xchg lods pop ret and pop std stc mov test sub lea pusha lods mov pop shrl fldenv loopne add jle add subb xor ret (bad) mov mov das (bad) aas jnp in cmpsl ret mov jns inc push mov imul push movsb cmpsl imul inc repz mov test or cmp push cmc or in mov ret sub jmp xchg pushf aam push mov push push sub pop adc cmp cmovge je add and pop hlt fwait out xchg pop loopne adc push aam xor dec pop outsl sahf sbb lods leave enter adc je sarl mov les (bad) adc or orl je std jmp push fisttpll lods das sbb notb sub adc jecxz loop jbe pcmpeqw push jp mov xor and and gs cld cmp aad aad sub and or push xor mull cmpsl xor mov sarl imul jbe mov int jb imul sbb popf push mov push jecxz fwait iret pop (bad) and push or push lahf enter fldt fildl stos adc movsb push mov pop lods mov mov sbb rorb xor inc ja jp imul movsl sub fist inc inc pop adc insl fsubrl inc mov stc pop fnsave shrl jns mov sub cmc leave sbb loop in test mov or adc fcoms push jb call loope (bad) lea cmpsl and aad xchg aam cmp add nop ret xchg jnp gs std cmp sub xor repnz xor lods bnd pop jge sbb aaa ljmp mov cmp (bad) cmpsl mov mov jae fnstsw jle ja dec and (bad) das fiadd loope aad loope clc pusha gs sbbl data16 cmp xor push dec (bad) lcall push (bad) icebp push pop mov cmp inc sarb pop cmc and rcl mov and add aam lock mov out pop sbb sbb sbb aam mov inc xchg push push jge cmp inc sbb mov mov mov fs test dec pmullw push push add sub movsb sub push addl jmp jne rsqrtps cmp pop push pop cmpsl (bad) mov sub jnp fs mov jecxz adc mov adc das cmp pop adc pop xchg or jne lods jo inc push clc mov or or fnop in sbb lods test jg pop pop xchg stos lea aas outsb loopne fucomip out cmp (bad) rorl pop scas sbb int sbb push ret inc cmpsl mov or or pop and sbb sub imul jecxz dec mov aad ja loopne out and mov cmc repz hlt pop push lcall ret jl jae push xor gs ljmp dec in mov dec repnz movsl repz sbb popf inc push sbb cli nop dec mov cmpsb sti test (bad) push movsl das aam mov xorl jmp sbb shrl inc fbld cmp cwtl fldl imul and jb or pop cmp inc mov sahf pop loop ljmp sbb lock ljmp push mov sbb imul sbb (bad) pop fdivrl mov pop mov in jle inc arpl mov jae (bad) out push mov stos aaa adc in dec jl sbb jae sub lea push ret lcall movswl bound sbb icebp pop ljmp mov xchg inc push addr16 iret push enter push or stos sbb (bad) xor and push jb and adc adcb push or es cmp inc leave js xchg addl push (bad) or dec decl std xor aam pop ljmp outsl addr16 shrb call ja sub push sbb push sbb mov cwtl loop pusha push fincstp cmp dec adc stos inc push fmull lods mov lahf das mov scas scas sti push jbe xor insl in (bad) fbld (bad) mov mov dec and mov dec jmp cmovl jge es xchg add or pop addr16 adc mov pop or and push or sub adc test mov fisttp mov and idivb push mov or in jo dec dec out faddl fcmovb lea add jae or dec adc test repz out gs loopne lock cwtl adcl rorl sarb xor mov int leave fcoml mov out adc push je sar fnstenv (bad) xor (bad) cmp inc pop xor (bad) fwait scas push test mov mov cltd movsb xchg (bad) cmp jg xchg jns cmpsb test fwait pand mov xor cltd out sub pop (bad) mov jge lcall adc cmpsb pop adc imul daa (bad) jb js xlat xor aaa in int sbb btc jno push es inc jp adc (bad) lea imul lret dec pop and fs aas sub xor inc leave xlat leave mov sub dec fildll pop lods movsb lods movsb push dec in jmp mov lea mov xor call mov jmp (bad) aam leave xlat leave mov sub dec fucomip or mov movsb sub scas je push and lea mov xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp xchg mov mov inc pop popf hlt mov push sub push lea sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp lahf xor mov pop inc adc or and fwait mov dec (bad) pop mov sbb push jg push roll rcr mov sub jge mov (bad) cmp cmp dec dec cmpsb xchg jp (bad) (bad) mov aam xor ret out cmp fs and bound cmp pop test call lods frstor push cltd sar mov dec insl lcall mov (bad) adc test (bad) int3 jl (bad) jge std xchg ss imul lea inc loopne int in push push insl mov jns mov sti fistpl clc stos and std aas jne pop sti sbb test dec dec push mov sub mov mov mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 cmp xorl cmp js cmpsb ret adc jae inc or pop fsubr lds push cmp in push test mov adc xor imul mov out push ret dec push loop mov add adc js sbb sbb push jae nop dec sti ss push bound pop xchg cmp test pop jg mov les adc inc dec adcl mov mov test add mov test jge and rol icebp or sti inc push lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp xchg inc mov dec pop dec aam cmpsl mov lcall adc leave jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp daa ret or jno dec jle adc pop sahf in sahf cmp push popa rclb es out jno and mov imul (bad) mov and outsl cwtl mov outsb roll push ret sub xchg add shll movb lds hlt inc push scas cwtl test daa sbb lods pop sbb mov stos push pop (bad) repnz repz test sbb popa mov sub fsubrs or in add ja movsl je sub mov leave repnz (bad) movsl mov add jno dec push push lock push sub push pop or in pusha lods push outsw xor das or mov push and xor (bad) sub lahf or ret push and cwtl dec sti xchg rcrl pop mov outsl negb js mov mov push imul test xchg cwtl mov dec repnz jne repz loop outsl pop push jecxz (bad) xchg sbb in out push stc add inc call sub mov jae jbe sbb jle subl lret push mov fwait mov fidivl xor lods sahf shl cmp in adc icebp xchg xchg fcomp or dec dec outsb adc test inc out cmp push lods pop outsl jmp pop in sub clc adc out inc dec mov cwtl js icebp sub mov pop xchg stos cmc or mov (bad) sub leave mov sub mov jge cmpsl cwtl xchg xor ja repnz insb push fsts or inc imul dec xchg mov aaa cmp pop xor std scas int push repz mov ds xchg test mov mov leave adc push push push repz push inc lea add sub mov lret sbb scas loope xor scas pop mov cwtl arpl xchg pop fmul (bad) in ds fdivl imul xlat push (bad) pop popl popf mov cli out inc stc xchg sbb pop rol icebp pop jno cmp lock mov cli and jbe xlat idivl imul jno,pn ja shrl xor dec into sub push adc mov cmc ret clc ret push idivb mov add pop cli inc int in sub mov nop sub test (bad) dec in nop push xor push rol je mov xchg sahf pop mov mov adc aas xor xor or hlt cmpsb in push xchg push mov pusha mov cltd lret jp out cmp lcall ss pusha cmc push jmp in jecxz mov xor jb out (bad) xor mov ja xchg lahf in loopne mov addr16 xchg pop push and adc mov mov clc rcl add pop adc sbb subl loopne mov sti pmulhuw or (bad) cmp adc mov loope dec and sub jmp and (bad) call mov mov dec mov pop fs test xchg push aad gs out jle dec adc enter (bad) xchg xor push aaa call jne sub dec lea iret ja stc sbbb sub jnp es in in mov cmp (bad) xor jae jle cmp push stos pop mov shll push ja int3 jp pop mov fnstcw sbb pop dec adc push fsubrl mov lds cld push pop scas xchg jns movsb fmuls mov or sbb adc movsl dec cwtl scas shr push xchg notb xchg fisubr int3 sbb icebp adc loopne jg loop add mov lahf adc js (bad) mov aam pop lods ficomp imul mov test jl sub mov pop mov popa xor xchg adc xchg fsts rolb inc push lcall ret daa das push xor mov adc and mov outsb rcll jg mov popf mov mov pop mov and mov dec xlat pop jae out mov push pop mov pop test push or jl or (bad) adc sbb pop xchg in fs xchg cmpsb cld mov push or in lret roll incl arpl pop mov xchg lcall inc clc mov adc nop stc adc pop dec aad in cmpl xchg sbb jmp int3 xchg xchg cmp nop mov sbbl inc ret pop aad pop js and lods mov cmp test roll es pop fiaddl cwtl inc insl dec imul xor push outsb jl lods sub jnp add out int cmc das adc clc jle push xchg call push sbb loopne js or mov rcrb xchg mov aad (bad) mov call dec adc pop cs and outsb in or scas (bad) lret mov es cmpsb xchg movsl adc fidiv mov ret out inc sbb push push cmc mov dec pusha mov test ljmp aas inc and mov add fwait call cmpsl js scas add or rol out xchg sahf or xor inc adc pop cld repz push sub xchg ss sbbl dec rolb lock (bad) lods data16 aas test into and test xchg andb dec ljmp scas push cmp mov sbb xchg adc call scas fnsave push cmp xor shrl mov rclb jno insl dec jae popa and dec aas inc sbb insb pop aas sarl dec or jge or cld es dec imul jmp mov movsb rcll push fsub inc jp push fmull hlt stos (bad) hlt cld mov test dec es pusha outsb mov fcmovne sub push xchg xchg sbb and mov xor fucomp push add xor outsl dec mov adc adc jmp (bad) pop push sub mov xchg and mov outsl add lds out adc iret movsb stos (bad) out pop imul out insb add xchg orl mov push ret mov jo repz inc hlt (bad) jmp in ds ficompl divb out fcomip shl fwait hlt cmpsb push mov dec (bad) pop (bad) insb add or loopne fcoms pop and je das aas push mov jmp add aas mov ja shr sti lods pusha inc cmpsb inc push jno shll sahf sbb jge inc cmpb lret gs clc rolb jp inc inc push jo out out cmc outsl xchg mov push aad cmp (bad) adc movsb xchg jne adc clc js xchg pop (bad) mov daa dec adc jo jge shr movsl mov jae mov ja jmp outsl test test or inc in inc (bad) test aam mov ror jmp jno dec (bad) xchg adc inc dec fnstenv pop es lahf cmp dec inc repz js mov inc xchg mov mov fwait mov cltd jg xchg test fcmovu adc insb cmp lret pop adc cmpl lds cwtl push insb mov and sahf ss mov inc outsb clc gs fs call out pushf repnz push jmp cmc xchg mov sub jmp sub mov aad movsb bound (bad) fdivrp sub in cltd pop iret outsl imul cmp or dec xchg scas or adc pop push or pop aas xchg rolb mov xchg push or dec aaa stos jmp mov mov movsb inc aad sbb mov into jbe fcmovnb sub mov and mov movsl xlat push mov sub int dec and push or (bad) ror or xchg push add fsubp rclb sahf or ja mov mulb jo push xchg outsb inc inc add test sub arpl jo or adc (bad) rclb in cmp aaa xor pushf imul lret xchg daa out or test push jae roll je xor inc cmpsb cld cmc repnz aaa inc xor js mov mov mov mov (bad) int3 lahf pop mov in xor add push dec je rcrb sub dec mov mov dec sti mov push sub sahf dec mov loop es adc mov cmp divl add jo aaa enter ss fdivr pop test (bad) fiaddl outsb push iret repnz mov and inc or mov mov flds mov fadds popf es loop sub test pop popa pusha ljmp pushf or arpl xchg shll mov test arpl add mov mov movsl aaa mov cli cs (bad) hlt (bad) and push and mov or scas dec pinsrw mov mov push mov rolb cmp mov xchg aad rcrb sbb ds (bad) int3 add lret pop aam mov sub mov fcom sbb dec out les sbb lea clc adc and pop fsts fwait push dec call push (bad) out inc add mov cmovbe mov test inc pop push or sbb xlat and jb (bad) loop dec push cmp inc xchg scas xchg loopne lcall push mov jge lcall sub add mov rcrl cmp xor adc or jae lock aad (bad) jmp cld sub mov arpl lcall outsl mov dec fistpll sti cmpsl mov cmp xchg test ret int pop out (bad) fs mov push add or inc mov mov js fisttpll add cmp cmc mov mov jb mov sbb jnp enter xchg inc push sbb aaa fisttp add loope das (bad) icebp dec fbld pop aas nop mov arpl mov jae iret mov mov loope cmp pop xor xchg repz popf push dec cmpsb push push pushl pop dec dec pop in sti ret shrb jb pop xor loopne jne jno or xorl sbb outsb jb int3 roll inc loopne jge ret loopne lods imul mov ljmp test add push in push mov sbb pop cwtl out xchg sbb or xor add add adcb sub pusha mov cmp jne clc fnop mov push mov (bad) test xchg outsl repnz test inc ljmp ja mov mov daa mov xchg mov push mov daa sub aam lods outsb xchg inc gs mov sti push cltd mov ret sub stc mov pusha (bad) pop jae scas daa (bad) cmc lcall add in rol ss das sub jmp ljmp fcmove shr in hlt popf ds sti (bad) ss push inc mov adc mov xchg sbb xchg clc dec stos ret loope aaa push (bad) sbb adc pop dec das sub adc mov xor sbb xor stos jmp lea lcall daa sbb add adc dec cmp sub cld adc test push ficomp jmp int3 in jns loope push xchg push lcall call cltd ret push dec xchg mov stos jbe insb insl (bad) xor (bad) loop loop xor or fs pop adc or dec push cmpsb mov push lret scas scas cld ret insl repz scas dec mov xchg fs pusha cld or idiv mov pop shlb sub inc jbe dec es iret sbb jp push and les pop push pop mov insl mov dec cmp jle dec push xor add mov gs arpl mov das not mov mov mov mov jbe (bad) xor mov aad xchg inc cmp div test push mov fadds xor (bad) pop gs orl scas aaa or xorb pop mov pop xchg cmpl mov movsl mov repz jmp add mov mov xchg jbe roll popa mov push int3 test jb hlt hlt sbb pop js stos fcmovu add lods mov push ret imul adc adc lds add mov enter shrb jb sbb cmpsl mov loope (bad) outsb xchg and mov sbb cmp jae pop mov (bad) or aas std (bad) das mov add mov pop fdivs jbe xlat mov jl adc aad add pop or jns enter inc jl sub and loop add mov sbb mov jmp xchg xchg jne ficompl fbld or fstps mov andl pop cmp mov xchg and nop repnz (bad) pop addr16 leave gs adc inc shrb pop ljmp (bad) addr16 pop arpl push xor idivl jnp cs fsubl popa cld (bad) nop and lods pop std jg dec (bad) mov aas sbb inc mov xchg push test xchg dec cltd or fstpt xchg lret into mov xor mov cmp sbb (bad) mul xchg popa jg cmp dec lds or or inc adc xchg xor mov fwait add sahf or add and int3 fucomp cwtl push jno or loopne xor add enter dec xchg (bad) incb adc cmpsl lret sbb inc add mov inc dec clc sbb lds fcoms les icebp sbb mov xchg es ret lcall jns jg lods mov aam std clc out outsl ds je movsl arpl cmp lret mov push pop ja dec mov ret test sub push xchg xor outsb push or push addb pop sub loopne dec aaa inc lock or jmp repz pusha (bad) sti sbb aaa sub mov and sbb popf in jns or jbe stc out and mov mov adc cmp dec insb lahf mov xor imul xor scas js shrb fsubrs data16 (bad) inc pop jo jns mov idiv cmpsl xor daa aaa imul jmp push mov dec leave dec adc sub ds in cmc out mov cmp cmpsb xchg mov push (bad) popf dec jmp cs cmp mov xor inc xor sbb xchg test addl and sarb ja movsl rcrl jns xorl hlt and ret stc add js cmpsl fwait scas adc push lock call leave ret sbb push scas jbe in adc xchg or scas jle or rcrl in jo push movsb push out sub sar (bad) mov xchg fldl rcrb ljmp adc jle push and cltd xchg jo dec mov das cmp jb fisttpl mov test and jno push pop imul test cmc sub (bad) push sbb xchg sub sub push outsl pop pop and sti mov les adc cmp ret inc add jecxz adcl ss pop ffree mov add or jno repnz push push sti lock jge (bad) pop pop rep dec mov stc lds jle sbb sub jl jne fwait out fwait mov test sbb (bad) xor vcmpsd or bound adc aad cmp pop jb fwait clc iret (bad) das mov clc adc loopne daa nop insb imul (bad) loop in sbb (bad) aad cli btl mov out xor ret push adc movsb scas sbb (bad) push xlat inc shrl dec bound arpl loopne inc mov pop adc pop inc cmpsl xor push inc pop inc inc repz push lock and pushf or xchg jnp rcrl mov cmp mov and dec mov into ficompl scas cmc pushf mov (bad) (bad) cmp insb inc xchg fs mov insb mov int loope push (bad) push xlat fcoms pop or inc dec les popf mov ret xchg cmp jns and andl or in (bad) out (bad) loope adc stc fsubs jp or jg push out pop push fldenv std (bad) jle mov ljmp cli dec pop push lcall jno and outsb adcb hlt sub jnp lods les sub hlt ljmp cltd or push xchg dec mov xchg aas or adc insb loope mov lcall push mov into sbb pushf sti cmpsl or addr16 mov test adc pop stos lcall shrb add and lahf insl pop xchg (bad) sbb mov xchg arpl test jl mov loop mov test stos jns fsubs adc push arpl push repz xchg xor inc xchg movsl and test sbb in scas add cld jbe movsl cs mov add dec mov inc jmp push roll adc mov add jg outsb (bad) imul sarb je sbb sbb push push xor rolb imul jp repnz (bad) data16 adc cmc popa (bad) int3 lock (bad) mov xchg push mov aas (bad) repnz inc xor es jmp xor adc je lea (bad) ja mov and jmp addr16 sbb pop outsl add enter and add mov pop adc cld pop pop xchg inc in cli jmp sbb addr16 pop pop jp jle inc pusha or sub mov and inc pop mov xlat lock jge dec sti cmp movsl cmpsb js loope cmp std xor or mov fistl out push sbb imul scas dec mov mov mov xlat sub jl sbb nop jle lret cmp jo lds in mov loop testl sbb test in fiaddl add scas jne mov adc sbb cmp add cwtl aad (bad) pushf je add cmp pop jnp nop ret imull insl add or fldenv dec sub dec sahf sub jecxz xchg sub xchg xor and mov not mulb mov pop fdivs gs cmpsl add pop jne pop add cmpsb fwait adc mov daa jbe pop sbb (bad) int out cs in sbb test jne lods sti sbb xchg inc stos (bad) sbb xchg cmp jno mov bound xor (bad) xor les data16 xchg push push (bad) mov mov into pop pop addr16 aaa fmull pop (bad) pop fisttpll dec adc cmpsb cmpsl arpl push jmp mov jne mov daa into add mov sbb fsubrp jge js inc iret dec js mov jmp jbe sub xor jg hlt cld xor cld jnp mov or jmp scas rcl mov test inc pop pop mov repz cmpsl mov push orl mov mov rclb lcall adc test addr16 xchg cmpsb push je adc and repz inc hlt sbb cmc push inc outsl out cli aad rcll sub (bad) mov and sub jp pushf mov fisubl adc jle call jne mov push mov rcll test ret dec pusha lahf adc in cli movsb shlb add dec and fisubr outsb (bad) mov push (bad) je pop pop ds pop enter mov sub mov inc sub dec enterw iret shlb mov divb mov add inc pop jp pop enter push iret arpl (bad) or mov xchg clc loop adc pop sbb icebp xor push sub mov pop and ret mov mov and sub dec or fcoms pop iret js ss mov mov fsubs fisttpll and rcll cli insb into ror jno mov scas xchg (bad) sbb mov cmp fimull ret imul lea push dec xor mov xor repz inc enter in fs incb sbb or pop fiaddl fisttpl std int3 pop mov call shl inc mov mov addr16 cwtl push lcall sbb testb dec xchg xlat mov idivb adc pop sarb xchg rep arpl mov lahf pusha mov out mov pop jns or rcrb and and dec adc or mov aas mov ljmp jne lods cli dec mov scas push in sbb sahf jnp sbb lock mul sbb push icebp sbb js xchg mov hlt and addr16 xchg jecxz and lods mov and cwtl push in fiaddl mov das sbb das mov jnp insb xor insb or or lds jno mov or or mov adc loope pop sbb sub xlat out ljmp sbb nopl pop add fimul imul and adc mov (bad) nop mov js aaa mov (bad) mov aad pusha cmp mov adc test mov test repnz or pop xchg inc lock jmp adc iret xchg add pop fwait testl scas pop mov ret les out push test out inc pushf jnp xor push imul xor popl push dec mov repz mov adc int3 fnsave cmpsb leave subl into sbb inc lea push mov and xor test pop xchg test ret fwait mov stos jl shlb sahf int3 push (bad) into test scas inc (bad) mov sub rol mov in xor das xchg (bad) fldt inc outsl add mov das lds out repnz rcll out mov addr16 jg cli ja and clc test out jbe add and dec insb ret lret rclb stc rcr pusha inc int pushf movsb add push fisttpl std test imul inc jl rcl ret jo xchg and sub xchg (bad) dec jmp inc fcmovne pop inc (bad) xchg fcompl hlt sub inc mov mov cmp push push ss cmp test xchg stc sbb sbbl adc or xor cmp sbb cltd adcl pop cmp sub jmp sbb fild test dec mov push mov adc and or and shlb sub test fs in mov mov xchg js adc js push lods cltd jo leave rorb mov imul sti ljmp fcomip ret lea and stos jp stc iret iret pop frstor popf nop mov mov enter pushf stos (bad) adc xor movsl cli repz pop in pusha jg cld lcall cmp in (bad) push aaa xor mov lods cld test jno es push mov add cs ret data16 gs sub es aad mov inc test inc inc (bad) icebp out mov jmp or jne jg lds mov push sbb or repnz sub mov push out je adc sub xlat sti (bad) pop or in or outsb jge adc rol mov orl mov add es dec add fldl test or in push xchg outsb xor jns cmpsl mov addr16 out jge int or mov loope icebp push push imul jo lcall xchg mov das lcall xchg mov insl aad je or (bad) xor mov and int int (bad) mov pop xor mov call aas adc imul add mov (bad) cmp xchg or lods push dec mov xchg out lret jb (bad) scas lret lods jnp xchg push inc lcall (bad) xor push pop (bad) pop xchg insb mov adc xchg stc or test fwait jne mov outsl push bound pop sbb mov popa xchg outsl jmp xchg lret push (bad) inc sub sarl popa cltd mov lds and sub xor lcall es nop (bad) lret (bad) dec lcall push dec jns imul jecxz pusha dec mov in sbb movsb xchg stc loopne dec add out je push pop testb jp lods jge ja jecxz or sub add imul lret imul xlat enter cmc sub testl and (bad) mov jno lret xchg push cltd mov sahf or sub push out inc outsb rorl in in les test xchg lret fisub mov fwait adc push dec aam xlat jp push and jmp xor push test sub pop sbb std sti dec xchg outsl rorl dec pop jg clc fidivr inc push bound cli mov in popa lea pop lret cld pop es push iret int movsb jg cmp lcall mov loop stc mov sbb jmp mov repz jmp divb xchg mov popf fucomp call or inc add inc fistpl insb push rclb dec pop sbb dec mov pop xor add xlat push pop std iret ficompl xor inc and arpl das das out jge int3 aam fisub adc lahf ret in sbb jl pop ljmp jns inc mov xchg iret lahf subl or in sub cmp or adc out inc inc dec gs cld jl pop ret outsl inc scas sbb adc push pop pop je sub sub mov fwait jns dec (bad) cmpsb xchg fwait mov xchg subl add outsb sar jb imul sbb mov cmc imul and and cmp jmp imul inc popa or (bad) dec cmp ret jns dec shll push mov inc xchg shrb mov sbb xchg movsl or inc mov in xchg test (bad) dec lods idiv xorl js pop data16 or jecxz xor cmp (bad) in pop jg stos enter pop add scas ss (bad) jl (bad) stc mov mov dec mov rorl popa in adc mov (bad) xchg jo mov ja pushf lds jae mov adc cmp pop shrb (bad) mov das test test jnp (bad) pop jnp stc (bad) sar cmp dec push ljmp stc cmp mov sbb inc add sub mov and inc add mov mov jbe scas lahf pop cmpsl setle je jg or xor movsb lods sarl cmp mov push add lock shrb and sub pop push inc mov adc sahf in jp xor jne add xchg outsb adc pushf cwtl jnp sbb lret enter dec dec mov jmpw sbb std or dec xchg mov push dec call inc shll xchg lret loopne cmp insb pop mov adc xor icebp test or rorb (bad) sti int3 inc inc and movsb test sub loope jmp jecxz outsl lahf imulb enter pushw adc outsb jl xor fcompl push push or inc cmpsl inc lret xchg add push loopne stc and lock push call divl arpl aaa popa or push and mov pop and iret xor cmp xor test jl pop mov rcr popa cmp fbstp icebp jmp push rep xor xchg cmpsl call jno or hlt xchg aad sbb jge stc pop int movsb daa mov cld adc mov stos rorl int3 push dec adc sub xchg pushf insb es gs nop mov add mov jg out add add insl adc jmp push repnz sbb adc adc pop cwtl shlb add xor lret push add out rolb cwtl outsb daa pop pop movsl mov sbb sti int3 daa sub pop cmp xorl cmpsb xor jnp fwait dec lods lahf pop mov lock xchg mov pusha push push shlb xlat ret pop dec sub sub jmp lahf cmp (bad) or repnz iret insb loop mov inc dec nop (bad) shr test loope mov (bad) dec xchg stos push minps test fadds dec push xchg rcl out xchg xlat xchg fcoml fdivl push push mov push adc daa ljmp add mov jbe jbe cmp cltd jae adc and cld pop mov and movsb into pop clc fisttp stos mov or mov mov ret xor or (bad) outsb sub mov inc cmp faddp repnz xchg movsl dec pop imul repnz mov and add test jnp and aam mov jb ss aad data16 loope dec movsb imul cmpsb fdivl faddl cmpsb jp cmc aaa jge shll fnstenv pop xor mov (bad) xor sti lock sub mov (bad) lods ljmp insb mov jne dec sub mov dec (bad) mov in lcall inc dec pushf test xchg push lods lahf outsb decl es in hlt loopne ja es (bad) dec mov cmp imul adc jnp insb pop addr16 push sarl icebp inc mov stc mov push inc cmc scas (bad) ds sub (bad) mov jnp mov sub xchg cmpsb scas cmp mov mov mov fwait jbe ret xchg add ficom add mov std pusha jmp adc adc push xchg inc ja outsl mov aaa cwtl mov and decl fwait mov cmp aad data16 xchg pop pop mov js xchg mov sub xchg mov mov mov and xor mov repnz (bad) dec icebp iret mov fdivl xchg jge bound dec (bad) mov cli and into mov lods jmp cwtl daa outsl popa dec les mulb test push add sub sti jl das mov inc or mov ror cwtl inc ss outsb (bad) pop es ljmp inc in aad into dec imul or aad outsb repz jb lret loopne lods cmpsb add in jno add popa fwait xor or pushf es cs dec sub xchg stos hlt outsl nop arpl popf lock sub adc aad call sub xchg roll add jne std sub push ret ret (bad) dec test adc pusha mov sub iret fsubr add mov (bad) leave fucomi shrl mov addr16 mov outsl mov cld in dec inc dec adc imul cmp enter pop add mov add pop test nop cld loop (bad) cltd jns and repz movsl scas movsl fidivr cmp fdivr jp,pn stc movsb pop mov nop shll lods mov shrl imul push mov fxch addr16 ficompl ficomp sub add push push or push cmpsb jae mov icebp jl insb and add (bad) out sbb push xor sbbl sub dec xchg pop cmc xchg dec cmp jecxz pop cmpsl bnd mov clc lods jne scas adc mov imul push pop mov mov jge and test ds imul pop push data16 enter mov in sbb xchg pop jae popa sbbb pop clc fbstp cli js stc pop xchg pop adc ret ret (bad) jbe cmpsb cs cmc imul xchg cltd jmp add inc fwait hlt sbb push (bad) push insb dec addr16 imul jl mov outsb pushf fdivl sub out cld push cmpsl xor repnz inc dec sahf mov aam sub decb fs sbb sbbb ljmp test push popa bnd popf mov (bad) cwtl popf mov adc dec xchg dec imul dec sub arpl insl mov xchg xchg cmpl pop mov in out cltd pop test fistl mov in pop xchg mov inc les sbb jmp aad mov pop les (bad) mov mov rorl jb add dec mov out adc mov je cmpsb adc das push jb clc xchg and iret sarl (bad) xchg xor push hlt outsb sbb fadd pop lock pop lret cmp cmp enter arpl adc std dec dec lcall cmp lret scas stc sub ss push iret icebp push add sub mov (bad) gs das js mov insb sbb push sbb add inc je bnd jne fildll sub lret aad inc sbb push outsl mov rorl jae pop in xchg lcall jecxz mov les push mov xor sahf sub fiadd arpl daa and mov pop mov dec int3 pop pop addr16 pop cmp add test add push xchg jl pop insl test insl push inc je aas jecxz xor xlat call test sarb pop fwait mov sti push dec sbb jl imul lret and aad outsb jg imul xchg mov pop xchg mov fist cmp (bad) mov inc test dec icebp sbb enter push push mov rcrb inc jecxz pop enter cmp popa gs adc mov push pop stc adc inc lock sub mov subb xor insl add test stos and jns jg insl xor fwait ror lcall cmpb pop inc test inc lahf or jl fdivrs and sbb cltd sahf xor loop xor aam mov mov dec lock inc aas popa aaa pusha mov mov dec mov pop stos test das pusha pop push sub stos or xor sbb rolb xchg mov jb and inc in dec cmp bound inc mov cmp clc xchg cmp cmpl cmc aaa popa sbb lahf adc push aaa mov cmc testl in fistl xchg (bad) fst mov mov xchg inc jb or enter xchg loope lea mov or xchg rolb addr16 lods cmp push push inc xchg pop movsb pop cmp push test ds (bad) cmp fidiv push (bad) or test rorl sub bound mov jnp xchg and dec jp fcomps rolb arpl xor stc lcall jp dec or sarb pop sbb or cltd jb repnz call test mov mov daa (bad) cmpsb mov out imul sub insb dec pop pop (bad) iret lods lahf and mov jo ds addr16 jns pop movsb test mov jg test xchg sahf xor insb mov mov rcll imul xor push jmp adc leave add dec lret mov fmull xchg imul insb dec add sbb fadd mov push lock sbb xlat sarb mov bound out cmpsb imul out cmp (bad) pop dec inc adc fldenv xchg pop dec cmp mov and jge lret jge (bad) in cs or out stos adc leave pop enter mov rcrb push js jae leave pop addr16 adc and and test cmp mov sbbl insl fimull xlat pop dec push popf dec dec mov rcll push lret cmp mov cmpsl push mov and pop ret jne shr andb jp xchg (bad) xchg ds xlat popf aas cwtl xchg repz mov out rorb lahf push mov sahf sub iret cmp (bad) xchg add and les push lea mov (bad) data16 inc pop xchg mov mov sub push sub movsb aas imul inc nop cmp mov in fmull jmp add mov cmp adc mov jno xchg xchg adc imul je jecxz stos movsb adc inc cmp sbb cli fs xchg mov pop or int3 (bad) xchg int3 push or lea dec les jp jp lds mov inc jno loop (bad) pop stos bound adc add dec (bad) jmp mov (bad) cmp arpl push mov shrl inc es push dec xlat fwait rol mov mov cmpsb sbb pusha adc js inc inc clc sbb je cwtl cmpsl dec cmp fdivrl lea cmp pop mov jle xchg stos cmp adc outsl rcrl pop inc and (bad) mov ljmp mov stos enter cmp add and mov ret loope mov fwait jns test pop out or inc or data16 repz cmp push push add lea into xlat or push mov test cmp test out mov int mov push repnz fist pop dec or xchg dec xchg xor insl pusha data16 xor pushf (bad) out ret dec aaa xchg imul sub stos icebp push jg loop pop outsb cmp jae sbb fisub pop test mov xchg push and jge cwtl dec cvtdq2ps orl ret mov sbb imulb in bnd (bad) sbb ljmp xchg push xchg or cmp push and aaa sub push fldl daa jno mov xchg in icebp ror pop loope inc pop lahf iret shlb ds mov pop pop cmc bound cmp push jl clc into leave pop push jb add (bad) adc stos imul insb mov mov fistl ljmp int3 push cmpsb pop mov cmp xor mov (bad) adc rolb pop mov or pop mov mov mov mov mov stos xchg (bad) pop ss mov sub icebp ja cmp fiadd lahf pop cmpsl out (bad) jno ficoml stos leave rcll dec dec adc xor dec add inc xchg divb lret xchg adc addr16 dec push jge sub sbb rorb (bad) adc adc imul movsb or push inc mov push xor and fld sbb test pop lods jne lods mov jl push or sub sbb out lock push inc push push push lock dec (bad) repz scas andl xchg mov jmp push ret fwait insb cmp xor (bad) push or lock and dec arpl xchg and dec cmpsb pop jmp pop xchg mov jle repnz mov sub fnop adc or push xchg push push jp outsl test xor mov dec push mov mov cmp and pusha dec pop and ljmp cmp sbb je jne repz lcall add xor in mov pop jbe (bad) adc xor outsb andl fcompl sbb movsb pop add adc cmp test mov lea xchg shll cmp cltd pop mov ss cmp fisubl mov mov ds adc lods mov adc mov inc and pop das sahf fisubr int lock arpl insb push add in shll (bad) xchg sub mov out lods cmp xor cmp xchg mov jnp jmp pop rorl nop mov std sbb pop jmp or jne (bad) loopne jge jno mov sub shrl movsl add cltd mov fwait pop push cmc pop sbb jns (bad) inc xlat pop xorb dec jmp lcall fistpll test or scas jl cmovs dec cmp out xor out push dec fs push cmpsl fdivs push popf dec jl pushf cmpsb cli xchg jg and subb movsb push das (bad) pop adc dec push xor addr16 ja pusha add pop cmp mov test adc iret push (bad) and push xchg add or mov jecxz pushf adc popa mov pop sbb jne xchg xor push hlt cmc xor or in insl xchg sti stos add xchg out push push shll and inc out dec sahf (bad) mov and dec push popa jo fs or es pop aad fdivs sbb out dec add pop sbb std or adcl pop sub add push fcomps (bad) icebp in jmp pop test jbe scas mov pusha es test (bad) xchg xchg cmp sbb out jae outsl enter arpl sbb push loope je jecxz iret mov (bad) divl inc jg push cmp fisub xchg jp bound and sarl fstpl sbbb movsl push inc and pop stos push fidivrl jbe decb sbb lahf enter mov sub decb pop push jns (bad) rorl test mov les inc cmp pop insl push and loop lock lock movsb pop mov sub and stos xchg mov jg jb xlat or out sbb mov test and shr jle cld jmp in rcrb sub mov adc xor mov stc mov dec mov cli lds clc push or iret or loop lahf mov ret lea rorl mov or ret stc in out insb cmpsb pop rorb (bad) push pop out hlt sub and jno and mov (bad) dec pop int push push (bad) loopne pop rcll pop push lcall mov mov cli push repz adc push sub iret aad fcmovbe mov orl subb rcrb addr16 mov mov test addb jl in scas rcrl fstpt (bad) mov mov leave scas add mov xchg scas adc ds or xor (bad) jmp mov hlt or fldenv and jns mov pop xor hlt pop pusha mov mov insb sbb dec je xchg cwtl sti and fistl inc in mov push lret into lcall push xchg outsb mov idivb ret xchg mov and cwtl lret mov outsl cmpsl add imul cmp out fwait pusha mov lock int mov jmp out dec inc or flds cmp pusha mov mov mov pop cld jmp xchg dec ret pop inc hlt xor jp imul fdivrl out pushf (bad) lods mov sub sbb xlat pushf push cmpsb sahf lods pop lret lcall repz cmp pop scas or sbb pop outsl adc addr16 pop repz mov aas lea jbe xchg shrb jno rorl les cmpsl shlb adcl xchg sbb mov dec and shlb push and out dec pop dec push pop in loopne outsl and sar sub cmp (bad) push mov jl pop mov push mov pop std push jo dec pop outsb loope sub cmp and daa xchg cmp icebp cld jb jbe icebp push outsb shlb out or jno out enter sbb jb xchg xorl mov mov dec xchg es sbb sub add imul (bad) cwtl push mull (bad) rcl lds cmpsb mov lret out sbb fstp ds pushf mov add xchg inc (bad) and lea and frstor sub test stos mov popf outsb je dec jl push in cli xchg lds push jne (bad) addps inc repz add xor mov jmp fs fisubrl pop out sub lds cmpsl jae or jl outsl aad pop outsl test mov data16 pushl cs (bad) in mov dec int ljmp add ffree leave (bad) clc (bad) adc fldt or xor cld ljmp adc daa in sbb dec (bad) loope mov leave outsl lea lock lcall mov out inc mov data16 shrd test mov aaa jg,pt (bad) and push mov (bad) (bad) sbb test sub sbb jnp cmp push repz inc push jmp sub std and and inc add and jns add shrl push mov jp mov ror adcl jg fdivp pop cmp dec xor push test adc xor aas xor out jno adc cmp adc adc dec pop outsb pop or mov mov js bound inc xchg pop mov out fisttpl mov mov xchg les enter cmp in hlt loopne dec mov sub xlat mov in into fst push lcall or outsl mov roll pop xchg push outsb lea movsb loopne dec xchg sub imul pop out xchg sbb outsb out or cs leave dec loopne adc push mov int iret scas aaa pop cmc pop nop mov pop mov push lods ret xchg and xor (bad) jb add inc dec test dec pop sbb xor push jl rol push adc dec test push fisttp inc push hlt dec sbb mov sahf or mov jmp xor dec insb xchg add aas pop mov dec lods cld sub fwait lcall xchg stc stc and jae or gs sub mov dec aad loopne mov and dec mov mov jae test int3 jae push andl or jg rol inc mov cwtl xor mov pop or push push push or xchg adc xor cli sub ret or adc pop xor jae in or sub fwait pusha sbb in das int and mov (bad) dec inc mov dec test rorl or ja test into mov add jns sahf inc rcrb fildl out mov mov clc sub cmp mov add or rcll jp xor je aaa stos mov nop dec jge jmp pop dec adc ljmp ja gs pop add mov jge loopne inc pop fsts cmpsl inc jae in xchg inc and leave xlat daa in icebp pop (bad) or sti pop mov out int3 mov mov je es out and stos lcall xor (bad) adc xor loopne cmp push sub adc daa add mov inc jle sub mov out aam mov dec std movsb lods mov fwait (bad) xor mov test mov repnz sarl stos int3 mov cs add rcrb dec adc xchg mov sarl cmp dec mov repnz mov cli fildl xor push int ret add jle sbb dec in ret (bad) fucom popa add aad into sub and int int inc and sub sub insb movsb into mov dec add sbb xor sbb scas jge aad sub (bad) mov hlt or sbb push pop mov insl or (bad) dec push ja pop mov nop mov mov test bound roll aas pop adc lret ds inc cmp or dec imul in stc sbb mov jnp fild ss and push and pop sbb (bad) lock in jp dec or add and inc ror and and or sub aad leave in pop jg sbb je add in jmp jo mov jno js push sbb cs test jne sbb pop dec dec and mov xchg xchg xchg add (bad) int stc inc ds jle rcl xor ljmp push (bad) movsb xchg lret xor add fdivs jo stc (bad) inc (bad) daa pop inc xchg ret or jg jle repnz xor push sub mov push mov jmp dec ljmp mov jnp movsb mov sbb in lcall adc test pop lds push (bad) rorb mov cmp (bad) adc js pop mov inc xchg out adc cmp (bad) mov xchg in xor xor lcall pop jbe cmp rolb jg repz aaa pop into lods mov dec pop inc push or imul mov inc sahf and push pushf adc aam xor aaa lds iret adc adc mov pop jnp in jp and (bad) pop mov in test mov mov cmp outsb shlb movsl cmpsb (bad) or ret xchg mov mov push stc lret je out mov mov aas fcompp dec xor cld in int psubusb insb (bad) or loop add js push pop iret leave adc cmpsb mov inc dec (bad) mov or push (bad) mov dec into call lahf pop rorb xor dec stos mov cmp pop sub in (bad) pop repz fisubrl lock stc dec ds dec pop xor xor mov mov sbb call and arpl fwait push push push jb xchg jecxz jno nop mov dec push clc or push xlat test adc pop mov std sub pop jmp push fidivl mov enter enter pop cmpsl insl cmp push daa add push outsl aaa das mov inc ljmp lret adc sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 cmp faddl mov jno dec in jnp cmpsb lods xchg imul sub mov push jmp jle xchg xchg cltd dec mov idivb jbe adc int3 sub cmpsl jae mov test adc test sbb lock fdivp and xor mov cmp ret cs adc push mov loope and lret lea push sub std lds add mov sbbb sbb push sub sbb loop or call inc (bad) repz jne inc popa int3 leave repnz mulb mov pop je daa pop sbb psrlw lret int3 push mov xorl dec sub in fisttpl sbb int cld mov pop push je add mov (bad) cmp cmp cmc xchg mov push adc or mov out add xchg fstpl ljmp cmovge (bad) sahf roll (bad) out mov shl inc negl push lahf push jb or ret push lret pop mov jle cmp push icebp push cmp adcl les rorb insl or xor clc cmp psubusw pop (bad) insb mov es and jae (bad) loopne cltd aad gs cs sbb mov pop adc jo jl push jge xor sbb mov jmp or loop arpl pop mov push lcall mov cwtl ja and fdivp mov int3 hlt mov test adc xchg gs sbb mov cld mov cmpsb test xchg and jns imul cmc orl (bad) and push in daa into addl xchg insb pop sbb aad movsb push shr mov dec test mov fadd outsl (bad) dec xchg adc jp sarl mov jmp mov xchg mov jecxz cmp ljmp iret dec cmp bound cmp test test mov orl pop (bad) iret or dec mov dec adc push inc push dec dec push movsb inc and dec cltd (bad) out jo inc dec mov mov inc xor int3 jg fucom push adc jg pop jmp test mov mov or push insl mov pop ja cld mov and jne clc mov push inc adc cmpsb mov inc ret popa testb sbb or rcll arpl add jb (bad) (bad) xor push or jle adc jge xchg stc dec in inc push std pop xchg shl xchg cmp push cmp enter imul out dec inc shrb pop loop add out (bad) aad add ret pop in jae adc leave jb je pushf out jo lahf mov xchg cmpsl into adc (bad) fs sbb out adc test xchg cmp xchg repnz push cmpsl push ja dec cmp xor stos add cs pop xor jle and repnz cmp aad adc and mov mov stos icebp das fmull mov sbb or xor xor sub adc push and loopne mov xor movsl hlt pusha dec xor int3 stos xchg mov fcmovnb nop enter bound faddl inc xor dec pop stc adc sub cmpsl mov shrb cmp cmp xchg sbb dec cmp lds (bad) loope fbld mov jp push pop inc xor jg std pop mov mov cwtl (bad) stos movsb xor outsb cs (bad) stos push shrb push dec xchg and lahf es push aas sbb movsb je test aas sub cmc int aam pop cmp mov mov out jno pop aaa test (bad) arpl adc mov xor rcll and sbb sub enter xchg pop lcall and ljmp sbb fild jl insb jg dec arpl and test les (bad) xlat push popf in int3 pop push mov push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 