push mov mov mov mov mov pop ret push mov mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov movl mov mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov test je mov cmp jbe mov mov test je mov test je mov add xor test je mov test je mov jmp mov call jmp mov push sub mov mov movl mov mov mov mov mov movl add mov mov mov movl mov mov lea mov call add mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov jmp add xor mov push sub mov mov test movl mov mov mov movl movl je mov test je mov mov mov mov lea mov movl mov mov mov mov call add mov push sub mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl movl movl movl push call add mov movl mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl movl movl movl push call add mov movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov call mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call pushl call add movl pop pop ret int3 int3 push mov push push mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 push mov mov mov mov mov mov movl movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl mov mov mov test je mov lock cmp jne mov call mov pop pop pop ret int3 int3 int3 int3 push mov push push push mov mov mov mov test je lock mov test je mov lock cmp jne mov call mov mov mov pop pop pop pop ret int3 int3 int3 push mov push push push mov mov mov mov movl movl mov mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movl movl movl movl movl push call add mov movl mov mov mov test je mov mov mov nopl mov mov mov shr mov mov mov add mov and and mov shl add push call inc dec jne mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov movl movl movl movl mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl je movl movl mov mov jmp nopw push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pushl call add movl pop pop pop ret call int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je mov mov test je cmp mov jbe mov mov test je mov test je mov add movl mov test je mov test je mov mov jmp test je movl movl mov mov jmp nopl push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl jmp mov mov mov mov mov test mov mov mov mov je mov mov test je mov test je mov mov movl test je mov test je mov mov xor test jne jmp add movl mov mov mov mov xor mov test mov mov je mov mov test je mov mov test je mov test je mov test je mov xor test je mov test je mov test je mov mov mov mov cmp je mov data16 mov mov mov mov mov shr add mov and mov inc and mov mov mov shr mov mov mov mov add mov and mov mov mov mov inc and mov mov mov cmp jne mov mov push sub mov mov mov mov mov add movl test mov mov mov movl movl je mov test je mov mov mov mov mov mov mov add test movl movl je mov test je mov mov mov lea mov mov call jmp mov movl xor test je mov test je mov test je mov cmpl je mov mov mov mov mov mov mov lea mov mov data16 mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add mov and mov mov mov mov inc and dec mov mov jne mov mov mov add sub mov mov test movl movl je mov test je mov mov mov mov mov push sub mov mov mov add test movl movl je mov test je mov mov mov mov movl movl test je mov test je mov mov mov mov lea mov mov call mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movsd mov movsd pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov mov push pushl push call pushl call add mov call add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push mov mov cmp je mov mov pushl call mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov pop pop pop ret int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov mov test je lock mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov lea mov lea movl push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl add mov pop pop jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov pop ret int3 push movl mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov test je data16 mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov jne movl mov mov jmp data16 push call add mov test je mov dec test jne jmp test je mov cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl pop pop pop ret call int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne push call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl test je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test mov je mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov mov mov pop ret int3 int3 push mov mov movl pop ret int3 int3 int3 push mov push mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov setne pop ret int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov push push push mov mov test je mov mov lock cmp jne mov mov call lock cmp jne mov mov call movl movl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl movl movl movl push call mov add mov movl mov mov test je mov mov mov nopl mov mov mov mov mov dec and pushl call inc mov dec jne mov add pop pop pop pop ret int3 int3 push mov push push push mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add and mov mov test jne push call add mov mov mov mov movl movl movsd movsd movsd movsd movsd movsd movl movl movw incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov test cmovne cmp jae jmp nopw add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae mov add push call add lea and mov jmp mov push call add mov lea mov mov mov mov mov mov mov lea lea sub push push pushl call add add mov mov sub mov jae lea mov push push push call add mov mov mov lea lea sub push push mov push call add add pushl push push jmp mov mov lea mov push push push call add mov shl lea push push push call add pushl push mov push call add mov mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov lea mov mov mov mov mov mov dec and mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw decl je pop pop pop ret movl pop pop pop ret call int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov test je mov mov test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea cmp ja mov push call mov mov mov dec mov and mov add mov and mov test jne push mov call mov add mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call mov add mov mov mov mov mov lea mov mov add mov mov mov mov mov mov dec and mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov mov jmp mov movl movl mov mov mov mov sub sub add mov mov sub push sub mov cmp mov movl movl jae mov test je mov test je mov mov mov mov mov movl movl test je mov test je mov mov mov lea mov movl mov mov mov mov call add mov cmpl mov je mov sub data16 mov mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov mov inc decl cmove inc mov jne jmp mov test je mov test je mov mov mov mov add movl mov mov mov mov movl movl test je mov test je mov mov mov lea mov mov call add mov cmpl je mov sub nopl mov mov lea mov dec and mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movw mov dec mov je inc jne jmp xchg movl inc jne mov mov test je mov test je mov add mov lea test movl movl je mov test je mov mov jmp mov add lea movl movl mov mov mov call mov lea pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov sub cmp je mov mov mov mov mov shr cmp jbe data16 mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov push sub mov mov mov movl movl add test mov je mov test mov je mov test je mov mov add movl movl test je mov test je mov mov mov mov mov add mov test je mov test je mov add movl movl test je mov test je mov mov mov mov jmp mov nopw mov mov mov mov mov dec and pushl call mov inc mov cmp jne mov mov sub test mov je mov test je mov test je mov mov lea test je mov test je mov mov test je mov mov test jne movl cmp je jmp mov movl movl mov add add test mov mov je mov test jne mov movl add movl lea mov mov call add mov jmp mov lea mov movl test je mov mov cmp jne jmp lea movl movl cmp je dec data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov push sub mov mov mov test mov je mov test je mov test je mov add mov test je mov test je mov test je mov test je mov mov movl movl lea test je mov test je mov mov mov mov mov mov add mov test jne jmp mov add mov jmp mov mov movl movl mov lea mov mov add test je mov test je mov test je mov movl movl test je mov test je mov mov mov mov jmp mov movl movl mov mov test mov movl movl mov je mov mov lea mov call add mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp movl add movl mov mov mov call mov lea pop pop pop pop ret movl test jne jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov test je mov mov jmp movl mov mov mov mov test je mov test je mov mov test je mov mov mov sub jne jmp mov movl mov sub je mov mov mov data16 mov mov mov mov dec and mov mov mov dec and mov cmp je mov cmpl jbe mov mov cmp jae sub movzbl mov mov mov call inc inc cmp jne jmp nopw cmp mov jb mov mov mov lea push push push call add mov movw inc inc cmp jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov cmp jae or cmp ja mov mov mov shr sub cmp ja add mov mov cmp cmovae mov inc je test js add cmp jb cmp jae add push call mov add lea and mov jmp xor mov jmp push call mov add mov mov mov mov mov lea push push push call add movw mov cmp jb mov inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add pop pop pop pop ret call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call int3 int3 int3 push mov push push push sub mov mov mov lea test je mov mov jmp movl mov mov mov test je mov test je mov mov test je mov mov mov cmp jne jmp mov movl mov cmp je neg dec mov data16 mov dec mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov lea dec cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl mov cmp jne jmp call int3 int3 int3 int3 int3 int3 int3 push mov push push mov lea mov mov push sub mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov movl movl mov test je mov test je mov mov mov mov mov call add mov mov call mov lea pop pop ret int3 push mov push push push sub mov mov lea test je mov mov jmp movl mov mov mov mov mov test je mov test je mov mov test je mov mov cmp mov jne jmp mov movl cmp mov je data16 mov mov dec and mov mov mov mov mov dec and mov cmp je mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov movl movl movw movsd movsd movsd movsd movsd movsd movl movl movw mov inc inc cmp jne lea mov mov movl movl mov test je mov test je mov mov mov mov mov add pop pop pop pop ret movl cmp mov jne jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov inc cmp ja push mov call mov mov mov lea mov and mov cmove mov dec and mov test jne push mov call mov add mov mov mov mov mov movl movl mov cmpl jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov mov or cmp cmovb mov inc js add mov mov mov cmp jb mov cmp jae add push call add mov lea and mov jmp push call add mov mov mov lea push push mov push call add mov mov mov mov mov incl add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov lea mov mov mov mov movl test je mov mov mov test mov je mov mov mov mov test je mov mov mov cmp jne mov jmp movl mov cmp je mov sub jne mov jmp mov lea mov mov mov mov data16 cmp je mov mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov dec nop cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov cmp je mov dec data16 cmp je mov mov mov dec and mov mov mov dec and inc mov cmp lea movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd movsd jne mov mov lea add mov movl movl mov test je mov test je mov mov mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret mov pop ret int3 int3 int3 int3 int3 push mov push push push push mov movl movl mov test je mov test je mov nop lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je lock mov mov test je mov mov lock cmp jne mov mov call lock mov mov cmp jne mov mov call mov mov mov mov pop pop pop pop ret push mov mov test je mov lock cmp jne mov pop jmp pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov test je mov test je mov data16 lea lock je mov test jne jmp mov test je mov lock cmp jne mov mov mov call mov mov lock cmp jne mov mov call mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov test cmovne cmp jae jmp nopl add cmp jb mov sub cmp jae mov sub cmp jae push call cmp jae mov shl cmp jb cmp jae add push call add lea and mov jmp push call add mov mov shr mov lea mov mov mov mov lea lea sub push push push call add mov add mov sub mov jae lea mov push push push call add mov mov lea lea sub push push mov push call add add pushl push push jmp mov and push push push mov call add mov add shl push push push call add push push pushl call add mov mov mov test je cmp ja shl cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push mov mov mov mov mov lea mov and shr shl mov mov mov mov add mov and add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov incl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push decl mov je pop ret movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov lea test jne lea shr cmp ja mov push call mov mov mov mov lea add and mov mov add mov shr and mov test jne push call mov add mov mov mov mov mov and mov mov mov lea mov mov add mov mov mov and shr shl mov mov mov add mov and add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea test mov mov mov mov je mov mov mov mov jmp mov movl xor mov mov mov mov mov sub add mov mov sub mov sub push sub mov cmp mov mov movl movl mov jae test je mov test je mov mov mov mov mov mov mov movl movl test je mov test je mov mov mov mov mov movl mov mov mov lea mov mov mov test je mov mov mov mov test je mov test je mov mov mov mov test mov je mov mov jmp mov test je mov test je mov mov mov mov mov mov mov add movl test mov mov mov mov movl movl je mov test je mov mov mov movl mov lea mov mov test je mov mov test je mov mov jmp movl mov mov test jne mov movl mov mov mov sub jne mov mov jmp mov mov mov mov mov mov test je mov test je mov mov test je mov jmp mov xor mov mov movl test je mov test je mov test je mov mov mov cmp je mov mov mov mov nopl mov mov mov shr mov mov add mov and mov inc mov and mov mov shr mov mov mov add and mov mov mov mov inc and mov cmp jne mov mov mov mov add sub mov test movl movl je mov test je mov mov mov mov mov cmpl je mov mov sub add sub data16 test je inc inc jne jmp data16 movl inc inc jne sub jmp movl mov mov mov sub je mov neg dec mov mov mov dec xchg mov mov mov shr mov mov add and mov mov and mov mov mov shr mov mov mov add and mov mov mov mov dec and mov mov lea dec cmp jne mov mov mov mov add mov movl movl mov test je mov test je mov mov mov mov cmpl je mov mov mov mov mov mov sub add sub xchg inc test cmove inc inc jne sub mov mov mov mov test je mov test je mov test je mov add mov test movl movl je mov test je mov mov mov jmp mov add movl movl mov lea mov mov mov call mov lea pop pop pop pop ret int3 int3 int3 push mov push push push sub mov lea mov mov mov sub mov mov mov cmp je mov mov mov mov mov shr cmp jbe mov jmp nop mov mov mov mov shr mov mov mov add and test mov mov je mov jmp data16 mov mov add shr cmp ja movl call sub mov mov nopw mov and mov lea and lea mov cmove add dec mov shr and mov test jne movl call mov mov mov mov mov mov mov and mov mov mov mov incl lea mov inc mov cmp jne mov mov mov sub test mov je mov test je mov mov lea test je mov test je mov test je mov mov mov mov cmp jne jmp nopl mov mov mov mov mov mov shr mov mov mov add and mov mov mov lea mov test mov je mov jmp data16 mov lea shr cmp ja movl call sub mov mov mov mov nopl mov mov mov and lea add and mov add mov shr and mov test jne movl call mov mov mov mov mov mov and mov mov incl lea mov inc mov cmp jne mov mov mov mov mov add test je mov test je mov mov add test je mov test je mov mov mov mov test jne add jmp lea movl movl cmp jne jmp mov xor movl xor add add cmp je cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call jmp mov lea movl mov mov cmp je dec data16 cmp je mov mov mov mov mov mov mov shr add mov and mov mov mov shr and mov mov mov add mov and mov and mov mov mov mov mov mov mov mov inc mov mov cmp lea jne mov mov test je mov test je mov test je mov mov add test je mov test je mov test je mov test je mov mov mov lea test mov mov je mov test je mov jmp mov add mov lea mov xor mov xor mov mov mov test je mov test je mov test je mov test je mov mov mov test mov jne jmp xor xor mov test mov je mov xor test mov je mov mov test mov je mov mov mov mov mov cmp jne mov mov mov jmp mov mov movl xor xor add lea mov mov mov mov cmp je mov cmp jne mov mov jmp mov mov mov mov mov mov mov mov lea mov mov mov mov call mov lea jmp mov add movl mov mov test je mov add test je mov test je mov jmp xor mov mov xor mov test mov je mov test je mov mov mov lea cmp jne mov mov mov mov mov mov mov test je mov test je mov test je mov add movl movl test je mov test je mov mov jmp add movl movl mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov sub mov je mov mov lea data16 cmp je mov mov mov shr mov mov mov add and mov mov mov and shr mov mov mov mov add mov and mov inc and cmp lea mov mov mov mov mov mov mov mov mov mov jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov add mov mov and mov and mov mov shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov cmp je mov dec data16 cmp je mov mov mov shr mov mov mov add mov and mov mov mov and shr mov mov mov mov add and mov mov and mov mov mov mov mov mov mov mov mov inc mov cmp lea jne mov mov mov add mov mov add pop pop pop pop ret int3 int3 push mov mov test je mov pop ret xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov test je mov test je mov data16 lea lock je mov test jne xor pop pop pop pop ret mov test je mov lock cmp jne mov mov call mov mov lock cmp jne mov mov call mov mov mov mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov test je mov lock cmp jne mov call movl movl pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov test je cmpl sete pop ret xor pop ret int3 int3 int3 int3 int3 push mov mov test je mov pop jmp xor pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov call mov pop pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov mov add mov cmp je mov or mov mov cmp mov mov je nopw mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov mov shl add mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add xor jmp mov mov call mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov cmpl jbe mov mov test je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov push mov mov mov mov cmp je add or mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push flds mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push movss movsd movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss movss flds add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov cmove cmove mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov jmp add mov mov pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov push call add test mov cmove mov mov cmove mov mov movsd movsd movsd movsd movsd movsd movl movl movb mov mov cmp je inc mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push push mov mov cmpl jbe mov mov test jne jmp lea mov test je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push call cmp mov jne jmp mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 mov add mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 push mov push push push sub mov mov cmpl jbe mov mov test mov mov je mov nop movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov mov data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add test mov je cmp jne mov mov mov add pop pop pop pop ret push pushl push call add mov test jne mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov nopw mov mov cmpb je pop ret push mov push mov push call add mov mov mov movw mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push call add mov mov mov movw pop ret int3 int3 int3 push mov pushl call add pop ret int3 push mov pushl call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push call add mov mov mov mov pop pop ret int3 int3 int3 push mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov pop pop ret push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov pushl call mov mov mov mov mov mov movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmpb jne data16 mov pushl call mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmpb mov je pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov lea mov mov push pushl push call mov call add pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov pushl call mov mov mov mov mov mov movl mov mov jmp cmp je mov jmp nopw mov cmpb je mov mov cmpb jne nopl mov mov cmp jne mov cmpb je jmp nop mov mov cmpb je jmp mov jmp nopw cmpb je mov push lea push call cmp mov jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb mov mov je mov cmpb mov jne cmpb je mov mov cmpb je mov cmp je cmp lea cmove mov mov cmp je cmp je cmpb jne mov mov cmp mov je nopw cmpb mov jne mov cmp je cmpb je cmpb jne jmp nop mov cmpb je cmpb jne jmp nopl mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp mov movb movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov mov cmpb jne mov mov mov cmpb movzbl jne cmp jne movb jmp add mov mov mov mov mov mov cmpb jne mov lea mov mov cmpb movzbl jne cmp jne movb mov mov mov mov cmp mov jne movb mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add jmp cmpb je mov cmpb jne mov nopl mov mov mov cmp jne mov mov cmpb je jmp mov mov cmp jne add mov mov cmp jne cmpb mov jne mov xchg mov mov cmpb je mov mov mov mov cmp jne cmpb mov jne mov nop mov mov cmpb je mov mov mov cmpb je mov cmp jae mov mov push call add mov test je dec mov mov mov add pop pop pop pop ret mov movb mov cmp jae jmp mov cmp je mov mov mov mov mov cmp je mov mov cmpb jne mov mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov xchg mov mov cmpb je jmp mov movb mov cmp jae jmp mov mov mov cmpb mov jne jmp add mov mov mov mov mov mov mov mov cmpb jne jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmove jmp mov jmp cmp jne movb movb mov mov mov mov cmpb jne mov mov mov mov mov mov cmp je mov cmp lea cmovne jmp mov jmp add mov mov mov mov mov mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov jmp add mov mov mov mov mov lea mov mov movb mov movb mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov mov mov movb mov cmp jae jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov mov pop pop ret int3 int3 push mov push mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov pop pop ret push mov push push sub mov mov mov cmp mov je mov mov mov mov call sub mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp nopl mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb jne movl call mov mov mov mov mov mov movw movl movl mov cmpl mov jbe mov jmp lea mov mov lea cmp mov ja mov movsd movsd mov movsd movsd mov jmp mov mov or mov mov cmp cmovb cmp jb lea mov call mov lea and mov jmp lea mov call mov mov mov mov lea mov mov mov call mov mov mov mov mov mov mov mov mov mov mov cmpb mov mov mov cmovne mov call sub mov mov mov mov mov mov mov mov call sub mov mov call mov add pop pop pop pop ret int3 push mov mov mov mov mov pop ret push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov push call add mov mov mov mov movw movl movl mov cmpl jbe mov mov lea cmp mov ja movsd movsd mov movsd movsd mov mov jmp mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call add mov mov mov mov mov mov incl mov mov add cmp mov je mov test je mov mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov mov jmp mov mov mov mov cmp jne mov mov mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov add pop ret int3 int3 int3 push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov call sub mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmpl je mov mov cmp mov je cmp je mov mov cmpl jbe mov mov cmpl mov ja jmp mov mov mov mov mov mov mov movl jmp mov cmpl jbe mov mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl jbe mov jmp lea mov cmpl mov jbe mov cmp mov mov cmovb mov mov mov mov call xor cmp mov setb shl test cmovne mov mov test mov mov jns mov mov cmpb je mov mov cmpl ja lea jmp mov lea mov cmpl mov jbe mov cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov mov mov movl jmp lea cmp mov cmovb mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov mov mov jmp mov mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov mov cmp cmovb mov mov mov call xor cmp setb shl test cmovne mov test mov js xor cmp mov mov setb cmp cmovb mov call mov mov shl test cmovne test js mov mov lea mov mov mov movl call sub mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov mov mov mov mov mov jmp mov mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp mov mov cmpb je jmp lea mov cmp mov cmovb mov mov mov mov call xor cmp mov mov setb shl test cmovne test jns mov mov cmpb je mov mov mov mov mov movl mov call sub mov call mov add pop pop pop pop ret mov mov mov mov jmp mov mov mov mov jmp mov cmp jne jmp int3 int3 push mov push push push sub mov cmpl jae mov mov push call add mov mov mov mov movw movsd movsd movsd movsd movsd movsd movl movl movb incl mov lea cmp mov je mov test je mov mov mov cmp jne mov mov mov cmpb jne jmp mov mov mov mov jmp mov mov mov cmp jne mov mov mov cmpb jne mov lea lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp nopw movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov movb mov mov mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov mov mov cmpb je mov mov cmp je cmpb je mov mov mov cmpl mov ja jmp mov mov mov cmpl mov jbe mov mov test je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne sub mov mov lea mov mov mov mov movl call mov jmp data16 mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov mov cmpl mov ja jmp mov cmpb je mov cmpb je mov mov mov cmpl mov ja jmp data16 mov mov cmpb je jmp mov nopw mov cmp jne mov mov mov cmpb je jmp mov cmpb mov je mov cmpl mov jbe mov mov mov cmpl mov mov jbe mov jmp lea mov mov cmp mov mov cmovb push pushl push call add xor cmp setb shl test cmovne test js mov mov movb jmp sub mov mov mov mov lea mov movzbl mov mov mov call mov mov mov movb mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je data16 mov push pushl lea push call add cmp jne mov call add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov mov mov mov mov mov movw movl mov movl mov cmpl jbe mov mov mov add cmp ja movsd movsd mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov inc push pushl push call mov add mov mov mov mov push push push mov push call mov add pop pop pop pop ret push mov push push push sub mov mov mov mov mov cmpl je mov mov cmp je cmp je mov cmpl jbe mov jmp mov pushl push pushl push jmp mov cmpl jbe mov mov cmpl mov ja jmp mov mov cmpl mov jbe mov mov cmpl mov jbe mov jmp lea mov mov mov mov mov cmpl jbe mov cmp mov mov cmovb push mov push push call add xor cmp setb shl test cmovne mov mov test mov jns mov mov cmpb je mov mov cmpl ja lea jmp lea mov cmpl mov jbe mov cmp mov cmovb push push push call mov add xor cmp mov setb shl test cmovne test jns mov push push pushl push jmp lea cmp mov cmovb push push push call add xor cmp mov mov setb shl test cmovne test jns mov push push pushl jmp mov cmpb je mov cmpb je mov mov cmpl jbe jmp data16 mov mov cmpb je jmp mov mov cmp jne mov mov mov cmpb je jmp mov cmpb je mov cmpl jbe mov mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne mov test js xor cmp setb cmp cmovb push pushl push call add shl test mov mov cmovne test mov js lea mov push push push push call mov mov mov jmp mov cmpb mov je cmp je mov cmpl jbe mov jmp mov cmpb je mov pushl pushl push jmp mov cmpb je mov cmpb jne mov mov mov cmp jne mov cmpb je jmp nopl mov mov cmpb je jmp lea mov cmp mov cmovb push push pushl call add xor cmp mov mov mov setb shl test cmovne test jns mov mov cmpb je mov mov push push push push mov push call mov call mov add pop pop pop pop ret mov push push push jmp mov pushl pushl jmp mov cmp jne jmp int3 int3 int3 int3 int3 push mov push push push sub mov mov cmp jae mov inc mov lea mov cmp mov je mov test je mov mov cmp jne mov mov cmpb jne jmp mov mov mov mov mov mov cmpb jne jmp mov mov cmp je mov cmpb jne mov lea nopw lea mov mov mov cmp je cmpb je cmp je mov mov lea mov jmp data16 mov cmpb je cmp je mov mov lea mov jmp data16 movb movb mov mov movb mov mov jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmovne jmp mov mov mov mov cmpb je mov mov cmp je mov cmp lea cmove jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmove jmp add mov mov jmp mov mov mov mov cmp jne add mov mov mov mov mov movb mov mov movb mov mov mov mov mov mov cmpb jne mov mov mov mov cmp je mov cmp lea cmovne jmp add mov mov mov mov mov lea cmpb lea je mov mov mov mov movb mov mov mov add pop pop pop pop ret mov mov cmpb jne jmp push call push call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmpb mov je mov mov cmp je cmpb je mov mov jmp mov mov cmpl mov jbe mov mov test mov je nopl mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push pushl push call add xor cmp setb shl test cmovne lea test cmovns setns mov cmpb je test je mov mov mov cmp jne mov lea pushl push push push push call mov jmp mov mov cmpl jbe mov jmp nopw lea cmp mov cmovb push push pushl call add xor cmp setb shl test cmovne lea test cmovs mov cmpb je shr test jne mov xor mov jmp mov cmpb je mov cmpb je mov mov mov mov mov cmpl jbe mov mov cmpl mov mov jbe mov jmp nopl mov mov cmpb je jmp lea mov mov cmp cmovb push push push call add xor cmp setb shl test cmovne test js mov mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov movb jmp movzbl mov lea pushl pushl push push push call mov mov mov movb mov call mov add pop pop pop pop ret mov data16 mov cmp jne mov mov mov cmpb je cmpb jne jmp mov cmpb jne jmp call push mov push mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov push push call mov mov xor cmp je mov data16 cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov push push lea push call mov call mov add pop pop pop pop ret int3 int3 int3 push mov push sub mov mov mov mov lea push push call mov mov mov mov mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov lea mov mov cmpb je mov jmp mov mov cmpl mov jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl mov push call add xor cmp setb shl test cmovne test js mov cmpb je mov xor cmp setb cmp cmovae mov push pushl pushl call add mov shl test cmovne test cmovs mov mov mov cmpb je jmp nopl mov mov add mov cmpb je cmpb mov cmove mov cmpb jne mov mov cmpl jbe mov mov mov cmpl mov jbe mov jmp nopl lea mov mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov add pop pop pop pop ret push mov push push mov mov mov cmpl jbe mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmove shr pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpb je mov mov add pop pop pop pop ret mov mov mov cmpl mov jbe mov mov mov mov nopl mov cmpl mov jbe mov jmp nopl lea mov mov cmp cmovb push pushl push call add xor cmp mov setb shl test cmovne lea test cmovns cmovns mov cmpb je mov mov cmp je mov cmpl jbe mov mov mov cmpl ja jmp lea mov mov cmpl jbe mov cmp mov cmovb push push push call add xor cmp setb shl test cmovne mov test mov jns jmp int3 push mov push push sub mov mov mov lea push push call mov mov xor cmp je xchg cmpb je mov inc cmp mov jne jmp nopl mov cmpb je nopl mov cmpb jne mov mov cmp je jmp nop mov mov cmpb je xchg inc cmp mov jne mov call mov add pop pop pop ret int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpb jne mov mov mov cmpl jbe mov mov mov data16 mov cmpl mov jbe mov jmp nopl lea mov cmp mov cmovb push push push call add xor cmp mov setb shl test cmovne lea test cmovs cmovs mov cmpb je mov mov add pop pop pop pop ret push mov push mov cmp je mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov movl movl movl call mov mov mov movw mov mov mov mov mov mov mov mov call sub mov mov mov mov mov mov cmpb je mov mov mov jmp mov mov cmpb je mov mov mov data16 mov mov cmpb je mov mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov movl movl push call add mov mov mov movw mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov mov movl movl push call add mov mov mov movw mov mov mov mov mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov movl movl push call add cmp mov mov mov movw mov je lea mov push push mov push call add cmp je data16 mov push pushl push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov pushl call mov cmp mov mov mov mov mov movl je mov push pushl lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 push mov push push mov movl movl test je mov mov lock cmp jne mov mov call lock cmp jne mov mov pop pop pop jmp pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov movl movl push call add lea mov mov mov movl movl movl movl push call add mov mov mov cmp je sub xor mov nopw mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov mov add mov mov mov mov lea push push call movl movl mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea mov sub sar cmp jae cmp jae mov push call mov mov mov lea push push call mov mov lea mov mov mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov sub mov sar cmp jae cmp mov mov jae mov mov shr sub cmp mov ja add cmp cmovb mov mov test je cmp ja cmpl jb test jne mov cmp jae add sub cmp jb call mov mov sub sar mov sub jae cmp mov mov je mov mov mov data16 mov mov add cmp jne mov mov mov sub jne jmp lea test je mov shl nopw mov mov add add jne jmp mov push call add test movl movl movl je cmp jae lea cmp jb cmp jae add push call add mov lea and mov jmp xor jmp push call add lea mov mov mov mov mov mov data16 mov mov add dec jne mov lea jmp mov sub je mov mov mov nopw mov mov add inc jne mov mov lea mov add pop pop pop pop ret call call int3 int3 int3 push mov push call int3 int3 int3 push mov push push push push mov mov mov sub test mov je cmp jae lea cmp jb cmp jae add push call add lea and mov mov mov cmp jne test jne jmp xor mov mov cmp jne jmp push call add mov mov mov cmp je sub xor data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov lea mov sar lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov nopl mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov cmp je mov mov lea lea push push push call cmp je nopl mov mov mov lea push push lea push call cmp jne mov call add pop pop pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov add mov mov cmp mov je mov or mov mov cmp mov je mov mov cmp jne test je mov cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov mov cmp jne mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea mov cmp je cmp je mov or mov mov cmp mov je mov mov lea mov mov jmp mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov xor jmp mov or mov shl add mov mov mov mov call mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov movsd mov movss movss orpd orpd subsd subsd cvtsd2ss xorps cvtsd2ss divss ucomiss jbe mov mov cmp setb cmp jb mov mov shl lea lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopl mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl mov cmp je nopw mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmp mov je movl call mov lea mov mov mov mov call sub mov lea mov movl movl call sub mov mov mov call sub mov mov mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae mov call mov call cmp mov jne mov call mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov lea mov mov mov mov lea mov sub sar push push call mov mov mov cmp je mov mov nop mov add mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov cmp mov jne mov call add pop pop pop pop ret call push call int3 int3 int3 push mov push push push sub mov mov mov cmp mov mov mov je cmp je mov xchg mov lea cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push mov call mov add add movl movl movw push call mov mov cmp je mov mov cmp jne cmp mov jne jmp mov cmp mov jne jmp mov cmp mov je mov data16 mov add mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov cmp mov jne lea pushl pushl push call mov call add pop pop pop pop ret push call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je data16 mov mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push cmpl mov sete pop ret int3 int3 int3 int3 push mov mov mov mov pop ret int3 int3 push mov push push mov mov cmpl jbe mov mov add je data16 movzbl inc xor imul dec jne and pop pop pop ret int3 int3 int3 int3 push mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xorps movss ucomiss jb movss pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov nopl mov cmp jae lea cmp jb cmp jb movsd movss orpd subsd cvtsd2ss divss xchg mov lea cmp ja movd por subsd cvtsd2ss ucomiss jbe mov lea sub sar cmp jae cmp jae mov mov push call mov mov mov lea push push call lea mov mov mov mov cmp je mov jmp nopw mov mov lea mov push push lea push call cmp jne mov call add pop pop pop pop ret push call call int3 int3 push mov movsd movss orpd subsd xorps cvtsd2ss movss divss addss movaps cvttss2si subss cvttss2si xor ucomiss cmovb push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov cmpl mov jbe mov mov mov mov mov add je mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov mov cmp je mov or mov mov cmp mov je mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 mov movzwl cmp jne inc cmp jne jmp nop cmp jne mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov pushl call mov mov cmp je inc mov mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov xor jmp mov mov mov mov lea cmp je cmp mov mov je or mov mov mov cmp je mov lea mov mov jmp mov or shl mov mov mov add mov mov call mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov movl movl mov cmpl mov jbe mov cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov cmp jb cmp jae add push call add mov lea and mov jmp push call add lea mov push pushl push call add mov mov mov mov mov mov add pop pop pop pop ret call int3 int3 int3 int3 push mov push push push sub mov mov cmp mov je mov mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add mov cmp jne mov call add pop pop pop pop ret push call push mov push push push push mov mov cmpl jbe mov mov add jne jmp lea mov add je nopl movzbl inc xor imul dec jne and mov mov lea cmp mov lea je cmp jne mov jmp cmp je lea lea jmp mov mov mov lea lea shl add mov mov mov mov mov mov mov mov mov decl mov cmp jb inc js mov add cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov push call add mov mov add pop pop pop pop ret call int3 push mov push push push push mov mov mov lea lea cmp mov mov je cmp jne mov jmp cmp je lea add jmp mov mov lea shl mov lea add mov mov mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp jne jmp data16 inc cmp jne jmp nop lea cmp je mov cmp je mov cmpl jbe mov cmp jne cmpl je xor nopl movzwl cmp je jmp cmpl je xor nop movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov movzbl inc xor imul dec jne and mov mov mov mov cmp je add or mov mov cmp je mov cmpl jbe mov cmp jne jmp nopw mov add cmp jne cmpl je xor nopw movzwl cmp jne inc cmp jne jmp nopl mov cmp jne jmp cmpl je xor nopl movzwl cmp jne inc cmp jne mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov cmp je lea mov mov mov cmp mov je mov mov mov cmp jne test je cmpl jbe mov jmp nopl lea xor data16 movzwl cmp jne inc cmp jne jmp nopl mov cmp jne mov mov jmp mov cmp je mov mov mov mov cmp mov je mov cmp jne test mov je mov cmpl jbe mov jmp lea xor nopw movzwl cmp jne inc cmp jne mov mov cmp mov jne jmp mov cmp je cmp jne test mov je mov cmpl jbe mov jmp lea xor data16 movzwl cmp jne inc cmp jne mov mov mov cmp jne jmp mov mov jmp mov mov jmp mov mov mov cmp cmove cmove mov mov mov mov add pop pop pop pop ret mov jmp int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov add je mov nop movzbl inc xor imul dec jne mov and mov mov mov mov cmp mov je add or mov mov jmp nop mov cmpl jbe mov cmp jne test je xor data16 movzwl cmp jne inc cmp jne jmp nopl lea cmp je cmp jne jmp test je xor data16 movzwl cmp jne inc cmp jne mov mov jmp mov mov mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov mov mov movl movl movl call mov mov mov movl movl movl mov mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov call sub mov call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movw movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov lea movl push push call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov movl mov push push call cmp je mov nopl mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je mov mov mov mov mov push call add mov mov mov test mov cmove mov lea cmove mov pushl call mov cmp je inc mov mov mov mov mov mov mov push add push lea push call mov mov add cmp jne mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov call cmp je mov nopw mov mov mov mov push call add mov mov test mov cmove mov lea cmove mov push call mov mov mov cmp je inc mov mov mov mov mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret push call push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov lea lea mov lea mov push push push push push call mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov push call add mov test mov je mov mov mov mov mov movl movl mov cmpl jbe mov lea cmp ja movsd movsd mov movsd movsd jmp mov mov or cmp cmovb mov inc js add mov mov cmp jb cmp jae add push call add mov lea and mov jmp push call add mov mov lea push push push call mov add mov mov mov movl mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push push sub mov mov mov mov mov mov mov mov movl mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov lea sub sar cmp ja mov mov mov push call add mov mov mov cmp je sub xor mov data16 mov mov add cmp jne mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add mov sub mov sar lea add mov mov mov mov lea mov push push call movl movl mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 push mov push push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov pop ret int3 push mov push push push mov mov mov lea lea mov cmp je cmp je or mov mov cmp mov je mov lea mov mov jmp or mov shl add mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push mov mov cmp je mov mov mov test je mov sub mov sar cmp ja cmp jb test jne mov cmp jae add sub cmp mov jae push call add movl movl movl mov mov mov mov mov mov movl movl movl mov mov mov mov mov mov mov mov mov movl cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne jmp mov mov mov mov mov mov mov mov mov call mov pop pop pop pop ret call push mov push push push sub mov mov mov cmp mov je push call add mov lea lea mov mov mov push pushl push call lea sub mov mov movl movl call mov mov push call mov mov mov cmp je nopl mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne push call add mov mov call mov add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov lea mov mov mov mov mov mov mov mov mov mov movl mov mov cmp je data16 mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov cmp jne mov mov mov lea mov mov mov mov lea mov sub sar push push call mov mov cmp je mov nopw mov mov add push pushl call mov mov mov push add push lea push call mov cmp mov jne mov call add pop pop pop pop ret call int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov mov movsd movsd jmp mov mov mov mov or cmp cmovb cmp jb lea push call add mov lea and mov jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push push mov mov mov mov cmp jne cmp je cmp je nopw mov mov mov mov mov mov mov decl mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add cmp mov jne mov mov add pop pop pop pop ret mov mov mov mov movl mov cmp je nopw mov mov cmp jb mov inc cmp jb test jne mov cmp jae add sub cmp mov jae push call add push call add mov mov mov cmp jne mov mov mov jmp call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov sub mov sar mov mov sub mov sar cmp jbe mov cmp mov mov jae mov mov mov shr sub cmp ja mov add cmp cmovae mov cmpl mov je cmp mov ja cmp jb test jne mov cmp jae add sub cmp jb call mov mov mov mov sub mov sar cmp jbe mov lea push push push call add mov mov mov mov cmp je shl lea sub sub xor mov nopl mov mov add cmp jne sub and lea jmp lea mov pushl push push call add jmp mov push call add movl movl movl mov test je cmp jae lea cmp jb cmp jae add push call add lea and mov jmp xor mov cmp jne jmp push call add mov mov mov mov lea mov mov cmp je mov mov add mov xor data16 mov mov add cmp jne sub and lea mov mov add pop pop pop pop ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov xor cmp jbe mov mov cmp je add or mov mov cmp je xor nopw mov inc cmp jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov shl add pop ret push mov mov mov cmp jbe shl add mov mov pop ret add mov mov mov pop ret int3 int3 int3 push mov push mov mov cmp jbe mov mov cmp je add or mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov lea mov pushl mov pushl call mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov jmp xor mov mov mov add pop pop pop pop ret int3 int3 int3 int3 push mov push sub mov mov mov mov mov mov lea mov mov call sub mov mov mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl mov jbe mov mov mov test je mov mov nopw movzbl inc xor imul dec jne mov and mov mov mov add mov cmp je mov or mov mov cmp mov je data16 mov cmp jne cmpl jbe mov jmp xchg lea push push pushl call add mov test je cmp jne mov mov mov mov push call add mov mov test mov mov cmove mov cmove mov mov movl movl mov cmpl mov jbe mov mov add cmp ja movsd movsd mov movsd movsd mov jmp mov mov mov mov or cmp cmovb cmp mov jb lea push call add mov lea and mov jmp xor jmp lea push call add mov mov lea push pushl push call mov add mov mov mov mov mov mov mov mov mov cmp je inc mov mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea cmp je cmp mov mov je or mov mov cmp mov je mov lea mov mov jmp mov or mov mov shl add mov mov call mov mov mov mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov cmp mov je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call add pop pop pop pop ret push mov push push push sub mov mov mov mov mov mov mov cmp jne cmp jne mov call mov mov jmp cmp je mov nopl mov mov push lea push mov call mov mov cmp jne mov mov mov mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov lea mov mov push push call mov mov xor cmp je mov data16 mov inc cmp jne mov cmp jne cmp jne mov call jmp cmp je mov mov nopw mov mov push lea push call mov mov cmp jne mov call mov add pop pop pop pop ret int3 push mov push push push sub mov mov cmpl jbe mov test mov mov je mov nopl movzbl inc xor imul dec jne and mov mov mov cmp je lea mov mov mov cmp je mov mov mov mov nopw cmp jne cmpl jbe mov jmp nopl lea push pushl push call add test je mov cmp jne mov mov mov mov mov add pop pop pop pop ret mov cmp je mov mov mov mov cmp mov je mov nopl cmp jne cmpl mov jbe mov jmp xchg lea mov push push push call add test jne mov mov cmp mov jne jmp mov cmp je nopl cmp jne cmpl jbe mov jmp lea push push pushl call add test jne mov cmp jne mov jmp mov mov jmp mov jmp mov jmp mov mov mov cmp cmove cmove mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov pushl push call mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov cmpl jbe mov mov mov mov test je data16 movzbl inc xor imul dec jne and mov mov mov mov cmp mov je add or mov mov cmp jne jmp data16 mov cmp je cmp jne cmpl jbe mov jmp data16 lea mov push push push call mov add test jne push push pushl call add test je mov mov mov add pop pop pop pop ret mov mov jmp int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov xor cmp je nopl mov inc cmp jne mov call mov add pop pop ret int3 int3 int3 push mov push sub mov mov mov lea mov movl mov push push call mov call mov add pop pop ret int3 int3 int3 int3 int3 int3 push mov push push mov mov mov mov movl movl push call add mov mov mov movl movl movl mov push call mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov lea movl push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov mov lea mov movl mov push push call mov push call mov call mov add pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov pop jmp int3 int3 int3 int3 int3 int3 int3 push mov push sub mov mov mov lea push push call mov mov add call mov add pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea push push call mov mov cmp je mov movb jmp mov mov mov push call mov add test mov cmove mov mov cmove mov movsd movsd movsd movsd movsd movsd movl movl movb movl mov cmp je inc mov mov mov mov mov mov push add push mov push call mov call mov add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov lea mov movl mov push push call cmp je lea mov xchg mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov lea movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea mov mov movl push push call mov push call mov cmp je lea mov nopw mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov mov call cmp je lea mov nopl mov mov push pushl call mov mov mov push add push lea push call add cmp jne mov call mov add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push push sub mov mov mov mov lea push push call mov cmp je mov movb jmp lea lea mov lea push push push call mov lea mov mov push add push push call mov mov add call mov add pop pop pop pop ret int3 push mov push push push sub mov mov mov mov push call add mov test mov mov mov cmove cmove mov mov mov mov movl movl mov cmpl jbe mov mov add cmp ja movsd movsd mov movsd movsd jmp mov or mov cmp cmovb cmp mov jb lea push call add mov lea and mov jmp lea push call add mov mov lea push push push call mov add mov mov mov mov movl mov cmp je inc mov mov mov mov mov mov mov add add pop pop pop pop ret push call int3 int3 int3 int3 int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov push push sub mov mov mov lea mov mov push push call mov cmp je mov add call mov add pop pop pop ret push call int3 int3 push mov sub mov mov cmpl je mov cmpl je call mov mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov cmpl je mov cmpl jne movl jmp movl mov mov jmp mov mov mov mov mov mov mov mov pop ret push mov push mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov cmpl jne call mov mov mov push mov mov mov mov call mov jmp mov mov mov mov mov mov mov mov mov mov pop ret int3 push mov push mov mov movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar and mov mov and or mov mov mov movl mov mov shl sar mov cmpl ja mov jmp mov mov mov mov mov mov jmp mov cmpl je call mov mov push mov mov push mov mov mov mov call mov mov mov mov or mov mov jmp mov movl jmp push call add mov movl cmpl je mov mov mov mov mov mov mov mov mov lea push mov push mov call mov mov jmp movl mov mov movl mov mov mov mov cmpl je push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov movl jmp mov add mov cmpl jge mov mov mov lea mov mov cmpl je mov mov push mov mov mov lea call jmp mov mov mov mov pop ret rorb adc or adc or adc or adc or int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp adc in and cld push out pop and cmp mov test inc inc aaa movsb dec or int subb xchg cltd sub pop lods aas inc out je clc jge mov (bad) xlat cmp push out fcompl sti and dec stos int3 lret push xlat jp popa sbb cmp shl xor or fldt mov ja data16 fadds iret divl push (bad) ja ds inc in test mov jp scas fpatan out inc mov add sbb lods mov fwait dec and inc pop sub and and jmp out mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov and or mov mov mov movl mov movsd movsd mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov and or mov mov mov mov or mov mov mov movl call mov mov push mov push mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns (bad) mov and add in mov ja mov mov dec mov fisubr int dec jns or and lea (bad) int rcr mov push bound fs insl cmp cmp popa aad push sbb mov cmp sbb adc cltd lret jge out in rcr add jns je push (bad) ja fimull fsubrl mov aaa enter shlb movsl imul mov dec (bad) insl fsub xchg addl push pop jge pop xchg dec adc sbb (bad) sbb js in ss dec add xchg outsb mov sti jae ret loopne jne gs imul fcmovnbe aam imul jb dec rcll push in repnz inc test leave (bad) sarl sub and imul lcall scas mov push mov push mov mov mov and or mov mov mov movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov cmpl je mov cmpl jne call mov mov mov mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 push jns (bad) mov mov mov ja mov mov dec mov jl lods push gs cli and mov dec sar add lea ljmp fcmovbe leave add push aas fwait test je call and nop mov add push mov pop out arpl pop and inc fistpl pop dec jmp xor pop fnstcw fsubrl jmp xorb cmp mov mov in sbb xchg dec and inc lcall rclb add add and inc cltd or add adc pop xchg cmp mov jno (bad) adc adc enter mov and je std push lret (bad) push outsb mov hlt daa popf jnp subb sbbl cmp pop aam int3 shrb jecxz scas adc xchg test sub or jp gs pop dec mov pop hlt mov mov xchg inc rclb loopne cmp lret test mov mov dec (bad) ret jae aad fdivrl scas mov sbb cltd js dec arpl in push mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push lea call movl lea push mov call mov mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jne movl jmp movl mov jmp mov mov mov cmp jne movl jmp movl mov mov pop ret int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov movb lea call lea call movl lea call mov mov mov mov pop ret int3 int3 push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov shl sar test jne mov jmp push mov push lea call movl lea push lea push mov mov call mov mov lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test je movl movl lea call mov jmp mov add mov movl lea call mov mov mov mov pop ret int3 int3 int3 push mov sub mov mov cmpl je mov mov mov mov mov mov mov mov mov mov cmp jne cmpb je mov mov mov mov cmp jne addl addl cmpb jne movl jmp sbb or mov mov mov cmpl jge movl jmp movl mov jmp mov mov mov cmp jge movl jmp movl mov mov pop ret int3 int3 push mov push mov mov movl mov call mov and je push mov push call add mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns sarl sbb mov pop jge xor sub rorb push mov movl movl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call pop ret int3 int3 int3 int3 int3 int3 push mov mov call pop ret int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov movl mov call pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov cmpl je movl jmp movl mov jmp mov movsd ucomisd lahf test jnp movl jmp movl mov jmp mov mov jmp mov cmpl je mov imul mov mov movsbl test je push push mov mov push call add mov mov mov or je movl jmp movl mov jmp mov mov mov mov mov mov mov mov mov mov add mov mov mov mov cmpl je movl jmp movl mov jmp xor mov pop ret pushf pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc pop movsl adc sbb adc int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov pop ret push mov sub mov mov mov shl sar mov cmpl ja mov jmp fldz jmp mov fildl fstpl fldl jmp mov mov mov cvtsi2sdl mov shr addsd movsd fldl jmp mov fldl jmp mov movzbl test je movsd movsd jmp xorps movsd fldl jmp mov test je call fldz mov pop ret clc sbb adc sbb adc sbb adc sbb adc mov sub mov mov mov shl sar mov cmpl ja mov jmp xor jmp mov mov jmp mov cmpl jb call mov mov jmp mov movsd comisd jb mov movsd comisd jae call mov cvttsd2si jmp mov movzbl test je movl jmp movl mov jmp mov test je call xor mov pop ret nopl mov sbb adc sbb adc sbb adc sbb int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov mov shl sar mov cmpl ja mov jmp push mov call mov or mov mov jmp mov cmpl je mov mov mov jmp movl mov push mov call mov or mov mov jmp mov movzbl test je movl jmp movl mov push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov mov push push lea push call add lea push mov call mov or mov mov jmp mov cvtsd2ss cvtss2sd sub movsd push lea push call add lea push mov call mov or mov mov jmp push mov call mov or mov mov mov pop ret nopl xchg jl leave push stos add aaa (bad) ds int jge xlat xor or inc and rorl inc fmul mov imul and loopne stc dec ret gs sbb mov cld adc lods jo xchg pop dec mov jbe insb adc outsl out out jo (bad) lods sub lret std loope xor out arpl xchg fs iret jp mov push (bad) ja mov das cmp jmp mov imul dec inc xor sub (bad) in dec mov cmp cmpsb dec adc push cltd rclb xor into mov out xchg cli mov jp fldenv cmc adc sub fistl inc das shll bound lret or repnz mov cli fimull mov cmp pop adc in adc inc sahf (bad) or add mov mov int3 fidivrl cmp leave stos jo xchg sub shrb test cmp pop jmp xor loopne pop pop int3 adc cmp mov ret test dec xor adc mov mov xlat pop pop xor lcall lret rcll cli mov lock sbb adc sbb adc sbb adc sbb adc sbb adc sbb adc int3 int3 int3 push mov sub mov cmpl jne mov mov mov add mov mov mov mov addl cmpb jne mov sub mov mov mov mov add push call add mov mov push mov push mov push call add mov add movb mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov mov cmp jle push call add cmpl jne movl movl push call add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov movl mov mov shl sar test jne mov mov mov mov mov movl mov movl mov movl mov or mov mov jmp lea mov mov mov mov movl mov movl mov movl movl mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov push lea call lea push mov mov call mov mov lea push mov mov call mov mov jmp lea call mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov mov call push lea call mov mov mov movb mov mov mov push lea call movb lea call movb jmp lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret push mov push mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar cmp je mov mov shl sar cmp je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call push mov call mov pop ret int3 int3 push mov sub mov mov push mov call mov cmpl je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov shl sar test je mov mov shl sar cmp je movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp adc sbb fwait loop lret mov and xchg in dec mov cld dec in imul fmul ret cmpsl enter adc std cmp cmpsb inc add lcall push mov push mov push mov push mov mov mov mov call mov pop ret push mov push mov mov push mov mov mov mov call mov pop ret int3 int3 push mov push mov cmpl je mov push call add mov pop ret int3 push mov push push mov push mov sub mov mov mov shl sar test jne push lea call mov mov mov movl mov push mov call movl lea call movzbl test je movl jmp movl mov push mov push lea call movl lea push lea push mov mov call lea push mov mov call mov mov mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov add mov lea push mov call movzbl test je mov add mov movl lea call mov jmp lea mov mov push lea call movb movl mov push lea call movb mov mov mov mov mov lea mov mov mov mov push mov call mov mov push mov add push mov push lea push mov call mov mov mov add mov mov mov movb lea call lea call movl lea call mov mov mov mov pop ret push mov sub mov mov cmpl je call mov mov mov mov push mov mov mov mov call mov cmpl jb call mov mov mov push mov mov mov mov call mov imul mov movsbl test je mov imul mov movsbl cmp je call call mov mov push mov push mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push jns enter mov movsl sti push dec sar mov xchg mov xor adc clc ss sub clc push pop pusha push mov push push mov push mov sub mov mov cmpl jne push call add mov movl cmpl je mov movl push push push push mov add push call mov add mov jmp movl mov mov movl mov mov mov mov push mov mov mov lea call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp adc sbb fwait loop lret mov rolb adc cs add cld dec icebp hlt stc roll mov jmp cmp sbb sti inc lret ret and xchg sbb xor data16 mov mov or pop jle mov add push xlat aas cmc and addr16 pop jp add sbb in pop sub cmp xchg mov mulb js cwtl cli inc xchg fs fsubrs and jg inc into sbb int push inc fs (bad) mov jne out (bad) xcrypt-ctr cmpsl push inc cmp notb mov rcrb rolb inc push je dec mov enter lock lret stos adc push jecxz cwtl paddsb jmp iret mov aam and bnd das jbe imul inc and add mov loopne std test cmp stos ret in fdiv cmp lret jmp cmp addr16 lods sub rorb incl sub jo push or adc sbbb mov push lcall sbb adc mov cmpl outsb dec clc cltd js jae js in mov pushf mov ds je xchg cmc ss inc sti dec mov mov cmp pop pop pop or push jbe cmp or lods mov dec xchg dec das (bad) jb fs mov sbb dec mov pushf test lea out adc aam out stos stos (bad) call push es adc dec cmp xor xchg xor jbe icebp or or push mov pop enter xchg push outsl ret sbb jl loopne daa das mov sub (bad) push bound mov push mov push mov mov mov shl sar mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns popa cwtl jp add in push mov pushl mov call mov movl mov add call mov movb mov mov pop ret push mov push mov mov movl mov pop ret push jns enter adc lock lods (bad) xor push adc test inc (bad) les das scas and lret cmpsl mov push or sub push mov push push mov movsbl test je mov mov mov pushl call pop movzbl mov mov inc mov cmpl je mov jmp jmp xor mov pop ret push mov push movsbl test jle movsbl cmp jg movl jmp andl mov mov pop ret push jns enter adc lret adc jmp xlat mov inc arpl lea lods fimull add xchg push xchg sahf xor stc dec xor in mov mov dec mov mov mov mov movb mov mov dec mov mov mov xor push pop div add mov mov mov mov xor push pop div mov cmpl jne pop ret push lea sub push push mov push mov sub andl push pushl call pop pop test jne pushl call pop movzbl test jne pushl call pop movzbl test jne push lea call mov mov mov andl pushl pushl lea push call add mov mov mov movb push pushl pushl call add mov or mov movb lea call movl lea call orl mov jmp mov mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov lea call movl pushl lea call push call pop push call pop push push lea call mov mov mov movzbl test je mov movzbl and je cmpl jne andl mov mov mov mov inc mov movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp movzbl and cmp jne movzbl and shl mov mov movzbl and cmp je jmp mov movzbl and shl or mov mov inc mov mov movzbl and cmp je jmp mov movzbl and or mov mov inc mov jmp mov movzbl and cmp jne mov inc mov jmp cmpl je mov and push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je cmpb je jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp push call pop push call pop push push lea call jmp mov movzbl push call pop movzbl test je mov mov cmpl je cmpl je cmpl je jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov movzbl push call pop movzbl test je mov movzbl push push lea push call add mov mov mov movb pushl lea call movb lea call movb jmp mov mov mov pushl lea call jmp mov mov mov pushl lea call mov inc mov jmp push call pop push call pop push push lea call lea push mov call mov or mov movl lea call orl mov mov mov add mov pop ret push mov sub andl lea mov cmpl jge movl jmp andl mov mov movzbl test je mov neg mov lea push pushl call pop pop movzbl test je mov dec mov mov movb pushl mov call mov or mov mov mov pop ret push mov sub andl lea mov lea push pushl call pop pop pushl mov call mov or mov mov mov pop ret push mov sub andl push push movsd movsd push push lea push call add lea mov mov inc mov mov mov mov incl cmpb jne mov sub mov mov lea mov mov movsbl cmp je lea push mov call mov or mov mov jmp lea cmp jbe mov movsbl cmp jne mov dec mov jmp mov mov lea cmp jb mov mov mov cmpb je cmpb jle cmpb jle jmp mov dec mov jmp mov movb lea push mov call mov or mov mov jmp lea push mov call mov or mov mov jmp jmp lea push mov call mov or mov mov mov pop ret push mov push push andl movzbl test je movl jmp movl pushl mov call mov or mov mov mov pop ret push mov push push mov push mov push push mov andl andl push mov add call orl pushl mov call mov add push mov call mov or mov mov mov mov mov pop ret push lea sub push push mov push mov sub mov mov call mov cmpl ja mov jmp push call pop push call pop push push mov add call jmp mov call push lea push call pop pop mov mov mov andl pushl mov add call movl lea call orl jmp mov call push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp mov call push push fstpl lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov pushl mov call push lea push call add mov mov mov movl pushl mov add call movl lea call orl jmp mov call movzbl push lea push call pop pop mov mov mov movl pushl mov add call movl lea call orl jmp push call pop push call pop push push mov add call mov call mov andl jmp mov inc mov mov cmp jge cmpl jle push call pop push call pop push push mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call jmp lea push mov call movl push call pop push call pop push push mov add call lea push lea call jmp mov add mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je mov mov mov mov lea push lea call mov mov mov cmp jne movl jmp andl movzbl test jne movl jmp andl movzbl test je push call pop push call pop push push mov add call mov pushl mov call push lea push call add mov mov mov movb pushl mov add call movb lea call movb mov movzbl test je movl jmp movl pushl call pop push call pop push pushl mov add call pushl mov call push mov call jmp push call pop push call pop push push mov add call movl lea call orl mov mov add mov pop ret nopl cmp movsl adc xor adc xor adc xor adc xor adc jns (bad) mov test sbb mov ja mov mov dec dec pop sbb add dec loopne dec mov mov or adc aas gs out pop xor (bad) fistpll out data16 test or adc (bad) ljmp sbb mov jmp dec sub mov clc cmp mov fbstp or sub subb jecxz shrl lret movsb inc loop pop cmp xor shrb jecxz aam out scas movsl fcomip sahf cmpsl cli push push or call xchg push call cmp xorl clc ret push inc stos out jbe aas in cmp xor sub mov negl imul inc popa add stos je pop dec mov and add add add and dec jg jno clc mov push adc insb or outsl lock cli data16 mov and or or aaa icebp sbb lcall ja loop inc loop xchg jb fwait pop xchg xor mov push (bad) ret mov push out jge call mov adc test mov lods dec xchg add sti cmpsl cld xor (bad) or mov push xor add xor inc jg inc jbe (bad) dec ret loope push lods inc pop out inc mov inc dec in xchg (bad) mulb ss movsl loopne,pn f2xm1 popa adc sub or rcr add in add or rcrb out lcall in repz mov xor adc mov add mov (bad) pushf dec divl shlb test enter bound jbe fnstcw lret sbb mov es push fadd or rcrl dec mov mov pop add jo mov pop xchg (bad) cmp vmwrite lcall (bad) iret push add xorb inc xchg push inc push insl mov outsl sbb mov jne sub jo sub cmp push and pop scas insl popf (bad) call pop inc repz fs cmp dec shl dec fildll test test iret stos or loope es dec mov out lods or inc sbb es rol iret lods cli ljmp ja gs enter xor lock xlat mov lahf and aaa xchg mov adc pop es pushf loope inc xchg fwait aam mov mov mov jmp icebp (bad) outsb scas cmp pop out aad nop mov leave adc imul xchg mov sbb pop pop or jge fldcw cmc add movsl movsb sbb lret sbb in insb mov push pop xor repz xor dec push rolb test inc sar push mov jl jno cltd jne lods jg jne xor test js pop dec dec adc xchg mov fmuls fcoml scas shlb inc enter stc sub or aas mov arpl add inc mov lahf clc sbb jns shlb mov cmp cltd mov or mov (bad) xor aad addr16 pushf xor mov mov mov cltd and cmp rcrl inc mov jle lock cmp add mov push sbb sbb std sbb clc call mov js,pn lret pop (bad) cmp pop pop mov scas dec sbb ret cmp in push mov jnp pusha fucom sbb dec ss adc int mov hlt adc shrb test mov mov push sbb lock into xor xor xchg dec enter stos aas je dec or repnz dec movsl adc pop lods cmp mov xchg mov leave je and cmp test aad mov cld jo scas sub pop mov adc movsb jp in add sub inc mov lret adc sbb pop add js sahf dec xlat test jp jbe test fldl cli insl test cmp and addr16 pop xor dec or stc dec inc scas imul lock xlat lahf cmp ret in enter sbbl mov push shll rorl or in jl inc mov ja dec inc neg fisubrl push leave hlt cltd out sar sub pop add ds lods daa jecxz repnz lahf lea (bad) pusha out add icebp pop inc leave inc into xor inc adc scas sbb add push jns int3 push mov int add sub or fwait jo lahf xor fldcw and arpl sbb inc sti scas xor lods data16 inc ds test mov ret hlt adc mov into sbb sahf or adc inc (bad) mov push xor shll gs mov ss jo mov xchg and fldcw mov push or pop mov ss fdivrs mov push divl decl fcomi das aam pop adc fwait ret mov fildl in push rorl sub loop adcl jae ficompl imul adc fdivl in cmp xor push or ret lret mov mov lods pusha fnop inc mov add pop jo rcrl fisubl mov mov in dec or add addr16 lret bound je push faddl or (bad) jecxz,pn mov jno push mov and xlat sub ja dec stc jbe inc pop sarl fisubrl stc mov imul push sbbl gs add xor xor into mov mov dec loop stos shrb sbb fnstenv mov out pop out ja je add outsb add pop jnp jmp push sbb imul add inc scas mov lret pusha lds push hlt xor xchg lcall shrl jo pop mov js add xchg dec inc je dec in sbb cltd popf and repz cltd dec jge sahf xor inc int3 ret or sub inc je ds mov push dec loopne iret fcom call adc push sbb cmp jns push dec into dec mov xor aad scas mov ljmp jno roll test cwtl jecxz ret lods push jae loope mov inc sti popa push sbb push inc insl int3 cmp sbb sub outsl pop fwait in movb les mov fbstp cmpsb push jg pop adc jge push dec sarl (bad) cmc push ss pop sbb jbe xor out dec jg push rorl dec pushf rorb pop rcll test push xchg jns cwtl dec arpl icebp (bad) in jae fldl rorl push push mov out hlt push mov dec or sub mov fwait (bad) call push jp jne into aad or fcomi dec incl mov imul (bad) mov jl mov fist loope ds popa push dec mov push and inc and or adc stc nop mov xchg adc mov je and push jmp das inc inc mov rorl sub mov int3 push xchg shrb cmpsl xorb mov mov sbb mov addr16 lahf sbbl add popf lds or or pop scas xchg jno mov cmp test outsl sub xchg lods scas pop cmp pop lock es push out cwtl daa push rorb mov icebp ret outsb push (bad) pop mov push cmpsb jnp (bad) pop jbe loopew push icebp adc cmp push inc or pop mov adc addr16 xchg mov cmp mov std je sbb lods pop fbstp dec ret outsl jg loopne xchg and xchg cmpsl mov or jg and add and aad outsb (bad) int xchg jno mov aam in inc mov (bad) lds ret jnp data16 xor mov cld scas push mov int3 dec xor dec mov jp (bad) and stos xor cwtl inc fldt cmpsl imul push mov aam stc gs (bad) xor mov out in mov bound leave add and rcr aaa int3 mov outsl and sbb outsb movsb pop bound xchg into mov lea popf out push test pop xchg shrb xor xchg mov xchg inc adc or xchg lret (bad) push xchg mov push scas jmp dec add movsb jmp insl shlb or xchg lds ret jno pop bound (bad) push popf cld int3 test loop stc ja dec fisttp push nop insb test fldcw dec adc adc or or sbb (bad) iret sub popf pop jns inc and loop lds jnp stos or adc xlat xlat adc add inc stos mov inc je test fcomip sub insb add push (bad) psubusw or dec daa push push mov iret loop loopne daa xor lock inc add stos mov cltd ljmp lcall scas mov cmp mov daa enter js jl lahf adc ret je xor lea test or mov out out push imul jns push repnz fs pop (bad) out dec out cld dec rorb scas mov out push jmp jb mov sbb xor mov sub ret xor adc lahf dec mov stos push out mov jb loopne stos fisubrl test push sub pop mov rcrl arpl and pop adc icebp pop int3 aad push les aas aad out mov inc in dec or adc out inc fimul add in ss mov push push mov ljmp xchg add xchg test sub pusha xor and or pop pop iret inc mov dec push cs aad xor test stc imul inc fisub leave in icebp repz aaa xor dec hlt pop in jg inc sbbb mov shrb mov mov ss ss dec add and cmpsb stos mov xor cmp xchg mov sub mov or pop int3 es ficom jnp sahf negb hlt hlt mov mov loopne jp or cltd mov (bad) mov jle pop mov and pushf sbbl adc and mov ret stos mov aam fisttpll ret push push hlt mov pop test stos mov in leave mov lcall xchg mov and pop stc xor (bad) dec (bad) aaa jne fwait mov ja mov repz pusha lret push mov sbb js xor (bad) xor cmp push or push cmpsl xchg (bad) xchg or rclb lret sbbl popf inc (bad) repz sbb push mov inc pop insb sbb stos mov dec mov xchg rcrb std leave xchg cli and subl out test bound fsubl add fsubrl orb xchg inc (bad) loope,pt pmaddwd cmpl pop mov lcall jnp mov sub mul fistpl or les leave mov (bad) je fild jg mov bound sub mov dec mov daa ds and fdivr dec xor out sbb fisttpl mov or jae rolb push sub jno mov xchg dec stos xchg je xor loopne mov dec (bad) xchg ret lea pop dec in aas loopne test xlat (bad) insb push std sbb adcb stc xor push adc xchg push scas es cwtl mov pusha or movsb push out imul mov shld mov addr16 fsts xlat pop xor int3 mov push pop cmp pop cmp stos xchg push pop mov pop (bad) mov dec (bad) jae insl mov and in ds inc aad scas mov adc inc ret int3 mov testl push and add jp (bad) repz inc add (bad) add push outsb mov push in add sahf jb stos sub stos daa xchg enter jg adc pop sbb in mov shl adc inc in std cmp out jle mov jle scas movsb rcrl (bad) jl sbb sahf xchg dec xor mov loope daa jnp jmp sbb pop hlt test stc mov shl dec leave mov jmp and lahf jmp nop inc push gs int pusha cmp ficomp xchg pop jnp inc hlt pop sbb std pop das push push testl scas inc repz lods sub dec dec pop add fidiv arpl mov sub inc stos mov jnp xchg movsb jno xchg ljmp mov out ds aam fiadd and jmp hlt xor cmp fsubr inc xor stc pop repnz push inc jno xchg (bad) sub jns push popf pop and sbb les out loope loope jns stc (bad) imul xchg xchg jno clc add orl lcall mov push add push add mov mov jae jb loope add dec mov popf fisubl inc sbb or negl mov sti pop mov cwtl and addr16 pop xchg pop push xchg and pusha xlat or addr16 mov loopne cmpsb call pop jae movsl (bad) mov (bad) pusha pop xchg mov xor in insl aam jb aam mov inc dec fldt xchg ret incl insb punpckhwd dec push push aad aad mov repnz fsubrl mov adc xor jecxz std fldcw lahf clc (bad) mov push das add cmc xlat in sahf in dec dec (bad) scas mov jle and imul clc mull sbb (bad) sbb push lret pop adcb leave adc push mov or pop pop fwait mov (bad) mov xchg lods xor or cmpsl xchg in push xchg fsubs adc rcr mov fwait add sub (bad) ja scas mov push cwtl pop jnp and jecxz pop xor sbb inc (bad) jb push pop scas inc cmp mov pop int mov loopne fimull fidivrl stos mov dec mov dec cmc dec pop (bad) dec xchg or pop cmpsb mov inc sarl mov or lahf mov jmp das push cmc ss cwtl aas adc sub (bad) cmpsl add mov xchg mov push and test je lret fildl sub cmp and notb jp dec jbe fwait sti fwait jne xchg sub pop mov cli mov xor sbb cmp es insb sbb (bad) jge sbb test test sub jmp test fldl2e dec jp mov (bad) out idivl pop push enter inc or xchg gs pusha (bad) or or fadds aas cmp lds mov inc jnp xchg push add aas or out dec popa add sub or hlt xor jb mov pop dec arpl sub pop pop mov in inc (bad) xor add add and dec cmp int3 mov cmp hlt mov rcrl cmc adc mov loop push jmp cmp push pop push ret cwtl scas pop je sbb adc and call add xchg arpl pusha push xor repz cmc push pop mov stos js jo inc sti sub lock (bad) jle push fldenv pusha icebp jbe dec pop stc ret xor mov cmp or int and (bad) orb out jne rol sbb iret aas fisubr inc mov sub lahf (bad) sbb sbb hlt ljmp adc push in pop and sub sub sahf dec jb pop dec mov push mov ficompl sbb inc sub ret enter das loop lea sbb xchg sub pop mov cmpsl (bad) lea add mov dec lahf dec (bad) mov enter inc jle jmp (bad) mov (bad) out cmpsl xor fidivrl mov cmc je inc pop data16 test test xchg push in mov xchg int dec or xchg pushl sar mov mov imul inc xchg je pop stc popf push mov popa clc pop aas mov and out (bad) push add xchg push ja aad popa sub scas pusha and sub jecxz lret dec or jo out in add sbb add cld sahf fsts jg (bad) fisubl xor jp pusha add notb rcl push and dec cmpb or ds mov lods inc pusha xor jno sahf stos fsub sub (bad) js out test lds and xor xchg repnz xchg dec xchg (bad) mov pusha or xchg and push cli pop lahf cmc adc jg add cltd lock push (bad) adc insb or xchg aad jno add xlat dec xor sub test mov pop sub aaa (bad) lea add xor imulb inc and ret mov ret rorb dec movsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns mov pop dec mov es inc fcomi sub cmp sub icebp outsl imul fmul ret adc or out dec popf cli jbe bnd pop rcr push jns or call hlt xlat inc jle mov inc jb pop jge loop and nop mov daa and xchg sbb cmpsl popf arpl out mov (bad) cmp and iret ja pusha mov xchg and sub inc xor and hlt sbb andb jge inc pop jecxz add mov and add sbb inc in push push push scas std mov xlat int3 bound push in adc call sbb push xor mov mov movsb mov fmuls inc lcall jle jns or out and mov fs cli jecxz push out dec fsubrs es push cltd in adc adc icebp xlat sub jg or rorb mov cmpsl mov dec xchg pushl cmp xor lret arpl push pushf movsb mov xor or mov std push call into xor pop lock cld jle xor or dec and gs lock (bad) cmp dec sub (bad) (bad) xor in mov mov (bad) loop push gs loopne xchg outsl (bad) dec mov popa call mov out aam xchg mov adc cltd sbb std mov mov jnp sub loop js in orl xor insl rcrb lds lcall adc sub fsubl popf mov inc push ss add fdiv cmpsl pop inc loope in mov int subl mov pop insb push cmp or test movsl push pop inc call lret frstor stos inc ficoml aas sbb and jno into mov lock repz mov ds leave mov or aas lahf mov or mov adc and stc push in out cmp in inc lds cltd mov dec fistl aaa repnz xor jnp jle data16 xor adc psubusb (bad) repz and popa in push nop (bad) push popf insb call lahf or pop insl lods orl xor iret repz nop add mov (bad) or outsb mov scas loopne sbb ljmp mov mov stos inc incl lods add popa test imul out subl scas cmp or mov xchg in inc and shl out cmpl xchg push cmp mov pop fadds inc mov mov xor aad int3 cmp and pushf jg jne nop pop dec call jle insb mov inc pop cmp push int jg inc popf push fs push cld jg mov leave push push and xchg jne fbstp sbb cmp sub xchg adc push xor add stc popa leave and inc cld subl lret mov mov add sahf sbbl add xchg mov ret fistp loope adc cmp addl sti add dec fdiv mov imull pop sbb mov jp ja sbb xchg inc aaa mov inc jnp in xchg sbb fs jno std mov jl mov and or decb sub sbb pop hlt inc or cmp (bad) idivb insl scas or xor out jge add xlat jae aad mov movsl in popf mov pop cli xchg jp loope xlat pop scas pop aaa cld lea mov jne dec jae jl nop cltd or gs or mov jge push outsl loopne xor inc inc xchg repz (bad) and mov adc into xlat pop pop sbb in shll jno pop xor ud2 jbe mov rorb xor pop xchg jbe cld pushf dec scas dec sub mov movsl xlat repz or or dec mov mov sub dec stos cmpsl pusha sub lea mov mov xor lcall sbb rolb push mov aad jne or jge xor mov push add sbb jge ret out sbb fptan mov adc loop inc rorl lods push ja add mov dec arpl rolb inc add push add jbe in (bad) aas push fsub incl test mov bound mov cmc nop cmp aaa loope mov mov pop jp loope cmp jo test enter std push mov in mov js jge,pt ds sahf and popa repz andb adc loop dec adc orl inc xchg jmp add sbb outsl out fimul into xchg sub rorb xor sub adc sbb jl lods push jge stc jg sbb pop out jle xchg pop sub mov jp divb cld pop inc idivb mov mov xor add inc dec cmp cmc loop mov nop xchg mov xchg mov outsb shrb fcom dec (bad) and ss insb cmp add lret push pop sti lods into (bad) sub ds jecxz jbe fstps fldt je add cld nop call xor mov dec mov rolb and adc lret ja cmp jmp jb bound test mov cli mov mov sbbl jmp jns xor nop add mov pop xchg gs sub lret adc xchg sub push imul fild lock rcrl xchg push popf jbe outsl mov testl push or mov pop mov gs stos loope data16 inc (bad) xor stos in xchg pop cmc sti outsb or jno addr16 sbb or std cmp adc mov hlt loope test rcrb xchg ret jge lods (bad) stc cmp test aam scas cltd jne or fs sub adc mov test mov ret dec xor cmp in insb mov xor sarl jecxz lock (bad) cmp pop mov inc test out cmp xor xchg addr16 xor mov test popa movsl mov sub ret cmp cmp out rcll dec adc test repnz out scas out sbb pop mov jne pop movsb or (bad) xchg mov (bad) push mov popa test aam or sbb jge in and mov sahf dec and pusha idivl fwait jmp je dec fwait or mov mov and mov and daa xchg outsb shrl mov xchg addl mov dec ret and pushw or dec pop (bad) (bad) jge cs xlat push jecxz pop push loop xor in inc ss mov outsb dec popa fsubrp and pop add ja stos mov mov jmp js pop jl jecxz pop test ja ss pop lret or xor jo push pop push ret cmp imul xor adc push xor adc frstor mov xchg sub and xchg push sbb loop xor insb push into sub sbb rcr xlat pop mov lret mov movsb in test jae popa jl inc jle mov stos cmpsl lret aaa ljmp xchg add pop cmpsl mov sahf xor test dec mov fwait loop push mov mov inc movsl (bad) je icebp movsb cmpsb mov jg lahf jg popf cltd cmpsl sbb imul mov aas arpl ficom add lods sub sti out dec dec orl repnz adc in in pop cmpsl mov xchg lcall scas repnz fwait test jmp pop pop out mov lods jge xor mov jecxz stc in mov movlps adc scas and std imul leave insl push sahf mov add add les stc jl into sub mov mov fisttp pop aam cs add add mov xchg arpl es or and in cmpl and ja and (bad) mov jbe mov lock mov push mov cmp and enter push sbb mov aas jp mov push and pop adc lcall jg fisubrl mov aaa cmc dec xor fdivp xchg fsubrs enter outsb (bad) (bad) fdivrs cmp jmp ss and leave shrb out (bad) outsb add loope dec aas cmp dec inc or fisttpll insl data16 subl dec mov rcrb xchg outsb fsin sbb clc or sti pop add jae leave xchg movsb pop insl pop xor mov mov cmp cmp mov test xlat push dec lds mov loopne mov xchg stc (bad) mov sub scas mov scas xchg (bad) cmc xchg mov lods mov xor inc jb push loopne mov push mov pop xchg add lcall divl push mov sbb xchg jb (bad) rolb test cmp addl pop aad xor out mov push (bad) in repnz stos or fisubr pop push hlt leave test daa repnz mov and jns sbb lret es pop daa inc movsl popa fnop sub pop clc sahf outsb or dec jb std jmp sbb in aas scas fiaddl pop cmp test jo and lock inc mov bound cmpsl clc stc outsb dec mov sahf shl outsb pop xor cltd sbb xor ja sbb xlat je inc icebp pop mov cld jl shrb pop or sub enter adc dec and push out fcoms cmc mov jno and out pop (bad) cmpsl ret loop mulb in mov xor negb and jmp mov stos xchg loope (bad) push stos mov fldcw jb stc (bad) (bad) icebp jno lds add xchg mov pop push dec das icebp cmpsb mov aaa inc repz pop sub fldt cmp aam popa lods popf inc and (bad) jl push andb adc sub jl mov adcl cld lds fmuls xchg ds sahf jl cmp insl (bad) jnp imul mov lods roll cwtl jnp rdmsr mov mov jbe adc cmp inc dec mov adc mov adcb loope xor jle loop mov mov scas cmpl xchg fiaddl pop jbe xchg mov test add aad xchg int3 and xor mov push aaa ljmp dec push movsl adc test adc cwtl repz mov xchg sub mov or adc sbb (bad) aaa leave pop jge ret inc fistp in test jmp rcrb push jmp mov xchg jmp xor cs jecxz fwait xor pop aaa lahf pop sbb movsb pop loope test aas pop inc movsl mov test pop add imul push sub cli hlt js push rcll sub lret mov test xor mov arpl lods push pop icebp scas (bad) and out pop xor les fwait push (bad) mov test icebp andb nop push cmp fistpl xchg clc dec cmp imul or adc push frstor sbb pusha mov xor aas mov mov mov cmc add jmp mov gs dec mov mov inc nop mov fisttpl popf in les jle inc mov jo aam cwtl push inc sub test xchg cmp sbb sub lea mov push pop mov leave jecxz inc insl jne mov dec adc orl gs mov mov sbb sbb jmp mov mov aam (bad) lods ret cwtl jnp imulb aas jmp and sbbw insb iret sub scas push push popf sub pop mov sub stos xor dec add jb jnp scas sbb lods insl sbb (bad) mov aas add jl mov adcb cmp xchg cmp mov es pop push xor imul cltd sbb test sbb dec arpl mov (bad) std cmp lock inc sbb jb dec pop mov cltd pop mov push mov stos incl stos cmpsb sarb cltd inc jge ss fmull scas (bad) cmp sub negl clc push (bad) std jg adc test jne dec notl icebp sti not add push xchg sub shrb adc adc pop imul cmp push bound inc aaa sbb dec pop addr16 cmp pop jecxz sahf adc xchg pop idivb mov sbbb scas aad psubb in dec dec sub jnp cmp xchg movsl mov add in dec cltd push xchg ficomp lea adc sbb xchg fimul loop jo adc pop pusha stc or stos dec and push xchg rcrb dec and leave nop cld and ljmp in inc out push push xchg lcall andb (bad) repnz dec and out test sahf loope xor imul push or xor mov jo inc rclb ret cmp xchg dec cli stos push adc xchg das enter imul and adc cmp lock and lods fs lret arpl cmp addb mov mov adc addr16 fnstenv xor pushf rcrl pop lods stc or imul xor testl mov lret test jmp imul mov push adc add jecxz aas jo scas or cmc shrl mov mov inc jae sub mov fldt es popa out jne push fdivs dec cwtl repnz xor imulb leave lods jle mov leave push xor xor mov xor and test xorl fcom xchg dec mov xchg jecxz or jno sbb inc xchg ret push sub jnp (bad) jo js inc mov fs xchg push jmp andps in ret jae inc adc fs sub fwait mov out and pop stc xchg rorb jns mov sbb dec (bad) enter jmp mov pop fisttp cmp jnp mov je pop push sbb fnsave and shrb mov inc ss fldt idivl inc cmp adc or or repnz (bad) fmuls or pusha es test lret stos pop in jl jge mov jne push jl or imul cmpsb dec cmp (bad) pop test mov dec popf enter pop movsl lcall mov cmp sbb call push push popf pushf mov jae out scas imul call sub sub shrb cwtl add enter or shlb aaa fwait sub adcb cmp pop xlat cmc push adcl jmp (bad) pop into test dec outsl mov inc adc and in sub inc fdivp fistpll (bad) xchg push fmul out pusha test adc mov pop push xor pop cmp out xor xchg pop mov pop inc jg fnstsw mov ss or out mov mov jecxz cvtdq2ps fbld neg mov push push mov inc jae (bad) sbb gs movsl or popf mov and mov rcr inc jne adc lea aaa inc cmove das inc push dec sahf dec arpl idiv ret cmpsb sbb xchg test stos cltd and pop (bad) dec repz pusha xchg ss inc mov mov outsb popf fwait sahf mov lret push lea sti das add ljmp sbb dec push add xor mov daa push pop dec cli int add jmp xchg push das lret mov aas imul cmp fbld mov pop addl outsl aas push pushf sahf mov lods sbb scas mov (bad) sahf inc jne xor jo push scas pop ret push cld xchg mov mov loopne sub add fsubs wbinvd add lret lea adc sub xor cmp push mov xor mov cmp push sbb dec adc or leave (bad) xor imulb mov and call (bad) xor int or add or jge test sbb popa divb lds popa jne and jb stos or (bad) in or cwtl loop in nop imul jmp into pop pop je inc int3 out dec fnsaves push scas data16 mov stc jae sbb mov aaa or cmp pop cld repz xchg or ds lcall mov jb idivb sbb xchg insl cli outsb adc leave aas pop fcmove dec jnp cmp or push rolb xchg fmuls push ljmp and inc bound mov aad dec pop jl add cli div xor lret insb imul fidivr push cmp loopne psubd pop xor push xchg cwtl mov rorl divb movsl jmp jl aam lock cmpsl sub mov pusha test insl inc repz sbb cmpsl out scas mov fs inc push int jle out outsb sub cmpsl mov cmp cmp clc (bad) popf in aad jg cmp push mov inc mov cmp cwtl test inc mov push xor cmp fildl dec insb mov xor je jecxz ja sbb jo jns int cmpsb es push aam scas in mov inc dec or ljmp mov loop insb pmulhuw cmc jae ja sbb sbb inc xchg jge pop ja (bad) fidivr movsl es sbb jle vminpd xchg insl mov sub fist lret push pop inc mov xor fist pop inc and add stc adc lret cmp (bad) repnz cmc push popf and fwait sub inc int3 mov inc cmp and jecxz cmp nop popf aad (bad) cmp push int push in scas adc push and xor pop mov (bad) popa push add adc movsl sar cld add mov mov rcr xchg cmp push stc mov movsl pop sbb add dec in cltd std sub fisttpll xchg mov imul push cltd add iret lock sahf inc or and ret or mov inc std lahf jne cmp add dec test push lcall cltd mov rcr lahf sbb inc cmp js push xor sbb sahf cld js out icebp movsb outsb fcom movsl (bad) scas hlt lret jno cmp push pop pusha cmp adc orl pop jnp and xor stos pop test (bad) out mov fsubrl pop insl jbe mov nop lret shr in mov pop sbb cld roll add sti shl dec out push sub jmp push (bad) mov fimul push dec lret jnp lret push xchg jo test dec mov aam cli jmp test aas push (bad) and lcall pop lret dec fildll push lods push pop cmp cmp clc sarb add (bad) xchg lret fnstcw mov ret fnsave mov mov int outsl ficomp sub push xor push (bad) jae ret fwait pop clc (bad) mov pop push inc inc mov sarb or insb and mov in and push mov repz push and xchg sbb sub setnp pop mov mov fadd nop out and jbe jo inc and mov iret mov stos std (bad) std cwtl sbb pop xchg jecxz xor jmp mov lock stos mov mov mov inc scas lret loop xor lea add and jmp rcll test xorb ficompl jne inc fildl mov lock (bad) jp imul std aad mov test jge pop xor outsb test mov cvtps2pi push mov xchg pushf outsl leave sbb jne push mov mov imul out (bad) std loopne push xchg xchg push cld lods cltd push xlat sub cmp inc scas adc bound adc jns push sub ljmp ss in fnstcw xor sbb add push mov mov xchg xchg ss dec cmpsb loopne mov sar xchg mov cmp jecxz fisub sbb pop push xor sysenter inc aas push jne fwait in cmp push pushf mov mov mov cmp xlat fiadd pop or ljmp sbb push adc inc movsb and xchg jnp stos int3 mov loopne jmp mov int3 mov sbb push das sbb cmp imul push leave xchg or inc mov jo mov or lds push std test jg mov mov mov (bad) dec sbb cltd or adc sub mov out mov or pop int xchg cmp push hlt in mov aam push push jle mov xor pop (bad) or mov jae pop cmp sub (bad) out add inc lret sub cltd adc sbb fist xor mov aaa xchg dec es or jns test (bad) stc (bad) xor push js aas insl jbe stos imulb sbb cmp aaa mov inc add divb xlat lret add cmc lret push add stos push idivl aas pusha or push addr16 sub aas je aas sti inc movsl xchg sbb lods test mov jb push in (bad) jne jl (bad) adc aas sbb mov xor ds dec push sub push xor (bad) test jle (bad) push loop sahf ljmp dec xor pushf adc bound pop add incb dec bnd into fstpl cmp ss sub bound insb insl sahf pop add insl xchg sbb inc roll mov push int3 lds pushf cs ffreep mov test cld add dec push (bad) int lret in dec add xchg pop fwait push int dec mov pop add loopne movsb sub push enter mov jmp fldenv ds jnp xor aad and std clc insb xchg std es (bad) mov pop sbbb sub mov inc fadds pop mov imul jnp sub sahf inc sbb popa out mov pushf xchg hlt mov fisub push push aaa mov xor push inc rcr jns jnp fwait cld mov popa dec mov inc cwtl push je sbb jge push dec subl mov out repz pop push cwtl das adc leave push and mov xchg add outsl cmpsl int in jecxz pop mov mov xchg jle and pop das sub xchg xchg insl dec pop push jae lret dec (bad) jb data16 int3 int3 cmpsb in dec roll mov xchg mov dec push (bad) jmp jp cmp bound xor push xor push dec or (bad) mov outsb loop adc loope or hlt push les adc pop push push enter aas lret stc cs xchg pop fnstsw (bad) (bad) lods or xchg stos inc testb fildl lcall addr16 out mov ss cmp push out sub jp sub push or loopne jo jecxz ret les movsl xor aaa and jae mov sub xlat xlat enter push iret not or or cs or aam loopne popa lcall jl ja lock mov in in add or adc out std push pop dec sub mov or ja mov data16 insl pop mov pop mov xchg fildl jecxz cs cmpsl xor fdiv jae cld push adc add insb or test xchg or sbb sub fsts daa pop pop inc push fsts push into iret clc aaa ficoml mov hlt jg nop inc xchg mov popa sbb test jp dec sbb xchg inc pop imul push aad mov pop cltd pusha jmp ret mov ljmp pop or insl push sub sti (bad) loop mov mov jns imul mov stc jge loope sbb sbb cwtl outsb mov arpl or popa inc push gs enter bound and push fcmovne mov fmuls je (bad) pop out mov enter jbe xchg out out or movsl jb (bad) mov loopne insl adc push jl sti pop or push push aaa out cltd aaa imul in dec mov js jo inc sbb and lahf push jmp xor or and pop or mov xchg xchg repnz sub aad jle in fidiv pop inc mov imul inc jmp incl pop rep int loopew cli (bad) dec jb mov outsl pop pop dec xor jmp andl fisttpl and aad sbb sbb mov sbb enter imul fisubr and hlt js (bad) (bad) into pushf pushf sbb xchg inc icebp inc (bad) adc and fstpt mov hlt inc idivl sahf shrl xchg adc shl movsb sub cltd call mov (bad) lahf cwtl mov scas and in fsubs mov jmp fnstcw mov scas (bad) jae mov mov xchg rclb iret cmp imul dec pushf es xchg pop pop es push sahf xor repnz mov movsb add aad mov sti jnp lds push jp int sbb cli andb neg (bad) jne inc sbb mov out lock mov rol pop dec call ss inc inc jbe ss scas lds fwait rorb and leave mov add add (bad) pop insb mov scas cmp add sub add fmuls imul repnz mov (bad) inc arpl pop (bad) in out sub daa xchg mov mov push inc jecxz or scas fidivr xor xor push aad in xor icebp xor lds shrb xor gs lock sbb test pop pop ja ds int test out pop test fcoml jns and das lods mov fdivrp and and mov loop movsb ss mov jg cmovg cmc push inc adcl xchg sbb jle imul sub add mov rclb cmp jmp xchg xor jne cli sbb xor shll out add dec mov pop push aam jo jb fcmove mov addb push mov (bad) adcl mov std shll daa pop cmp in jbe jge lcall sub adc je add lcall mov (bad) and ja,pt and add cmp in mov pop dec inc arpl sub arpl xchg mov imul out jl scas out imul jne enter dec cmp ss adc dec leave and sub adc sbb insb add cli pop notl out test mov jecxz cmp fadd lods into fcmovne pop lds mov imul into ja leave (bad) mov and sbb xchg and jmp adc stos pusha mov bound imull test je ret je cmpl sub (bad) mov sbb pop aam push cmp mov jge dec dec push je sub fdivp lds and stos test fstpl addr16 mov mov push daa or fstl sub jo test les clc push sub fidivrl sbb push cmp adc (bad) lret cmp fisubrl mov in iret push (bad) mov cli mov cmp xor mov pop addl xor jecxz pop pop sub pop mov cmpsb cmp push test nop push (bad) clc rcr inc sub (bad) pop stos lret outsl sarl shlb or pop (bad) pop mov jno loop inc loope mov inc pusha test pusha or icebp scas cltd fs scas nop js xchg inc stos (bad) ss jge test jg fidivrl inc movsl cmp sahf mov push jmp pop mov leave stos inc sub repnz push aas enter adc rcr fildll out adc adc and and andl fmuls aas pop dec call mov xor and mov lret jnp mov cltd mov and fistpll int3 fidivl js and mulb mov in scas popa es mov fwait and add daa and pop xchg pop ss std sti cmp or aam ret inc cli lock mov ja iret stos dec sub shlb stos lret adc push fcoml lret pop dec adc xchg (bad) xchg out pushf xlat cmp and fdivl sbb ss cli test imul mov mov mov xchg xchg dec bound sahf pop (bad) repnz gs std pusha (bad) jp ret cmp pusha push cli incb and imul nop xchg xlat dec je sub cld out (bad) mov sbb and addr16 data16 addr16 ljmp push xchg dec jno push xor pop xchg xor sub jnp dec and loope mov and xor ss insl add push fwait lcall stos ret xor cmc xchg loop cmp jbe pop pusha mov (bad) jns (bad) fs inc push sbb js inc (bad) fstpl cmp push sarb and mov les outsl test sahf int3 mov ss cmp add dec pop ds sahf cmp rorb js test imul call scas out sub or ucomiss mov sub (bad) rclb push push push sub cmp lds loope push lock in inc and pushf test jl jno inc xor in leave mov loop xor data16 outsl jnp mov into cmc mov add xchg mov add push adc test lock leave sbb jbe test mov in rcl push hlt cmp sub addr16 ljmp inc inc mov mov jnp xor xchg and (bad) movl fs mov add out outsb (bad) mov jg scas sbb pop mov or mov cmp pop loope mov addr16 xor dec push lahf sub es xor sbb xchg mov inc punpcklbw mov ds ret (bad) mov jo test rcr sti inc cmp sbb pop nopl and fiaddl es cli mov das pop imul fcmovnb ja lods outsl pop push pusha icebp loop mov xor sub iret pusha call cltd popa add dec inc lock pusha fnstsw aas jl push (bad) cltd dec aas scas ror dec mov sub mov divl (bad) ss lret outsl push jns je cmp gs push lock cmp sarl and jnp inc in xor mov enter sub xchg neg pop cwtl in test cmpsb pop notb daa popa add or je int (bad) mov add mov arpl fadds dec inc adc (bad) jb add loope sbb outsb fs mov cli jae mov add dec jp mov cs push mov push pop insl test popf rol daa gs xor out cld sub pop je stc int3 pop mov add push mov sub adc sbb cmpsl pause pop sbb sub insl push test fs notl nop pop xor lret outsl dec int iret es (bad) rol rorl and imul imul insl adc ds push inc fistl test or dec xlat scas push (bad) sub in cmpsb dec in fist add divb loopne icebp dec int pusha jg and pushf mov cmp add mov rorl dec jge pop or loop cltd aaa add aas scas int or xchg shl mov pop es and dec jno xchg jb adc ljmp stos cmp pop pop sarb stos sub mull mov (bad) pusha pop adc lahf xchg pushf push mov push xor xor sbb pop push lahf or in pop scas movq js int cwtl cmpl push lahf fwait sub pop inc popf jecxz mov lahf pusha push enter movsb mov pop jle jmp jnp xor mov pop dec and mov mov aam push sar fsubl out sbb nop jae cli jae xchg data16 stos and fsin dec test aad cmc lea lods pop js push and fidivl mov insb push inc and push (bad) mov or inc dec arpl loope addr16 int3 aaa xor lret jno movsl or ds fyl2xp1 mov jle sub nop and (bad) aaa dec insb fdivs jne xor adc aas xchg pop shl in int3 mov xor dec cmpsl sbb (bad) test dec call aaa popa add xchg std mov pop add add clc adc mov repnz pushf das popf adc insl and arpl mov cmpsb dec in xchg add cmc test ljmp xchg setp dec fs in push dec leave fiaddl sub and or inc loope mov enter movsl jbe outsb outsl or in mov mov cli mov xchg fs test sbb scas push popl (bad) ljmp pop adc sti or sub cmp xchg in shrl cmp jbe ljmp cmc mov popa sub test sub pusha pop aad lds cmc and jns adc mov and pop and xor pop inc or out mov push insb je jo rcll test loop aam testb xorl test jns xchg pop lods sub add sti ja jo xlat mov mov scas mov lods add inc pop sbb loope stos std lea xchg pop pop loop cmp (bad) push ficompl xchg cmpsl cld je test mov and mov xor cmpsl sarb aas or mov or incb mov add sbb inc out cmp xlat nop ds push outsb jo fneni(8087 xchg pop (bad) in jl aad mov out test in je repnz pusha xchg fldl2e push cmp push jnp jmp pop outsl adc sti mov push pop clc jmp arpl out push inc cld xor jmp jp or mov aas and pop cmp pop or mov fwait aam push mov lds scas xchg ficomp cmc xor pop enter icebp mov sub jnp insb ret mov dec xor xchg jp jne sub lret sub dec sahf movsb movsl pop jl jge push push test jbe mov inc jns inc mov jne cmpsb adc aaa pop sbb scas adc dec fcoms cmpsb lock sub (bad) sbb imul inc sbb push mov xchg cmp pop fbld lods sbb push jp fstpt pop pop ljmp adc cwtl (bad) xchg scas addr16 push imul ds xor fs cmpsl popf and (bad) loop call ret inc (bad) xchg or add fcoml add (bad) movsl mov sbb (bad) pop fwait xchg addr16 push cli push mov ljmp sahf les mov les idiv sbb ja jg add push mov (bad) ljmp push dec sahf test fwait aaa and push ja sbb enter sub xlat aaa mov je push in repnz or fwait adc xchg and cmp adc insl stos and insb add inc gs jne inc sub add out cld adc jne je daa rol into and add sub sbb push daa jbe subl insb sbb sbb lcall fs jle stos lcall data16 jecxz mov mov mov pop out dec sbb jb aaa in subl mov les and mov loopne xor inc fsub pusha push (bad) inc mov fwait andb adc push loope xor mov ret pop insl inc les ficomp into add xchg roll jae push out movsb ret arpl pop aas push dec test inc arpl (bad) mov out jno,pn xchg jo aam mov lahf or mov pop or (bad) outsb nop das dec pusha lea pop dec jg pop mov imul jne xlat sub js mov or add mov repz sbb jae jl fisubr mov xor imul push out faddl je (bad) mov inc cmp cmp xor dec aad insl pop and xchg insl mov les xchg sbb dec lods mov jae (bad) loope inc mov out jmp cltd pop addr16 fldcw and fmull add mov sbb aas (bad) mov cmpsb rclb and dec lock push sub in hlt or scas cmp mov lds fistpl push sub and adcb inc cmp xor fcmovbe int3 repnz adc ja in pusha inc rorl push or std and ret xor mov mov bnd mov pop xchg leave je sti jecxz adc shll jmp push xchg insb rolb dec pop inc xchg mov lea (bad) cmc and xor (bad) fs aaa dec cmc xchg push mov xor in mov (bad) jbe dec mov push daa cmpsl dec jp mov inc daa fildl mov or mov push pop xor adc inc lret mov push and xor fwait rorb xchg pop xchg xchg cmc sarb lret push mov clc xlat push lods mov mov dec mov (bad) xchg adc and mov int xor dec jmp jnp push push cmp inc mov int3 add inc (bad) sub mov or enter mov out xchg dec (bad) in loope mov xlat cmc scas ss ljmp pop lahf insb iret (bad) loop pop xor xor mov mov pop sbb adc push addl repz jae in lods orb sub and not lea fs sbb adc dec nop or js adc push lahf or movsb sub cmp outsl insb out imul stc push push sarb test cmpsl insb pop div or in sub jo inc jnp sub mov add jne lods mov ficoml xlat out mov push mov stos sbb mov je out push std xor push pop xchg insl xchg sbb push aas cmpl mov sub imul aaa in std popf add and iret int3 repz aam in dec fstl fwait je lods pop sub test add or dec sbb insl push imul (bad) lret in sbb aad cmp sbb (bad) sbb ss cmp in out add fidivl popf or cmc mov leave call inc pop (bad) ficomp jae pusha rolb mov lret mov push inc jnp (bad) lods insl out xchg loop push loope mov test mov test daa dec scas ret push push outsl ds inc cld mov cmpsl shrl pop or sarl jbe jge leave rorl add mov xchg sbb mov mov fsubs mov adc push xchg xchg neg fidivl inc loope fidiv cmp lahf dec movsl dec (bad) pop mov pop cmp xchg jle bound push (bad) jbe (bad) jg jb mov inc pushf cmpsb stos jo jg cmp rorl add jp cmp add int3 lods mov dec jae mov xchg adc gs adc jne push cmc pop mov roll pop mov cltd stc loopne xor pop jnp push pusha mov sarl cmp dec push push pop mov imulb addr16 (bad) sub jp test sub pop cwtl mov mov std pushf xchg bnd push push das push jb jecxz inc mov data16 loope (bad) xchg nop mov out or nop mov inc lret stc fstl loop mov jg int (bad) cmp xor pop mov mov cli pushl shll mov mov sbb (bad) xor fmull int3 loop dec adc and insb pop mov and or push mov pushf sub add cmpsl add or sub and inc dec ret mov sub into xchg cltd jbe xor flds les call sub mov outsl lods cmp jns push xchg inc pop aaa call rorl or cwtl inc gs or imul inc jmp pop adcb cwtl jg mov jo fnstcw insl jno test dec xor jnp cmpsb mov repz mov push pop inc adc mov enter loopne dec in or sbb movsl mov test pushf xor xchg lcall (bad) cmc out sub sbb mov sub add xchg outsb push sbb imul imul outsl fsts or xchg cli loopne in lods xchg push add in insl sbb inc sbb dec std fdivp cmp dec repnz std adc jmp frstor pop xor js jo xchg cmp lea mov in cli pusha arpl int (bad) lcall mul sub int aad mov scas mov pusha (bad) (bad) imul adc out sub pop cwtl or cmp sbb ljmp pop add fistp cmc cmp shll ja xchg enter adc jle shlb inc imul and lea or jns imul pop das leave and dec jmp sub mov sbb xlat nop int3 movsb push and sbb cmp cld xchg jge clc loope cwtl sub sub fs mov int3 add rclb xchg push and gs push push push cmp jb (bad) lods add xchg jne xor mov sbb or push popf dec mov cmpsl add (bad) bound mov dec arpl ds xchg lock jp cmp cmp xchg jns push jle sbb pop push rcl pop pop das and jle insb loop aam mov xorl jle,pn pop movsl int push pop mov sub std or out cmp sub xor std scas add fild sub cmpsb dec out dec jae xchg jae mov mov dec fisttpll clc mov push xor and or pop inc idivb or ljmp scas xchg mov aam aas jb leave lcall cmp add lret (bad) push flds fisttpl jp test and ficomp dec lret (bad) push test add jbe insb dec pusha ljmp jg mov xchg bts pop aam bound jg push scas (bad) mov push loop push das mov xchg pop mov jmp jecxz (bad) and inc sub add popf imul inc xchg (bad) imul xchg mov pop push out insb mov (bad) dec (bad) jno or or pop movsb cmp (bad) cmp clc gs in aad mov cmp add out adc mov (bad) pop dec out inc out mov sub insb iret pop jle jg jp dec cld cmpsl mov sub sub jg adc imul cmp lea xor enter dec push (bad) and scas pop dec mov imul mov or mov cmp add pop dec sub fcomps sub mov inc cmp inc push pop sbbl loope stos pusha pop rcrl push cmp popa fcomps sbb inc pop mov sbb inc push or xchg sbb dec iret ja out and mov arpl add inc dec out jecxz or push or test js cli jg sub xor into cmp in mov pop movsb jnp data16 xorl mov mov push bound mov gs dec ret divb or push mov mov cmpsl roll mov xchg shl cmp push xchg inc movntps bnd inc mov jns add mov sub and sub stos and (bad) movsb xlat dec mov ret bound lahf cmpsl mov leave sbb int call push push mov nop and mov jle xchg (bad) mov loopne repnz jg out pop mov std rcrl mov mov adc and add sahf sub mov push (bad) hlt test (bad) xchg in inc jno pop popf fs scas mov xor cmp push lret cs ror push add xchg addr16 aaa sbb dec leave iret je xchg mov test jo push inc add add dec rclb pushf jo adc mov fdivrs test mov inc in lea scas (bad) inc (bad) repz mov cmp inc imul jmp sbb sub sub popf lods push xor add mull sub mov ja fcoms dec dec popf mov (bad) ret ljmp adc in leave push or nop lds in sbb stos rcrl in pushf add insl mov cmpsb gs sub out ret xor test mov aad cmp loope add outsb jbe js add dec ss add arpl xchg lods (bad) or jmp sbb cmp mov cmp fimull cmpsl out int3 pop ljmp push dec mov push (bad) mov mov jnp cmpsl pushf mul mov loopne sbb leave dec cld out enter or cld pop sbb mov clc es out push push out or daa push mov idivl cld (bad) xor push enter fiaddl add popf dec clc fistpll insb movd hlt lret je stc aad in ds add test pop cmp (bad) stos cld lret pop (bad) cld xchg in xor in pcmpeqd pop mov lock sbb push test jo fcoms or adc movsb jl sbb pop mov int3 test jle push dec pushf ja sbbl sti pop in movsb loop jmp stos pushf push mov sahf jo mov mov xlat insl adc xchg mov xor mov jecxz jecxz push jmp jmp shlb jge jns xchg inc js (bad) sub in mov int sbb xchg cmp and or je test sbb and imul mov add xchg pusha or jp add mov test ljmp lock cwtl pop int mov cmp cmp xchg enter cmp sbb mov or sti push cmc shrl in data16 add push push pushf iret cmp add xchg mov xor out inc fiaddl test jbe pop call mov xorl dec push add jns out cld inc out jecxz jb add insl dec stos and push fbld inc cmp repnz testl (bad) ret add jnp mov mov dec sub scas sbb xor imul data16 mov lahf mov inc dec mov mov lock movsl cli xor sub sub jecxz adc mov loopne lock lea mov ret addr16 (bad) out cmp pop imul aas add xor cmp pop cmp sti js cmpsl xchg shrd dec inc xchg mov (bad) lods sbb rcr jnp pop inc mov sahf test imul loope mov cmp sub (bad) pop jbe aaa mov out subl push dec mov popf pop scas lds jnp push push adc hlt sahf xor mov dec sbb push pop jmp cs xchg clc and and addr16 cmpsb sbb lret adc imul push loope xor mov sbb cmp fwait and mov xor mov inc cltd fs ja mov dec scas add das and mov lods in (bad) test inc or roll sbb mov pop int3 sbb mov fcmovne loopne test out sbb or lods icebp push mov mov sub cs sub dec adc jbe mov push lds sbb icebp xor test inc mov sbb pop adc sbb and adc sub pop dec inc mov cs into mov (bad) (bad) je test lcall xor jp and out mov out ret sbb sbb pop out ljmp xorl std lahf mov imul shrl cmovo mov dec (bad) sbb sti push mov inc loopne cli leave loope test scas mov xlat add adc mov or xchg ja jg jno call dec out loope jle fldcw lock push rcrl or fmuls rcrb and das adc enter mov sbb imul mov push dec fldcw cld mov les das dec xchg dec cmp cmp adc lcall mov push xor into push outsb cmpsl mov out pop cwtl arpl aas mov jae dec sarl adc jo into rolb rorl mov add mov lret inc mov in stos push push push or push lds jl pop jle jno (bad) popa shll sub andl or imul pop inc mov push in cmpsl xor out cwtl sbb inc lea sahf arpl pop sub cmp push ffree adc jo mov cmp rolb inc xchg push pushf add sbb inc xchg jecxz das inc jae ds xchg (bad) addr16 cmp nop js mov fdivs loope sub (bad) outsl pop test les shrl repz outsl es sub out mov ficomp iret add divl pop cmp hlt mov mov push xlat mov (bad) jne out inc or jg mov lahf add loope xor ja push and cmp stos and mov sbb loop cmp mov in les ror lahf push in mov xchg sub or or inc xlat clc adc fdivrl mov jp dec fidiv imul push mov or pop xchg pusha jno das jb rol or in movsl cmp jno or inc insb nop insb pop push inc jmp mov cld push das mov xchg addl rol fucomp jecxz mov stos and lods pop (bad) sbb repnz jle mov cld xchg jp sbb shl xchg jge xchg jp (bad) push ljmp cs xor and dec adc shr push fdivrl sub repz push mov lcall mov xor mov rcr push repz pop loope mov rorl inc sbb dec jae dec lods add push sarl cmp or in xor and mov bound xlat sub pop pop add fwait shrl sub add insl dec (bad) out dec fldl sbb add sbb jle out add hlt cmpsl mov fmul stos pop in ja lahf add cmp in jg xchg push ret arpl mov scas jle sbb or lods cmc (bad) and xorl push (bad) cmpsl movsl (bad) stc fadds sub dec xchg mov cmpsb mov fs add or stc test push enter pushf inc clc dec int3 cmp imul xchg pushf sub mov inc mov adc inc cwtl int push fs jae sub xor in inc (bad) out cmp fmul add (bad) shrd les sbb add push lret pop xor je iret aaa dec xor push cwtl aas ljmp inc mov scas cmp das or mov pop in mov (bad) mov pop pushf lods mov xor addr16 pop outsb insb inc aam jle push adc sti hlt mov fcoms in mov sar pusha enter loope jae lods repz add dec push pushf hlt xchg fucomi xchg dec jns jns mov mov xor sub inc (bad) push inc addr16 add lods out jge (bad) aaa cmp jbe jl mov dec add out pop (bad) pushf fwait stc cwtl mov sbb mov icebp add ret out mov das xor (bad) sti mov pop dec dec loope aad xor faddp aam dec lods incl push sbb in fldt arpl std mov pusha cmp jmp push out cwtl leave dec aam ret push push push in pop jne inc push jo cmp pop lea bnd dec mov int mov dec cmpsl pop out cli xchg push mov mov popa popa pop pop scas sbb imul push dec sbb test loopne mov ss aaa push cmpb or cmpl ljmp (bad) mov loop les mov test add xchg ljmp mov inc push out lock fs push inc add inc jge pop callw or sbb int3 jge hlt lret pop les mov cmp adc mov gs lea enter mov push clc and mov mov ret icebp jge dec or in xchg cmp js mov loop test push inc push fildll gs xchg cmp xchg stc inc stos push xlat popa enter jmp push mov push push mov push mov sub push push mov lea push mov call mov mov movl mov cmp je push mov push mov call mov mov call mov push push test je call push call add jmp call mov call mov add cmp jne pop lea call mov pop pop mov mov pop ret int3 int3 int3 int3 push call pop ret int3 int3 int3 int3 push push call push mov call pop ret int3 int3 int3 int3 int3 int3 push call pop ret push jns sarl sbb push mov jge and jns sbb push scas int add push lods adc jnp add pop ret dec mov adc jmp imul loope xchg add movsl scas or xlat jp hlt lock cmp push pop mov call push call pop ret push call pop ret push call pop mov ret call mov ret push call ret push call movl call pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lods xor mov out dec int or and fildl jae mov adc lds pop fsub cld sub jp cmpsb inc add lcall xchg mov arpl mov and jle pop inc cld or pop mov inc mov test jne xor ret or xor divl cmp jb imul cmpb je cmp jb lea cmp jbe push call add lea and mov mov ret push call add ret int3 int3 int3 int3 int3 int3 or mov xor divl cmp ja imul cmp jb mov test jne mov cmp jae sub cmp jb cmp jbe jmp mov push call add ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub mov push push push mov mov push mov pushl push pushl call push pushl mov mov push push call mov mov push mov pushl push push call mov xor add adc add mov adc add adc xor push pushl push pushl call mov add mov adc add mov adc add mov adc add add pop mov pop mov pop mov pop ret int3 int3 int3 int3 int3 push mov push cmp jae mov mov mul mov shr imul sub cmp jb mov mov inc cmp jb mov mov inc cmp jb mov mov inc mov pop mov lea pop ret push cmp jae mov mov mul push mov shr imul sub mov mul mov mov mul shr shr imul imul sub mov sub cmp jb mov mov inc cmp jb mov mov inc pop cmp jb mov mov inc movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret mov mov mul shr imul add cmp jb movzbl mov inc movzbl mov jmp add mov mov mul mov shr imul sub mov mul mov shr imul sub mov mul shr imul sub movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl mov movzbl pop pop mov lea pop ret int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp jecxz or jp xchg jp das (bad) mov fstpl js push inc fmul inc (bad) rolb popa mov leave inc mov popa jg test mov popf mov dec in xchg cmpsl xorl xor mov sti popa (bad) (bad) mov cmp cli mov mov jns hlt push mov and mov lods pop les popa dec mov or cmp cmp cmc sarb cmp sub mov push cmp push jo addr16 push pop sub dec enter fimull inc jae or mov movsb (bad) into mov mov inc stos bound repnz arpl rorl inc sub cmpsb dec imul (bad) inc mov pop xlat dec mov icebp out xor add xorl adc mov pop faddl mov push jbe dec lods fistpl sbbb xchg out push lods push arpl sahf fistl clc adcl mov or test cs adc and xor xchg ficompl dec mov rcl je cmp clc and (bad) les xor mov lcall jns sub dec je mov dec push test cmpsl outsb sub lds cli inc push cmc fisubr (bad) push fistl pusha push dec pop dec in xchg pop cli cmp cmpsl sbb jbe out jg test jae xlat sti sbb in inc dec cltd jle ret mov mov insl les inc inc insl push pop sbb or xchg ficomp pop dec je es sbb xchg sti push dec sbb pop mov es mov sbb cld mov jns mov (bad) jbe mov fyl2xp1 idiv cmp int pusha mov xor lods mov sub scas loope xchg out and add push sbb dec aaa xchg mov mov repnz push inc scas loope das mov cmc xchg loope mov adc xor mov insl (bad) xchg add mov push fstps pop pop loop jge push fisttpl loopne aaa mov lret es sbb adc xchg pop (bad) clc adc and push mov rep pop xchg jns inc adc lods cmp xlat cmp pop jmp repnz mov pushf ljmp dec push call rclb mov imul cmpl jg movsl xchg mov or addb imul and fwait daa mov sub sbb out (bad) mov lods add enter pop pop fstpl lds mov shl inc push gs push add and dec mov mov pop xchg cmp sub ret aaa (bad) cmp outsl push mov mov xor push jmp leave or cltd sbb pushf jg push sbb push jmp gs gs repz cld popf rcrb adc fisttp lcall xchg push inc sti push cmp enter mov adc and cmc cmp xlat adc push inc push lea xchg mov cmp mov in (bad) fcoms inc aas divb out mov adc ret in pop outsb aaa adc lods inc sub arpl fistpll dec jo xor movsl push (bad) fwait insb cmp inc dec mov dec sbb pop daa cmpsb loopne mov testl scas movsb cmp aam sahf lret outsb xchg fdivrl data16 stos and pop popa pop sbb push and sub aaa xlat or xchg jg outsb push adc mov mov ss aaa or pop inc mov fwait cli xchg xchg stos loope cmp sbb fisubr sbb sbb test push cld or pop jne sub jb (bad) pop pop ljmp fs xchg inc aaa or (bad) repz or insb adc cmpsb xor xchg sub and push or rcrl sbb xor jp add xor inc jl lcall adc xchg iret hlt fnstenv test out (bad) mov sub xchg (bad) hlt cmp sti jl cmp sub or inc mov add dec pop and out xor mov mov adcb add jno xor push push sahf outsl lods xchg xchg sub repnz jb xor aad add js cwtl js cmp cmpsl push jo push or (bad) jecxz pop push fisubr insb sbb hlt (bad) adc lcall add aad ret sarl repnz xor sbb iret in dec pop inc mov xchg inc jle xchg cmp imul mov icebp sub pop lcall repz decl push mov aad les mov inc push push add dec adc imulb sahf js xor lea sub popf stos xor mov mov (bad) jns or dec sub adc push sbb mov sbb stos sbb popf and pop test cmp sbb inc rcrl sub mov inc pop jmp out dec xor or dec mov lret repnz mov xor movsl pop jne inc mov pop pop mov mov and sub mov xor push push xor mov neg mov mov bts cmp push mov cmovae xor cmp mov cmovae mov mov mov mov mov sub mov mov sbb mov mov mov call mov mov mov add mov mov adc and mov and mov mov mov mov cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp jae mov jmp cmp sbb add mov mov mov mov movl mov dec xor cmp ja jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mov mul sub shr add mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov mul mov mov shr imul add mov jmp mov xor mov test jne cmpl je mov add mov mov incl mov mov mov movd movd psllq movq paddq movq cmp jb ja cmp jbe test jne mov mov mov mov shld shl add mov mov adc mov mov shld shld shl add mov add mov adc shld mov add mov mov call mov test jne cmpl je mov add mov mov incl mov dec and and mov cmp ja jb cmp jae mov add mov neg cmp jge lea mov sub mov jmp xor pushl pushl push push call mov push push pushl pushl push push pushl jmp mov pushl pushl add xor mov call push push pushl pushl pushl pushl pushl pushl call add pop pop pop mov pop ret nop movsb mov movsl adc mov movsl adc mov movsl adc lahf movsl adc lahf movsl adc lahf movsl adc mov and sub movsd push movsd mov mov mov and shr push and je add lea adc jmp mov mov mov mov shld mov add mov mov add mov lea adc mov mov xor movaps and or movaps mov mov mov mov jne mov shld xor dec mov add and or je mov mov mov jmp mov shld sub shl mov mov mov mov test jne cmp jne mov add movl mov lea movl jmp mov mov add mov mov adc mov lea mov movups movaps movq psrldq movd mov sub movd mov psllq sub movaps movq movaps movaps movd cvtdq2pd movaps mulsd addsd cvttsd2si movd cvtdq2pd subsd comisd jbe inc movaps mov sar movaps lea sub mov mov mov mov mov mov movswl mov test jl jg test jb mov mov mov shld dec add mov test jg jl test jae mov mov lea push lea push lea call lea push lea push lea call lea push lea push lea call mov pushl mov add mov pushl mov adc pushl add mov adc sub mov sbb push push lea push lea push call add pop pop mov pop ret int3 int3 int3 push mov push mov test jns movb inc neg cmp jl mov imul sar mov shr add lea mov imul sub movzbl mov movzbl mov lea pop pop ret cmp jl movzbl mov movzbl mov lea pop pop ret add lea mov pop pop ret int3 int3 int3 int3 int3 push mov push mov push push lea test js cmp jg cmp jge mov mov mov add shr mov rep mov and rep mov pop movw add add pop pop pop ret lea mov cmp ja mov mov sub push lea push lea push call mov lea add movb lea test jns lea inc cmp jle nopl cmpb lea jne dec cmp jg pop pop pop lea pop ret pop pop pop lea pop ret lea add pop pop pop pop ret lea cmp ja mov mov sub push push lea push mov call add movw cmp jle lea mov mov lea shr rep mov and rep mov mov sub cmp jle lea cmp jle cmpb lea jne dec cmp jg pop pop lea pop pop ret mov pop pop pop add pop ret mov neg cmp jge mov pop pop pop movw movb add pop ret cmp jne mov movb add push push call add pop pop pop pop ret mov lea push lea lea push push call lea movb add movb push pushl call add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov mov mov push cmp jae mov mov sub cmp setb pop pop mov pop ret mov mov mov mov sub cmp jb xor pop pop mov pop ret lea lea mov and and mov cmp jbe mov pop pop mov pop ret cmp je nopl mov mov cmp jl cmp je cmp je mov inc mov lea mov mov mov mov cmp jne mov movups movups movups cmp je movups mov movaps movaps pcmpeqb pcmpeqb por movaps mov pmaxub pcmpeqb por pmovmskb movzwl test jne lea add mov mov movups cmp jne jmp bsf mov add mov mov test je mov mov sub nopl mov lea mov sub jne mov add mov pop pop mov sub cmp setb mov pop ret int3 int3 int3 int3 int3 int3 push jns (bad) mov inc (bad) add in mov ja mov es orl cld mov popa mov add ret popf addl outsl jmp test sub ss adc cmp mov cmp mov fisubrl cmpl jne xor ret push push call sub call push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub cmpl push mov push mov jne xor movl movl movb lea mov inc test jne sub mov push push call mov mov mov pop pop mov pop ret push push push lea call xorps movl mov movups push mov call mov lea push push call push call call test jne sub mov movl movl pushl push call add lea push call sub mov movl movl pushl push call add lea push call xorps movl movups movl lea movl mov movups movl movl movb lea movb push lea call mov lea cmp jbe push lea call mov mov inc mov movb mov mov decl movl movl movb lea mov inc test jne sub push push mov call pushl call push pushl call pushl call push pushl call add lea call mov mov pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov pushl call push pushl call add pop ret int3 int3 int3 int3 int3 int3 push mov push push mov test je cmpl je mov cmp je mov push call add mov test jne mov test je cmp jne movl push pushl call push push call add pushl call push pushl call add pop pop pop ret int3 int3 int3 int3 int3 int3 push jns (bad) mov adc mov ja mov xor pop push xor jne loope insb ds (bad) dec lret andl push test lea push nop inc mov mov pop sub sub andl aam mov fstpt push jbe cmp mov jns ljmp push idivb sbb out stos push icebp addr16 jle cmpsb push iret insb dec pop mov (bad) hlt cmp sub lahf or andw inc movsl imul sub xor and ss sbb es ret lret scas aam dec fbstp nop xchg xchg (bad) dec in jne cmpsb into jmp into ret xchg pop add icebp mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movb pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov push mov push lea movl movl movb xchg mov inc test jne sub mov push push call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl je push xchg mov cmp je mov push call add mov test jne mov pop test je cmp jne movl push pushl call push push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov cmp jb test jne mov push movl call jmp lea shr add shl mov shl push push pushl mov call mov mov mov mov shl movups movups xor mov mov mov shl movups movups xor mov mov incl pop ret int3 int3 push jns cmp push sub mov jbe xchg inc fisub add and std xor hlt mov (bad) int3 ss sub clc push pop pusha movl movl movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push mov push mov mov cmp ja mov cmp jb mov push pushl mov push call add movb mov pop pop pop pop ret cmp ja mov mov or cmp ja mov mov shr sub cmp ja lea mov cmp cmovb lea mov push call push pushl mov mov push mov mov call add movb cmp jb mov lea cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov mov pop pop pop ret call call int3 int3 int3 int3 int3 int3 mov test jne xor mov ret xor jne cmp jb lea cmp jbe push call add lea and mov mov ret push call add mov ret call call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov test jne pushl call pop pop ret mov test jne pop pop ret push mov lea add and and cmp jb pop mov pop pop ret mov push mov lea sub add cmp jne lea cmp ja pop pop mov mov pop pop ret push mov call mov test je test je push push push call add pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns popf mov aad adc and xlat std ljmp sbb ret (bad) mov xor ret push orb out pop fwait das jp dec push loop loopne fcoms (bad) ficomp pushl pushf sub test daa aaa push push or cs rclb cmp xor pop pushfw rolb push in cwtl js test mov inc cmp mov lret imul faddl clc add push mov mov mov push push mov push mov push sub mov push sub mov mov lea mov mov mov call mov xorps movl movups mov shr not movl and or mov pushl lea movb push mov mov push call mov mov pop mov pop mov pop ret int3 push mov and sub push push mov movzwl mov and cmp ja jmp mov mov push call mov mov add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov mov movb pop pop mov pop ret mov push call pop pop mov pop ret mov push call pop pop mov pop ret mov mov push call mov lea add cmp jbe push mov call lea mov lea mov movl movb mov mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je lea mov mov and je movsbl mov sub mov jmp mov mov lea test jne mov mov push mov call pushl mov pushl call test je pushl lea call test je mov add shl add lea cmp mov jne mov addl mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret xor pop pop mov pop ret mov push call mov mov lea add mov cmp jbe push mov call mov mov lea mov movl movb mov mov inc cmp jbe push mov call mov mov lea mov movb mov mov shl add cmp je push mov call test je mov add mov shl add cmp jne mov addl mov mov mov inc cmp jbe push mov call mov lea mov mov movb pop pop mov pop ret test je movsbl mov sub mov jmp mov mov mov mov push call pushl mov push call pop pop mov pop ret mov shr push test je movsd mov mov movsd call movsd movsd mov and xor jne cmp je mov mov add cmp jbe push mov call movsd mov movsd mov mov lea mov mov mov mov mov mov and or jne and xor or je movb lea mov movw movb add sub mov sub add mov pop pop mov pop ret xorps comisd jbe xorps lea movb lea push lea push push sub movsd call add pushl pushl pushl push call mov add mov sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov call mov mov add cmp jbe push mov call mov mov lea mov mov test jns not movb lea inc push push call mov add sub sub mov add mov pop pop mov pop ret mov shr test je mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl lea mov call mov sub sub add mov add mov pop pop mov pop ret shr test je mov mov mov call mov mov mov mov add cmp jbe push call mov mov mov lea mov mov test jg jl test jae not movb add lea not adc push push push call mov add sub sub mov add mov pop pop mov pop ret mov mov mov mov mov mov call mov mov add cmp jbe push mov call mov push pushl pushl lea mov call mov add sub sub mov pop pop add mov mov pop ret xchg negb stos add dec dec ds and jge test jmp and push movzbl mov inc push call mov mov test je add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb jmp add cmp jbe push call mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov mov lea mov movb mov pop pop mov lea mov mov movb ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl mov movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call int3 int3 int3 int3 int3 int3 mov mov or cmp ja push mov mov shr sub cmp jbe mov pop ret add cmp pop cmovb mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub je push push mov mov test je cmpb push mov mov je inc cmp jbe push mov call mov lea mov pop movb incl pop pop ret and neg sbb inc and add cmp jbe push mov call mov lea mov mov pop incl pop pop ret movb ret int3 int3 int3 int3 int3 push mov and sub push mov push mov push lea lea mov mov add cmp jbe push call mov push mov lea mov mov mov mov lea movb mov push call test je nopl mov mov mov inc mov movzbl mov lea cmpb mov je movb mov mov mov lea mov mov cmpb jne mov mov lea mov movb mov mov lea mov mov movb mov shr and mov mov lea mov mov mov mov mov lea mov mov pushl lea mov push call test jne mov pop pop pop mov lea mov mov movb mov pop ret int3 int3 int3 int3 int3 mov mov add cmp jbe mov jmp ret int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov sub mov add cmp cmovae test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov test jne cmp jne push call add mov mov mov jmp mov sub lea shr add mov mov mov shl sub add cmp cmovae sub test jne push call xor add mov lea mov pop mov mov pop pop ret push push call add mov lea add pop mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 push jns cmp repz xchg cmc ljmp cmpsb jne sub or les mov out mov mov adcl or mov arpl (bad) cmpsl (bad) stos out (bad) or mov and jle pop jbe jno pop and jle cmovg stos lods stos loope scas xchg cmp sbb popa pop ja and cli mov push icebp fucomp or pop add mov incb stos aaa ficomp push jl mov out push xlat cmp mov (bad) xor inc xchg nop mov pop add sub movsl adc cwtl inc daa mov je mov jne mov pop into std into add int3 xchg inc add mull dec or inc nop push nop lcall shrl push dec rcrl fild jg test dec in (bad) in stos mov je stos inc loop jecxz and sbb scas aad test ljmp imul je and sbb sahf mov cmp pop js movsl std sub push mov sbb into pop xchg clc mov fidivrl iret push inc (bad) ret (bad) or scas mov pusha push mov inc sti in movsb aad pop gs pop pop jge daa int test inc je je dec outsl cmpsl cld sbbl into add pop xor scas icebp (bad) jo jbe adc push dec and dec (bad) pusha in cmpsl inc ret add or inc into push sarl push lret mov popa jns jg inc les dec mov push dec out scas adc loope orl aas pop jb fs pop pop pop inc (bad) outsl xor lods mov cld fild into dec scas cmp pop dec fcmovnu (bad) movsl lods fs aam jge sbb cs sahf inc xchg cld push push popa les jmp rclb enter jne aas xchg jge mov push jns xor xchg jecxz push and popf (bad) mov mov aad out test sbb inc test test outsb xchg (bad) push dec add dec cmp xchg jg cmp or sub insb cmpsl xlat pusha push jae cli xchg (bad) sbb jge mov add (bad) jbe aas lcall gs adc or fisttp pop pop jge lods insl inc or movsb aad ljmp wrmsr inc out sarb flds cmp jne clc jp lods mov or ficompl dec pop dec mov or or gs popf mov dec push adc aas lea xchg dec sbb mov das mov movsb dec mov mov push rol mov leave fs cwtl iret mov mov add mov insb (bad) lcall scas imul inc inc push test into mov xchg repz mov mov jne arpl orb loope popf aaa and aam in add test lods xchg adc push mov notb cld adc xor pushf or xor xchg dec pop rcrb sub cmpl pop sub cwtl adc sub mov ss push sti pop push enter add mov jae cwtl mov xchg jno cmp ret mov cltd cmp inc push cld ss cmp push scas insb jne mov lods fs cld dec mov mov pushf jp cmp push push jo dec les xor call mov mov daa xor push add pop aaa stos fsubrs jno dec xchg xorl inc mov out sbbl sbbl xchg pop cmp scas adc aad es add pop xchg jo leave inc mov adc iret mov test mul mov test mov aad rcrl push adc push dec rcrb out or lods add imul dec icebp out mov adc cltd jne xor cmp add icebp out or pop inc ret xchg fwait jecxz cwtl push jle test fs fisttpl pop rolb (bad) jg push test aad nop mov mov popa cmp jge out push mov or lock pop mov cli jns cmpsb add add mov pop mov cmp movsb fs or or pop mov (bad) iret or fs fadd or adc push insl xor icebp push gs jp aaa pop into inc movsl (bad) dec jg int dec ss mov nop push cltd adc adc mov fcomps lods ljmp xchg rorb dec repnz nopl rol popa xchg mov arpl leave cs mov xor sbb (bad) int3 call int3 add mov add dec adc sub aaa add aam xor jge out inc add popf mov cmp in repz push mov mov xchg push xchg (bad) stc movsb fistp sbb mov jbe (bad) cmpsl loopne mov cltd mov inc icebp push in mov xchg adc fisubl pusha adc cwtl and xchg shll xchg fwait sub scas ror stos sbb scas inc jo add dec cmpsb add das and bound inc or jle into andl test cmpsb out inc mov lcall sub test mov ss cli and cmp mov faddl jmp mov inc ror pop jae mov mov xor adc dec xchg das cld mov sbb mov (bad) (bad) jmp xor ret lea pop adc push sub xlat lret out popf pop icebp and pop jge mov loope xchg sub add (bad) sbb dec fs es rcrl mov jno pop lea arpl addr16 sub pop xor push push das je loope enter and repz dec into (bad) mov push xchg in cli adc imul jne and out fisttpll mov push cmc jle sub pop sahf xor dec jo std or add xor popf or xor cmpsl fldl mov jno mov nop fnstcw fwait push mov mov mov xor stc jl aas fxch xor xlat add ja cli sub arpl mov adc cmpsl xlat inc mov jecxz scas adc std dec mov movsl cmp mov inc jbe xchg and cmpsl inc jle jbe cmp scas dec mov lret fstpl sarb dec adc mov xchg dec adc addl stc and in jge lret and aam push out add cmp out popa push mov daa ret sub fisub js mov (bad) lldt xchg fadds mov xchg dec popa loope cmp push shrb mov inc lret sub stos and xor jg inc sub push adc lea ljmp pop cmpsl or cmp mov push dec cmp jo cltd mov cmpsl push dec mov jl push mov jbe inc lds lods cmc or stc test sbb xchg stos js sbb pop out push movsl xor mov outsl stc mov mov push inc cld push fdiv int3 scas out repz dec jmp push dec inc inc fisubl or int bound enter mov mov or push ja outsl (bad) sub flds ds push and adc sbb cmp and leave dec xor fildl ljmp leave inc xor jnp sbb xchg (bad) xlat sbb xchg ffreep addr16 (bad) cltd bound pop pop push rolb in jmp stc lret adc jo cld push sub cmc enter sub lret imul pushf stos push cwtl ss dec sub loop pop out lea cmc cmpsb fst cli adc pop add rorb jp,pn mov cmp mov jo adc stos stc test call dec jae mov lock ret pop fdivrs movsl hlt push cmp test xchg jl mov test sti jbe xor jne jl ret repz push bound inc mov into (bad) fistl dec push adcl sbb fistl sub pop icebp jns mov mov cmp in es inc sub jne imul loopne movsl dec adc nop jnp mov or sub mov xchg sbb or pop hlt push inc xor stos xchg sub mov fdivrs add sbb cmc sbb clc fcmovne jmp enter push ljmp inc (bad) push test out and shlb xor lahf sbbb pop mov repz insb cmp xchg pop or movsl testl gs popf frstor and orl sti or sahf (bad) mov loopne (bad) mov aam fstpl in rcll mov inc adc insb xor add fwait xchg (bad) jp shll scas add clc mov jecxz sub ret sbb cmc lods fmuls pop sbb sbbb arpl mov xchg xor sbbl dec ljmp insb aam mov in repz lret aaa mov test into cmp aas adc ret sub pop inc ret pop or out outsl mov pop dec jno stos xchg sti or sbb dec test xchg or inc dec pop push std aad xor xchg mov adc and push xor jp imulb test xchg outsb pop cmp or cld in scas xchg xor dec cmp mov out xchg mov and loopne sahf lock inc inc mov icebp mov mov ret pop lods sti xchg mov paddsw and inc mov ret adc cmpsl fisubr ss fcoms jnp je or push into repz xchg mov loopne jnp xchg daa adc (bad) fisttp ja mov ret push push push lret pop (bad) mov push incl daa insb xor xchg outsb mov mov aaa addr16 cld dec cli int3 (bad) mov pop repz cmp lcall scas (bad) mov add loop stos fsts imul leave cmc ret sub fstp in xchg sub mov and cld in cmpsl out inc xorl in xor scas mov cmp imul sarl int jae cmp addb lret bound mov mov push mov call orl dec lret dec inc cwtl adc andl ret mov pop sbb push loopne xchg inc (bad) adc xlat lds pop call cmp push rorb ja call mov pop in popa mov lods mov jb or push imul adc sti add sbb mov out (bad) fistl out test xor dec andb and sti push call mov (bad) movsb mov xchg repz xor roll das jns movsl mov loope fmuls pop out mov fldt cmp or xor add lea (bad) jae fnsave mov scas ficompl sub subl test cltd out test xor test or (bad) in push outsb mov inc and (bad) les add mov shll (bad) ds sbb inc shl (bad) or or jne cmp jg dec lods loopne mov data16 sub popf pusha aad test rclb sub mov sub lret cmp call lea in into or dec lcall (bad) lret das mov (bad) pusha (bad) jmp pop dec cmp lods ret dec lcall (bad) stos test xchg mov hlt sbbb pop (bad) mov sub push dec daa and xor xor dec ficompl ss pop jge mov dec loop mov lea cwtl push mov push stc sub sar jg stos lret pushf pop aas idivl repnz stos ss (bad) xor (bad) jecxz nop js push jbe les cmp xor stc adc repz dec sub and sbb roll xor cmp fmulp sbb inc inc xor pusha dec mov push in imul int mov and mov lock mov adc push mov mov adc xor (bad) mov jnp insb imul dec sub xor in jo fsubp push or push gs sbb mov inc dec or (bad) testb or sbb xchg sbb sti je (bad) xor xchg dec ficomp lea xchg loope dec imul pop xchg mov popa dec movsl test aaa inc vpmacsdd enter push cmpsl rorb or (bad) lret mov das xchg or daa and int3 jp or mov sbb mov bound std fwait dec insl gs ret push cli cmpsl and fsubrp fdivp int leave arpl scas enter pop (bad) bound xchg or push jp mov aas dec mov sti dec call fisttp mov pop dec adc aas out loope dec shrb pushf out pop cmp cmp je mov (bad) pop pop jns pushf (bad) lods dec aaa lret sub lahf rcr nop mov fs aad inc cmp mov ljmp add cmpl leave mov out repz or cltd mov lock mov shrl insl (bad) and sbb test aad les push subl jg insb adc mov (bad) mov decb jae int3 stos pop call mov fcoms out leave movsl fsubs addr16 pop xchg xchg in mov pushl pop testl pmaddwd lock (bad) fidivl xor (bad) dec cmpsl sub fiadd inc adc jp xchg ljmp cmp jne jbe jmp call mov (bad) mov xadd push inc out aaa dec cmp idiv ficomp inc pushf movsl imul std test add or jmp adc jno test jne insb daa ret jo xchg mov push enter lods cmp nop cmpsl dec cmpsb insb out in cmpsl mov fwait xor out push push cli mov adc cmp and cld (bad) bound sti jnp mov mov cmp jae xor outsb es ret inc test test adc dec stos lds mov je aad cwtl lcall dec xor pop pop xlat arpl mov in sahf or xchg xor jg fnsave popa push mov adc std adc sub mov test push mov pop push jl sbb xor add dec and in dec adcl pop ds push pop xchg cld lock (bad) push das iret or imul fmull push xor mov andl and add (bad) pushf jae decb (bad) pop add mov dec (bad) loopne pop popa mov adc int3 sahf sub test imulb mov gs cmp arpl pop and lea jmp (bad) loopne mov or rorl popf (bad) mov cmc push icebp or (bad) dec call adc push push out mov js adc push cmpsl enter push iret and jmp in dec lahf sub int3 jl cwtl mov (bad) xor mov push or and xlat and dec out mov xchg push xchg and mov inc and mov inc cli jo scas and inc in mov cmc mov fstp cli mov mov out sub pop (bad) pminsw fcoml bndldx mov xlat clc pop mov mov fwait cmp mov js es flds ret scas push test jns jle xchg cltd sub (bad) dec push and (bad) and repz jno loop cmpsl and jge mov daa iret inc test lret jns cmp sahf mov std cltd or loop mov jo pop push aas movsb lcall sti sbb add cltd add mov sbb gs cmp add aaa lret orl gs and sbb sub (bad) adc pop dec mov adc incl xor lcall aad xor sbb xchg repnz adc add cltd cmp icebp js fsubp pop xchg je lahf pop stos es mov sbb xor out xchg mov nop imul pusha hlt xlat cmc fidivl iret jne cld pop fisttpl sbb or (bad) div pop pop and sub push xor and mov iret js add (bad) jo inc mov ss adc stos xor jnp xchg (bad) add shrb xchg cmpsl jns and lret xchg fisubr sub xchg les dec mov rorb dec pop jb lahf push dec arpl mov lock int3 jns out std (bad) or ret xor div cwtl adc cmp inc lahf stc aaa pop adc mov scas and push cmc rorl sbb jbe mov loope add lds call jns stos push xorl stos xor mov sbb (bad) mov inc aam pop jb lret mov mov faddl xorl jbe inc hlt mov les inc pusha (bad) dec sbb adc ds jbe fcom jnp out inc and clc jle movsl loop addl ljmp push and mov cld insb mov cmc push jne sbb adc sti xchg push jp cli call scas mov pop scas ds aam pop cmp mov mov push (bad) adc ret sbb stc test cmp stos dec outsl xor cmp lret dec push add cmpsb aam movsl imul mov lcall mov add rorl notb inc mov mov jl cmc and out jecxz jl ret stc in (bad) mov loop les push imulb inc das pop pop pop push jo lcall lods addr16 or jo mov push das sar lods sbb rorl into std test mov or sub add setb jge mov clc push lods (bad) jno adc scas mov daa adc jecxz inc pusha lods stos cmpsb xchg call pop add dec into mov aam into gs jo cmp or add mov scas fcmovbe enter or add ss adc stc inc (bad) (bad) mov (bad) shrl test les aaa iret cs xor cmp js jecxz out sub cmc sbb push rcrl sub rorb pushf test test scas rep xchg push mov or (bad) lods add pop push lcall cld stos lret xchg jecxz add lahf gs ja dec das stos scas and stos lcall out jmp mov adc cmc mov repz btc dec push mov sbb lea fs int3 dec dec clc sbb (bad) in sub mov xor sbb in sti pop mov lock or sub mov in rolb fsubrs test mov mov ss or mov (bad) negb es loopne pop nop fs push cmpsb push inc and mov and inc mov test int imul xchg and gs ficoml dec xchg pop (bad) sub in and jae aam les xchg test push push lahf (bad) jb aam std lods sbb sub std icebp (bad) pop adc xchg ficompl xchg sbb ljmp jae cmp sahf in mov xchg inc js fiaddl popf in sub sub or rcr cli jmp sbb mov std cmp jns pop icebp cs bound (bad) xchg xchg and imul into sti sbb jb insl or test push add lods or fs int repnz leave mov (bad) lock retw inc cltd xchg movsb add mov cmp jb add cmp and out loop aas pop mov xchg ret xchg lret mov cld adc lret jl repz dec inc adc (bad) aaa xor sbb mov xlat xchg lret xor lock push mov mov xchg mov mov andb sahf xlat out mov fsubrs loop and neg pusha sbb das das add jne ja mov aam stos insl sub ret ret int3 incb or pop lods pusha push movl xchg hlt jg mov xchg mov (bad) push xor fsubp sbb outsl and cmpsl pop push xor cmp push pop cltd mov mov add shr xchg fistpl test into adc (bad) pop lahf lds fwait enter lods jnp rcl mov (bad) lahf cmc mov popf clc (bad) mov or (bad) inc push cmp jno test add jecxz aad pusha repz push stos clc sbb jecxz test inc aas inc mov push lret subb mov outsb and push mov add dec sti insl (bad) (bad) mov mov push cmp dec lcall dec gs fnstenv loop jecxz hlt jnp jb sub jb notl daa push stc fidivr std push pop fidivrl xor fisubr lret lahf mov stos (bad) hlt sti dec repnz clc and lock adc or add push leave pusha lcall (bad) xchg lock (bad) and int3 jle sub mov cmpsb xchg xchg jno push mov dec movsl icebp stc push jns pop xchg mov jle ret add popa jp test mov xchg out sub sub inc sbb jmp imul mov nop mov pop rorb pop pushf sbb rcrl cmpsb test adc jle add int3 int3 int3 int3 int3 int3 push jns xor test adc cld push addr16 and rcrl lcall (bad) enter mov push push repz stc push rorb outsl mov movsb push arpl pop push add adc bound rclb mov jnp loope mov popf arpl cmp jnp pop cmpsb sub or movsb lods lods rcr cmpsl mov xlat jg push aas push xchg ss mov imul pop jns mov ret call add jp ja mov and lahf xchg leave push (bad) je push into rorb push roll lret push sti fistl popa and outsb loopne (bad) mov dec mov push aam fsubl mov rcll test or add stc xor (bad) jne mov adc in js mov fwait mov jmp pop (bad) mov xor fnstcw push xor in push jns pop ja push (bad) jno,pn xchg les and inc out rol xchg out cmp adc mov fisttpl cmp clc pushf int3 sbb pop ja cmp inc sbb xor notl imul mov push test push insl cmpsl sub push jne lea mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl push pushl push push call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov lea mov push pushl call add ret int3 int3 int3 int3 int3 int3 loop daa jne fisttp (bad) stc xor cmc (bad) jno xor (bad) cld xor cmp sbb ret adc jns pop push enter fwait fwait mov mov jno jo fistpl xor and jns cmc fwait ret pop mov inc leave and nop mov clc pop scas jo subb out xor insl icebp sbb out fldt lcall aam enter xor jbe hlt adc sarl jnp (bad) sarl mov push outsb pop or mov or push push jmp sbb repz outsb or (bad) push add icebp push mov mov cmp je mov mov mov addl pop pop ret mov sub sar cmp je sub lea sar mov push mov shr sub cmp jbe mov jmp add cmp cmovb push push mov call mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja add cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov add mov lea add pop pop pop mov pop ret call call int3 int3 int3 int3 int3 int3 int3 push mov push mov push movl movl movl mov sub sar movl movl movl je cmp ja push push call mov mov mov lea mov mov mov mov sub push push push call add lea mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movsl fcomp lret in jne test fisubl xorl xchg pushl xchg sahf inc stc inc and mov or and fwait in (bad) je mov insl sub stc pop (bad) push xchg hlt icebp lret mov mov xchg loop jo mov push fs test jnp inc or (bad) data16 xchg and stos push clc push test adc pop mov or cmpsl ds sbb xor jmp (bad) pcmpgtd push (bad) fisttp or out push add div popf insl and and (bad) cmp jecxz in rol lds or pusha jp mov fcoms hlt aas in popa out mov or sarl bound push fldln2 pop popf sbb testb lret sub and (bad) adcb lret in call pop pop sub loopne sbb inc nop imul cltd inc insb sbb push push imul hlt mov xor sbb in sbb repz dec sbb adc lods sub pmaxsw push iret dec xchg mov movsl (bad) fdivr pushf or fisttpl cmpsl dec pop data16 test fsubrs xorb lea sub adcb loop sub imul ja adc inc inc pop jl in push cmp xchg mov pop add dec out lea add xchg cs push xchg fisttpl sub lret inc in mov cmp sub ss or test push aad xor inc jno push sub scas mov loope pop leave jns xchg subl pop inc scas repz xchg jecxz bound and push notb pop dec cmp leave lods cmc in idiv fimull mov adc stos jo loop add mov lods shll xor xchg fnop xchg int sbb inc xor mulb les loope mov dec loop xchg outsl push adc test nop cli or fsub xchg fmuls cmp rcrl inc or jecxz mov lea int3 cmp push or and inc jae dec lea mov iret add imul add in fdivp stc mov lret xlat and jne cmp push addr16 test cltd or lcall adc xchg fdivrl hlt sub cmp mov mov (bad) sbb data16 mov in imul inc outsb mov fmuls int3 insl test sbb mov bound ljmp (bad) pop push push (bad) pop movsb lahf (bad) lock and fs xchg and sbbl jmp cld jnp call push fsubrp lods sbb lock loop pop iret mov pop or jnp xor cmp fs subl xor call hlt inc add jecxz mov and mull bound cmp push dec push jmp pop paddusb ds movsl clc pop xchg sbb mov mov mov sub sar cmp jle inc cltd and add sar push movzwl push lea lea mov movzwl lea cmp jae mov mov mov movzwl movzwl cmp jae mov mov mov mov movzwl cmp jae mov mov movzwl mov sub movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov mov mov sub sub movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov movzwl movzwl pop pop cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov pop mov pop pop ret movzwl movzwl cmp jae mov mov movzwl movzwl cmp jae mov mov movzwl cmp jae mov mov pop pop pop ret int3 int3 sub push push push mov push mov mov sub mov sar mov cltd add sub mov sar shl sub mov sub sar cmp jle inc mov cltd and add sar mov shl sub mov lea push sub push pushl call mov lea sub push push push call mov add mov push add push push call push push push call add jmp push push push call add lea cmp jae mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov cmp jae mov nopl mov mov cmp jb ja cmp jb cmp jb ja cmp jb add cmp jb mov mov mov nopl cmp jae mov lea mov mov cmp jb ja cmp jb cmp jb ja cmp jb cmp je mov add mov mov mov mov mov mov mov mov jmp sub mov cmp jb mov cmp jae nopl mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jb add lea cmp je mov mov mov mov mov mov mov add cmp jb mov cmp mov jne cmp je cmp je mov mov mov mov mov mov mov mov mov add mov sub mov add mov mov mov mov mov mov jmp add mov cmp jne add cmp je mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov jmp mov add mov mov mov mov mov mov mov mov jmp mov pop pop pop mov mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov mov dec push mov mov push cltd sub mov mov push mov sar mov mov mov push mov cmp jge data16 lea mov lea sub mov cmp ja jb mov cmp jae mov jmp xor test lea mov cmove lea sub lea sub mov mov mov mov mov mov cmp jl mov cmp jne mov test jne shl mov sub lea mov sub mov mov mov mov mov mov cmp jge mov nopl lea cltd sub mov mov sar lea sub mov mov cmp ja jb cmp jae mov lea sub mov mov mov cmp jl mov mov lea sub pop mov mov mov mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov mov mov mov cmp ja jb mov cmp jae mov mov mov mov mov mov mov mov pop pop ret int3 int3 int3 int3 int3 push jns cmp ret xor fcoml lea xlat inc mov aam pop insb lods inc or inc push pushf sub mov into cmpsb inc add lcall jnp clc roll sub (bad) xchg les push fcompl aam cmp (bad) cld sahf or cmpsb nop mov das mov dec add in jno pop xchg je imul mov xchg adc cli dec ds ja out test or pop inc cmp addr16 xchg inc addr16 jae dec cwtl or pop lock adcb mov jle mov insl or lret cmc push ss mov and mov cmpsb add roll add mov cmc mov mov xchg cs repz mov jo in lret mov jge jle std test stc or jno sahf (bad) mov shrb inc lock cmp push xchg jge mov push insb xchg scas inc sarl mov addr16 inc jns int3 sub loopne scas and xor dec dec aam dec imul nop movsl adc (bad) mov mov adc mov leave std popf ret (bad) adc dec fisttpl sbb cltd js dec arpl cmp mov rolb sbb or dec and cmp dec outsl cmpsl cld repz dec loopne dec les pop xor loopne mov lret add nop push xlat fst clc clc clc data16 ret insb inc jnp push dec test inc jnp in xchg outsl (bad) dec es sub sub arpl xchg pop jno lea leave mov aam mov xchg and adc call aad loopne loopne rcrl jb push sbb inc dec nop xchg pop inc scas addr16 fiadd push pop popa sub mov test out outsl adc addr16 cmp push daa lods jo jecxz (bad) xchg insl push cmp scas test es shll std jl lret ja pusha inc in out add cli or jns xchg mov jecxz inc repnz push mov loope inc test cmp push rcr movsl mov adc fstl (bad) (bad) ja pop cmp imul xor shll pop sbb das (bad) fsubrl movsl int3 dec imul inc or mov xchg push rcrb jp add in stos mov sub mov cltd fildll xor jg mov push xchg (bad) ja,pn es ljmp adc cmp (bad) jae (bad) jae or mov xor mov push out lret sbb sub sahf jae jge push cmp mov ja jb sub xor or das mov push loopne sub push (bad) and loop push or rorb lahf lock and jg add inc xchg mov jmp clc adc mov movsl in testb sbb sbb in xchg sti (bad) add out fdivs rcr out jo sub jmp and popa leave sub xchg out pusha xor fisub inc fnstsw pop arpl fucomp cmc mov out mov and cltd mov aam bound clc mov or test dec imul jo test cmp jp fcompl lret mov aaa mov int3 xor mov push movsw mov push add negb sub stos mov dec adc ja dec outsb mov jo xor (bad) in sub sbb test push fwait adc xchg fistpl fnstcw aaa mov mov dec scas aam je in (bad) lea push mov mov sbb push (bad) push pop jg dec jae jnp jg aam jmp mov mov mov mov les cwtl enter dec sub ja movsl pop cmp sbb imul xchg loope pop jl mov sub jo out cltd pop and (bad) dec cmc add shlb cmp xor dec mov mov or andb push push subl xchg stos push mov test jp outsl mov inc insl add or cmpsb loopne jmp push aas cmpsb mov loopne leave and shrl cmp jle dec lret push mov push add into (bad) pop pushf out scas or and dec fs aam push inc pop jmp mov flds (bad) and pop into pop and lds mov add sub mov shrb imull mov jbe jns jb jno mov das imul leave push sar ja stos pop aad mov outsb mov jecxz,pt cmp fldln2 fdivs or jnp js sub sti pop test mov sub or enter xor push sbb rcll jle into ret popl or jl add add jb les das pop jns sub cmc faddl ret mov shl orl test sub mov dec xchg push popw or fcomps popf (bad) add out or (bad) lcall dec or bound dec add and pop or push dec sbb lock nop lods std data16 jb insl and clc movsl adc jp inc cmpsb push mov lahf xchg mov push ja in lcall and (bad) movsb cmova push (bad) cmp subl (bad) rorb hlt inc adc inc sahf mov mov push cmp mov push test lahf mov jne loope enter sub xchg sbb ficom jle outsl cli div lea jge mov lret xchg mov adc mov push es xchg add push and clc addr16 out xchg adc das iret fcomi (bad) leave (bad) mov les lock cwtl inc sbb sub mov cmp insl sub mov mov mov movsb dec aam xchg repnz sbb outsb inc xchg inc rcr fdivrl test dec push cltd sub push cmpsb arpl jge or fs inc xor jg jle ret ljmp addr16 mov adcl aam (bad) cld (bad) xchg mov test dec pop or adc out cmp in loop mov jge cmc hlt push movsl jle test subl xchg int mov (bad) xchg cwtl xor enter add (bad) or jae lcall (bad) test imul testl xor out push sahf xor je dec mov or pop sbb xchg or rol (bad) pop cmp add daa pslld fs jnp cmp fistp orl dec sbb pop loopne jbe arpl std incb pop mov push xor push std movsb fcompl mov sti mov in pop es jle dec orl xchg addl add test cld inc fnsave xor mov into pop (bad) jp movl pop cmp fmuls mov dec lods push aaa stos stos xchg push icebp jmp push cmp call and and mov in rclb cmp or inc jmp jge and (bad) mov lcall cmp mov add lds adc mov pop movsb adc adc lea repnz jmp pop test mulps pop jno jns jno inc loopne fidivl lock rcrl je mov idivb pop dec loop inc rcr xchg (bad) rcrb sarl add lock mov ss pop cmp iret pushf sub inc cmp xor push jae ss cmpsl lcall xchg faddp xchg shr neg dec pop popf mov pop push cltd adc mov add cld pop fwait xor adc cmc sub repz jns xor or daa sub inc imul sub gs movsb hlt jmp js dec fwait lds push add dec pop add pop out stos idivl add and pushf lods loop xlat mov mov jno into inc mov sub inc es loopne ret pop xor dec mov jmp jno sub mov xor xor mov push not popl cmp ret xchg sub fwait rolb int3 int3 xor sbb cmpsb sub jge dec ljmp push not mov hlt (bad) ja mov push push fcmovne pop mov mov push push adc xor scas cvttps2pi jo pop fldl mov pop ds jle loop lock sub fldenv (bad) xlat jmp fs cmp fisubr aam sbb enter rcrb jae ret test adc and popa shl daa sbb sub sub mov pop jne add xlat test cmpsb pop sub sbb push jl je leave leave dec inc ljmp xchg jnp sub push sbb mov iret loope bound adc lea std mov je xchg es add insb mov pop mov xor mov jle xor push fisubl or push push les xor fs cmpsl sarl add sahf inc push or sahf div scas popa test pop test test adc or xchg cltd ss adc jp das cli jno mov dec jae adcl pusha sti call lods sub jecxz sub imul das or push test in movsl int3 or mov push push in xlat js push fidivl mov sahf fwait test mov jge jle pop and pop sub loop out aas xlat xor cmpsl icebp pop mov clc cmp cltd mov mov lret xchg sahf out adc pop jecxz inc hlt jp (bad) jno shlb arpl mov sbb daa stos xchg xchg lret push call adc ss and out or pop jge out test dec js leave mov leave repnz cmp sub and js inc inc add mov xchg cmp fwait add popa in mov and test mov subl and popa in out fcompl pop adc cmp add loopne insl xor xchg mov xor sub hlt inc mov scas sbb dec sub and lret sbb jmp (bad) and cmp xchg movl sub xor mov into push clc in push std out inc pop inc dec jb mov pop xor xor xchg add lods inc insl xchg cld sti gs fmuls test xchg fmuls (bad) lahf lds xchg xchg movl xlat loop clc dec and xor outsb repz push test push nop mov add mov fisubr lea sahf adc cmp mov add push (bad) adc sub (bad) jno fs jle xchg inc loop (bad) jno mov idivb test pushf loopne mov or pop xor addr16 sub cmp scas hlt ds hlt push adc and and lret loopne scas or dec cltd inc sub insb outsb gs sub adc cld xchg dec pusha bound sbb mov cmp loope stos push mov (bad) jb pop andb and adc mov std cmp cmp pop xchg mov cmp hlt ljmp fcoms xor roll fsubrs jne and outsl sub fldt dec fdiv test into fidivl cmp ds sbbl nop imul xor cli inc pop scas iret add cwtl inc fstpt mov rcl lods inc lea aaa movsb out fnstsw mov push movsb ret (bad) loope mov mov daa mov sti mov ficomp xchg mov push sbbb adc mov shrl mov inc repnz scas cli sub sub or push pop cmpsl daa ss addr16 jo mov stos popa fs sub data16 lahf pop pop adc movsl inc inc mov in lahf inc adc data16 pop bndstx inc lcall cmp movsl es scas jmp mov cmp popa pop cmp inc fs ret xchg icebp push sbb jle jge ror scas inc jl xor (bad) push data16 outsb rol adc arpl mov (bad) (bad) cmp (bad) in dec bound test jmp imul (bad) push flds (bad) fptan shl adc std cmp jmp orb in xor test fnsave cmpsl ret jbe cmp in or xor xchg repnz es popf pusha push cmp jmp push lret jmp mov or and mov in mov xlat lods fs aas push notl cwtl imul mov cltd inc add inc or dec aaa fistp cmp and add test loop bnd push pop cmp and xchg dec mov xor pop jne insb or mov cmpsl jmp cmp scas ss outsl xchg cmp add dec es pop inc outsb clc loope mov mov add mov mov pop jge data16 and inc xchg jmp nop xor loopne pop fistpll test cld push icebp (bad) push mov adc jp mov aad mov jl sti push js sub nop fs push mov push (bad) mov or add js lea sbb int fdivs mov add sti adc lcall jmp pop daa in test subps xchg xchg fcmove inc jmp mov sbb cmp test mov repz mov add pop inc (bad) adc aam mov sub cli ss mov mov inc repz cmp sub sbb out movsl int3 popa outsb xchg mov mov movsl rcll in imul adc sarl aas std sub iret mov mov mov scas adc jns dec cs dec aaa sub cmpsb ljmp and inc and dec pushl loope movsb (bad) out xor stos imul out (bad) mov jae adc push clc lods (bad) in lea or sub xchg pop sub rcrb sbb icebp out rolb jmp je adc sub ljmp stc jnp mov mov cmp jae xor mov add mov lods (bad) xchg lret lahf xchg xor into and adc dec hlt pop inc out push adc neg jnp cltd lods pop inc insb jo imul inc push or add inc std ss cmp insb repz mov daa lahf push xor scas mov loopne sahf (bad) jmp (bad) addr16 pop xchg push sbb data16 cmp inc jae je cmp mov cmp jns push push pop out into idivl cmpsl adc imul movl xlat mov mov loopne pop popa nop mov test sub pop cmp fstl fwait insb lret sbb xchg or test inc or dec lahf pop icebp pop sub test inc jp aam icebp add pushf push xchg (bad) push mov in std insl stc jb ja adc xchg imul (bad) mov stos xchg jmp mov cmp push mov mulb push bound loope cs sub jge sbb rorl jmp jmp dec aam insb push (bad) in xor xchg movsb stc in push cmp sub out add and sub out pop push xor les rcrl jle and xchg sub mov out or sub push sbb inc or shld in add mov ss cmp (bad) lds leave or pop call in mov dec and add outsl out inc jecxz or in jnp sar pop pop test cltd push or cmc add push add cld lcall scas inc fwait cmp rcll movsb in pusha cs in adc mov pop dec addr16 je icebp or and and sbb sub sub xchg jnp pusha add push pop std xchg mov push testb data16 mov or cltd push pop (bad) aaa cli jae out sahf ds sub xchg int3 xchg scas adc je lock adc mov jl xor movsl xchg push fsubrs and dec inc (bad) adc int3 jnp push cmp js lods daa lret adc jbe xchg lcall push js and mov stc addr16 or xchg and aam ja arpl es out fwait push add xchg stos jg mov test call mov icebp in int3 scas fwait sbb xchg inc into sub mov scas int3 imul cmp sub daa pop aad int3 mov out mov push jmp jg mov xchg fcoml stc addr16 shrl mov push mov adc lret cmc or xor (bad) insl loop rorb jo jmp shll fdivrl dec rcrb mov jno xor cmp or push fidivrl nop adc xchg mov mov (bad) push dec clc repz ja mov rclb lock sub mov daa and movsb cld aaa data16 or je int mov pop in repz js and ret addr16 mov (bad) in jge pushf mov mov lds js xchg pop test je inc push in or dec dec inc pushf pop ret in adc cmp pop and ret pop mov out insb enter xchg adc or push xchg cmpsb js out mov adc sub aas pop cwtl mov xchg cmpsb imul xchg push push xlat lret (bad) int mov test and jae (bad) sti push lcall mov mov dec adc in aad add test inc bound push sub mov and fs stos add mov adc adc (bad) mov imul (bad) stc fadd adc dec jno dec popa cltd jp adc or jb es push dec hlt push ret xor (bad) pop in call xchg pop outsb lea test stos nopl test inc movsl lods pop xor add jle iret lret (bad) push or jp mov outsb add or mov mov xor dec ret mov xlat xchg (bad) stos sub imul jnp,pn lock out aas cmpsl xor push lods cmp test sti call sbb movsb pop ret ds faddl cmp cmp xchg loopne push dec mov mov loop cltd sbb ja fidivrl outsb lds test push nop sahf ret outsl push and data16 fcmovnbe popa pop insl xchg jnp or add aaa sub inc es cmp (bad) mov jbe cmpsb enter xchg loop dec dec sahf xor or jge adc imul xor pushf into shr mov ds andb testl push jecxz cmpl mov mov fcomps int3 sub hlt mov jb mov and pusha dec cmpsl aad cmp add clc xchg sbb fnsave fdivrp mov stc push das jnp inc test sahf mov sbb jl pusha xchg xor (bad) jle inc addb pop push dec dec and push jecxz loop pusha mov xor repnz cmp push xlat push inc or pop loopne stos popf out push mov xchg adc jp fs js or jnp push add lcall jns pop cld pop sub leave mov or pusha sti imul mov das sbb adc xor fnstenv lcall mov outsb into in (bad) in cmp outsb add arpl sbb xchg inc cld ret jne pusha push jns sahf sbb mul shrb mov mov mov fs js and repz pushf jmp rcr outsl daa xchg into jns xlat icebp lock push cwtl fnop xchg xchg jl xor jg hlt outsl scas test add jg les nop fwait push mov adcb jecxz and pusha loop pop and (bad) ljmp loopne xor cmp aas sbb xchg and dec jge inc cli cmp loop xchg add cmpsl call ficomp adc fs pop mov (bad) loop ret cmp or je test mov cltd lds xchg (bad) cmp mov lret movsb push pop out mov pushf cmp stc inc mov loop cmp aad sbb movsb (bad) lcall scas div push pop inc lods test insl push incl les dec xchg popl mov pop icebp stos not test (bad) or xor arpl add mov test pushw xchg push mov jo adc sbb mov ret cld lret mov pop push xchg pop pop int3 sbb int3 jae xchg push cmpsb jge mov jns jecxz and ss iret jecxz ss ljmp gs add (bad) fistl sub ss cmp stos (bad) push js aaa (bad) adc jbe arpl add out cmp add fadds jp scas pop jae arpl out xor xchg insb testb movsl leave lret jmp (bad) mov andb mov loopne imul jg pop frstor fsub addr16 dec jo push rcrb dec adc xor mov mov aad cmp gs test push daa aam imul jp xchg in lahf add mov xchg das adc dec stos out xchg fistpll lcall hlt cmp outsb mov push sbb inc mov outsb (bad) mov cli adc sbb out je cmpsl inc xchg xchg dec test jl cmp xor mov test jnp xor mov movsl push or add adc sbb mov xor ret sahf out imul aas cltd mov or imul dec mov adc xchg mov jmp jns push call jb mov push lds rorb push and xlat popf iret ror (bad) (bad) mov sub loop xlat fxch xchg pushf sub xor jmp mov loop (bad) mov lds mov into pop jle xchg xor int3 ret in xchg push dec mov negb outsb xor or in cwtl insl sbb xor mov xchg insl ret dec out aas ds imul and cmp fstl adc sub cmpb fimull fisubl or popf gs or sbb jns push in stc fwait jg sbb pusha mov mov dec or mov jp insb pop mov xor sarb jl (bad) (bad) addr16 jg or ss popa scas mov rolb dec (bad) mov loope outsl (bad) jle mov stos and das push add int3 fsts pop jp lea pop cltd sub das scas scas lea out (bad) lea cmp inc icebp push mov popf cmpsl fisubrl mov loopne mov in mov mov dec in pop scas pop cmp jne (bad) pop jl add lcall or mov int sub jmp mov test pop scas mov fadd ljmp adc push loope mov cmp aad jb and pop jecxz stc cmp mov xor mov push pop adc xor push (bad) sbb into jo into push sub xor lret iret fdivl idivl mov fbld xchg inc iret push in popa mov xchg (bad) jle std dec addb pop outsl push push and aam adc sub bndstx add pop sbb pusha inc cmpsb (bad) lods xchg insb xor addb inc adc push cmp inc sti jo lcall fist inc popf push lret les and xchg out or adc pop push faddl xor mov cli cltd (bad) mov jo scas sbb nop and or (bad) jmp push fistl mov je add das stc lods js pusha (bad) dec or negb sbb aas mov mov invd mov and mov ffreep les sub sbb nop jp or and aad enter jp add push pop test loope je or mov pop mov repz or lahf (bad) shld jecxz inc xchg push inc push bound clc out and cmp scas aas ret subl in outsb mov mov mov dec test sbb addr16 pop push (bad) dec cmp call cltd stos jbe lock push sahf lcall in imul outsl faddp ds imul mov test lahf pop out or jmp jo enter (bad) cmp mov fdivrl xlat movsl jp out cmp insl adc push bound cmp aaa lret mov pop mov ror sbb scas fsubl cmpsb out adc loope xor stos popa cmc jae aad pop fild pop sbb mov cmp jne sti mov and mov jg add (bad) repnz repz adc push mov adc jns std fwait push add and test imul icebp ja imul xchg in popf mov es xor f2xm1 subb mov add push pop sub push push scas mov mov sub cmp shlb mov in mov xchg adc (bad) (bad) sahf stc jns fucomip insl and fcoms inc pop cmpsl inc jbe or outsl add insb mov sub arpl ret push (bad) sbb inc addr16 enter js mov sub aad cmp stc pop mov rcll sub push adc pop sahf or es xchg dec repz insl or into push adc (bad) repnz pop fs pop jmp jecxz (bad) in arpl add xchg loop or fistp inc ja movsl cmpsb loope adc sbb test lods pushf ror jge icebp xor xchg adc push push dec out xor insb mov and push mov jae and pop mov lret lahf fwait add out xchg stos lret pop push pop mov aas sbb dec add push out add and cmp es pop sub sub adc sub out (bad) dec mov dec inc inc add imul cltd (bad) aas push or and test stos mov subl pop stos xor xchg ret cs pop cvtps2pi pop loop pop repz lcall mov mov addr16 sbb add movsb (bad) cmc gs push xchg and xor fmull mov or xor loopne lahf cmc jge out stos test mov inc inc inc pusha and in cli (bad) or (bad) aad mov pop pop or add es inc out xor adc adc cmp sub or adc fs xchg je scas nop add (bad) aad or mov insl lods mov xor jbe sahf inc cmpsl adc in movsb cmpsl test and dec call outsl mov or xchg jg and xchg jno lahf add mov (bad) (bad) mov popf sti or stos sbb pop jecxz movd pop push inc jmp andb or cli jecxz repnz and pop (bad) mov out sub fstps xor add sbb dec xchg or int stc subl pop cld iret push daa lods adc arpl xlat cmp mov sarl mov sbb out inc ja lds lock and into popf out xchg add and daa std sbb sbb jecxz nop add push cli push inc or insb cmp fwait jle es jg add mov sti ffreep mov fs shll sbb sub les jle stc and int3 mov and les repnz push push and dec data16 pop jmp push gs lret pop xchg lahf inc aas fstpt in out ljmp mov mov push xchg mov jmp movsb (bad) gs test add add mov mov add ljmp cld mov xor sub xor dec pushf mov sub and jmp out stc pop or jmp add sub (bad) pop xor jo cmp inc push mov std push lds cmpsl es jmp cmp push fs insb inc test pop popa jns mov decb fcompl sbb stos cmp add jno push pop or add adc dec inc sbb scas pop out mov mov mov lea push rcrb xor add hlt cmpsl mov mov lods mov sti aaa mov in adc call iret push xchg mov fcmovnb mov fmull call xor cmp aad mov lds lea divl je add jns mov xor push lret lea cmp mov adc mov push dec lret or cwtl dec ja dec push imul fcompl xchg jo out push (bad) ret cld or aas adc cmp cmp adc xor mov imul or jmp add push out push xchg push mov jle dec insl push fstpl xor das clc sbb js dec pop mov das aam push in lods cmp sbb cli (bad) scas cli xchg subl or or das pop jg rcrb std (bad) jle mov mov pop jb aas add imul pop pop (bad) cld out mov ret test subl xor lret cmp xchg mov rcrb cmpsb push xor ret sub ror dec lret es jle jno inc pop (bad) (bad) int scas sbb in add jmp int3 movsl ret in (bad) (bad) or daa leavew cli push jmp mov pop or sbb cmp cmp movb or add subl xchg sbb bound icebp lahf les fwait xchg mov out loope fldenv and xchg xchg lret ss lds adc nop mov cmpsb inc xchg mov inc push cwtl fdivrs in cmp rclb or sub lods test push movsl cmp mov dec testb xor jmp mov adc loope,pt mov (bad) add leave sbb jb and jge add sbb fidiv cmp outsb imul cld (bad) push mov icebp cwtl mov je in cld inc mov lods mov and jge test jg and ss cmpsl inc mov daa pop mov jno jge addr16 pushf mov push pop sbb fistpl popa sub pop mov (bad) mov sbb dec psubb lds test push push fnstcw cmpsb into stos xchg xchg and into fcmovbe (bad) insb xor cmpsb and lea add sub ja pushf pop and pop out adc loop pushf xchg clc sbb popa cltd enter sarl inc jns inc dec out adc pop subl out (bad) mov mov pop test clc iret test lcall mov ss scas push mov pshufw clc mov adc mov and dec ja hlt add sbb stos adc pop aas movsb fnsave jnp test popf cmpsl fs xchg adc xor xor daa call and imul push jmp inc adc icebp xchg add sub les sahf mov inc movsb int3 push adc insl pop pushf mov sub xchg adc inc jne (bad) or xor rcl (bad) xor mov fwait jo sub xchg inc les jmp ja imul ljmp mov and test inc (bad) xchg lret xor sbb and divb test jl fadds push push cmp jne call aam push pop sbbl cmp add add mov dec adc rcll mov fisubl sbb dec jecxz sub xor mov shll mov or cmp jne cmp fucomp xchg int mov cmp scas (bad) mov inc dec (bad) inc jbe test (bad) bnd inc xchg fldt mov pop lahf sbb pop pop push insl popf jle pop jle aad xchg js out jns lret jg,pt scas insl mov std or aas add dec sub mov and (bad) pop scas fstpt or pop push lret jns xor js (bad) jb push xlat mov sbb loopne mov cmc add mov arpl roll shll loope (bad) xor arpl lods lods scas jge push xchg test ret pop or mov ret sub ljmp mov lea popf std sbb rolb xchg or clc xchg shr lock cmc loopne pop cltd jl jae xor iret in cmpsb jns out adc cltd jmp pop mov pop adc mov cmc xor es arpl leave cmp stc xchg pop dec mov xor push inc xchg jecxz dec test jle dec sub push stos jg dec mov aad jecxz or (bad) xchg cwtl mov mov sub repz mov push (bad) in mov dec push stos popa ret in sbb je call cmp sub int3 dec push into dec jge inc cmp sbb adc push mov popf push cmpsb jecxz sbb ss sub xchg push xlat imul mov scas pushf and shl cli adc pop test pusha (bad) jbe jo push es push ds push dec cmp sbb or (bad) mov lret mov sbb jge test inc aam or pop out popa pusha in fildll xchg xchg push fwait stc test test ret cmp or iret insb rclb jbe jbe cmpsb jecxz mov push sti orl pop sbb xlat jno cld xlat andb das adc xor adc mov jnp push inc rcr push test daa mov stc pop sub icebp ja sub sub mov add popf in dec cmpps add xor sbb xchg cmpsb or test push inc mulb ss push jne and or imul pop je test inc mov ja mov add gs sahf test lods push inc cld sarb xor scas les rol outsl loop loop inc sbb or sbbb ret clc fwait jecxz jl outsl orl sub jmp push lret sbb std ret push or pushf or push push mov mov je push pop aas fnsave cs push cmp pop ljmp mov sub arpl pop cld and pop cmp mov stos lcall pop xor mov int in mov push aad ds xor and imul int (bad) inc test push jno push test cs mov mov scas jnp stos mov xor pop nop data16 rcrl push mov call cmp bound xchg or in test mov out or jb jbe pop and fs test sub rcrb mov ficoml test movsb das mull xchg pop jge inc mov pcmpeqd mov lods inc data16 iret adc dec pop mov dec pop shl jno dec out inc shrl scas jge cmpl lods jmp nop push cmp test adc adc add jmp incl mov xor push and mov sbb or into jno jecxz scas mov inc xor jns jns jmp inc outsl pushf cmp jno xor cmp add dec or sub in sbb fwait adc scas fisttpl xor mov push jge sbb sti mov popf out sbb xor pushf adc call daa popf cmc mov and mov or mov loopne inc aam insl aas mov inc sbb xor lods add movsl call pop leave dec xchg iret test aam mov mov xor inc shrl pop jmp mov mov mov mov push popa stos lods cmp mov in sbb sbb adc jnp orl and xorb add std mov push xor data16 mov stos cmp mov js pop xchg dec ss lret jno aam inc out push fwait add mov (bad) daa sub insb outsl dec mov notl add sbb mov inc stc pop insl cli push mov inc jb stos adc movsb shrl push push cmp mov lock pop mov xlat push adc jge je push fildll (bad) mov out mov add jge lods push scas inc and sbbl mov inc mov lcall mov pop ljmp lock adc jmp pop icebp and xor xor sbb fyl2xp1 jp pop jle jmp sbb ja clc mov es sbb mov push mov cltd int add sahf xor pop jecxz call in movsb cmp fisubr pop sub adc inc pop rcrb adc in bound aaa icebp cmpsl xor mov push lret sub cmp ja test mov aam push shl pop xchg jns scas jl xchg rcll dec out cmp and sub dec sbb sub mov lret fwait js enter movsb scas pop (bad) roll movsb (bad) call pop push sbb pop loope pop popf jmp sub dec mov adc in in (bad) pop adc xor jo dec (bad) fwait stc add test mov pop xor das xor in mov daa sahf push pusha cs jp push pusha jge jmp lret stos sbb push in aas or inc mov repnz fistpl or into out test inc js or adc jmp arpl push (bad) leave jae scas jo out arpl fildll add xor add add repnz setae adcb or imul out adc xchg lods inc jns out add fdivl inc movmskps cwtl mov jo jg idivb and lods test pop fldenv daa fadd (bad) sti loopne push pop sub and cmpsl pop pop push sub and (bad) aad xor push fsubrl mov xor pop dec mov cmpsb iret sub jl out mov sub mov jb,pn callw insl addr16 sub push fstpt out stos cwtl cltd loope dec rcrb xchg xchg sub (bad) (bad) out les inc in subb pop test stos fdivrl inc cmp mov js cmp inc out xor mov ret (bad) dec inc sub adc sub clc push pop notl push jp nop xor dec stc add (bad) and arpl scas adc xor jno in cli imull xor and insl and cmp pop sub sti (bad) xor xchg in jne jns shrl mov sbb ret adc mov dec in movb cs pop das adc xor fisttpl lea inc dec dec fadd mov inc inc divl adcl push sbb ljmp jae xlat and rolb jg push cmp mov cltd and in dec into mov loope push inc cmc xlat mov push sbb pop xchg mov cltd outsb data16 add cwtl ret and sbb push and dec loope jns sti mov mov loope add fcmovnu (bad) mov loope loopne lcall mov test mov dec add and xchg inc (bad) iret cmpsb mov mov mov xor pop out jmp outsl jecxz push test sarb cmp dec push inc ret test jecxz mov dec ljmp mov aad in test outsb pop xor inc add test mov xchg and dec mov xchg sub int3 sbb gs gs sub test test dec add test ja pop lea dec push mov mov fstpl fdivr cmp cmp in pop std mov out xchg sub lcall mov (bad) mov sub jp inc mov mov jne push scas (bad) push imul mov sahf aad sbb xor mov adc jbe pop fisubrl pop cmc das jmp insl cmc stc xlat subl and insl pop call (bad) das cmp xchg mov cmp movsl mov adc fcomps ret rorl test mov (bad) xor xor cwtl mov (bad) push adc js rdtsc adc addr16 pop or dec mov cmp add cmovp ljmp mov and daa adc inc pop mov fist dec push insl adc cs dec jmp arpl in sbb mov je inc xchg fistpl jns scas jp push cs cmpsl and mov adc mov add addl jnp sub dec push in stos shll inc dec das dec pop aad jne xor les hlt out mov les ret adc jg jnp outsb gs (bad) mov sub out cld enter fdivrl and xor inc jle xchg fmuls rcl jmp int xchg stos mov inc jmp mov enter jno imul enter jmp and push mov inc cld in out push pop adc out inc pop in jb adc aas sbb out jge inc cltd rolb clc push cld pop lret push add xor test sahf push pop (bad) jecxz cld popa (bad) out or ss std lret xchg push iret adc outsl aaa out sbb nop mov ret and dec pop popa iret icebp leave stc inc sarl loopne jp lcall sbb mov in xor cmp dec pop test ret lcall and add idivl sbb pop inc or mov out (bad) xchg ja mov mov sub cmpsb inc push hlt ja mov rcr pop and js cmc cmp pop shl outsb mov pop lcall pushf fstpl gs loop cmc pop je nop inc push scas mov jp sbb int3 xchg popa aaa push xlat (bad) fisttp cmp cmp pushf imul xchg jae xchg or push mov daa aad push lret cltd testb sub sbb mov rorb int3 test call jl mov jge nop add pushf pop jp scas sti incl scas fnsave mov addr16 enter push push dec hlt sub in cmp loop repnz clc add imul sub outsl jbe ret dec repz mov push sbb mov push fnstcw imul mov add stos adc cmp push fwait xor add aad test push mov pushf sbb sbb push or lcall cmp pop movsl or push sbb incb or jnp lds pop push cmp loope mov cltd jl xchg arpl or push jo addr16 pop sbb sti xchg imul pop add mov mov mov xor repnz sbb hlt xor sub movsb and lods aam (bad) jne leave (bad) push mov mov cltd dec fs jp lret adc push iret out adc jbe frstor dec mov push out and daa inc xchg (bad) pusha stc mov sub adc stos xor andps packssdw and lods scas int jae or imul in cmpl and cmp gs cltd xor mov scas jmp jbe jmp mov popf push fs push bound cli roll call inc push mov or sub in mov es cmp stos shll sbb js xor lock cmp dec adc lret cmp popa jo popa push repnz sub push movl scas pop fs push lcall or iret mov push and (bad) pop test dec cld lock aas dec mov lret out mov dec push cltd insl loop into sub test int3 scas sbb lret outsb and mov andl (bad) fimul cmp rcrl dec test popf loope mov mov mov mov lret inc jg movsl out ret pop pop mov not sub xlat push and shrl jbe (bad) jle jbe sbb or pop or mov xchg stos xor mov scas pop arpl jmp sbb push fs inc dec sbb mov xor addr16 outsl mov popf jg int3 inc cld mov rcll xchg jo adc and jne,pt mov inc xor popa inc push pop mov pop loop mov aam out jp mov aas push std pop dec jno mov sbb cmp (bad) mov imul das loopne add aad pushf cld add fstpl faddl and mov arpl cmp sbb inc push add jnp test movsl sub pop add lods insl jb sbb push push dec and stos mov cmpsl pop stc xchg adc jbe sti sbb inc outsl xchg test (bad) sbb pop loop add xlat lret or scas in js scas jp and int3 (bad) int arpl sub sbb adcl mov and or mov mov icebp orb pop cmp (bad) and in jo sbb addr16 popf push arpl inc add incb dec mov mov and adc or jnp mov outsb test xor lret aas lcall lods lea loop xchg xchg cli push subb jo mov into movsl inc fisttpl iret sub jb add push rcll jb cmp test xchg rorl insl xchg pusha pop cmp (bad) mov mov xor out mov out jns sub in clc add test jo sub sbbl aaa push dec sbb gs and or jge ss clc rcll shll adc mov adcb mov pop sub loopne bound ret and jge mov jmp xchg lea cli stc or mov fwait popa iret std dec ficom movsl cmp jbe jmp sub leave push pop inc push and add aas pop push int pop jg in pop adc cli in (bad) in test add xchg or pop xchg pushl (bad) lcall into (bad) fndisi(8087 loop lret ret mov xor xor mov mov xchg and gs shrl dec mov mov cmp fildl push xchg xchg and repnz fwait xor fldt cld jne (bad) mov xlat dec (bad) xchg mov jb push and dec or popf arpl aas xor lods adc imul pop gs ror repnz or adc mov dec loop ret jp jmp dec push cmp mov push movb mov sbb cmp stos xchg cmpsb and cli sarl test loope gs ret (bad) pop and sub jg,pn jl (bad) add lds cmp iret jno inc mov and cltd xchg or and pusha dec lret add (bad) push out into sub rol or in adc sbb rclb pop pop cmpsl xor lea lea mov dec (bad) les jne push int mov and pop pop adc sub push gs ljmp aam movsb jb cmp out and int3 stos xchg dec mov mov nop int3 mov hlt data16 mov push cmp pusha adc imul cli push sbb rclb sbb ret mov add pop jae out push mov add cltd push or sti test cmp (bad) and cmp mov mov lock jne es cmp ds insl addr16 jmp jne add subb mov fistpll repz fisubrl cmpsb adc out add jge push (bad) cmp fnstcw in shrl in push add test cmp mov dec mov push pop and jmp lock adc test mov mov call mov daa enter xor mov push sbb test sbb cmc pushf outsb rorb ror mov bound pop dec jne sbb and bound cs xor pop inc mov bound sub out inc into and cs and stos cmp adc jmp xlat enter mov nop jne out pop shll lods push mov bnd sbb (bad) mov jno push out (bad) jp cmpsl das pop ret mov je push in xchg bound fcompl test aad or jae sub sub les mov in lods and test in xor scas jp jg mul dec inc dec mov fs std mov fiadd xchg and cmp dec inc xor and int3 add mov ljmp fcomps out es in aas pop ljmp movsb xchg or fs push pop or cmp add mov mov ret aaa dec sbb inc repz sub mov mov fwait cmp out (bad) leave rclb stos pop loope dec out xchg cmpsb sarb (bad) fsts outsb inc call popa iret cmp dec mov pop cmp sub cli addr16 cmpsl mov nop sbb add out dec mov pop mov jl sbbl mov cs cltd test repz js xchg cwtl fwait cld das add and int (bad) mov cmc push (bad) popa test sub fnstenv mov and mov push mov inc xor cmpl push (bad) addr16 mov test (bad) fdivrl or inc mov push fldl iret jbe les (bad) add sub sub push add cmp jae sbb nop jae shll outsb and xchg xor (bad) repz push adc xchg movsl fimull sarl sbb or es daa out outsl mov inc cltd pop insb pop fcoms sbb xchg jmp jnp mov cwtl pop arpl xchg push pushf scas pushf mov (bad) mov (bad) loope jo mov push mov inc dec adc in mov cmp sub arpl repnz movsb (bad) mov (bad) xor sub mov adc (bad) adc mov jns inc pop jbe mov enter cmp xlat mov push movsl jp or fldt xchg out dec cmp jp xlat test xchg or cmp pop jno xchg xor mov nop in mov xchg sub inc push pop xchg lcall out shr cs (bad) rorb ljmp fdivs insl dec ficomp rcrl adc jmp gs push pop mov jecxz sub test cli add in xchg fcom cmc cmc xchg cmp (bad) inc mov mov cmp lahf les jo push ret cmp mov fcmovnbe les jle js in push mov push data16 jo fnstenv rcrl cmp fwait lea sbb sarb add adc jmp lock pushl fmuls push xchg cltd dec fldl xchg jno bnd pop mov sti nop xor push add shlb scas xor and ficom adc xor daa cmpsb imul cmpsb push (bad) fild int3 jecxz rcrb xchg jo or xchg stc aas fwait bound aad cltd pop lock outsl insb in cld mov pop orb nop lret sbbl not in stos dec out sahf sbb aam (bad) inc or jns jbe sbb pop xor and insb fsubrs mov sbb jg aad inc dec inc mov stos dec mov daa test imul sbb enter insb mov push mov add leave pop sbb inc lods ror mov ja in (bad) js xchg sbb lods fcomps mov in fldl fadd addr16 inc into mov cmpb mov and int jmp xchg fdivrl cmpsb aas clc cmp pusha aas les lcall xchg shlb dec and push outsl into (bad) jbe inc pop sub mov lock flds dec mov hlt push push stos push add mov and inc jno push lret gs fdivl loop repz add inc les lea ds sbb jne and ss mov dec fwait dec and fnsave sbb (bad) push dec and in inc cmp repz xchg mov mov js test pop dec rcrb sub into xchg fcoml arpl and mov movsb mov out push fwait add add mov push loop dec push pop int add xor adc push add in ja or loopne jmp lds pop mov popa cmp mov fwait xor mov inc aaa add mov frstor aad jl and stos ja mov lds (bad) lock lods shrl pushf pop mov and mov or in lea adc push mov stos fsubr pop jmp jae push in push mov xchg gs shrd mov icebp ljmp int3 jae (bad) jmp cmp scas add cli dec leave pop aam call rol (bad) sub jbe cli daa inc mov rcrl add cmc jnp js mov hlt jns movsb (bad) cmp aad sbb loop pop xchg jl std arpl out fadd clc adc and es sbb xchg push inc and xor movsl mov jl sub adc jns je shl in jbe cmp mov mov sti cmp (bad) std xchg jbe jno mov inc dec pop arpl lahf jp or inc in sbb pusha dec jae xor (bad) shll cli ret addl mov cmc jne cli pop ljmp int3 (bad) pushf sar mov xlat nop (bad) cmp jg arpl mov loopne test and js push add loope call lods fild add add or in push jbe push cs jne ds add repnz or cld dec xor lcall add (bad) pop jo add scas imul test gs dec mov pop dec or cld lods les imulb leave (bad) sbb stos dec push out out mov aam in jne imulb cmc (bad) mov pop sbb cmp aas adc fisttp sbb es cld das lods and fs jne jne xor orl nop jbe arpl mov adc out rorb mov rcl imul mov pop fldt mov sub arpl gs pop das inc xchg fs pop lods add sbb sbb test es repnz outsb xor incl mov mov lahf stc inc inc pop sbb push cmc jp daa sbb dec mov into ds ja popf push sub ret jb sbb jmp negl ss imul mov imul loop enter and mov (bad) mov ret lods arpl (bad) iret jecxz nop adc arpl cmp rclb incb pop xchg or pop mov pushf add inc cmp sbbl push xor jae xchg pop inc cmpsb mov xor xchg xchg sbb pop xchg adc lock jns sub add sbb mov dec movsb xchg sub pop xlat fldlg2 outsb sbb lahf jg insl push jmp cmp pop cwtl dec pop pop adc xlat dec and scas fwait mov addr16 inc leave sub xor mov pop imul call loop out mov (bad) rorb mov sub loopne sti lret sbb sbb cmpsl pusha call cltd ret loope push sub mov pop pop inc mov mov or mov sub and outsb mov rcrl int3 sbb mov sbb fs add movsl dec mov pushf scas es lock mov push jg dec xor jnp daa mov mov aaa lea add mov (bad) test mov jl repz sarb je sbb lahf jnp cmp xor rcrb mov insb inc outsw dec imul enter ss inc push enter aas jl xchg inc out incb pop mov fnsave std fwait ret scas jnp xchg lea and fnsave add dec outsb and (bad) js push sub insl outsl push xchg fwait mov sahf pop pusha sti or pop mov adc xchg ficomp xchg data16 adc rcll scas mov cld xchg mov jg jg push sahf aas or popa adc xchg stos push xor sbb and add sbb js clc adc push addr16 push adc aam jg mov aaa sub cmp jb mov stc pop daa test mov add cli inc sub outsl inc sub pop mov ds loop cmp jbe inc jne ds imul in jnp mov inc loop (bad) jge cs mov int cmp sbb pop pusha or andl jmp ret xchg cld aad sub lret (bad) mov in pop nop lcall das addl jnp sub pop xchg test enter mov xchg ret sti in or xchg (bad) add or or clc pop mov lock hlt xor ss pop pop cld push lock testb icebp inc cmp enter sarl pop adc jmp and dec mov lds inc mov and in cmpsb pop push sbb or add add fistl sub jg fild and push sbb sub pop fadd sub xor ret ret pop pop mov les fstp ret inc cld mov pop gs aam push repz add push ss sub lods xor add dec sbb jns push test mov stos xchg (bad) sbb test scas sub add rcr rcl cmp mov insl (bad) jle cmpsb dec cmp push outsl pop pop scas movsb inc decb xchg xchg jmp xor mov adc rol xchg push fidiv pop shll addr16 idivl push add lds (bad) loopne adc bound xor inc stos in xchg sub xchg adc (bad) or or xchg pop xchg xor mov loop xchg add sub ss add test fwait data16 dec out push jae (bad) mov fcmovnbe push sbb and out pop mov into scas (bad) jo adc (bad) adc out adc jge sub fbstp js leave fildl mov (bad) negl pop cmp push xchg push push lods mov cmpsb and (bad) xlat sub xchg mov clc jb test les arpl push push cmp xchg jmp xchg sub xchg sbb (bad) enter call outsl scas fwait mov xchg sbb xchg mov mov xchg mov xchg add lock and lahf out test in push mov jg std rcll push mov pop mov mov dec bound xor mov dec adc mov fisubl cwtl and lods jle es or sbb add push jno jae shrb aaa dec cmp hlt das fsts in xor adc xchg out ret and (bad) push repz sub rcrb jmp outsb loop inc sub in adc stos pop mov push cwtl xchg (bad) push js ljmp (bad) fist notb test outsb lods rolb out jae (bad) lea add pop push inc shr inc adc cmp int3 arpl sbb add test ljmp xor cmp sbbl jb add pop fwait pop push push mov cmp cli jmp jno scas stos mov std popa and mov fnstenv (bad) fidiv push mov icebp fs xor data16 and jno xor xchg enter pop xor lds mov mov fisttp aaa lahf push lcall cmp push out mov es mov and cwtl nop subl push leave cmc clc xchg daa (bad) pop and sub loope push fisttpll lcall (bad) sbb sub xchg mov or cwtl loope lods jle inc fidivl test or or scas and push lods std mov push mov movsl inc imul icebp (bad) loope outsb mov pop pop sbb in scas cltd xor dec mov out dec incb cmpsl sub clc cmp mov outsb ficompl loop andl sbb dec sub add mov insl add mov sbb faddp imulb stos lods scas pop fcoms gs mov aaa es push fisubl inc dec psrld mov fcoms cmp adc cmp movsl add sub xchg xchg ja xor inc jge imul imul movsb push fild push out (bad) sbb pushf popf xor fild sti xchg push cmovno mov xor in pop add cltd movsb push xlat xchg jmp or cmpsl jmp sub lods mov stos aam adc dec outsl xchg xchg or lret xchg mov inc or cmp push add pop arpl pop dec icebp jnp lea inc fistpll cmp inc fild and aas loope leave xchg mov xor repz int3 sbb adc inc dec cmp repz cld ss xchg aad add sbb stos pushf push insl icebp sbb push sub cld mov int3 notb addr16 bnd mov jbe pop mov cmp xchg add jne push xchg (bad) xorb xorb add sbb inc inc (bad) push movsl mov cmp shr xlat dec dec mov in push push js in lods fwait push fdivp loope sbb hlt mov mov arpl ja insl insb mov inc insl xlat push test xchg test movsl leave add dec xorl push jbe jmp mov mov push push cvttps2pi cltd mov cli cvttps2pi mov mov jg and pop xlat push cwtl mov jno and movsb cmpsb xorl push push mov xor xor test je lea mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor mov lea cmp ja sub jmp lea cmp ja sub jmp lea cmp ja sub jmp mov xor shl mov or shr mov mov test jne add cmp jb pop pop pop mov pop ret pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push push push lea mov lea mov cmp jne add add sub jae mov mov cmp jne add add sub jae pop pop mov pop ret pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 testb push mov movl je push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ss mov sub shrl into xlat sub mov mov sub lock add or ss sub clc push pop pusha xchg arpl popf mov arpl add movsb jecxz xor test clc loop,pt jns clc mov or stos sbb xchg xchg sti out arpl add ror (bad) in and test mov or shll mov inc and push inc mov inc scas jg pop xor cmp movsl xchg sub mov (bad) sbb sbb mov jge pop or aad inc push movsb jmp add push inc in push les (bad) je add test (bad) aas mov stos mov pop pop loopne mov out insb loope popa inc into xchg jl mov xchg lret xor pop jno daa xor mov jne sbb mov xor stc jnp xor lcall adc sub xor push or jle xchg out mov push int3 dec pop ja movsl cmp stos adc and and cmpsl andl xor inc jno pop pushf xor andl pusha fucomi jae inc fs or imul lock loopne xchg ja dec jg mov repnz and push xchg adc sahf loopne cltd data16 in adc adc push dec jo loopne (bad) out aad out adc repnz mov mov lock mov fstp jle xor mov popa leave icebp mov inc imulb cmp cli and imul mov or pop enter cmpsb sbb cmp outsb fsts pop out add fs daa or fdivrl lahf xchg xchg mov push cld jl mov out (bad) xchg jb xor and outsl ret fcompl data16 sbb pop lods test int inc shrl mov int3 and cmpl add and dec push jmp push divb xchg (bad) sbb xchg and mov ja pop jno mov fistl or push push mov sarb xor push mov test dec (bad) dec pop and in add push mov fsubs jne cmp imul add or arpl fidivrl cli and dec sbb push adc add and in sti or daa pop push insl aas loope sbb insl xor outsl jae fcomps jl fyl2xp1 sub and mov push push push mov push push mov movl lea movl movl call mov mov call mov test jne call test je xor jmp movl mov push push call mov add test je mov push call xor lea call mov test jne call test je xor jmp movl mov push push call add lea call testb movl movl je push push call add mov mov pop mov pop mov pop ret int3 int3 int3 push mov and push push push push mov push push push lea push call mov add mov pushl call pop mov pop ret int3 int3 mov cmpl je movzwl push push pushl lea push push push call mov add movb test jne call test je xor jmp movl mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push mov push push mov mov pushl call test jne push push pushl mov mov rep call test je push push push movb call add mov xor xchg pop pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lods aaa (bad) mov ret (bad) stc cmp adc sbb inc leave xor lods int stos int3 mov popa and inc scas jo jno inc pushf jle mov mov and stos cmp dec mov mov jle or imul pop daa dec xor je push mov and cmpb je mov mov mov call test jne mov mov call or je cmpb je movb mov mov xchg push push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub cmpl push push mov je addl adcl pop pop mov pop ret mov addl push adcl pushl push call mov add mov cmp jb ja cmp jbe mov mov lea mov lea push mov lea push mov call add cmpl ja cmpl ja movzwl mov jmp movl lea push lea call pop pop mov pop ret push mov and push mov mov push mov test jne call test je xor jmp movl mov mov pushl pushl mov call cmpl je push call mov lea push lea call push call pop mov pop ret sub jmp int3 push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 ss mov sub shrl into xlat sub xchg mov sub lock add or ss sub clc push pop pusha movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov call ret int3 int3 int3 int3 int3 int3 int3 int3 ss mov sub shrl into xlat sub xchg mov sub lock add or ss sub clc push pop pusha leave pop mov jne test mov sbb add testb je push push call add mov pop ret push mov push push mov push mov sub push mov mov movl movl mov mov mov mov cmp je push push mov mov test je movl mov movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov add add mov mov movb mov mov cmpb jne pushl mov call mov push call add mov cmpb je mov mov mov mov mov mov movl pushl call pushl movl call mov add mov add mov cmp jne mov pop pop lea call mov movl movl pop mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push mov movl movl movl movl movl call lea xor call pushl call mov add test jne call test je xor jmp movl mov push push call pushl call pushl call pushl call mov lea add mov mov mov call pushl lea call push call mov add mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov mov jmp xor xor ret int3 int3 int3 int3 int3 int3 lods pand loope out sbb into xor inc loopne cmpsl pop mov aam push cli fildl jae mov icebp mov test js mov sub sar cmp jl mov push xor test push mov cmovns sub sar lea cmp jge call sub xor div mov pop pop mov mov push mov call pop ret int3 int3 int3 int3 int3 mov mov test js mov mov push mov mov lea push push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor mov sub sar test je nopl nopw mov mov movl movl movl movl call mov inc sub sar cmp jb pop movl movl pop ret mov pop movl pop ret int3 push mov and sub mov push push xor mov mov mov sub add shr push xor cmp cmova mov test je mov mov cmp je cmp jne mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call jmp call mov inc add cmp jne pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp jecxz xchg sbb lret jo xchg inc out push add xchg jge inc mov mov int3 ret bound fistpl aad mov ret pop les jmp insl sti mov ja stos push (bad) cmp mov xlat mov and cmpsl (bad) (bad) into (bad) sub inc loope hlt hlt jle and add dec movsl add xchg cwtl shlb inc fsts push push cmpsb add mov or or dec xor fwait or mov lret or out or pop imul mov dec dec fucom cmp add mov pop in mov popf xor or jae and fimull lcall repz aam inc sahf out jge inc dec pop inc sub mov xchg mov or out mov sbb pop adc xor (bad) lods cmp or dec xchg inc cwtl mov push inc int3 xchg loopne dec icebp push pop pop pop pop (bad) cwtl mov (bad) adcl add inc add (bad) mov add jne mov mov mov jmp ret int3 int3 push push mov push mov mov test jns mov mov mov mov sub push mov sar cmp jbe cmp je mov mov movl movl movl movl call mov inc sub sar cmp jb pop test js cmp je mov mov mov push mov call pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov jmp sub jmp mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns xor pop mov cs lahf (bad) imul nop mov mov rcll (bad) sbb bound dec push jge stos sub lret add sbb loope jo mov and jle pop mov jmp int3 int3 int3 int3 int3 int3 int3 int3 lods aaa fcmovnbe mov xor out add nop std or mov jns or inc fdivrl xchg bound pop pusha mov movl movl movl movl jmp push mov and push mov push mov mov mov or je cmp jb ja cmp jb mov cmp je cmp je cmp je cmp je cmp jne push call pop mov pop ret call pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lods (bad) cmpsl and push rclb jecxz mov repnz in mov test dec jnp cld fidivr out ljmp xchg pushf rep mov sub leave js cmpsb push idiv ret jns in ljmp mov push icebp add sub fadds jle jmp xor sub jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub mov push mov mov call movsd ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test je mov mov call mulsd mulsd call sub push sbb push push push call mov mov pop add ret int3 int3 push mov pushl call pushl call pushl call add pop ret push push mov push mov push push mov call add test je push push push call add test je pop xor pop pop ret add mov lea mov inc test jne sub je cmpb je push push push call mov add test jne push call add mov xor pop pop pop pop ret mov sub push lea push call mov push push push mov call mov push push mov movb lea push call add mov mov pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp dec pop test aas arpl cld rcrl daa rol or lods pusha stc adc clc ss sub clc push pop pusha addl test or and push xchg xchg movsb pop movsl push out out push aad sub pop jbe jno ds and add pop in ljmp leave xchg mov adc and int3 cld mov std push push push je das mov cmp cmp data16 inc jns imul sub xor and xor sub jle pop inc mov push std push dec add inc and mov pop mov test cmp les add (bad) inc push mov mov dec outsb in cld cmp test pop mov jno add cs lcall mov cmpl into push popa out ljmp cmp repnz or cli leave je or movsl lods (bad) mov dec inc mov cmpb mov mov mulb xlat pop inc xchg push jb out jne in pushf and gs push xor push mov fimul cmc imul jno sahf or scas dec pop loopne test mov xor (bad) push ljmp mov leave jg push add bound cld fcoms cmpsl pop cmp jo sub addr16 xor sub fimull faddl sbb dec cmp int3 (bad) outsl dec ljmp sub int xor mov daa mov mulps mov pop sbb cmpsb ret lahf or sub and sub jp cld adc push ljmp jecxz out jp dec daa ret cltd rcrl adc push cmp pop arpl pop std (bad) out push nop jbe cmc ret lcall scas xchg add icebp loopne inc repz sub and pop mov xchg fisub fmuls fmuls maskmovq notl sar jg ret in cmp popf lock int xor sub popa (bad) mov roll inc dec sbb mov outsb inc dec xor add ss in and or (bad) and pop je test pop wbinvd sbb lret in sub push adc scas push push sbb call sahf jge aad pop add scas arpl push dec or (bad) mov sub cmp sbb bound dec hlt xchg sub insb (bad) addr16 jge mov std fdivrp pop (bad) jbe xchg scas pop push mov movsl sahf push (bad) and fbld pop or push int jecxz sbb mov fstpt add inc xchg sti pop push popf mov add dec lahf inc fwait jl mov subb xchg cmp jb fildl ljmp out xchg movsl in inc or fsubrl sbb adc add loop jmp or and sub or ret adc jecxz rcr push int mov (bad) jne mov jecxz push (bad) and outsb inc out sbb pop inc test mov pop out nop jno jl mov dec out repz push push test mov jl mov je mov or cmpsb and cmp in cmp ds mov mov rcl fisttp inc (bad) icebp mov and push inc ds je and push in data16 jle test xor cs xchg xor pop bnd push lahf ret sbb adc and adc icebp sbb sbb jbe pop and cmp jno sbb scas rcrb mov and test sahf leave (bad) sarl fcomp hlt dec rcl sti and cmp mov adc rclb clc pop adc in cwtl xor jo cmc rcr repnz jg lret idivb cmp pop mov lock add std xchg pop pop aam cmp sti arpl movsb sahf pop jne test rorb cmp mov into dec orb inc or and ds popa (bad) out jle inc xor jle out jge je rcll sbb dec push cmp and xchg fs mov inc jbe enter mov cmpsl addr16 mov cmp xchg mov nop fstps daa add (bad) loope mov insl mov test call jnp js loopne loope sbb (bad) push push and sti jb div pop jno cmp pop enter cmpsl incb repz into mov in outsb cltd (bad) enter xchg test push jmp inc lds sub jecxz mov push inc ret into je shrb ret sbb ror sbb xchg and in sub mov (bad) add xor into mov mov add xor mov shll pushf lds inc jb cmp jnp mov pop movsb xor jmp (bad) push xor mov (bad) imul mov mov push xchg push add ds lods mov inc sti sub push test dec je sub mov idiv sub (bad) fidivrl inc mov mov sahf or hlt cmc cltd (bad) rclb shrl jnp fld mov fcoml mov ror out mov lods pop imull jnp dec lcall xor jne fwait daa xlat push dec xor aaa push es mov mov push add lahf fldenv lret mov mov pusha xchg jge cs lahf mov fs enter mov mov xor jb ss lret push jp sub xchg imul push mov mov ds pop das add jbe cltd in cli jne jge and fwait ret lcall inc pop fsubrs pop cmp mov pop sahf leave add out pop addr16 mov push push mov xchg out test xlat dec sub dec mov xchg and jmp loope pop add pop xlat jo cltd xchg lods mov inc lock dec sti ror cmpsb scas sub jl out mov fldt pop mov mov (bad) cmp or pop scas mov outsb in js mulb repnz xchg add leave stos movl add push cmp in mov mov dec popa sub jg jns and inc insb je fimul fistp push data16 data16 clc in or dec dec icebp lret push mov out ret mov adc adc or mov and cmp sbb sbb out clc inc repnz sub jmp out les test mov sbb cmp out dec or loope inc fistpll aas xchg (bad) dec dec cmpl push jle out inc in adc mov aaa jb cmp scas test (bad) pushf test push gs loop cmpsl inc or outsb outsl jl (bad) mov ret stc jl icebp push fstpl mov out adc rolb add jecxz movsb test into cmpl or js and and dec enter sub imul es je and outsb and imul outsb push leave fcomi mov rep cmpsb out call xchg insl rcll push sbb cld adc enter add int addb movsl add adc sub ss cmp jo fdivs test inc cmp imul mov ret jo fs std mov mov lcall add mov les fadd add xor jmp int3 int3 int3 int3 int3 int3 push mov push push lea movb push movl movl call add movl movl mov movl movl movl movl movl pop ret int3 push mov mov movl test je push call add mov test je push call add mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 push mov and sub xor push push mov mov push call test jne test je nopl mov cmp je cmpl mov jne mov jmp mov cmp jg nopl call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add xor mov call or je mov cmp je cmpl mov jne mov jmp mov cmp jle mov call xor mov call or je mov xor mov mov call cmp jne cmp jne mov and or jne mov call addl lea mov adcl incl mov mov mov mov incl mov mov mov mov pushl mov push pushl add push call mov add mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov cmp ja jb mov cmp jae movups mov mov mov movups mov movups mov mov movups movups movups movups lea movups movups movups movups movups call mov mov neg sbb neg inc push call mov cmp je cmpl mov jne mov jmp mov cmp jle cmpl jne call push push push push call mov push add push adc push push call push push push push mov mov call sub lea mov movaps push movaps call add jmp call xor mov call or jne mov call xor mov call test ja jb test jne pop pop pop mov pop ret int3 int3 int3 int3 push mov and sub push push mov lea push call xor mov call mov mov mov lea mov lea nopl mov cmp jne add add sub jae mov lea mov nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl mov mov mov rep mov cmpl jne test js mov lea add mov nop mov cmp jne add add sub jae mov mov rep pop pop pop mov pop ret mov lea rep mov pushl push add push call mov add mov push push add add push call mov xor mov add add cmp je mov div mov xor imul and add mov mov mov mov lea div mov add imul mov mov and add mov pop pop pop mov pop ret or div xor imul pop mov or mov lea div mov add imul mov pop pop mov mov pop ret int3 movsl fcoms nop mov imul lock and movsl ss icebp aad gs or cmpb es fcomps pop mov sbb lods movsb sbb pop pop loope aas cmpsb daa aas dec outsl cmp and shll ljmp insl xchg mov or shrl cltd jle lods push and cmp mov dec sti dec insl js arpl std repz xor dec fldt scas int clc imul fnstsw mov xchg fprem1 mov jle cld orl mov sbb movsb push or mov (bad) sbb mov pop mov jbe add jnp mov dec jbe jnp stos ja adc stos std and xchg in or sub cmp fdivr or cmp pop inc adc dec or xchg sub mov movsl insb dec das push mov cld pop (bad) out pop bound mov jp sbb in ja pop pusha orl sbb loopne or cmp cmp icebp jle lret sbb cwtl mov pop dec ja aad dec loope mov fnstsw jl add iret loop out jmp pop add cld pusha cs dec outsl inc cwtl xchg push mov nop call int je mov shl adc push data16 movsl dec movsb divb inc pushf sbb repz push repnz xchg and xchg outsb or sbb scas jecxz ret (bad) sbb je sub dec mov lods mov lds imul fidivl in sbb jmp pop das lods js xchg mov mov movsb rcll push fidivl movsl (bad) sub xchg std vminpd pushf xor leave pop sub pop pop stc (bad) push aad cmp fisubr inc je push or inc rcl lret inc mov movups movups movups movups movups movups movups movups mov mov mov mov mov ret int3 int3 int3 lods xor mov in bound push add stc fcoml mov ss jae gs int3 ret stos lea test mov test mov inc int push fisttpl movsb aas cmpsl je push mov bound mov push jnp xchg lods xchg mov add xor stos cmpsb outsl mov loopne pop pop inc dec clc jno je outsl pop jmp mov cmp xchg add hlt addl loopne inc lret insl fsubp (bad) fidivrl lods inc outsb add (bad) sub addr16 movsb jno insl fcmovbe es adc add jbe testl imul icebp repnz or inc dec movsl dec stos add ret cli adc popa add lds cli sbb mov or inc sahf dec inc or inc sub data16 add sub imul lret movsb push fistpl aam add enter mov mov out add dec sahf and sbb adc or in jae lods and add jae mov sti jo pop lret loopne inc pusha fldt inc jg daa sbb fnsave aaa jle daa jb rorl out dec into add repnz jbe (bad) xor aaa xchg push std dec cs push lea lret add or and js mov pop add mov sbbl mov sahf sti fdivrl cmp loopne sub ret (bad) dec lea cmp sub (bad) add addb in sbb mov or and jnp loope outsb xor aas push fisubr add xor xchg scas cmp adc enter movl das push cmc and les jmp xor out in stc jl add nop inc jle (bad) popf popa inc adc mov fnop pop aad fcomps addr16 insl (bad) mov (bad) (bad) jg into roll out in xchg cmp dec adc cmpsb pushf add or mov pushf insb inc mov jbe mov cmp gs (bad) jecxz inc (bad) rcrb xor sahf jp (bad) cmp movsb into aaa out test mov inc add and or jo daa mov (bad) jb lods push mov and sub push push mov lea push call xor mov call mov lea mov lea mov nopl mov cmp jne add add sub jae lea mov lea nopl mov cmp jne add add sub jae pop pop pop mov pop ret mov cmp jne cmpl jl lea mov lea rep cmpl jne test js lea mov lea mov cmp jne add add sub jae lea mov mov lea rep push lea call mov mov pop pop pop mov pop ret mov lea lea xor rep movups movups movups movups movups movups movups movups mov mov mov mov cmp je mov mov divl and imul add mov pop pop pop mov pop ret or divl pop imul pop mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 ss mov sub shrl into xlat sub movsb subl dec and lock add or ss sub clc push pop pusha mov push mov push movl mov mov mov mov movl movl movl movl movl movl movl movl movl mov neg sbb neg inc push call cmpl mov jne cmpb jne mov lea shl add mov pop lea mov mov pop ret mov imul sub lea add shl jmp mov imul push mov sub mov add cmpb cmovne imul pop add add mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov movl test je test jne push call add mov pop ret push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov call mov mov call push push push push call push push push push mov mov call push push push push call push push push pushl mov mov call add push push adc push push call mov mov mov mov lea mov call mov mov mov mov mov mov mov mov mov mov mov mov lock mov cmp jne cmp jne mov add nop mov mov mov mov mov mov lock cmp jne cmp jne mov mov sub mov sbb push push push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov cmp je mov cmp je dec mov cmp ja jmp or push call push call ret xor push call push call ret mov push call push call ret mov push call push call ret mov push call push call ret pop cmpsb adc cmpsb adc cmpsb adc cmpsb adc cmpsb adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp jecxz sbb xchg in mov imul in mov cld xor dec xchg in je or test push push ret jmp lock ss mov mov pop jl shrb xchg repz popf xchg or lods mov (bad) mov xlat add fwait mov icebp stos mov sub test ret cmp jle lds les insb mov cwtl scas js mov sub dec push cmp dec push add out jb xorl test out jmp pop push hlt cli insl add pop popf jb rolb mov cld jbe sbb (bad) ficomp (bad) dec lret enter xchg and xchg push adc call push or dec frstor (bad) loop outsb loop loope cmp and in push push mov push mov push mov mov call or jne push mov push call push push push push call test jne call jmp push mov call movl mov push push mov test je cmp je push push call add movl push call mov mov xor movl mov mov mov xorps mul movsd seto neg or push call mov xor mov mul seto neg or push call mov xor mov mul seto neg or push call add mov xor movl test jle push call mov push mov call mov push push mov mov movl mov pushl call mov push push pushl call inc add cmp jl movl mov push push call mov mov xchg mov test jne call test je xor jmp movl mov movl lea mov movl mov mov mov movl movl testb movl movb movl movl movl movl jne orl testb je mov incl mov test jne call test je xor jmp movl mov push lea mov push movl xorps movl mov mov push push mov movl movl push push movl movl movlpd call add xor test jle mov push call mov add mov mov mov mov movl movl movl lea push call mov mov push lea call inc add cmp jl pop pop pop mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push push push mov mov call or je mov call xor mov xchg push push call mov xor mov sub sar test je mov mov nop mov push pushl call test je call jmp pushl call movl mov inc mov sub sar cmp jb xor movb mov call xor mov call mov test jne call test je xor jmp movl mov push push call mov add mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push and add inc sbb mov scas mov mov jl int3 cld dec inc add mov mov mov out push jnp int3 fsubrp xchg adc popa movsl lock xchg das iret jae mov adc mov pop sub out es mov insl iret push hlt loopne insb adc add in and iret testb (bad) mov cwtl in mov (bad) out dec popa push imul cmp mov jg pop inc repnz rorl es and insl jecxz add mov push push add xor cmp xchg xchg test outsb and adc aad mov dec cmc je fisubl pusha mov mov divb mov lods jnp (bad) cmp adc int3 subb pop add in xor fdiv pop inc (bad) cwtl jge fcmovnbe fs popa js std and pop xor sahf jmp cmp mov cltd std dec mov repnz ja xor add daa movsl das and sbb cmp adc fildll sub push jmp (bad) aad daa je pop in movsb mov fstcw cmpsb test dec ja xor (bad) jg xor or push push loopne add xchg sbb clc stc scas jo xor fisub push add imul sti stc out dec in dec es loopne das imul mov adc pop mov sbb adc push pusha repz cmp in jbe ljmp out sub mov push inc sub xchg mov mov fwait aad lods fs fildll rcr popa mov cmp mov (bad) mov mov aam jle push daa lods cmc mov xchg jmp in xor fsubl notb add jbe pusha inc push call dec jns scas push cwtl out inc rcrb lods mov cltd ss jecxz push out add lret mov ljmp lret mov push mov sub push push push push movl movl call mov mov push movl call cmpl je mov mov mov add push push push call mov mov sub cmp jb mov inc mov mov mov mov push mov mov mov mov mov mov decl call mov add cmpl jne push call mov mov cmp je push nopl lea mov lea rep mov lea push mov cmp jne mov mov call jmp push call call mov mov mov cmp jne pop mov mov mov cmp je mov push call add mov cmp jne mov mov mov cmp je mov push call add mov cmp jne push call mov add mov pop pop mov pop ret int3 int3 int3 int3 int3 push mov and sub mov push mov mov push push push cmp je mov mov test je mov mov cmp jne lea xor call mov mov mov mov cmp jne lea xor call mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov inc mov and mov cmp jne mov xorps mov movsd and add mov adcl or jne mov xor movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl lea movsd push call add cmp jne movsd comisd jbe movsd cmpl mov je push call mov xor cmp jle xor push push mov call mov mov push push movsd call mov mov push push movsd call mov lea inc movsd cmp jl xor xorps movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl movsd xor xorps movsd cmp jle push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd jmp movsd inc cmp jl xor movsd cmp jle nopl push push mov call lea movsd push movsd call add cmp jne movsd addsd movsd inc cmp jl movsd movsd movsd push movsd call pop pop pop pop mov pop ret mov call jmp mov call jmp int3 int3 int3 mov push mov cmp je mov mov mov addl pop ret mov sub sar cmp je sub mov sar mov shr push sub push lea cmp jbe mov jmp lea cmp cmovb push test jne xor jmp cmp ja lea cmp jb lea cmp jbe push call add lea and mov jmp push call add mov mov mov mov mov mov sub push push push call mov add test je mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add lea mov mov lea pop pop pop mov pop ret call call call call int3 int3 int3 int3 int3 int3 int3 int3 int3 pop jns xor test push mov std push cwtl ss xchg xor movsl inc (bad) cld xor ret inc in repnz mov sub fwait dec push jge scas cld hlt pop mov int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov add test jne mov mov mov mov ret mov mov mov ret int3 int3 int3 int3 int3 int3 push and jno mov jno nop mov jmp sbb and xor or ss sub clc push pop pusha push mov and sub push push lea push push call push lea push push call lea push call lea push lea push call push lea push push call mov add mov cltd idivl mov mov mov test cmove mov mov imul mov test jle mov imul mov jmp movl cmpl jne mov add cmp ja mov movb cltd sub sar imul imul mov jmp mov test jle imul imul mov jmp movl cmpb mov je or mov cmpb je or mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movsl fmul xor ja dec inc dec sbb xor ljmp (bad) nop ret fild hlt xor test pop pop xchg mov fnstsw push sbb jbe out mov mov call and fwait xor pop fsubrl popa test add js movsl jle stc sbb mov push adc jg addr16 repz add xor mov sbb mov fdiv cmpsb adc mov enter sbb jge jno add mov andb outsb cltd pop cli mov adc push mov mov push cmp outsl mov js mov loope aam or and inc ja movsl sub idivl popa addr16 lret jle jle (bad) jmp adc add sahf in andb mov or arpl out sub mov jne das push cmp adc or call add sti fimull inc imul cld fcomip gs mov ja inc dec shrb dec xchg sbb jne pop out nop mov (bad) jae sbb cmp dec aaa mov jecxz add mov outsl xchg or cmp jns push cmpsl mov mov dec pop (bad) into fisubl mov add sub lret cmp mov pop test vmwrite and lret xor push sbb insb adcl lret or adc aad pop lods lcall sbb cmp sub dec outsl and dec and xchg sbb fsubl pushf adc pop mov push mov xlat xor (bad) sti jo sub and bound std aam pop stc push lea xchg or mov xchg cmp adc into xchg (bad) mov ljmp dec in imul cmp xor push and jns fadds add in cmp add test je push call add mov add ret push lea movl push push movl movl movl movl call add xor mov mov push call test je push push call test je lea push call push push push mov lea lea rep push call pushl mov pushl push push push push push call mov mov push mov sub push push lea push call add push push sub lea push push call add mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 and das test pop push sub bnd lcall jae mov or pop and push mov test jne pop xor pop add ret push mov cmp jne mov pop pop pop add ret push mov test je cmpb je add jmp mov test je movzbl mov lea inc shl shl test cmovne cltd idiv jmp mov cltd sub sar cmp movd cvtdq2ps cmovg pop movd movd cvtdq2ps cvtdq2ps divss mulss comiss jae movd sub cvtdq2pd cvtps2pd divsd mulsd movsd fldl fstpl call fstpl cvttsd2si mov add cmp cmovl pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub movups push push push push movl nopl mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov mov mov mov mov mov mov xor xor xor xor mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov mov mov mov mov mov mov xor xor xor xor mov mov xor xor xor xor mov mov mov mov xor xor mov xor mov mov xor mov mov mov mov mov mov mov mov xor xor xor xor xor mov mov shld shr or add mov or mov xor xor xor xor xor xor xor xor xor xor mov mov xor mov mov xor mov mov xor mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor xor mov mov xor mov mov mov xor mov mov shr xor mov mov shld add or xor or xor mov mov xor mov xor mov xor mov mov mov xor mov mov shld xor shr or xor xor add mov or xor xor xor xor xor mov xor xor xor xor mov mov xor xor mov xor xor xor xor xor xor mov mov mov mov mov mov shld shr add or xor or xor mov mov xor xor xor xor xor xor xor mov mov mov xor mov xor mov mov xor mov mov mov shrd mov shl shr or mov mov xor or mov mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr mov xor or shl mov or mov mov mov shrd mov xor shr or mov shl or mov mov xor mov mov shrd shl shr or or mov mov mov xor mov mov shld shr or shl or mov mov mov mov shld shr shl or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl mov xor or shr mov or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr or mov shl or mov mov xor mov mov shrd shl or shr or mov mov mov mov shrd shl shr or mov mov xor or mov mov mov shrd shl shr or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld shr shl or mov mov xor or mov mov mov shld mov xor shr shl or mov or mov mov mov shr shld mov xor or shl or mov mov mov mov mov xor shr shld or add mov or mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov mov not and not and xor mov xor mov not mov and xor mov mov mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov mov not mov and mov xor mov not and mov xor mov mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and mov xor and xor mov not mov mov mov and mov xor not mov mov and not xor mov and not and xor mov xor mov mov mov mov not and mov xor mov not and xor mov mov mov mov mov mov not mov and not mov and mov xor xor mov not mov not mov and xor and xor mov mov not mov mov mov not and mov xor mov mov not and and xor xor mov not and xor mov mov mov not and mov xor mov mov mov mov mov mov not mov and mov xor mov mov mov mov mov mov mov mov mov mov mov not mov and mov not movups mov and mov xor mov xor mov pandn movups mov not mov and mov pand movups not not and and mov not and pxor movups xor xor xor xor xor mov add xor mov cmp jl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea mov push push mov mov call add cmp jl mov lea mul sub lea mov shr imul add lea xor cmp ja lea cmp jae lea nopl movups lea movups pxor movups movups movups pxor movups movups add movups pxor movups movups movups pxor movups cmp jl cmp jge nopl mov xor mov xor inc cmp jl lea call add add sub sub jne mov push lea push push call add movb inc mov sub push lea add push push call orb add xor nop movups movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups add cmp jl cmp jge shl nopl mov xor mov xor add cmp jl lea call push mov push pushl call add pop pop pop pop add ret int3 int3 int3 int3 sub push push push mov push mov mov mov mov xor xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shr shl or or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr movzbl or xor xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr or xor shl xor shr or xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov movzbl mov mov shl shl shr or shr xor or xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl shr xor or movzbl xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shr movzbl xor shl or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl shr or xor shl or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or shl xor movzbl shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl mov mov mov movzbl mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr mov shl or xor pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 sub push push push mov mov not mov push mov mov xor mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor notl xor notl mov mov xor xor mov mov xor xor mov mov xor xor mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl movzbl mov shr shl or shr xor or xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or mov mov xor mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or movzbl xor shl shr or mov xor mov mov mov shl shr movzbl mov shl or shr or xor xor xor xor mov movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov shr mov shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl or shr mov xor shl or xor mov mov movzbl movzbl mov mov mov mov shr shl or xor movzbl shl shr or mov mov xor mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shl mov xor shr or xor mov mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shr shl or shr movzbl xor shl or xor mov mov mov mov shr shl or shl movzbl xor shr or xor mov mov mov mov shl shr or shr mov xor shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shl shr or mov xor shr shl or mov xor mov movzbl movzbl mov mov mov mov shl shl shr or shr xor or xor movzbl mov mov mov mov shl shr or shl movzbl xor shr or xor mov mov mov mov shr shl movzbl mov shl or shr or xor xor xor mov xor movzbl mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr movzbl xor shl or xor mov mov mov mov shl shr or shr mov xor shl or xor pop mov pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov sub push mov push mov cmp jl push push lea mov mov lea sub sub shr lea mov nopl lea cmp ja lea cmp jae lea lea cmp ja lea cmp jae cmp ja cmp jae lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor nopl lea add mov mov mov xor mov add cmp jl jmp xor lea add movups movups movups pxor movups add cmp jl push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call add lea lea push call push lea lea call push lea lea call push lea lea call lea add lea cmp ja lea cmp jae lea cmp ja lea cmp jb xor xchg mov xor xor add cmp jl lea jmp movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups movups movups pxor movups pxor movups addl jne incl add add subl jne pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov test je mov mov mov shl mov dec sub shl and mov mov sub movzbl btc mov movl jmp mov movb incl mov cmp jle cmp jge nopl mov movb incl cmpl jl lea mov push call add movl cmpl jge nopl mov movb incl cmpl jl addl jne incl movl nopl decl mov mov mov shrl mov cmp jg cmp jle nopw decl mov mov mov shrl cmpl jg push lea mov call movups push lea movups lea movups movups movups movups movups movups call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call push lea lea call movups add mov movups pxor movups movups movups pxor movups movups movups pxor movups movups movups pxor movups nopw mov mov inc cmp jl movl xorps movl movl movl movl movl movl movl movups pop movups movups movups pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push push mov lea xor movzbl lea movzbl shl or movzbl shl or movzbl shl or mov inc cmp jb mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov mov mov mov xor mov cmpl mov mov movl movl jne mov mov mov xor mov xor mov xor xor mov mov xor mov nopl movzbl movzbl mov xor add mov add mov mov xor rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov xor ror mov mov movzbl movzbl mov mov xor add add mov mov xor rol add xor mov ror mov mov xor add mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror add mov mov add mov mov xor mov ror add xor mov mov ror mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor ror mov mov xor mov add mov add mov mov xor mov ror add mov mov mov mov mov xor mov mov ror movzbl mov mov movzbl mov xor add add mov xor mov xor rol add xor ror add mov mov add mov mov mov xor mov ror add xor ror mov mov mov movzbl movzbl mov xor add add mov mov xor mov rol add xor mov mov xor ror mov mov mov add add mov mov mov xor mov ror add xor mov mov mov ror mov mov movzbl movzbl mov xor add add mov xor mov rol add xor rorl mov mov xor mov add mov add mov mov mov xor mov ror add mov xor mov mov mov ror add mov mov mov mov cmp jb mov mov mov lea mov mov lea nopl lea and lea lea mov xor lea and lea mov xor mov and lea mov xor lea and add lea mov xor sub jne mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor pop pop pop pop add ret int3 int3 int3 int3 movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl ret sub push mov push push mov mov mov push mov mov sar sub mov mov test je mov mov shrd mov movl and cmpl jb ja cmp jb push lea add push push call add addl jne incl lea mov call mov add shl cltd sub movl sbb test jne cmp jb nopl addl jne incl mov mov call add add adc test ja jb cmp jae test jne test jne pop mov pop pop pop add ret mov shrd shr mov push push lea add push call add lea mov pop pop pop pop add ret int3 int3 int3 sub push push push mov movb mov movb push mov mov mov add mov mov cmp jae inc inc mov cmp mov cmovae mov shr mov mov shr mov mov shr mov mov shr mov mov shr shr mov mov cmp jne addl lea push push mov call add jmp jge test jne movl lea mov mov mov sub cltd push push mov call add jmp lea mov mov mov sub cltd push push mov call addl mov push push mov call add movl push push lea mov call add addl addl lea push push mov call movzbl add mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl mov movzbl mov movzbl mov mov shr mov movzbl pop mov pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push xorps movlpd mov mov push push mov mov xorps movlpd mov mov mov mov nopl mov lea mov not mov not mov add mov mov not mov not mov mov mov not and not and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor add xor and mov and shld xor add mov xor mov mov mov mov mov mov mov shrd shld shr add xor xor and mov and shld add xor xor mov mov mov mov mov mov shrd mov shr mov shld shld xor add xor and mov xor and add xor mov mov mov mov mov mov mov mov shrd shld shld add shr xor add and xor xor and mov xor mov mov add mov adcl jne mov cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl xor and mov and shld xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shld shl xor xor shl mov and and xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl xor shl mov and xor and xor mov mov mov mov mov mov mov mov shrd shld shld shl xor shr shl and xor xor mov and xor mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor mov xor xor xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov mov mov mov mov mov shrd shld shr xor shl mov xor shld and movzwl xor shl mov xor mov mov mov mov mov mov mov shrd shld shr shl xor mov xor shld and movzwl shl xor xor mov mov mov mov mov mov shrd shr mov mov shld shld xor shl mov xor and shl xor movzwl xor mov mov mov mov mov mov mov mov shld shrd shl shld xor shr shl xor movzwl and xor xor mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor xor mov xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor xor or mov mov xor mov or mov mov xor mov or mov mov xor mov or mov mov mov add mov adcl jne cmp jb xorps movlpd mov mov mov mov nopl data16 mov mov not mov not mov mov mov not mov not mov mov mov not lea mov not add and and xor xor mov mov not and not and xor xor mov mov and xor mov mov and xor mov mov mov mov mov and and xor xor mov mov mov and mov xor and xor mov mov mov mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov and mov and xor xor mov and mov and xor xor mov mov not and not and xor xor mov mov not and not and xor xor mov or mov or xor xor mov or mov or xor xor mov and mov and xor xor mov and mov and xor xor mov mov and xor mov and xor mov mov and mov mov and xor mov mov xor xor xor xor mov xor mov xor mov xor mov xor mov xor mov xor mov xor xor xor mov mov mov xor mov xor mov xor mov xor mov xor mov xor mov mov xor xor xor xor mov mov mov xor mov xor add mov adcl jne cmp jb mov movl lea mov shl add shl add add adcl mov mov mov mov mov mov mov mov jne cmp jb mov add mov adcl jne cmp jb pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 sub push xorps mov movlpd mov push mov mov mov shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb mov call xorps movlpd mov mov mov mov add adc shrd shr mov and lea lea lea mov xor mov xor add adc jne cmp jb pop pop add ret int3 int3 int3 int3 push mov and sub push push xorps movl mov movlpd mov mov lea movlpd rep mov mov mov mov mov mov test jne cmp jae mov jmp mov mov mov mov mov lea movups movups movups movups movups movups movups movups call mov add mov adcl add adc test ja jb cmp jae mov mov test jne test jne mov jmp mov mov and or mov jne shrd and jmp shrd and inc shr mov push add push lea push call mov add mov mov mov mov and or jne push push lea push call movb jmp mov and or jne shrd lea and shr mov add mov sub jmp mov shrd and shr inc cmp jae lea mov add sub mov xor shr rep mov and rep mov mov mov mov mov shrd and and shr mov sub movzbl bts mov lea call push lea push push call movzbl add mov mov mov mov shrd shr mov mov mov shrd shr mov mov mov shrd shr movzbl mov mov shr mov mov shr shr mov lea mov mov call mov cmp jg je sub je sub jne mov movups movups movups movups xor pop pop mov pop ret mov movups mov movups movq movq mov xor pop pop mov pop ret mov movups movups movups movups movups movups xor pop pop mov pop ret cmp jne mov movups movups movups movups movups movups movups movups pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 sub mov push push mov push mov mov push mov mov mov mov nopl data16 movups add movups adc mov movups mov movups movaps movd psrldq movd movaps psrldq movd movd xor movd movaps psrldq movd xor mov movd movaps psrldq movd movaps mov psrldq movd xor psrldq psrldq xor movd xor mov movd xor mov mov xor mov movd movaps psrldq psrldq xor mov movd movaps psrldq mov xor mov movd xor mov movd xor mov movd movaps psrldq psrldq xor mov movd xor mov movd xor mov xor mov mov xor xor mov mov mov xor mov mov movups movups movups movups movaps psrldq movd movd movaps psrldq add movd movaps mov psrldq movd movaps psrldq mov adc movd mov add movd movaps psrldq movd movaps adc psrldq movd movd movaps mov add psrldq adc add movd movaps adc psrldq mov add mov movd mov adc addl mov movd psrldq mov add mov movd mov adc add adc shll shrd mov xor or shr mov xor or xor movd psrldq mov mov add mov movd movd mov movd adc add mov adc xor shrd shl or shr xor or xor mov mov mov movd psrldq movd add mov mov mov adc add mov adc xor shld mov or shl xor shr or movd mov xor psrldq mov mov add movd movd adc add adc add mov adc xor shrd shl shr or xor or mov xor add mov mov mov adc add shrd xor shr or xor add mov mov adc xor shld shr shl or xor or xor mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov adc mov shrd shl xor shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or xor mov xor add mov adc add mov adc mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov mov adc add mov adc mov shld shr xor or shl or mov xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shr or xor shl or mov xor mov add adc shr mov xor shld or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr shl or mov or xor xor add mov adc xor mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor mov shrd shl or shr or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shld mov xor shl or mov xor shr or mov mov xor add mov adc mov mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov mov mov adc mov shld xor shr or shl mov xor or mov xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or or mov xor xor add adc add mov adc mov mov mov mov add adc add mov adc xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr mov xor shl or or mov xor xor add mov mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shr or xor shl or mov xor add mov adc shr xor mov shld movl shl or xor or xor mov add mov adc shrd shl or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl shr or xor or xor mov mov mov mov add mov mov adc add mov mov adc xor shrd shl shr or or mov xor mov mov xor mov mov mov mov mov add adc add mov adc mov shld mov xor shl or mov xor mov mov shr or mov xor add mov adc mov add mov adc mov add mov adc shl shrd xor mov shr or xor or mov xor mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr mov xor shld or shl mov xor or mov xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or mov or mov xor xor add mov mov mov adc add mov adc add mov adc movl add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr or shl mov or xor mov xor add adc add mov mov adc mov mov add adc add adc mov xor mov mov shrd shl or shr mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc mov shld xor shr or xor shl or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld mov xor shl or xor shr or mov xor mov add adc shld shr shl mov xor or or mov mov xor xor add mov adc mov mov shr xor shld or shl xor or xor mov mov add mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov shld mov xor shl or xor mov shr or mov xor add mov adc xor shld shr shl or or xor xor add mov mov adc shrd shl shr or movl or xor mov xor add movl adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov add mov adc mov mov add mov mov adc mov shld xor shr or shl mov or mov xor xor mov mov add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd xor shl shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov mov xor add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or mov mov or xor mov xor add mov mov adc mov add mov mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc shr shld xor mov shl or or xor xor mov mov mov add mov mov adc shll shrd xor mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor shl or or mov xor mov xor add mov adc mov shld shr xor shl or or mov xor mov xor mov add mov mov mov adc mov shrd shl xor shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr shl or xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shl movl shrd or shr or movl xor mov xor add adc add adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr xor or xor mov mov mov mov add mov mov adc add mov mov adc shl shrd xor mov shr or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov mov shld mov xor or shl mov xor mov shr or mov xor add mov adc mov add mov adc mov add mov adc xor shrd shl shr or xor or mov xor mov mov mov add adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov mov mov add mov mov mov adc shr shld xor mov shl or mov or xor xor add mov mov adc xor shl shrd or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov xor mov movl shrd shl or shr xor or xor mov add mov adc xor mov mov shrd shl shr or xor or xor add mov adc mov mov shrd shl or mov xor shr or xor add adc add mov adc xor mov mov mov shld shr shl or mov or xor mov xor add adc add mov mov adc mov mov add adc add adc xor mov mov shrd shl shr or or mov mov xor xor mov mov mov mov add mov adc add mov adc mov shld xor shr or shl xor mov mov or mov xor mov add mov mov mov adc mov add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov adc add mov adc mov add mov mov adc shr shld xor mov shl or or xor xor add mov mov adc xor shld or shr xor shl or mov mov xor add mov mov mov adc mov shll xor shrd mov or shr mov xor mov or mov xor mov add mov mov adc mov shld shr xor shl or mov or mov xor xor mov add mov adc mov mov shld shr shl or mov xor xor mov or xor mov add adc shld shr mov xor or shl or mov xor mov xor add mov adc mov shld xor shr shl or or mov xor xor mov mov add mov mov adc mov mov mov shrd shl xor or shr or xor mov xor add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov mov mov adc xor mov mov shld shr or shl xor or xor add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr movl or or mov xor xor add adc add movl adc mov mov mov shl mov mov shrd mov or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov shr or xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor add mov mov adc mov add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov or xor mov mov xor add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld shr shl or or xor xor add mov mov adc mov mov mov shrd shl xor shr or xor or xor mov mov mov add mov mov adc mov shrd shl xor shr or mov or mov xor xor mov add mov mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl shr or xor or xor add mov adc mov mov mov xor shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl or mov xor mov xor add adc add mov mov adc mov mov add adc add mov adc xor mov mov shrd shl or shr xor or xor add mov mov mov mov adc mov add mov mov adc shr xor mov shld shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov shl or or xor xor mov add mov adc mov mov mov mov xor shld or shl xor mov shr or mov xor add mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov mov shld mov shl or xor shr mov or mov xor add mov mov adc mov shld mov xor or shl xor shr or mov xor mov add adc shld shr shl mov xor or or xor mov mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd shl xor shr or or mov mov xor xor mov add mov mov adc xor mov mov shrd shl or shr xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov adc mov mov mov add adc add mov adc xor shrd shl or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor mov xor mov mov add mov adc add mov adc shrd xor shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl shr or xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc xor mov shl shrd shr or xor or xor mov mov add mov mov mov adc shl shrd xor mov shr or mov or mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add adc add mov adc xor mov mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shl xor shrd mov shr or xor or mov xor mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov adc add mov mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or shl xor shr or mov xor mov add mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc mov mov shld mov xor shr shl or mov mov or mov xor mov xor add mov mov adc shld shr shl or mov xor xor mov or xor mov add adc shr shld mov xor or shl xor mov or mov xor add mov adc mov shld xor shr or shl xor mov or mov xor mov mov mov add mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov shld shr or shl xor or xor mov add mov adc xor mov mov shld shr shl or xor or xor mov add mov adc shrd shl shr or movl or xor mov xor add movl adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shl shrd or shr or mov xor mov xor mov mov mov mov add adc add mov adc shl shrd xor mov or shr xor or mov xor mov mov mov mov add mov mov adc add mov adc mov mov xor shld shr shl or mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl shr or xor or xor mov add mov adc add shrd shr or xor mov xor add mov adc xor shld shr or shl xor or xor mov mov add mov mov adc mov mov mov shld xor shr or shl mov xor mov or xor mov add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shr shl or mov xor mov add mov mov adc shl shrd xor mov shr or xor or mov xor mov add mov mov mov adc xor mov shrd shl shr or or mov mov xor xor mov add mov adc xor shrd shl shr or xor or mov xor mov add mov mov adc add mov adc add mov adc mov add mov adc xor mov mov mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl movl or mov xor shr or xor add adc add mov adc mov xor mov mov shld shr or shl xor or xor add mov adc add mov adc mov mov add mov adc add mov adc mov shrd shl xor shr or xor or mov xor mov mov mov add mov mov adc mov add mov mov adc shr shld xor mov shl or or xor mov xor mov mov mov mov add mov mov adc add mov adc xor shrd shl shr or xor or mov xor mov mov mov mov mov add mov adc mov add mov adc shr shld xor mov or shl mov or xor xor add mov adc xor mov shld or xor shl shr or mov xor mov add mov mov mov adc mov shll xor shrd mov or shr mov xor or mov mov xor mov mov add mov adc xor mov mov shld shr shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shr or shl or xor xor add mov mov adc shr shld mov xor or shl xor mov or mov xor add mov adc mov xor shr shld mov or shl xor or xor mov mov add mov mov adc mov shrd xor shl shr or or mov mov xor mov xor add mov mov adc xor mov mov shrd shl shr or xor or mov xor mov mov add mov mov adc add mov adc add mov adc mov add mov adc mov mov mov mov mov shld mov xor or shr xor mov shl or movl xor mov add movl adc xor shld shr shl or xor or xor mov add mov adc shrd shl or shr or mov xor xor add adc add mov adc mov mov mov shl mov mov shrd or mov shr or mov xor xor add adc add mov mov adc mov mov add adc add mov adc xor shrd shl or shr or mov mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or mov xor mov mov mov add mov mov adc mov add mov mov adc mov mov xor shld shr or shl mov or mov xor xor mov mov mov add mov adc add mov adc xor shrd shl or shr xor or xor mov add mov adc add shrd xor shr or mov xor add mov adc xor shld shr shl or or xor xor mov mov mov mov mov add mov adc mov shld mov xor or shl mov xor mov shr or xor add mov adc xor shrd shl or shr xor or xor add mov mov adc xor shld or xor shl shr or mov xor mov add mov adc mov shrd shl xor shr or xor or mov xor add mov mov mov adc mov shrd xor shl shr or mov or xor mov xor mov add mov mov adc xor shl mov shrd or shr xor or xor mov add mov adc add mov adc add mov adc add mov adc mov xor mov mov shrd shl or shr xor or xor mov add mov adc xor mov shrd shl shr or xor or xor add mov adc mov mov shrd shl shr or movl or xor mov xor add mov adc add mov adc mov mov shr shld mov xor shl or or mov xor mov xor add adc add mov adc mov mov mov mov add adc add mov adc mov mov mov shrd shl xor shr or xor or mov xor mov add mov adc mov mov add mov mov mov adc shr shld xor mov or shl or mov mov xor mov xor mov mov add mov mov adc add mov adc mov mov xor shrd shl shr or mov or mov xor mov xor mov add mov adc mov add mov mov adc xor shld shr shl or or xor xor add mov mov adc xor mov shld or xor shl shr or mov xor add mov adc mov shll xor shrd mov or shr xor mov or mov mov xor mov mov add mov mov adc mov shld shr xor shl or or mov mov xor mov xor add mov mov mov adc shld mov xor shl or xor shr or mov xor mov add adc shld shr shl or xor xor or xor mov add mov adc shr mov shld xor or shl or mov xor mov xor add mov adc xor shl shrd or shr or mov xor mov xor mov add mov mov adc xor mov shll shrd or shr xor mov or mov mov xor add mov adc add mov adc mov add mov adc add mov adc mov add mov adc mov xor mov xor mov mov shld mov xor shr or xor shl or xor add adc xor xor mov mov add mov mov adc xor xor mov mov mov shr mov xor shld mov or shl xor or xor add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd mov or shr xor or xor add mov adc add mov adc xor xor mov mov add mov mov adc xor xor mov mov shl mov xor shrd or shr xor or xor add adc add adc xor xor mov mov and mov mov subl mov mov jne mov mov pop pop pop mov mov pop add ret int3 int3 int3 push push push push mov mov mov mov lea cmp jbe test je mov sub je push lea add push push call add sub add add push push lea mov call add movl cmp jbe lea mov shr mov push push call shl add sub add test je mov push add add push push call add add pop pop pop xor pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push mov mov push mov orl mov mov mov cmp jae sub push lea add push push call add pushl lea mov push mov call mov push push add push shr call movups lea xor add mov movups movups movups movups movups movups movups test je xor mov lea push push mov movl movl movl movl movl movl call mov mov sub cmp cmovae push mov add push push call movups mov add inc movups mov mov movups shl movups movups movups movups movups cmp jb pop pop pop xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp pop mov inc jns xlat enter inc ljmp or jg xchg or out mov add mov xor jne dec cmpsl imull jae sbb xchg inc (bad) mov pop dec sbb pop jle repz sbb inc sub mov mov add nop fstp mov xor mov cmp pop xor push sbb lret inc adc jecxz mov mov dec dec fmulp lods or inc inc add rcr test cmp ja insb jnp mov fcoml repnz or lea mov ljmp mov jbe scas xor int sbb (bad) int3 addr16 lret arpl and xchg hlt add int3 mov mov pop cmp mov pop loopne fdivrs imul mov into out sub push push jne (bad) fmuls cmp sbb ss mov jno pop and mov and sub lea call mov mov mul lea push mov push call mov lea call add mov pop ret int3 int3 push mov and sub mov xorps push mov mov push lea movaps xor movaps mov mov mov and mov mov shrd mov lea shr push movaps movaps movl call mov add cltd and add mov and cmp jge mov inc mov mov inc mov cmp jl mov test je mov mov mov incl mov lea call pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and pushl mov mov shl push push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov push movups lea movl movups movl movl movups movl movups movl movups movups movups xorps movlpd call mov lea add call mov pop ret int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 pushl mov pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 mov sub lea cmp ja cmpl lea je lea mov mov test je push push push call push push mov call mov lea push push push push call pushl call push call mov lea add mov mov cmpb mov cmovne cmpl mov cmovne sub jb mov cmp jne add add sub jae cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp jne cmp je mov cmp je xor pop add ret mov pop add ret xor add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp dec sub outsb mov adc subb lea mov mov int3 dec lret ret add push and adc loopne fsubl pop jb push cmp rcll stos dec push inc mov pmaddwd cmp cwtl push inc test mov inc adc and mov out mov mov push int3 mov stos xchg pop push push in mov mov jecxz add add decl sbb mov lcall jge ss enter outsb dec mov ficompl outsb int ret dec add xorl mov les jns lcall push mov iret iret push lret add fisubrl adc fnstcw pop add fsubrl shr xchg test inc jecxz leave (bad) call dec mov imul pop ljmp mov repz fcoms mov mulb addb cmp mov lock adc sbbb insb xchg out in stos test or int cmc outsb in inc push scas (bad) rcrb inc push mov and ret cmp iret dec (bad) pop sbb std cmp lret jg jo aam pop (bad) out mov stc lods jnp mov cmp xor out and sbb and adc mov push xchg add push mov mov sbb add pop lret lahf dec ret imul mov add xor outsb add out (bad) sbb test jg test lods rcll fisttpll in xchg xor (bad) (bad) mov out inc mov jl cmp mov ss or xor sbb inc test sbb popa dec xor js,pn out je dec int sbb inc insl (bad) cmpsl es arpl lcall es pushf and clc adc test adc (bad) or cld xor cmp fcompl jl mov pop sbb jno js push pop push and ret movsl sbb and or rorb cmpsl mov je aas pusha mov jge lods push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push jns cmp loopne adc and inc sub add push lods int inc lods ret and jne jo dec orl in (bad) (bad) cmp cmpb cld (bad) stos movsl fs repnz jecxz sub shlb or cmp out inc dec mov cmp dec dec mov bound and and or inc add xchg inc mov inc addb mov dec jp fwait sub xor insl dec cmp pop mov jge xor jl adc push js push imul or daa add std sbb fbld sti ret push mov adc ret stc cmp shrb mov (bad) mov lretw adc cld add sub jmp fisttpl push idivl outsb (bad) pop sub and cmp lea dec pusha stos push scas incl lret inc std inc or push (bad) push xchg and dec arpl sub and cwtl (bad) fist jmp movsl repz movsl cmp clc lods or orl mull fisttpl push jae call mov movsl pushf leave and cltd repnz sub pop (bad) into lock mov out in jne add xchg ja mov out xor xor jge aam pop repz pop pusha push jns adc dec (bad) cli xor push or sub pop sbb or mov or rcl fstp sete into or insl dec je lret push insl xchg lods sahf mov jge jl lods loope and mov sbb (bad) dec je repz adc sahf mov roll xchg imul add push popf push push add jno ret and pop lds into dec aaa dec mov js sahf icebp inc neg xor push sbb neg leave test subl or nop in cs clc xlat jo call rcll fcoml aaa xchg pop push mov lahf fsubs xor cmp push lock adc xor pop push or dec inc (bad) push add cld xchg decb popa mov mov rcrb cmp out out stos mov sbb mov out ljmp lret fstp into ss jle adc dec and call sub or push xchg (bad) mov data16 dec cmc sbb cltd fbstp xchg das cwtl jle fadds test in test in (bad) ffree lods iret jne adc (bad) ficompl mov scas icebp push pop iret pop test cmpsb or je and pop and test or (bad) and daa jmp pusha push das xchg sub push js rol lcall pop rorl xlat ljmp pop inc xor sahf adc push movsl jo fidivr (bad) out insl mull and ret mov push call aaa pop out fwait jge fnstsw dec popa inc mov jecxz dec mov nop sbb (bad) cwtl push sbb mov jecxz icebp (bad) out ja shrb mov jne xor push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub push mov push push push call mov add mov call mov xor mov xor mov xor mov mov mov mov xor mov mov mov xor mov mov mov xor mov mov xor mov mov xor movq mov mov mov mov lea movq mov mov mov punpcklqdq mov movl data16 movq and movq punpcklqdq push movups aesenc movaps movd pxor movaps movups xor or movaps mov psrldq and mov movd lea mov add mov mov mov push mov mov push mov mov push mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq mov xor xor mov mov punpcklqdq mov mov mov xor mov lea mov movq xor mov mov mov movq mov punpcklqdq mov movl jmp nopw mov mov and movq and movq xor punpcklqdq movups movups movq aesenc movq punpcklqdq movaps pxor movaps movups aesenc movd movaps pxor movaps movups movaps mov or movd xor psrldq movd movaps or psrldq mov mov and mov add movd mov push push mov mov mov mov add mov add push mov push mov mov mov mov call push push push pushl mov mov call push push push pushl mov mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov xor mov mov xor and mov mov add mov add mov add mov mov mov mov mov mov push mov mov push mov mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push push mov call mov mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov mov xor mov mov xor mov mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 int3 int3 push mov and sub push push mov push push call mov add mov call mov mov xor mov xor mov xor mov mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov movq xor mov mov mov movq mov mov mov punpcklqdq movl nopl nopl and mov mov movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor mov movd punpckldq movq punpckldq movq punpcklqdq pxor movaps pxor mov xor push movaps movups movaps movd psrldq movd or mov mov and mov push push lea mov mov mov mov mov add mov add mov push mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov jne mov mov mov call mov call movzbl pushl and push push mov call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push pushl mov mov call mov lea add add mov mov push call mov add mov mov mov mov lea mov call mov lea call mov xor mov xor mov xor mov xor mov mov lea mov mov mov xor mov mov mov mov mov xor mov mov mov mov xor mov xor mov mov mov mov xor mov mov xor mov mov xor mov mov xor mov movq mov mov mov movq xor mov xor mov punpcklqdq mov mov xor mov movq mov xor mov mov mov mov movq mov mov lea mov punpcklqdq mov mov movl jmp data16 mov and mov mov and mov movups movups pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor mov movd movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov xor movd movd shr xor movd movd punpckldq movzbl xor movd punpckldq movq punpckldq movq punpcklqdq pxor pshufd movd pshufd movd mov mov shr movzbl movd pshufd mov mov shr movzbl xor mov shr xor movd movzbl xor movd mov movd shr movzbl movd mov shr movzbl xor mov shr xor movzbl xor movd shr movzbl mov shr movzbl mov xor movd shr xor mov movzbl xor mov shr movzbl mov shr movzbl mov movd mov xor movd movd punpckldq shr xor movd movzbl xor movd mov punpckldq movq punpckldq movq punpcklqdq movaps pxor pxor movups movaps pxor mov xor mov push movaps movups movaps movd xor psrldq movd movaps pushl or psrldq movd mov push or movd mov mov and movaps mov lea add mov mov add mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc add push adc add pushl adc add mov adc add mov mov adc mov mov xor mov mov mov mov mov mov xor mov mov xor xor mov mov mov add mov mov mov and mov add mov add mov push mov mov mov mov mov mov push mov mov mov mov mov call push pushl mov mov push pushl call push pushl mov push pushl mov call mov mov add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov mov xor add adc mov cmp ja jb cmp jae movl movl jmp xorps movlpd mov mov mov mov push pushl push pushl call add mov adc movaps add movaps adc add adc add mov adc mov add mov adc mov xor mov mov xor mov mov mov xor mov xor subl mov mov mov mov mov mov mov mov jne mov mov mov call mov lea call mov call lea call movzbl mov and push push push mov call movzbl lea add lea and push mov push push call add pop pop mov pop ret int3 push mov and sub lea push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea call movups lea movups add movups mov movups movups movups movups movups nopl aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movups movups lea movups movups movups movups movups movups sub jne pop pop mov pop ret int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp dec sub and mov arpl daa inc clc cmp adc shrb mov cmp (bad) ds add jnp xor enter cltd das cld adc jge ss pand sbb lods push cwtl adc jp cltd push xchg lahf lock push mov xchg cmp sub sbb cmp xchg inc mov inc add ja jbe xchg xorl call push mov sub mov (bad) repz lret or (bad) pop or std sar cmpsb scas rcll mov outsl lret int3 mov in xchg fisubr data16 mov lret adc outsl pop cs adcl std imul std mov insb cltd inc xor test sbb mov cltd lea in push adc popf loopne mov adc cmp repz lret ss xor ljmp jp stos mov test imul pop sub loopne mov push xchg xlat fistpll cmp ss fisubl sahf mov movsl xlat dec cmpsb sub popa out mov leave dec sbbl dec mov movsl xchg add movsb mov mov loope (bad) pusha fdivrs or mov mov xchg sub int3 cmp mov in add adc call jbe sub push shll cmpl ret xchg (bad) add sbb and lods add (bad) mov stc mov addr16 rcrl dec into nop sbb mov adc sbb ret or fist push jne out jmp lret in mov arpl in mov ljmp lods insl out add movsl fldt adc jns fcomp pop lods lds sub aad fmulp arpl loope cmp cmp push jmp jns rcrb xchg lock fiadd and push sahf fdivrs and mov fstpl (bad) cmp jns add xchg mov jne ljmp dec xchg push push sbb addr16 (bad) (bad) in add (bad) mov jne xchg scas in pop ljmp mov mov lcall xor sub scas adc (bad) loopne test sbb push mov icebp push int3 shr aas inc mov xor dec xchg sbb dec nop push xchg popf pop pand xlat insb out xor mov sub inc insl (bad) push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups lea movaps add movaps mov movaps movaps movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc lea aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps movups pxor aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc aesenc movaps sub jne movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea call movups add movups add movaps movaps movaps movaps movups movaps movups movaps movups movaps movups movaps movups movaps movups mov movaps nopl movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movaps lea movups movups movaps movups movaps movups movaps movups movaps movups movaps movups movups movaps sub jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push push push lea mov push lea mov push lea push lea push lea push lea push lea push lea push lea push lea lea call movups add movups add movups mov movups movaps movups movaps movups movaps movups movaps movups movaps nopl nopl movups movaps pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps movaps movups pxor call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps call movaps lea sub jne movaps movups movups movups movups movaps movups movaps movups movaps movups pop movups pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups movups lea mov movups lea movaps movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub movups mov movups lea movups lea movaps movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov lea movaps lea movups mov movaps movups call mov movaps movups mov movaps movups mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret push mov push push mov movups pshufd movd pshufd movups mov pslldq shr movaps movzbl pxor pslldq movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl movzbl or mov mov ror ror xor xor movd punpckldq movd movd punpckldq punpckldq movaps pxor pslldq pshufd pxor pxor movups call movaps pshufd pslldq movaps pslldq pxor movaps pxor pslldq pxor pop pxor pop movups pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 movups movups pslldq movaps pslldq pxor movaps pxor pslldq pxor aeskeygenassist pshufd pxor movups movaps pslldq movaps pslldq pxor movaps pxor pslldq aeskeygenassist pxor pshufd pxor movups ret pshufd movd push pshufd mov shr movzbl movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl movd shl movzbl or mov shr movzbl movd movzbl mov shr movzbl shl or mov shr movzbl shl movzbl or movzbl shl mov ror pop movzbl or mov movd ror movd punpckldq movd punpckldq punpckldq ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push call mov mov add push call add call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push push xor movb movsbl lea xor test je inc push push mov call add test je mov movzbl lea add sub add test je test je cmp ja mov test jne inc cmp jg mov jmp cmp jne test je cmp je inc xor movb mov movsbl test jne cmp jl mov mov pop pop pop mov xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov xorps movl lea movups mov cmp jne mov inc cmp je pop mov pop add ret push push xor mov mov movsbl test je lea mov push push inc movl call add test jne push push movl call add test jne cmp jne mov test jne cmp jne mov mov jmp cmpb je mov lea cmp ja mov add mov mov shr xor mov mov add xor mov jmp mov inc sub shl or mov cmp jg movsbl test jne test je lea lea cmp ja mov shr mov mov add mov test je mov sub lea cmp je cmp jl lea dec mov lea mov lea movb sub jne mov movups pop pop pop movups xor pop add ret cmp jne lea lea cmp ja mov mov call test jne mov jmp lea cmp jne mov movups pop pop pop movups xor pop add ret pop pop pop mov pop add ret int3 int3 int3 int3 int3 int3 int3 int3 jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov push push call mov cmp jne mov nopw inc cmpl mov je push push push call test jne jmp push call add test jne mov mov dec mov cmp je cmp jne cmpl je push call jmp push call xor cmp push sbb call neg je pushl call mov push call cmp je mov lea push call mov add add push call mov movl add mov mov mov mov mov mov mov mov cmpl mov jne mov lea mov mov or lock jne test jne lea push push push pushl call test je mov mov add push call jmp mov mov mov mov mov mov mov mov jmp pop pop pop pop ret call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov movl mov movl call mov test je push call push call xor movl movl cmp jbe nopl mov mov push lea call add test jne inc cmp jb movl pop ret push movl call mov push push push push call mov test jne call mov jmp push push push push call mov test jne call mov pushl call push call mov call test je call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov mov mov call mov mov mov mov lea push mov call cmpl mov movl mov mov mov mov mov jbe cmpl je push call push call pop pop ret push call xor cmp push sbb call neg je pushl call push call pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push lea push call mov lea cmp jne lea mov mov jmp mov mov push lea mov mov mov mov mov mov mov pop push call mov lea cmp je mov mov mov mov mov mov mov lea xor cmpl cmove push mov push call mov lea add cmp jne pop pop add ret int3 int3 int3 int3 mov add mov mov jmp mov add mov mov mov mov mov mov mov test je mov jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test jne mov pop ret mov push mov lea lea push movl movl mov mov mov push mov mov mov lea mov mov mov call add xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push and aam (bad) pop aam nop shrb sub lea add lret in imul (bad) mov and les mov mov dec mov mov movsl lock scas fiaddl insl aaa pop ljmp add outsb add cli xchg mov cmp lret add inc xchg aas out push xchg clc (bad) rcll and cmp xor ret mov aam fs push mov and bound pop inc test shrb sbb push xchg jnp and push push sub imul cmpsb mov sarb xor sub inc add ret fsubrp ljmp hlt into xor push cmp inc jecxz or dec jne mov (bad) mov pop sub or je mov ret mov test je and mov mov decl addl jne mov test jne test je and mov test je mov decl xor ret int3 int3 int3 int3 int3 int3 int3 int3 mov mov test je and mov test jne test je mov decl ret mov movl ret int3 int3 int3 int3 lods and mov mov imul hlt mov sbb and add test je xor pop ret movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov lea cmp je mov pop ret mov lea cmp je nopl testb je mov cmp jne push push push push call mov xor mov test jle nopl cmp je inc cmp jl cmp je mov mov movl sub mov jne movl call push mov call add call movl mov jmp mov cmp jl cltd sub mov sar cmp jge lea push push call add test je mov mov push call mov and movl cmp je mov incl mov mov and or mov mov mov mov mov mov mov decl orl mov test je lea push call add mov lea mov nopw mov test je cmp je push call add sub jne lea push call push call push call pushl call mov xor cmp pop pop cmove pop mov xor pop ret int3 jmp adc xchg push (bad) push xchg bound popa sar push adc xchg mov idivb mov jp daa add push mov movsb lods pusha and pop test enter pushf cmp mov cs push arpl arpl lret mov ss cs sub rorl stc outsl pop repz or daa sub fadds fsts push mov test jne pop pop pop pop add ret mov mov mov movl test je mov mov mov xor cmp cmovne mov add cmp ja jmp mov cmpl jne push mov call jmp mov cmpl jne push mov call jmp mov cmpl jne mov cmp jne mov test je and add mov jne test jne test je and mov test je mov decl mov mov test je mov call mov call push push call add jmp cmpl jl push lea push push push push call test jne mov mov mov mov test je push push call add jmp pushl call movl testl je mov mov call decl mov test je cmpl jne test jne or mov mov mov mov jmp mov cmpl jne addl jne mov test jne test je and mov test je mov decl mov mov movl mov mov mov mov mov test js push push push push pushl call test jne orl mov mov mov mov mov movl movl mov incl jmp call jmp call mov call push mov push call add decl mov test je cmpl jne mov test jne or mov mov mov mov jmp mov mov push call jmp mov mov push call jmp mov mov sub decl addl jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov mov test je mov xor test jns call mov call push push call jmp mov mov movb test je test jne or mov mov mov mov jmp mov test je push call jmp mov push lea push call cmp jne push mov push call add testl je push call add mov mov and cmp jne or mov mov mov mov jmp mov testl jne push mov mov call jmp lea cmp jne mov movb jmp lea cmp jne mov movb mov test jns cmpb je push call push mov movb call push jmp mov movzbl not and movzbl and je push push mov push call add mov mov movzbl movzbl or not test je mov mov call jmp mov test je test jne test jmp pushl mov mov call add mov mov test jne pop pop pop mov pop add ret nop push cmpsl adc jle adc andb fs cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc jle adc (bad) cmpsl adc andl adc andb sub in and sub push push call push call mov add push call call call call push movl call push push call test je push call lea push call test je mov mov call movsd divsd movsd jmp xorps movsd mov test je lea movl push lea movl push push call pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push and inc loopne cmp subl sbbl fnop adc mov lds fsubrs fimull or jbe or mov int3 nop adc ja repz sub jo xabort sti or inc insl cmp push sub mov jne cmp cmp mov xchg jcxz out jecxz pop jmp xchg or mov pop pushf sub add and adc lcall repnz cmp xor insl adc xchg or ss adc push std aam adc or mov mov fist popa push scas jnp stos cmp pop test in (bad) and pop adc or xlat pop adc mov fstpt xor jg loope jbe xor inc stc into hlt sub orl mov push cmp adc and movsl ret lods push shll add sbb xor shrb add cs mov mov fwait mov mov xorl push or outsl xor jb add pushf adc push mov inc loopne outsb int3 sbb aaa cmp inc test push mov sbb loopne mov adc jle scas dec je pop lcall mov jno in rorl insl jl stc (bad) out adc aam cs cmp psubq adc lahf pop cmp cmp mov push or or ss popa lcall (bad) dec fisttpl lret (bad) in xchg ss adc inc lds add sub sbbb cmpsl inc inc mov fmull lret leave int3 (bad) movsl movsb xor (bad) out not roll pop cmpl ja lea cmp je cmpl jne cmpl jne cmpl jne mov test je nopl mov mov test jne test je mov sub mov sbb js jg cmp jb mov ret test jg jl test jae xor ret or ret int3 int3 int3 int3 int3 int3 int3 push mov and sub push push mov xor push mov mov push movl add mov lea adc push lea mov push lea push pushl call mov xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor add rol push lea inc push lea mov push lea push pushl call mov test je xorps add movl mov test je mov mov mov mov jmp mov movsd ucomisd mov lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 push mov and sub push push mov xor push mov mov push add push adc mov lea push push lea mov push pushl movl call xorps test jne mov rol nopl call cmp jne test je movsd xorps ucomisd lahf test jp xorps movlpd mov mov jmp lea push call test jne xorps movlpd mov mov jmp mov mov call mulsd mulsd call mov mov cmp jb ja cmp jbe mov mov sub test je mov ror jmp xor push add rol push lea inc push push lea mov push pushl call test je xorps xor cmp jbe lea mov test je add movl mov test je mov mov mov mov jmp mov mov inc add cmp jb movsd ucomisd lahf test jp xorps movlpd mov mov mov mov pop pop pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop pop pop mov pop ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl ja lea cmp jne cmpl jne xor ret mov ret int3 int3 int3 int3 push jns cmp or jbe lods cwtl mov out jne adc xorb enter loopne cmp cmpl iret clc inc mov or outsl stc adcl cmp pop cmpsb in sub xor push mov sbb arpl mov sarb add lahf les xor mov iret mull imul xor xor pop shld sbb inc test jp rol insl pop lods jbe push sub or das das push or mov (bad) mov fucomi push aam or sub bound (bad) out lret dec cmp les adc loope aam add fwait push xchg mov popa fmul and out jns jnp cs ss mov (bad) test orb rclb jbe add or or loop push xor add lea push push sahf (bad) int3 es mov lret xchg and mov mov and hlt pop jmp cld test mov int out xchg sbb jae stos xchg push xor push and cmp add cmp add (bad) ss dec in es inc sub test pop inc cmp push inc xchg xchg adc mov push popl sti mov fldcw mov mov mov jb test mov sub add add dec daa (bad) pop mov mov fdecstp and test movb aaa sub sub (bad) cmc add mov cmpsl dec in out pop jmp imul ficompl movsb push jl aad cmp sub aam pop shl fwait outsl mov xchg test cli cmp pop and adc push jae add push es daa lods jmp (bad) fiaddl mov jo sbb fsubl lcall fsubs push mov jg es jae ss mov repz sbb bound inc mov adc jbe inc inc dec fsubr xchg mov ja push cli mov lret push les rsqrtps scas push outsl xchg inc sub sbb leave rcll pop sbb das add mov mov test cmc fs cs arpl test add in cmpl dec mov and fnstsw (bad) hlt icebp (bad) mov std pop arpl mov xor add xchg mov and add cltd jle jle cmc inc es aad jb (bad) pushl jle jnp aas inc mov mov adcl adc mov adc mov adc mov adc mov adc lea adc mov adc lea adc mov or cmp jne push push call mov xor test jle push mov nopl mov mov mov cmp je push push push push call mov inc cmp jl pop push call pop xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push push push lea movl push push mov mov push push push call mov mov test cmovne push push test je push push push call add push call add jmp push push call add push call add mov test je push call call call int3 int3 int3 int3 test jg mov ret cmp jg je dec cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je cmp jg je cmp je cmp jne mov ret mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp jg je sub je sub jne mov ret mov ret cmp jne mov ret cmp jg je add cmp ja movzbl jmp mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret mov ret cmp je mov ret mov ret xchg dec (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc mov adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc add add add add push add or push push or push push push push push push or or push push push push or push push push push push push push push push or push push push push push push push push push push push push or push push push push push push push push push push push push push or push push push push push push push push push push push push push push push push push push push push push push push push push wbinvd adc push push push push push push push push adc add push add push push push push push push push push push push push push push push push push push adc push push push push push push push push push or push push push add push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push or push adc push push push push push push push push push push push push push push push push push push push push adc pop add cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add add or or or add add or add or or or or or add or or or or or or or or or or or or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or or or mov mov adc (bad) cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc mov adc nop cmpsl adc nop cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc (bad) cmpsl adc nop cmpsl adc in mov cmovg test mov lret xchg cmc xor lods je icebp mov pop cmc ktestb pop mov push mov jae add cwtl movsb mov push sbb loope jo mov and in and lea push push pushl pushl pushl call mov pushl or push call or add test cmovs mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov xor push push mov movl mov mov mov push test jne mov and cmp jne or mov mov mov mov pop pop pop pop add ret mov mov test js cmp jbe mov add mov test jne mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test je mov test je mov lea mov add test jne mov sub sar shr cmp jne push lea push push call add test jne mov test jne mov or jmp mov cmp je cmp je lea nop mov add test jne mov sub sar shr add add mov add push mov call mov add mov test je mov lea push shr push pushl push pushl push call mov add xor push push push mov call xor mov test je lea push call mov add test je pushl push push call test je xor mov jmp mov call xor call pushl mov call add call mov test je mov mov lea mov add test jne mov sub sar lea mov add test jne sub sar je cmpw jne dec sub dec lea mov add push call add mov test je push lea mov add push push call mov xor add mov mov call mov or jmp mov mov shr jmp mov lea shr xor mov lea mov push call mov add mov dec cmp ja jmp push push jmp push push mov push push call add call push mov call add call movl mov call push mov call add call mov mov mov test je testb je mov mov test jne push lea xorps movups push movl mov push push shr and push push pushl pushl call test jne mov call test jg call jmp mov push push push push call add jmp push call mov call push mov push push push call add jmp call movzwl or mov lea mov movl mov test je mov mov mov mov mov movl pop pop pop pop add ret mov mov movl pop pop pop pop add ret test jne or mov mov mov mov pop pop pop pop add ret mov mov call mov mov call mov mov call nop popf xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc xchg cmpsl adc stc aas daa add jg je cmp jg je test je cmp jne mov ret xor ret mov ret cmp jne mov ret mov ret cmp jg je cmp je cmp jne mov ret mov ret mov ret cmp je jmp mov ret int3 push mov mov lea push push pushl movl pushl call mov call mov pop ret int3 int3 int3 int3 int3 sub push mov push add xor push push mov call push mov call add call cmpl mov mov jne movl jmp cmp jne mov test je mov add and add add mov test je push push push push push push push push call test je add and add mov test jne push call add mov test je mov mov test je mov mov lea mov mov mov mov mov mov mov mov mov lea mov movl lea mov movl lea mov add movl mov mov test je push pushl push call mov add mov mov mov add and add mov test je push push push push push push push push call push push push push push pushl push push call mov add and mov add mov test je mov mov jmp call mov call mov jmp mov mov jmp movl mov test je push call movl mov mov mov mov mov mov mov test je pushl pushl push call add pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns int3 and ds repnz ret jp xchg jns das (bad) mov decb aas push int sub ret movsl rcrb xor (bad) fs add jbe pushf cmp nop mov lods movsb push arpl (bad) rcrb mov fsubrl xchg inc mov fstps fisubr stc sub scas xchg sbb jb jnp inc mov inc mov sub (bad) mov mov sbb xchg test and mov adc xchg pusha setno xor add ret pop stos dec mov mov mov pop aad rclb imul add xor es mov sub mov cmc (bad) xor imul into sahf jbe popa fdivrl iret loop arpl cmpsb push jb cmp into pop out xor xchg test push jp popa xor adc loopne lock in js xor sub xchg movsb adc and inc (bad) ljmp fist jg or movsl lods les inc roll sbb movsl add mov and jp int sbb xlat pop mov sti or xlat adc stos movsb ja pop and gs mov xchg mov sti inc lahf inc inc cli mov fmull pop test iret inc sti repz push int3 or dec add adc or out or icebp insb outsb in cld sub xchg cmp out cmc mov imul pop mov mov imul aaa mulb xchg mov mov mov sbb int3 push insb and adc fs stos sarb dec into pushf pop sti sub rcrl movsl hlt insl dec int cmp mov and mov mov ja (bad) adc and push mov leave rcr adc faddp jae lods lret mov popf fnstcw cmpsl sahf lock mov (bad) (bad) cli (bad) stc jg bswap xlat mov es mov out and fimull dec lods ror pop pop shrl push scas les and arpl adc inc in aam addl aas push mov mov icebp sahf fadd cld loopne nop jl mov outsl fdivl push fidivr mov cwtl pusha add mov dec es xlat xlat sub test add sbb (bad) cltd xchg push lahf mov mov mov in push insl pop imul mov imul push sbb clc or xchg fcoml mov in sarb stc popf (bad) addr16 jmp cmp lret mov xchg xchg jno aas sub inc dec push stc jle mov mov ljmp mov sub mov inc cmovns push jmp sub mov pop in mov sar jg popa cmp lcall mov cmp lret and popf aas or push or or xchg inc insl (bad) xlat loop jle out cltd xor nop pop add push jno sub outsl (bad) xchg mov data16 adc xorl mov mov mov cmc pop (bad) and mov jg outsb cli or int3 fsubrs jle mov push cmp roll add incb pop lods lcall cmp das pop pusha xor mov mov push xchg sahf maskmovq notl bound mov inc mov sbb push scas cmp insb inc dec sbb jle cld mov dec ss fsubrl pop lods loope sub mov subb (bad) sbb scas cltd test cmp test cltd hlt push scas push (bad) and bound orl jmp sbb not sahf lahf int3 mov sbb (bad) jmp jae and sbb into lods xor clc movb rcrl sarb adc aad fildl insl mov pop (bad) xor or push dec fistp mov sbb jl push lods push pushl cmp sub cltd and dec int sbb test xchg push mov dec sub adc test rorb xor outsl cwtl popa in sbb dec dec pusha and push push inc aaa mov cltd aaa sub sbb into ror movsl jge les sbb arpl xor loopne stos xor lods jmp adc pop pop push into xchg lods sti sub leave dec fcompl mov aaa in dec xchg push (bad) pop repz fs ss sbbl pop dec jnp test hlt rcl xchg and cmp xchg and lcall cmpsl dec inc pop jge (bad) cmp jno cmp rcll fndisi(8087 mov dec lock mov xor sub and xor cmp gs mov xchg pop mov jecxz std insb (bad) enter cmc and inc fdivr stos lods pushw add mov push enter divl orb mov sbb sbb iret mov sub xchg add cmpsl adc sahf cmpsl adc lahf cmpsl adc mov cmpsl adc sahf cmpsl adc mov cmpsl adc popf cmpsl adc mov cmpsl adc pushf cmpsl adc popf cmpsl adc mov cmpsl adc lahf cmpsl adc int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je mov call movl andl mov test je and addl mov jne test jne test je and mov test je mov decl lea push mov push push call add pop ret int3 int3 int3 sub push push mov push mov push addl mov jne mov test jne test je and mov test je mov decl mov mov mov mov mov mov mov testl je push call mov mov mov lea add mov lea movl movl mov mov mov mov mov movl movl movl movl mov mov mov mov test je and mov test jne test je mov decl testl je mov test je push push push push push push call add mov mov test je push push call add decl mov test je cmpl jne test jne or mov mov mov mov pop pop pop pop add ret mov cmp jne pushl call jmp push call add movl movl jmp int3 int3 int3 int3 int3 int3 push mov and push mov push mov testl je cmpl jne mov cmp jne pushl call jmp push call add mov movl movl test je and addl mov jne mov and cmp jne and mov test je mov decl pushl mov pushl call add pop mov pop ret int3 int3 int3 push call pushl mov call add call mov pop ret int3 int3 push and lock (bad) mov jne into rclb push out mov push ret xchg mov sti fwait outsl cli mov fwait mov pop xlat repz inc add out mov add out cmp cmc cwtl mov push mov int or and lcall out mov ja cli sub fdivr adc mov cmp je ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push push mov movq mov movq call push mov call add call mov mov mov call push pushl call pop pop pop test je pushl call add xor add ret call int3 int3 int3 int3 int3 int3 push push push push mov mov call mov add test jne pop pop mov pop ret mov push push push push push push mov mov call add test jne call mov call push mov call add call mov cmp jbe pop pop mov pop ret mov xor push mov call movzbl jmp pop pop xor pop ret pop pop mov pop ret pop pop mov pop ret pop pop mov pop ret nopl inc xchg jle pop clc test sbb inc cmp add add add add add add add add add add add sub mov push mov push push push mov mov push mov call incl mov push call push call push push lea push push call push mov call mov dec mov cmp jne test jne mov jmp xor push call test je pushl call push call test je cmp je cmp jne pop pop pop mov pop add ret pop pop pop xor pop add ret call int3 push push push push call test jne call mov mov jmp xorps movl or movups mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push mov mov cmpb jne mov mov mov mov movb lea jmp cmpb jne mov mov mov mov mov movb lea movl movl movl movl push lea mov mov movl movl mov test je movl jmp test je movl testb je orl push lea xorps movups push movl mov push call test je mov call cmp je call test jg call jmp call movzwl or mov movl mov test je mov mov mov pop mov mov pop pop pop ret mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push push mov mov mov lea cmp jne mov mov mov movb jmp lea cmp jne mov mov mov movb mov push push lea test jns call cmp je cmpb je push mov movb call push jmp cmpl jb mov xor test je mov test movzbl mov cmovne mov mov or and movzbl movzbl cmove mov not and and testb je mov movb test je and mov test je mov decl test je movzbl push push mov push call add mov mov movzbl movzbl or not test je pop pop mov mov pop pop jmp mov test je test jne test jne test jne or mov mov mov mov pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and sub push mov push push mov testb je movl mov mov jmp movl testb je movl mov mov movl mov mov jmp movl movl lea movl push lea movl push lea push lea push push call mov cmp jne mov call test jg call jmp call movzwl or mov lea push mov push push pushl call test jne jmp xor test jle cmpl mov movzbl cmova cmpl ja cmpl jbe or lea movzbl push movl mov mov push push pushl call test je pop pop xor pop mov pop ret call mov mov call call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb push mov jne mov mov mov mov movb jmp cmpb jne mov mov mov mov movb push push lea push push call test jne push mov call test jg call jmp call movzwl or mov movl mov pop test je mov mov mov mov mov pop pop ret mov mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movb test jne and cmp je mov incl mov and or cmpb mov jne cmpb je mov mov mov movl movl movl movl mov movl movl call mov mov mov mov push and movl push and push cmove xor test mov lea push push push cmovne push push push push call test je cmp je mov call mov jmp mov jmp xor push call test je call cmp jne xor pop pop add ret and cmp je mov incl mov and or cmpb mov jne cmpb jne test jne or mov mov mov mov xor pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov test je push nop cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop movl ret mov pop movl ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop ret int3 sub push push push push push mov xor call mov xor test je mov cmp jl jg cmp ja lea cmp jb cmp jbe mov jmp mov mov test jne mov test je mov nopl cmp jne push lea push call testl jne test jne lea push mov push push pushl call test je mov mov test je or mov mov test je mov mov test je nop mov mov test jne jmp mov test je cmp jne mov jmp nopl cmp jne mov mov test jne mov test jne push call pop pop pop mov pop add ret call mov mov call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and mov sub je sub je sub jne lea call test je push call mov mov pop ret xor mov pop ret mov call mov pop ret mov call mov pop ret int3 lods and mov loop sbb and fwait cmp xlat mov nop int popl adc hlt out cmp xchg dec mov insl xchg xor ja cmc dec into fprem inc mov mov arpl and jns (bad) aas jno je mov cmp (bad) sub cmp push int sub fcom clc push jge aam jb push xor outsl inc repnz add ljmp sub les mov dec mov mov push cltd sbb mov add and in mov std lcall es into xor test std jb or jecxz pop lahf sub fstp and cli dec test and in add push or mov gs jl and cs mov mov idivb popa mov jns adc in fldt and xor push popf push sbb xchg or es mov jp fucomp inc fstps push (bad) lret adc enter in push sbb jp inc out cmp sub jae fwait and (bad) and mov loop adc lahf mov decb lea push and push pushl mov call add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push and mov test nop fldcw in add test test (bad) jmp cmp ljmp imul sub (bad) (bad) (bad) ss sti fsubrs inc mov mull or xlat or sub dec js or stos or imul scas jne stos decl push popf testb (bad) loopne jnp popa mov hlt push enter mov leave cmp xchg inc jmp inc insl movsl imul scas ja inc inc xor stos xchg daa (bad) sbb hlt fiaddl xor push xor leave push in popf hlt adc (bad) xchg or mov mov or mov mov sbb enter inc pop (bad) hlt xchg xchg and push loop imul mov sub pop sub sub add add jne xor ret and addl mov jne test jne test je and mov test je mov decl xor jmp int3 int3 int3 int3 int3 int3 movl mov test je mov mov mov mov mov ret mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push lea movl push push push push call cmp jne call pop ret xor pop ret int3 int3 int3 int3 push cmpl movl je push lea push push push push call cmp jne call pop ret xor pop ret sub push push mov movl mov cmpl je pop mov pop add ret push mov lea push push push call cmp jne call pop pop pop add ret push push push call test je push push pushl push call test jne call pop pop pop add ret cmpl mov cmove mov test je testl jne test jne push push call test je orl testl je push mov call add test jne testl je push lea movl push push push push call cmp jne call jmp mov call cmp je call pop pop pop add ret lea mov call test jne cmpl mov jne orl xor pop pop pop add ret int3 push push mov push push mov mov mov push test je cmpl je cmpl jne addl jne test jne test je and mov test je mov decl mov xor mov mov mov mov mov mov mov testb je mov jmp push pushl call cmp jne call mov mov mov test je mov call push push call add decl mov movl test je cmpl jne test jne or mov mov pop mov pop mov pop pop pop ret test je cmpl jne test jne pushl call orl movl mov mov mov test jne cmpl je test je xor nopw mov add mov cmp je push call movl mov test je push call movl mov add cmp jb mov call push mov call add call mov mov movl mov and cmp jne mov cmp je push call movl mov test je push call movl mov mov mov mov mov mov mov decl orl mov test je push call add mov decl pop pop pop pop pop ret int3 int3 int3 int3 push push push push mov push mov cmpl jne movzwl push push push call mov cmp jne pop pop pop pop add jmp movzwl mov push mov push push call mov add test je push call pop pop mov pop pop pop ret cmpw jne push lea movl push push push pushl call pushl push pushl call cmp jne call cmp jne mov orl xor pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 push jns popf mov outsb sbb out xchg stc push push cs cmp int lock ja into pop and xchg cmp adc fwait add cmc inc add lcall aas mov scas fisubl xchg mov adc stc sti inc fwait imul jo or outsl jl xchg mov xchg in push pop rclb inc mov aas lret fldl xor and js out test xchg movsl mov sbb fwait scas jg pop scas iret mov into movsb ja sbb mov pop jecxz adc push cli icebp and ljmp push xchg outsb jae mov mov in inc lock jbe mov xchg dec pusha notb mov adc ss outsb jno orb test mov or adc pop dec jo mov xchg lock insb pusha lret imul xlat call push add mov shll pop pusha jecxz dec outsb js out les iret xchg push loopne or out fdivrs dec mov dec out negb push mov pop pop pop loop int cld aad fnstcw ds xadd bound lock mov xor add inc jge lea cwtl popa sahf ficompl mov mov jnp test aad dec cmpsb ljmp lret aam xchg aas xchg lretw ss add cmp call pop xchg add loopne jge lea sub lahf pop xor movsb in xchg push (bad) (bad) loop movsb hlt insl sarb or xchg xchg adc pop push scas call ds pop pusha cmc icebp pop cmp in rcr andl fwait jle push push xchg sahf (bad) sbb jl pop ror xlat fwait xchg add sub jg push dec scas dec lret test xor fsts lds lahf dec insb aad jmp int3 mov dec out add lret mov push push push mov movl mov movl xorps lea lea movups movl orl movups movl testl je mov or mov push push lea movl push lea push push lea push pushl call mov test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl testl je cmpl lea jne push push push push pushl push call test jne call test jg call mov mov mov call pop pop pop pop add ret call movzwl mov or mov mov call pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push mov mov push mov mov test jne testl mov jne cmp jne mov jmp cmp jne mov push push mov call add test jne mov test jne cmpl push lea jne push push lea movl push push push push lea movl push movl movl movups push pushl movups call cmp jne movl mov pop pop pop pop add ret lea movl movl xorps push mov movl movups movl lea push mov push push pushl pushl pushl call test je mov test je mov incl lea mov test jne test jne or mov test je mov incl lea mov lea mov mov mov mov mov mov call pop pop pop xor pop add ret call cmp je call pop pop pop pop add ret mov incl lea mov test jne mov test jne or mov test je mov incl lea lea mov mov mov pop mov xor mov pop pop pop add ret call int3 int3 sub push mov push push mov mov push mov and mov cmpl jge test jne test jne and addl mov jne mov and cmp jne and mov test je mov decl testl je xor xor jmp mov mov mov mov mov call cmp mov cmove lea push mov call push mov push call add jmp test jne mov test je lea push push mov push call mov add cmp jb testl je mov xor nopl lea mov push mov push push mov call add cmp je cmp je push push lea mov push lea push push lea push pushl call cmp je mov test je lea push push mov push call mov add cmp jb testl jne jmp test je and addl mov jne mov and cmp jne and mov test je mov decl andl lea push movl movl push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl lea push push jmp call mov cmp jne lea push push jmp mov and addl mov jne mov and cmp jne and mov test je mov decl cmp mov cmove lea push mov call push jmp lea push push mov push call add mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push and mov test pop icebp mov xchg out movsb mov repz mov mov xchg push je cmp pop xor push jns dec ret loopne cmp jnp lds sub subl sarl stc cs cmp lods (bad) or and jae dec data16 jmp cmp rcr ret inc mov and pop dec sub rcl movsl andb adc or sbb sahf jo into and insb mov clc or cmp jecxz es sbb sbb outsb pop pop jge jecxz loopne mov push movsb fs mov imul inc mov test in in into mov sub cmpsb push sub stos lret xchg out (bad) testb mov hlt dec or mov adc sub testl mov cmovne mov mov test je push push lea push push lea push push push push push call test je or add ret mov push call test jne call add ret xor add ret int3 int3 int3 int3 push jns or xlat push dec sub in cmp mov adcl dec mov stc lock iret (bad) cmp mov add mov adc push insb jge call cmp insb (bad) (bad) cmp aas ds js cmovs mov dec sar xchg repz jl mov pop and fadds cwtl jmp clc hlt push (bad) or mov and pop inc adc test lea das rorl xchg inc inc shl pop sbb insl ret cmp bound mov (bad) fiaddl aam sbb divb dec outsb stc ja lea add xchg xlat fnsave add (bad) (bad) fnsave and mov push jno ficom and cs fnop stos movsl and ss jo push out sbb fildl adc cwtl pop call jg mov add int3 lcall pop je lods inc mov std xchg addr16 pop mov cmpsb mov inc or inc in cmp lods ja jecxz sub xlat int3 xor outsl xchg (bad) adcl and movsd sub ucomisd push mov lahf test jp xorps movlpd mov mov mov mov pop mov pop ret lea push call test je mov mov call mulsd mulsd call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push push mov mov mov test je push cmpl jne mov mov cmp jne mov test je cmpl jne movl mov movl movl jmp mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl je mov cmp jne mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test jne mov pop pop pop movl ret mov pop pop movl ret int3 push mov push mov test je cmpl jne cmp je mov cmp jne mov cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl je mov test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp cmpl jne movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov test je cmpl jne mov test je cmpl jne movl mov mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov mov jmp mov mov jmp mov mov jmp test je cmpl jne mov test je movl mov movl mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov mov mov movl mov test je movl mov mov mov test je mov mov mov mov test je mov cmp jne mov jmp mov jmp mov mov mov mov test je movl pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov lea lea mov movl movl mov mov mov mov xor mov movl movl movl movl pop ret int3 int3 int3 push mov and sub push push mov push mov mov test jne mov pop pop pop mov pop ret testb je mov call mov mov mov add mov adc cmp ja jb cmp jae or or mov mov mov mov mov mov mov test jne or mov test je mov incl mov lea mov mov mov mov mov addl adcl xor mov xor test je mov mov mov mov mov cmp jb ja cmp jb cmp ja jb cmp ja mov mov mov mov cmp jb ja cmp jb cmp jb ja cmp jbe mov mov mov mov jmp mov mov mov or test jne mov mov movl movl movl test je test jns mov mov mov call xor pop pop pop mov pop ret mov mov mov call xor pop pop pop mov pop ret mov mov mov call pop pop xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push and mov pop in bound xchg mov sub mov and xor out mov lcall xchg xor pop xchg lahf adc mov sbb ret imul push stos ja and movl into cmp nop xor pop add jno mov aaa cwtl pop mov fcoml xchg fstl (bad) loopne cmp ja repnz xchg push push sbb dec mov or ret and arpl nop movb insl and jge dec xchg je jmp sbb cmp mov std scas mov xcrypt-ecb cmpsl mov cmpl je jl push mov and push push mov cmpl jne mov pop mov pop ret mov or je mov call mov mov push push push push pushl push call add xor pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov and push push mov xor mov test je mov mov test jne test je mov cmp ja jb mov cmp ja mov call cmpl je mov or je mov call mov mov push push push push pushl push call add mov push call mov add xor test je mov mov test jne test jne pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 sub push push push push mov movl push xorps movl mov movl lea movups lea movl orl push lea push lea push push lea push pushl mov call test jne mov test je or mov mov mov incl movl mov test je mov mov mov mov mov pop pop pop pop add ret mov mov pop pop pop pop add ret call cmp je mov call test jg call jmp call movzwl or mov movl mov test je mov mov mov mov mov incl pop pop pop pop add ret mov mov incl pop pop pop pop add ret orl incl pop pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 sub push push mov push mov mov push mov and mov mov test jns mov call mov cmp je cmp je cmp je test je mov call testl je xor xor jmp mov mov mov mov push lea mov push push call push jmp test je test jne sar lea and push push lea push pushl jmp test je lea movl push mov push push movl call add cmpl je cmpl je push lea push push call add movl lea movl push push push lea push lea push lea push push lea push pushl call cmp je push lea push lea push pushl jmp call mov cmp jne push lea push lea push pushl jmp cmp jne push push lea push push jmp cmp je cmp je mov call jmp push push lea push push mov push call add mov mov and cmp jne mov mov call mov mov dec mov test je test jne test jne or mov mov mov mov pop pop pop pop add ret int3 int3 int3 int3 push push mov mov test jne pop mov pop ret push push push push push push push push push call mov test jne call pop pop mov pop jmp lea push push call mov add mov test jne pop pop pop mov pop ret push push push push push push push push call mov test jne mov call push mov call add call movl mov call pop pop pop mov pop jmp mov pop pop pop movb xor pop ret int3 int3 int3 int3 int3 push and add cmp shr in push cld subl cmp xor sbb fdivrl out adc out push sbb sahf adc or subl movsl mov jge loop mov cmp or es ljmp xchg movsb sbb push jns xchg cmp adc push sbb pop int3 int mov or mov and addr16 cmp jmp or mov sbb call fdivrl and jnp adc out adc clc (bad) dec test cmp scas pop sbb dec call or gs mov mov cmpsl lret dec lret add rol stos xchg xor out jbe test or pop adc stos lcall inc in enter cmp ja insb (bad) stos or cmp es icebp in cmpsb test push stos xchg movsl push ss loope cmpsl out and inc popf xchg rorl or xchg test int jo sub inc int3 lods ds sub rcll push fs sbb adcl insb cmp pcmpgtw ja lds cs outsb gs push jno xlat xor test sub sub stc cmpsl cmpsl push ja inc jg xor je inc lret xor push iret jg add adc cli in rorl sbb (bad) sti aam int jecxz sub mov push mov shrb mov mov fnstenv dec xchg and adc push aam add mov flds fisub dec mov adc adc add loope xchg cmpsb lds add jnp cld (bad) cmpl mov test lock stc mov ds int3 (bad) push jne jns pop push jmp sbb jp sub lea push push push push call test jne xorps mov movups push mov call mov mov mov call test jne push call add test jne push push push call mov mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je push push push call mov cmp je lea movl push lea push push push push call cmp je testl mov mov cmove push mov call cmp jne jmp call mov call test je pop pop add ret mov mov call call call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call call mov mov call int3 int3 int3 lods mov jo push sbb inc push mov lods pusha push in in xchg cld subl inc rolb repnz insb dec xchg int cmp loopne cmp outsb cmp bnd fcompl out mov cltd pusha test or prefetchnta pop aas cmp dec scas test ds addr16 pop fcomps pop ret scas lods sbb mov and hlt xor cli or outsb js xchg and pop inc mov xor nop int sub daa stos sbb pop aaa pusha pop jge cmpsl leave test pop jmp (bad) pop and cmp adc jnp add push pop sbb cmp and cli test xor data16 mov push cltd fistp pop cmpsl mov xor repnz dec cmpsb insb sahf out rcl or mov adc aam pop lock fs jle test aam test loope push add hlt icebp nop jmp (bad) mov insb jae cli sub sbbb push mov nop mov pop sarb (bad) xchg xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs adc xlat cmpsl adc fsubs adc or or or or or or add or or add add or or or or or or or or or or or or or or or or or or add or or or or or or or or or or or adc fsubs adc fsubs adc xlat cmpsl adc xlat cmpsl adc xlat cmpsl adc fsubs or or or or or or add add add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or push add add or nop cmp cmpsl adc fsubs adc fsubs adc int3 int3 int3 int3 int3 int3 int3 sub push mov mov push mov push push test je mov mov mov mov and and cmove xor test cmove jmp push push push push lea call mov test je xor push pushl movl push push push push push push push pushl call mov test jne cmp jne push push call cmp jne call push mov call push call or pop pop pop pop add ret mov push call test je cmp je mov call mov jmp mov jmp xor push call neg pop sbb mov pop pop pop add ret int3 int3 push jns cmpsb or xor enter dec cmpsl pop mov aam push cli fildl jae mov pop cli mov add lods int xchg movsb leave inc mov sbb in rol negb cld scas adc xlat mov xchg addl jge in jbe dec xor iret and aam lock outsb shlb cmp adc hlt insb iret adc jo fisubr clc sti out pop push or jo dec or add js or pop enter decb mov sbb push je es sub push xchg add mov ds pop or sub mov cltd mov pop mov or arpl cmp pop pusha push push (bad) scas lahf (bad) jmp out sub xchg int3 lahf xor sub mov in test xchg les mov add push in scas (bad) test nop mov jbe lcall fstpl and subl inc aas xchg outsb add out test in test shlb outsb mov push mov push mov movsb aad pop bound mov arpl xchg mov and mov mov mov popa sub iret mov mov lret mov fldcw jno lods cmpsb outsb add cmp mov xchg outsl testb imul int iret addb jecxz mov inc imul sahf in imul jnp xchg imul mov adc sub pop clc sub lds test lcall jecxz ficompl push and (bad) mov mov divb rorb push cmp data16 js movsl pop call xchg mov mov xchg fnstcw test and xchg push out loop adc into ficom pop nop insb xor or pushf mov (bad) pop movsl add cltd bnd lea lds pop dec inc mov cmp shr and dec rep int loop jl pop in cmp iret or insb mov adc pop and int popf dec jbe in mov push popf (bad) fild je not arpl (bad) mov xor mov outsb mov dec mov push xchg rcll lds inc jb cmp lahf push insb xor sub adc out leave inc test les sbb and push add mov xchg pusha lret mov out xlat andb and loopne pushf adc int3 mov repz and lods mov outsl jnp add xchg dec shrb sbb mov test stc (bad) std mov add adc push (bad) int pmullw outsb daa es mov stos popf mov jg ss jle cmp popf sub and inc cltd aad jle adc jno push cmp daa inc loopne sbb mov push in mov sub cld test inc add push insb jbe je das jb xor out das sbb insb sbb ret dec fdivp dec dec mov dec ja ljmp mov and push jo sbb (bad) ret push jb leave dec rorb mov and out inc in pop insl and sub dec pop sbb out pop push (bad) jbe push (bad) mov mov pop lock xchg inc das (bad) lea or out add and pop dec push jge and pop mov jge xor mov push pop in push mov cmc cmp mov repz iret xchg fsubs sub mov jmp insb outsl mov (bad) sbb add pop out lods push add (bad) mov push jo xchg mov nop popf sub push jmp inc mov test insl adc add in loop jne mov data16 out shlb inc jb cmc xor jnp popf dec push cltd mov lock jle jo adc and push dec mov xor sbbl and stos inc jo mov or dec xchg mov mov jae jbe cs cmpsb test xor ret xchg lea pop pop sbb adc inc popa arpl jb sbb (bad) sub je xorb or in mov ret push iret or lds sub pushf (bad) repnz enter inc (bad) cmp pop arpl sti mov flds arpl sub push (bad) loopne mov out (bad) das in dec imul push inc int hlt inc lret imul push lret scas jbe in cld cmp adc out std pop inc in mov mov add stc cmp jo lret sub and je dec cmc (bad) adc iret mov fdivl pushf push adc (bad) enter daa pushf das shr test lods pop xchg sti inc adc lahf ret jne mov mov cmpsb aas mov jecxz sub dec push insl and push clc inc sub in pop hlt xchg or ljmp pop push cmpsb and je das imul xor lock call cmp gs shrb mov ja test mov enter icebp jb or cmp int xchg add dec jp cltd sti std stc or add jp (bad) mov fiadd push sbb in dec sarl push and mov int3 in andl lahf xor jo imul aaa lds or mov std lcall stos push aam xchg mov ljmp sarl inc int3 out and sbbl cmp mov into popf jo or rcrl dec pop sti xchg xchg sub adc xor mov sub pop sahf push add aaa fiadd cwtl lret into cmp push sbb in or popa sub in insl dec jl push xchg fcomps jo xchg lea adc and inc jnp aam sub add sti rol fidivl jns call adc arpl in cmp in jno dec add xchg xor ret sbb xchg cmp lds dec sti jnp xchg add loopne or icebp mov outsb incb int3 divb repz fs or outsl ficompl in movb cmp push (bad) or fnstenv push mov mov insl push mov je out imul cmpsb mov jg push fcoml les test push sahf xchg jo jo pop dec out mov mov les int3 cmpsl daa hlt icebp or jbe je lahf jo xor mov push out repnz push mov insl or jmp cmp mov js std movsl dec adc (bad) lret aad inc pop sub pop mov sbb xchg mov and iret bnd add or leave (bad) fstpl xchg sbb add aad ds and enter jmp or jmp pushf rorl mov lods lds cwtl push sbb cmpsl ds fsubrl mov cld inc pusha dec inc icebp popa fwait dec clc enter jecxz int adc call icebp (bad) pop xchg inc fmuls or push push push addr16 rorl int3 adc fdivl lret scas add push inc test cwtl scas add mov jbe imul xor repz lahf dec aaa lcall fadd rolb fadds (bad) or lret int stos adc xchg int3 mov push aas test cmc mov cmp pop jg jae mov inc push jge cmp arpl adc add test call mov fcmovnu imul arpl lahf cwtl fdivrl repz cmpsl into mov pop (bad) cmp sub lock stc in call pop cwtl mov enter add lock std adc mov fldt pop sahf dec imul faddl (bad) loope stos dec in ret mov repnz in loop insb or jb nop les cmp inc dec aam daa push jns enter loope std adc push (bad) pop cmp aas cmp pop lcall mov ret xchg sahf xchg incl (bad) jbe xchg jmp adc out dec xchg mov bound icebp cmc push mov sub roll std xor (bad) (bad) xor dec jge xchg movsl xchg sub (bad) adc pusha repz and push pop sti outsb repnz jb push lds xchg fbstp push stc jo mov imul dec in or paddusw inc fcmovnb dec mov mov fcompl rcll add or mov les pop or (bad) jp mov pop jge jle cmp mov movsb scas (bad) into je ds in push mov pop push push ret dec xchg test js adc leave insb dec jle sbb call mov jge add mov pop call into aas and test inc mov scas jmp lea ret mov ljmp mov (bad) cmp mov cld sbb mov inc icebp mov mov xor lret sub lret jle xorl jl sti add (bad) stos (bad) jno ja enter sbb fildl xchg jno sub gs addl pop in push adc jns loopne pop rcrb loopne mov dec mov stc add dec mov into adc add cld cwtl and loopne pop push jmp bound nop xchg mov (bad) ja cmp xorl pop inc sbb pop mov fwait negl xchg pop sahf stos lret inc pop aam imul xchg add xchg fistl inc lea jp and inc mov jne xor in mov sub test fsub cmp sbb fstl or mov lahf jbe inc fnstcw adc mov movsl pop mov mov and push jns imulb cmpsl pop mov add xchg xor bound out cmpsl jne cmc or fisub dec call clc sahf lods es test test or push (bad) mov inc jno or lock adc iret xchg loope rorl ja sub and add dec fwait dec repz add mov nop cs dec out mov sbb cmc lea sbb aas lahf xor cmp sbb mov addr16 mov dec or jnp dec inc lods push dec ja or pop push xchg mov xor add call cmp dec mov adc aad pop out std mov push mov aad sti dec mov mov pop mov pop pop cld bound sbbb xor mov fs push cld adc jbe in and cmpsb imul cmp adc push mul mov std in push adc inc (bad) out icebp daa loopne inc insb pop or sub pusha fldt mov sub nop mov xor push mov rorb push fbld iret out add jno (bad) xor aas sbb fistpll dec insb (bad) mov and je into jecxz scas repnz inc in (bad) mov mov mov inc pop ss jne ja push jns sbb outsl xchg xor cmp data16 int call cmp or in xchg data16 inc inc repz imul pop jno xor push cmp push sub dec loope dec vcvtdq2pd push push dec mov shrl daa and push mov dec and (bad) cmpsl jl outsl pop jb xchg testb mov push gs sbb pop (bad) xchg jmp cmp mov xchg lret pushf pop aas jo popa add arpl push insl loop nop insl adc scas data16 cmp out test and or jmp bound (bad) int3 cld insb adc out cli mov cmp call and cmp inc mov dec adc pop dec jmp mov and notl add inc mov stos mov push loopne xor inc mov jnp outsl stos xor in pop in or mov icebp adc iret mov xor into mov mov sub clc je jp cli scas mov inc shlb ss scas out shll imul sbb test adc adc sbb mov sub add hlt sahf push cmp fst add sahf aaa popa rcrb sub sub imul in hlt add and push dec rorb das test sbb out inc nop orl xor ss loope rorb hlt sub pop outsl insl mov lods inc push mov dec jmp mov mov add popf adc sti cmpsl mov aam fistpll cmpsb inc cwtl out pop and sarl (bad) and lea adc lods roll ss pop mov mov push xor mov jl outsb ret call addl scas daa add xor jle cmpl and stos pop (bad) fs stos cmp mov hlt inc cmp leave cmp aam adc test sbb jg dec pushf pop test jecxz outsb bound sub mov cmc inc mov mov mov movsb insb inc out adc adc cmp hlt mov orb pop jno sub lods test and pop fnstenv stc fwait outsb sahf (bad) mov mov dec in out add mov rcll subl and cld pop cmp mov addr16 hlt test mov add mov sbb ret ret sbb lcall adc cmp mov inc inc or stos jnp lret add pop add sub xchg push sub cmp lock imul lods and inc add add xchg rcr cmc nop inc adc out mov push ljmp imul push ljmp idiv cmp sbb mov imul pop maxps push cmpsl or mov rcrb sbb cmp aad test cwtl jecxz lods in movsb pop xchg in jb dec sbb adc cmpl cmp fstpt ss mov inc mov aad bound ja push enter push push pop into mov pop cmp dec add fwait xor dec push icebp popf rcll pop fs or jae xchg sbb cmp fsub xor popf inc inc mov adc idivb out and shrl imul (bad) lock std and pushf mov dec repz adc test cli (bad) sbb nop and (bad) pusha xchg lcall shlb pop add push mov rolb push sbbl add dec (bad) test adcb adc and mov lock sahf (bad) leave mov cmp ret xor add roll push (bad) cmp push pop int3 (bad) fcom jmp dec pusha fsubrs pop cmpsl cld (bad) sbb (bad) inc xchg mov xlat cwtl fisttpll clc mov loopne cmp pop pop sbb mov leave mov xor pop ret shrl push add push sub (bad) jmp adc adc jmp dec adc in test push sbb sti and rorl scas cmc mov cmpsl pop inc push xchg and clc inc dec in sahf mov fldenv and jo xchg cmp lds sub push adc mov mov scas inc and mov out hlt sarb sbb lock mov das push nop push mov insb daa lods stc or and scas push lahf call dec xor repz lea scas into pop imulb pop cmp jno popa into outsb lea lea cmp cld cs int3 stos xchg into pop out jl ss lahf loope lock pop outsb sarb adc shll adc jmp jnp xor imul frstor fnstsw cmp mov (bad) jl mov mov mov adc addr16 inc cs jnp xchg push mov daa mov jl xchg xchg mov push loope out adc sub imul mov xchg ja int jne mov rol in in insb movsb adc adc fstl scas or mov cmc std je popf inc dec sbb (bad) cmc mov loop pop adc clc inc (bad) into outsl sub jnp std addr16 stos ja pop mov mov ficoml fimull stc lock mov jno inc (bad) cmp pusha mov xacquire and pop pop nop insb not dec imul lods or addb or and ljmp (bad) mov push add mov cltd js sbb lcall nop add cli mov cmpsb dec (bad) sti aas ret std pop andps daa lcall nop lea out sub notl int xor dec jno mov and pop rcrl add int3 popa hlt (bad) adc or addr16 mov xor push pop mov jns test dec leave or dec mov das sbb gs xchg ret lcall out cmc lcall add fdivs jle fisttpll out or jb (bad) out pop divl decl xchg adc pop pop in pop js jae in pop jbe fs ret add and sub jmp out or push in dec mov stc ljmp or xor and stc xchg or add out addr16 aam test or fprem1 stos jno (bad) icebp test ss mov push xchg lods fsubrl xor xchg fmuls movsb pop pop or insb sbbb test call ret mov inc test push add fsubrs mov js (bad) xor add and (bad) shrb icebp popa mov loope imul push jmp fistp mov dec addl lds xor xchg repz xor outsl fsubrp adc xor stos int3 jne rcl out pushw call inc not jecxz sub sub dec ss pop and outsb or add dec pop cmp mov inc jmp loopne std xchg movsb mov enter cltd ss (bad) sti pop xchg xchg mov jo pop jp inc add push push sar ret adc jp (bad) push daa or cmc nop loopne lock lods sub inc aaa inc cmc out adc lea ficoml scas or (bad) xor pop fs test movsb add jg mov clc cltd add cmp jl mov imull (bad) loope add fwait xchg loope mov int rcr outsb (bad) jge arpl cmpsb cmp cmp out in pop sbb pop inc aam jno addl aad xor sub data16 scas jno jmp stc aad es rol pop (bad) jb mov pop gs sub out aas dec add dec cmp push outsb mov xchg lret pop into inc cmp push push arpl das inc es shlb test loope mov int3 xor sbb push out lods mov cmp sbb loope mov lods addr16 hlt icebp aad aaa test xchg sub sbb stc mov outsb cmp push js xchg aad mov pop aad push push jge ret inc pop ss fcompl or nop and xor mov dec rcll cld test adc sbb mov xchg adc cmc lret ss lea (bad) aad mov pop xrelease and stc cli scas push leave cmp pop pop or dec fisubrl fidivr ret sub dec mov cmp sbb outsb add push push mov cmp mov jle cmp mov push loopne clc mov adc push mov popf imul das andl cmp arpl dec ja mov cvtpi2ps lret (bad) icebp out inc (bad) mov xor xchg mov lcall movl mov push call add push call add push mov push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub movl mov push call add push call add push mov push push mov call mov mov mov mov push mov call mov or mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl lea call movl mov mov mov mov mov mov mov mov push call add add push call add push lea call mov push call add push call add push mov push lea call mov push lea call lea push mov call mov or mov movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov sub mov mov push mov push mov push call add mov add mov pop ret int3 push mov mov mov mov mov cmp jle push call add cmpl jne mov call push call add push push push call add test jne call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push push call add mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp adc push loopne cmp inc out ficompl enter movsl dec dec push inc jmp bound cmp adc sbbl mov nop push and inc fdiv push dec sbb fdivl ret sahf mov lods and scas lods pop jb xorl fs xor push sti fbld (bad) rorl out sub jne adc dec lock imul ljmp xchg and arpl xor or pop mov call fcmovne in scas xchg adc data16 jno in push xlat das sub aad inc sub out (bad) push jb mov lret into dec mov fbld cli sbb jmp orl pusha mov pop jo fcmovbe xor xchg mov push pop adc stos gs fs cmp cwtl shrb leave icebp xchg popf sub fsubs es mov (bad) and insb lea enter test adc mov insb outsl cmp out mov add mov push hlt adc std andl int3 adc jbe push loop lock xor lods fistpl push sub (bad) and mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add push mov add push mov push call add mov mov mov jmp mov mov mov push mov push mov push call add mov push mov push mov add push call add mov sub add push mov add push mov add add push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov call sub cmp jae call mov add mov mov mov mov mov push mov call mov mov mov mov mov push push mov add push call add mov mov call mov mov mov mov mov mov mov mov cmpl jb mov mov mov mov add push mov push mov push call add push mov add push mov push call add mov mov mov jmp mov add push mov push mov push call add mov mov mov push push call add mov lea mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov xor mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub movl push lea call movl mov mov mov call mov mov push mov call mov cmpl je jmp cmpl je mov mov jmp mov push lea push call add cmp jne lea call push lea push call jmp mov mov mov mov mov mov mov mov mov mov call mov push call add mov mov movl lea call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov movl mov movl mov movl mov movl movl mov call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl mov movb mov mov pop ret int3 int3 push mov push mov mov movl xor mov mov mov mov pop ret push jns (bad) mov mov mov ja mov mov dec mov jp jo xchg cmp pop insl xchg in xchg mov pop cmc stc inc mov arpl push clc add adc cmpsl andl imul insl cmp cmp fsubp or sti sub jmp in jns dec xchg nop sub fadds jae push xchg in lock mov (bad) mov dec jo mov jge mov and popa sub cmp push dec mov mov cwtl test stos lcall enter scas mov loope mov jb mov scas out pop add in push push mov push mov sub mov mov mov mov mov mov movl mov movl mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov mov mov mov mov mov add push mov add call mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov add mov movl mov mov mov mov mov movl mov movl mov call movl mov mov mov mov pop ret int3 int3 movl mov ret int3 int3 int3 int3 int3 int3 int3 movl mov movl ret movl mov movl ret push mov mov movl movl mov test je mov test je mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push push push pushl mov lea mov call mov mov lea movl call test jne push lea call mov lea push push mov call lea movb push lea call lea call lea push lea call lea call lea call lea mov push lea movl xorps movb push movq call add movl lea call mov mov mov mov mov mov pop movl pop mov pop mov pop ret int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns enter mov mov std ljmp leave cmp inc cmp insl xchg lods test adc clc ss sub clc push pop pusha xorps mov movq movl movl ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add mov pop pop ret int3 int3 int3 push jns iret and loopne mov pop mov mov sbb aam mov xchg dec push xchg gs inc mov popl pushf push cld cmpsl (bad) test mov aad sub pop push mov push push mov push mov sub mov push push push pushl mov mov mov lea mov call lea movl push push push mov call lea call mov mov pop movl pop pop mov mov pop ret int3 int3 int3 push mov push mov xorps lea push movl movq mov add push call add movl mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov xorps push mov mov lea mov lea push movl push movq movb call add movl mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov call movl mov mov mov add call movzbl test je mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov cmp je mov mov mov mov mov mov mov call mov mov mov add call mov mov movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xorps push mov lea push movl movq lea push call movl add mov mov mov mov mov movl pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov cmpl je mov mov push call add mov movl mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov movl mov call movb mov call mov call movl mov mov mov pop ret int3 int3 int3 int3 push mov push push mov push mov push mov movl mov add call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov push mov push call add lea call lea call lea call lea call lea call lea call mov call mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov cmpl je mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov test je mov call test je mov mov push call mov mov mov pop ret int3 int3 push jns (bad) mov mov mov ja mov pop push std dec shlb dec (bad) lock sbb test fimull ja stc fsub adcl movsb push out (bad) or mov and jle pop push mov sub mov mov mov mov cmp je xor je mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov cmpl jne push lea call cmpl jne mov inc mov mov lea call mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov sub mov mov shr and mov mov mov xor mov div mov mov mov mov mov mov lea mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movl mov push lea call mov mov mov mov neg add mov lea push mov call mov mov mov mov or mov lea call mov mov pop ret int3 push mov push mov mov movl test jle pushl call jmp jns pushl call add pushl call add movl testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov movl je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov testb push mov je push push call add mov pop pop ret int3 int3 push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov push mov lea movl push call add testb je push push call add mov pop pop ret push mov mov test je mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov push push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov add push mov push mov push call add mov mov add mov push mov push mov push call add mov movl mov pop ret int3 int3 int3 movsl mov test push push dec sub pop mov aam push cli fildl jae mov in sub mov mov mov mov mov movb mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov lea push mov add push call add mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov movl test je cmpl jne push push call mov add mov movl test je mov mov test jne mov jmp add call push lea mov call lea movb call lea movb call lea movb call lea movb call lea movb call lea movb call mov movb test jne push lea call push lea push call push lea push call lea movl push movl movl call add movups movups jmp xor testb mov pop je lea call mov mov pop mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lods iret pop jns adc mov int aam imul mov push mov cmp jae mov mov test jne jmp xor cmpb je call cmp jae mov mov pop pop ret xor pop pop ret int3 push jns cmp adc in cmp xchg push adc test fnstenv cmp mov hlt movsb inc xchg aam mov xchg pop test push jns push ret out test or dec push sbb loope jo mov and jle pop push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov shr sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov shr mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov add mov mov mov mov jmp movl mov mov mov mov mov mov mov add mov mov mov sub cmp jb cmpl jae mov mov mov mov movl mov mov mov sub cmp jae mov call mov shl mov jmp mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov add mov mov mov add mov push push mov push call add mov mov mov lea mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov cmp ja mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov sub mov lea mov mov mov mov mov mov sub push push mov push call add mov mov lea mov mov mov mov mov mov sub push push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov lea mov mov mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov lea mov mov mov mov mov mov sub push push mov push call add mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov add mov pop ret int3 int3 int3 int3 int3 lock ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov add mov call mov movzbl test je mov mov mov add call mov mov and je mov mov mov mov mov mov mov mov mov mov call mov cmpl jne mov mov mov add mov mov test je mov call mov mov or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call jmp mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push lea sub mov mov mov mov mov mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov mov mov mov add mov mov mov mov cmpl jbe mov sub mov mov mov mov mov mov add mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov push push mov push call add mov mov mov mov mov add mov mov mov mov lea mov mov mov jmp mov mov mov mov mov add mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl add mov pop ret int3 int3 int3 int3 int3 push mov push mov push call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov push mov push mov call mov pop ret int3 int3 int3 push mov push mov mov push call add push call add push mov push mov call mov pop ret int3 push mov push push mov push mov sub mov movl lea push mov call mov mov mov movl push lea push mov call mov mov mov movb mov call mov movb lea call movl lea call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov cmpl je mov mov mov jmp mov add mov mov mov pop ret int3 int3 int3 int3 int3 push mov mov sub and mov mov and je cmpb jne lea push push test jne test je call add push push jmp call add push push jmp mov pop ret push push call call add push push lea call push lea push call int3 push mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push jns lret dec data16 mov pop rol fcoml xchg add (bad) lds mov xor pushf mov or and imul sbb loope jo mov and jle pop push mov lea push movzbl push call add pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov xor push mov sub push xor cmp cmova test je lea mov push movzbl push call mov inc mov add inc cmp jne pop mov pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov sub push push pushl call mov add pop ret int3 push mov sub mov mov mov mov mov mov mov mov cmpl jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov call mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 or ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push mov mov cmp jne mov cmp jne mov pop pop ret xor pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov lea sub push pushl push call mov mov mov mov cmp jne mov cmp jne mov pop mov pop ret xor pop mov pop ret int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov cmpl je mov push lea call movl mov mov movzbl test je mov mov mov mov mov mov mov mov mov mov call cmp jne mov mov mov add mov mov test je mov call or mov mov cmpl jne mov or mov jmp mov mov push mov push mov call movl call movzbl test jne mov call lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov push push push mov mov push mov mov movl mov mov call mov mov mov pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl sete ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jae call mov mov mov mov mov sub cmp ja mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov mov add mov mov add cmp jbe mov add cmp jbe mov mov jmp mov cmp ja movl jmp mov sub mov mov sub add push mov push mov add push call add mov push mov push mov push call add mov sub push mov add add push mov add push call add mov jmp xor mov mov push mov push mov push movzbl push mov push mov call mov pop ret push mov mov push push push mov movl call mov mov mov mov mov mov mov mov pop ret int3 push mov mov push cmp jne mov push call mov pop pop ret push call mov add push call mov pop pop ret int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub push mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov lea mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov movl mov add call movl xor and je push mov push call add mov mov mov mov mov mov mov add mov mov mov sub mov mov mov cmpl jne mov mov mov mov mov add mov mov movl mov mov pop mov pop ret int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov cmp jae mov add mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push mov add push call add movb lea push mov mov lea push call add jmp xor mov movzbl push movzbl push push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 push lea sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add shr mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov lea mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub mov shr and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div mov mov lea mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub push mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add xor mov div test jne mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov add mov cmp ja push mov call mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov sub mov and mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov add mov mov mov mov mov mov mov sub and mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov push push push call add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov xor mov div imul mov add mov mov mov mov mov mov push push call add mov movl mov mov mov push mov call mov movl mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov pop add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov cmp jbe jmp mov mov cmp jne jmp mov mov cmp jae mov mov mov xor mov movzbl push mov sub push mov call mov mov mov jmp cmpl jae mov cmpl jb movl jmp movl movzbl test je mov call mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov cmp ja mov push mov call jmp movzbl push mov sub push mov call mov pop ret int3 int3 push mov sub mov mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov mov mov mov mov add mov mov mov cmp jae mov call jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov mov pop ret int3 int3 int3 int3 int3 int3 push jns xor sbb (bad) push mov (bad) stc mov mov test cmovne ret int3 int3 mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov call lea push push pushl push pushl call pushl pushl call add pop ret int3 int3 int3 int3 int3 int3 push jns (bad) mov call mov ja mov or aaa xchg xor loope xlat xchg dec lret add jnp (bad) jl jbe mov lret addr16 sbb arpl and cmp dec push hlt inc iret es ljmp cltd and push call mov ret movl jmp movl movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov call mov mov movb mov movb movl mov mov mov add mov mov mov mov mov mov mov mov push mov push mov push call add jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov movzbl push mov mov push mov mov push mov call mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov add push mov call mov mov mov mov mov mov mov mov mov movsbl test je mov mov movl movzbl push mov push mov mov push mov call mov mov mov mov movzbl push mov push mov mov push mov call mov mov mov mov jmp mov push mov call push push call mov ret movl jmp movl mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov movl mov mov mov mov mov mov mov mov mov add mov mov sub mov cmp ja mov push mov call push call mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp movzbl test je mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov cmp jne mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov movsbl test jne mov mov movb mov movb mov mov mov movb mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov push mov call mov mov movb mov mov mov movb mov mov mov push mov call jmp mov mov mov mov mov mov mov mov mov mov mov movb mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov movl movb movl mov mov mov mov mov mov mov add mov mov mov mov cmpl jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov push push mov push mov call mov jmp jmp xor je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov mov push mov push mov push push mov push mov call mov jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test jne mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov lea call mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test jne mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov push mov add call mov movzbl test jne mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp movb jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov mov mov mov mov mov mov mov mov mov add mov mov mov add mov mov mov mov mov mov push mov call mov movzbl test je mov mov mov mov mov mov mov mov mov mov mov push mov push mov mov mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov mov mov push mov add call mov movzbl test je mov mov lea call lea push mov call mov mov mov cmp jne movl jmp movl movzbl test jne mov mov mov mov mov mov mov add push mov call mov movzbl test je mov mov mov mov movsbl test je mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov mov mov mov mov push mov push mov push push mov push mov call mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov mov push mov push movzbl push lea push mov call mov mov mov mov mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov movl mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movb mov movsbl test jne mov mov movzbl test je mov mov mov mov mov push mov add call mov movzbl test jne movl jmp movl mov mov jmp mov mov mov mov mov add push mov call mov mov mov movzbl test je mov mov mov jmp mov mov mov mov mov jmp xor je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov mov mov mov mov mov mov mov mov push mov push lea call movzbl test jne jmp lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je movb mov mov mov push mov push mov push push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp lea call mov mov mov mov mov mov mov push mov add call mov movzbl test je movb mov mov mov push mov push mov push movzbl push lea push mov call mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call movb lea mov mov mov mov mov lea mov mov mov mov mov mov jmp jmp mov push mov call push push call mov ret movl jmp movl mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov push mov add call movzbl test je mov mov mov jmp mov mov mov mov mov jmp mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov xor mov mov mov push mov movzbl push mov push mov push mov push mov push call add mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push push call add mov movl mov mov mov push mov call movb mov add push mov add call movb mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push call lea mov mov push mov push push mov push call add mov pop ret int3 int3 int3 int3 push mov sub mov mov mov lea mov mov mov mov mov mov mov mov mov movl mov movl mov mov mov mov mov mov mov mov mov call mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl mov movl xor mov mov mov movzbl push mov push mov call mov mov mov mov pop ret int3 int3 push mov push push mov push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call movl mov mov mov mov mov mov mov mov mov mov push mov call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov add call mov call mov pop ret int3 int3 push mov sub mov mov mov movsbl test je jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov mov mov mov pop ret push mov sub mov mov mov movsbl test je mov mov mov mov mov jmp mov mov mov movsbl test jne mov mov mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov jmp mov mov mov mov mov movsbl test jne mov mov mov cmp jne mov mov mov jmp mov mov movsbl test je jmp mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov push mov mov and je push mov mov push push mov push call mov and je mov mov lea push mov sub push call add mov sub jmp mov call mov and je push mov push call add mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov push mov mov call mov and je push mov push call add mov mov pop ret int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov mov add mov mov mov mov push push call add mov lea mov mov mov mov mov jmp push mov push mov call push push call mov ret movl jmp movl mov movb mov movb mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov mov push push push call add mov movl mov mov mov mov mov mov mov mov mov mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov push push call add mov mov mov mov mov mov mov jmp dec iret pop cld test dec outsb sub xchg mov xchg add cmp cmp les xchg fimull add and inc leave inc aad mov jbe push clc in clc cmp or dec push sbb loope jo mov and in sub mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov jmp mov mov mov movsbl test jne mov mov push mov call mov mov mov mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add jmp mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov add mov mov add mov push push mov push call add mov pop ret int3 int3 int3 int3 int3 int3 int3 push jns cmp adc loopne cmp mov jmp enter sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov push sub push push push mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov mov mov mov mov push push mov push call add mov movl mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov xor mov mov mov mov mov mov mov mov push mov push mov push mov push call add jmp mov push mov push mov call mov call push push call mov ret movl jmp movl mov push mov push mov push mov call mov mov pop pop pop mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov pop ret int3 int3 int3 int3 int3 push mov sub mov lea push mov call mov mov lea push mov call mov mov mov push mov push lea push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov mov mov cmpl je mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov add mov mov cmp je movl mov call movl xor and je push mov push call add jmp mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub mov cltd mov idiv mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov push mov push call add mov mov mov mov mov mov mov movl mov mov mov mov mov add mov mov movl mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret push mov sub mov mov mov mov mov mov add mov mov mov mov mov mov mov mov mov mov sub cltd mov idiv mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov add mov mov movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push call add mov pop ret int3 push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 push mov sub mov lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je lea push mov call mov mov mov cmp jne movl jmp movl movzbl test je mov call mov push mov call mov jmp jmp mov cmp jne movl jmp movl movzbl test jne movl jmp movl movzbl test je mov mov lea call mov mov mov push lea push mov call jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov lea call mov mov mov mov movsbl test je mov mov mov jmp mov mov movsbl test je mov mov mov jmp mov mov mov mov mov mov cmp jne mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov cmp jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov movsbl test je mov mov jmp mov mov mov mov movsbl test jne mov mov mov jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov mov mov mov mov mov mov mov cmp jne mov mov jmp mov mov mov mov movsbl test jne mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov mov jmp mov mov mov cmp jne mov mov mov mov jmp mov mov mov mov mov mov mov mov mov add mov mov add mov mov mov mov mov mov mov mov mov mov mov mov lea mov mov mov mov mov mov movsbl cmp jne jmp mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp je mov movsbl cmp jne mov mov cmp jne mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov mov mov mov movsbl test jne mov movb mov movb mov push mov call mov mov mov mov movsbl test je mov mov jmp mov mov movsbl cmp jne mov mov movsbl cmp jne mov movb mov mov jmp mov mov movsbl cmp jne mov mov movb mov movb mov push mov call mov mov mov mov mov mov mov mov movb mov mov movb mov push mov call jmp jmp mov movb mov mov mov mov mov mov mov add mov mov add call mov call xor and je push mov push call add push push mov push call add mov mov mov mov mov mov mov add mov mov cmpl jbe mov mov mov mov mov mov mov mov mov add mov mov mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 int3 int3 int3 push jns cmp adc sub xor lock subl xchg clc mov push xchg pusha xchg into leave xchg dec lret or jnp push mov push in push call leave pusha jle dec lcall cmc popa mov adc inc aad and push xchg mov daa fnsave sbb cmp in fbstp sarb pop cmp and pop test ret dec mov sbb pop xor enter push ficom pop or jae adc test dec cli in sbb insl jecxz add mov sub mov mov mov mov mov mov mov mov mov mov push mov call mov mov mov mov mov push mov call mov mov pop ret int3 int3 int3 push mov sub mov mov call cmp jbe mov mov mov mov movl call mov mov cmp jae lea mov jmp lea mov mov mov mov mov mov mov mov mov cmp jbe call mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov pushl push pushl pushl pushl call pushl pushl call or add test cmovs pop ret push mov sub mov mov mov mov mov mov mov pushl mov call push pushl call add mov pop ret push mov push push mov push mov push sub push push push mov andl pushl call pop xor mov mov mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call mov mov mov cmp jl jg mov cmp jbe mov mov mov add call sub sbb mov mov jmp xorps movlpd mov mov mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov pushl pushl pushl mov mov mov call mov mov mov cmp jne mov cmp je mov or mov cmpl jne jmp mov sub mov sbb mov mov cmpl jl jg cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret push mov push push mov push mov push sub push push push mov andl mov mov mov add call mov mov cmpl jl jg cmpl jbe mov mov mov add call cmp jbe mov mov mov add call sub mov jmp andl mov mov pushl lea call andl mov mov movzbl test jne mov or mov jmp movb mov mov mov add call mov mov and cmp je jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp cmpl jne mov mov mov mov mov mov mov xor push push pushl mov mov mov call mov mov mov xor mov mov mov cmp jne mov cmp je mov or mov jmp jmp mov dec mov cmpl jbe mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov mov call mov lea push lea push call pop pop movzbl test je mov or mov jmp jmp push push mov mov mov add call jmp push push mov mov mov add call mov ret andl jmp andl push pushl mov mov mov add call mov mov orl lea call mov mov mov pop pop pop mov pop ret int3 int3 int3 push mov mov mov mov movl pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov call testb je push push call add mov pop pop ret push mov push push mov push mov sub mov mov mov mov mov mov mov jmp mov add mov mov cmp je andl mov call orl xor and je push pushl call pop pop jmp mov mov mov pop ret push mov push push mov mov mov mov dec mov mov mov mov mov mov mov mov mov mov inc mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pushl mov call mov mov pop ret push mov push push mov push mov sub mov mov mov mov mov mov call mov mov mov mov mov add mov mov mov mov mov mov mov mov pushl mov pushl mov call mov mov mov mov mov mov mov mov mov mov mov add mov mov mov mov mov mov mov mov pop ret push mov sub mov mov mov mov mov mov mov mov cmpl jb movl jmp andl movzbl test je mov mov mov mov mov pop ret push jns cmp adc loopne cmp inc (bad) add std mov mov pop inc xor lods gs xchg sahf dec leave pop fsincos add push ljmp fcmovbe movsl xchg into xchg loope mov and imul cmpl je mov call or mov mov cmpl jne mov or mov jmp mov mov pushl pushl mov call mov pop ret push mov sub mov mov mov cmpl je mov mov mov mov jmp andl mov cltd mov mov cmpl jl jg cmpl jbe mov call mov mov mov mov pushl call pop mov jmp lea push call pop push mov mov mov call mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 push mov mov mov push mov mov mov mov pop pop ret int3 int3 int3 int3 int3 mov mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp mov aas (bad) mov push mov (bad) xchg mov jecxz (bad) cs sarb cltd push sub leave dec mov add mov data16 xor cli or ret imul clc ds push pop icebp pop in out movsb jecxz lret add mov es rol aam adc or or cmc or and cmp pop mov repnz xchg clc imulb jg jbe jecxz aaa ret es sbb cwtl push pop jge xchg ret gs scas addr16 test repz lds dec jne xorb not out pop loope pop aam or enter pop lea xchg and rcrb daa (bad) fstp rclb jecxz dec sti push push xchg cs lods aaa call xchg mov cs jg mov mov push leave mov and into fwait sub push sahf push lods lret xchg test shll cmp jecxz out add jne dec pop mov mov rcr dec rcr cwtl adc incl add adc mov xchg pop daa stc push jb cmpsl in iret jl push pop js or mov movb jne adcl cmpsb jmp or rcl mov cmp lea lret or les jle mov ljmp (bad) fbstp or ljmp push add dec sub into subl insb push mov and (bad) ljmp in pop in sub cmp in sbb (bad) dec push loopne xlat mov cmpsl push push mov push ja data16 icebp mov or sbb xchg jno (bad) push aas repnz lea std mov pop lret fnstsw call mov stos and add fdivrl fadds inc aas mov dec push mov mov leave lret xor push mov mov (bad) push cltd xchg mov in (bad) xchg pop cli or pop cmpsb cmp scas adc cmp xor loopne jge maskmovq idivl out dec lds dec mov adc inc mov pushf cli jnp push mov sub pop sahf dec jne cmp outsl xchg or (bad) fldcw add ljmp popa dec imul mov or xchg in mov popa add dec stos mov inc mov mov pop pop in xor xchg adc movsl (bad) xchg cmp out (bad) fwait andl ja icebp cli push iret or arpl fwait (bad) push sbb rcr pop xor jnp aaa not (bad) bound icebp dec xchg add jg jle (bad) push pop mov mov insb jb jg lock push ss out jns fsts aam lahf inc mov push lret xor push mov popa (bad) ja stos xchg andl sub js pop arpl xor xor sar es inc dec idiv jno shr int xor les cmc inc dec fcmovnu add mov mov arpl (bad) mov inc dec xchg push sahf ds mov loop andl icebp mov lret mov cwtl mov or jae cld (bad) je les push jmp xor or cmp fadd mov inc push movsl loope in or in push dec xchg push pop lret enter scas pop (bad) bnd ss ljmp pop jns dec mov mov push or push js fistpl aad sbb les jle pop mov add or (bad) add and push sbb mov fs subl incl mov xor out fnstenv or lds pop sbb xchg movb sub lods or add in cmc and dec das sub repz jo xchg jge dec push lea or cmpsl jns xchg cmp (bad) cmp daa push loope sbb rcrb pop pop dec daa xchg mov xchg shrb fimul and xchg cli mov and mov pop inc sub shrl in adc jo (bad) repz push les in add addl sbb mov hlt and inc mov dec mov push rorb les loopne xor in fdivr lcall cmpsb lcall cmpsb push push scas iret push int pusha inc popa pop mov fcmovnb add jno pop jae pop aam xchg fstl movsb jge enter pop push (bad) loopne into add mov mov add aam jno jae out faddp adc cmpsb mov pusha test dec pop test xor pushf je push out movsb adcl inc sbb pop push mov xchg inc fldenv pusha mov sbb sub mov pop adc add pushf cmp cmc pop movsb iret ret push cld out (bad) jg sbb mov dec push repz inc cltd sbb sti test jnp cmc nop mov add and stos and xchg aam hlt and inc lret outsl jne cmpsb (bad) std ss out inc outsb add pusha sti rclb loope mov cmp rcr xchg jns nop push ja inc push pusha sbb into mov adc incb push xchg out sbb xchg push sti xchg mov mov add data16 sbb popf or xor sarb incl mov sbb cli or push xchg fwait int test les pcmpeqb push add inc pop repz inc mov aaa adc out (bad) or or and push xor mov out (bad) inc imul roll out and mov sub popa inc addl fmuls pop mov mov ret lods in jne cwtl outsl xor add in subl arpl idivb into lods fsubr mov setae sub jp mov or jbe dec cmp in testl xor or lahf (bad) test popf dec in jecxz fisubrl lret jle and addr16 mov xorb dec cltd xchg scas pop push fxtract leave xor push data16 dec mov mov sbb or (bad) mov jne mov xchg mov fwait int lahf mov stc stc push adc or sbb pop pop mov ficompl sub pop mov dec fdivrl data16 xor in rcrb aam pop xor test push cmc mov jo repnz test cld push lahf repnz sarl pusha jl xchg cmp xchg int3 add (bad) idivb mov inc xchg xchg stos outsl xor fiadd (bad) dec sbb out fidiv and cmpsl and nop nop cmp mul xchg nopl loop out into mov int3 pop in lock sti gs inc adc or fisttpll push xchg sub test bound xchg pop incl dec out leave xor mov test dec or daa iret rcrl mov std es int ss xchg inc (bad) mov fisubrl (bad) pop push xchg or int clc and das mov push test push xchg mov ja cmp xchg and pop popa push sbb dec dec lret jb pop lcall pushf cmp cld stos pop inc pop outsb hlt ret mov loop cmp and jae mov std push push mov mov jnp out dec cmp pop stc div xadd cwtl add sub pop cmp push pop xor movsl loope aaa add pop mov cmp bound dec or call repnz popf cs stc ljmp sbb or (bad) arpl pushf lods nop add cmp loope ficom jp pop jmp repnz cmpsl mov pop cmc xor sub loope jl scas xchg pop ss iret xchg cmp stc into pop mov adc stos sbb dec sub inc inc int iret sti mov and repz bound xor mov jecxz lea xchg dec fldcw xor pop jno jmp jae out nop std dec repz (bad) mov push sbb pop cmp bound xchg out cs jmp in jge repnz push lahf stc push cmp pop sbb aam movsl mov enter pop stos pop add stos jmp into icebp ljmp imul das popa mov popa push sbb mov popa dec jnp push movsb jb rorl xchg mov (bad) jbe into enter movsb sbb hlt add push cmc enter inc sti mov xchg dec scas fisubrl mov in test jmp test lahf pushf nop sub idivb rcr cmc mov add je leave leave fcmovnb leave add mov aas mov cmpsb cmpsl push loopne into push dec cmc and cmpsb and mov and stc pop fbstp or xchg rcrl imul mov fnstenv push adc ret lret push int3 rcrb pop mov inc mov xor dec xchg adc std xchg mov clc jne in aad in nop in cmc or aas movsl push decl pop mov gs dec pop mov push mov xor outsb jge inc out bound push xor lcall addr16 mov hlt test int or mov mov pop adc insl cmpsl aas addr16 popa cmpsl pop sahf fwait sub dec orb push popa mov pop dec rol sarl xlat mov cwtl lret dec sbb adc shlb sarb lods es dec push loop or lret repnz push mov ret mov jnp sub sbb lea (bad) not bndldx daa in (bad) xor popa test push sub cmp jo push (bad) dec dec dec cmp add test add cmp push jbe pop leave dec xlat stc test pop pusha cmp mov pop fbstp lea in and je jo mov scas repnz xchg or popa iret lds mov movsl dec mov sub cmc inc dec je scas shl inc jmp xchg cmp xor in imul cmpsl mov xchg pop dec and sbb jecxz insb leave add int3 or mov cmc test mov stc out jae or push in scas cld jp push sbb out dec dec mov pop out xchg cmc jecxz add into push lock idivl add sbb (bad) leave mov fwait mov mov dec jle push in jno (bad) lret pop lret xor xor je mov xchg and movsl test cli add sbb dec cmpsb cmc lahf cmp in loopne bound lods (bad) aaa aam enter (bad) call mov mov lods push daa rorb (bad) aaa test xor inc cmpsl push int3 xor test sub loope movsb cmp in cmc dec movsl push int3 jle insl mov flds xor scas cmp aaa cmp (bad) pusha pop in jmp loopne les mov pop jo iret push fldl jb movsb outsb call mov pop pushf mov lock imul js movsl sub dec dec adc lea nop fistl adc jge ljmp mov packuswb test ret out pop cwtl and je fs das aaa outsl mov xchg outsb fisub arpl sub addr16 call mov cmp inc push pusha fiaddl dec loopne arpl jp dec add rol cli mov (bad) xor (bad) jecxz or push lds out sub bound and inc out sbb and mov mov xchg push out daa mov pop sbb pop lcall sbb aam in jmp cmp daa add daa mov fwait int3 sub jne rcll popf fcomip mov add int3 jae jns (bad) test cwtl aam in stos bound sbb sarb xchg movsl dec and aad add test repnz (bad) push inc (bad) push or leave incl out cmc jle cmpl js aaa ret sbb add (bad) scas add popa dec add or mov rorl test push push mov jo ret mov or dec and add xchg cmp pop sahf push cmp sub les cwtl lock repnz js mov pop push adc lods lds fdivrp jl or je mov sub (bad) mov in inc fdivrs dec cmp dec mov pop lods sub sub sahf lods daa (bad) and (bad) ficom jnp syscall and pop cmp pop lods adc sub in push out mov ret test cwtl mov sti adc sub out aaa mov push fwait push dec push (bad) dec enter popa or push sbb pop ljmp push sub push cs push aam sbb out mov jns inc int3 pop ss (bad) addr16 mov sti lret dec xchg arpl gs and xor xor rcr ja loope sbb cs aad mov push mov inc sub lahf std rcl or into xchg jge mov mov scas sub insl data16 hlt push test aaa inc inc jle sbb mov fs push fsts (bad) push cli out jns cmc aam out mov mov fcompl mov cltd popa fisttp scas xchg in push lahf rol add lods jo in xchg xlat mov mov xchg jne xor (bad) adc sarl xor xor lods add sub scas pop add xlat insl push ret xlat jle add and aaa pop fsub xor sbb cmpsb mov (bad) lret jmp stos fldl cli mov nop dec aam jnp imul fs aaa add cmp mov repnz add adc mov mov sub inc notl ss outsl xchg scas int3 imul lret push mov enter bound fimul fiadd jbe aad mov mov lret ljmp lock mov sub out push mov stos ljmp lock (bad) lcall cmp aaa aaa mov push jmp loope std je addr16 sbb xchg shl rclb or (bad) fisubrl inc dec sbb sbb popa cmp adc sbb (bad) cltd sbb ljmp inc mov aad bound negl xchg push std call (bad) jg add mov add adc lret cwtl dec aas mov pop jo or push and dec push inc mov idivb cmp jecxz aas cli xchg xlat pop cmpsb jnp inc push into push cmpsl adc pop add mov mov and cmp dec adc leave inc std lods mov cmpsb mov xchg fwait bound mov or (bad) inc loop mov jp mov push mov sub (bad) std push sbb test faddl and lods jecxz adc fs adc pop int3 inc jns mov jo push push sti pop add mov pop inc adc cld cmp loope sbb mov xchg into lret (bad) xchg test sub aad mov and push xor in outsl inc mov sbb add nop sub imul mov cwtl push scas jmp stos stos cwtl push pushf daa lea xchg outsb mov pop xchg dec adc in jg cwtl mov daa xchg outsl xor dec mov dec pusha mov fdivrs out push mov cmpsl (bad) outsb sbb les mov jmp lods inc push (bad) stos dec sbb mov xor mov rorb push mov or addl out hlt mov dec fcmovb stos sbb jnp testb setge js,pn or dec push push (bad) test mov or nop arpl aad push lcall int (bad) mov cs stos mov pop push lods icebp jae push mov sbb aaa in xchg and push loopne mov jbe pop mov aam test dec push and jecxz repz pop mov jno sub dec lcall mov mov imul adc xchg jle js push sub push sti dec (bad) xor jnp add nop dec sbb add and imul in imul cmp jns icebp js dec push lock and lea fsubrs mull and stc rclb (bad) (bad) xchg ret jmp or leave (bad) pop es xor pop and pop pop scas ljmp ljmp xchg popa xlat dec int mov lret rolb clc fwait (bad) jno (bad) fnstenv frstor ja mov adc lahf stc mov icebp mov sbb jl cmp push out out cmp les add in mov dec sarl adc inc jb push lods prefetcht2 jae dec mov cmp fcoms mov sub (bad) adc xor scas jne stos rclb arpl jmp xor dec cwtl and mov (bad) pop cld aad and out imul inc jg inc iret jge hlt jo jbe ss dec and js cmp inc cltd mov dec leave arpl dec les mov stos xchg ret push data16 idivl cs into loope fs lahf pop aad xchg in adc mov negb xor dec (bad) dec call push add mov mov movsl mov fnstsw lea inc push xchg mov int3 xor and mov inc fsubrs and mov faddl inc push push test sbb in int3 rcl imul xor mov fabs push ljmp insb out inc clc jecxz push cli cli call xchg daa xor mov add outsb dec cmp dec and mov fwait pop in inc add jle cmc push sbb leave adc shld cmp stc pop mov cmp mov loope ds or pop in push push xor sbb fidiv mov pop mov fidivrl mov sti jne sahf (bad) pop jecxz and hlt sahf insl add cmp jb or (bad) lock imul icebp xchg frstor mov add mov inc mov addr16 adc pop outsb (bad) enter pop add xlat mov mulb xor movl cmp pop mov mov outsl lahf xor test adc fwait jp into mov pop mov jo sahf test lret cmp cwtl mov call and icebp push fidivrl sbb aam mov push aam stos or insl daa in push dec xor data16 test and mov xchg pushf scas dec ljmp insb mov sbb sbb (bad) stos fistpl aad pop dec inc add jne jnp jg mov fnstcw repz jecxz imulw push arpl fisub mov fstps jmp int jnp jmp ds movsb in sub pop cli lret jge in add inc jo ljmp jmp xchg cmp sbb and mov aaa lret pop mov std mov shrb aaa pop repnz stos mov clc loope jns jg jmp ret cmp shrl and jno ret or jl out or repz scas mov push jmp push pop test nop mov inc (bad) xchg and test pop push insb sub inc in mov jns loopne lods ret arpl (bad) or in pushf mov pop in pop or sbbl (bad) xor pop insl imul movsl mov mov dec cmc pop in sbb sub mov jb out lods fdivrs clc cld out or mov fidivl inc (bad) stc loop push aad (bad) pop add ds dec cs xlat pop pop idivb pop imul pusha mov arpl daa (bad) (bad) mov cmp into lock push mov xchg xchg mov shrl cmpb mov jl aam daa enter cmc sbb inc imul add cwtl xor jmp cli imul xlat jecxz lds push push xor push push ficompl mov aaa cmp pop jne out adc jno mov insl mov add enter shll mov push cmp xchg test or sub divl test lock sub jo push mov ja jge mov stos data16 mov popf cmpsb and mov lock sahf inc test cltd movsl xchg or gs outsl das mov jb fadd sti hlt cmp in sbb test dec sbb cltd aaa cmp sbb pop jmp popa jmp lock cmc mov int3 or or mov dec mov or inc mov push jae dec mov adc pop inc cmp sarb or popf mov clc inc mov jmp cmpsb fisttp fdivr mov jnp pop ljmp and or pop hlt scas pop push icebp test sbb outsb lahf cmpps and pusha push mov mov dec icebp cmp fstl popa lret pusha negl pop pop fsub dec cli mov (bad) and jg jns pop ds ret jge fnop dec clc lods cmp mov cmp mov xchg lret push fwait inc inc xchg mov mov lret pop add cmp dec aam aaa cmp addr16 jle inc jne dec or ss mov lods mov stos inc add daa loopne scas push test pusha mov fistl or cmp and lret mov in mov dec push loope pop lds push andl jmp sub dec and cld imul pusha fistpl in mov arpl ja shll insl (bad) jp xchg lods fwait sbb xor lret cmpsb mov lret or pop inc fs pop mov push ss rdpmc jae shr and and mov add or in mov jb push push push negb push cmp repnz call mov stos out (bad) xor xchg sbb std lret jnp pop enter mov aad lea and push and ja in mov hlt stc mov adc pop cs mov das test and aam (bad) out jge xor mov lea mov mov ss sub or push out in outsb call jo xor daa push cs addl lock ss popa mov mov (bad) call pop fucompp pop ss add mov sti lret add daa mov cs jge xor push sti jmp pop xchg mov add inc das sub sub pushf loopne inc xor rcl xchg enter popf fisubrl out sbb adc cld push fnstenv pushf in mov loop jge test jl inc push (bad) out jnp pop add sbb lea sub push hlt xchg sbb sub (bad) int3 test jb ret adc icebp fs cs xchg sbb push pop aad repz push and (bad) pop mov dec sbb (bad) inc xor adc pop pop cmpsl insb cmp jp jae xchg (bad) dec mov scas push es sahf add das test ljmp mov and (bad) lock jb xor std cld xor jb mov fnstcw repnz hlt jo or or gs mov dec daa adc or cmp subl mov cwtl cmp (bad) push and adc test adc adc out cltd popf dec scas xor fstpt push add (bad) pushf scas push jnp xor dec or or stc lock out mov dec jbe cmp aad pushf push popa fsub rcrl fdivrl test push pop dec cli mov pop push pop push cld sub lds pop (bad) out aas aas adc xor lcall ret jl dec daa (bad) ja stos js inc dec fld push int je mov ret js outsb pusha mov push and (bad) std xchg lods clc sarb int and icebp popa inc mov (bad) mov cwtl fdivs ss and jns,pt movsb bound xchg jae js (bad) pop xor fcomps cmp (bad) rorb xchg or adc cmp stos repnz or ja dec leave sbb pop adc adc xor aad test xchg shr xlat sub and sbb mov pop or rclb ficoml add xchg repnz xchg sbb inc and stos jno inc mov pop sbb ret addr16 ror mov inc and jecxz repnz pop mov call or fimull lods sub imul insb pop jmp and push adc sbb shlb xorl pop add and nop loopne lahf and mov mov loop mov rcl ja scas mov fs out fimul pushl ljmp cmp jae jge enter nop mov loopne popf push adc cmp fsubrl rcrb mull cmpsl lods shr mov cs and popf in mov mov cmp jl in inc lret out out mov aam stos jp xchg sub clc pop jne push cmpsb dec jnp pop inc scas mov lret std repnz rol leave in repnz aas insl int3 pop xchg outsl sub outsl rol cld leave dec adc pop fwait xor pop or lret (bad) jo push js xchg jl data16 (bad) pop insl scas repz jo sub and (bad) or ror jmp hlt ljmp pop imul ret add sbb and repnz jp test test fprem fs cld pop stos es (bad) test mov xor dec lcall cmp in bts fbstp and cmp push scas push xor dec (bad) or pop shll sbb xchg sub xor xor add push stc mov push and ds sbb roll mov push xchg sahf sbb mov test pop bound pop add scas das pop pop bound mov push addr16 in (bad) xor mov push ret dec mov aam pop inc or mov scas mov push push enter fcmovnbe mov mov stos ret pop loop mov sahf xchg lock subl fwait gs add dec mov jge fs divl movsl lret leave dec xchg inc push sbb shlb mov insb inc push cli stc inc sbb mov cmp test lock xor jp pop insl loope mov jo pusha cwtl cmp mov dec dec std adc in test shr andl scas movsl js rclb xor add pop aad mov xor mov (bad) xor sub lea mov fcoms loopne xor bound mov mov push dec es add loop js add pop mov and add sub inc out lock ja and adc ja mov dec pushf push popa or loope inc sub pop aaa dec cmp lcall xor cmp out adc pop xchg mov fdivl out or test cmp fwait xorb and pushf jbe xchg cmp insl jno sbb push jecxz xor insl cmp lret or loopne xchg pop insl jp and shrl mov inc fldl mov mov xor imul data16 xchg sub repnz (bad) and inc push jae scas mov mov mov imul xchg in repz out inc inc and mov hlt xchg and or movb push notl dec push cwtl cwtl sbb (bad) xchg (bad) aam int xor pop mov push adc push test inc (bad) cltd scas roll inc scas dec pop lds mov jnp mov es test nop mov xchg add fdivl push mov push ficoml hlt (bad) es jnp retw or stos add inc xor add movsb gs push mov icebp adc add and (bad) mov mov sub rorl push xchg push jae cld out xor lcall xlat xchg das cmp xor adc fwait ljmp in or jp mov dec jno movsb jno (bad) dec loope jno fsubr out sub push mov stos lds or movsl pusha jns push sub loopne loope xor mov push fnop sub push jl push mov mov inc lock add jp cmp mov es cmc sub xor push and enter ret lock out pop loopne pusha add and ret fwait cld movsl pop scas arpl cld movsb cmpsb fwait and and clc jno jae jbe popa lcall stos lret adcb sub cltd inc and xchg das jbe mov out sub mov mov xor idivl mov dec mov push std fadds ftst lea enter movsl arpl add mov lcall lods push into popa jg ret enter cmp pop push fadds adc cld js popl or (bad) lret in inc pop movsb popf out xlat and xor xlat sub inc test imul jo inc (bad) (bad) dec xchg outsb jb ljmp int3 in cmp ja adc popa adc fsub loopne ltr (bad) lock (bad) lret lret in and push sbb shrl dec xorps inc dec sti add mov xchg push test cmp dec sahf xchg js xchg inc pop mov into and stc push dec insb mov jecxz cmp pop sub lret cltd pop sbb test add movsb fsubp mov daa shrb xor jecxz int enter push subl cld in andl xchg js enter push pop repnz push nop pop or jp dec mov add call inc mov (bad) pop rorl sbb cmp jmp jo into insl pop bound adc mov xchg sti push fucomp dec and pop mov and enter fwait addr16 pusha inc hlt mov (bad) mov sbb push xor ret leave shll imul xchg imul pop xchg xor adc push in stc push jge fidivl sbb (bad) in pop dec in adc cmovbe pop loope mov les mov xchg cmp shrb or aas loopne sarb stos or sub xor xlat jbe movsb jne push loopne push cmp into xchg mov imul sbb pushf or loop xlat inc lret lret push arpl push mov les jmp pop test nop mov loopne dec add add inc fimull or xor es add into xor xor push test in push ficompl test subl jmp cwtl cmc cld mov jns,pn dec pop push lcall mov adc clc or cli mov sbb fsubs in mov push cmpsl add aaa dec inc mov push pop dec xchg inc negl in cmp sbb lret sbb jns xchg inc movsb pop leave push stos pop xor adc outsb dec (bad) mov and jnp sub or add lret (bad) sub mov lea cmpsb inc mov xchg insl mov outsl adc sbb lahf loop jmp in lods push xchg lret (bad) call addr16 addr16 ror pop mov add push loop pusha clc xor xchg enter jno cmp sahf fwait adc dec es and shlb lods jae fcoms jnp pop lret lock jo push inc leave add cmp scas (bad) mov inc dec (bad) inc inc popf cmpl movsl stos inc mov iret sbb icebp insl shrl inc lret mulb mov movsb inc in mov das (bad) mov push mov outsb adc mov or ljmp dec mov mov pop scas mov test or rorl loop dec push push daa (bad) sub sti xchg scas imul std int3 jb gs jle aas js adc dec or inc adc ss mov movsl fs in into orb (bad) jmp xlat jo hlt push (bad) aaa cmp test pushf mov xlat push jne adc push ss dec stc rcrl inc and lahf mov out out fs or cmc mov push scas (bad) and lods andl or xchg arpl mov jl lds lds es add popf addr16 ss outsl jp fisttpl xor iret out icebp or inc scas sti jg jle dec mov inc scas add push hlt cmpsl inc ja test jl mov dec repnz fildll ds and dec add outsl bound fstpl (bad) repz rorb or lret loop push lods (bad) pop cmp mov or push imulb das std cli ja popf add xor jp and mov loope or push pop xchg movlps (bad) xor fwait jg pop jb (bad) push mov xchg ret sarl sub out inc inc pop jl sub mov jno sbb movsl fmuls mov repnz fs adc mov mov mov sbb inc nop inc push pop jb and pop mov test mov mov push mov cmpsl test jg ja,pt mov arpl pop movsb mov ret dec cltd add jo imul inc ss adc ljmp aaa jae (bad) scas pop loop outsl xor jecxz enter inc or cmp out cs push adc in dec pop mov lahf jg mov das and and cmp dec ret mov sahf ret fild outsb mov adc mov popf sbb out sbb out push int jg jbe mov mov or orl sub dec (bad) andb (bad) jno adc sub mov sbb insl fbld xor (bad) and inc pop jbe pop rorb xor imul dec (bad) cwtl sub (bad) xor inc jp cmpsl repz mov enter or (bad) inc push test mov jecxz aaa cmp andps clc sbb movsb repz lods repnz shr (bad) mov gs adcb stos ljmp push stos and sub ret es loopne sbb stos push jle mov mov es test imul add mov adc movsb (bad) aam jle mov sti es inc pop push jae dec add bound lea stos adc rcll and lret jbe xchg in pop and (bad) insb lret int3 adc xor xchg xor push test fiadd ja cltd pop in cmp std ds shrb outsl imul push test and cld out push dec pop add xor xor divl xchg mov imul lahf mov fstl (bad) mov es ss mov mov pop mov dec pop (bad) iret push enter sahf cmp pop mov dec inc jnp inc cwtl scas pop daa or std push add sbb sbb repnz cli mov xchg mov add pop adcl pusha (bad) mov sbb and rcrl (bad) lock pop fistp imul icebp (bad) jb add sbb inc in (bad) sub xor test inc and push shr mov and insb xchg inc xor pop inc mov out jp inc sahf and cmpsb or mov fnstenv mov push test andl inc push loop test pop (bad) fsubs fcompl pop test mov dec pop loop rcll lahf sbb dec dec push movsl lods add add xchg lea test xchg (bad) ss push cmp outsb push jge je push ljmp hlt bound sub dec inc ljmp mov pop test lcall movsl sti dec mov cmpsl add frstor data16 imul stos and ret adc ja mov add aam scas repz shrb push loopne mov push fabs outsl es fwait xchg mov xor je lahf push std mov xchg mov cmp imul cmpsl in mov scas cld jg popa mov jge aad and je scas pushf sub or inc mov mov stos push mov insb and pusha push pop cmp cmp add ret xchg cli sub bound (bad) mulb cmpsb lea dec inc pop jbe fs daa or clc mov sub fs mov sbb push into imul outsl sub idivb adcb daa mov push iret mov adc sbb ljmp std jecxz push test jnp adc icebp sub pop lea imul cmpsw call cmpsb xor xchg stos adc inc movsb mov in loope lods repz mov or int3 push repnz out testb mov adc test mov inc cmp shrb jnp xor pop addr16 mov xor (bad) (bad) mov cmp mov jmp or (bad) xor lock addr16 mov mov sub mov or into push scas xor and inc fmull mov or adc test dec adc jle push dec mov nop out mov pop ds pushf ljmp js fs add sbb andb out dec stos pop jp push (bad) aaa repnz dec jno (bad) inc ror dec cwtl hlt xor in xchg mov inc shrb inc mov loope cld movhlps mov sbb je xchg jle lods test add xchg adc into push stos push add dec hlt pop test sahf pop test or das push loop ljmp jbe orb jg data16 imul mov or push stos jle hlt jb arpl mov fisttpl or mov idivb cmp dec add mov fistl or cmc fdivrs cmpsb (bad) gs adc mov and stos in les adcl (bad) pop rolb jge push push clc repnz jmp aad inc lret outsb inc and loop out aaa int3 mov push cltd dec negl rolb loopne xlat pop sub push mov mov jg sbb int3 add and jmp out data16 xchg pop scas lods xor and inc stc push out and out jae out ret sbb sub mov insb adc mov (bad) and mov push shr popf mov and push add cmpsl cmpsb mov and push hlt clc addr16 aaa or push in dec imul cmp (bad) sbb fxch add arpl (bad) in pop add mov sub dec mov pushf loope inc jl insb cmp leave push pop dec pop imul pop fstps jmp mov sub pusha sete xor jno sti (bad) negl sahf cmp mov mov es mov mov push or xor pop sub lds loop sbb rcrl aad ljmp sarb aas xchg pop iret xchg out mov mov (bad) dec pop pop fadd xchg pushf stc cmpsb jecxz test addr16 xchg adc sbb repz gs ljmp jg (bad) push lret jnp lret stc add fnstcw sub (bad) arpl inc das sub jne js inc cmp xor movsl (bad) xor fs sbb sbb mov dec rcll ffree jg mov inc xlat repnz sahf pop leave ficompl or push or xchg mov jbe mov mov adc fsubl mov jge mov js clc xor fadd pop subl loop cmc and aas notl jo lock int test fdivl dec push rcll mov sarb or xchg je mov test ds jmp rorl xor cwtl jmp cmp push cmp and sahf and mov pop fidivr add les mov pop jo and lret popa jle and call (bad) lcall aam daa dec jo jae (bad) and lods out pop test pusha jmp push outsl idivl into add mov std push xor cwtl inc jmp outsb mov (bad) call inc sub pop and loope sub jecxz in cmpsl jns mov mov push ss xchg add mov or mov (bad) icebp lock xor xor push cmp int pop fcoml out (bad) sub int3 rorb jmp and (bad) repz mov dec es inc inc push xchg xchg and repz and icebp cmpsl jns fcomi stos nop clc aaa test dec ljmp fwait push fidivrl rcl (bad) out sbb pop lahf mov add scas repz mov jbe mov in pop mov ljmp cwtl hlt shl repnz shrb xor xchg movsl push pushf xor xchg cmc sub popa push test stos push or or push xchg adc lock xor lea mov mov cmpsl mov pop imul lret lea lds mov subl mov add in jnp aad xor add xor cmp cld outsb jecxz lods push fmull fs lcall inc add dec push mov dec cwtl stos mov xchg rcll xchg outsb xchg fidiv bswap cmpsl mov add pop lods adc mov popf cmp out inc dec cmp cld mov loope push sbb push jmp into mov add cmp mov (bad) mov fidivrl icebp jbe or push lods movsl mov rcrl cmpsl push orl xor shlb fadds xchg add pop in ds aam mov (bad) std imul (bad) fcmovbe ficom mov in push jno fcomip inc ja jbe into les test loop adc stos fdivl mov push dec inc inc sub notb jno mov mov icebp and and cmp lret cmpsl cmpsb lock inc push jmp popa int3 xor aam hlt mov repz mov mov dec jp dec mov mov jl xchg cmpsb and in bound lds lret push mov idiv mov (bad) call iret (bad) push add dec dec xor or lods addr16 cmpsb repz inc test jle add and sti (bad) fistpl in clc int and inc dec jle repz icebp adc push scas xor addr16 je sub aam ss inc or scas ret mov cld add ret xchg test sub jnp lock mov bound sahf bound jae push lahf scas add jo push loope sub mov inc loop pop push aaa sub pop push sub adc test repz sbb mov repz call ficoml imul mov in fisub pushf fild (bad) pop jle mov push sbb les mov mov mov mov xchg mov adc cli jns aad xor repz inc cmp imul cmpsl jb test mov cli mov enter xchg das out shrl push cwtl pop mov push push and push jns cltd xchg pusha mov inc adc in mov cmp push adc adc ss jbe popf cmpsl inc mov adc pop xchg mov jne lds mov mov shrl (bad) and add scas js cmp inc fidiv fimull outsl jl insl inc popf popa nop mov fidiv cmp cld xchg cmp ja out xchg dec push jbe jg call imul int push sub mov mov add sbbb inc mov sub daa push xchg popf mov ret clc test ret dec out and pop inc and int add out ret (bad) jb mov (bad) sbb lahf jg rolb push push inc aad mov mov arpl loope iret in int3 sub incb sub roll hlt fstps xlat aam movb loop out addl ja pop dec mov sbb push test add inc push jmp pusha push jo jno mov insb inc cltd clc (bad) inc push (bad) mov add sub push add or sub mov test into xchg mov shr outsl mov pcmpgtd sbb and std pusha lds addr16 or adc fwait cltd test mov jbe xor lahf push push sub imulb xor sbb dec xlat mov fsubrl dec mov sub sub adc add or mov mov ror xchg out das int or (bad) cmp ret mov dec add add add std enter jmp jmp scas sub scas fiadd push test inc enter iret dec loopne push push and rcrl push fsub lcall inc sbb mov xchg mov xchg ljmp aam lret xchg mov sbb and pop leave cmp les or cmpsb repz or sarb add in loop out cmp hlt or cli pop imul mov xor push jo jnp cmp dec test and inc pop jns dec in jg mov out mov pop mov inc imul (bad) out dec dec loope push add bound dec sub add popa fldenv imul mov mov data16 jl push pop cmpsb pop or inc or cltd paddsw ss sbb push out sub sti inc cmp lods xchg js xchg pusha mov out add add shlb inc addb fucomip hlt mov jb (bad) aas aas (bad) insb mov push and cmp fidiv aaa testb cld addr16 cld lret stos jae lcall test iret ja push lods pop lret jo jae jnp dec cmp add rcrb (bad) sahf and cmpsb scas bswap aam fstpl push lock xchg repz push inc outsl bnd (bad) mov (bad) cltd mov cmp pop sub fcmovu (bad) into mov cmpsb das clc js jno lret or mov jnp rclb call sbb addb orl sahf cmp push aam dec dec ss pop in adc add pusha dec xorb les push scas lds sub dec and mov push roll jl sarb repz xor xor add add das int3 pop mov inc add mov and movsl movsb out push ror nop or lods stos dec mov lcall sbb or and push popf cs pusha push lret fisubr and (bad) loope inc mov daa inc mov dec in xor scas dec mov stc sahf pusha xor inc movsl push out push mov push dec mov inc inc cmpsl bound lods or xlat mov push lock jg sub mov cmp imul rcll scas xor in mov scas pop push imul cmp dec sub jno push adc fildll data16 out xor cs xchg sti repz nop jecxz jae hlt fucomi out dec lock lret push or mov daa dec inc in gs xchg scas jp or push xchg inc mov add (bad) mov out leave stos test daa repnz (bad) in xchg addr16 ljmp inc adc dec movsb loope cmpsb add (bad) (bad) sbb mov mov es (bad) es xor lahf stos negl (bad) pusha rcrl pop push fsubr cli cwtl pop jb (bad) jg in lcall mov xor (bad) lahf mov push cmp scas jg jg dec (bad) xchg pop pop aad es out fbstp inc popa sub popf iret push (bad) cld scas mov jg inc add idivl aas pop add in add getsec adc test adc jecxz popa inc mov popf pop ret mov mov inc jg add in std and dec lahf hlt add mov rorl cmpsb cmp pop aad out les xchg xchg sbbb push cmpsb inc or cld sahf lahf mov call and fwait jp out cmpsb test and cld xor out push test mov (bad) adc mov push cmc jbe push insb sbb addr16 pop pop rcll pop dec es xchg aad xchg cmp sarb sarl outsb mov mov xchg inc scas das (bad) in or xchg sbb icebp mov cs mov loop int mov fsubrs or inc stos xchg ds jmp xor leave into negl cmp (bad) clc cmp adc lock js xchg dec xchg sti mov mov jne xchg xor mov shrb inc mov sub xchg push xchg repz inc jmp mov je pop mov xchg push cmpl mov lods mov icebp imul (bad) shrl mov jno std (bad) cmp xchg xor cmp push lret mov mov cmpsl and ljmp pop sti test xchg jg (bad) sub add adc mov mov pop push subl sbb jmp sub mov adc loop add addr16 mov std pop imul mov mov out ds or test movnti sbbl jle cs jge sti add fs (bad) fidivrl dec scas cmpsl push cmp xchg xchg sub into push arpl jle test or jl fadds xor sub jmp jp pushf fadds popa lods pop pop inc xchg stos sub mov cli sub in jae,pt inc (bad) xor orps out adc adc mov or je mulb xchg fadds pusha add mov fxch mov pxor cmp mov cmp pop jnp loop gs (bad) dec and mov aaa lcall mov btr (bad) loope movsb xor addr16 out (bad) stos lret jnp jmp movsb mov lods hlt add hlt aas rol jge cmp cmp mov push cmpsb mov ret test (bad) sbb cmp mov xorl outsb lret pop mov outsl ds (bad) ds bound jns add enter lret push fcompl inc and mov sub iret sbb xor daa enter dec jne inc in and aaa in mov sbb cmp xor (bad) hlt bound push cmp insl div mov sbb sbb mov lods dec sub aam add mov (bad) out popf inc loope pop mov hlt mov sbb icebp popf xchg fcom fucomip ss mov inc hlt or jns adcb aas mov and icebp pop lahf shll adc and (bad) jo rcrl cmp or ljmp mov mov cmp fldt cwtl out rolb sub push xchg add lret and movsb call jg dec sub or lods repz inc fildll fistpl outsb add (bad) mov or mov pop cmpsl insl dec pushf in aaa adc (bad) adc cmp pop sahf ja,pt sti pop sub popf jnp and mov rolb gs dec and shrl mov cmp xchg dec push dec dec adc mov mov mov cmp fistpll mov std les jno repnz push dec outsl adc aad (bad) (bad) jecxz outsl test sahf sub push shlb inc sub push mov outsl push (bad) cmp nop shll xor aaa mov negl call bound fistp insb iret int3 cmpsb mov (bad) lret ret (bad) mov ja push mov into mov fnstsw jbe (bad) sar cmp js dec add cmp jbe (bad) js int outsb (bad) xor pop (bad) in sarb xor fcmovu iret push clc jecxz mov call push pop rorb mov mov mov sub loopne inc sbb inc mov and out push je add sahf addr16 pop push fidivr dec push out mov sub insb fstps dec lea pop jnp outsl push mov add popa out lret xchg mov jo scas stc sub pop pop inc add xor sbb dec adc lret mov pop pushf adc movl mov push cmpsl xor mov push adc rclb mov iret dec xor pop ljmp movsl into xchg mov leave mov test stc pop mov mov mov fld mov mov jb fidiv pop (bad) loope test cwtl popf xchg mov pop sub ss jno out icebp jg inc push cmpl lea inc push out mov and stos aaa adc lcall outsl push repz mov rorl js aas js mov mov and sub pushf clc xchg xor push push aad jl pusha (bad) pop lds pop adc and xor dec in fildl pop frstor pusha push cmpsb in in mov lcall fisubrl lock cmp and rorl mov add mov mov push and ficom mov mov adc mov mov adc in std je popa (bad) fdecstp stos int3 mov loopne loop jnp js xor xchg adc xor cmp xor sub adc nop std loop sbb mov cmpsb int3 add mov dec cli daa rclb (bad) out cmpsl repz shll (bad) icebp mov phsubbw pop sti jg sub xor pop lahf cmp mov adcb es outsb sahf add movsl lret jnp jbe in pop aaa and mov std cmp jne cltd cmp dec inc rorb push mov mov cmp mov xchg cwtl ret fstps mov bound dec mov (bad) (bad) jo dec rol cmp mov aaa jle (bad) stos in pop insb push dec pushf cmp ja xchg cwtl insl sub cmp flds out mov pop push dec das repnz std mov hlt loopne sahf aaa inc in loope in scas mov sbb je and rclb fdivrs xor jo sub jbe bound lods les xor call ret mov mov shl insb int or std jbe lods sub (bad) ficompl sub fnsave cmp jg push fild test push cmpsl and sub aad jp mov jmp insl jge mov (bad) or cwtl imul cld and or adc lret xor ljmp jecxz push mov inc ret jb test and fistl add scas ret ja push push repnz iret or scas setb mov addr16 aas lret mov (bad) je sbb sarb cld or outsb das xchg std dec leave test leave faddl outsb push rorl aam push cmc mov mov imul mov imul mov cmp sub enter mov repz and mul or (bad) fstp inc add pop sbb lea jmp mov push xor movl addb int3 xchg pop loop and addr16 xor sbb pusha mov loop xchg nop std lods imul decb fdivl sub xor mov or jno xchg lods insb pop jno sub jecxz add dec mov ret clc jle sbb and or jg mov xchg push xchg adc and xchg jecxz aas shrb jnp loopne (bad) pop inc pushf jl pop fistpl sbb dec cmp xor mov lds cmpsb inc and shrl pop lret sbb lahf jb cmc inc xchg xchg in sbb call shrl push xor jmp leave xor xor cmp imul lods mov jb aaa xchg push lea lret jne jmp xor add std mov jg ja xchg jp jp std sbb bound sbb inc mov decb lret fs clc js aas add mov cmp pop fwait popa and fisttpl jae shrb stos pusha add adc rcrb add push dec daa xor dec fiaddl je in into adc lods pop adcb rcll mov xlat inc push mov test addr16 mov cld jl rolb lods imul not or jns ss scas fadds jl adc call shlb (bad) cmp sub nop xor inc xchg add jp jmp adc push (bad) fdivrl dec mov out cmpsl mov fsubr or mov push xor je adc or frstor adc addr16 pop ljmp sbb sbb pop jmp aas test test outsb dec stos in lcall orl cmpsb int3 lods push mov ret mov notl enter test (bad) (bad) inc adc (bad) in dec sub es adc cmpsb inc popf lock pop sub xor dec into loopne lret inc fistl dec adc loop jne aam repz aaa rol sbb cli insb sti sbb inc mov cmc movsb mov jnp mov aad clc mov or or mov cmpsl and loopne dec repnz mov xor xchg push sub out cld in xor scas (bad) jge nop hlt pushf outsl imul xchg or mov pop faddp mov add dec xlat cmp sbb aad mov loopne test addr16 inc ret nop push pushf sbb or xchg mov sub jns xchg mov fdivs inc pusha add stc into bound cmpsl push aam pop enter inc inc stos and outsl dec in jp add fdivl (bad) ss push jno cmpsb mov mov push dec xor push in fsubr (bad) mov idivl pop sub inc xchg aaa xor xchg adc loop adc int3 movsb mov mov sahf and cltd das hlt mov mov repnz sbb jmp xchg arpl mov adc imul (bad) fdivrs and push xor enter inc xor sub (bad) cmp push jb mov out test xchg ror xchg fcoms sbb rclb mov ret jge fsubr nop repz push (bad) xor out sbb pop fdivs xchg or and mov push and push (bad) negb aaa pusha and shrb sbb inc add xchg cmp inc push sub inc ret pop cltd xor push addr16 hlt xchg xchg flds xchg ret push out mov mov push mov (bad) mov iret adc lret xchg mov orl add jp sbb fdivrl ret (bad) in dec dec adc out jge cmc jp jb,pn and inc push push mov and pop jg mov xor fwait std xchg xor or dec cld (bad) lcall inc std or (bad) dec mov mov fs xor movsl mov add push sbb insl xor sbb sbb pusha lret dec jb sbb test outsb stos adc fcom mov imul and jo loope add pop (bad) je inc ja add xchg xchg jb and fdivp mov mov sub cmp push push rcll js test push inc or pop cmp xchg repz aaa sbb jle les gs mov bound sub iret sub pop mov mov and mov gs lds in in and ret adc fstpl push pushf mov stc push lret push js xchg mov shrl xor inc xchg inc mull sti out mov stos sbb lods xchg mov jp mov cmp lods insb pop roll inc ret lahf loope sub cmp fdivs jg fs cmpsl cmpsl push outsl lahf (bad) xor shrb xor push movsl jb (bad) jno add imul sbb loopne aad stos pop (bad) cmp mov push sub jp xchg sub xlat popf adc das ja pop push int jo,pn ffreep std sub dec adc lock jb fwait mov stc mov lds pop xor xchg push push adc std out xchg aad mov movsb mov xor push xor dec xor sbb adc cmp mov and in lea test cltd pop and stos push test test int3 dec or push lcall jno or mov (bad) insl mov ss inc aas fsub (bad) test scas mov add addr16 xor sti or in aam inc int das mov mov pop mov xlat mov pop pop daa sbb aad xchg dec or fcoms jae add xchg repnz rcrl data16 add mov inc lock arpl outsb pop movb mov (bad) push aaa push xchg push adc test jle fwait outsb das or icebp rcll in jmp jo or pop cmpsb ret call out mov xor add mov pop ret iret int sbb sub jl jae shr push inc lret push fisttpll aas shlb outsb mov add mov mov aad gs lret mov arpl push push dec pop xorl pop inc rolb push add jns adc adc in loopne jmp pusha mov mov push (bad) add (bad) cmp jno daa pop add cmpl iret sbb xchg insl sbb inc scas sub jmp cli add sahf movsb test lret cli repz loopne jmp sub stos cld and xor dec xor push popl adc jmp cmpsb pop or mov dec cmpsb lods fidivrl inc out cmp xchg xor insb or sbb rcrb (bad) fnstcw pop mov std sti xor pusha sub add int3 fstps cmp dec lods jno sahf repz pushf fnstsw int sbb adc add cwtl fwait xor in idivb inc pop das push jnp push test into (bad) inc cmp mov in std jno lock in call xor dec std (bad) mov cmpsl lea xchg add pushf xchg mov (bad) xchg ss mov movsl shrb data16 xchg and push cld mov (bad) inc dec push sub fidiv mov jb roll xchg dec lret popf fidiv push sbb inc sahf cmpsb xchg data16 mov lods push adc fidiv repnz push mov inc sbb push push inc jae pop dec fnsave sbb cwtl fdivs pop push or cwtl outsb or jae and jmp mov mov out pop in adc sub jo inc push inc jb cmpsl dec rclb mov mov mov xchg lret pop and jb pop xchg jne fisttp dec sub sbb imul fsubr sahf pop jle out das cs out adc xchg xchg and pop or inc ss pop jl out arpl int3 or cmp int imul int3 jne jecxz sub pop lds test mov roll add add mov in jns lret xchg sbb dec pop fdivs fsubrs and pop mov add xchg sbb dec mov imul and test mov popa je jnp mov lea fstpt pop (bad) cmp mov mov and pop jo orb dec loopne rol test sub mov seta scas addr16 (bad) xchg xchg outsb clc xor ffree push pop dec stos sbb (bad) xor inc addr16 jecxz adc push adc jbe fimul das and xor and or loopne pusha stos sbb loope or je xchg ret dec lret push add xor mov movsl jp lock arpl mov mov fistpll ja sub repnz xor loope adc or mov mov sub adc ret sbb (bad) pop aaa adc in rcrl inc pop or cmc out push jg idivl (bad) cld sub arpl sbb mov outsb icebp leave decb mov rcll jo fdiv scas jp push sbb (bad) sub adc fistl aad adc (bad) out movsb les add out and hlt fidivr dec or mov mov pop or (bad) jmp ja sub or das jno iret cmp adc dec dec adc (bad) add sbb mov or cmp loop rorb and mov nop aaa cli pop jle outsl roll jle pop dec fs jl jnp aaa cmc mov xchg movsl inc es push bound lret (bad) shrl (bad) leave ficom std sub mov sbbl outsb repnz jmp sub jg inc push dec adc sbb push imul push dec repz mov imul or lds pop stos mov or orl push cmp sub pop cmp dec push add mov pop gs push pop xchg imul jmp popl imul mov les mov dec or insb mov jmp jmp pop push or or cld sti test arpl dec cltd aad aad ficom and mov jecxz cwtl push mov add es (bad) aam inc iret mov fistpll scas out sahf sti rorb lods psllw dec mov mov in mull xor mov jne imul inc in ror gs dec out add leave scas dec inc lret cmpsb cltd leave sub mov mov mov icebp adc add xchg adc sub movsl rcrb cwtl outsb mov add aam lods cld lahf nop inc (bad) push sub fwait gs xchg lods dec or or std lret and ja sub pusha jns nop out cmp inc inc loopne lods push cld in jne or sbb jne insl pop xor jnp stc xor (bad) (bad) sbb out and cmp gs out (bad) insl push lds mov enter jl cld fmuls bound test push out dec pushf pushl push test iret lret (bad) dec push scas arpl int3 mov cmc or sbb cltd (bad) mov pop jl inc gs ficom xchg std ljmp inc push lods imul loope,pt xchg call push mov (bad) pop out mov inc clc insb xor cmp xchg or cltd scas dec cmpsb jg subl pop movsb sub insl rcrl imul (bad) and push and pop leave mov cmp sbb and dec ret add pop cld (bad) jb clc mov imul cmpb cmp push jg shr (bad) pop sub dec pop fstl scas roll loop jmp daa pop sub (bad) out sahf cmp mov (bad) idivl shrl imul lods shrl aad lods push mov testl test daa dec dec aaa in xcrypt-cfb cmpsl pusha xor sbb popf push mov push fcmovbe dec pop lock loop cmpsb (bad) inc and cld insl out adc push mov xchg movb or pop adc (bad) les icebp add adc push testb shlb push mov jno neg aaa sub fisub into add xchg std push loopne push dec rcll add lods and jle push sub inc ss outsb mov add gs mov cltd lcall int std ja cld dec dec pop mov clc (bad) data16 lods in sbb add sub in iret cmp and inc xchg push hlt add sub bound movsl (bad) sub inc inc stos add cltd sbb (bad) jo mov cmp pop ja sub and pop outsl outsl in fiadd cmp cmp in push xorl mov xor mov jne sbb add xor push or dec jbe rorb mov or push push or mov mov sbb jecxz (bad) movsl and hlt mov outsb pop and lret int3 mov xchg outsb push cmpl add pop mov xor inc xchg cmpsl inc loopne test pop rorb push dec sbb je and stos arpl es adc fild mov adc rcll push jae cli ud2 popf add (bad) adc pop fisub pop add sbb mov fsubr or mov lock pop dec or test pop ja mov jge ficom scas push mov adcl dec sub es lea les pop rol lods lret loop and mov push aad pop clc mov cmp jl (bad) adc jmp xchg dec pop sub pop bound xchg sbb call hlt push mov fistp xchg push inc push mov lahf repz aad mov inc and mov pop cmp cs lret sbb push aad outsb clc and rolb or push fistpll testl mov jno scas pop sub inc and sbb sarl (bad) mov jno ljmp (bad) aaa decb inc sub repnz jle pop sub dec insb ret and addr16 pushf fs popf cmp in mov movsl outsb stos pop jmp cmp aaa add sbb pop mull jl fnsave lret punpckhbw dec push push jb subl pop data16 xchg cmpsl adc aam xchg xlat push stos ja mov cmp mov out daa pop push mov mov xor aad movsb stc stc out and cli jo ror xchg xor clc xor in adc push xor mov pop adc aad cld (bad) jnp rcll xor xchg call xchg adc lock test xchg cmpsl cmp push pop mov sbb popa imul iret add movl test call xor sbb in mov push ja inc push mov xlat sbb dec decl cli cld movsb ljmp aam and cmp dec out mov ret sahf out inc lea xchg pusha sbb popa push jae (bad) xchg je jmp mov push pop adc xchg rcll push ss push pop xchg outsl xchg pop sub test hlt mov jae add in clc insl sub scas mov (bad) jecxz xchg jne mov pop cmp sbb sbb daa imul lcall pop jmp mov or cmp sub or sub mov add fstl popa fldenv inc mov das or std sar mov push dec aaa jo xor adc pop cmp xchg mov mov (bad) xor dec pop and mov ds lret jmp jns jmp dec sbb lock xchg inc inc cmp pop dec pusha and jg push cs gs jp inc dec mov addr16 pop or jnp sahf call mov xor shl mov scas bswap jg xchg mov xor dec sahf aas and lahf enter mov (bad) mov or dec jp out dec mov js rcrb xor loope xor clc mov aaa pop push cltd movsl add push mov imul scas sub jbe rolb fisttpl fs (bad) hlt neg imul sub pop add arpl jnp jbe fstl sub scas or clc roll repz lcall cmp xchg cmp pop sub fs xlat xchg jno mov and cmp and xchg sbb pop push test sbb cli xchg push (bad) pop dec ffreep dec xchg or imul sbb in dec xor dec mov xor out jb ds xchg pinsrw sub mov xchg bts repz cmp hlt nop (bad) add and xor sub scas fcmovbe jmp jle add push lods loop fs add les jns cltd jb adc js dec mov mov mov lahf pushf adc add xorl cmp (bad) aaa jle pop les mul and xchg enter push jb inc jecxz shrl push mov jno test aaa jl xchg jg adc sub test ss sub scas outsl jnp imul xor daa lods jmp xchg stos and jae mov movsl pop push data16 (bad) xor jno dec cmpsb xor pop icebp mov sbb divps or imul mov (bad) or or cmpsb cmp pop and adc cli sbb jns outsl add push push xchg movsl fs iret fmulp pop cmp pop push sub push int3 or jp fdivr lock dec ja mov lods lods or dec leave jl mov sbb loop inc inc xchg xor jecxz sbb test pop dec mov xchg ja jl mov inc jp bound jb aad sbb nop pop subl mov xor rclb xchg mov sbbb mov add les cld ss sub mov mov sub div rcl in push cmp and daa pusha push jns out les fmull int incb aas int3 dec mov in cltd arpl inc xchg sbb add mov pop cmp out in add les inc add and mov addl sbb and jl rcl push jecxz aaa mov and dec clc sti lods push cmp das dec ljmp in dec sbb pop repnz das js or sbb sub inc leave movsl lods or out lock pop push in and xchg fwait xor dec mulb mov pushf (bad) ja jmp sub pushf jne push bound aaa add lea push sbb cltd mov and fwait fwait sbb std add test pop sbb out jno jp hlt dec or xor lcall sub inc xchg fstps xchg dec mov jbe into enter xor xor notl cwtl or add add xor cmp pop push mov mov xor or xchg mov jb iret add adc and push (bad) adcl mov jns dec ja inc fstps mov jg pop push sbb jnp push dec or rcr clc test pop or or pop xorl sbb adc fist mov xor mov cld movsb sub in mov adc push ret insl or and and or (bad) mov pop pop aas sbb pop call pop dec jnp push ficompl jmp xchg sub bound jb sbb jno cmc add pop sbb mov shlb xchg mov ficomp lret bound lods clc roll xchg fldcw adc push push mov xchg mov lret cmp lds cwtl shrl stc cltd adc sti pushf mov pop repz cwtl xchg ret stos lock pop negb nop sti std mov outsb fwait mov xor lcall jne sub lock dec jg jecxz lmsw ret clc aaa mov xchg arpl mov adc je lcall scas hlt cmp repz mov outsb stos loope movsl dec outsb stc jbe loopne (bad) stos cmp ljmp shrb cmpsl leave jmp clc call rcll stos lea es mov jg inc arpl push pop mov push lds jge jl out mov cs aaa push enter add sub push aaa lods mov mov pusha leave in xlat ret cmp jne fidivrl cmp pop hlt mov enter dec movsl adc test dec xor jp xchg add push rcrl scas (bad) fdivrs push ffree mov mov mov push lret xchg inc xlat insl cmpl cmc out (bad) std sbb mov cmp out or pop and or mov pusha push or adc add movsl inc jmp orl adc xchg pop jg imul repnz xchg nop out scas mov fadds push or mov mov pop inc cmp rcll jno into lret sbb xchg push sbb pushf push mov lcall cmp loope cmovp mov dec lods lods mov fiaddl imul fs sahf push jge out inc fmull or ljmp jge out clc sub gs flds daa lret push in jg mov mov test inc pushf sbb pop nop icebp xchg fldt es sbb or and mov arpl shl dec mov ljmp jbe lret push dec popa cmp sub sahf sub std inc sbb (bad) and lods cli or add lcall (bad) vpshlw out push call (bad) mov (bad) cmpl adc inc leave adc xchg pop lock test sub cmp xchg inc push add imul xchg movl cmpsl mov pop dec mov inc fnsave sti jmp data16 (bad) mov push add sti fldt (bad) gs aaa ror or outsb ret les lods push fwait push add lods xchg scas js dec mov movsl and (bad) xor sub imulb cli adc xchg aaa jo push into mov push add push adc jle mov rorl stos xchg sbb push jg fs or push bound push mov add jge push xor loopne popl in push out sbb push and loope inc pop pop ja cwtl clc jns mov lret rolb mov adc pop and idiv arpl push loop cltd or in iret les jg fistpll mov mov movsl dec in test pop mov (bad) idiv inc cmp jno push out push psadbw shll fcompl push scas adc dec dec mov sub mov nop mov repnz xchg (bad) rep imul jg add or jecxz idivb sub les js and dec xchg rolb (bad) jb pop decb xchg push adc jae xor mov js cmc lock stc in daa lahf inc notb mov out fsubr (bad) in mov lcall mov fdiv inc xchg lret loope dec das xor cmp pop jbe sub lea in push mov nop mov adc test lods add inc push insb push sahf or incb sub scas mov insl mov push mov and sub pop js fwait incl outsl bound dec das jnp push xchg pop push test mov xchg aas sub or sti or cmp mov fild (bad) mov xor cmp int3 loopne (bad) xor mov push cmpsl je mov lret test mov jmp sar nop fcomi sub mov push aad pop and mov mov inc rcrl adc enter pop add or ljmp xchg test mov stc push pusha arpl arpl cltd jbe iret jno ds cmp and sub jns out outsl data16 xor lods dec cwtl adc or sar pop or (bad) test icebp jle mov cmp into cltd rol pop loopne push addr16 or mov fdivrp jbe loope and mov or xor xchg ja cli pop push lret (bad) rcrb xor iret adc ds outsl sahf cmpsl out lret sub adc dec pop decl push es movsl xor lds sbbl push sbb loop roll jb mov ja mov int3 push int3 mov xor and mov sbb loope fstp pop aad jne fbld inc adc mov out xchg sbb fldt add negl mov dec or scas jnp loop sbb mov dec mov loop lds or addr16 cmpsb add xor pop cmp jle inc cmp stc test cmp jl insb jb lea (bad) mov flds pop mov (bad) in push movsl cwtl aad dec jmp ret stc rcr dec push and push dec pop jns cmp dec push mov mov sbb xor push popl stos xor jns mov or daa xor cld pop xchg ret (bad) sbb inc mov jo lea mov or ret popf dec cvtpi2ps xlat push mov and jle mov xchg sbb in lret into jnp stos iret jb push mov setae push sub mov pop jns idivl das cs pop pop stc sub in or add sub repz jp into mov iret push ss add mov mov sub mov ja pop pop cmp push xchg rcl int3 mov xor or add xor mov adc enter jg (bad) enter jns sbb inc sbb push ja test je fnstenv loop lret das in sbb shll repnz loope or jp pop in out lods push leave pop xor mov cmp dec inc cmpsb scas xchg mov or mov and cmpl aam adc lcall xlat jmp icebp adc cmpsb fnop xchg out mov jns cmp sbb shrl outsb and test adc in xchg mov inc jo std movsl sub push mov xlat movsl push push outsb and es cmp imul cltd scas scas or ja inc clc std xchg pop cmpsl cmp mov mov mov repnz xchg fwait mov mov test loopne cmpsb scas push iret jge jg popf insb mov mov jnp fmul or jmp pop mov cmp (bad) lahf andb ret sub mov and cmp int divb ja mov and popf sub or (bad) jge insb mov inc cmc std popa popa mov aad loopne ret bswap addr16 jae jne xor mov shrb lds (bad) loop insb jl pop (bad) jle sub mov xor push cmpsl cmc stos mov call daa call out mov mov mov rcrl and and movsl pop hlt rcll cmp not mov ficompl pop or enter jae inc mov enter pop (bad) pop lods dec clc ret pop bound dec jae js les mov pop stc scas in int3 mov xchg sbb inc scas and mov pop and dec mov mov xlat xchg subb dec cmc sbb sub addr16 fstl cmp cltd and mov mov fisttp data16 inc and leave stos (bad) out cmp mov sbb clc enter mov jl sub negl mov (bad) adc stos and jo push aas fprem1 addl xchg xor lret inc daa mov mov sbb insb lods (bad) lcall in and sbb gs push orb js dec mov pusha nop fcmovnu addr16 inc jmp pop popa cmpsb jnp push and out xchg adc dec popf mov ss (bad) add sub cmp arpl jne aad loope xor dec es mov roll sbb mov fwait int3 clc cmp daa test mov cmp lea das std cmpsl pop xor pop inc add jecxz cmp jo sub flds or push mov push cmp mov mov and jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov adc inc popa repnz es jp cltd std add ret int jo rep lods mov loope push popa and inc test je clc fdivrp in lock push test cmpl jmp mov dec (bad) sbb lea roll jecxz xor popa arpl mov mov iret mull sub ja das mov cli sbb cmp xchg xchg mov std inc jmp add loop inc mov pop jns js jge dec repz sbb ficoml lock test jbe loope test daa xchg push enter push dec cmpsb cmc mov test test mov dec ja loop jmp xchg mov jne mov push mov in ljmp jge enter mov mov fwait sub cmp mov aam in (bad) lods dec push mov loop sbb or movsl lods negl xchg (bad) aad jo outsb add jle loopne jmp mov add loope mov inc mov iret pop pop sub mov adc fdivrl ds pushf sub mov cltd sub lock xor popf ret jnp mov dec les push out xchg jg add les test scas jno xor add loope js add mov push out into cli clc out xchg and pop and push adc and push cmp sbb adc inc cmp add movsb test imul add (bad) loop mov inc lds xchg mov bound scas addr16 push push jl cmp cmp pop dec shll ja xchg mov mov adc imul outsl nop cmpsl movsb std jl bound mov xchg cwtl jb fadds (bad) lods inc test loope mov daa gs cli xor push push xchg out xchg mov in sbb je and je and insb std (bad) incl int3 int3 int3 int3 int3 int3 int3 sub push push push push push lea push push call mov add mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov movq mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movq movq mov mov mov movq movq mov movzbl movq movq mov xor movl movl movl movl movl movl movl movq mov mov movl mov lea movq mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor mov mov mov mov movzbl mov xor movq xor movq mov mov mov movq movq mov mov mov mov mov movl movl movq movb nopl mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je inc add cmp jl or jmp lea mov mov cmp jne pop pop pop lea movl pop add ret cmpl jl mov shr and mov mov shr and mov mov and mov mov mov shr shr and movzbl cmp jne cmp jae mov jmp add mov shl add mov mov sub cmp jl lea mov lea xchg mov lea mov lea mov mov mov mov mov mov sub jne xor movb cmpb jne nopw inc cmpb je lea add push push lea push call add movb push push call add lea push call mov pop mov xor pop pop movl pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call test jne movl or ret push mov push push xor lea lea movl mov push movl movl call inc lea add cmp jb xor lea data16 lea movl lea movl push mov movl call inc lea add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb xor lea nopl xorps movups push movl mov call inc add add cmp jb pop pop movl xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub push push movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl mov mov movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpb je mov sub je sub jne mov cmp jl cmp mov jne mov pop mov pop add ret cmpl jne cmpl mov jge mov mov pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushf pop mov xor push popf pushf pop xor mov push popf xor cmp setne pop ret int3 push push push push push push mov mov mov mov mov cpuid mov mov mov mov pop pop pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 sub push mov push mov movl movl movl cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb movb mov and inc shl mov movaps mov movups movaps movups movaps movups movaps movups cmp jb movzbl mov movzbl mov movzbl mov movzbl mov cmp jb movzwl mov mov shr and mov mov movzbl mov mov shr test je shl mov mov shr and mov mov movzbl mov jmp movl or or cmpl jb cmpl movzbl jb movzbl inc cmpb je cmp jle cmpl jl cltd sub sar mov xor pop mov pop add ret mov cmp cmovge mov jmp movl pop movl xor pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb je mov cmp ja jmp mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret mov mov mov mov mov mov mov ret xchg fcomip test out repnz adc test xor test push repz sub push mov push push mov cmpl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl movl jb push pushl lea push push call push pushl lea push push call add cmpl jb push pushl lea push push call add cmpl jb push pushl lea push push call add mov push cmp jb xor lea mov mov nopw mov mov and je shr and cmp jne cmp jne mov jmp cmp jne xor jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov jmp cmp jne cmp jne mov mov mov mov mov shr and and shr inc inc mov inc inc imul push push push imul imul cltd and add sar push push push call mov add mov inc add mov mov cmp jl jmp cmp jb push push call add mov or or cmp jb or lea lea or nop movzbl sub je sub jne movzwl jmp movzwl add sub jne mov cmp mov je cmp je mov mov cltd idivl mov test jg jmp mov or cmp jb movzbl cmp jb mov shr inc cmpb je cmp jle mov mov jmp mov movl cmp cmovge mov cmp jne movb jmp movl movl lea push push call mov add movups pop movaps movd psrldq psrldq movd movd cmpb je cmpl jb mov test je test je movb testb je movb cmpb jne cmpb je movl mov xor mov movzbl mov movzbl mov xor or mov mov xor mov or mov add mov mov movl cmp jge movups movups jmp lea movl mov lea push movl movl call add mov and cmp jne mov xor mov and and or or je inc add cmp jl jmp mov xor cmpl jne movl pop pop pop add ret xor pop pop pop add ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 sub lea push push push push call mov add add mov nopw mov test js movzbl shr movb movzbl shr movb movzbl shr movb movb add sub jne cmpb mov pop je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je movl movl movl cmpb je cmpl jne cmpl jne movl movl movl jmp movl movl movl cmpb je cmpl jne movl add ret movl add ret mov adc sub xchg iret xchg into fldl xchg or aaa fstps loopne xor mov repnz pop lahf or lret fs je lock sarb popf push arpl and repz pop xor jae jecxz arpl aas jno test sahf cmp (bad) xchg xor adc inc xchg xchg clc xor clc jb ss pop das xor or cltd jle push idivb (bad) jo das repnz mov fistl pop cmp xor inc jno xor popf push lret loope jl fstp mov jmp and add fmulp aam pop mov lods inc xchg aad xchg insl out es xor test cmp pop test test adc fdivrl jbe lret lcall repnz nop push int out repnz out ss cwtl jns pop ret mov in js xor (bad) adc jne add sub adc mov jno addl and (bad) xlat xchg ret data16 movsb dec nop clc mov sbb das push inc (bad) ret jae pop pop negl mov dec pop cmc loop ret shll gs fnstcw imul int test lock sti sbb outsl fwait hlt cmp xchg or dec mov inc sbb dec loop add sysret int3 inc and pop xchg test inc pop inc stc push ret scas loopne lods jae adc push out mov loopne pushw js mov imul lret aaa jno xlat push arpl sub cltd or sti imul mov imul inc les xchg stos aas xor pushf insb push pop fwait xchg pop lds es inc pop popa pop mov jle test add insl dec mov and inc ljmp fstps cltd fidivl and lret sbb ja aaa adc add stc nop pusha fsubrl inc ss (bad) mov ret xchg cmp adc push fwait in cmp and jecxz dec inc adc enter add jnp mov aam popf add jae enter inc push cmp dec fldcw ljmp cmp jmp cmpb pop inc jbe int out dec lds sub ja pop sub std cmc push (bad) in stos adc or fiaddl out jo fidivr inc stos (bad) dec inc leave xchg or int push pop mov sbb adc inc add pop shr cmp xchg dec mov (bad) stos xor dec lods sbb add subb xchg cmp add mov leave aaa add dec (bad) jae lea pop cmp mov (bad) mov mov pop mov mov outsl jnp and je lds insl jae std call ss jne repz mov cmpsb pop nop add mov cmp out mov push out adc in adc pop pop shrl cmp test cmpsb fisubrl adc rcll adc rcll push lods addl aam mov xchg push dec add xlat lods dec mov push cmp jnp cwtl xor stos sahf cld mov push sahf ds (bad) fcom pop call mov fcompl or mov mov and and cmp jne cmp jne mov ret xor ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov xor test jle push mov push mov push mov nopw mov mov shl test je mov movb inc cmp jl pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 movsl fcomp lret push add push aad in fsubrs mov pop clc aaa jne fldl and dec add lret sub js mov out mov inc inc xchg mov mov xor cld adc mov adc and insl stos ss sarb adc push add in jb sti insb and dec xchg xchg aas loop mov jge int3 jo (bad) ja push pop fdivs jmp das mov lcall jbe mov adc push movsb sub add daa (bad) sbb push in xchg dec sahf mov xor mov sub mov pop and out xchg hlt sahf sub inc pop jno in fidivr or cmp dec push cmp jns sti inc xchg loopne mov pushf cld push and scas addr16 inc jno test xor sbb add fstpl sahf fwait add jae mov add push in scas (bad) push mov test jne or pop ret push mov mov cmp je cmp je cmp jne movsbl push call add test je pop mov pop ret cmpb jne mov mov test je nopw cmp je mov inc test jne cmpb je mov cmp jle nopl cmp je inc cmp jl pop or pop ret pop inc pop ret cmp bnd bnd bnd jmp push jns push movsl adc adc mov xchg adc in aam cld fcoml mov adc pop or into push inc cmpsb lock inc mov push mov mov push mov add movzwl lea add movzwl imul add cmp je mov cmp jb mov add cmp jb add cmp jne xor pop pop ret mov jmp call test jne xor ret mov push mov mov jmp cmp je xor mov lock test jne xor pop ret mov pop ret call test je call jmp call push call pop test je xor ret call mov ret push call test pop setne ret call test jne xor ret call test jne call jmp mov ret call call mov ret push mov call test jne cmpl jne pushl mov push pushl call call pushl pushl call pop pop pop ret call test je push call pop ret call test je ret push call pop jmp push mov cmpl jne movb call call test jne xor pop ret call test jne push call pop jmp mov pop ret push mov sub cmpb je mov jmp push mov test je cmp jne call test je test jne push call pop test jne push call pop test je xor jmp mov lea push and mov push pop sub or ror xor mov mov mov movsl movsl movsl mov mov mov lea mov movsl movsl movsl pop movb mov pop mov pop ret push call int3 push push call andl mov cmp jne mov cmpl jne mov cmp jne mov mov sub push push call pop pop test je cmpl jl movl mov jmp mov mov xor cmpl sete mov ret mov movl xor call ret push mov call test je cmpb jne xor mov xchg pop ret push mov cmpb je cmpb jne pushl call pushl call pop pop mov pop ret push mov mov mov xor and pushl ror cmp jne call jmp push call pop neg pop sbb not and pop ret push mov pushl call neg pop sbb neg dec pop ret push jns cmpsb or xor jb xlat stc lods pop mov inc and mov or mov jne mov mul ret push mul mov mov mull add mov mul add pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub sbb not and mov and cmp bnd mov pop xchg mov mov bnd sub test jmp jmp call push call pop test je push call pop xor ret push call int3 push push push push push push call add push call mov test jne push call mov test je push push call push push mov call push push mov call mov test je test je test je andl mov push call call push call push mov call pop pop mov jmp xor push push push push call mov test je pop pop pop ret push call int3 push call mov test je push call ret push mov call mov mov inc mov mov mov mov mov mov mov call pop jmp push mov push call mov jmp push call pop cmpl je cmpl je mov mov mov mov mov jmp orl pop pop jmp push call ret mov test jne push mov mov xor and ror push mov call call pop ret push call pushl call ret push call ret push mov cmpl push jne mov mov pushl xor and ror push push mov call call test setne jmp call push pushl pushl call mov call test sete pop pop ret push push call xor mov mov mov cmp je mov call mov call mov add inc mov jmp mov mov movl call call ret mov mov test jne pushl push pushl pushl call ret push push call movb mov mov mov imul mov add mov andl mov dec mov test je sub mov mov call mov call jmp mov mov movl call call ret mov mov mov mov test jne pushl push push push call ret push push call xor mov mov mov cmp je sub mov mov call mov call inc jmp mov mov mov mov mov mov cmpl je movl mov ret call mov movl call ret push mov pop jmp push mov pushl call pop pop ret int3 int3 int3 int3 mov movsd jmp mov movsd jmp mov movsd movd and cmp jae cvtss2sd cmp jne movsd comisd jbe mov call comisd jae movsd comisd jb movdqa psllq psrlq cmp je movsd comisd ja xorpd comisd je push fstcw mov test pop jne mov call xor mov ret xorpd comisd je movsd movsd movd movdqa cmpeqsd movdqa pand por psrlq movdqa psubq movdqa psllq movdqa psubq movdqa psrlq pcmpgtd punpckldq pand pandn por pxor psubq pand pandn por movd cmp jle psllq pxor movd psrldq movd or je mov call movd psrldq movd ret mov call xor mov ret sub fstcw movzwl cmp je test jne fldcw mov movl movsd movsd mov call fstp add ret mov movsd jmp mov movsd jmp mov movsd movdqa psrldq movd and cmp jae cmp je movdqa psllq psrlq movsd comisd jbe cmp je mov call mov call jmp mov call mov call movsd comisd jae xorpd comisd je mov call mov call jmp movdqa cmp jne movsd comisd jb subpd movdqa psllq psrlq movd or je mov call comisd jae movsd comisd jb jmp mov xorps cvtsi2sd shr addsd test je xorps cvtsi2sd shr addsd mulsd addsd ret lea mov xorps cvtsi2sd xorps cvtsi2sd shr mulsd addsd addsd ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shld shl ret mov xor and shl ret xor xor ret int3 push push mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb neg neg sbb mov mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmp jae cmp jae shrd shr ret mov xor and shr ret xor xor ret int3 cmp jae cmp jae shrd sar ret mov sar and sar ret sar mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub and add sbb or pop jmp push jnp popf mov or fs loop cli mov repnz mov mov sub je sub je sub je sub je xor inc jmp call jmp call movzbl jmp pushl pushl call pop jmp cmpl setne movzbl push call pop pop ret push push call push call pop test jne xor jmp call mov mov mov andl cmpl je push call movl call test je call call call push push call pop pop test jne call test je push push call pop pop movl xor mov movl call test jne call mov cmpl je push call pop test je pushl push pushl mov mov call call incl xor inc call ret mov pushl call pop ret push push call mov test jg xor jmp dec mov call mov andl cmpl je push call call call call andl movl call push pushl call pop pop xor test setne mov call ret call pushl call pop ret push push call mov test jne cmp jg xor jmp andl cmp je cmp je mov jmp mov push push pushl call mov mov test je push push pushl call mov mov test je push push pushl call mov mov cmp jne test jne push push pushl call push push pushl call push push pushl call test je cmp jne push push pushl call mov mov test je push push pushl call mov jmp mov mov push pushl push pushl pushl pushl call add ret mov xor mov movl mov call ret push mov push mov test jne xor inc jmp pushl mov pushl pushl call call pop pop ret push mov cmpl jne call pushl pushl pushl call add pop ret push mov push call pushl call push call push call pop ret push mov sub push call test je push pop int mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov mov mov lea mov mov movl mov mov movl movl movl push pop imul movl push pop imul mov mov push pop shl mov mov push call mov pop ret push mov push call pop ret push jns cmp and push mov or cltd sti imul hlt adc sbb sbb sub fucomp (bad) mov fwait mov (bad) pop mov bound loopne (bad) xchg dec mov xchg xor sbb pushf mov insl lea pop jne into cmp xchg adc adc mov aam int3 imul mov imul xor and and mov push lcall push sahf mov push loopne adc (bad) sbb fcmove cmp iret push ss adc pop sbb inc xchg in adc push push adc xchg xlat jl popl mov sbb in push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push jns iret mov dec mov es ss mov push jge mov sbb mov andl movl movl ret int3 int3 scas mov mov pop jno push mov mov push mov lea movl push call testb pop je push push call pop pop mov pop pop ret push mov sub lea call push lea push call int3 push mov sub lea call push lea push call int3 push mov andl sub push xor inc or push call test je andl xor orl xor push push mov lea push cpuid mov pop mov mov mov xor mov mov mov mov xor mov xor mov mov xor mov xor inc push cpuid mov pop lea mov mov or or mov mov mov jne mov and cmp je cmp je cmp je cmp je cmp je cmp jne mov or mov jmp mov cmpl mov mov jl push pop xor push cpuid mov pop lea mov mov mov mov mov mov test je or mov jmp mov pop pop test je orl movl test je test je xor xgetbv mov mov mov mov and xor cmp jne test jne mov or movl mov test je or movl mov xor pop mov pop ret xor inc ret xor cmp setne ret push mov sub push push call test je mov int push call movl lea push push call add mov mov mov mov mov mov data16 data16 data16 data16 data16 data16 pushf popl mov mov lea mov movl mov push mov lea push push call mov add movl movl mov call push lea neg lea mov lea sbb mov inc call lea push call test jne test jne push call pop pop mov pop ret andl ret jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push pushl mov mov lea sub push push push mov xor xor push mov pushl mov movl mov lea mov bnd mov mov pop pop pop pop pop mov pop push bnd push mov sub andl lea andl push call mov xor mov call xor call xor lea push call mov lea xor xor xor mov pop ret mov push push mov mov cmp je test je not mov jmp call mov cmp jne mov jmp test jne or shl or mov not mov pop pop ret push call ret dec inc add cmp (bad) push out call mov orl mov call mov orl mov ret mov ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push push mov mov cmp jae push mov test je mov call call add cmp jb pop pop pop ret push mov push push mov push mov mov lea movb lea movl andl andl push push call pop pop mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push push pushl mov mov call movl mov pop mov pop ret push mov push pushl mov call movl mov pop pop ret push mov push pushl mov call movl mov pop pop ret push jns enter adc (bad) mov arpl mov aam xor mov sub lock mov addb mov mov pop pop ret sbb push in adc outsl mov adc out sti mov (bad) es push push bound fdivrl cmc in add adc add xchg rclb inc lock jne push mov push call add pop cmp jl pop mov pop ret push mov mov push mov mov test jne call jmp cmp jge imul add push call pop mov pop pop ret or lock jns push mov push call add pop cmp jl pop ret mov test je cmp jge imul add push call pop ret jmp push mov push call mov push push mov call mov pop pop test je push push call mov mov mov movl rep pop pop jmp call andl mov call mov mov test je push call pop mov mov pop pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg add jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov sub push mov push test jne call mov call jmp mov mov mov test jne mov cmp jl cmp jg sub jmp push mov cmp jae test jne push call pop test jne jmp mov testb je test jne mov sar mov call mov movzbl movzwl and jmp mov mov sar movzbl movswl shr and test je push mov mov movb pop jmp xor mov movb inc push pushl lea push push push lea push push push call add test jne mov jmp cmp movzbl je movzbl shl or pop pop pop mov pop ret push mov push mov xor push mov push mov lea movl movl mov mov mov mov mov mov call mov pop mov pop ret push mov push push mov push push push mov xor push lea mov mov mov mov mov call mov call mov test je mov push mov mov call mov call mov mov pop pop pop mov pop ret push fxch xor sub arpl mov mov je mov and mov mov push push mov push push mov xor push lea mov mov push movl call cmpl pop je pushl call pop andl movl mov mov pop pop mov pop ret push mov push mov push mov cmp je cmpl je pushl call pop andl test je cmpb push mov je inc cmpb jne sub inc push call mov pop test je push push push call add pop pop mov pop pop ret push mov push mov call testb je push push call pop pop mov pop pop ret push jns enter ror dec xchg pop mov in ljmp and mov in fisttp xchg insl pop imul (bad) mov push mov call xor lea push call mov mov test jne push call mov push call pop pop push lea movl call mov mov mov mov call mov call mov mov cmpb je mov mov mov call mov call lea call mov call ret dec hlt outsl push (bad) incb cmp jg push jle sti push pop out adc xchg andb clc mov out lds cmpsl jp mov cmp or insb mov jle outsb (bad) (bad) fild std adc adc outsl imul push cld js mov loop punpckhdq xchg mov xor pusha (bad) cld adcb cltd mov mov push push call pop pop test jne mov push mov push lea call cmpl je pushl push call pop pop test jne mov push lea call pop pop ret push jns xor sbb mov sbb mov in and xchg adc popf inc in push mov push push call mov pop test je pushl mov call jmp xor mov pop ret push mov cmpb jne push movb call pop mov mov pop ret push mov mov push mov test je mov push mov mov call mov call mov test je mov push mov mov call mov call pop pop pop ret push mov push push lea call push call andl pop lea call mov pop ret push mov push pushl pushl pushl call add pop ret push jns xor sbb popa cltd xor adc mov or xor mov push push lea call mov movl mov mov test je cmp je lea mov cmp jb mov incb mov lea call mov pop ret push mov push mov push mov test je push pushl mov mov push pushl call call mov add test jne pop pop pop pop ret push mov push mov mov test je decb mov test jg mov call mov test je mov call push push call pop pop pop pop ret push and push xchg pop lds in aam jo jb rol mov ret popf inc int loop inc stos in dec leave int3 out in push mov sub sbb ss lcall imul mov xor mov push mov lea push push call pop pop lea push push call pop pop push call lea push push call mov pop pop mov cmp jl jg cmp jb cmp jne cmp jne mov cmp jl mov xor pop call mov pop ret dec int3 es mov add push push lea push call mov mov mov pop ret push mov push push lea push call mov mov mov pop ret push jns cmp push xchg pop popf loopne push std cmpl dec jl mov dec lret clc addr16 push xor pop stos cltd dec ret push clc in nop lret or mov push push lea push call mov xor add pop adc sub sbb mov pop ret push mov mov mov push push mov push mov movsl movsl movsl movsl mov or test jns add adc add js mov mov xor cmp jl addl adc sub cmp jge mov mov mov cmp jge mov sub sbb add adc sub add jmp mov sub mov sbb sub mov mov cmp jl jg cmp jb or jne cmp jg mov mov mov pop pop mov pop pop ret push mov push push push mov push cmp jne mov test je push call push push push push push call mov pop mov imul mov pop mov jmp xor pop mov pop mov pop ret push mov pushl call pop ret push mov push push pushl call add pop ret push mov pushl call pop ret push jns cmpsb or scas mov jb push mov sub mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov xor xor cmp push push push pushl setne lea push pushl call mov mov test je lea lea cmp sbb and je cmp ja call mov mov test je movl jmp push call mov mov pop test je movl add mov mov jmp mov mov test je push push push pushl push pushl call test je push push pushl push pushl pushl call mov add test je mov test je mov test je cmp jg push pushl pushl push pushl pushl call add jmp lea lea cmp sbb and je cmp ja call mov test je movl jmp push call mov pop test je movl add jmp mov test je push push pushl pushl pushl pushl call add test je push push cmp jne push push push push push pushl call mov test je push call pop jmp pushl pushl jmp mov push call pop mov pushl call pop mov lea pop pop pop mov xor call mov pop ret push mov mov test je sub cmpl jne push call pop pop ret push mov push push mov push push mov xor push lea mov jmp mov inc push mov call mov test je mov call call mov cmp jb mov mov pop pop mov pop ret push mov mov test je pushl dec mov call mov mov pop ret push push call mov push push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push mov push call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor push push mov call xor mov xor pop ret push jns iret and xor sbb arpl fstl mov sub inc into pop push cltd pop mov in push mov xor je pushl mov pushl pushl pushl call call jmp push xor xor inc push mov mov lock push pop jmp test je cmp jne push call mov xor lock cmp jne mov pop pop pop pop ret pushl mov pushl push call call test jne xor xor xchg cmp je push call xor jmp push jns iret and xor sbb aam cld fmull (bad) sbb pop movsl pop jmp lock push testb lret sub xchg ss push rorl push inc jns jecxz imull and add push gs jbe cmp ja mov js aas push dec pop jo iret and push sub mov xchg mov push test sbb (bad) cmp inc test notb in cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret push jns iret and xor sbb aam enter sarl lea (bad) (bad) push cmp cmp add je xor add ja rolb mov jg xchg nop push clc movsl xchg scas dec lret idivl sbb jne adc dec sti sbb jge sti pop jb mov xchg sahf jecxz mov cmp (bad) and pop pop xor or mov xchg jmp dec stc mov fbld pop mov sub jmp xor lock mov mov cmp pop test jnp ss push mov call mov movl lea mov mov movl movl call test jns call test je push call movb mov pop ret push push mov xor push push lea push call add mov mov mov mov pop pop ret push mov lea push call lea pop jmp push xor push push push call add test jne call mov test jle movzwl or mov pop ret push mov cmpl je pushl call andl pop andl andl pop ret int3 int3 push mov mov push mov movl mov mov mov mov mov movl test je mov push push mov mov call call pop mov pop pop ret push mov mov push mov mov movl mov mov movl test je cmpb je mov push push mov mov call call pop mov pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov movl test je mov push push mov mov call call pop mov pop test je push call ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movl test je mov push push mov mov call call pop mov test je push call testb je push push call add mov pop pop ret int3 int3 int3 int3 int3 int3 push jns cmp dec sub test notl repnz inc imul popf xchg aam fldcw stc adc clc ss sub clc push pop pusha push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test scas add (bad) cmp inc adc test mov nop lods cmp dec inc (bad) dec lret jge fsubr mov dec xchg lds je (bad) (bad) xor es jge mov int3 ds cltd push movsl mov xchg dec jmp cmc mov sbb out stos adc int3 incl xchg mov cmpsb and inc scas jg (bad) cmc jne loopne outsb mov pop js fs pop inc xor (bad) push cmp adc cmp adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov movzbl mov mov test je imul cmp jle cmp jl btl jae rep mov mov ret btl jae movd pshufd add movups add and sub cmp jle lea lea nop movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea sub test jne jmp btl jae movd pshufd cmp jb movdqu movdqu add sub cmp jae test je lea movdqu movdqu mov mov ret test je mov inc sub test jne test je mov add sub test je lea lea mov mov add sub test jne mov mov ret int3 int3 int3 int3 int3 int3 push push mov mov mov mov mov add cmp jbe cmp jb cmp jb cmp jae btl jb jmp btl jae rep mov pop pop ret mov xor test jne btl jb btl jae test jne test jne bt jae mov sub lea mov lea bt jae movq sub lea movq lea test je bt jae movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea lea movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea jmp movdqa lea mov movdqa sub movdqa movdqa lea cmp movdqa palignr movdqa movdqa palignr movdqa movdqa palignr movdqa lea jge lea cmp jl movdqu sub lea movdqa lea jmp bt jae mov sub lea mov lea bt jae movq sub lea movq lea mov jmp test je mov mov dec add add test jne mov cmp jb shr rep and jmp jmp nop test test adc ds adc inc and pop pop ret nop mov mov mov pop pop ret nop mov mov mov mov mov pop pop ret lea mov mov mov mov mov mov mov pop pop ret nop lea lea cmp jb btl jb test je mov and sub mov mov dec dec sub jne cmp jb mov shr and sub sub std rep cld jmp nop xor test adc aas test adc inc and pop pop ret nop mov mov mov pop pop ret lea mov mov mov mov mov pop pop ret nop mov mov mov mov mov mov mov pop pop ret test je dec dec dec mov mov test jne cmp jb sub sub movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu movdqu sub test jne cmp jb sub sub movdqu movdqu movdqu movdqu sub test jne test je sub sub mov mov sub test jne test je sub sub mov mov sub jne mov pop pop ret jmp int3 int3 int3 mov and test jne mov and shr je lea mov movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa movdqa lea lea dec jne test je mov shr test je lea movdqu movdqu movdqu movdqu lea lea dec jne and je mov shr je mov mov add add sub jne mov and je mov mov inc inc dec jne lea lea mov pop pop ret lea mov mov sub sub push mov mov and je mov mov inc inc dec jne shr je mov mov lea lea dec jne pop jmp push mov push mov mov push sub je sub je sub je sub je mov sub je mov push cmp jb mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne push pop sub add add cmp jae add add cmp ja jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne xor mov pop jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg lea jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je jmp mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne mov cmp je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea jmp xor test jne movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je jmp mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg lea mov jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov mov movzbl movzbl sub je xor test setg xor lea je movzbl movzbl jmp mov movzbl mov movzbl jmp xor pop pop pop ret mov (bad) dec test adc push test adc dec test adc push test adc dec test adc push test adc dec test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc inc test adc dec test adc hlt mov xor dec sub fwait mov push or scas sbb popa aad out sub xchg arpl mov pop cltd mov out adc enter sub hlt mov rcr aam pusha jle pop mov push imul jns cmp aad cmpsb and pop pop daa pop daa jno sahf mov inc jno mov into and adc insl jns add inc xlat jp sub ror movsl push js push das call inc test rclb mov call pop ret push mov call mov test je mov cmp je mov test jne xor inc pop ret xor pop ret push mov mov mov push mov mov add test js mov mov mov add add pop pop ret push mov mov mov cmpl je cmpl je cmpl jne call andl jmp call cmpl jle call decl xor pop ret jmp call test setne ret call test je mov ret xor ret push mov sub mov lea andl xor mov mov mov mov mov inc movl mov mov mov mov lea mov pushl push pushl call mov mov mov mov mov pop ret push mov sub push cmpl jne mov mov mov xor inc jmp andl movl mov lea xor mov mov mov mov mov mov mov mov mov andl andl andl mov mov mov mov lea mov movl mov mov mov mov call mov mov mov call lea push mov pushl call pop pop andl cmpl je mov mov mov mov mov jmp mov mov mov pop mov pop ret push jns enter movsb loop aam cltd es mov mov add jae stc insb outsl inc cmp push mov dec jecxz xchg lods sti lahf cli repz (bad) ja hlt lds ja add dec bound out faddl cmp push outsb nop jno sti imul sub or mov repz xchg inc ret lret in push push mov add mov mov mov mov mov mov mov mov jmp pop mov pop ret push mov push push push push push mov mov movl push pushl pushl pushl call mov mov and mov mov mov mov mov mov pop pop pop mov pop ret push mov push cld mov mov xor call push push pushl pushl push pushl pushl pushl call add pop pop ret push mov mov push mov mov call mov mov call mov mov pop pop ret push mov push call mov cmp jne call lea mov mov pop pop ret call mov jmp mov cmp je mov cmpl jne jmp mov mov jmp call int3 push mov push push cld mov mov xor call mov mov and je mov movl xor inc jmp jmp push mov pushl mov pushl mov pushl push pushl mov pushl pushl call add mov cmpl jne pushl pushl call push push push push push lea push push call add mov mov mov mov jmp xor inc pop mov pop ret push jns cmp (bad) insl (bad) into and cmp in push xor jns popa mov out int inc and cmpsl jb ret mov mov test mov or test je mov xor mov test je mov add xor je sub je test jne sub jb push mov shl add mov shl add jmp pop add je mov add xor je sub jne pop ret sub jb mov xor mov add xor xor add and je mov xor je xor je shr xor je xor je jmp pop lea pop ret lea pop pop ret lea pop pop ret lea pop pop ret push mov push xor cmpl jge mov mov movzwl add test jne mov sub cmp je cmp jne cmp jne mov jmp xor jmp mov mov jmp movzwl cmp jne mov test je add lea test jne xor cmp jne mov movd jmp add movups pcmpistri jne lea jmp movzwl movd pcmpistri jae lea je add jmp mov pop pop ret push mov sub push mov push push push pop mov lea rep mov test je testb je mov sub push mov mov mov mov call call mov mov test je testb je movl lea push pushl pushl pushl call pop pop pop mov pop ret lods jecxz push jae xlat test cmc pop xchg fnstcw ret adc call mov test je mov call call call int3 push mov push mov cmpb je mov test je lea mov inc test jne sub push push lea push call mov pop test je pushl push push call mov mov add xor mov movb push call pop pop pop jmp mov mov mov movb pop pop ret push jns iret and dec mov sahf mov push inc jle cs daa ljmp insb jecxz adc jb movzbl mov shl or movd pshuflw movlhps mov mov or and shl sub movdqu pxor pcmpeqb pcmpeqb por pmovmskb and jne or add jmp bsf add movd xor cmp cmovne ret xor mov push mov shl mov test je mov add cmp je test je test jne or push mov shl push or mov mov mov mov xor add add xor xor xor xor add and jne and je and jne and jne pop pop pop xor ret lea pop ret mov cmp je test je cmp je test je shr cmp je test je cmp je test je jmp pop pop lea pop ret lea pop pop pop ret lea pop pop pop ret lea pop pop pop ret int3 int3 int3 int3 int3 push inc xor pop inc xor push mov sub push push push push cld pushl call add mov mov testl jne mov mov mov lea mov mov mov push call add or jle cmp je lea mov or je push push lea xor xor xor xor xor call pop pop mov or je js push pushl call add mov push call add lea push push call add lea push mov call mov mov mov xor xor xor xor xor call mov lea mov jmp mov jmp mov orl mov jmp push lea push push call add pop mov pop pop pop pop mov pop ret lea push pushl call add mov mov mov push mov push call add pop ret int3 int3 int3 int3 int3 push mov push push push push push push push pushl call pop pop pop pop mov pop ret mov testl mov je mov mov xor call push mov mov push mov push call add pop mov mov mov mov ret push push push mov push push push push pushl mov xor push lea mov mov mov mov cmp je cmpl je cmp jbe lea mov mov mov cmpl jne push mov call mov call jmp mov mov add pop pop pop ret xor mov cmpl jne mov mov cmp jne mov ret lea push push mov jmp lea push push mov mov mov mov mov push push push pop pop pop pop pop ret call ret push mov push push and add push mov mov mov mov sub cmpl mov jl movzwl movd pshuflw pshufd mov and cmp ja movups pxor pcmpeqw pcmpeqw por pmovmskb test jne push jmp cmp je add movzwl test jne xor cmp setne dec and jmp movzwl cmp je test je push pop add jmp bsf mov add jmp xor jmp mov mov pop mov pop ret int3 int3 int3 int3 mov mov push push push cmpl jb ja movzbl mov shl or je movd pshuflw movlhps pxor mov or movzbl add test je test jne movdqa pcmpeqb pmovmskb test jne mov movd mov and cmp ja movdqu pxor pcmpeqb pcmpeqb por pmovmskb add test je bsf sub add movzbl test je add cmp jne mov lea mov test jne and cmp ja movdqu movdqa pcmpeqb pcmpeqb pcmpeqb por pmovmskb test jne add add jmp bsf add add movzbl test je cmp jne add add jmp dec pop pop pop ret xor pop pop pop ret cmpb je mov mov and cmp ja movdqu jmp mov movzbl add pinsrb psrldq dec je test je jmp add movd mov and cmp jbe movzbl test je cmp je add jmp add pcmpistri ja jae sub add mov mov mov and cmp ja mov and cmp ja movdqu add add pcmpistri jno jns jmp movzbl test je cmp jne add add jmp mov mov test je mov test je mov mov mov add cmp je test je mov add cmp je test jne pop pop pop xor ret mov add cmp jne lea mov test je mov add cmp jne mov test je mov add cmp je jmp xor pop pop pop mov jmp lea pop pop pop ret mov pop pop pop ret enter mov push jno test data16 sbb jns orl outsl lods fidivl inc les je mov xor call pop mov ret push mov cmpb jne call call push call pop mov pop ret enter mov ret (bad) push mov push mov push mov mov cmp je mov add xor call mov mov add xor pop pop pop jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push push mov push movb movl mov lea xor push push mov mov call mov push call mov add testb jne mov lea mov mov mov cmp je lea lea mov lea mov mov test je lea call mov mov test js jle mov cmpl jne cmpl je push call add test je mov mov push pushl call call mov add mov mov mov call cmp je jmp mov mov cmp je mov jmp mov movl jmp test je mov jmp cmpl je push lea mov push mov call pushl push call add mov pop pop pop mov pop ret push lea mov push mov call mov lea push pushl call mov add mov mov call int3 push mov mov and push pop sub mov ror xor pop ret push mov push push push push mov jmp mov lea mov mov test je cmp je jmp mov push push push call mov test jne call cmp jne push push push call add test je push push push call add test je push push push call mov jmp xor test jne mov or xchg jmp mov mov xchg test je push call test jne add cmp jne xor pop pop pop mov pop ret mov jmp push jns xor sbb sbb jbe cmp ljmp lea frstor mov xchg out in pop mov add ja enter mov roll or mov mov lret mov lcall pop fdivrs cltd in lcall stos rorl jne cmp jae sbb mov push push push push push call mov add test je pushl mov call call pop pop ret pop pop jmp push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl test je mov call call jmp call pop pop ret push mov push push push push push call add mov pushl pushl test je mov call call jmp call pop pop ret push mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call pop pop ret mov mov push and xor push pop sub mov ror xor xor cmp sbb and add inc mov lea cmp jne pop ret push mov cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop pop ret push mov mov mov cmp jne xor pop ret add add mov cmp jne test je mov cmp jne add add test jne jmp sbb or pop ret push mov pushl call test je push mov push call mov pop test jne pop pop ret push mov mov test je cmp je push call pop pop ret push mov mov cmp je push mov test jne push call mov mov pop push push call pop pop push call pop pop ret call test je ret cmpl jne xor ret push push call pushl mov call mov pop cmp je test jne push pushl call pop pop test jne xor jmp push push push call mov pop pop test je push pushl call pop pop test jne xor push pushl call pop pop jmp mov xor push call pop pop push call pop mov pop ret cmpl jne xor ret push push call pushl mov call pop push mov call lea neg sbb and pop pop ret dec cmpl aad lods push out cld fcompl ljmp inc lock push int out les dec sub in inc or je push call orl pop mov ret int3 int3 int3 int3 push mov sub push push mov add mov mov push pushl mov mov call push push call inc sub adc test mov cli sbb cmpsb cmpsb pop inc mov mov push pushl mov call movl mov pop pop ret andl mov andl movl movl ret push mov mov add push lea push call neg pop sbb pop inc pop ret push push call mov mov andl mov mov mov mov pushl lea push call pop pop mov call mov mov call mov mov call mov call mov mov andl xor inc mov mov pushl pushl pushl pushl push call add mov andl jmp pushl call pop ret mov call andl mov mov cmpl jg movsbl jmp mov mov mov xor mov cmp jbe imul mov cmp mov jle mov cmp mov jg imul mov inc mov mov mov mov jmp inc mov cmp jb push push push push call add andl andl mov movl movl call mov call ret mov mov mov mov pushl call pop call mov mov call mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne mov cmpl jne test je pushl call pop test je cmpl setne movzbl push push call pop pop jmp mov ret push mov call call cmpl jne andl call call mov push push mov call call int3 push mov cmpl push mov je pushl pushl push pushl call add cmpl pushl jne push jmp pushl call push mov pushl pushl pushl push call mov inc push pushl mov mov pushl pushl pushl push pushl call add pop test je push push call pop pop ret push mov mov mov cmpl jne cmpl jne cmpl je cmpl je cmpl jne cmpl jne call xor inc mov mov pop ret xor pop ret push jns cmp jecxz sbb mov adc subb lea mov das movsb fimull or (bad) jb imul inc inc inc lods popf mov in test mov dec (bad) cmp push aaa xor fsubrs ljmp dec pop jno daa les int push int or nop iret out lahf out sbbb cltd jle sbb ljmp or push into ds cmp dec pop lods jo mov jb pop cmpsb push add or push push mov mov shll fidivrl in push adc aaa sub adc cli or push fwait mov sbb sub stc rclb adc dec mov mov fstps inc pop es dec mov mov mov lds sbb cmp cltd popa out mov mov addr16 mov push jg iret mov jl cmp ret dec fwait cmp xor lods sbb in jns sbb aaa icebp sbb stos xor dec repz xchg lcall mov jecxz pusha mov arpl mov (bad) fldl2t in (bad) hlt mov sbb pusha push std xor mov mov mov push bound sbb popa jno test lret in movsb cld jle push popa pusha aaa popf or dec and hlt into jo pop pop sahf jge aas inc pop repz nop pop sub movl test into mov daa or sub and ds outsb aas jge in xor fs inc xchg fwait fwait int test and leave sub je push daa xchg test movsl (bad) movsl jmp dec sbbb lcall jne movsl pop scas sub das inc jbe pop popa out mov mov cli (bad) enter and mov adc sbb rcr shlb scas xor aaa fisubr and ljmp out test pop loop fist insb outsl mov std mov add loopne push pop dec lret mov scas imul add cmp mov daa jb mov cmp pop fmul rol lods (bad) xor out push out pop out or push test movsb into loop popa clc insb adc std (bad) movsl push adc xor rcl or and pop aaa daa dec das mov ficomp testl adc pop notl mov dec sbb push xorb std inc jnp xor mov cmp add pop mov movsb outsb mov iret sub test sub sbb lods and rcrl and and jnp xor loopne or dec jnp movsb (bad) mov cmp pop mov pop fs push mov pop mov sbb pop inc cmp sar push pushf mov aaa movsb or xor or mov sub (bad) mov addl push push push mov cmpl je push push call mov cmpl je push call mov call cmp je cmpl je cmpl je pushl pushl push pushl pushl pushl push call add test jne cmpl je lea push lea push pushl pushl push call mov add mov cmp jae lea mov cmp jl cmp jg mov mov shl mov test je mov mov mov cmpb mov jne mov add add mov testb jne push pushl lea pushl push push push push pushl pushl pushl push call mov add mov mov inc add mov cmp jb pop pop pop mov pop ret call int3 push mov sub push push mov push test je mov xor test jle mov mov mov mov mov mov add mov mov mov mov mov mov test jle mov add mov mov pushl pushl push call add test jne mov mov dec add mov test mov mov jg jmp mov mov mov add mov sub jne pop pop mov pop mov pop ret call int3 push jns cmpsb or xor adc jg lods xor leave adc xchg enter outsl push push call mov mov cmpl jge mov jmp lea add andl mov push push push mov push call add sub je sub jne push lea push pushl call pop pop push pushl push call jmp lea push pushl call pop pop push pushl push call movl call ret xor inc ret mov call int3 push push call xor mov mov test je cmp je mov test jne cmp jge mov mov test js add add mov mov test jns testb je mov mov test je mov call call mov jmp call mov test je mov test je test je mov lea push push jmp testb je cmpl je test je pushl pushl push call add cmpl jne cmpl je lea push pushl call pop pop mov jmp cmp jne mov test je test je pushl lea push push call pop pop push push call add jmp cmp je test je testb push pop setne inc mov movl mov jmp xor inc ret mov jmp xor call ret push push call mov cmpl mov jg movsbl jmp mov mov call incl andl cmp je cmp jle mov cmp jge mov mov mov movl cmpl je mov mov push push mov pushl call jmp pushl call pop ret mov andl mov mov jmp call movl call cmp jne mov mov call ret mov call cmpl jle call decl ret push mov push push push pushl call pop call mov xor mov mov mov cmp jne cmpl je cmpl je mov and cmp jb testb jne testb je cmp je cmp jne push push pushl pushl call add jmp cmp jne mov and cmp jb cmp jne cmp jb testb je cmpl jne cmpl jb cmp jbe mov mov test je movzbl push pushl pushl push pushl mov pushl pushl push call call add jmp pushl pushl pushl push pushl pushl pushl push call add xor inc pop pop pop pop ret push mov mov push push push mov test je lea cmpb je testb mov je testb jne mov xor cmp je lea mov cmp jne test je mov cmp jne add add test jne mov jmp sbb or test je xor jmp testb je testb je mov testb je testb je testb je testb je xor inc mov jmp xor inc pop pop pop pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret push mov mov cmp je mov mov mov cmp jb cmp jbe push pop int pop ret mov and push pop sub xor ror xor mov ret push mov push mov cmpl jne cmpl je push call pop test je pushl push mov mov call call pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov xor push push or push cmp je mov lea mov lea mov lea sub and cmp je test je mov cmp jb mov add cmp jb push push call add test je testl je mov mov test je sub and cmp je mov cmp jb mov add cmp jb push push call add test je testl je mov mov cmp jne pop pop mov pop pop ret pop pop xor pop pop ret int3 int3 push mov push push push mov push sub push push push mov xor xor push lea mov mov mov mov mov mov test je xor mov mov pop pop pop pop mov pop ret mov mov mov cmp jb cmp jb mov mov cmp je movl xor mov mov cmp je cmp jae cmpl je mov mov jmp mov inc add cmp jbe test je mov cmp jb cmp jae mov and mov xor mov cmp jge mov mov mov cmp jne movl push call add test je pushl pushl push call add test je mov mov sub push push call add test je movl test jle mov mov xchg test jne cmp je mov lea test js cmp je sub jns mov test jns cmp jge inc mov lea jmp mov mov jmp mov test jle test js mov inc mov mov mov mov mov mov lea sub jne mov xor xchg jmp movl mov mov jmp mov mov xor cmpl sete mov ret mov movl mov mov mov jmp inc mov jmp mov push lea push push call test je cmpl je or mov mov pop pop pop pop mov pop ret mov mov push call add test je testb je mov mov sub push push call add test je cmpl jl push push mov push call add test je mov mov sub push push call add test je mov mov xchg test jne mov mov test jle lea cmp je dec sub test jg test jne cmp lea jg mov test js mov lea mov lea mov mov mov mov mov mov lea sub jne mov mov cmp jge inc mov jmp mov mov xor xchg mov mov mov pop pop pop pop mov pop ret push push mov xor push push push call add test je incl add add cmp jb mov jmp call xor pop pop ret push mov test je imul push lea push call decl sub sub jne pop mov pop ret int3 push push push mov mov mov push push push push push push pushl mov xor mov mov mov mov mov xor mov cmp je mov cmp je cmp jbe lea lea mov mov cmpl jne push mov call mov mov call jmp popl add pop pop pop ret mov testl mov je mov mov xor call push mov pushl pushl pushl call add pop mov mov mov mov ret mov push pushl call add mov mov pushl pushl pushl call add pop ret push push push push mov xor xor xor xor xor call pop pop pop pop ret nop mov mov mov push call xor xor xor xor xor jmp lea push mov push push push push push push push call pop pop pop pop ret mov push mov push push pushl call add pop ret push call mov test je mov call call call int3 lods int xor dec mov push jbe in push mov int3 aam push push mov (bad) in movsb jmp add dec push clc fisubrl int stos outsb push add cmp adc (bad) jo dec xor in cmp adc jb dec jmp cmc jne data16 cmp pusha bound jg adc sbb cmp lret mov and cmp lds cmp add lock lret cmp sbbl js ret ret ret pop jns out inc mov lods in test insl daa push cmp mov mov cmp mov pxor mov fwait jecxz aam out sub mov push gs std scas dec or inc push mulb sub jne in dec rcll mov in pop cld push gs sahf push dec sbb std jg lods xor aam jl xchg cmp xchg aaa mov inc ljmp adc adcl mov fldl2e push and mov push mov pushl mov call pop ret lods int xor pop jg and test cwtl std push out xor cmpsb xchg call out jecxz into mov loope mov scas and mov or movsb push mov cmp imul (bad) push pop xchg sub jmp nop add nop and decb add das mov icebp (bad) int3 pop iret cli jae bound loop adc idiv xor push push push push push call add ret lods int ljmp jno nop mov sub mov pop call test je push pop int push push mov push push call add push call push call pop ret mov push mov push mov push pushl mov xor call pop and mov mov ror mov pop pop pop ret jmp mov push mov push mov mov movb test je mov mov mov jmp mov test jne mov mov mov mov jmp push call lea mov push lea mov mov mov push mov call push pushl call mov add mov pop test jne or mov movb mov pop pop ret mov push mov mov test je mov mov mov movzwl jmp call mov movzwl and pop ret mov push mov mov test je mov cmpl jle push pushl pushl call jmp push pushl pushl call add pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov sub pushl lea call lea push push pushl call add cmpb je mov andl mov pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret mov push mov mov test je push pushl call pop pop pop ret mov mov movzwl and pop ret call imul add mov shr and mov ret mov push mov call mov mov pop ret mov push mov mov test je mov pop ret test je and je cmpl ja test jne cmpl ja xor pop ret mov push mov mov test je mov pop ret test je and je cmpl jb ja cmpl ja test jne cmpl jb ja cmpl ja xor pop ret mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov mov inc mov lea push movzbl push push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov jmp mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop jmp mov inc mov mov cmp je cmp je test jne push pop pushl lea call mov jmp test jne push pop mov inc mov mov xor or div mov mov mov lea cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or cmp je cmp jae mov or mov cmp jb jne cmp jbe or jmp imul add mov mov inc mov mov jmp pushl lea mov call mov test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov push pop test je cmp jl cmp jle call movl call xor mov test je mov mov pop mov pop mov pop ret push pushl lea call mov xor mov mov jmp mov movzwl add push push mov call pop pop test jne xor cmp setne cmp jne or jmp cmp jne mov movzwl add mov jmp mov mov movl push pop push pop test je cmp jne cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or test je test jne movl jmp movzwl add mov cmp je cmp je test jne movl push lea call mov jmp test jne mov movzwl add mov or xor divl mov push pop cmp jb push pop cmp jae movzwl sub jmp mov cmp jae mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jb add cmp jae movzwl sub jmp mov cmp jae movzwl sub jmp or cmp jne push pop cmp ja push pop cmp jbe lea cmp ja lea cmp movzwl ja sub add jmp or cmp je cmp jae mov or cmp jb jne cmp jbe or jmp imul add mov movzwl add mov jmp push lea call test jne mov xor mov jmp mov push push call pop pop test je call movl test jne or jmp test je mov jmp mov jmp test je neg mov cmpb pop je mov andl jmp mov push mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov mov test je mov mov mov mov pop pop mov pop ret push pushl lea call xor mov mov mov mov jmp mov mov inc mov lea push movzbl push push mov mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne mov mov inc mov mov mov jmp mov mov push pop test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or test je test jne push pop mov jmp mov inc mov mov cmp je cmp je test jne movl pushl lea call mov mov jmp test jne mov mov inc mov mov mov jmp mov cltd mov mov push push push push mov call mov mov mov xor mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov mov or mov cmp jb ja cmp jb cmp jne cmp jne cmp jb ja cmp jbe or mov jmp push push pushl pushl call add mov mov adc mov inc mov mov jmp pushl lea call mov test jne mov mov xor mov jmp mov push push push call add test je call movl mov test jne or or jmp test je xor mov jmp or mov mov jmp testb je neg adc neg cmpb pop je mov andl jmp mov push mov decl mov mov test je cmp je call movl call pop ret mov push mov addl mov mov test je cmp je call movl call pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret mov push mov push push pushl push push mov pushl pushl push call add push call add mov pop ret lods int xor pop pop data16 or sbb cld push pop bound dec stos lahf and in push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop test jl jg cmp ja imul mov xor inc mov pop mov pop ret mov push mov push push push mov test jne call movl call xor jmp cmpl jne andl lea andl push push call mov mov sub push push sbb push push call mov pop cmp jl jg cmp ja imul mov xor mov inc mov pop mov pop ret mov push mov push push andl lea push push call pop pop cmp je or jmp mov mov test je mov mov pop ret mov push mov sub xor push lea stos push stos stos stos lea push call pop pop pop cmp je or mov jmp mov mov mov test je mov mov mov pop ret mov push mov pop jmp mov push mov pop jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov xor and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns mov jmp mov cmp je mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop mov jmp mov push mov sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp lods int xor dec mov push jbe in push popl pusha aaa xchg clc cltd xorb (bad) xchg into inc push xor pop imul sbb push (bad) fdivs fadds movsb outsl jae sub std adc es cli cmp sarb insb aam sub aas stc push lods dec push dec mov fbld xchg fisubl add cmp lcall idivb xor mov movsl xchg inc sbb cmp dec es or mov insb push jb (bad) (bad) xor (bad) lret adc stc pop jle int3 test ds ret faddl cmp lock jo movlps (bad) pop aam mov dec imul push jnp loopne cmp sarl lret mov ret std test addr16 push enter test (bad) loope fsts cli outsl sbb into inc (bad) stc mov aam stc add adc or fsubl popa (bad) sti dec jbe lret cwtl jp adc xchg movsb push dec mov pop mov fsts dec or sbb pop xor mov sbb push dec icebp arpl push stos adc jle jb jnp mov mov push lds js push scas aam shlb push movsl mov fdiv jae add in sub mov xor mov cmpl mov push mov mov jne call movl call or jmp test je test je push push pushl lea call mov lea xor xor stos stos stos stos mov mov and mov or mov mov mov jne mov test jne movb pushl lea mov lea push pushl lea pushl push push lea call lea call mov test je mov and or je test jne test jne mov cmp jne test js cmp jbe jmp mov or je test je test jns xor mov jmp mov cmp je xor mov lea call cmpb je mov andl pop mov pop mov xor pop call mov pop ret test jne or jmp mov cmp jne push pop xor mov jmp lods int xor and mov jecxz stos shr push cwtl std jns cmpsb lea stos sbb cltd xor inc loop inc cmp inc add push sub push dec add ja int3 adc lock dec bound notl jo addps arpl adc enter cmpsl push dec push mov sbb out xor cmp jmp mov push mov cmpl jne call movl call or pop ret push mov test je cmpl jbe pushl pushl pushl pushl push pushl pushl call add test jns xor mov cmp jne call movl jmp call movl call or pop pop ret movsl xchg mov in (bad) dec cs mov stc push cwtl mov mov push mov push or xor push mov div push and mov cmp jae call movl xor jmp push xor add cmp jne cmp jbe cmp ja mov jmp push call mov pop test je lea push lea call mov mov mov push call pop mov pop pop pop mov pop ret mov push mov mov dec sub je sub je sub je cmpl je mov cmp je cmp je xor jmp mov xor test sete pop ret mov pop ret xor pop ret mov push mov mov dec sub je sub je sub je cmpl je mov xor and mov or jne mov cmpw je cmpw jne mov xor cmp sete pop ret mov pop ret xor pop ret mov push mov push mov call test jne add jmp add pop pop ret mov push mov push push mov push lea mov test jne mov call mov dec add mov mov test jg test je xor mov divl dec add mov mov cmp jle cmpb sete dec and add sub add mov mov decl jmp mov sub mov inc pop mov pop pop pop ret lods int xor jle and mov push cwtl js push lea adc movsb mov pushl mov mov movd or mov adc mov mov leave fsubrl andb pop lcall and fs stc and dec sti test pop (bad) inc sbb je push iret outsb cltd bound sbb in cmpsl adc inc jne insl jae repz mov cld fisttpll xchg push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push mov mov push pushl call cmpl je inc cmp jl pop pop pop ret mov push mov push xor cmp jle push movsbw push mov mov push push call cmpl je inc cmp jl pop pop pop pop ret mov push mov push xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push xor mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push mov call mov mov mov mov mov mov mov mov mov mov mov mov mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov push pushl mov pushl pushl pushl pushl pushl call andl call mov mov pop pop ret mov push mov pushl call andl pop pop ret mov push mov push mov pushl call mov andl pop mov mov mov andl pop pop ret mov push mov sub mov xor mov push mov push mov mov push call mov mov pop lea pushl call mov lea mov mov mov pushl lea push mov pushl mov pushl pushl lea push call lea call lea mov call cmpb je mov andl push pushl call pop pop mov mov pop xor pop call mov pop ret mov push mov mov mov push mov mov mov mov jmp cmp je inc mov test jne mov inc test je jmp cmp je cmp je inc mov test jne mov dec cmpb je cmp jne dec mov inc inc mov test jne pop pop ret mov push mov mov lea cmp ja movsbl movzbl and jmp xor mov movzbl shr pop ret lods int xor imul in pop sbb lcall repz cmp add dec xchg adc or jecxz add mov lea cmp ja movzwl movzbl and jmp xor imul mov movzbl shr pop ret lods int xor imul xchg stos sbb bound stos addr16 repnz cmp jmp or sbb mov cmp (bad) fidivrl mov push mov movsbl push call cmp jmp inc movzbl push call test pop jne movsbl push call pop cmp jne add mov mov mov mov mov mov mov inc mov mov mov mov inc test jne pop pop ret mov push mov push push push mov lea push push push mov mov andl mov andl dec push call mov add mov mov cmpl je mov cmp jb mov mov jmp xor cmpl jne test je mov pop pop pop mov pop ret lods int xor ficoml adc xor adc sbb popl arpl shll cld lret sbb in sub bound push mov test adc inc inc add icebp (bad) fisub mov mov xor outsl mov cltd inc popa in inc xor pop mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea ret adc mov test adc mov test adc mov push mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl mov call test je incl cmpl jne mov pop pop ret fisub test adc movsb test adc movsb test adc movsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp incl cmp jl pushl movzbl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov mov mov test jne incl incl cmpl jne mov pop pop ret lea push movsl test adc movsl test adc movsl test adc movsl test adc call icebp lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl mov call test je incl cmpl jne mov pop pop ret lea and test adc cmpsb test adc cmpsb test adc cmpsb test mov lea call test jne or pop ret push xor cmp jne call movl call or jmp mov mov jmp addl cmp jl pushl movzwl mov push call mov cmp je cmp ja jmp mov call jmp orl mov mov mov mov mov jmp mov call jmp mov call jmp mov jmp mov call jmp mov call jmp mov call test je mov movzwl mov test jne addl incl cmpl jne mov pop pop ret mov push cmpsl test adc cmpsl test adc cmpsl test adc cmpsl test adc mov call orl lds in sbb (bad) push lcall mov stc push mov sub cmp roll push sub cli mov push movzwl sub je sub je sub je dec sub je sub jne orl jmp orl jmp orl jmp orl jmp orl mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret call test jne call movl call xor ret mov ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret mov push push mov call test jne pop ret lea push movzbl lea push call mov pop ret scas aas iret jg outsl ja in push jle jl mov lahf lret subl call icebp push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov push mov push mov mov mov movb movzbl mov mov test je lea push push lea call mov mov mov lea cmpb mov jne call movl call xor jmp mov pop pop ret mov sbb jno mov jmp mov mov jl (bad) into lock andl xor je lea push call ret addl mov mov mov test jns orl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret mov cmp jne mov and or jne movl jmp cmp jne mov push pop and or jne mov call movl call xor ret cmpl jne movsbl cmp jg je cmp je cmp je cmp je cmp jne mov cmpb jne inc movl mov jmp movl jmp movl jmp movl jmp mov mov cmp jne cmpb jne lea movl mov jmp cmp jne cmpb jne lea movl mov jmp cmp je cmp je cmp je cmp je cmp je cmp jne movl jmp movl jmp cmp je cmp je cmp je cmp jne movl jmp movl jmp movl jmp mov cmpb jne inc movl mov jmp movl mov ret adc or movsl sbb pusha sarb std and inc lea das aad push es xchg test inc repz ret dec sbb movsb outsl mov mov mov es scas cmp xlat mov xchg daa dec ljmp das mov mov dec (bad) mov push adc and ljmp cmp sub ss or cmp pop lret push and mov jnp (bad) inc xor and dec lea dec pop (bad) mov pop jge adc gs movsb jmp mov (bad) in sbb pusha xor add lret mov cmpsl imul lahf or shrb xor push ficomp test ja sub cmp xchg jno xchg mov pop sbb fist pop std icebp mov and jne in inc ret stc or or fwait mov out rcll and lods adc sbb jns pop dec cwtl (bad) fnstenv ljmp push adc fldl push nop clc mov movsb mov push inc loop (bad) push dec icebp cmp repz jle jae ret pop in movsb inc cld daa pop mov cwtl ret jg daa int scas lea push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov push push push mov xor inc xor movsbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmpb je mov jmp mov xor push mov mov mov mov shr test je mov shr test je movb jmp test je movb jmp mov shr test je movb mov mov cmp je cmp jne mov shr test jne xor cmp je cmp je xor jmp mov test jne test je movb cmp je cmp je xor jmp mov test sete dec and add mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add mov pop pop pop mov pop ret mov push mov sub mov xor mov push push mov xor push pop push movzwl pop cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne mov call test jne xor jmp push push jmp sub je sub je dec sub jne push mov call jmp mov call jmp cmp jg je cmp jle cmp je cmp je cmp jne mov call jmp mov call jmp orl push push mov call jmp mov call jmp mov call jmp sub je dec sub je sub jne push jmp cmp jne mov xor push mov mov shr inc mov push pop test je mov shr test je push pop mov jmp test je push jmp mov shr test je mov mov movzwl cmp je push pop cmp jne mov shr test je mov jmp xor cmp je push pop cmp je xor jmp mov push pop test jne test je push pop mov cmp je push pop cmp je xor jmp mov test sete dec and add cbtw mov add mov sub sub test jne lea push push lea push push call add pushl lea push push lea lea push call mov lea mov shr test je shr test jne push push lea push push call add push mov call cmpl jl mov shr test je push push lea push push call add pop mov mov pop xor pop call mov pop ret cmpb je lea push call ret addl mov mov mov test jns orl negl mov ret cmpw je lea push call ret addl mov mov mov test jns orl negl mov ret mov push mov mov cmp ja jmp push pop pop ret xor inc pop ret push jmp push jmp xor pop ret mov enter int test adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc mov adc call mov push addl mov mov test je mov test je pushl movzbl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push push mov push addl mov mov test je mov test je pushl movzwl push pushl pushl call add mov test movzwl je shr mov movb jmp mov jmp movl movl movb pop pop mov pop ret mov push mov push push push mov push orl mov test jns mov cmp je cmp je movl jmp movl jmp jne mov cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop mov cmp je cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne movb lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push push push push mov push pop push orl mov pop test jns movzwl cmp je cmp je movl jmp movl jmp jne movzwl cmp je cmp jne movl mov lea push mov mov add push call test jne mov call sub mov mov test jne mov andl andl mov addl mov mov mov mov mov mov call mov mov test jne mov pushl movsbl pushl pushl pushl push push mov call push mov call push lea push push call mov add shr pop test je cmpl jne pushl pushl call pop pop movzwl push pop cmp je push pop cmp jne mov shr test jne pushl pushl call pop pop mov cmpb jne orl inc mov mov mov cmp je cmp je cmp je cmp jne push pop mov lea mov inc test jne sub mov pop mov pop mov pop ret mov push mov push pushl movzbl push pushl pushl call add lea test je addl mov push mov movzwl test jne mov push mov call push lea push push call add pop test je movb jmp mov test jne mov addl mov mov mov movl mov test je mov mov mov pop pop ret lods int xor loopne pop stc loop sub stc ljmp sar dec jl mov subl mov push cmpsl ficomp xchg add mov outsb test xor pop sbb mov sbb imul cmp mov jne mov cmc push aad add ret cmc dec jmp in aam popa mull inc repz lods sarb xor add ljmp or movsb and lahf insl mov push mov push push mov pushl call pop mov mov sub je sub je dec sub je sub je call movl call xor jmp mov addl shr test mov mov mov jmp mov addl shr test mov je mov jmp mov xor jmp mov addl shr test mov je movswl jmp movzwl jmp mov addl shr test mov je movsbl jmp movzbl cltd mov push mov mov shr test je test jg jl test jae neg adc neg or mov cmpl pop jge movl jmp andl mov cmp jle mov mov or jne andl pushl pushl cmp jne push push mov call jmp push mov call mov shr test je cmpl je mov cmpb je decl mov movb incl mov pop pop pop ret mov push mov push addl mov mov call test jne call movl call xor jmp pushl call pop sub je sub je dec sub je sub jne mov cltd mov mov jmp mov mov jmp mov mov jmp mov mov movb mov pop pop ret mov mov shr test je or mov push push call ret dec iret mov adc push dec rcll xchg lods pusha rcll loope call mov push addl mov mov mov mov cmp jne mov pushl movzbl push pushl pushl call add test je test jne movl push pushl movb call jmp test jne movl push pushl call pop pop pop mov mov pop pop ret mov push push mov push addl mov mov mov mov cmp jne mov pushl movzwl push pushl pushl call add test je test jne movl push pushl movb call pop pop jmp test jne movl push push mov call pop mov mov pop pop ret mov push mov push push mov xor mov cmp jle push mov test je movzbl mov mov mov mov test je inc inc inc cmp jl pop pop mov pop pop ret mov test jne call movl call xor ret push call pop ret movsl pop daa sub cmp sub push mov loope (bad) fisubr mov mov loopne std popa dec xor sbb xchg (bad) mov push mov push mov mov push mov shr test jne push call mov mov pop cmp je cmp je and mov imul sar add jmp mov cmpb jne cmp je cmp je mov and imul sar add testb je call movl call xor jmp mov pop pop ret mov push mov mov mov shr test je mov cmpl je pushl movsbl push call pop pop cmp jne mov orl jmp mov incl pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov incl mov pop ret mov push mov mov mov mov cmp mov jne cmpb je incl jmp orl mov mov jmp incl mov incl mov mov mov mov mov addl mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push cmpb je mov test jle mov xor test je movzwl lea andl push push lea push lea push call add test jne cmp je pushl lea push pushl lea push lea call inc cmp jne jmp orl jmp pushl lea push pushl lea pushl call mov mov pop pop xor pop call mov pop ret lods int xor jle adc cmpsl lods aad jo mov add mov inc cmp xchg sbb addr16 xchg dec lret cmp les pushw and lods clc inc sub mov xlat subb add subb cmp and in (bad) stos js adc lds inc (bad) loopne mov or adc ss and int3 insl inc test (bad) stc dec cs in sub call in push push push mov mov mov shr test je mov cmpl jne mov mov add jmp mov push mov push mov add mov mov andl mov cmp je mov push movzbl mov push call mov cmpl jne cmpl jne push push mov call mov inc cmp jne mov cmpl jne test je mov pop pop pop mov pop ret lods int xor lret jl pop pop in sarb ret sbb mov pop sub push fcoml or push sub jnp inc loop dec push in test or inc cmc mov lods fs cmp and xlat es fcmovbe jno fisubrl lods adc int3 add sub (bad) loop jnp or sub clc icebp mov ja or xchg and lods xor dec inc out (bad) cwtl xor sbb je mov xchg add sahf mov pop jge sub testl jbe into mov dec mov mov and inc rclb push aad inc cmp (bad) clc lret lods xlat je lahf mov out gs frstor popa or cmpsb cmp push dec mov hlt jge or insl inc add cmp repnz clc jno and aam pop imul lret xor xchg and cmpsb mov lock mov mov push mov sub mov mov mov mov mov mov mov mov mov mov mov mov test jne call movl call or jmp test je lea mov lea mov lea mov lea mov lea mov lea push push call pop pop mov pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret lods int xor and push je or push add jae aad outsl mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret mov push mov mov orl mov orl mov mov and or andl mov pop ret lods int xor jecxz or mov mov (bad) scas (bad) incl je inc mov mov les mov push and add dec push clc jne sti outsb addr16 push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov orl orl pop pop ret mov push mov xor cmp push mov setne cltd shl xor mov or and or mov mov orl mov andl and or mov pop pop ret mov push mov mov movzbl shl lea shl and or mov and or mov mov xor pop ret lods int xor jecxz or lods repz stc lcall or cmp add into mov les xor and jno aad xchg inc push jp or test ds push fsubrl insl or mov or jecxz lcall cmp ljmp js add scas sub dec mov add sbb mov pop cmp (bad) movsb cld pop pop mov lahf insl movsl pop cmp push mov sub mov xor mov push mov test jne call movl call or jmp cmpl je push mov cmp jne mov lea mov inc test jne sub pushl lea call pushl lea mov mov lea lea mov push pushl lea pushl pushl push call lea call cmpb pop je mov andl mov xor pop call mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret lods int xor (bad) insl mov pop aad rorb imul pop xor or lods mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov push push mov mov lea push pushl movb call pop pop mov pop ret mov push mov pushl mov pushl pushl pushl call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub mov xor mov mov push mov test je test jne call movl call xor inc jmp lea push lea push push call push lea push push call add mov pop test je mov or jne mov mov xor call mov pop ret mov push mov sub push mov mov push call test jne push pop jmp mov mov mov mov push mov call mov lea mov lea mov mov jmp mov call push mov movzbl push push call add test jne mov mov cmp sete mov cmp je cmp jne mov call mov mov cmp je cmp je cmp je cmp je xor mov cmp jne mov mov mov mov call mov cmp je cmp je pushl mov call mov jmp mov movb call mov mov mov mov mov mov mov mov lea cmp jne movb mov call mov mov cmp je mov xor cmp sete dec and add mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc incl mov call mov mov mov jmp mov push pop mov mov mov cmp jne mov call mov mov mov lea cmp jne cmp jne mov movb mov dec call mov mov cmp je mov mov mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp ja lea movb cmp je mov inc mov call mov mov mov jmp xor cmpb jne lea call test je xor cmp sete dec and add jmp pushl mov call mov mov mov mov mov call mov mov cmp je cmp je cmp je cmp jne mov jmp cmpb sete test je mov call mov cmp mov sete cmp je cmp jne mov call mov mov mov cmp jne movb mov call mov mov cmp je mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae imul movb add cmp jg mov call mov mov jmp mov mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp mov sub cmp ja movsbl sub jmp or cmp jae mov call mov mov jmp cmpb je neg mov test jne lea call test je mov call mov pushl mov call mov lea cmp je cmpb jne dec cmp jne cmp je cmp jg cmp jl mov xor test sete dec and inc imul add cmp jle push jmp push jmp cmp jge push jmp sub mov xor mov test setne jmp push pop jmp pushl lea pushl push push call jmp pushl lea pushl push push call add pop pop pop mov pop ret mov push mov sub push mov lea push xor mov push mov mov mov mov mov mov cmp je cmp jne mov call mov mov inc mov mov cmp jne push mov call mov mov mov mov mov call mov mov cmp je cmp jne mov call inc mov cmp jne push mov call push pop pop pop pop mov pop ret lea call push jmp lea call xor test sete lea jmp mov push mov sub push push mov lea push mov xor mov mov mov mov cmp je cmp jne mov call inc mov cmp jne push mov call mov mov mov mov mov call mov cmp je lea call movzbl neg sbb and add jmp lea call push jmp mov call push push mov call pop pop test je push jmp push push call pop pop test je push movzbl mov pop push call mov jmp cmpb je mov test je movsbl lea cmp jbe lea cmp jbe lea cmp jbe cmp jne mov call mov cmp jne cmpb jne push pop pop pop pop mov pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret mov push mov push push xor push mov mov mov cmp je cmp jne mov call inc mov cmp jne mov pop pop mov pop pop ret lods int xor push sbb push jecxz pusha rcr in int cmp mov sub maxps push iret pop nop loope mov pop fsubl aas add nop mov (bad) and cmp jnp sub ja ror push add xor mov mov test adc aam jns adc sbb cmp sbb addr16 mov test int3 mov clc inc sbb (bad) and pusha (bad) int out xor add or jl sub aaa cs arpl scas cltd cmp adc mov test js mov xchg fstps int3 mov (bad) addr16 add sarb mov dec jmp mov fcom outsl faddl iret test adc iret test adc iret test adc iret test adc iret test mov mov cmp ja jmp pushl pushl call pop pop pop ret pushl pushl call jmp mov pushl movzbl push call pop pop xor pop ret mov pushl movzbl push call jmp mov pushl movzbl push call jmp mov pushl movzbl push call jmp pushl call jmp pushl push call pop pop xor inc pop ret mov pushl movzbl push call pop pop push pop pop ret mov pushl movzbl push call pop pop push jmp mov adc shrb adc shrb adc shrb adc shrb adc shrb mov sub lea push push call test je mov test je cmp jl cmp jle call movl call xor mov mov jmp push pushl lea call xor lea mov mov mov mov mov mov call mov lea push push movzbl push jmp lea call mov lea push push movzbl push mov call add test jne cmp setne mov cmp jne or mov jmp cmp jne lea call mov mov or mov test je cmp jne mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov test je test jne push pop jmp lea call mov cmp je cmp je test jne push pop pushl lea call jmp test jne push pop lea call mov or mov cltd push push push push mov mov call mov mov mov mov mov mov mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp mov sub cmp ja movsbl add jmp or mov cmp je cmp jae mov or cmp jb mov ja cmp jb cmp jne cmp jne xor cmp jb ja cmp jbe or jmp push push pushl pushl call add mov mov adc lea call mov mov jmp pushl lea call test jne pushl lea pushl call xor mov mov jmp mov push push push call add test je call movl test jne or mov mov jmp test je andl mov jmp mov mov jmp test je neg adc neg mov cmpb pop je mov andl xor mov test je mov or jne mov mov mov pop pop mov pop ret lods int xor fisubrl adc dec mov lods out adc sbb sbb clc lock mov lock (bad) xor add lock inc mov idiv out imul rcrl mov add cmp mov cli adc adc fsubrp pop jo dec mov lock ficoml inc mov push mov sub fldz lea push push sub movb mov lea mov fstpl push pushl lea pushl push push call add pushl call add cmpb je cmp je cmpb je mov jmp lea mov push call jmp xor pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call movb call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne mov test je mov mov mov inc dec mov mov mov mov add adc jmp cmp je jmp mov lea push call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov movb incl mov pop pop pop mov pop ret mov push mov sub push push mov xor push cmp jne addl mov mov test jne call movl call xor jmp mov and or je lea mov mov jmp or test jne mov and or je lea call xor mov call movl jmp cmpl mov mov mov mov mov mov je cmp je lea mov xor xor mov or mov mov je cmp jne cmp je lea call push pushl mov mov call test je cmpb jne cmpl je pushl lea mov push lea push push push call test je mov mov add adc jmp cmp je jmp pushl lea call mov mov mov or je cmpl jne cmp jne cmp je mov and or je cmpb jne cmpl je mov xor mov incl mov pop pop pop mov pop ret mov push mov push mov call mov cmp je pushl movzbl push push call add test jne mov pop pop ret mov push mov addl mov mov test jne call movl call xor jmp mov incl mov mov mov pop ret mov push mov addl mov mov test jne call movl call xor jmp incl mov mov mov mov mov mov pop ret mov push mov mov mov push xor push mov lea mov mov mov push mov xor pop mov rep pop mov mov mov mov mov mov mov mov mov pop pop ret lods int xor pop sub (bad) lods jmp inc ret lret sub mov jp mov add or jecxz pop ret pop andl inc inc add lock bound repz imulb cwtl andb insb int (bad) hlt shll push das aaa sub jnp (bad) mov test (bad) ljmp icebp mov mov movzbl push call mov movb mov mov pushl pushl call pop ret lods int iret and mov imul cltd cmpsl sub xorl jp mov mov push or xor jns cmp jne clc inc inc insl mov (bad) cli bound and fstpt jo ds in pop sbb data16 adc outsl xor popa arpl push dec test and cmp ret gs mov push add jg push jae lea cmpsl inc inc mov jl (bad) sbbl sub push (bad) push inc jp outsb and div js ficompl mov xorl mov add or data16 push lcall in fistp das addl adc pop or in icebp fld fisub sahf out mov sbb (bad) iret sbb in xchg pushf lahf lret iret cmp into fwait pop ds cmpb je mov ret push push push push push call int3 mov push int sub lods enter mov sar test pusha fnop aam pop push push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl or mov pop ret lods int xor aam popf into les cmc lcall xchg cmp pcmpeqw adc ret (bad) or out lret jno lds sti dec rolb dec fnsave adc in adcb push xchg pop push add in aaa fwait mov lods cmp jl jbe loope arpl mov push rcl roll (bad) or dec sbb lcall adc (bad) cmp adc dec pop inc and iret adc or es in dec imul inc je mov aam lds in comiss xor lahf (bad) mov dec scas cmp inc fwait dec gs std cmpsb scas or fnstenv and pop inc inc cld xchg mov mov jae mov scas sub pop push adc sti pop and adc mov into mov mov out xor mov fnstsw inc dec pop or dec cmp add or mov ret cmpsb mov aas lods lahf ret loopne sar mov push mov (bad) jb jp dec cmp je mov pop jno in fcoms out mov movsb mov dec fmul mov pop inc lahf jae pop insl mov xor scas imul sbb les cmp and jg shlb stc in cmpsl mov ret and jecxz rcrb das lds ficompl mov in ds icebp push adc mov and add push (bad) xchg push loope pusha pusha pushf jne cli cmp mov ds add xchg adc cmc lds mov repnz cmp (bad) lods inc jmp insl fadds adc and je ljmp add enter xchg arpl std sahf jne out cmc mov enter arpl xchg inc test test rcr nop outsb pop outsb mov stos lea lahf loope jp cmp loopne (bad) mov out push cmp in mov jbe mov insb test (bad) nop hlt (bad) push adc mov imul lret stos (bad) jnp jmp xlat mov inc xchg pop (bad) dec stos bound fisttpll push insl and cmpsl mov rolb in jo add xchg jae clc xlat and or leave in xchg mov add icebp jge jg and jmp (bad) sub hlt cmpsl jae sbb pop mov push dec jl out insl scas or repz add in pop leave pushf test out clc insb push xor cmpsb in inc cmpsb cmpsb in std mov dec adc lock pop aad fucomp mov push mulb jnp adc or jo pusha xor fcompl movsb in popf xchg cs cli (bad) xchg mov pop (bad) mov inc mov mov ja push mov mov or pop fcoml or ss mov mov movsb jbe push aas dec daa mov jge mov inc push push bound fldt in icebp jnp xor adcl movsb ror (bad) lahf push insb (bad) int in sti imul mov lea enter loopne enter ja fsts vpandn daa pop iret push xor into pop mov xor sbb mov and sub pop sub mov push stos mov (bad) pop mov xor outsb cwtl lcall adc les (bad) cmp mov jne pop push arpl sub pusha xchg dec sbb popf pop cmpsb les mov xchg mov cltd cmp mov addr16 mov sbb stos add aaa and test dec imul insb xchg imul int3 jbe sub xchg mov fimul or mov cmp adc (bad) dec xor push jnp mov push mov mov cmpb je call push pushl call pop pop pop ret call xor cmp setne shl mov pop ret mov push mov sub mov xor mov mov xor push push push cmp mov sete mov dec mov and mov add mov test jns xor mov mov cmp jb mov add lea add add mov sub sub mov add mov xor mov xor mov xor mov mov mov cmp jne mov jmp mov cmp jne test je mov xor xor mov mov mul add mov adc inc mov cmp jne mov mov test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov test je xor test je xor add adc inc mov mov mov cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov xor xor jmp mov movzbl imul add inc inc mov mov cmp jne test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea mov push push lea mov push push call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov test je mov mov jmp lea jmp mov mov test jne mov xor xor mov test je lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov mov adc inc mov inc mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push push lea push call mov mov add mov test je mov sub mov jne mov test je mov test jne andl lea andl push push lea push push call mov add mov jmp xor lea mov jmp mov cmp je test je xor mov xor mov mull add mov adc inc mov cmp jne mov test je cmp jae mov mov inc mov mov jmp mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov mov jmp andl lea andl push push lea push push call mov add mov jmp mov mov test je push xor pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jb xor lea push push lea mov push push mov call mov add mov jmp cmp lea setb test jne lea mov lea test jne lea mov test je mov mov jmp mov mov test jne mov xor xor mov test je mov lea sub mov lea mov mov test jne cmp jne and lea mov jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov test jne xor push mov mov lea push lea push push call add mov mov test jne xor jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push pop jmp mov andl bsr je inc jmp xor lea shl add mov mov cmp jae test je mov xor xor mov xor mov mov cmp je cmp jne test je xor mov xor mov mul add mov adc inc mov cmp jne mov test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add mov mov test je xor test je mov xor add mov adc inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add xor xor movzbl imul add inc inc mov mov cmp jne mov test je mov xor push pop div mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja mov test jne xor mov mov push lea jmp cmp jne mov jmp test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor lea push push lea mov push push mov call mov jmp mov mov jmp cmp ja mov mov mov shl push lea push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je xor xor mov mull add mov adc inc mov cmp jne jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp xor xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne test je cmp je cmp jne andl lea mov mov xor add mov adc inc jmp cmp je mov inc cmp jne mov mov shl push lea push push lea push call mov add mov mov test je mov sub mov jne mov test je mov test je cmp je test je xor xor mov mull add mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp xor push mov mov lea push lea push push call add mov mov mov test je xor test je mov xor add mov adc mov inc cmp jne test je cmp jae mov mov inc mov jmp andl lea andl push push lea push push call mov add mov mov mov cmpl jge sub push xor andl pop div xor inc mov mov mov mov mov test je cmp jbe push pop movzbl movzbl mov mov shl push lea mov lea push push call mov shl push mov movzwl lea push lea add push call mov xor inc add cmp ja cmpl jne xor push mov mov lea push push lea push call add mov mov mov mov jmp cmp jne mov jmp mov test je xor xor mov mull add mov adc inc mov cmp jne jmp mov mov inc mov jmp mov cmp ja mov mov mov shl push lea mov push lea push push call add xor test jne push mov mov lea push push jmp mov inc mov cmp je test je mov xor xor mov mull add mov adc inc mov cmp jne mov test je mov cmp jb xor push mov mov lea push lea push push call mov add xor jmp cmp lea setb test jne lea lea mov mov test jne mov mov xor xor mov cmp je lea sub mov lea mov mov test jne cmp jne and lea mov jmp lea jmp andl xor mov mov test je cmp je cmp jne andl inc add mov mov mov mov mull add adc add mov adc inc inc mov mov mov cmp jne cmpl je cmp je cmp jne andl lea mov mov xor add adc inc mov test mov jne cmp je mov inc cmp jne mov mov shl push lea push lea push push call add mov mov mov test je mov sub mov jne mov test je mov mov test jne push mov mov lea push lea push push call add mov mov jmp xor push mov mov lea push lea push push call add xor jmp andl andl push jmp cmp je test je xor xor mull add mov mov adc inc mov cmp jne test je mov cmp jae mov mov inc mov mov jmp xor mov mov push lea push lea push push call mov add pushl movzbl push call pop pop push jmp mov test jne xor jmp mov andl bsr je inc jmp xor lea shl add test jne xor jmp mov andl bsr je inc jmp xor lea shl add mov sub cmp push sbb and mov pop jbe mov xor and shr push pop sub mov xor mov inc mov call mov dec bsr mov not mov je inc jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb lea mov mov jne mov mov jmp xor push mov mov lea push lea push push call mov add mov mov mov mov sub mov test je mov cmp jbe pushl mov push movzbl push pushl jmp mov sub cmp ja jb lea cmp je mov cmp jne dec cmp jne cmp je mov cmp ja inc mov mov xor and shr push pop sub mov inc mov xor mov call mov dec bsr mov not mov je lea jmp xor push pop sub lea cmp mov seta cmp mov seta cmp jne test je mov jmp xor test jne test jne cmp jb push pop mov mov mov cmp je mov mov sub lea lea cmp jb cmp jae mov jmp xor mov lea cmp jae mov jmp xor and sub mov mov and shr mov shl mov or mov dec dec mov cmp je mov mov jmp mov mov test je xor lea mov rep or cmpb je lea mov jmp mov jmp xor push mov mov lea push lea push push call add lea push lea push call cmpl mov pop pop mov mov sete mov mov test jne cmp ja bsr je lea jmp xor jmp bsr je lea jmp xor add mov cmp jbe sub test je xor xor inc mov call mov add movb adc and and or je movb mov mov mov call mov mov mov xor cmp sbb inc and cmp sbb xor and add adc call mov mov add adc test je lea jmp sub pushl mov pushl movzbl push push push push call add jmp pushl test setne movzbl push mov movzbl push push lea push call add mov pop pop xor pop call mov pop ret lods int xor cmp sbb fwait jo movsb mov push xchg gs (bad) xlat add mov inc (bad) cli test fistpll (bad) andl mov jbe ret jnp in sahf push arpl movsl mov rcrl adc leave mov out pop dec add cmp (bad) imul lret dec test jae cmp es aaa add mov and enter jl pop xor xchg mov aaa inc sub jl flds test jecxz loopne sbb jmp fst sbb xor sub cmpsb into jmp into ret sbb and sbb push jp xor xor mov xchg fsubp rolb mov sti dec scas mov mov jle xchg dec and add inc hlt lock xchg shll mov cli mov fcomi icebp dec jge movsl and xlat sub push jne sub mov adc icebp and push add adc je mov (bad) pop lret cmp adc sti mov hlt sti arpl jb fwait mov mov mov xor out movsb aad pop pop imul fdivrs or mov mov inc jl inc in popa sub xor or (bad) into lcall mov cwtl movl lods jno outsb pusha test jg push divl and push lods scas mov sbb sbb cs cs add rcr mov int3 pop (bad) out sub pop pushf and jne push pushf lds cmp push into pusha out fistp cwtl aam loope shrb sbb and dec sbb mov cmp pop pushf lods fwait jns xchg cwtl sahf adc fs push mov mov push sbb inc (bad) jb stos push xchg mov aaa and mov mov shrl lcall push outsl xchg jmp vpsubw pop cmp mov push movsb fildll sbb xor push push shrb stc leave inc test mov inc xor lahf out cltd and je cltd xchg das mov sub xor je add enter lds mov jecxz mov push sbb cmp jecxz mov sub adc jmp adc push mov in xchg rcrl add push sbbl (bad) adc adc pop icebp push aas push jb js jo addr16 mov and jg mov in movsl cmp jecxz cwtl sbb inc mov mov xchg pop shl push (bad) and jne cmovns int3 cmp popf sbb dec andl sub lods xchg push pop call ret push sub ret ds js adc dec call test xchg (bad) mov lock pop popa or push int stc out cmc push gs out dec insb lods dec pop call jno pop les jnp xor xchg pop in pop ljmp int lret pop cmp mov push aam loopne inc or push dec cltd mov sti push pop mov add insb int3 lds cmpb xchg mov adc sbbl mov shl int movsb rclb or jno xor ss mov lock (bad) leave mov jne xchg icebp push sbb mov and push call pop mov fsubrs mov ljmp push inc aaa cmp out inc ds mov xchg push and shr cmp inc fsubl and xor pop test cmp jge lcall aad adc xor push push bound popf fdivl inc repz andb dec mov mov (bad) daa xchg movsb cmp and pop cli sub pushf mov in xchg scas pop mov (bad) pop cmc mov jne es dec pop mov testb mov xor lret push loope decl and dec outsb sub add fnstcw scas cmpsb aad mov inc add aaa jg dec stos testb dec adc xchg imul lock fsubr test pop mov mov inc jmp adc in inc hlt mov pusha adc fcmove dec add ja call lods scas or jl stc orl xchg adc into jns psllw mov out aaa sbb adc push fwait cld or stc sbb sbb push or add jno or je cmp jb ja cmp jbe xor pop ret mov call mov cmp pop sete dec and ret mov mov cmp jne or ret movsbl inc mov ret scas aas (bad) xor and fldcw or int3 ret cwtl nop pop ljmp daa jo inc lret in add jb xchg add push add lret jge icebp popf adc sbb lds xor sbbl aam xor push mov pop adcb and mov test js cmp jle cmp jle cmp je cmp je cmp je xor ret pushl call jmp pushl call pop ret xor cmp setne inc ret cmpb je or mov ret mov xor ret mov push push mov lea mov call test jne or jmp push lea mov call test jne or jmp mov call test je mov call test jne cmpl mov jne mov call cmp jne or push mov call mov and or je mov test je call mov call mov pop pop pop ret cmpb je mov ret mov sub push push push call ret mov cmp ja jmp push call ret push jmp push jmp push push call ret push push jmp push push jmp push jmp push push jmp jmp jmp xor ret test jns sub scas add aaa mov push jge stc cmp std mov cmp push cmp xchg mov mov push mov call lea call cmp je cmp je xor pop ret mov pop jmp mov pop jmp mov push mov push push push mov call pushl lea movb pushl sub mov push pushl lea pushl push push call add pushl call add cmpb jne xor jmp cmpb je mov jmp push push push mov call pop mov pop ret mov push mov push lea call mov cmp jne xor jmp movzbl push cmp je lea call jmp mov call pop pop ret mov push mov push push mov call mov mov movzbl test jne mov jmp push lea mov call movzbl cmp je push mov call movsbl mov push call xor jmp mov pop pop pop pop ret mov push mov mov dec sub je sub je sub je xor pop ret call test je incl pop ret pop jmp pop jmp mov push mov cmpl push mov jne call lea call sub je sub je xor jmp push pushl mov call jmp push pushl mov call pop pop ret mov push pushl lea push call pop pop push mov call mov pop ret lods int xor pop mov pop xchg jmp flds (bad) les int call mov mov movzbl cmp jg je cmp jg je cmp je cmp je cmp jle cmp jle cmp jne movl jmp sub je sub je sub je dec sub jne mov or push pop jne movl mov mov call mov jmp mov call incl mov movl pop pop jmp movl lea mov jmp cmp jg je cmp jle cmp je cmp je cmp jne movl jmp movl jmp movl jmp movl movl jmp sub je dec sub je sub je xor movl mov xor mov mov mov mov mov mov mov jmp movl jmp mov call movl incl mov pop pop ret mov push mov push push mov mov mov lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp lea cmp ja movsbl add jmp or cmp jbe mov jmp push push lea xor push push mov call mov add or je mov cmp je mov mov mov mov jmp mov xor mov mov mov mov mov mov mov movl pop pop mov pop ret mov push movzbl cmp jg je cmp je cmp je cmp je cmp jne lea cmpb jne add movl mov pop ret movl jmp inc movl mov pop ret inc movl mov pop ret lea mov cmp jne cmpb jne add mov movl pop ret cmp jne cmpb jne add movl mov pop ret cmp je cmp je cmp je cmp je cmp je cmp jne mov jmp inc movl mov pop ret cmp je cmp je cmp jne inc movl mov pop ret inc movl mov pop ret lea cmpb jne add movl mov pop ret movl mov pop ret mov push mov call movzbl mov test je mov mov test jne xor movl mov mov mov mov mov mov mov mov xor jmp inc mov mov mov pop ret mov mov cmp jne lea mov jmp cmp je cmp jne movb ret mov push mov sub push mov xor mov lea mov test jne movl mov mov mov mov mov mov mov mov xor jmp push push pop mov rep mov cmpb sete mov test je inc mov mov cmpb jne inc mov orb mov cmpb je push mov mov test je cmp jne cmp je mov cmp je mov cmp jbe mov mov mov inc mov cmp je mov pushl mov call inc mov cmp jne mov jmp push mov call lea incl mov cmpb jne mov pop mov pop cmpb jne xor movl jmp test je mov call incl mov pop mov pop ret mov push mov push movzbl mov shr movzbl and jns dec or inc bts mov pop pop ret mov cmp jne movb cmp je cmp je cmp jne movb ret mov push mov movzbl push mov mov and jns dec or inc xor shr inc shl push test pop setne pop pop ret mov push mov mov test je cmp je cmp je xor pop ret push jmp push pop pop ret lods int xor push mov and push jge stc jmp out shrb fidivl xchg mov adc sbb out pop aas les inc fmull jb mov sti cwtl (bad) mov mov jmp mov in addl mov mov adcl push mov or je cmp ja jb cmp ja mov test je cmp je mov movsbl push call pop pop ret mov push mov mov cmp je cmp jne cmpl je dec mov pop ret cmpl jne call movl call xor ret mov ret movsl pop daa sub cmp (bad) push nop sub xor inc loope pop xor std or inc add sub push pop and pop sbb push orl hlt fidiv pop mov push mov push push push mov push mov mov movb call movzbl mov test je lea call mov push pop mov mov push mov pushl lea push lea push call mov add movsbw mov pop pop mov mov addl decl mov mov pop ret mov push mov addl mov push mov test jne call movl call xor jmp cmpb je incl add call sub je sub je dec sub je sub jne mov mov mov mov jmp mov mov jmp mov mov jmp mov mov mov pop pop ret mov push mov pushl pushl pushl pushl pushl pushl pushl call add pop ret push push call call mov test je andl mov call call jmp xor inc ret mov movl call int3 call test je push call pop testb je push call test je push pop int push push push call add push call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov mov mov or je add bt jae lea add pop leave ret mov push mov sub lea push pushl call mov cmp jae lea push push call pop pop test je cmpb mov mov movzbl je mov andl mov jmp cmpb je mov andl mov jmp xor mov mov mov cmpl jle mov lea sar mov push movzbl push call pop pop test je mov mov xor push mov mov pop jmp call xor movl xor mov inc mov mov lea mov mov push pushl push push push lea push pushl pushl lea push call add test jne cmp je mov andl jmp cmp jne cmpb movzbl je mov andl jmp movzbl movzbl shl or cmpb je mov andl mov pop mov pop ret lods int xor dec mov arpl js xchg ljmp add pushl push pushl call add pop ret mov push mov mov test je push pushl call pop pop mov jmp mov lea cmp ja add mov pop ret mov push mov mov push test jne cmp jne call movl call mov jmp cmpl je mov cmp jbe call movl call mov jmp pop pop jmp push pushl pushl pushl call add pop pop ret mov push mov sub cmpl je push push push pushl lea call mov mov test je mov test je mov cmp jbe call movl call jmp mov cmpl jne push push push call add mov jmp sub movzbl lea push push call lea mov movzbl push push call add inc subl je test je cmp je sub cmpb je mov andl pop mov pop pop jmp xor mov pop ret mov push mov mov mov mov mov mov test je mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret mov push mov push push push push push mov push pushl push call add push call add mov pop ret lods int xor lahf mov in or push xor lea mov outsl push aaa mov jno lds sti sbb fs (bad) repz push push sbb call cmp adc xor inc (bad) mov push mov mov push push cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub mov and sub vxorps add jmp vpcmpeqb vpmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub vzeroupper jmp cmp jl mov mov and push pop sub neg sbb and mov cmp jae mov lea mov cmp je cmpb je inc cmp jne sub cmp jne mov add sub pxor mov and sub add jmp movaps pcmpeqb pmovmskb test jne add cmp jne mov add jmp cmpb je inc cmp jne sub jmp mov mov mov add cmp je cmpb je inc cmp jne sub pop mov pop pop ret mov push mov push mov mov push push cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea mov sub mov and sub vxorps lea jmp vpcmpeqw vpmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub sar vzeroupper jmp cmp jl test je mov mov lea cmp je xor cmp je add cmp jne jmp mov and push pop sub neg sbb and mov shr cmp jae mov lea xor mov mov cmp je cmp je add cmp jne sub sar cmp jne lea pxor mov sub mov and sub lea jmp movaps pcmpeqw pmovmskb test jne add cmp jne mov mov lea jmp cmp je add cmp jne sub jmp mov mov lea cmp je xor cmp je add cmp jne sub sar pop mov pop mov pop ret mov push mov mov test jne mov test jne call movl call mov pop ret mov test je push push push push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je movzwl pop movzwl pop sub pop pop ret push pushl pushl call add pop ret mov push mov sub lea push push pushl call mov test je mov test jne call movl call mov jmp mov push cmpl jne push pop push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add test je cmp je jmp movzwl lea push push call lea movzwl movzwl lea push push call add movzwl lea test je cmp je movzwl movzwl sub pop cmpb pop pop je mov andl mov mov pop ret mov push mov mov push test je mov test je mov test jne xor mov call push pop mov call mov pop pop ret push mov sub movzwl mov lea test je sub jne pop test jne xor mov call push jmp xor jmp mov push mov push mov push test jne mov test je mov test jne call movl call mov jmp mov test je push push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl pop sub pop jmp push pushl pushl pushl call add pop mov pop ret lods int xor cmp push push lahf push cwtl std adc xchg neg scas movsl jae dec icebp mov aaa inc fmul sub imul lahf fidivl add jbe (bad) (bad) mov call xlat cmp add cmpsb hlt pop jl sbb fstpt cli arpl xor stos add rcrb cmp cmc gs cmpl aam data16 lods sub into xchg mov add and mov mov jmp add movsb fistpll cmp push out or fstps or outsl jge inc lods into out jge or sti pop or repz mov ret mov imul dec cmpsb push cld outsl sbb mov arpl sub adc mov imul insl out adc outsb test push push call xor mov test setne test jne call movl call xor jmp mov push push call pop pop cmp sbb neg je andl push call pop andl push call pop mov mov movl call mov call ret mov push call pop ret mov push mov push push push push call mov test je cmpl je mov xor mov lea mov add cmp jne sub sar cmp je mov mov lea mov mov add cmp jne sub sar cmp jbe cmpw jne push pushl push call add test je add xor cmp jne xor pop pop mov pop ret mov lea add jmp lods int xor dec mov push mov mov push mov movzwl mov and cmp pop jne test jne xor cmp jne cmp jne cmp jne inc pop ret push pop pop ret test jne xor cmp jne cmp jne cmp jne pop ret xor test setne sub pop ret jmp mov push mov mov test je and pushl call pop pop ret mov push mov pop jmp lods int xor dec mov pusha sarl xchg adc push mov mov push push push test je lea test jne mov mov test je cmp jae cmp ja push pop mov lea neg and lea add add cmp jbe call movl jmp push call mov pop test je lea add not add add and sub mov sub mov jmp call movl call xor pop pop pop pop ret lods int xor dec aam imul push test je push push mov mov test mov jne shr jne jmp mov add mov add sub je test je test jne mov shr jne and je mov add mov add test je sub jne mov pop pop pop ret test je mov add sub je test jne mov shr jne mov add sub jne pop pop mov pop ret mov add sub je mov mov add xor xor mov add test je test je test je test je test jne mov jmp and mov jmp and mov jmp xor mov add xor sub je xor mov add sub jne and jne mov pop pop pop ret mov push push pop test jne mov jmp cmp jge mov mov push push call push mov call add cmpl jne push push mov call push mov call add cmpl jne or pop ret push xor mov push push lea push call mov mov sar mov mov and imul mov mov cmp je cmp je test jne movl add inc cmp jne pop xor pop ret mov push mov imul add pop ret mov push call call xor mov pushl call mov pop mov add push call add cmp jne pushl call andl pop pop ret mov push mov mov add push call pop ret mov push mov mov add push call pop ret push push mov mov mov test je sub test je movzbl cmp jne test je inc sub jbe test jne lea and cmp ja mov cmp jne sub jbe lea add not and test je xor pop pop ret jmp int3 int3 int3 sbb or pop pop ret call mov call mov mov ret fcomip ja inc pop mov aad aam sbb fwait nop mov cwtl xor stos dec pop mov xor push push shrl mov cwtl jo cmp jb lret pushf or mov cmp mov in push call mov push mov call pop mov call mov pop pop ret enter mov negb int3 rcr and cmp jne mov ret add ret push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov mov and imul mov mov movzbl and je push call pop or mov mov mov andl mov mov mov testb jne call movl call andl jmp pushl pushl pushl push call add mov mov mov mov movl call mov jmp mov mov mov push call pop ret call andl call movl call or mov mov call ret mov push mov push push push mov push push call or pop cmp jne call movl mov mov jmp pushl lea push pushl pushl push call test jne call push call pop jmp mov mov and cmp je mov mov and sar imul mov andb pop pop mov pop ret mov push mov pushl pushl pushl pushl call add pop ret lods int xor pop sub test cs out sbb lahf xor mov push mov push push push push push push call mov xor mov pop pop test jne mov jmp lea cmp je push lea mov push push lea push call orl mov lea mov lea movl movb andb mov cmp jne mov pop push call pop mov pop pop mov pop ret mov push mov push mov test je push lea push mov cmp je push call add cmp jne push call pop pop pop pop pop ret push push call cmpl sbb neg jne call push pop mov call mov call ret xor mov push call pop mov mov mov mov cmp jl cmp jne call mov test jne push pop mov movl call jmp mov add mov inc jmp mov push call pop ret lods int xor int3 enter cmpsl iret adc push pushf inc imul push pop movsl sub mov mov mov and sar imul add push call pop ret mov push mov push push mov push test js cmp jae mov mov and sar imul mov testb je cmpl je call cmp jne xor sub je sub je sub jne push push jmp push push jmp push push call mov orl xor jmp call movl call andl or pop pop pop pop ret mov push mov mov cmp jne call andl call movl jmp test js cmp jae mov and sar imul mov testb je mov pop ret call andl call movl call or pop ret mov push mov mov push mov test je mov sub movzwl mov add test je sub jne test je sub je xor shr rep adc rep mov pop pop ret push push call andl mov pushl call pop andl mov mov mov mov sar mov and imul mov testb je push call pop mov jmp call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call andl call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call andl call movl call or pop mov pop ret mov push mov push push mov push call pop cmp jne xor jmp mov cmp jne testb jne cmp jne testb je push call push mov call pop pop cmp je push call pop push call test jne call mov push call pop mov and sar imul mov movb test je push call pop or jmp xor pop pop pop ret mov push mov sub mov xor mov mov mov and sar push imul push mov push mov mov mov mov mov mov add mov call mov mov mov xor mov mov mov cmp jae mov xor mov mov mov mov mov test je mov and mov lea push mov mov push jmp call movzbl mov test je cmp jae push lea push push call add cmp je inc jmp push push lea push call add cmp je xor lea push push push push push lea inc push push pushl call mov test je push lea push push lea push pushl call test je mov sub add mov mov cmp jb cmpb jne push pop push mov lea push push lea push pushl call test je cmpl jb incl incl cmp jb jmp mov mov mov mov mov orb incl jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov push push push mov xor push mov mov mov mov mov add mov cmp jae movzwl push call pop cmp jne addl cmp jne push pop push call pop cmp jne incl incl add cmp jb jmp call mov pop mov pop pop mov pop ret lods int xor jecxz aad jecxz cmp fcompl cmpsb and inc call lcall cmp or push jbe sarb sub shll out mov or orps cld push fcoml jo fs stos jle mov ljmp pusha es cld aam test (bad) sbb call in mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov andl add andl andl mov mov jmp lea cmp jae mov inc cmp jne incl movb inc mov lea inc cmp mov jb lea sub lea push push push lea push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret mov push mov mov call mov xor mov mov mov sar and imul push mov mov push mov push mov mov add mov xor mov mov mov mov jmp lea cmp jae movzwl add cmp jne addl push pop mov add mov lea add cmp mov jb lea sub lea push push and lea push push push call test je mov add cmp jb mov mov cmp jb jmp call mov mov mov pop pop xor pop call mov pop ret lods int xor jno idivb inc jge mov push in jl rcrl in jae or call in or fsub lods cmp clc jae mov bound and stos ret xchg call jo ds xchg mov xor push pop jo (bad) cmp xchg addr16 mov sub sbb push stos cmp insb mov mov inc sub sbb daa mov xor pusha rorl cltd subl and push ret in insb pop dec shrl jmp aad pop or pop inc add xchg nop add jp dec adc insb mov aam mov mov pop notl cmc push add push idivl adc ficoml pop bnd (bad) sbb sub mov mov (bad) cmc or pop push in xchg lock mov mov jae cld je fidivr push push call mov cmp jne call andl call movl jmp test js cmp jae mov sar mov and imul mov mov movzbl and je push call pop or mov andl mov mov testb jne call movl call andl jmp pushl pushl push call add mov mov movl call mov jmp mov mov push call pop ret call andl call movl call or call ret lods int xor push out into fidivr and inc (bad) (bad) push add mov jbe sub cs fidiv adc jno sub mov ret push dec adc sub aaa pop mov fucomi nop divb ffreep popl insb add insl (bad) in dec rclb sahf fnstenv sbb pop or test jle add jbe or sbb cmp mov lods jo pop sbb mov and inc inc xor stos add inc push mov or dec jo daa push and xchg cmp dec adc push fcmove fs push hlt cmp fsubl jne or test sbb fdivrl ret adc push push fwait pop scas in icebp gs add sbb sbb dec aas jne test addr16 mov cmpsl add imul mov xchg rcll (bad) mov in mov sub adc mov insb into call and sub nop (bad) cltd nop frstor jp std cmc aam bswap jns in pminub jae sub cmp and sub jmp (bad) adc ret in dec outsl insl pop xchg push push add rcl push aaa std leave (bad) gs xor js pop lock repnz (bad) ss out int aam or (bad) fucom adc pop push jb addr16 (bad) xor xchg imul aad pop sahf fnop sbb pushf ss cmp rcr pop mov push pop inc lcall ja mov xchg cmpsl lahf mov push mov sub mov xor mov mov push mov push xor mov mov push mov mov test je test jne xor jmp test jne call movl call or jmp pushl lea call mov test je mov cmp jne test je mov cmp ja mov mov mov add test je inc cmp jb jmp cmpl jne test je mov mov cmp je add subl jne cmp je cmp jne mov sub sar inc lea push push push push push push push pushl call mov test je cmpl jne mov cmpb jne dec jmp lea push push push push push push push pushl call mov test je cmp jne lea jmp cmp jne call cmp jne test je mov mov mov cmp jle push pop lea push push push lea push push push push pushl call mov mov test je cmp jne test js cmp ja lea cmp ja mov mov test jle mov mov mov test je mov inc inc mov cmp jl mov add mov cmp jb jmp call or movl jmp mov cmp jne movzwl test je mov cmp ja add inc movzwl test jne mov jmp lea push push push push push push push pushl call test je cmp jne lea jmp call or movl cmpb je mov andl mov mov pop pop xor pop call mov pop ret mov push mov push push mov xor mov push mov test je test je test je mov push mov test je mov mov cmp ja mov cmp jbe call push jmp test je call push pop mov call mov jmp pushl push pushl push call add cmp jne test je movb call mov jmp inc test je cmp jbe cmpl je movb cmp ja call push pop mov call mov jmp push mov pop jmp mov movb jmp mov test je mov mov pop pop pop mov pop ret mov ret mov push mov mov test jne pop ret mov mov push sub je movzwl test je cmp jne add add jmp movzwl movzwl sub pop pop ret push push call mov test jne call push call call mov call test je push call neg sbb inc mov andl mov pushl mov call call push call mov mov mov mov push push call pop pop ret mov pushl call int3 lods int xor inc mov pusha notb lds cmp or cld fdivr push fsubl xchg inc xor jne xchg (bad) (bad) jbe push psubusb xchg xlat pop call mov or mov cwtl push js and jns lods cmp and movsl out and sbb sbb sti xor adc sti push mov xchg jmp mov push mov push push push push call push mov call add test je mov mov mov lea push push push mov call push lea call mov pop mov pop ret mov push mov push push cmpl jne call movl call xor jmp push push pushl pushl call mov pop pop test je lea push pushl push push pushl pushl call mov test jne call push call pop xor push lea call mov pop pop mov pop ret mov test je mov mov xor jmp mov push mov pushl call int3 mov push mov pushl mov call pop ret lods int xor pop jg and test cwtl std adc add or add lock cmp sub jo pushf jecxz mov sub stos outsb jne (bad) adc push call andl push call pop andl mov mov and xor ror mov movl call mov call ret mov push call pop ret mov push mov mov cmp je xor pop ret pushl push call pop pop pop ret mov push mov push push mov xor mov push call mov test je mov mov push xor push lea cmp je mov cmp je add cmp jne mov test je mov test jne xor jmp cmp jne xor mov inc jmp cmp je mov mov mov mov cmpl jne lea lea jmp mov add cmp jne mov mov cmp ja je cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl jmp movl jmp cmpl je cmpl je cmpl je cmpl jne movl jmp movl jmp movl jmp movl pushl mov push call call pop mov jmp pushl mov mov call call mov pop mov or pop pop mov xor pop call mov pop ret lods int xor in mov mov push call mov test jne call test je pushl call pop push call pop andl cmpb jne xor inc mov xchg movl mov test jne mov mov and push pop sub xor ror xor mov cmp je xor xor push push push mov ror mov call call push jmp cmp jne push call pop andl test jne push push call pop pop push push call pop pop test jne movb movl call test jne pushl call mov mov pushl call add ret mov call mov push call pop ret call ret mov push mov call test je mov mov shr test jne pushl call push call pushl call pop pushl call int3 push call mov test jne xor ret mov cmp jne mov add cmpl jne mov cmp jne cmpl jbe cmpl setne ret mov push mov push push mov xor mov andl lea push push push call test je push push pushl call mov test je pushl mov call call pop cmpl je pushl call mov xor call mov pop ret mov push mov mov mov pop ret push push push call add ret mov push mov push push pushl call add pop ret mov ret mov push mov sub cmpl push je cmpl je call push pop mov call mov jmp push push call push mov xor push push call mov mov test je cmpb jne mov lea mov push lea mov push push push push call push pushl pushl call mov add test jne call push pop mov jmp lea push lea push mov lea push push push call add cmpl jne mov dec mov mov mov mov mov jmp lea mov push push call mov pop pop test je mov jmp mov mov mov cmp je lea inc cmp jne mov mov mov mov mov push call pop mov push call pop pop mov pop pop mov pop ret mov push mov push mov push mov push mov push andl mov movl mov test je mov add mov xor mov cmpb jne test mov sete inc mov jmp incl test je mov mov inc mov inc mov movsbl push call pop test je incl test je mov mov inc inc mov test je mov test jne cmp je cmp jne test je movb jmp dec movb cmpb je mov cmp je cmp jne inc jmp cmpb je mov test je mov add mov mov incl xor inc xor jmp inc inc cmpb je cmpb jne test jne mov test je lea cmpb jne mov jmp mov xor test sete shr jmp dec test je movb inc incl test jne mov test je cmpb jne cmp je cmp je test je test je mov inc movsbl push call pop test je inc incl test je mov mov inc incl inc jmp test je movb inc incl jmp mov pop pop pop test je andl mov incl mov pop ret lods int xor dec sub movsb mov std mov push aaa pop outsb jg test shrb loop js cltd adc insl pop (bad) cld lds add mov inc imul xchg jbe lcall call in pop jmp mov test jne cmp jne xor ret call test jne call neg sbb not and ret cmpl je xor ret push push call call mov test jne or jmp push call pop test jne or jmp push mov mov call xor push call pop push call pop mov pop pop ret movsl or movsl jmp adc dec iret sar ljmp ljmp repnz lods je sbb iret add xchg jae loop inc in insb xor mov popf mov outsb push add dec lcall xchg push dec setp ret repz pop adc jbe cmp call xor pop (bad) out neg mov test jb pop out inc scas mov ret sub cwtl scas sub cmp scas test enter (bad) inc rcll ret mov out cwtl push lock andl xor push sbb adcl mov mov or fwait ds decb test or jmp dec test cs leave repz inc sbb ljmp pushf call scas sub push and mov movsl adc and ja push fsts jo mov push xchg std dec cmpsl jecxz repz (bad) and jnp lret mov adc inc insl inc mov xchg sub dec cmp jmp inc psubsb xor pop vpunpcklbw mov mov sub jb pop push jne enter mov mov lds xchg popa xchg dec add cs cwtl jge add dec mov cmp sbb lahf pop push jmp out push push inc mov stos push jp jg jg outsb dec ljmp add inc or test andl and icebp iret jnp mov xor sbb test push dec xchg mov roll mov in sub push stos (bad) mov pop jle and mov push mov push mov test je mov push mov jmp push call lea mov pop test jne push call pop pop pop pop ret mov push mov test jne or pop ret push push xor jmp push push push pushl push push call mov test je push push call mov pop pop test je push push push pushl xor push push call test je push push call push call add add cmp jne xor pop pop pop ret push call pop or jmp mov push mov push mov xor mov push mov push lea jmp mov push call call pop add cmp jne mov pop xor pop call mov pop ret mov push mov mov mov cmp je push call pop pop ret mov push mov mov mov cmp je push call pop pop ret jmp push mov call push mov call pushl call pushl call pop pop ret jmp push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret push push call andl mov pushl call pop andl mov call mov mov movl call mov call ret mov mov pushl call pop ret lods int xor push xchg bound cmp cmp mov xchg xchg aam lock orl fstp pushf aaa and pop mov mov add jmp leave aas push cltd andb imul mov mov and push pop sub mov ror xor pop ret mov push mov sub mov xor mov mov mov push mov mov test jne or jmp mov push push mov mov mov and xor mov mov xor ror ror test je cmp je mov mov push pop sub xor ror xor sub cmp jb cmp je mov mov xor ror mov mov call call mov mov mov and mov mov mov mov mov xor mov xor mov rorl ror mov cmp jne push pop cmp je mov mov mov mov mov jmp cmp je push call mov pop mov xor and push pop sub ror mov xor mov mov mov mov mov mov mov mov mov pop xor pop mov xor pop call mov pop ret mov push mov sub mov mov push mov mov test jne or jmp mov mov push mov and push mov xor mov xor xor ror ror ror cmp jne sub mov sar cmp ja mov lea test jne push pop cmp jb push push push call push mov call mov add test jne push lea push push call push mov call mov add test jne or jmp lea mov mov lea mov mov and push pop sub xor ror mov xor mov mov sub add shr cmp sbb not and mov je mov xor inc mov lea cmp jne mov mov pushl call push mov call mov mov mov mov lea push call mov push mov mov call mov add mov mov xor pop pop pop mov pop ret mov push mov pushl push call pop pop pop ret lods int xor adc loopne jge aad push in xorb add add push mov test jne or jmp mov cmp jne mov and push pop sub xor ror xor mov mov mov xor pop pop ret mov push mov push push lea mov lea mov lea push push call pop pop mov pop ret push mov call mov ret dec je bound nop sub push cmc call out ljmp (bad) pushl ret mov push push and xor pop sub ror xor push call push call push call push call push call add mov pop ret push call pop ret mov or push lock jne mov mov cmp je push call pop mov pushl call pushl xor mov call pushl mov call pushl mov call add mov mov pop ret push push call pop pop ret call test setne ret call mov ret push push call pop pop ret mov push mov pushl call pop mov pop ret mov push mov mov test je push jmp test je xor inc pop ret test je push jmp test je push pop pop ret movzbl and add pop ret mov push mov push push and add push mov mov mov sub mov xor mov push mov lea push push push pushl call add test jne andl push lea push lea push pushl lea pushl push lea push call mov add pushl call pop mov call test je test je fldl push sub fstpl fldz fstpl fldl fstpl pushl push call add jmp push call movl push call fldl pop pop mov pop xor pop call mov pop mov pop ret lods int xor ljmp mov adc (bad) sbb push daa (bad) cltd outsl lods je xlat sub jecxz les jb loop dec jge std mov bound xchg in sub imul sub mov aas push xchg cmc jo (bad) lods dec cmc dec mov fimull cmp pop sub iret arpl movsl (bad) mov ljmp or insl lds mov pop push jns pop add lcall popf les (bad) icebp xchg sarb inc and sub cmc xlat icebp mov mov inc ficomp scas fs xor cmp repnz mov xor push in (bad) fsubl sti pop lret data16 pop dec enter sub stos repnz mov and ja les pop add inc jg js xor fdivrl (bad) xor mov es lock addr16 jnp loope sbb lods movl sub fptan clc cmpsl fwait lahf cli push or (bad) dec shlb push gs ja stc xchg mov gs xchg ret push leave mov pop es cmp dec push inc aas adc adc clc or faddl jne mov bound loopne jge pushl xchg cs in fmull jne xor outsl dec es xlat enter lcall jle pop push fistpll mov cmc mov les je fxrstor icebp push inc imul movsb pop sub loope push insb sbb cmc (bad) aam and jno lock mov xor push xor inc mov mov push mov mov mov mov mov test je mov mov or test je mov mov orl test je mov mov orl test je mov mov orl test je mov mov orl mov push mov mov shl not xor and xor mov mov add not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor mov mov shr not xor and xor call mov test je mov orl test je mov orl test je mov orl test je mov orl test je mov or mov mov and je cmp je cmp je cmp jne mov orl jmp mov mov and or mov jmp mov mov and or jmp mov andl mov mov and je cmp je cmp jne mov andl jmp mov mov and or jmp mov mov and or mov mov mov shl xor and xor mov or cmpl je mov andl mov flds mov fstps mov or mov mov andl mov flds fstps jmp mov mov and or mov mov fldl mov fstpl mov or mov mov mov and or mov mov fldl fstpl call lea push push push push call mov testb je andl testb je andl testb je andl testb je andl testb je andl mov mov and sub je sub je sub je sub jne orl jmp mov and or mov jmp mov and or jmp and mov shr and sub je sub je sub jne and jmp mov and or jmp mov and or mov cmpl pop je flds fstps jmp fldl fstpl pop pop pop ret mov push mov mov cmp je add cmp ja call movl pop ret call movl pop ret lods int xor sub and push and es or divl lds inc mov and fsubr dec test lea sbb push in out movsl xor lahf jne subb (bad) lcall cmp mov test sbb cmc sbb pavgb mov xor inc popa arpl add cs mov jne repnz mov aam mov ljmp clc xor sub add cwtl jae call in push push mov xor mov mov push push mov sub add push xor shr cmp sbb not and je mov mov test je mov call call add inc cmp jne mov pop pop xor pop call mov pop ret mov push mov push mov xor mov push mov push jmp mov test je mov call call test jne add cmp jne xor mov pop xor pop call mov pop ret mov push mov cmpl jne xor pop ret mov lea mov inc test jne sub push push lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push mov cmpl jne xor pop ret mov push xor lea mov add cmp jne sub sar push lea lea push call mov pop test jne pop pop pop ret pushl push push call add test jne mov jmp xor push push push push push call int3 mov push push mov xor push push push call test je incl add add cmp jb mov jmp push call pop xor pop pop ret mov push mov imul add push call pop ret mov push mov test je imul push lea push call decl sub sub jne pop mov pop ret mov push mov imul add push call pop ret push call pop ret push call pop ret lods int xor inc mov mov test cmp fcompl ds mov pop mov mulb mov pop punpckldq ret stos cld pop (bad) std ret add stos addr16 inc jmp addr16 fdivrl push cmp cmp mov jae (bad) or add (bad) dec fs gs pop cmp and pop cmp adc cmp pop cs sbb or stos mov xchg mov push mov sbb cwtl loopne cs stos fs push mov push call mov mov lea push push call mov pop pop add mov pop ret lods int xor push out into fidivr and push movsb faddl push cltd (bad) xor lods int dec imul ret out cmp fxch inc mov loop,pt ja dec mov jg insb push in rclb fst dec lcall stos sub cmp push negl pusha sbb push sbb and in sub dec lock jnp push add jmp cmp xor shl add xchg or mov mov fisubrl sub jge sub es movsl pop cmpsl jbe sahf js adc mov ficompl xlat es and xlat mov les add and jmp (bad) cmp ss lcall std mov push dec (bad) stos cmpsl adc sub fmuls push sti add xchg fsubrs pop jl cmp dec call mov movsl fsubl mov bound sbb adc icebp sbb stos int lea (bad) aad add xchg sbb sbb clc mov shrb ret (bad) sbb mov inc ljmp cmc test mov mov enter inc sub push inc mov int fwait jno cmpsl mov jb sahf xchg mov popf pushl repz xor cmpsb sub push push xor sub inc mov rcll fwait mov push ss (bad) enter adc das xchg outsb outsb out aad sub inc mov fs scas popa jns adc ja lret adc add mov out (bad) or ja test fsubrl push hlt xchg cmp dec xchg or into clc movsb cmc mov pop popa jmp mov rorl dec xor dec out mov movsl cmp jno cmp ds out pop stos mov xchg or das js stos inc mov lcall xor stc xchg inc sub aaa push cmp sbb xchg mov lret xchg mov and test pop sti xchg (bad) mov inc in inc enter dec stos scas cmp push sbb mov mov je pop add add int pop cmpsb sbb jp addr16 xchg push rorb fistp pop add es nop (bad) adc fnsave outsl xchg ret imul xchg xor inc lock sbb stos xor adc subb jo pmovmskb pop pop and movw inc mov stc adc js daa (bad) sub clc sub jb add sub call mov and repnz (bad) leave or out (bad) mov push daa imul adcb dec mov cmp in mov (bad) xor adc mov jmp test enter jne daa xchg out (bad) lock xor or add adc pusha jp xor xchg sbb (bad) gs push mov push cmpl jne push pushl call pop pop jmp push push push pushl xor lea push push push call add test je cmp je cmp je push pushl call mov pop pop test je push pushl pushl push push call add test je cmp je cmp jne jmp push pushl call pop pop mov push call pop mov pop pop mov pop ret push push push push push call int3 dec call inc xor dec sub fldt dec push repnz mov enter in (bad) loopne aas fiaddl mov ss mov pop insl cld js leave xchg jnp dec movsl (bad) push xor adc cmp push fdivrl jle cld stos or in (bad) shrl jmp dec add cli arpl sbb mov je outsl lock jne test bound icebp ret pop cld lods ljmp sbb jp lret mov add xor pop rcll inc xor jbe scas mov add pop jp mov sub dec aam in jb cmp fistpll xor pop or pop repnz test xor pop movsb jnp bnd adc dec sub dec ljmp out scas pusha dec sub dec jle xchg push gs dec and or sarb (bad) mov into jae sub xor cltd data16 push cwtl adc push loop movb aas lods loope insb loope (bad) mov mov jge ret mov push mov mov subl jns push pushl call pop pop pop ret mov mov mov incl movzbl pop ret mov push mov mov xor cmp je cmp je inc cmpb jne pop ret lods int xor cmp or movsl inc and xorb cs cmp int test sbb addr16 inc dec fadd fwait add sbb mov xchg idivb in push mov cmp ja test jne inc jmp call test je push call pop test je push push pushl call test je jmp call movl xor pop pop ret mov push mov push mov test jne pushl call pop jmp push mov test jne push call pop jmp cmp jbe call movl xor pop pop pop ret call test je push call pop test je push push push pushl call test je jmp int3 push mov push xor push push push push push push push push mov lea mov or je add bts jmp mov or lea add mov or je add bt jae mov add pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp sub fxch fstpl fstl mov call add ret scas and mov jnp sbb test or decl daa inc push and and les and inc adc nop pop sbb push sbb je jl mov mov call mov sub cmc push mov lret int3 mov (bad) inc rcll ljmp jb bound arpl jne lea cmp sub mov vucomisd push dec dec (bad) (bad) nop xchg test outsb cmp lods mov outsb ret adc test sub fs cltd enter ja adc dec jle dec and js dec leave dec hlt cmp (bad) mov rcrb (bad) pop lret xchg loop mov sub orl push xor (bad) push jne out cmp sub pop outsb in loop sbb insb cltd mov scas mov insb faddp jns and insl jle bound pop aam ja repz (bad) pop xor ljmp popa (bad) mov sub (bad) cmpsl icebp nop push mov or icebp loopne sub loope sbb cwtl (bad) mov pop fmull repnz xor mov fldl push sub dec lods cltd fsubl fnstcw push imul add jl insl cmpsl cld jle and mov mov push sbb xor cs stc data16 in aad ret gs dec test mov sete (bad) repnz daa push jne das cmp cli out cmp pushf cmp lock rep (bad) push or imul pslld call in sub push pushl lea call movzbl mov mov test jne xor cmp je mov mov movzwl and jmp mov test je xor inc cmpb pop je mov andl mov mov pop ret mov push mov push push pushl push call add pop ret mov push mov pop jmp mov push mov push mov test je push xor pop div cmp jae call movl xor jmp push mov push test je push call pop mov jmp xor imul push push call mov pop pop test je cmp jae sub lea push push push call add pop mov pop pop pop ret push push call mov pushl call pop andl mov mov mov pushl mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov test je or lock jne cmp je push call pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl push mov mov pushl call pop pop movl call call ret mov pushl call pop ret push push call mov pushl call pop andl mov mov mov mov lock movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret lods int xor push xchg bound cmp cmp mov xchg xchg aam lock orl push mov xor inc push mov mov movl mov mov mov pop movl mov mov mov mov mov andl lea mov lea push push call lea mov lea mov lea push push call add mov pop ret mov push mov cmpl je pushl call pushl call pop pop pop ret mov push mov push mov mov cmp je push call mov pop pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call mov pushl call lea mov lea push push call lea mov lea push push call add mov pop ret lods int xor lret push xchg xor fwait push ret inc movsl sub mov push sbb pop xchg gs in in repnz push (bad) fsubrp jmp paddq shlb mov cmp je push push call mov test je push pushl call push call pop ret mov push push call mov mov cmp je push call mov test jne push push call mov pop pop test jne push call pop jmp push pushl call test jne push jmp push push call push call add test je push call mov pop pop ret push call call int3 lods int iret out adc mov pop xchg or inc jge cmc adcb add or push ret ret imul xor mov or stos or cmp jl push dec cmp aas (bad) lret pop xchg lret dec dec push or push aas syscall cwtl xchg mov sbb iret bound cmp jle shr adc mov xor loop lahf pop stos adc loop add mov cmp jne xor ret call test jne push call pop jmp mov ret mov cmp je push call orl mov ret lods int xor push out into fidivr and int dec xchg push incl sub or int3 ret fldl xlat movsl mov pop popa jb mov xor mov mov xchg cmpsl xor enter mov repnz xor cwtl cmpsl (bad) decl sub shlb jb lahf ret out arpl mov inc dec jmp mov adc or icebp scas jg ret push adc xchg mov jl cwtl add arpl jno les xor imul pop cli clc cmp inc out ss mov sub pop aad sbb jp mov push mov push mov mov cmp je mov mov test jne call mov pop pop ret lods int xor push addr16 ljmp xor outsb jo sub sahf popl xor ret push push call andl mov call movl call call ret mov mov mov andl ret push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret lods int xor icebp loopne mov xchg loopne sub decb arpl dec mov (bad) push aas retw sbb fsubrp cmpl fisubrl negb fdivl les inc xor sub pop mov pop cli mov sub cmp pop adc add inc mov clc das ficompl cmp aas pop xor pop jge imul mov mov lods pop dec pop out and or sbb and outsl or repz sub cmpsb jne pop scas lds sahf inc subb ss mov lret or push pushf mov (bad) push adc dec rcll lds cmp or rcrb out xor dec xorl fs fistpl dec sbb movsl push sub lea mov insl cli shrd mov cmpsb sub push sbb add cltd pop inc push loopne push add or push out test out mov mov mov push mov cmpl jne xor pop ret push push pushl call mov pop pop cmp jb xor jmp lea push push call mov pop test jne pop pop pop ret lea push pushl push push call add test jne mov jmp xor push push push push push call int3 xor mov inc xchg ret push push call mov cmp je push call pop andl push push call pop pop mov movl call call ret push call pop ret mov push mov push push mov push pushl pushl call add xor test jne lea cmp je push push push pushl pushl call add add cmp je push push push pushl pushl call add pop pop pop ret push push push push push call int3 mov push mov push push push push push mov xor push push push call mov add movzwl test jne xor jmp push pop cmp jne lea cmp je push push lea push push call add test jne mov jmp mov push push call pop pop test je lea movzwl mov mov push pop test jne cmp jae push pop cmp je push push push push jmp cmp jne cmp jae cmp je push push push lea jmp cmp jne cmp jae test je cmp jne push push push lea push call add test jne push pop cmp je test je mov add incl jmp xor push push push push push jmp or pop pop pop mov pop ret push push push push push call int3 mov push mov push mov test je mov test je cmp je push push pop mov rep andl push call pop pop pop pop ret mov push mov sub mov xor mov mov push mov push mov mov mov push mov mov test jne xor mov pop pop xor pop call mov pop ret call push lea mov lea mov lea add mov push pushl xor mov push mov mov call add test jne cmpw jne xor cmp jne mov push pushl push call add test jne test je mov mov jmp mov xor lea mov add cmp jne sub sar cmp jae mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or test je call xor test lea push push sete call pop pop test jne lea test mov push push push je call jmp call add test je lea push push pushl call mov add test je lea lea mov add cmp jne sub sar lea push lea push pushl push jmp xor push push push push push jmp mov push call test je push lea push push push call test je mov test jne call mov movzwl mov lea push push push pushl call add test jne push push pushl pushl call add test jne push push push pushl call add test jne xor cmp je mov cmp jae lea push push push pushl call add test je push push push push push jmp mov xor mov mov test je mov mov mov mov mov push pushl push call add test jne mov jmp mov xor mov lea mov add cmp jne sub sar lea push push push pushl call add test je push push push push push jmp push push push push push call int3 mov push mov push xor push mov cmp jle push lea lea pushl pushl pushl call add test jne inc cmp jl pop pop pop pop ret push push push push push call int3 mov push mov sub andl andl cmpl jbe call movl call xor jmp call mov call mov lea orl lea mov lea mov lea mov lea mov lea mov lea mov lea push lea push lea push call mov mov pop ret mov push mov sub push push xor inc push mov call mov xor pop test je push lea mov mov mov lea pushl mov push pushl push push push call mov add mov push push push call add test jne mov lea mov mov mov mov cmp jne test je mov cmp jne add add test jne xor jmp sbb or mov neg sbb add not mov and mov mov pushl push pushl push push push call mov add cmp jl cmpl jne mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop andl lea andl mov mov pop pop pop mov pop ret push call pop mov or test je mov lock jne pushl call pop mov test je lock dec jne pushl call pop xor mov mov mov mov mov jmp xor push push push push push call int3 lods int xor dec mov push jbe in fidivr push xor fcoml jns jp aam inc fldl xor out in push fimul jbe cltd les lahf mov out mov and jns fwait cmp cmp mov fldcw jmp decl les push int dec std out or loop pop and gs scas outsl mov ja mov test adc cmp or sub add (bad) jg inc inc in cwtl ljmp fist pop mov aam jg sbb jmp outsl xchg inc adc dec push sub sbb test jl (bad) pop cmp pop adc push neg ljmp loope xchg arpl pop pop adc ja mov jo cmp cmp enter sbb dec push push cmp pop imul rcrb pop nop or ret jne addr16 cmpsb sub lock sbb xor dec adc push or pop push imul in or jae push jg test (bad) lock inc jmp sbb jp test aas test fdivr add sbb pusha xor (bad) xor dec repz mov bound or sbb dec dec mov inc pop call mov xor outsl les setb gs cmp cmc bound push jae int3 insl hlt and sarl pop sub push pop jg sub jb outsl xorl dec xor push push scas pusha mov adc scas fs loope sbb adc fmuls push ja and push in xchg cmp cs push or add shr push popa (bad) xchg (bad) fcoml adc fisub mov imul sbb sub mov jmp sub pop (bad) mov pushw mov dec inc sahf xor adc mov inc daa nop out mov dec inc in rcll arpl arpl mov (bad) xlat decb outsl fsubrl xchg imull and or pop cmpsb cmpsl pop inc repnz mov out pop sub dec xchg sti dec sub cs cmp or insl test sbb cmp mov aas ret xchg call in sub mov xor mov push mov push mov push mov mov call add mov lea push push lea push push lea push push call add test jne xor mov pop pop xor pop call mov pop ret lea shl lea mov mov mov mov andl cmp mov jne cmpw je mov cmp mov mov jne add add cmpw jne mov jmp sbb or test jne mov jmp lea lea mov add cmp jne sub sar lea mov lea push call mov pop test je mov add mov mov mov mov mov lea push pushl mov push call add test jne cmpw mov mov jne cmpw jne mov mov jmp lea push call pop mov mov cmp jne mov mov mov mov mov mov mov mov mov mov mov cmp je mov inc mov mov mov mov mov mov mov add mov mov mov mov mov cmp jl jmp test je mov mov mov mov mov mov mov mov cmp jne push pushl lea push push push push pushl call add test mov je mov and inc cmp jb push pushl lea push call xor add test sete mov jmp mov mov mov mov mov jmp cmp jne mov mov jmp cmp jne mov mov imul push mov mov call call pop mov test je mov mov pushl call mov mov push mov call mov pop pop mov jmp cmp je mov or add mov lock jne pushl call pushl call pushl call mov add mov mov mov jmp mov mov add movl mov mov jmp mov push push push push push call int3 mov push mov push push mov mov cmp jne xor jmp mov cmp jae movzwl mov movzwl jmp mov xor mov lea push push lea push push call test je movzwl movzwl and mov pop ret int3 mov push mov push mov xor mov push mov mov xor and push push pushl ror mov call call mov xor pop call mov pop ret push push call andl mov pushl call pop andl mov mov pushl call pop mov push push call mov mov and push pop sub xor ror xor mov mov movl call mov call ret mov mov pushl call pop ret lods int xor push xchg bound cmp cmp mov xchg xchg aam lock subl xchg sub pop sbb xchg loop loopne mov mov mov inc adc and fisubl adc and push in pusha outsl insl jae test aaa das mov and bnd in loop arpl mov fildll mulps mov clc das sbb inc push push mov mov cmpsb xchg enter mov lret dec in jp xchg insb (bad) lods je into push adc mov pop inc mov loopne add into xchg mov shl xchg ror adc push pop movsl add mov mov push lea mov test je lea neg sbb and jmp push mov push push push push call mov test jne call cmp jne push push push call mov jmp xor test jne or xchg xor jmp mov xchg test je push call mov pop pop pop pop ret mov push mov push mov xor mov push call mov test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret mov push mov push push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp lea mov lea push push call pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call add mov pushl test je mov call call jmp call mov xor pop call mov pop ret lods int xor pop jg and test xor stc mov bound iret push in adc push jae inc fldl nop insl jp ljmp xchg out push push iret popf int cmpsl stos test pop pop cmp ss mov cmp lahf mov push mov push mov xor mov push push push push push call add mov pushl pushl pushl test je pushl mov call call jmp push pushl call push call mov xor pop call mov pop ret lods int xor pop jg and test xor stc sahf mov iret jo push mov inc fldl nop insl jp ljmp xor sbb movsb push mov pushf mov stc xchg and and mov inc pop and push inc sbb mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl call call jmp push pushl pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl call call jmp pushl pushl call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp push push pushl call push call mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl call call jmp pushl pushl pushl call add mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je pushl mov pushl pushl pushl pushl pushl pushl pushl pushl call call jmp pushl pushl pushl pushl pushl push pushl call push call mov xor pop call mov pop ret lods int xor pop jg and test xor stc push mov iret mov leave push inc aam fnstsw inc imul xor sti dec push iret popf int cmpsl stos test lds cmpsl orl dec in jge sub jmp pushf aas dec mov push mov push mov xor mov push push push push push call mov add test je pushl mov call call jmp xor mov xor pop call mov pop ret mov push mov push mov xor mov push push push push push call mov add test je mov call call mov xor pop call mov pop ret call neg sbb neg ret andl lods dec out jns cs push mov cmp adc daa in pop and lods outsb cmovns mov mov xchg cmp inc mov pop jecxz shll mov dec fidivl nop lea xchg (bad) dec sbb (bad) or loop fisubr data16 (bad) pop sti sarb jo inc imul cs testb mov cmpl in outsb pop sub enter popl add sbb jg js iret not mov and or dec sub ret sbb call in cmpb jne push mov cmpl je cmpl je pushl call andl add cmp jne pop mov pop ret mov push mov sub push push mov test je mov test je cmpb jne mov test je xor mov xor pop pop mov pop ret push pushl lea call mov cmpl jne mov test je movzbl mov xor inc jmp lea push movzbl push call pop pop test je mov cmpl jle cmp jl xor cmp setne push pushl pushl push push pushl call mov test jne cmp jb cmpb je mov jmp xor cmp setne xor push pushl mov inc push push push pushl call test jne call or movl cmpb je mov andl mov pop jmp mov push mov push pushl pushl pushl call add pop ret lods int xor ljmp or arpl lret and jae icebp sbb fcmovb dec add or test pop xor add icebp decb test pushf mov inc or out sub out add jecxz adc ds das cld mov jo roll add mov or push adc popa test jnp jo movsl xchg mov and into jne cmp (bad) pop and jmp dec cli in xor lods cmp stos lret test adc sbb fidivl jp dec jns sbb and lods (bad) repz (bad) fdivl sub adc xchg in pop jnp cmc or sbb mov scas jne sub xlat mov arpl andb jnp jne pop and mov (bad) xlat fcoms and pop cmp test outsb ss mov shr adc push pushl pushl pushl pushl call add pop ret mov push mov mov mov push push xor mov mov mov shr and push cmp jne cmp jne mov mov and or jne inc jmp mov mov and or mov je cmp jne cmp jne push pop jmp and or je push jmp push jmp xor pop pop pop pop ret mov push mov mov xor mov mov and or je inc mov pop ret mov push mov sub push push push mov xor test jns mov mov lea pushl mov call lea cmp ja call push pop mov call jmp mov mov mov mov mov shr and cmp jne cmp jne push pushl push push pushl pushl pushl push push call mov add test je mov jmp push push call pop pop test je cmp sete dec and add mov mov mov jmp and mov or je movb inc mov xor cmp push sete movl dec xor and and add or mov pop jne mov inc mov mov and or jne and jmp movl jmp movb inc mov inc mov test jne movb jmp mov mov mov mov mov mov and mov ja cmpl jbe andl mov push pop mov mov test jle mov mov and and mov and movswl call push pop add movzwl cmp jbe add mov mov mov inc mov shrd mov mov shr sub dec mov mov test jns test js mov mov and and mov and movswl call cmp jbe push lea pop mov cmp je cmp jne mov dec jmp mov cmp je mov cmp jne add mov jmp inc mov jmp incb test jle push push pop push push call add add mov cmpb jne mov cmpb mov mov sete dec and add mov mov mov call mov xor and sub sbb js jg test jb movb add jmp movb add neg adc neg mov push pop mov test jl mov jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc cmp jne test jl jg cmp jb push push push push call add mov mov inc push pop add xor mov movb cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub lea push mov push pushl pushl lea push mov push pushl pushl call or add cmp je mov xor cmpl sete sub xor test setg sub lea push push mov push xor cmpl sete xor test setg add add push call add test je movb jmp pushl lea push push pushl pushl push pushl push call add pop pop mov pop ret lods int xor aam mov pop mov lcall in pop adc aam push push inc xchg test lds outsb std jle sbb out (bad) out xchg es pop adc sub int3 repnz push mov sti test adc dec call gs sub jne fs jle insb mov lea or sub cli mov and aas pop scas mov insl sub fldl push ja mov adcl and in iret mov out mov inc hlt push mov xchg in inc mov cmpsb mov pusha add pop fnstcw push inc out mov ret out sub out sbb mov loope jno insb aad sbb cld mov popa (bad) mov push and jno mov mov daa std xchg cmp mov dec xchg ss mov jg dec idivl ds adc mov sub xor push push pushl lea pushl stos stos stos lea mov push mov push pushl pushl call or add cmp je mov xor cmpl sete sub mov lea push mov add push xor cmpl push sete add push call add test je movb jmp pushl lea push push push pushl push call add pop pop mov pop ret mov push mov sub lea push push push pushl call mov mov mov mov dec cmpb je cmp jne xor cmpl sete add movw cmpl mov jne movb lea mov test jg push push pushl push call add movb inc jmp add test jle push push pushl push call mov add mov mov mov mov inc mov mov test jns cmpb jne mov neg cmp jge mov neg push push pushl push call push push push call add cmpb pop pop pop je mov andl xor mov pop ret mov push mov sub push push push pushl xor lea pushl stos stos stos lea mov push mov push pushl pushl call mov xor mov add cmpl sete dec mov or lea cmp je mov sub lea push push push push call add test je movb jmp mov dec cmp setl cmp jl cmp jge test je mov inc test jne mov pushl lea push push push pushl push call add jmp pushl lea push push pushl pushl push pushl push call add pop pop pop mov pop ret mov push mov sub mov xor mov mov mov push mov movzbl add cmp jae push movb pop mov xor pop call mov pop ret test je movb inc dec movb mov movl mov xor cmp mov mov mov setne mov dec mov movl mov and mov mov mov mov push mov movl push lea mov lea mov mov mov movl mov lea mov mov inc test jne sub cmp sbb inc add add pushl push push call add pop pop test je xor push push push push push call int3 mov push mov mov test je push mov mov push lea mov inc test jne sub lea push lea push push call add pop pop pop ret mov push mov push push push push mov test jne call push pop mov call mov jmp push mov test je cmpl je cmpl ja call push pop mov call mov jmp mov cmp je cmp je cmp je movb cmp jne movb mov and or jne pushl call mov pop test je pushl push push pushl call pop movzbl push pushl call add jmp mov and or je push jmp push pop cmp jg je sub je sub jmp pushl push pushl pushl pushl pushl push push pushl call jmp sub pushl je sub je push pushl pushl pushl pushl push push pushl call jmp pushl pushl pushl push push pushl call add jmp push pushl pushl pushl pushl push push pushl call add pop pop pop mov pop ret mov push mov mov test jne call movl call or pop ret mov pop ret mov xor or cmp sete ret mov push mov push mov push call push call pop pop test jne xor jmp push push push call pop push pop cmp jne mov jmp push call pop cmp jne mov incl lea mov test jne mov lock mov test jne push call push mov call mov pop pop test jne lea mov mov mov mov jmp mov mov mov movl movl mov jmp xor pop pop pop pop ret mov push mov cmpb je push mov push lea mov shr test je push call pop mov lock xor mov mov mov pop pop pop ret mov push mov sub lea push call cmpw je mov test je push push mov lea lea mov mov cmp jl mov push call mov pop cmp jle mov push xor test je mov mov cmp je cmp je mov test je test jne push call test je mov mov and sar imul mov add mov mov mov mov mov inc add inc mov cmp jne pop pop pop mov pop ret mov push push push xor mov mov and sar imul add cmpl je cmpl je orb jmp mov movb sub je sub je push sub jmp push jmp push pop push call mov cmp je test je push call jmp xor test je and mov cmp jne orb jmp cmp jne orb jmp orb movl mov test je mov movl inc cmp jne pop pop pop ret push push call push call pop xor mov mov push call pop test jne call call mov mov movl call mov call ret mov push call pop ret lods int ljmp pop lods (bad) xor push out aas idivb add lock imull int push jmp call and ret push push call andl mov pushl call pop andl mov mov and xor ror mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov mov dec sub je sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov lea mov sub add push xor shr cmp sbb not and je mov inc mov lea cmp jne pop pop ret mov push mov imul mov add cmp je mov cmp je add cmp jne xor pop ret lods int xor imull stc leave loopne arpl pop mov push mov pushl mov call pushl mov call pushl mov call pushl mov call pop ret enter mov mov sub mov nop outsl push cwtl cs sub lds hlt sbb mov outsl cltd mov (bad) out pop fstenv adc lret jge icebp mov xor jo enter mov daa popf (bad) mov and scas mov negl or dec inc xchg cwtl rcrb xchg loopne cwtl xchg lds sbb inc mov scas clc xor in leave mov inc loope jo fdivl mov dec jb push fs ret lahf push scas dec cmp mov xchg push pop movsl ljmp faddl int3 out add mov shrl dec aas lcall jp mov adc inc cmc (bad) cmpsb dec das inc jns out mov push pusha repnz testb fs in iret sahf out cmpsl bound mov data16 cmp (bad) and jmp mov rcll (bad) xchg sub rcr inc lods inc add adc enter mov or pop push sbb xchg fbld les or test sub lret push adc and add (bad) pop outsb rcll and lods inc pop pop push adc mov and imul bound repnz mov fwait (bad) pop push pusha sbb jl ljmp dec (bad) (bad) gs dec je mov inc sub add sub out mov or imul jmp sbb inc pop push cmc pop incl ljmp jb push ficomp cltd cmc data16 sbb cmpsl scas sbb jne test xchg dec in movsl sub push adc cmp mov fidivrl aad cmp sub pushl lea call mov movzbl mov movzwl and cmpb je mov andl mov pop ret mov push mov push push mov xor mov push push mov push test jle push pushl call pop cmp pop lea jl mov mov test jne mov mov mov mov xor cmp push push push pushl setne lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je pushl push push pushl push push call test je mov xor push push push push push push push pushl pushl call mov test je testl je mov test je cmp jg xor push push push push pushl push push pushl pushl call mov test jne jmp lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp xor test je push push push push push pushl push pushl pushl call test je xor push push cmp jne push push push push push pushl call mov test jne push call pop xor push call pop mov lea pop pop pop mov xor call mov pop ret pushl pushl jmp push call pop jmp mov push mov sub pushl lea call pushl lea pushl pushl pushl pushl pushl pushl pushl push call add cmpb je mov andl mov pop ret int3 int3 push mov push push push mov or je mov mov mov mov mov lea mov or mov je or je add add cmp jb cmp ja add cmp jb cmp ja add cmp jne sub jne xor cmp je mov jb neg mov pop pop pop leave ret dec dec mov mov sbb (bad) mov lea leave jns mov sbb je (bad) incl in pop push xor (bad) lret sub jae sbb inc push mov ret push psubusb mov insl leave jb xor push insb push dec mov iret mov aam add (bad) js jp fcompl les sahf dec mov xchg pop cmp lfs sbb mov jg dec cmp sbb (bad) mov shlb scas lds xor fwait add adcl cmp mov push dec scas icebp sahf scas outsb decl call push mov stos or inc jge movsl xor (bad) pusha xlat add mov pop faddl push (bad) dec mov add scas mov mov int lret inc jns cmp jbe jne push jmp or mov push mov push push test jne mov test jne call movl call mov jmp mov test je mov mov cmp jbe call movl call mov jmp push push pop push pop sub mov jmp push pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add sub je test je cmp je movzwl movzwl sub pop jmp push pushl pushl pushl call add pop pop mov pop ret lods int xor ljmp adc mov scas movsl or mov aaa inc fmul sub push pop lahf fisubl bnd (bad) ja cs push mov sub cmp push dec mov fdivrl insb mov jns loope jmp repz xor add out mov gs lret push int3 insb mov push and or xchg pop fs aam cmp daa js hlt inc out jae dec fisttpll test nop adc jbe fwait popf cmpsl cmpsb inc dec daa mov (bad) push repnz push rclb push test insl push fsts cmp dec aam or mov mov sbb xchg sub cmp xor inc cmp pop adc mov or into ret (bad) loopne cmp cwtl add jle das inc in in push mov push xchg movsb adc cmovno insl add mov mov xor test je test jns push pop push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je test je push pop test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je inc test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or mov pop ret mov push mov mov xor test je test je mov push mov test je or test je or test je or test je or push mov mov and cmp pop jne or jmp test je or jmp test je or pop mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov mov xor test je push mov mov and cmp jne inc mov mov and cmp jne or mov mov and cmp jne or mov mov and cmp pop jne or mov and cmp jne or mov pop ret mov push mov push push xor and mov fnstcw cmpl jl stmxcsr movzwl push push call pushl mov call pop or pop and pop mov pop ret mov push mov push push xor xor mov mov fnstsw cmpl jl stmxcsr movzwl mov test je test je mov test je or test je or test je or test je or mov test je test je mov test je or test je or test je or test je or or and mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov sub push push push xor mov mov mov mov mov mov mov fnstenv mov push call pushl mov not and call pop or pop mov fldenv cmpl jl mov stmxcsr push call pushl mov not and call pop or pop mov ldmxcsr pop pop pop mov pop ret mov push mov cmpl jne call movl call or pop ret pushl push pushl call pop ret push push call andl push call pop andl push pop mov cmp je mov mov test je mov shr test je mov pushl call pop cmp je incl mov mov add push call mov pushl call pop mov andl inc jmp movl call mov call ret push call pop ret mov push mov mov push lea mov and cmp je xor jmp mov test je mov push mov sub mov andl test jle push push push call pop push call add cmp je push pop lock or jmp mov shr test je push pop lock xor pop pop pop ret lods int xor inc mov pusha sar mov or add dec jl xchg fisubl push testb sbb scas sbb cmc (bad) insb fisub mov bound scas arpl jmp push call pop ret push push call andl andl push call pop andl mov mov lea mov mov mov cmp je mov mov test je push call pop movl mov shr test je cmp jne push call pop cmp je incl jmp test jne mov shr test je push call pop cmp jne or andl call mov add jmp mov mov pushl call pop ret movl call cmp mov je mov call ret mov push call pop ret mov push mov push mov push lea mov shr test je mov shr test je pushl call pop mov lock xor mov mov mov pop pop pop ret addl sbb movsl sbb bound dec push js sub inc lea movsb int out or ficomp xchg jne cmp dec popf (bad) ret pop jg inc pop cmpsl fwait movsl sub cld rolb or sbb fstpt insl aam adc lea push mov push mov cmp jne call mov cmp jne mov jmp push lea push push lea push push call test je mov mov pop ret mov push mov mov cmp jbe or pop ret sbb neg pop ret lods int xor sub jge mov sti jns out scas dec add add or sbb lods int dec push lret xchg insl xchg pop mov lahf rorb dec (bad) mov mov push out es inc mov subl dec mov mov ficom and cmp mov in aad leave nop hlt pop pop mov cwtl inc jae add divl jmp push mov out mov out leave lock aam cmp sbb (bad) xchg sbb jns adc pop and push push pop sbb sub and cmp repnz ret lea xor or cmp (bad) adc push push inc or pop jp pop mov das and aam or rorb cmp push dec cwtl ja pop ds xchg (bad) out test je ret (bad) pop out stos movsb push lock cmp mov push scas pusha sub pop push sub push dec dec adc addr16 rcll test out mov lahf ret loope or repnz mov push lea xchg dec pop or jno,pt inc clc xorl pushf xchg gs bound int xor sub ficoml (bad) iret push lahf imull mov push mov push mov lea mov inc test jne sub or push mov inc sub mov cmp jbe push pop jmp push push lea add push push call mov pop pop test je push pushl push push call add test jne pushl sub lea pushl push push call add test jne mov push call push mov call pop mov pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov mov push mov push mov push mov jmp mov cmp je cmp je cmp je push push call pop pop mov cmp jne mov cmp jne lea cmp je push xor push push push call add jmp xor cmp je cmp je cmp je mov jmp xor inc movzbl sub inc neg push sbb and mov lea push push call add lea push push push push push push call mov mov cmp jne push push push push call add mov cmp je push call mov mov pop pop xor pop call mov pop ret mov sub sar mov cmpb jne mov test je cmp jne cmpb je push pushl lea push push call add test jne lea push push call test mov jne mov mov mov sub sar cmp je push sub push push lea push call add jmp mov push push mov mov jmp pushl call pop add cmp jne pushl call pop pop pop ret mov push mov push push mov call mov test je pushl call pop mov jmp mov mov mov addl xor pop pop pop ret lods int xor ja sub mov js cwtl push and fcmovnb call icebp imulb lds fidiv pop jp fld int cld (bad) jae xor ja dec icebp xchg and in scas cmpsb andb popf ret xchg shlb xchg sbb test mov jmp mov shll test int3 xchg pop push xchg (bad) xor cmc xchg sub cmc pop mov mov mov push dec sbb ret js ljmp push push call mov pushl call pop andl mov call movl call call ret mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret lods int xor test push in insl fs inc and adc sbb test sub pop push xor (bad) mov cmp inc sub adc inc and jae scas hlt mov pop lret stc sahf popa fwait fwait inc leave push dec cmp cmp mov in jg stos and shlb dec push out aaa mov aas popa pusha adc mov cltd jmp insb or jl adc loopne push movsb xchg into fistl inc xor and xchg mov popa dec and (bad) outsb push mov fsts ljmp inc repnz enter jo push inc pop lock inc dec dec mov push mov mov sub je sub je sub je sub je xor pop ret mov pop ret mov pop ret mov pop ret mov pop ret mov push mov sub lea push call andl mov cmp jne movl call jmp cmp jne movl call jmp cmp jne mov movl mov cmpb je mov andl mov pop ret lods int xor loopne xchg mov jb orb (bad) jne sbb fisttp shlb or inc sbb sub jmp cltd lods and scas stc in fistp test mov adc outsb cmp dec out inc loope data16 sub call in sub mov xor mov push push mov lea push push pushl call xor mov test je mov mov inc cmp jb mov lea movb jmp movzbl movzbl jmp cmp jae movb inc cmp jbe add mov test jne push pushl lea push push lea push push push call push pushl lea push push push lea push push pushl push call add lea push pushl push push push lea push push pushl push call add mov movzwl test je orb mov jmp test je orb mov mov jmp mov inc cmp jb jmp push lea mov pop sub mov add add mov add cmp ja orb lea jmp cmpl ja lea orb lea mov jmp mov mov lea inc cmp jb mov pop pop xor pop call mov pop ret mov push mov sub call mov call pushl call pop mov mov mov cmp jne xor jmp push push push push call mov or pop test je mov mov mov rep mov push pushl andl call mov pop pop cmp jne call movl mov push call pop pop mov pop pop mov pop ret cmpb jne call mov mov lock dec jne mov cmpl je pushl call pop movl mov mov xor mov mov testb jne testb jne lea mov lea push push call cmpb pop pop je mov mov jmp cmpb jne push push call pop pop movb mov ret push push call xor mov call mov mov test je cmp je mov test jne call push call pop mov mov mov cmp je test je or lock jne cmp je push call pop mov mov mov mov lock movl call jmp mov push call pop ret mov call ret lods int xor push out into fidivr and push add or bnd push mov clc mov jecxz das sbb jno test sub xchg in (bad) enter xchg cmp jmp out jge aas cmp cli cmpsl fisttp pop arpl adc jg popa arpl sub sub mov mov rcll (bad) cli mov cmc push sahf stos adc sti aas pop xor (bad) outsb movsl imul mov xchg ret mov or cmpsl and mov (bad) sbb mov add jbe push fnsave (bad) jnp pop stos or push mov sbbb data16 popf in fsubl sbb fdiv jne,pt or or into sbb mov cmp jmp xchg in repz xor sub outsb jg js jo mov out out mov lret push push cmpsb mov aaa icebp nop push mov jo ja (bad) mov or sub repnz mov pushf adc inc add (bad) sub aam cli fistpl sbb inc mov and mov and sub pop mov xlat push stc pop jae (bad) mov jno dec (bad) cmp sbbb mov xchg cmp pop xchg je stc scas push inc stc subl or dec jb fsub and insl repz mov sub sbb fdecstp cmp inc aam jne mov pop mov dec ss mov clc (bad) mov push push inc xlat pop mov push mov mov push xor cmp je push mov lea mov add cmp jne sub sar lea add cmp jne pop lea pop pop ret mov push mov push push push push call mov xor test je push call pop push push push mov push sub sar push push push push call mov test je push call mov pop test je xor push push pushl push push push push push call test je mov xor jmp xor push call pop jmp mov test je push call pop pop mov pop mov pop ret mov push push call mov test jne xor jmp push push call sub sar lea push call mov pop pop test je push push push call add push call pop push call pop mov pop pop ret mov push mov sub push mov test jne call movl or jmp push push push push mov call mov pop pop test je cmp je mov xor cmp sete mov cmp jne push call pop mov mov mov test jne mov cmp je test je call test jne call movl or push call pop pop mov pop pop mov pop ret test jne test jne push push call push mov call add cmp je mov test jne push push call push mov call add mov test je mov mov sub sar push push mov call mov pop pop test js cmp je pushl call pop mov cmp jne mov mov mov jmp mov mov inc cmp jne push push push call push mov call add mov test je jmp cmp jne neg mov lea cmp jb cmp jae push push push call push mov call add test je mov mov mov mov mov mov cmp je mov lea mov add cmp jne sub sar push lea push mov call mov pop pop test je mov push pushl push call add test jne mov inc lea mov movzbl neg sbb not and push push call test jne call or movl push call pop jmp push push push push push call int3 mov push mov push push push mov test jne xor jmp push xor mov mov mov push cmp je lea inc cmp jne lea push push call mov pop pop test je cmp je mov sub mov lea mov add cmp jne sub sar push lea push mov call mov xor push call add cmpl je pushl pushl pushl call add test jne add cmp jne xor push call pop mov pop pop pop mov pop ret call xor push push push push push call int3 mov push mov push push push mov mov cmpl je mov push pushl pushl call add test jne mov movzwl cmp je test je add cmpl jne sub sar neg pop mov pop pop pop ret sub sar jmp mov push mov pop jmp call test mov setne ret andl mov ret mov push mov push mov xor mov push mov cmp jne mov jmp push mov push mov test je mov call call test je add cmp jne cmp jne mov jmp cmp je add cmpl je mov test je push mov call call pop sub lea cmp jne xor pop pop mov xor pop call mov pop ret mov push mov push mov xor mov push mov cmp je add push mov test je push mov call call pop sub lea cmp jne pop mov mov xor pop call mov pop ret mov mov xor and ror neg sbb neg ret mov push mov pushl mov call pop ret lods int xor pop jg and test xchg mov mov jne (bad) jae sarb xchg inc or mov movsb xchg ja adc out inc pop or bound add mov push mov fldl fldz fucom fnstsw push test jp fstp xor jmp push mov movzwl test jne mov mov test jne test je fcompp mov fnstsw test jne xor inc jmp xor testb jne add mov test jns or mov add dec testb je mov mov mov and mov test je mov or mov fldl push push push fstpl call add jmp push push fstp push fstpl call movzwl add shr and sub pop mov mov pop pop ret mov push mov push push mov movzwl fldl and fstpl lea shl or mov fldl mov pop ret mov push mov cmpl mov jne test jne inc pop ret cmpl jne test jne push pop pop ret mov mov and cmp jne push jmp mov cmp jne testl jne test je push jmp xor pop ret lods int xor outsl sbb loopne cmp mov in push push fstcw mov mov not and and or mov fldcw movswl mov pop ret mov push mov mov sub test je fldt fistpl fwait test je fstsw fldt fstpl fstsw test je fldt fstpl fwait test je fldz fld1 fdivp fstp fwait test je fldpi fstpl fwait mov pop ret mov push mov push fstsw movswl mov pop ret mov ret lods int xor push out into fidivr and repnz es add pushl mov mov pop nop insl stos mov pop test ja nop ret aaa pop outsl call cs sub jne lds adc test aad je dec (bad) push xlat mov jbe and insl push aaa mov lock cltd push xchg jl js or xchg test movsb push adc xor frstor insl mov out cmp je out ret sbb insl pop (bad) cmp sbb mov out es or test adc sbb movsb jno and out aas (bad) jnp sub cli repz sbb add repnz mov dec lret repz popa std jb xor call xchg dec and in sub mov xor mov mov mov push mov push mov push xor mov mov mov cmp jne push lea push pushl push push call add mov test je push push call push mov call add cmp je mov lea push lea push push pushl call add test jne xor jmp call cmp jne push push pushl push pushl call add mov test je push push call mov pop pop test je pushl push pushl pushl pushl call add test je mov mov mov jmp or push call pop mov jmp cmp jne push push pushl push call mov test je push push call mov pop pop test je pushl push pushl pushl call jmp test jne push lea mov push mov or push push call test je mov mov jmp or mov pop pop xor pop call mov pop ret push push push push push call int3 mov push mov sub mov xor mov push push push pushl lea call mov test jne mov mov mov mov xor xor cmp push push pushl setne pushl lea push push call mov test je lea lea cmp sbb test je lea cmp sbb and lea cmp ja cmp sbb and call mov test je movl jmp cmp sbb and push call mov pop test je movl add jmp mov test je push push push call add pushl push pushl pushl push pushl call test je pushl push push pushl call mov push call pop cmpb je mov andl mov lea pop pop pop mov xor call mov pop ret mov push mov sub push mov push push mov xor test je xor test je mov cmp jne call movl call or jmp pushl lea call mov test je cmp jne test je mov movzbl mov cmpb je inc add cmp jb jmp push push or push pushl push pushl call test jne call cmp jne mov mov mov mov test je mov dec mov test je lea movzbl push push call pop pop mov test je inc cmpb je mov inc mov test jne mov push push sub push push mov push pushl call test jne call movl xor mov jmp mov jmp cmp jne mov lea mov inc test jne sub jmp push push or push pushl push pushl call test jne call movl jmp lea cmpb je mov andl mov pop pop pop mov pop ret mov push mov sub push mov push push mov xor test jne test je jmp test jne call push pop mov call jmp xor mov mov test je mov pushl lea call mov cmp ja mov cmp jbe call push jmp lea push push pushl push call add cmp jne test je xor mov call mov jmp inc test je cmp jbe cmpl je xor mov call push pop mov call jmp push mov pop xor mov mov test je mov cmpb je mov andl pop mov pop pop mov pop ret mov push mov push pushl pushl pushl pushl pushl call add pop ret mov push mov push pushl call pop mov mov mov test jne call movl mov push pop add lock or jmp mov mov shr test je call movl jmp mov mov test je mov andl mov mov shr test mov je mov mov mov push pop add lock mov push push pop add lock mov push pop add lock mov andl mov mov test jne push mov push call pop cmp je mov push call pop cmp jne push call pop test jne pushl call pop pop pushl mov push call pop pop test jne mov push pop add lock or jmp movzbl pop pop pop ret mov push mov push push pushl call pop mov mov mov test je mov xor mov mov sub inc mov mov mov dec mov test jle mov push pushl push call add mov mov mov mov mov xor cmp sete jmp cmp je cmp je mov mov and sar imul add jmp mov testb je push push push push call and add cmp jne mov push pop add lock mov jmp push lea push push call add dec neg sbb inc pop pop pop ret mov push mov pop jmp mov push mov mov mov mov and cmp jne fldl push push fstpl call pop pop sub je sub je sub je xor inc pop ret push jmp push pop pop ret mov pop ret movzwl and test jne testl jne cmpl je neg sbb and lea pop ret fldl fldz fucompp fnstsw test jp neg sbb and lea pop ret neg sbb and lea pop ret dec idivb dec sbb jo push test jge stc lods pop mov aam push cli fildl jae mov in adc fstpl fstpl call leave ret movlpd movlpd movlpd andpd movsd psrlq pextrw orpd pextrw and add and mulsd movlpd add movapd mov sub sub or cmp jae mov mov movd psubq psrlq cvtdq2pd movlpd movsd psrlq pextrw andpd and add and mulsd mulsd add addpd orpd addsd andpd movsd psrlq pextrw movlpd subsd movlpd and add and mulsd mulsd addpd andpd subsd addsd movsd mulsd mulsd mulsd subsd mulsd movsd subsd addsd movlpd pextrw subsd subsd movlpd pextrw subsd movsd addsd subsd subsd unpcklpd and cmp jae and sub add mov sub sub or cmp jae subsd subsd movlpd andpd andpd subsd xorpd mov pinsrw movsd mulsd subsd subsd mulsd mulsd movapd mulsd cvtsd2si mulsd movapd addsd pshufd addsd mov sub add or sub cmp jle add and and add addsd movsd addsd mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd xorpd mov addsd pinsrw addsd movlpd movd mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd addsd sub addsd addsd addsd movlpd fldl add ret movlpd movlpd movd movsd andpd psrlq movd cmp jae or cmp je cmp jge neg add psllq orpd mov movd psrlq psubd pxor pmaxsw psllq pcmpeqd pmovmskb mov and cmp jae and cmp jne movlpd movlpd mov movd andpd psrlq psubd movlpd psllq pcmpeqd pmovmskb and mov add and cmp jb mov movlpd movlpd jmp movlpd movlpd movd psrlq movd mov and cmp jb ja cmp ja jmp mov xorpd mov pinsrw movlpd movlpd mulsd movd psrlq movd cmp je andpd movsd andpd psrlq pextrw orpd and add and mulsd movlpd add movapd mov jmp mov and cmp jne mov and cmp je shl and mov or movd psllq movlpd movlpd divsd mov jmp shl and cmp jne fldz ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw and cmp je and cmp jne movlpd movlpd mov movd andpd psrlq psubd pxor psllq pcmpeqd pmovmskb and cmp je movlpd pextrw and cmp je fldl ret fldl ret movlpd pextrw and cmp je fldz ret movlpd pextrw and cmp je fldz ret addsd movsd mov jmp movlpd movd psrlq movd and or mov cmp je movlpd movlpd mulsd mov jmp movlpd movlpd movd cmp jne psrlq movd cmp je cmp jne fld1 ret movlpd xorpd andpd pcmpeqd pmovmskb and cmp jne pextrw movlpd and xor or cmp je cmp je pextrw and cmp jb fldz ret pextrw and cmp jae fldz ret fldl ret addsd movsd mov jmp movd psrlq movd and mov or movlpd mov cmp je movd mov and cmp ja jb cmp ja sub movlpd fldl add ret fld1 ret sub movlpd mov mov add mov add mov sub mov call fldl add ret cmp jle cmp jae push mov and add sub and push mov jmp cmp jle push mov and add and add push mov addsd movsd addsd mov sub mulpd subsd mulpd subsd add add add add movapd movapd mulpd addpd pshufd mulsd addsd addsd movlpd movd sub neg sar add mov and add xorpd mov pinsrw mulsd mulsd psllq pshufd movapd addsd mulpd addsd unpcklpd mulpd mulsd mulpd addpd mulpd mulsd pshufd mulsd pshufd mulsd mulsd movd psllq movd pcmpeqd psllq addsd addsd andpd addsd xorpd pcmpeqd psllq subsd movsd addsd andpd pinsrw pop subsd addsd addsd cmp jg pop mulsd mulsd addsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret pop addsd mulsd mulsd addsd pextrw and mov cmp je mov cmp je sub movlpd fldl add ret movlpd movd mulsd psllq orpd mov jmp mov cmp je movlpd mulsd jmp movlpd mulsd jmp pshufd mulpd pextrw and mov sub sub or cmp jb cmp jb or movd psllq sub movlpd fldl add ret movlpd pextrw and sub pextrw xor and cmp jne jmp nop out mov mov jb ret mov repnz test (bad) (bad) (bad) xor fldl2e fmulp call fld1 faddp testb je fld1 fdivp test jne fscale or je fchs jmp call or je xor cmp je not fxch fabs jmp jmp jmp fbld (bad) lods adc test (bad) incl ret fldln2 fxch ftst fstsw fwait testb jne fyl2x ret movb fstp fldt ret or jne ret fldlg2 jmp fldln2 fxch or jne fyl2x ret jmp call fstp fstp or jne fldz cmp jne or je fchs ret movb fldt cmp jne or je fchs jmp fstp jmp fstp jmp pop ftst fstsw fwait testb jne fstp fldt or je fchs ret movb jmp fstp fstp fldt movb ret or jne fstp fldt ret fld fabs fldt fcompp fstsw fwait testb jne fld frndint ftst fstsw fwait mov fxch fsub ftst fstsw fabs f2xm1 ret fld frndint fcomp fstsw sahf jne fld fmull fld frndint fcompp fstsw sahf je mov ret mov jmp mov jmp push sub mov push sub fstpl sub fstpl fsave call add frstor fldl add pop test je jmp ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fwait mov shl sar rol mov and xlat movsbl and mov add add jmp cmpb jne mov or and mov jmp mov mov fldcw mov fxam mov fstsw movb fxch mov fxam fstsw fxch mov shl sar rol mov and xlat mov shl sar rol mov and xlat shl shl or movsbl and mov add add jmp call fxch fstp ret call jmp fstp fbld fstp fldz test je fchs ret fstp fstp fld1 ret fisttpll popf in dec xor mov jp arpl cmp pop mov inc insb inc lock iret push xchg and (bad) (bad) (bad) (bad) fldt testb je movb jmp movb faddp ret fstpt fldt testb je fxch fstpt fldt testb je movb jmp movb faddp ret fstp fstp fldt cmpb jg out mov mov ja das int fcomp fcomp sub or je fchs or je fldl fmulp ret or je fchs ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov add mov mov mov mov mov jmp push mov add mov fstpl mov mov mov mov mov lea lea push push push call add fldl cmpw je fldcw leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 fld frndint fsub fxch fchs f2xm1 fld1 faddp fscale fstp ret mov and or mov fldcw ret test je mov ret faddl mov ret mov and cmp je fldl ret mov sub or mov mov mov shld shl mov mov fldt add test mov ret mov and cmp je ret mov ret inc dec jmp aaa adc sub add cmp je and je fstsw and je mov call pop ret fldcw pop ret sub fstl mov add and jmp sub fstl mov add and je cmp je mov cmp je and jne fstsw and je mov cmp je call pop ret call pop ret fldcw pop ret fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jae fmull jmp fldl fxch fscale fstp fld fabs fcompl fstsw sahf mov jbe fmull jmp mov push mov push push fldl push push fstpl call pop pop test jne fldl push push fstpl call fldl fucom fnstsw pop pop fstp test jp fmull push push fstl fstpl call fldl fucompp fnstsw pop pop test jp push pop jmp xor inc jmp fstp xor mov pop ret mov push mov fldl mov fabs mov cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldl jmp fcom fnstsw fstp test mov jne fstp fldz jmp cmp jne cmpl jne fld1 fcom fnstsw test jp fstp fstp fldz jmp fcom fnstsw fstp test mov jne fstp fldl jmp fstp cmp jne cmpl jne fldz fldl fcom fnstsw test je fcomp fnstsw test mov jnp fstp fld1 jmp cmp jne cmpl jne fldl push push fstpl call fldz fldl pop pop fcom mov fnstsw test jne fstp fstp fldl cmp jne fchs jmp fcomp fnstsw test jp cmp jne fstp fldl jmp fstp fld1 mov fstpl xor pop ret mov push mov mov lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret lods int xor push inc sbb sbb insb popa movb push xor jecxz mov xor repnz js push mov popa and pop repnz pop add mov push dec loopne sub sub xchg lret fstpt cmp xlat jae dec cmp call xchg pop pusha sbb cwtl jg sahf mov divl mov mov test xchg pop fsubrp test pop cmpsl imul mov xchg fiadd dec jmp es sbb insb ss in sbb jmp cs jp mov out mov aam adc int repz mov sub add pushf out push aaa movsl add and pop gs xor cmp xchg ljmp data16 or jno (bad) xchg pop mov in xor xor xchg gs cmc mov repnz lods xor xor sbb fs pop test sub (bad) push into sbb mov ljmp lret xor pop jp adc (bad) mov test je cmp je xor inc lock inc pop ret mov pop ret mov push mov push mov test je cmp je mov test jne push call push call pop pop pop pop ret mov push mov mov test je cmp je or lock dec pop ret mov pop ret mov push mov mov test je lock mov test je lock mov test je lock mov test je lock mov test je lock push push lea pop cmpl je mov test je lock cmpl je mov test je lock add sub jne pushl call pop pop pop ret push push call andl call mov mov test je mov test jne push call pop andl pushl lea push call pop pop mov mov movl call test jne call mov push call pop ret mov call ret mov push mov push mov push test je mov test je mov cmp jne mov jmp push mov call pop test je push call cmpl pop jne cmp je push call pop jmp xor pop pop pop ret mov push mov push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret lods int xor ljmp sahf mov inc in jnp xlat cmpsb xchg inc (bad) les stos hlt pop int fcoml or in dec (bad) mov pop icebp jbe jecxz pushl jmp and and pushf insl sbb add xor jp not pop daa dec add adc xor lcall in adc icebp pop pop or dec push add das mov mov dec sbb pop mov test fst cmp out jns (bad) aaa ret sub push aaa (bad) jle lret aad mov push movsl add xor inc jg mov insb movsb and fidivr aam cmp into int xor ret cmpsl or (bad) hlt xchg into lods inc fistpll jb pminsw xor dec lea and xchg subl inc call negl jmp loope mov pop adc out cltd jo add aad inc stos or pop lcall enter mov inc int dec das popl lea aam call test pop out lea fldt inc pop (bad) xchg divb mov sub add aas sti inc iret lahf push mov mov xchg in nop lock shl and iret stos jmp sar dec jle adc xor push cmp xchg push mov inc into dec (bad) divl sub sahf aad arpl icebp sub frstor cmpl inc cld jno adc js flds lds mov xor and adc dec sbb enter jecxz mov lods xchg pusha cmp loope mov dec (bad) adc outsl cmp and pop xchg jmp add xchg jmp enter adcl sbb dec push enter or pop cltd ljmp out ficompl pop arpl int3 and fwait xchg or repnz jmp leave adc outsl sbb pop stos sbb and fldt xchg mov xchg test mov cmp test into (bad) insl (bad) jmp testl inc outsb or sbb xchg (bad) push popf ja je cmp jg push push jl or fist and je out in xor out stos pop das in push out push mov data16 jg pop mov (bad) in adc aaa mov mov or sub inc mov outsb mov lods xchg push out push mov cmovns add icebp shl jp jl insl sbb pop test pop fwait pop roll push (bad) sub icebp mov insb cli mov xchg push mov imul test call sbb adc sbb mov fiaddl xchg inc or fistl lret lret mov sub repz inc fs ficom loopne js pop ret mov call in push mov test je mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop mov cmp je push call pop pop pop ret lods int xor ljmp mov mov repz jae icebp outsl lods push push dec aam lret clc sub mov mov or sub xchg test xor sub lods imul stos push loop jns das (bad) out mov adc sbb xor jnp and add mov dec jnp ffree and lcall fiadd arpl nop inc lret out push ljmp movb mov mov inc loop inc ret cmp pop mov insb mov sub sub fldcw movsl adc mov mov push push pop push notb dec stos sarb push mov rolb hlt mov sbb inc rcl jo xor imul mov cmpl mov fdivrl push add es mov lahf jae fwait test adc xchg jne movsb xor inc push pop enter rol lock sub xchg xor les mov repz inc and xor or lahf arpl cmpl xor rcr xor add jae dec ljmp hlt cmp jnp mov pop imul icebp lock cwtl rol outsb mov in lret int xchg and call ja mov or mov xlat mov cmp and lcall inc into xchg dec loope mov stos dec ljmp (bad) pop adc push scas scas jno rol pop (bad) es stos (bad) int3 mov dec enter mov inc (bad) jp mov cmp and test loop mov lock pusha or jge rcr daa and ljmp sub (bad) xchg sbb in nop aam xchg push adc lods jno mov sub mov andl push push mov push push mov mov call pop mov xor push mov pop push pop mov mov jmp mov mov push pop add xor div mov lea push pushl lea push push push call mov or mov add lea add push push pushl lea push push call or mov lea add push pushl lea pushl push push call or mov lea mov add push push push lea push push call or add mov inc subl mov jne mov push pop add mov mov movl add add push push push lea push push call pushl or lea pushl push push push call or mov add push push push lea push push call mov or mov add push push push lea push push call or add mov add inc subl mov mov jne mov lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call or lea push push push lea push push call add or lea push push push push lea push call or lea push push push lea push push call or lea push push push lea push push call add or neg sbb pop pop inc pop mov pop ret mov push mov push mov test je push push call lea push push call lea push push call lea push push call lea push push call pushl call pushl call pushl call lea push push call lea push push call add lea push push call lea push push call lea push push call pushl call pushl call pushl call pushl call add pop pop ret mov push mov push push mov cmpl jne mov jmp push push call mov pop pop test jne push call jmp push push call pop pop test jne push call push call pop xor inc jmp push movl call pop pushl call mov xor pop pop pop pop ret mov push mov push push push mov test je mov test je mov test jne xor mov call push pop mov call pop mov pop pop pop ret mov xor cmp je add sub jne test je sub movzwl mov lea test je sub jne test jne xor mov call push jmp mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne xor mov jmp mov test jne xor mov call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne movzwl mov lea test je sub jne jmp movzwl mov lea test je sub je sub jne test mov jne xor mov pop test pop jne cmp jne mov xor push mov pop jmp xor mov call push jmp mov push mov pop jmp mov push mov push mov xor push push push mov cmp je mov movzwl mov test je movzwl mov mov cmp je add movzwl test jne xor add cmp jne pop sub pop sar pop mov pop ret mov push mov mov xor push push push cmp je mov movzwl mov test je movzwl mov cmp je add movzwl test jne add xor cmp jne xor pop pop pop pop ret mov push mov sub mov xor mov push mov lea push push orl call cmp jle lea push lea xor mov add cmp jne sub sar lea push lea push lea push push call add test jne pop mov xor pop call mov pop ret push push push push push call int3 mov push mov push push push mov xor push push pop mov mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov xor mov push push push push call mov test setne bt setb and bt setb test jne mov pop pop pop mov pop ret mov push mov push push mov xor push push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push push push mov call testb jne mov pop pop pop pop ret mov push mov mov xor test jne xor pop ret movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret lods int xor dec mov push jbe in call ja mov or repnz inc fstpl shrb pusha push ret cmc jno lcall xchg in movsl push call cmp aaa into mov fucomi xchg mov cmp lea aaa or dec mov and cmp nop in hlt cmp into test sbb cmp movsl xchg and push cmp xor dec push gs andl mov insb pop sbb mov movl test lods mov int3 cmp jecxz mov lds adcb cli or add adc inc mov pushf frstor dec jl cmpsl cld mov (bad) jnp sbb fsts test lret inc sbb leave inc mov cli adc jo dec or mov test cmp nop or xchg int and push xlat lock cmp xor in lods das push sbb int or lods jle mov addl loopne push inc (bad) ret xchg xchg and lea testl insb fisttpl adc pop dec pop into add lret mov dec je push stc fldenv pusha ljmp mov insl and ss aas and and int3 scas out ret push xchg jnp add inc push sbb insb dec outsl cmc dec es pop mov into push aas jge adc inc inc xchg mov hlt pusha notl hlt movsb test pop jb fucomip (bad) jno inc cmpsl sbb lahf jmp jg int dec and jle sbb mov mov iret in idivl dec cmpsl jl xor mov lods das (bad) dec mov (bad) or xchg xlat cmpsl iret je lea push cmp sbb lret call xchg jle mov xchg and and call fs leave ret mov daa mov jecxz cmp fdivl push pop mov or add divl mov pop jns test cmp sarl gs fs sbb cltd and lods push jmp in and lcall ljmp aaa imul loope xor in or imul cld test ret arpl bound mov push mov sub mov xor mov push push mov call mov lea push push mov neg sbb and add push push call test jne and inc jmp lea push pushl call pop pop test jne mov push xor lea mov add cmp jne sub sar lea push push lea push push call add test jne orl pop mov shr not and mov pop xor pop call mov pop ret push push push push push call int3 lods int xor loopne fisubr std (bad) fcomps lret or mov cld stos dec or fidiv pushf lock mov mov shlb mov and jle inc outsb stc pop popa repnz xor not addr16 fisubrl or pop or xchg mov push mov (bad) fbstp out add mov repnz mov adc stc movsb sti xor cmp out pop xor cmp or or inc mov fnstenv outsb push cld push mov pop (bad) iret adc insl push je adc bound mov popl xchg popl scas add and es mov dec push movsl sbb ljmp adc in sub mov xor mov push mov lea push push push push call test je push lea push push call add neg sbb inc mov xor pop call mov pop ret mov push mov push push mov xor push inc xor test js push test je lea cltd sub mov mov sar imul mov pushl mov pushl call mov pop pop test jne mov mov add add mov mov jmp jns lea jmp lea cmp jle pop xor test pop sete pop mov pop ret mov push mov push push push push push call mov xor mov lea lea mov mov lea mov lea mov mov cmp je push push push call add xor mov push cmp je mov cmp je call jmp call xor pop cmp jne push push push call add test je mov xor push cmp je call jmp call jmp call pop xor cmp je lea push push call mov pop pop test je cmp je cmp je movzwl push call test je mov test je mov mov test je mov lea xor mov lea mov add cmp jne sub sar lea push pushl push push call add test jne push push push push call test je push lea push push lea push call test je push push call pop pop test jne push push call pop pop test je push push push lea push call test je push push lea push push call add xor inc jmp xor pop pop pop mov pop ret xor push push push push push call int3 mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne push call pop test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov push push call mov xor mov lea mov add cmp jne sub xor sar cmp push sete push mov call mov testb jne mov pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp mov sete mov lea mov add cmp jne sub xor mov sar cmp sete mov mov cmp jne pushl call pop mov push push mov call mov test setne bt setb and bt setb test jne mov pop pop pop pop ret mov push mov push push push call mov xor push pop mov lea mov add cmp jne sub xor sar cmp sete mov test jne pushl call pop mov push push mov call mov testb jne mov pop pop pop pop ret mov push mov mov xor movzwl add cmp jb cmp jbe add cmp ja inc jmp mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne andl xor inc jmp lea push pushl call andl pop pop test jne push lea push mov neg sbb and add push push call test je lea push pushl call pop pop test jne orl mov jmp testb jne cmpl je pushl lea push pushl call add test jne orl mov mov lea mov add cmp jne sub sar cmp jne mov jmp mov test jne push call pop test je or mov mov mov mov and cmp je mov lea neg push sbb and push add push push call test jne mov jmp lea push pushl call pop pop test jne orl mov cmp je or mov cmp jmp cmp je mov lea mov mov add cmp jne sub sar cmp jne push push push call add test je orl xor jmp xor jmp xor cmp jne cmp je lea push pushl call pop pop test jne push xor push push call add test je orl cmp jne mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov sub mov xor mov push push mov push call mov call push mov call pop mov mov neg lea push sbb and push add push push call test jne and inc jmp lea push pushl call pop pop test jne cmp jne push push jmp cmpl jne cmpl je lea push pushl call pop pop test jne push push push call add test je orl mov mov mov shr not and mov pop pop xor pop call mov pop ret mov push mov mov push xor movzwl test je push push pop lea lea cmp ja add jmp lea cmp ja add movzwl add shl add movzwl test jne pop mov pop pop ret lods int xor loopne fisubr std (bad) fcomps lret or mov cld stos dec or fidiv pushf lock mov mov shlb mov and jle inc outsb stc pop popa repnz xor not addr16 fisubrl or pop or xchg mov push mov (bad) fbstp out add mov repnz mov adc stc movsb sti xor cmp out pop xor dec aas mov (bad) fildl sbb dec lahf inc aas push pop pop movsb ret sub push loope fbstp add sbb in mov cld ret cwtl scas jnp dec mov test stos out mov mov mov push mov mov xor cmp je add cmp jb xor inc pop ret xor pop ret mov push mov push push push call mov mov push lea mov push and push or push call test jne xor jmp cmp je cmpl je mov lea mov add test jne pushl sub sar call pop cmp je xor inc pop pop mov pop ret mov push mov push push mov xor push test js lea cltd sub mov mov sar imul pushl mov pushl call pop pop test je jns lea jmp lea cmp jle xor pop pop pop pop ret mov imul add add mov mov mov jmp lods int xor push out into fidivr and push adc lahf xor fcompl mov sbb sbb mov jg aas fidivl stc sbb sbb sub out push inc sbb in divl movsb push adc outsl sub sbbl push cmp das mov gs lock xchg ljmp xor in bound push cli mov out lods sub insb pop cs sbb cltd int3 je leave rorl cmp push lret insb cmpsb push xor scas aas sarl fwait xchg sbb pop jge xor sbb jae or or push les dec push add loope pop popa xchg mov xor adc mov out into sbb mov dec aam dec sub (bad) and pushf movsb or nopl jg divb shrb int3 sahf sub cmp nop sub mov xor lock lds or xchg pushl inc fidivl pop js movsl movsb es stos scas gs push test call repnz xchg xchg nop xchg push inc jns lock ja jae pop inc je mov loopne mov jge adc call cmp orb sti inc (bad) mov add adc add cli les lret mov lods mov scas jo xor fisubrl sbb clc xchg into aam in or push out push idiv lock leave sub jg xor aad mov movsl push adc pop mov xchg or (bad) mov dec adc pop mov ficomp out fimull enter push int dec sbb mov in sub push push push xor mov mov mov lea movl cltd sub mov sar push pop mov mov mov push sub pop movzwl cmp jb cmp ja add movzwl jmp mov movzwl cmp jb cmp ja add movzwl add subl je test je cmp je mov mov mov movzwl movzwl sub je test jns lea mov jmp lea mov cmp jle or jmp mov pop pop pop mov pop ret lods int xor loopne fisubr std shl std popf cs sbb cld dec insl fsubrl dec push fdivrl inc imul cmc mov es dec or and xor iret jbe cwtl (bad) cmpsl cmp cmp loope icebp pop insb dec adc negl in stc sbb xor aas test out out dec into ds adc arpl inc in ss xchg dec cmp test insl cmp mov fidivr mov sbb jp push xchg in mov dec insl mov push mov cmpl je pushl call pop test js cmp jae mov pop ret xor pop ret mov push mov mov push test jne call push pop mov call mov jmp cmpl jbe mov movb test jle mov jmp xor inc cmp ja call push jmp mov test je push lea mov push mov movb test jle mov test je inc jmp mov mov inc dec test jg lea movb test js cmpb jl jmp movb dec cmpb je incb cmpb jne incl jmp mov lea mov inc test jne sub lea push push push call add pop xor pop pop pop ret mov push mov push call mov and pop cmp jne movb jmp push call pop movb mov pop ret lods int xor dec mov push jbe in adc xchg add inc incl inc add imul imul sub movsb outsl call mov cs mov xor (bad) test mov gs out call xor adcl sbb out mov sbb or pop das in mov cs gs das sub lahf mov js cmp clc into outsb jmp cwtl mov mov inc imul inc ret jl int3 mov dec and outsl dec (bad) jecxz pop or dec adc fidiv sbb mov add push in cmp xchg icebp repz daa movsl pop xchg push ret cmp push or xor pusha fbld pusha xor jle dec cmp push in stc fmuls or idiv das cmp cmp ss dec cmp xorb into sahf (bad) call cmpsl ds cmpsb sub sub (bad) in lcall lahf fiaddl gs std and mov adcb push ljmp mov mov cmc stos aam mov (bad) out (bad) int3 cmpsl mulb ret fisttpll inc not mov cmp icebp into add or daa cmc dec les shl leave icebp aas jns add (bad) push pop cmc test shl (bad) xchg mov addl xor test (bad) dec loopne,pt stos push jb inc jne inc test fbstp (bad) jbe test pop out lds cmpsl shrb jg fcoms out jbe aam cmpsl xor insb ret xor fisttp mov movsl push into and inc mov fcompl xchg arpl mulb fsubl loope adc fild push sahf cmp stos out out push adcb stos stc xor xchg add jg int3 push ljmp jle popf push jne xor rcrb jecxz int3 fwait jb mov sub pop cmp dec inc rorb push call xchg pusha or fcoms xlat ja jg fisubrl mov xchg push adc out (bad) or pop imul add clc adc mov mov je xlat dec es adc pusha adc fcomps ljmp aas cs xchg (bad) or fsubr xor mov repnz add cltd jl mull leave cmp sub stos mov pop std or dec mov in mov xchg mov sub ds data16 outsb mov inc add push out jl adc ja out call mov mov (bad) jne loop xchg mov adc mov adc and and into or mov mov repnz mov outsb stos dec lcall mov add bound lock ds or stos add std iret add cld mov mov das cwtl movsl ja in mov insl mov outsb movsb jbe push outsb dec pop and jnp das adc mov imul mov or mov inc ret (bad) xor inc push fs and add bound add and mov or andb lock ss and lea push xchg jbe stos mov ja dec add sahf outsl inc xchg fisubr cwtl inc jl dec xor sub mov sub sti xchg mov and subb aad jge xchg in fsub lahf rcr mov out cmpsl aam push cmp scas push jl cs dec fldl adc mov push negl stc push xor fisttp adc popa sahf pop jbe call mov pop (bad) xor out push ds jno jl mov inc sub lret repz cmp mov or mov xchg sub out jecxz push scas dec idivb and xchg push or test test jns jle add hlt and fwait xchg cmp (bad) cmpsl out xor push add or loopne dec scas mov mulps bound xchg mov lods add fnsave pop movsb mov stc cwtl out test loopne hlt stos and cltd test inc idivl jp stos aam add int movsb hlt pop (bad) int3 icebp aaa push dec lods push lods test sti das aaa cmp push jbe cmp mov sbb decb xchg fldt sarb fnstcw mov enter lret inc lea add scas addr16 cmp out lods ljmp xorl jae jno push fwait mov fcomps in mov push cli pop inc into xor push popf (bad) out test pop mov xchg aad inc ljmp push repnz icebp into inc add popa arpl (bad) mov iret xchg loop inc lret or cmp ja jns shrb or jl std out push loope ret push test cmpb adc jmp cmp jnp mov insb push mov mov adc add xor repz mov push movsl or dec (bad) lods xchg jb xchg (bad) mov pushf or mov jno insb sti sbb or sub add lock push sbb movsb ret idivl push cmp mov cmp and or inc rorl mov stos rcr pop mov fnsave push (bad) pop es xchg sub inc in mov jle,pn mov mov mov (bad) xchg inc lods add pusha (bad) jp sbb mov cltd jcxz pop xchg fadds xor (bad) xor dec and mov jp fwait test fistpll mov sbb in or and bound ret jne lea xchg (bad) aas mov fs pop (bad) mov (bad) hlt add ds (bad) icebp cld push cld ja bnd lds divl lcall cmpsl or add push dec stos sarb xchg xchg cmp pop push lcall pop mov dec sbb lret cmp adc out pop popl add popf inc cmp push (bad) (bad) or dec push int push dec in clc icebp aas scas pop (bad) xor push ret daa cltd scas and dec out adc lret les repnz jnp loop ret dec fldcw rol outsb out fbstp int3 lret loop test (bad) xorl (bad) mov push out and and cmp mov int3 in dec fidivr aaa adc out fbstp mov push xchg in jge outsl pushf insb lds push out cmp xor das jb xlat aad dec outsb push jg push nop sbb jns mov std pop xchg mov shrd popf sbb pushf inc leave sub or push xor lcall mov push adc or and push or (bad) popf test sbb aas cmp jb xor and jl add adc mov mov (bad) dec inc sub mov mov je mov and ret sbb mov sti iret mov mov (bad) mov jnp pop pop xchg mov rorb arpl out faddp sbb (bad) movsl ds pop fcmovu xchg xlat movsl pop xchg mov add jge xchg xorb fwait push push lock mov iret inc fcoms xchg repz push xor ljmp (bad) xchg pop or inc push adc (bad) mov cmp lret jb or xchg jne nop add insb ret jae imul (bad) mov in sub (bad) xlat sbb dec stos lock adc sbb ret cmp push aam mov xlat sahf jnp pop leave jecxz std sahf mov js or cmp jbe fistp cltd jmp mov mov cmpsl rolb adc xor push inc and dec sub (bad) addr16 pop vpavgw cwtl cmpsb mov je lret and sub cwtl stc add mov sahf sbb jge mov sub xchg movsb pop push cli add cmp adc aas test fwait jcxz add js fisub mov cld and jecxz ret inc pop add jbe repnz add cmp mov into push jbe lods adc fidivl out ret and rorb xor jbe inc aas loope andl cmpl mov jmp lock gs arpl mov fldcw sub mov dec mov cmp loope shrl pop insb addr16 stc add mov loopne rcll repnz hlt dec jge fbld or mov jle scas push adc pop js fbstp bound les out lcall jbe mov std xchg mov sbb loopne fwait jo movsl movsb scas stc sbb push gs push adc xchg test mov fwait or sub mov pop pop push and mov test jl xor push sub xchg xchg imul inc mov xor test aas mov lock outsl popa or mov fadd push loopne leave adc jo mov rorb jle out mov (bad) mov jge cmpl mov inc push mov sti (bad) gs enter popa lret rcl pushf lds xchg out int (bad) inc sldt arpl mov addr16 insb arpl mov mov and pop push jne lahf mov mov call push add xchg adc imul add cmp mov (bad) js icebp jne movsl enter push in fsubs mov rclb mov sbb cmpsb pop hlt cmp lret das aam push push js and lret iret xchg pop sti loop xchg pop out jle cmp xchg repz fmull iret scas ret imul cmpsl test ljmp cld jecxz xchg adc lret nop dec fdivs mov in push push cmp cmc in mov jp movsb sub stos lods mov inc js push jmp sub inc sbb loopne insb in movb pop daa jmp sti movsb mov and adc int3 adc jecxz pusha test mov out addr16 std shr nop aam aam idivl mov jecxz out adc dec int pop adc neg cmc mov ja and div icebp adc iret push lahf lds or iret aas dec xor or in (bad) hlt roll pop icebp xor cmc popf inc pop pop mov jb and xchg nop or mov (bad) mov enter mov notl jp or push int3 stc mov jecxz xor pop mov mov test cmpsb push loopne icebp xor mov add sti lds xor and cli xchg dec pushf xchg sub daa inc loop push leave sub jle test add pop pushf ja cltd push (bad) testl out mov inc (bad) xchg pop bound mov rsqrtps mov push jno outsl pop es mov push pop insb mov or cld xchg das inc enter jbe nop mov std sub rolb inc (bad) into cmpsb pop and push mov add pusha dec sbb popa sarb (bad) leave fiaddl cmp jne jl ret loop xorl xor in pop clc loopne andl sub out inc test xor xor nop push repnz aaa adc (bad) or je mov (bad) shll xchg adc pusha into xchg xchg pop and mov push mov mov sahf clc je mov push sbb bound adc add aam sub or out inc sbb sub ljmp push enter add sbb (bad) jl cmp add clc es add dec cmp mov sbb xchg sbb xor sbb enter inc and adc (bad) ss orl and xor push (bad) icebp dec and and mov and sbb mov xchg aad addr16 addr16 inc inc ret scas orb jg in xchg mov arpl ret in sbb xchg mov mov fidivrl mov or cmpsl mov sbb fs xor sub jmp imul xor adc mov and dec gs jle sbb cmpsl or sub (bad) jb insb aad iret sub mov and add test aam sarl loope jmp test cmp jmp movsl adc aaa fldt test adc add or mov dec ja cmpsb inc div lock jg repnz xchg cmpsb into sbb pop mov pushf in pop loope stos pop xchg dec fiadd adc pop jp fdivrs aam das mov dec rorl sahf and adc pop pusha les mov out rclw mov mov mov loop cld ret out js (bad) es pushf mov inc mov mov cvttps2pi cmpsb mov icebp inc ljmp rclb mov mov aas xchg cmpsb movsl pop insb and inc and xorb jecxz and xor push fnstcw ljmp lcall dec jnp clc dec push mull cmp mov aad cmpsl aad or xchg cs pop xor inc rorb xor xor cmp je mov cs fldl xor es jle push cmp sbb fbstp mov shll int3 sarb lods dec aaa pop fistl xor xchg push cmp mov (bad) test sbb pop (bad) push jp push mov (bad) idivb movsl push adc inc fmul pop mov dec jle aas aas std add test sub or les das cld rcll dec call bound pop outsl ljmp add adc fidiv sbb movsb adc (bad) mov xchg dec mov out data16 daa (bad) je incb mov ret mov popl aam dec mov jno mov fs insb pop es ret inc push into lahf movsb imul mov dec pop leave or jg push adc mov add jecxz (bad) sbb hlt pop test pop (bad) repz mov fs mov pop lods push cld test mov mov jns dec dec (bad) iret fidiv sbb fiaddl mov xchg aas mov mov decb push and int movsl dec sbb js test mov mov scas mov cmpl mov sub cwtl mov push lret and dec xor add dec das xchg sub lret test dec sub lcall call mov call adc push cmc rcr minps or jecxz push adc jae dec (bad) inc mov jnp cld lock pop jl fstl sarl sub pmulhuw pop pusha push sbb repz fwait xor cmp mul dec loopne cs sti int xor gs aad icebp rcr test outsb jns cmp mov in sbb in sarl popa rclb in movsl sbb adc xchg dec inc (bad) mov xor jnp xor mov sub or or shrl popf push daa mov jns nop popf lahf icebp cmc sbb imul pop mov push mov push mov test jne xor jmp mov test jne call push pop mov call mov jmp push mov test je cmp jb push push push call add xor jmp pushl push push call add test jne call push jmp cmp jae call push pop mov call mov jmp push pop pop pop pop ret mov push mov incl push push mov mov push call push mov call cmpl lea pop pop je push pop lock mov jmp mov lock lea movl mov mov andl mov pop pop pop ret mov push mov push mov mov push test jne test jne cmp jne xor jmp test je mov test je test jne mov jmp mov test jne movb call push pop mov call mov pop mov pop ret push sub mov push mov cmp jne mov mov inc test je sub jne jmp mov mov inc test je sub je sub jne test mov jne movb pop test pop jne cmp jne mov push movb pop jmp movb call push jmp mov push mov pop jmp mov push mov push mov test jle push pushl call pop cmp pop lea jl mov xor push push push pushl pushl push pushl pushl pushl call pop pop ret lods int xor inc stos mov sti cmp repnz add mov push aas lds scas push xlat fcoml push mov inc movsl popa stos in pop das pop bound out out es or divl (bad) sub sub pushf std sbb xchg inc adc call in push mov test jne call movl call or jmp mov push or shr test je push call push mov call push call push call add test jns or jmp cmpl je pushl call andl pop push call pop mov pop pop pop ret push push call mov mov xor test setne test jne call movl call or jmp mov shr push test je call pop jmp andl call pop andl push call pop mov mov movl call mov call ret mov pushl call pop ret push push call xor mov mov pushl call pop mov mov mov mov mov sar mov and imul mov testb je push call pop push call test jne call mov call mov call movl or mov movl call mov call ret mov mov pushl call pop ret mov push mov sub mov lea mov mov lea push pushl lea push call mov pop ret mov push mov push push mov cmp jne call movl jmp test js cmp jae mov mov and sar imul mov testb je lea mov lea push push call pop pop jmp call movl call or pop mov pop ret xor push push push push push push push call mov ret mov cmp je cmp je push call ret int3 int3 int3 int3 int3 mov push mov push mov xor mov mov push mov cmp jbe mov push push lea mov mov cmp ja jmp lea mov push push call call add test jle mov mov add cmp jbe mov mov mov cmp je test je sub mov lea mov mov mov sub jne mov mov sub lea cmp ja pop pop mov xor pop call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov push mov mov push mov cmp je push mov test je sub lea mov lea mov mov mov sub jne pop pop pop ret int3 int3 int3 int3 int3 int3 int3 mov push mov sub mov xor mov mov mov mov push mov mov push mov mov test jne test je call movl call pop pop mov xor call mov pop ret test je test je movl cmp jb dec imul push add mov mov xor sub div lea cmp ja push push pushl push call add jmp shr imul add push push mov mov call call add test jle push push pushl call add pushl mov pushl call call add test jle push pushl pushl call add pushl mov push call call add test jle push pushl push call add mov mov mov mov mov nop cmp jbe add mov cmp jae mov push push call call mov add test jle cmp ja mov mov add cmp ja push push mov call call mov add test mov jle mov mov mov jmp lea mov sub cmp jbe push push mov call call add test jg mov mov mov cmp jb mov mov cmp je mov mov mov sub mov lea mov mov mov sub jne mov mov mov mov cmp jne mov mov jmp add cmp jae lea sub cmp jbe mov push push call call mov add test je cmp jb mov sub cmp jbe push push mov call call mov add test je mov mov mov mov mov sub sub cmp jl cmp jae mov mov mov inc mov mov cmp jae mov mov mov jmp cmp jae mov mov mov inc mov mov mov cmp jae mov mov jmp mov jmp mov mov sub mov js mov mov mov jmp pop mov pop xor pop call mov pop ret lods int xor dec mov pusha sarl xchg adc push mov sub cmpl jne call movl call xor jmp push mov test jne call movl call jmp cmp jb xor jmp pushl lea call mov cmpl je lea dec cmp ja movzbl testb jne mov sub and sub dec cmpb je mov andl mov pop mov pop ret call xor test sete mov ret mov push mov sub mov xor mov cmpl push push je pushl call mov jmp mov mov cmp jg je cmp jg je push pop sub je sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl jmp mov movl jmp movl jmp mov movl jmp movl movl jmp sub je sub je sub jne movl mov mov mov movl fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop jmp movl jmp movl jmp fld1 mov fstpl jmp sub je sub je sub je sub je sub je sub je sub jne mov fldl jmp movl jmp movl jmp movl jmp movl jmp movl movl mov mov mov fldl mov fstpl fldl lea fstpl fldl push fstpl call call pop test jne call movl fldl fstpl mov pop xor pop call mov pop ret mov push mov push push and add push mov mov mov sub mov xor mov mov push mov push movzwl mov mov sub je sub je sub je sub je sub je sub jne push jmp push jmp push jmp push jmp push pop push lea push push call add test jne mov cmp je cmp je cmp je andl jmp mov fldl and or fstpl mov lea push lea push push push lea push lea push call add mov push push call cmpl pop pop je call test je push call pop test jne pushl call pop mov pop xor pop call mov pop mov pop ret mov push mov push push fldl frndint fstpl fldl mov pop ret lods int xor push pop imul cmp lds xor fistpll insb dec call add xor (bad) ljmp orl icebp cmpsb xor sub pop (bad) fiadd inc pushf subb push mov lret mov stc and xor sbb cmp out cli aas popf mull and lods inc std xor aam jne sub (bad) (bad) jnp je call in mov push test jne call push pop mov call mov jmp mov test je xor cmp mov setne inc cmp ja call push jmp mov lea cmp ja pushl push push push pushl call add pop pop ret mov push mov push cmpl jne cmpl movb jl movb pushl pushl pushl pushl pushl call add mov pop ret mov push mov push call mov mov call mov xor pop pop ret mov push mov push push andl andl push mov pushl call pushl call lea push call mov add cmp jne mov cmp jne xor jmp xor inc pop mov pop ret mov push mov push push andl lea andl push call pop test je xor inc jmp mov mov mov mov lea mov or push mov call pop test jne call xor mov pop ret int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop movsl or movsl cwtl lea mov pop cmp (bad) mov movsl (bad) les or enter and sub xchg ljmp pop clc inc sub fstl call call add ret lea call push fstcw je mov cmpw je fldcw test je test jne fldlg2 fxch fyl2x cmpl jne lea mov jmp test jne jmp test jne cmpl jne and je fstp fldt mov jmp call jmp test jne cmpl jne fstp fldt mov cmpl jne lea mov call pop ret cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp movq movapd movapd movapd psrlq movd andpd psubd psrlq test je cmp jl psllq cmp jg movq fldl ret ucomisd jnp mov sub mov mov add mov mov mov call add fldl ret movq psllq movapd cmpnlepd cmp jl cmp jg andpd addsd movq fldl ret fldl ret cmpnlepd andpd movq fldl ret mov push mov mov xor mov mov mov mov mov mov orl mov mov mov mov mov mov mov add xchg pop ret mov push mov sub fnstsw fnclex cmpl jl mov xor mov push mov test je test je push pop test je or test je or test je or test je or test je or stmxcsr mov and mov ldmxcsr mov test je test je push pop test je or test je or test je or test je or test je or or mov pop jmp mov xor test je test je push pop test je or test je or test je or test je or test je or mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd mov movapd unpcklpd psrlq pextrw movapd movapd movapd movapd movapd andpd orpd addpd pextrw and movapd movapd andpd subpd mulpd subpd addsd mulpd movapd addpd and sub cmp ja sub add cvtsi2sd unpcklpd shl add mov mov cmp cmove movapd movapd movapd mulpd mulpd addpd movapd mulsd movapd mulpd movapd andpd addpd addpd mulpd mulsd addpd movapd mulpd movapd unpckhpd mulpd sub movapd addpd unpckhpd addsd addsd addsd movlpd fldl add ret movlpd movapd cmpeqsd pextrw cmp ja cmp je cmp ja movlpd movapd movapd andpd orpd cmpeqsd pextrw cmp je fldl ret mov jmp movlpd divsd movlpd mov jmp movlpd mulsd mov jmp add and cmp jae xorpd divsd mov sub movlpd mov mov add mov add mov mov call fldl add ret movlpd movlpd movd psrlq movd and or cmp je mov jmp lea jmp int3 int3 int3 mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret push call ret push mov test je mov call push push call andl pop pop pop ret push mov mov test je mov push andl call lea pop jmp push jns cmpsb or scas mov jb push mov cmpb je xor inc lock inc jmp mov sub cmp jne pushl call pop ret cmpl jne ret push mov sub movl push push call mov lea xor push push push lea push call push call test je mov xor xor mov pop mov pop ret or lock dec cmp jne call mov mov lock ret call pushl call andl pop ret pushl call andl ret jmp mov mov pop pop pop pop pop mov pop push bnd push pushl lea sub push push push mov mov mov xor push pushl movl lea mov bnd push pushl lea sub push push push mov mov mov xor push mov pushl movl lea mov bnd int3 push jns xor sbb xchg pop stc pushf in sub jge stos ljmp add pusha mov mov or ss jl and adc mov adc lret or das loope jo mov and jle pop push mov push push push mov push sub push push push mov xor xor push lea mov mov movl push call add test je mov sub push push call add test je mov shr not and movl mov mov pop pop pop pop mov pop ret mov mov xor cmpl sete mov ret mov movl xor mov mov pop pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 push mov mov mov cmp je xor pop ret mov add xor cmpl jne mov cmp sete pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push push push xor xor mov or jge inc inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov mov mull mov mov mull add jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec sub sbb xor sub sbb dec jns neg neg sbb mov mov mov mov mov dec jne neg neg sbb pop pop pop ret int3 push pushl mov mov lea sub push push push mov xor xor mov push mov pushl mov movl mov lea mov bnd mov xor bnd bnd int3 int3 int3 int3 int3 int3 push push push xor mov or jge inc mov neg neg sbb mov mov mov or jge inc mov neg neg sbb mov mov or jne mov mov xor div mov mov div mov jmp mov mov mov mov shr rcr shr rcr or jne div mov mull mov mov mul add jb cmp ja jb cmp jbe dec xor mov dec jne neg neg sbb pop pop pop ret int3 int3 int3 int3 int3 int3 push push xor mov or jge inc mov neg neg sbb mov mov mov or jge mov neg neg sbb mov mov or jne mov mov xor div mov div mov xor dec jns jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb dec jns neg neg sbb pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je push mov sub and fstpl cvttsd2si leave ret cmpl je sub fnstcw pop and cmp je lea lea push mov sub and fld fsts fistpll fildll mov mov test je fsubrp test jns fstps mov xor add adc mov adc jmp fstps mov add sbb mov sbb jmp mov test jne fstps fstps leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov or jne mov mov xor div mov div mov xor jmp mov mov mov mov shr rcr shr rcr or jne div mov mull xchg mull add jb cmp ja jb cmp jbe sub sbb sub sbb neg neg sbb pop ret push mov call mov mov xor inc mov mov andl lea movl mov mov mov movzbl push mov pushl call mov call ret push mov call mov mov xor inc mov mov andl lea push push push movl call mov add mov mov mov mov movzbl push mov pushl call mov call ret push mov call push call andl mov pop mov mov pushl mov movb pushl pushl call mov lea push push mov andl andl call mov call ret push push call int3 push mov call push call pop mov andl test je pushl mov pushl call jmp xor mov lea push push mov andl andl call mov call ret push mov mov sub xor push mov push mov push push mov mov mov mov mov mov mov mov mov mov pop test je lea sub cmp jae mov inc mov add cmp jb mov xor mov cmp jae lea sub lea xor rep cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne mov cmp je mov test je mov test je cmp jle push call cmpb mov mov mov mov pushl je call jmp call mov pop test je mov mov push pushl pushl push call mov pop mov pop pop mov pop ret lea call push lea push call call int3 movl ret push mov push push mov push push push mov xor push lea mov mov cmpb je cmpl jne cmpl jne mov cmp je cmp je cmp je cmp jne pushl call mov test jne call mov test je cmpl mov mov je pushl push call jmp testb je mov test je mov push mov mov call call pushl call pop mov mov pop pop pop mov pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov testb push mov movl je push push call pop pop mov pop pop ret push mov call mov testb jne cmpl je andl lea testb je push push pushl call pop pop push pushl pushl call jmp push pushl call pop pop push pushl pushl call jmp call pushl mov push pushl call add testb je mov test je mov push mov mov call call call ret push mov call mov lea xor mov mov mov movl movl mov mov movl movl mov test je testb je mov mov mov mov test je testb je movl lea push lea push cmp je pushl movb call add mov call ret lea mov push pushl call add jmp mov xor mov mov mov mov test je lock push push mov call mov ret call int3 push mov or lock jne mov push mov mov call mov call pop mov pop jmp pop ret push mov or lock jne mov push mov mov call mov call pop pop ret push mov test je mov push push mov mov call mov call pop pop ret push push mov push mov mov mov call mov call pop pop ret add jmp xor ret push mov call xor movl mov movl push mov lea push push pushl call lea movl push call mov add call ret push mov push mov mov test je call mov mov mov mov pop pop ret push mov push push mov mov sub mov lea push push push push call add test je sub pop mov pop ret call int3 push mov mov push push push mov lea mov and je sub mov mov mov cmp jb sub cmp jb lea mov sub mov jmp xor pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push cmpl jb mov ja movzbl mov shl or movd pshuflw movlhps mov and or shl sub xor movdqu pxor pcmpeqb pcmpeqb pmovmskb and jne pmovmskb and bsr add test cmovne or add jmp push pmovmskb and shl xor sub and dec and pop bsr add test cmove pop leave ret movzbl test je xor test je movzbl cmp cmove test je inc test jne movd add pcmpistri lea cmovb jne pop leave ret mov and pxor pcmpeqb mov and mov shl pmovmskb and jne pxor pcmpeqb add pmovmskb test je bsf add jmp mov xor or repnz add neg sub mov std repnz add cmp je xor jmp mov cld pop leave ret int3 int3 int3 int3 int3 int3 int3 int3 int3 cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp nop cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp mov jmp mov jmp int3 int3 int3 int3 int3 push mov sub and fstpl movq call leave ret movlpd unpcklpd movapd movapd movapd movapd pextrw and mov sub sub or cmp jae mulpd addpd movapd subpd mulpd movapd mulpd movapd subpd movd mov and shl sar mov subpd movapd mulpd movapd mulpd addpd mulsd addsd unpckhpd movdqa pand movdqa paddq psllq mulpd addsd orpd unpckhpd addsd add cmp ja mulsd sub addsd movlpd fldl add ret sub fstcw mov or mov fldcw mov sar sub movdqa pandn add movd psllq orpd add movd psllq movlpd fldl movlpd fldl fmul faddp movlpd fldl fmulp fstpl movlpd fldcw add pextrw and cmp jae cmp je jmp cmp jb cmp jb ja mov cmp jb jmp mov jmp mov sub movlpd mov mov add mov add mov mov call movlpd add sub movlpd fldl add ret cmp jae mov cmp jae movlpd mulsd mov jmp movlpd mulsd mov jmp mov cmp ja cmp jne mov cmp jne fldl ret fldl ret mov jmp mov and cmp jae movlpd addsd sub movlpd fldl add ret lea push mov add push fstcw fwait push push push call cmp pop pop pop jne call orb call pop leave ret fxch fstl fxch fstl jmp push mov add push fstcw push push push call cmp pop pop pop jne call orb andb call pop leave ret fstl jmp push mov add push pushl pushl call add pushl pushl call add fstcw orb call call pop leave ret andb cmpl jne fstl mov or je cmp je cmp je or je movsbl mov jmp mov and jne fstsw and je movl jmp fldcw fwait ret mov and or je cmp je jmp mov and cmp je jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jae fmull jmp movl fldl fxch fscale fstp fld fabs fcompl fstsw sahf jbe fmull push push mov inc mov testb jne cld lea lea movsl movsl cmpb je lea lea movsl movsl fstpl lea lea push push mov mov movsbl push call add pop pop fldl jmp push mov add push pushl pushl call add fstcw andb call call pop leave ret push jns cmp mov dec pop mov xchg jns push push sbb (bad) lds dec pop inc inc xor outsb pop in jecxz addr16 repz insb sub adc pop mov das loope cmpl je sub stmxcsr mov and cmp jne fnstcw mov and cmp lea jne jmp xor pop ljmp sarl or sbb cmc (bad) cmp push or mov jb movsb cmc lock mov sbb xchg adc ja clc inc aaa out fwait bound mov iret mov cmpsl cmp fsincos (bad) out leave dec push mov push pop sub cmc out scas mov xlat ds jnp jle mov lods lods into sbbl repz push jnp ss ljmp pop cmp push xor mov sti mov jge jle or les or xchg dec add mov push mov push push push push mov push push call fldl mov pop pop movzwl mov and push push fstpl cmp jne call dec pop pop cmp ja push push call fldl pop pop jmp fldl fldl push sub fadd fstpl fstpl push push jmp call fstl fldl add fucom fnstsw test jp push fstp push fstp call fldl pop pop jmp test jne push sub fxch fstpl fstpl push push call add pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns (bad) mov test add in mov ja mov mov dec jns push ja mov dec mov mov push ja or mov push stc pushf call call mov and inc test insl div (bad) loop jns clc mov sub (bad) ljmp sbb sub addr16 aaa sti and inc jg lods lods dec mov add mov cmp ret or lahf aas pop xor mov setno xor sub mov sbb sbb adc mov or aad in movsb jmp add loopne in mov add sbb sarb les pushf lcall sub fbld (bad) fsubrl cltd mov adc dec jbe hlt mov outsb in mov inc sahf out sbb fidiv loope jbe rcrl dec xorl stos xchg iret xchg movsb adc push imul sub aaa mov jno dec ret mov les iret dec add add addr16 cmp adc xor push inc (bad) ret jae pop pop mov mov pusha push mov inc xor movsb aad pop gs pop push jge daa int test inc je mov dec outsl jle push aad jne mov dec into dec (bad) pop push loopne leave notl add add mov sub xor js mov push add icebp xchg out xchg outsl iret sarl mov imul hlt hlt sub inc inc (bad) cmpsb outsl mov sbb leave mov imul je imul sbbl ret pop fisubl dec dec sbb int3 scas jp mov sbb cmp lcall lods mov (bad) jbe pop nop or sbb scas mull (bad) ret repz dec and add cmp out add inc xchg daa adc outsl inc xchg bnd iret sti add xchg idivl cmp inc repz popl add nop jnp inc dec or push mov jge outsb out negb lds cmc lds or (bad) rcr sub ds int add xchg inc loope nop adc aaa cmp inc adc cld insb xchg and (bad) data16 aam mov push sahf jae adc mov ljmp adc andl inc lock int3 xor hlt pop test add movsl push or sbb orb enter inc jae inc jae inc cmp aad pop inc xor gs inc sbb (bad) out imul mov insb mov sbb into cld mov push cmp insb and inc mov sbb pop call insb mov mov outsl push xor mov push inc jp in cmp jne sbb or imul sbb and xchg mov movsb mov orl mov xchg push add lret cltd inc push xor cmpsb sub vmwrite sub ss arpl push scas mov (bad) cld les fdivr subl cltd inc inc jno cmp adc mov inc push add push inc mov aad jb ret popf outsl jmp imul in gs data16 (bad) aad lret data16 lcall repnz std xchg push mov outsb push sahf ds jo xor xchg and stos adc mov (bad) xchg test jno daa xor hlt mov jo loop fidivr sbb ljmp rorb pop sub mov mov es rorl mov inc or hlt push sbb mov pop insl push sbb inc add jg sahf negb push pop in ss push cld and (bad) cmpsl das hlt adc jo mov mov jl mov (bad) and jnp jb or push xlat pop inc sbb xor jb xor loopne rorl xor sub test pop xor imul test cli ja test sbb out (bad) mov jo xor sub bound pop mov aam das in pop call mov icebp ja or jno (bad) into jae pop gs sbb pop imul inc dec add (bad) cmp rclb dec fsubl imul stos pop ja jg stos in gs adc dec xor or cld rclb shl mov out rcrb push adc adc pop repz sbb mov (bad) push negb aad hlt cmpsb mov lock jae add dec jnp roll (bad) cmc pop mov dec jl sub mov jno or or icebp (bad) in pop push ret xchg das test test lret or lcall add xor scas mov cld push outsl add mov in test bound jne (bad) hlt pop cmp xchg jl cmp mov js adcb sub fs ret pop xchg mov push insb inc int cmp rcrl stos pop fwait jb js inc in xor fmuls jl into out fcompl pop inc nop movsb loopne xadd fldl jno sbb loope cld popf mov cmp in mov mov imul movsl aad lea iret addr16 mov xchg pop outsb pop mov out (bad) popa hlt cmp push insb mov mov mov (bad) incl xchg out pop add jmp imull pop push add pop adc push insl xchg inc cld lds lock add mov dec jl das outsl jae addr16 das sbb inc mov or adc xchg out jne popa sbb and out inc mov xor js mov jecxz lahf iret xchg sbb adc adc cmp loope cmp fnsave mov ss testl inc and xchg mov add in lock and repz push inc mov add aad jne lea arpl insb ret fldt or or in mov out xchg mov pop or push sub scas bound adc cmpsb data16 and sbb in pop lcall addl dec incl jmp les push mov cmpl pop pop sub inc jecxz in mov addr16 sub push and (bad) clc cmp jmp mov scas lahf popa mov iret je lock inc inc push sbb test mov sbb bound mov adc cmp in les sbb scas xchg in push mov inc fs sub addl push mov mov cs mov mov push je int int3 fisubr lcall movsb or jae sub (bad) imulb cmc mov lods sarl jae pushf test or out jle pop add stos ss aam clc aaa add mov xor cmp lds imul jae clc stc dec rcrl movsl inc out lock nop negb inc faddl pop (bad) jge,pn je outsb mov repz dec iret fildll mov xor jge rorb sub fiadd stc mov cwtl rorb jle pop std adc xor daa push cmpsl ds hlt ds leave repz popf add nop sbb jecxz inc fstpt dec cmp (bad) dec mov nop (bad) sbb jnp mov arpl dec mov and xor push and inc (bad) push jl outsl mov (bad) sbb add cli sti loop cmp rcr iret xchg and jbe xchg xchg sbb cmp mov adc lock in or mov lret mov add cmc add and sti mov pushf jmp test jp mov gs inc jge cmc js insl insb push or cmp repnz iret (bad) and mov pop mov pushf out pop les jo (bad) repnz adc sub inc arpl (bad) (bad) (bad) imul addb fidivr mov fildl pop scas cmc pusha call lea push outsb (bad) add inc std push stc xor cmc call fstpt ret fbstp pop xchg adc push pop out fdivrl call pop les mov jae push hlt std daa repz dec xchg stos loope push or cmpsl add pop push dec mov loopne or mov cmp repz aaa inc mov inc dec out mov and add push sub jnp stc (bad) pop sbb les push fnop jnp xchg js (bad) mul (bad) cmp in mul push mov add stos jle dec cmp mov adc aaa bound push sub or insb arpl fmull jne dec mov mov jle loope mov outsb mov sti les dec jne fs fs fndisi(8087 pop xchg mov cltd sahf ds mov lcall mov jae (bad) stos or fwait rclb and leave je fcmovb sub jmp gs inc inc dec cmpsb sub xchg pushf mov dec repnz and adc pop fbld push rol or jmp jo xor sarl jecxz push add add dec icebp icebp jno (bad) setb inc pop sub rcl fiadd and xchg rcl mov cmc adcl out rcll jne fistl jo ds sub fdivl loop adcb or hlt rcl adc dec mov lods outsl test mov daa scas (bad) out test mov (bad) cmpsl stos das and sub cmc (bad) dec ret or dec adc cmp pop mov out jl pop xor sarb pusha adcl loopne mov scas out cwtl pop insl pushf cld outsl mov sbb cmpb jbe push cmp hlt pop inc jle mov aam inc lods push nop pop push push mov scas pusha mov cmpsb popa arpl inc mov add push dec mov idivl adc xor xor scas dec mov into or jnp jle outsl jne lahf dec dec test jne xor dec scas test js in cmpl or push pop (bad) cmp dec in test aam dec sbb mov mulb inc ror rcll cmp and pop or enter jns and ret xchg xor pop (bad) push xor xchg pop or je jae loop rcrb and loop insl and fstpt xchg lods cmp lret jae mov push out pusha fidivr push xor int3 pop push sub mov stos scas mov popa adc dec pushf dec and das jg js mov dec (bad) jle add dec int adc mov xchg ljmp dec repz movsb data16 cmp in out cs mov lret pop adc fs les fs ficoml out rorb and fcoms or divb repnz mov loopne icebp mov xor mov popf dec roll add and ja and idiv jnp ljmp (bad) stos adc in (bad) js sbb gs sub out pop mov cmp push mov mov ljmp pop mov dec out arpl xor jmp pop mov push je sub lret das out cmp fnop cld dec pop adc jmp jae sbb mov adc and stos (bad) or mov cwtl push das test out outsl mov popf sbb xchg cld cmp mov rorl insl cmc je ja mov bnd add pushf push or jnp jmp icebp and jmp loopne les or jns sbb jne cli cmp test fadd (bad) testl cli rol add out sbb nop in inc sub jmp aam lock mov imul and pop mov cs daa xchg lods fildll fldt sub ret aaa pop xchg push sub outsl inc add shrl mov data16 stos push mov bnd popf mov test fwait int or inc xor sbb fs mov sub in pop mov ret mov cmpsl cli or push cltd leave jnp das push sarb mov mov loope loopne jb icebp aas sub cmpsl push fdivrs or out cmp fsubr push mov popa ss cld pop das enter in mov jp sbb xchg inc mov repnz js inc cld inc popf das int3 xchg cld jge test lcall push sub xchg push fadd mov mov xchg sub lock adc arpl ret pop pop das push lods dec repnz popf inc jne adc push stos or fwait (bad) mov and dec add in push xchg or push loope (bad) cld or (bad) mov mov jne xchg or mov leave xor cmp insl frstor movsb add clc das mov outsl out (bad) addl rolb cmp std dec mov adc insb sbb icebp fs adc imul nop pop cmp jne hlt xor fsubl mov xor mov int mov pop mov psrlq jns add adc loopne mov ret dec jb mov faddl add ffreep (bad) in jae pushf push mov int jb and mov pop cltd dec dec ja (bad) fidivrl jmp (bad) pushf jmp push pop fisub xlat out adc (bad) fldt and leave hlt mov jns rcll (bad) movsl mov stc cmc idivl fsubrs add aam test shrl fnstenv jo and xor dec cmc shr dec pop push shlb outsb aam test rcll lret pushf rorb dec fldl daa loopne pop in (bad) xlat push es push dec lret mov sub prefetch or imul pop into xor repnz sub mov xlat cltd mov movsb stos pop stos mov incl cltd cmp inc inc xchg cmp (bad) fcoml out mov sbb shrb add mov fiadd cmc nop lret mov arpl fsubl or adc adc or idiv loop negl fcoml inc mov out (bad) sub jo int mov cmp mov mov dec sbb sbb xor mov add pop sbb mov xor cmp inc loope mov mov cmp cltd sar and aad sbb cltd pushf mov and loop push stos daa mov inc xlat and add mov lret lods jb stc clc out cld cli je leave (bad) pop lods push xor pop (bad) xor cmpsl dec ds xchg xchg inc mov add dec stos adc push and cmpsb test or cmp push popf mov psrlw add sbb ficom les out test inc arpl cmpsl and daa subl lock stc (bad) cld cwtl mov cli inc fistpl fmull (bad) js xlat lret add jb imul xchg push ja adc cmp xchg cmp xor push pushf mov adc pop fstp xor cmp scas add cmpsl jp sbb test fisubl cs sti and psraw leave cwtl mov (bad) pushf mov out in mov scas mov enter jl xchg mov outsb sub jne in add dec icebp scas push xor dec lahf insl mov das lret inc or test insb xchg flds sbb fdivrl xor insb std pop inc mov call fimull xchg fisubr movsb enter lcall cli cmp jnp loopne mov inc adc sub adc inc stos (bad) (bad) pop in pminsw cli pusha pop xlat lahf sbb (bad) ds test dec packuswb ficomp inc data16 imul aas ret pop mov lods push xchg sub movsb push (bad) scas xchg mov ss pop sub mov jns (bad) je in stos mov and xchg push push dec mov test or push mov outsb out or pop push add cmp inc dec pop repnz lea xlat jmp imul mov xor sbbb scas shl xlat jle call in adc adc mov push ret (bad) push mov push in dec aaa hlt bound mov and gs xchg ror cmp sbb (bad) cmp xor jg jns push hlt in mov mov pop mov sbb push sub into popa push inc in fmul (bad) pusha pop mul adc mov fnsave addr16 icebp outsb cmp cmp stos xchg mov stc mov xor and fs jbe leave stc ds clc fwait (bad) jno jg aaa fisttpll adc popf mov push nop mov call mov sarb jg adc adc lret popa test add jl mov pusha jnp roll jge call push dec pop insb add fadds mov pop popf lds aas jo popf ret cmovns call xchg lods push sarl jno sbbb imul and inc cmp ud1 cltd (bad) in jae aam push imul xchg scas in jae leave adc jbe mov test cmpsl popa xorb lret mov xor in push cmp sahf sbb mov cwtl cmp xor sti pop enter movsl jmp shlb sub fdivrl inc sbb test stos xchg xchg cmp and (bad) or pop iret mov sbb imul xchg sahf mov inc inc lods mov (bad) cli outsb inc lea clc sarl push mov loop dec pop cwtl outsb push sub mov das inc clc jecxz push mov mov outsb movsl out adc xchg xchg dec inc enter ljmp clc dec adc or data16 sbb enter add mov in (bad) pop mov imul cmp or in call mov pop mov pop dec mov adc sub (bad) and daa int3 cmpsl lods sbb in cltd add ja xchg mov loope loopne mov lds add fisubrl mov mov xchg dec push lret (bad) gs std stos cmp mov pop ja xchg mov or ret and rorb push iret lds mov push les test mov test popa sbb int3 push outsl push jno sub jmp movsb mov mov (bad) divb pushf pusha in roll mov xor (bad) (bad) into inc fmull sbb fmuls push jle insb ret in adc les ljmp fs sbb cmpsl imul ret xchg lea hlt cmp sub movsb pusha and lretw nop int jno sub fildll arpl test jge xor lods fwait add fcos cmp or loopne cmp dec lods int mov lcall or push mov xchg sahf and jbe and ficoml je cmp leave hlt rorl mov (bad) (bad) outsb scas (bad) pusha xor fisubr jg ljmp dec jle pop bound pop test lods fistpl shlb push sub and loopne cli (bad) xchg mov jbe sub pop lahf fcompl loopne lret sub sub pop inc xchg shrl clc adc lods sti rolb pop fmuls push lods aaa push ficomp popa or jbe fsubr mov mov inc lods push sub add push scas push repz lret mov aas insl ds lds jecxz jecxz inc inc push sub (bad) inc inc imul cwtl cli insb ret rep mov loope pop xchg aam in sub test fsubr (bad) push dec sbbl stos lcall aad shll daa push mov adc enter mov pop arpl test test dec jl loopne ljmp mov xchg push (bad) jecxz mov dec adc add sbb (bad) dec out pop add cwtl pop sbb pop and shrl mov lds adc inc das (bad) popf xor sub sbb pusha daa inc jo int3 xor sti mov sub in dec or (bad) pop imulb in test addr16 jp add push mov jecxz testl insb or mov xchg dec pop jns mov dec ds mov mov mov in pop (bad) cmp cmp pusha jno mov xor insb jg lea and mov inc xchg xlat inc hlt shll mov inc push mov iret pop inc inc imul mov add lret xor lods ds negl cld jo,pt inc jne bound pusha mov sbb xchg pop jle sub aaa pop jo hlt inc ss cmp out adc cwtl or add dec je test lea sub or ret (bad) repz add sub jbe mov clc imul lret arpl aam lods fistpl add (bad) xor out pop ret inc cwtl pop cmp ret gs mov and in jne mov push rolb jne mov jae aad cmp sbb inc repnz (bad) scas (bad) adc inc fmull dec pusha mov fucomip sbb fldl2t xchg cmc pusha mov ljmp fs insb cld jle xchg mov rorb (bad) mov pop xor pop lods mov push or stos inc negl popa mov (bad) mov xor mov push mov mov stos bswap mov std andl mov xchg enter mov dec in cwtl seto cmp push mov sub stc fcmovu es adc out adc push jb test mov pop test jecxz push xchg orl cmp ret lds push xor enter cmpsb push shll icebp and andl loope in mov mov (bad) sti repnz mov out xchg nop test push xchg push inc sbb pop std mov test stc inc add outsl and inc mov jg in fiaddl mov mov pop lea xchg and leave pop add pop addr16 nop pop jle mov push sub daa in in mov or pushl data16 fxch mov mov or les lcall and and inc imul lods popf (bad) es ds cmp and (bad) jle mov push imul xor out jle imul outsb xchg inc (bad) ficoml aaa scas cmc pop into aam jae sub enter push sbb push ret pop inc jl add and and outsb mov cmp cmp mov icebp sahf aaa mov inc push sti xacquire rsm call push hlt add jmp cltd icebp inc in mov outsb div lock or add push inc rclb aad push add out xor and adc pop mov inc xchg adc enter push shll mov sbb mov in sub xlat and mov push sub mov in mov jo push lds dec xchg out and lock imul xor mov popf mov cltd jb mov in in cld loop add cmpsb cwtl out insb sti mov popf jmp jb imul lahf mov pop testl popf push cmpsb fsubl push into rorb mov mov xor xchg stos inc or pop lret inc or (bad) orl cld sarl push (bad) leave xor arpl mov pop add push or popa sub sbb (bad) fmul inc sbb inc push lods pop push hlt xchg push test mov cmp inc or push pop push mov pop rolb jbe movsb inc add out mov icebp push (bad) add push push xor jecxz in cmc or or or dec frstor icebp outsl or sub (bad) push ss movsl std add divl jb jnp sbb outsb les jle (bad) sbb or push sub fisubl (bad) pushf fisttp lea bound leave and jns add addl mov sub or or mov (bad) jo mov fcmovnb mov pop cmpsl add outsb leave (bad) sti dec repz lods pop pushf popf imulb negl mov fidivrl js ret inc cmpb xor out cmp jp testb fisubl cmp add sub ret xlat movsl pop addr16 xchg xchg mov pop ds mov lea es cmp sbb out mov enter sti jmp aas aas test xchg insb jns cmp daa jge cmp in aad adc je inc mov int3 icebp and out inc mov fs mov clc popl popf push popf in (bad) dec mov mov xchg cmp xlat nop enter sub sbb adcl cmpsb mov jle shrl pop ficom pusha inc xlat lds inc or inc inc sub inc or or popf (bad) ja fmull les mov enter mov insb sub je ss and xchg or loop adc icebp lcall or test out rolb in cmp loopne pusha mov push mov outsb and jns mov jno sub in test inc sbb (bad) push sti xchg lcall ja mov pop int and jnp out aad xchg cmp lods jae jp test or popf sub rcrb mov rcr xor jp mov dec push out sbb mov mov or pushf add ret mov mov add or fsubrs jae daa cmp fdivrs repz mov shr mov leave or xor xor and sbb cwtl push das inc sbb inc push cmp popf insl (bad) rclb xor gs add lods add test xor cmp (bad) sbb (bad) or sub sbb mov out (bad) xchg lea cli push mov ret xor loopne or fcmovne mov adc xor add stc lahf cvtps2pd mov addr16 pop imul jne or imul xor fmul sarb ret sub pop shrb and arpl sbb mov dec dec daa stos je cs out sub pop adc (bad) clc dec pop pop dec lods pop mov push movsb ret push les mov jbe stos subl xor cmpsb inc pop rorl ljmp push roll xchg cld mov xchg cs push dec insl loopne ret outsb fwait pop in outsb stos shl stos dec (bad) out sar inc aam nop popf mov jnp dec outsl scas pop jp sbb in add mov daa push lock mov sub mov lcall shl lock adc mov and cmpsl pop ret out mov sbb leave test cmc adc test push push adc insl cmc addr16 pop loopne mov push push mov mov sub aad ss pop test mov and fcmovnb dec xchg inc mov js test push aad insl popa movsl adc adc loope outsb adc xorl clc push call cmpb imul sbb mov pop jns xchg push jb lea std push push jno push imulb scas xchg sbb out or aad add lcall push mov jmp fildl into push insb mov fcmovnb push push and dec data16 and pop addr16 xchg xchg loope ret mov aam lods sbb jns aas cmpsb scas lahf sti mov into fisttpll nop aam cmp jno lock push rcl push or dec push fcompl cmc dec sub mov rorl stc sub clc push sbb push fimull iret dec cmpsb inc push push add inc xchg test adc jmp (bad) mov cmp data16 insl pop (bad) mov nop (bad) adc fadds rolb daa jg sbb int3 sbb add call or push mov mov pop test mov mov loopne sbb cwtl movsl cmp and cmp push xor jnp out aam pop out jno (bad) cmp (bad) call mov jnp and rclb cmp mov orl sbb lcall jmp xor out dec fneni(8087 (bad) xor cmc cmp sbb cmpsb ss ds out mov xchg mov stc mov sti dec notb ljmp lret inc ja or sbb add jns cmp int add lds mov ds lret mov pushf test jp push xchg push into shrl clc mov lea js mov imul mov rcll mov mov ret mov ss pop (bad) addr16 push icebp icebp sbb xor int3 adc jge jmp fadds ftst lea enter pop add addr16 ret lret add jg mov mov adc adc sbb ds push dec and les mov xchg jns (bad) mov data16 (bad) stos in and or cmp xor jge test (bad) iretw dec dec dec (bad) fs mul adc cmp ljmp jb in inc lret jae dec and inc (bad) js xchg pop or shr mov mov adc movsl jmp fdivrl inc pop jbe fcoms or (bad) js daa and rcrl xchg mov jl stos iret out ja pop das js insb lahf mov adc lock out fisttpl sarb ret je or lahf sub shr xchg pop arpl shrb enter cmpsl (bad) loopne ds into in fnstenv pop add lret pop (bad) fsubrl jbe pop xor fwait sub mov mov jmp xor loope fsubs fs pusha and jmp mov and jmp cmpsb pop or xchg xchg inc lods push sbb into mov cmc jnp mov mov mov and xchg leave call fstp jg mov lods mov clc mov pusha mov aaa pop jbe pop es ret cmp insb enter xchg cltd cmp push orb (bad) rclb mov decb mov sub negl jl xor jp fldcw add sbb faddl mov insl and sbb xor fwait rcrl fadd mov cli inc stos movsb xorb jnp mov mov lcall jb loopne xchg mov imul mov stos push cli jecxz xchg cmp dec push lret jb jp sub cmp loopne or mov ficoml inc xchg adc (bad) cltd je mulb push mov je pop mov negl xor cmp pop lods mov mov push cmpsl int3 (bad) cs aas ret cmp mov repnz jbe inc or and pop cmpsb iret sbb jle push popa mov jo push xchg or jns (bad) push add add sbb or add add ret pop pop mov dec jno mov fcoml jp push outsl popa push cltd out or adc in cs xor dec scas bound mov cld xlat or dec mov inc adc adc int or hlt mov movsl inc test xchg shl das mov inc xor movsb cs rol pop aam pop inc sub test dec and push shr aad push loopne push pushf in cmp jnp (bad) jne mov aas mov rcl sbb dec (bad) std add inc mov mov dec sbb jmp (bad) jl dec jg gs je jle pusha jg sbb js test sahf cmpsl adc test es mov pop mov inc sbb ficoml push cltd (bad) orl fs sti xor (bad) xchg popa adc inc daa divb mov xchg and adc das dec or mov mov xor push sub out (bad) sbb sbb dec ljmp div lods mov in (bad) mov aas lahf mov push cmp mov and fdiv inc cld pop out rolb cmp sbb pop js dec loope mov or mov xor dec lahf mov hlt in mov ljmp and out pop lcall repnz jl mov xorl push jle push iret mov or sub jp cmp cmp add sahf inc and adc rolb jmp orl pushf stc enter pop gs and and push xchg movsb data16 inc mov iret jbe fucomip aad adc pop repz push mov ret scas aad xor jp and lret push jl xor cmpsb in jl aas leave flds (bad) cltd jg out fsubs mov mov repz jb ret mov push mov imul les loopne test enter outsb or mov sbb pop xchg sbb xchg jbe addr16 mov and dec fisttp lret xchg insb push lods dec mov xor out pop roll sub fwait movsl sub clc jns out mov imul inc inc cmpsb inc sub mov lret or sub out mov int jg lock dec pop jp add js pop pop cmpsl mov adcb pop jle out fadds shll insl js pushf fiadd sti cmpb xchg xor sbb mov jae push int3 mov cmp cmp mov std outsb cs push jg add call mov mov mov dec add clc inc cs mov popa pop and rcl in incb bound xor push test mov lods dec dec test icebp cmp xchg dec pusha insb and outsb and xchg push adc pop push movsb jp pop jo cs lea out jl sarb fbstp es cmp (bad) push sbb ljmp sbb jae push lret and fsubrs inc pop stos jp into shrb xlat out fisubr ja or in add fisubrl andl or jmp repz in icebp out mov mov xchg cli mov addr16 dec jecxz ret add and add fld lods cmp mov ss (bad) lock push das shll pop and sub out add xchg mov jmp into gs add movsl xchg call xchg pop fisubr (bad) jbe loop (bad) pop stc insl ljmp mov ja test ja sbb into jns jle dec pop inc popa push push lret neg cs outsl cmp push ret sub dec int3 lods insb cmp and xor jbe lret sbb jmp adc test repnz leave push imul cmc sub lcall xor imul ss int3 insb gs movsb xchg mov popf mov sbb and cwtl or sbb xchg and sub dec leave xchg and mov fwait mov sbb mov call test sarb rcrl pushf cmp stos in inc inc loope sub lahf int3 mov mov push cs pop jl sub push xor daa inc lods xor in icebp insl pop inc ds outsl loopne ljmp inc adc push (bad) or pop pop mov cs xchg (bad) in notl adc and or mov sbb in rcll ret lea gs aaa and aad popa in dec mov adc cld lret jmp out xor jmp inc push lods outsl js test cmp mov sbb cmp adc sbb cmpsl mov dec std lret sub (bad) icebp push and repnz mov iret push mov popf int3 sarb shl adc jbe add data16 inc pop lret ds gs xchg (bad) jae jno mulb push xchg xor pop xchg mov xchg xor adc in xor dec fprem rcrl movsl bound and arpl (bad) or rolb xor cwtl jge cmp imul pop sub jle les (bad) out cltd repz fwait inc cmp dec stos je test insb cwtl jmp jne xchg dec push mov imul nop pop test jb jmp mov mov cmp out inc pop jbe adc stc dec gs push dec xchg and rcrl nop cmp adcl cltd mov psubsb pop inc imul leave push insb mov imulb inc inc add adcl mov cltd xchg or gs outsb sub adc mov and ds std (bad) adc jns mov xor jo and test iret fxch in iret leave mov adc js je push fstl imul nop xchg stos xlat movsl and adc mov xor unpckhps xchg sbb jno push loope es add and aad enter mov adc packssdw out mov xor pop pop jle push loop xchg mov mov imul xchg pop fprem lcall add cli mov mov insb (bad) hlt inc fwait sub scas cmpsb pop mov imul inc xchg out mov push inc or jae aad xchg sbb lea je aad fwait popf and ret or mov (bad) cmc jle push inc loope adc add inc add sysret jmp outsl je hlt push jl fnstcw xor (bad) xor inc in je xorb addl push mov jle pop clc add jne mov mov pop fs jb mov insb scas in inc add add dec push mov lods mov cmpsb xchg ret rolb push add jp nop mov jo in mov test movntps movsb loope push xlat and adc xor push push cmp xchg push and xor test adc les adc and xor add and xor out and xlat mov inc mov ret mul scas repnz sbb mov xchg dec cmp fidivl nopl cmp in cmpsb sub mov aaa jge in xor add imulb jae (bad) cli in sbb mov push sbb cmc fadds ss ljmp adc or xchg (bad) mov cwtl push sbb jg test divl in jg in dec ret sbb mov mov stos xchg jle out pop (bad) xor lds add in scas mov jl inc dec stc mov data16 loop lods push fcomps jle push cmp lock out push push mov pusha add mov xor nop or cmc push dec loope pop aam scas push or int3 xchg push dec xchg lods out call mov adc je jne dec addr16 dec test jne and lahf test mov push cld jecxz push (bad) cwtl pop mov sbb mov sbb jmp inc fcoms popf inc xor sub leave aam rcrb cmovnp icebp js imul (bad) mov mov mov pop pop popa mov sub or shlb test (bad) scas pop (bad) pop and sub cmp cmp xchg stc lds inc movsb (bad) mov dec popf push pop dec insb repnz push pop mov jne jno push lret cwtl sub rolb in or lock addr16 sbb fstpt pop pop into cmp xchg inc push mov xchg cmp push call push ljmp add pushf adc lock dec push mov (bad) jnp inc int3 lret lcall mov dec leave test leave and dec outsb cmp push (bad) sub mov outsl rcrl les push aas subl push jg cmpsb dec (bad) cmp addr16 out xchg jbe insl add dec stc aaa mov add and daa std pop lret cmovg repnz jg insl xor push or outsb add mov jle (bad) xor fcmovne cmp cld add jp daa and adc pop mov cmp cmp jg ss aad out stc scas aad aaa lahf scas jp push jnp mov scas idivl jg xorl dec popa push outsl (bad) lahf shld sarb and mov mov les pushf or pop sub mov mov adc fs jg dec mov in mov bound aad (bad) mov in sub or push mov inc jle mov iret nop dec jns mov ffreep insb out icebp adc orl lcall xor test popa dec cli je push adc xor popa fwait stos pop negl xchg stc imul fstl lods (bad) xor mov xlat outsb pop push fstl xchg (bad) sub pushf std jbe xor pushl lds push push mov call inc pushf fmuls jne push aas movsb mov pop cmp inc pop push cld mov call inc rolb rorl jne xchg xchg mov mov jno adc sub pop or adc pop cmpsb inc cmp fmull mov movb or inc jmp pop pusha test clc adc popf cmp push int3 mov xchg pushf sar push (bad) pop addr16 jecxz dec sub pushf sbb lret xor roll xchg pop in in mov leave test cmp mov pop push jp je repnz push mov or jmp mov daa mov mov inc (bad) ret icebp sbb repnz aaa lcall mov in mov fcompl sub sub idivb shrl and add pushf ds sbb in and cmp jecxz lcall mov imul xrelease sbb dec xchg enter xchg xlat mov ret test (bad) jb imul nop pushf xor int3 mov mov jmp and (bad) mov sar sub rcrb mov (bad) push cmpsl aas mov arpl std sbb shl add xor xchg inc pop adc sarl sbb call push push cmp test push pop insb insb lret sub jo or arpl pop mov xor jl stos push fsqrt ficompl cld lret popf push xchg sub cmp (bad) lods add sahf push and (bad) jmp mov adc mov xchg sub adc sub ss loop pop push lds dec mov dec test in mov fcoms (bad) test nop jge push sahf int3 lods loop add or ret jecxz in lods sub inc ja lret xchg mov jnp (bad) mov pop pop jp push gs pop mov fcomip sbb mov mov mov dec mov int3 iret xor (bad) in pushw push imul adc (bad) push mov mov cmp adc lret mov jg in in sbb and insl iret ficoml push out cmp outsb bound dec jae dec add pusha push adc jge jno push jne or stos stos mov daa inc jo xchg push xor jp sub ss (bad) push xchg mov pop (bad) push leave lret jbe mov stos cmp loope enter push std add jmp mov in push add mov jge inc push div stc pop jns pop mov push scas repz jne shl jle loope xchg fdivp mov pop rclb jmp pop jno dec je xor fsub fimul inc ss es nop jmp dec add or jle sub fbstp xor ret inc pop imul imul push in fcoms daa mov adcl xchg mov aam dec leave (bad) mov mov into ret ja ss pushf xor xor push sbb loope popf fisttpll and test fiadd sub fcmovu sub mov xor and movsl push arpl jge xchg xchg inc pop mov lret dec mov test popf test mov lret mov or stc dec fs popf out (bad) imul out lea ficom inc stos cltd push xor lahf loopne pop or xor sub mov gs mov pop arpl fcomps aaa sub ds push and mov addr16 rolb outsb inc adc pushf push (bad) jle jbe aam jge das arpl mov pop inc add shll mov lods test mov pop sub inc inc adc aas and dec sub (bad) jle push mov jne dec lods out push adc sub test (bad) aaa xchg jmp aam int in inc rorl push and push add push scas sbb mov xchg idivl lret and add addr16 and dec dec rcrl pop arpl adc outsb std xchg add cmp push mov repnz push or jl mov pop add (bad) notb sahf into iret and inc mov or push ret cmp jb dec imul xchg jo push sahf js pop imul sbb lcall (bad) jo sbb lock add fstps pop and insl xchg daa popf add jecxz or inc ror repnz jle inc (bad) negb lahf lret (bad) sub lods mov js (bad) pop push lcall xor outsb pushf mov push pop add rol (bad) lret add sub add add mov test ret mov pop inc sarl out dec dec fisub pop ss sbb (bad) mov xchg lods jle outsb cmp test adc jae andl jp jecxz push loopne sbbl xor adc xor inc adc cwtl sbbl stos int mov sbb xor mov inc cmp (bad) rep idivb es xchg dec outsb pop mov add cmp rcrl push add xchg jmp add cmc mov je shlb js in xchg sti pop push mov push sbb lahf aas dec test sub sub lahf or (bad) mov sub sbb push stos lea fidivrl imul sub ret out insl sahf ret cmc jmp lods push insb jo xor pop push cmpb cmpl bound add jae jns pop cmp insl data16 push xlat mov cmp movsb (bad) loope into nop ss pop inc jecxz mov nop (bad) sarb push jge or test mov mov cwtl add dec loopne sub pop inc xchg into jae mov push repnz int3 lea outsl jmp mov popf aad pusha les inc das push push insl push mov xchg dec jo inc xlat and pushf daa inc nop lret cs (bad) jno js and lfs loop fisubrl enter insl incb repnz and test pop jne inc les fs adc fnop nop mov or and rolb movsb sbb sbb pusha dec (bad) cmp pop (bad) mov mov les sub mov shll in pop mov pop fadd cmc (bad) imul sbb aad inc data16 jae cwtl add xchg push add arpl jns mov push xorb les inc insb mov sbb sbb and dec icebp iret movsl jo push push mov std cmpsl (bad) ss es je popa dec jae aas loop sti ret es bnd mov loopne push and xchg push sub int3 repnz fimul xchg lcall push xorl push loopne jno push mov xor stc push fwait add icebp ljmp and popf mov push xchg call lret mov call sub pop or or jbe dec in xor cmp mov jecxz imul inc scas (bad) cmpl pop (bad) stos (bad) pop ret cmp inc mov add shrl inc pop xlat sbb (bad) sar clc aas ret (bad) (bad) jge sbb mov jbe bound mov idivb aam mov leave inc jae (bad) cmp (bad) cmp (bad) daa or stos out outsb fsubr add jnp adc fcmovbe outsl jmp pop ret lds cmp sti loopne je fs mov mov xor or adc movsl push mov ja iret shr lods cs lret outsb mov lahf ljmp sbb jae jecxz pop or daa addb in push mov cmp dec push add int3 or xchg bsf pop push test mov in adc mov pop mov imul jnp (bad) lret sub repz rolw andl iret pop mov idivb mov cmp inc xor mov push mov iret nop in and lock push xchg int aaa and repnz addr16 mov and nop pushf cmpsb sub cmp xchg sbb push movsb mov xchg (bad) ss sti adc fldt scas icebp mov and js or negb incl pop sarb push jae jp,pn test mov out fsubp lock xor aaa mov jg jns xor and and push push adc loopne in fsubrs pop test aam jmp xor mov aaa and sbb out push xor push arpl iret insl clc xor sbb xchg jb test into ss (bad) lods pop dec fildll mov gs push sbb out stos insb lods push stc arpl mov cmp jmp and push (bad) movsb sub nop and push mov xor cmp xor loopne sbb sbb inc stos and fucomi inc push sbb mov mov mov push sbb and sbb outsb fldcw (bad) xor pushf cmp in push push add inc push ja jl pop pop cltd push dec xchg mov (bad) out jo hlt out mov mov add mov lock cmp das jo dec clc fxch xor mov jno dec sub shrb mov mov xor bound mov (bad) iret dec pop jae (bad) adc pop sub pushf loopne xchg outsb out inc cmp popf adc pusha xor std sub adc pop nopl std pop pop lahf fldl ds xor push mov movsl mov lods or popf mov popf (bad) insb or test sti sbb xor push jl movsb fisub mov cltd mov jmp and push cld jecxz cmp mov or stos dec xor inc lods mov xor movsl icebp mov xchg push jb (bad) repnz stos jecxz push aad xlat dec jmp sub add lds xchg mov je xor jbe jnp mov xchg outsl xchg sbb daa cmp dec mov mov dec jb rcl push and fld xor outsl mov out or daa insl pop (bad) in mov cmp movsb inc push adc repnz pushf jg lds clc dec aad or mov push sbb icebp fmuls mov or mov mov sub popf decb push (bad) jecxz mov lods jns dec xchg mov sub jb notb jle call shr mov scas adc sub or push sarl movl pop jns shlb fs sahf mov xchg jecxz dec jo sub dec sahf insb out or in or (bad) cltd cs sahf mulb (bad) xor mov mov mov or cld stos cmp out js iret dec push mov xchg imul bound jo stos jl loope mov pop mov add jle jp mov push jecxz mov adc push aam dec cmpsb jle imul lcall sbb add cmpsl xlat jecxz cmc mov xchg stc in sbb sbb stos adc mov sahf sti pop inc lds pop orb popa mov pusha sbb inc cmp ds cmpsl mov (bad) outsb movsl xchg shr sahf jne and insb dec inc mov cmp dec sbb or and mov lock test jo push add int3 in sahf (bad) or mov inc mov mov fdivs fcmovnbe das ss cmovns mov adc in jecxz cmpsl (bad) adc pop mov movsl pop adcl dec and leave and int sahf call pop jb xor fadds sub sub dec subl pop ja inc adc cli cmp push xor loope sbb cmp mov mov sub popa lcall add ret cmc mov pop stc loop and je inc push (bad) pop imul (bad) fnstsw fs xor call (bad) add mov mov sahf adc mov xchg mov popf pop fsts jmp les pop cmp add lods inc pushf and je popl leave jle (bad) push fmull roll add es int3 fist test jle (bad) sub push push out cmp adc cmp pop pop mov mov fwait jg or int xchg jg cwtl fdivl pop scas rorl ss repnz inc add pop data16 mov and or (bad) push push in dec mov cld cmp mov mov int (bad) movsl xchg jp push jecxz xchg cltd (bad) mov xor dec mov cmp pop stc mov inc scas mov cmp mov xor xchg lret inc add data16 jge lea roll mov mov pop iret enter cli gs push stc addr16 cld cmpl sbb add or or push daa xchg fisub stos mov adc call pusha gs inc cmc mov inc data16 cltd sbb cmp mov (bad) add adc mov fdivr dec mov bound mov daa fsts aas sbb in sti xchg and lret pop mov sahf sbb jns xor pop jl pop pop test jge imul or adc fdivrl or inc or daa mov mov pushf inc in inc in test jo xchg pop in push xchg mov out mov in cmp mov outsb jb bound mov xchg fsubs cmp push call or rorl lods icebp cmpsb dec loope in ret mov js mov mov (bad) cld inc sti (bad) inc int test out subl popf mov or (bad) adc pop js sub or sub cmp xor mov mov cld mov mov test insl sub out cmp mov xchg ds jl stos mov fwait add pop or fs imul cwtl or stos xchg cli inc cmc stc cmpsl ficomp es pop out rorl mov pop cld adc or xchg imul mov push mov repnz mov in clc jl mov shlb dec insb ret mov lret stos es fwait pop pop lea cmpsl and aaa (bad) in cmp leave jp ljmp in lods fidivrl cmpsl aas popf shll out icebp mov push int3 lret pop in loope inc inc jne lds dec loope cmpsb push dec jp insb dec xor cwtl cli mov sbb cmp icebp xchg mov push imul adc pusha inc icebp jle aam mov pop fild or (bad) xor xlat out arpl test jno or int mov xor ds dec cmp xchg hlt mov or movsb cmp and popa push xor iret jg lock es repnz shll leave mov aas scas pop daa xchg sub (bad) fisub and mov sar or (bad) cmp fldl sti loope outsl std ljmp lods xlat push (bad) jo int3 sbb stos dec int rolb lock jg adc mov cs inc ret rol add mov scas int3 mov mov and dec rclb pop divb inc cmpsb imul inc rcr hlt insb adc push jl inc clc adc xor adc mov pop lds repz (bad) cmpsb fwait and dec push jl add jecxz (bad) mov xor add loopne xchg adc xor xchg out test es pop rclb sbb pop int xchg inc cmovo lods pop mov mov les sti cmpsl (bad) shlb flds xor sahf cmp pop fsub adc mov xchg lahf mov push movsl mov gs (bad) jo sub mov cmp cs or cmpsl cmp dec push sti mov int aad adc xchg jns lcall jo out call insl leave ret dec or push add mov mov dec lret push stc (bad) sbb sti lods inc fidivl xchg sti mov cmp int3 lea sbb das or adc push sub or mov xchg leave test ror push mov movl mul mov es je sbb jg inc enter enter cmp and out adc jns sarb mov jno jne or jo pop lret movsb jnp pop lods xor mov cmp es sarl (bad) shl lret sub in pop test jbe dec pop mov repz (bad) insl add or aam or gs pop mulb cwtl popa cmp xchg clc inc pop sbb sub jne mov push jo test clc mov add test int and cwtl in rcrl cmp cli pop xchg push pop push stc repnz or or adc xchg cmp in cmpsl int3 cmp push xchg pop in and fcoms cli cld mov fdivrs adc mov es sbb mov je dec inc and sbb lds dec fldl sub stos lods xor in cmp in sbb jnp loop repnz (bad) jge jmp repz sti iret stos ja adc stos pusha fsts (bad) push (bad) mov push sti clc movsl lahf xchg sbb mov daa jmp add out lds mov mov pushf lcall (bad) pop repnz xor loope or in sub dec clc jno or dec mov mov mov add movsb pop jne stos mov cwtl cmp jbe add inc mov insb or mov jmp dec mov mov sbb pop pop scas jge rorl adc cmc xchg scas xor jnp (bad) (bad) or stc push mov fcoml xchg (bad) and xchg and cmp push adc xchg je imul je and (bad) xor movsb dec into sub adc adc fwait pop (bad) out inc jne int out mov sub movsb outsl lcall inc pop jecxz popf ja mov mov mov add jg mov jb jae aaa js arpl mov ljmp cmp xlat cli cli xchg push cld dec fcoms sbb jae arpl fwait jbe push push and jo xorl mov testb xchg cmpsb lods shl xchg or fwait xor mov scas out sbb cmp lahf xchg mov dec xchg mov add push xchg out repnz or sbb enter subl cmp lret dec xchg or sti push sub aad mov imul cmc push dec mov clc cmpsl sub jb xchg pop (bad) xor push adc dec and push adc cwtl gs iret adc (bad) rolb ljmp cli aam mov stos pop bound (bad) pop jbe call dec cld sub and dec push lahf jae xor aam xor mov add add ja dec jp push pop or pushf es mov jmp incl push jns clc dec lahf or add xchg xchg fisub js ljmp pop sarl aas push imul loopne fisub fisubr into fldenv pop shrb pop fcmovnb xor pop xchg pop xor js dec mov adc xchg and mov jno jecxz xor inc sbb movsb xor xchg inc in sahf in and sub pusha mov out xchg imul into or imul and push jns inc out pop movl das scas shufps xor jmp push mov mov stos outsb cmp pop test mov xchg mov push sbb xchg inc imul sub jb mov insl adcl imul adc popaw in xchg push je and (bad) ljmp hlt fs enter lcall inc fmuls push sub sbb push imul out gs jno sub dec cltd fidivrl std add jl loopne out push mov not add pop sbb movsb nop movsl cmp and and xor sbb ret outsb mov addb lea test fstpl (bad) aad pop pop cld push sbbl dec into mov std sbb adc aad rclb jae ret (bad) jl ret xchg and insl gs repz pop movsb mov xor das mov imul int3 or scas dec lds (bad) pop daa sub jae fidivrl dec cmp out fsubrs mov xor inc and push jecxz outsb pop inc adc inc shrl leave mov or mov or cmpsl xchg push adc imul leave addr16 mov stc incl aad out sbb mov inc jns xchg jecxz jmp or rorb repnz test scas pop orb dec stc jp pop mov leave push aad xchg sbb adc data16 (bad) aas test outsb sub or mov sbb jp scas push inc mov dec and lods mov cs push inc dec dec mov lahf jb sub out pop xor xchg mov mov xchg add jne movsl dec cmp inc lahf adc jge bound mov sbb decb mov fwait pop ja dec adc sbb mov (bad) lcall push and jle ret rcrl es lahf mov jnp push inc bound nop xchg ret sbb or into fs rolb adc ljmp out test cwtl xchg pop xchg push sub call outsb push enter call sbb sub in mov cli push pop (bad) (bad) (bad) xchg mov call into jae adc test mov jmp ds and (bad) sbb inc stos pop or mov mov sbb sbb std mov das imul test jb (bad) shrl lea pop lods repz aam movsl or push (bad) jb lret movsl jns or add dec bound cld int aaa fmull inc loope add dec dec sti push scas mov cmp ret cmp popf gs test pop out sti push dec movb jecxz xor lea mov (bad) jle,pt (bad) push inc nop (bad) cwtl pop mov test mov bound idivb scas (bad) clc mov xchg xchg (bad) mov cld push (bad) mov les imul cmpl lcall pop push bound mov pop dec cmp mov out jge arpl ret jle test and dec cmc sti ja cwtl adc xor push leave push imul int3 mov jnp stos pusha je bound pop mov xchg sub pop sbb or in xor adc jns mov lods (bad) mov mov mov mov arpl pop loopne inc (bad) mov pop and movsb xchg or dec and mov flds pop mov es push in pop and and test dec out push iret scas xchg fstpt dec mov (bad) dec pop adc (bad) std lds pop lahf test incb imul mov mov mov test call sub (bad) xchg inc es aad cli jg in add sub lret jnp push int3 sbb mov or insl aaa aas mov mov mov lcall jl insl es xorl xor ret aaa dec cli inc xchg sub (bad) cmp mov movsb out or xor es push sahf inc sub (bad) adc and hlt fidivr (bad) in and int3 ret pop inc push mov sbb pusha icebp sub jmp mov cmp (bad) lret pushf xchg pop leave sbb mov lea mov jge mov pop ljmp mov (bad) aam cmc out push negl xchg pop pop das mov push cmpsl dec repz leave imulb cltd lcall mov in pushf cmpsb push aas mov insb adc loopne mov dec sbb test mulb and jge icebp and hlt ret lods lahf xchg adc into nop xchg mov push test fistpll ja dec add scas movsl jg sub rorb cmp daa cmp dec js stc fwait push (bad) fild dec arpl adc fcomps or enter test xor inc adc jae sti icebp (bad) adc pop repnz and aaa sub jo push out insl push dec in andl push fwait xor out push sbb jne jne sbb stos lret lods insb loop xor sahf xor mulb xchg dec mov xor lods add jmp fucom jle xor pusha inc xchg lea inc mov mov lea cld gs or and fadds andl xlat fbld mov mov pushf push and adc cmp pop (bad) mov xchg sub and jbe iret outsb (bad) in adc js popf mov lds dec test pop pop sub jecxz leave inc mov (bad) add fwait cmpsb scas fsubr imul sub rorl pop mov movsl stc push leave mov lds out popf rcr ret xor lds dec and mov dec jbe sub and mov outsb hlt inc cmp mov jge imul or rorl cmpl push inc push test push mov pop pop lcallw data16 xchg push ljmp je sti fs lahf pop mov lods mov pusha cmpsl mov imul pop push subl or imul scas mov int3 sub adc mov mov mov scas add pop adc mov push cwtl outsb int and sti nop mov cmpsl fstps mov xchg or or (bad) jns imul scas jo (bad) jbe movsl mov (bad) (bad) xor xchg test add cmp (bad) leave pushf mov mov cmp jg xor xor lock nop inc call ficomp xchg rcll jo push dec daa mov subl mov in dec cli add gs (bad) fwait adc mov add bound shrl push xchg jmp mov loope mov mov mov in sbb mov mov es test inc pushf lock gs test pop mov mov cmp sahf pop stos fidivr sahf push mov stos jmp ret shrl ret xchg cli cmp inc add jne adc lds mov aam ljmp sub (bad) sbb pop cmp in lods les (bad) out movsl cmc sbb (bad) call mov lret cld xor or push sbb push mov out fisttpl out inc and mov or (bad) in mov xor add dec pushf jmp jl xchg inc sub nop ficomp out scas adc dec das lret mov in jne inc daa or mov lcall outsb push cs or dec add mov sub or stc popf aaa gs imul js or stc or stos xchg (bad) lea loopne cs jl in pop lcall (bad) or xchg mov jne inc imul out loope sbb hlt lcall (bad) fiadd (bad) dec mov mov out dec jge fdivrl mov jle repnz sub mulb push stc bound rorl xor mov adc push push xchg je xchg imul sbb mov push aas imul xor popa xchg je in add mov pop scas jns fs cmp cmpsb and jge xchg mov or mov scas fnop mov push les inc jmp xchg cwtl fcom jnp or sbb inc mov sbb dec aas inc pop repnz push add adc in push or es xchg inc std nop dec jmp je ficomp rcrb inc sub mov or mov mov push pop fsubrl mov in lcall dec idivl xchg subl cmp daa (bad) sbb int rcr lret outsl inc cmp mov lcall cld es fs cmp ret pop xor ja lret add (bad) sub cld sub inc rcll lds aas lret (bad) jg (bad) mov dec xchg sbb ss lds inc pop mov adcl or icebp movsl pop leave sahf jmp mov fwait xchg stos hlt add pusha test sahf mov andl xor xchg imul xor jl mov or lock insl sub pop xchg stc mov cmp cmp fmull int nop add insb push mov xorl mov mov lahf dec add jge xchg add inc and dec movsb pop and inc push outsl push xchg push int3 repnz clc push push sbb or inc popl dec ljmp xchg (bad) inc cmp mov lods jns mov les daa fcmovb stos movsl inc xchg mov outsl add insl dec cmp ret and stc and sbb rcll jbe xchg jno dec test sti mov mov (bad) adc sbb mov out cmp mov jae jmp fcom inc push xchg shll insb fcoml movsl jmp mov fcoml jl gs fs adc push mov dec cmc push sub cmp sbb fbld fisub (bad) out xchg mov imull cs data16 por pop xor int fisttpll mov cld clc pusha mov cmc xor arpl popf push mov inc fsubrs imul dec sbb negb mov lahf in loope ret imul sbb mov jle ja sbbl jns lahf sbb icebp loope sub add inc jae addr16 std cs add inc js xor outsb repnz int xor adc jns adc (bad) xor push mov int3 (bad) scas jmp jl push insl imul fsubrp imul push jnp js js into push sbb addb ficoml mov pop icebp push cli pop sub je pop sub hlt mov ret pusha add stos out mov pop sbb subb sbb scas sub cmpsb int3 push push cmp loop jno (bad) mov cwtl data16 iret and pop les dec mov nop lds adc xor push and cmp int3 inc fbstp gs call and xlat stos dec lds repz movsl shlb sub xor push mov mov mov xchg in mov jp fidiv mov add popf push inc jle std cmp lods sub repz mov inc dec outsb pop mov pop mov mov mov mov pop daa icebp loopne jnp sbb sub das out leave ret movsl mov add sbb add or popa mov int outsl xchg lcall into and (bad) jmp jecxz cmpsl daa test and (bad) push das aam rorl add out inc cmpsl sti pop xor mov cmp jbe sbbl inc fldt rolb dec xchg scas sub xchg xor pop in outsl loopne xor outsb je inc ds push ds mov ja (bad) mov dec cmp jns shrl mov fwait mov mul shlb ss push pop adc jle (bad) add lahf leave inc mov xor xor cli adc sbb mov ljmp inc jle cs add or sbb and (bad) dec pop cld adc dec mov xchg ret aam data16 mov jbe insb push push outsb ss sbb add fcoml int3 aas jne fmulp in lods notb pop or push aas testb loope dec mov iret xchg aam stc jmp in pushl jno jnp add cmpl xor and dec or push cli lds repz jbe xchg inc ja pop pop jns jo pop push jo xchg ljmp jl repnz sub roll sub adc (bad) mov lahf ret pop or mov add scas imul rcrl sbb xchg lds jmp mov mov loop pusha std cs add pop sub lcall jge sub adc push mov adc cmp in test imul (bad) cmp lahf inc hlt and push or pop (bad) stos loope add cmp jecxz mov loope cmpsb xor mov stc lods mov lahf sub push xor mov aas xchg stos mov add mov lea jbe pop es push sub and mov cmp mov cltd in je imul ret mov xor outsl lret ret sub arpl test jp add inc jl sti mov addr16 insb (bad) je aam shrb dec mov add xchg jp inc add adc pop lock outsb adc roll sub mov sub push ret out jns and loop or add xchg xor pop sbb pop stos push fiaddl inc and (bad) stos xlat pop popf mov adc jns iret sub ja rcll pusha xchg fdivrs fucom rol lods pop js sub mov (bad) jne dec mov idivl callw jmp push outsb insl push xchg in inc mov aam std sti and scas aas les fwait mov pusha push adc jecxz cmp jle movl lods mov je and fsubrl sub cli sti push icebp sahf inc dec and cld mov cmovnp addr16 loope mov push fucomip jge mov xchg add mov in daa mov out xchg dec insb adc mov fidivrl dec jecxz (bad) in jp js cwtl es orl cmp jnp mov xchg ret xchg push add mov push pop push inc mov ss inc jbe lea or jmp jp push fwait and jmp push stc push jb and jl inc cmp pop pop movsb mov jp int in pop (bad) pop insl fistp in stos loopne es lds mov out or clc loopne push push sbb inc cld mov lret inc psrld out jne lret jmp in or movsb cmp outsb inc call loopne inc push mov jecxz ss (bad) push sub orl int3 shl test les or sub xlat pop movsb xchg sbb cmp xor in sub sub jbe add mov das mov cmp roll mov and popa cmpsl leave stos adc mov test movl jmp xchg mov inc in or adc mov in mov jo push loop lods and xor in sbb mov pushf repnz (bad) fcomip mov in xchg sub xor cmp pop sbb xorl sbb xchg push (bad) jae gs insb xchg into repnz add lock ljmp hlt mov mov std and outsb xchg push jae pop fldenv into inc mov xor xchg lods dec pushw int3 or notb scas vpbroadcastd loop adc mov int xchg mov lret add inc xor or into notl cltd adc daa jl cmc push cmp mov shll xor out add mov arpl xchg jne jmp add jp xchg dec pop mull and imul sahf js jnp cmc imul mov lret cld dec cmpsl scas insl arpl (bad) push add lods cmp dec int insb sarl or mov xchg adc rcl inc call ret dec mov shr mov inc xchg pop mov mov jne andb insl cmp xor dec inc jo int3 ss and test shrb inc pop mull xlat pop sub push loopne sbb std fwait push bound stos stc add jecxz sub lock in adc and (bad) out scas movsb xor dec cmp lea xor sahf lock out xlat mov pop loop or std fmull bound push cmpsl jle sbb or xlat ja lahf dec jmp (bad) sahf jb mov jle push mov in mov xlat xchg mov test mov mov ja inc xlat rcpps ret pop mov cltd dec inc fs and cltd insl mov fsubr sbb sub mov fistl out jp sti shr loop (bad) scas push test mov bound jo popa cmp jecxz and aad popf adc push ja mov adc aam jge mov push dec inc add xlat pushf rcrl jg jbe loop into aas dec mov jecxz xor xchg mov in ds pusha lcall lcall mov and dec cmp fwait adc inc xchg loop or mov shlb imul add bound mov jnp test mov fld push push iret mov xlat lds clc mov leave mov (bad) cmp adc mov mov cmp push xor in sbb xchg enter pop cld push sub outsb sbb pop adc jne xchg jns add cmpsl int3 xchg sbb push repz add and dec fwait (bad) shlb jne ljmp push add adc adc popf and push addr16 nop icebp (bad) jb (bad) sar std mov adc in pusha xor mov mov shl push mov popf test shll ja sti push mov leave and sub dec add or int3 cmp adc inc xor jno xchg in push in mov dec jge pusha (bad) cmp or pop mov imul cmc hlt cwtl sbbb daa insb sub adc jb bound fwait mov imul cwtl push (bad) adc mov not test movq ds inc ja jnp daa insl gs push out ss movsb dec scas test (bad) arpl sbb insb into popa or das mov push (bad) femms fcomi imul movsl leave xchg add std add test cmpl mov mov jae xchg es (bad) scas jl mov or add sub (bad) jmp scas es (bad) and int3 xchg cmp mov xor add sbb (bad) cld and clc pop xor sub sub les add adc cmpsl xchg (bad) jae mov cmp mov jno push add jne xor mov ss movsl cmpsl mov je jg sub pushl xchg adc dec lret and dec push jns or jb cmp pop inc fidivl cmpsl imul mov add pop rorl or ljmp in push pop dec mov push xchg iret sbb or push add mov icebp mov xchg mull cli xor loope aas outsl leave mov or adc cmp call cli fidivrl push push add das pop addr16 jecxz ret fnstcw loope hlt push insb aas stos pop mov aas add cmp pop (bad) dec movsl xlat shll fwait xor ret dec pop mov pop in adc rcrl cs (bad) mov cmpsb mov pop (bad) (bad) jmp or pop pop call push pop insb cmp push scas mov out mov push xchg pushf ja and lea movsl ret js sub jns mov scas insb lcall out inc loope cwtl ret ss test and sub lods rcrb hlt cmp pop icebp mov lock js invd inc fsts mov pop push (bad) pusha lods divb xor movsb sub frstor xchg daa enter aaa loopne (bad) mov test enter xor jo push rcrb pop jbe mov dec (bad) pop and mov andl cmp cltd push jno and in cli mov inc test fsubl xchg xchg mov jmp dec mov jno or dec cmp xor cmp test lods daa stos xchg inc stos loope sbb mov push mov int cmp shrb mov adc out enter enter aam xlat jl jnp fildll (bad) out nop mov and jb lret or pop xchg addr16 iret int in mov pop xchg test (bad) mov adc fs pop jno jg jl cmp pop outsl and (bad) es sbb mov test mov sbb roll push push pop mov lds test xor imul push jp xchg jl in dec call out or mov (bad) fwait test mov test inc sahf hlt sub mov popa mov mov push mov sbb jle and pop cmp cli in xor in cld mov xchg lret sarb inc pop fst add mov ds in insb repz dec cmp in stos aaa daa sub lods fucomip adc pop xor pop (bad) or jle or mov ss jb aaa jmp cmpb insl rclb lea (bad) lock ss fstps and jne stos push xchg loop icebp push push test (bad) loop or xchg pop add or (bad) xor xchg adc pop cld push mov movsl js xchg call jg mov ds cmp lods shr push xchg pop ds sub aam xchg sbb xchg and cmp mov cs icebp and pop (bad) rolb in jae gs imul outsl inc push ror (bad) int test jbe jae addr16 or in mov fcmovnbe stos mov jnp push movsb popf test insb out imul or (bad) lcall pop (bad) scas pop add xlat mov (bad) (bad) divl cs icebp cs xor jp loop out inc jno fcoms jl shl sahf sbb push imul jbe inc push xchg gs ljmp sub imul push add into jge mov out insl sub inc jbe add fisub sub gs sub jl (bad) inc dec orl loopne push daa mov call adc cmpsb test rorl lea sbb and adc loopne pop lods jnp pop pop lahf std fldenv pop repnz mov arpl cmpsb ja xor das sbb fdivl arpl (bad) xor and and xchg cmp mov mov js add mov data16 outsb movsb fs dec and mov dec sub ret mov aad imul repnz (bad) in xchg out lahf sbb push ror adc adc mov lock xchg add in cwtl xchg aas pop das and sub jae call lock shlb xchg repz outsl fcoml push int mov or push xor (bad) icebp pop mov test jns movsl (bad) jp push loopne iret test and dec in fcmove movsb push imul sbb test add mov push jl ret outsl stc (bad) cld pop push xchg sbb xor add mov add fistl lahf push iret jle in jle dec out pop xor cmp das xchg xorl jecxz out test and ljmp outsb inc mov sbb adc (bad) cmp sbb xlat and ror sbb dec arpl push std js loop ds sbb jns (bad) mov into dec jae daa and cmp and fdivl js push cmp lcall xor push ja pop negl jge push ljmp push mov sbb and icebp xchg mov mov cs mov xcrypt-cbc cmpsl rcl pop imul sub pusha icebp popa nop xor adc mov mov test mov orl ja jecxz popa lcall in mov mov arpl pop fisubl stc mov repnz daa push mulb adc (bad) fmull cs add sub fnop sub jbe add push ds jp cmc cs mov push push push in bound cld movsl pop enter dec jg xlat adc pushf push stc aas cmp add mov sub (bad) insb das out jle mov xchg or rcrb xchg jnp outsb jecxz mov lea cld add lahf lea mov sub ds scas popf push pop sub add popa dec (bad) stos push stc xchg pop cld adc outsl les stc push ss dec sub (bad) clc test mov lcall cli sahf ficoml xor cltd pop mov sub inc loopne popa outsl icebp or fldlg2 loop or xchg or pop int3 adc aad mov or push push (bad) push sub adc mov fninit leave jp jge mov inc or test pop mov cltd (bad) in xchg cld in lds pop push fidivr outsb out rcl xchg pop shlb iret and sbb test push lcall push mov cmc inc repnz push loope mov cltd into ds mov cld xor aam test inc sahf roll mov mov mov jmp pop jbe inc popf test xchg mov push jne int popa std mov jno xchg pop lea imulb pop outsl and push pop dec shrb ret divb cwtl mov iret ret jmp mov sub xchg call mov sub pop xchg insb mov push imulb push sub sbb mov arpl cmpsb scas add mov outsl inc scas mov adc loopne push push cmpsl mov mov lds cld or push lret lahf xor int push and pop repz cmp test mov fwait sub inc insb lods ljmp pop pop fs pop fmul data16 dec pop inc stc xchg out adc (bad) loope push or and adc mov rorb add push in pop cli xchg stc or (bad) (bad) xor jecxz (bad) es push orb add das inc or xor ja fwait int3 cmpsl cmp iret cmp repz jmp ret inc repz sub cwtl push xor imul arpl jne pop roll and adcl mov outsb arpl mov out and mov cmpsl flds xorl aas mov adc pop repnz loope pushf sub sahf daa push add and cmp xchg (bad) insb cld bound pop movsb sub sub cmpl call jl into icebp imul fnsave jb imul in jmp lds and adc imull mov mov mov out stos es mov dec mov adc mov xor xchg add jmp pop cmp mov dec dec das push lret loope (bad) and in cmpsl sti subb ljmp ret addr16 inc xchg lods inc out lods jo imul (bad) mov mov add cmp ljmp scas insb sub stc imul mov mov push pusha xor pop fcom jg (bad) pop jecxz popa scas and pop cli sbb jns sub sub sbb push and lock cmp stos dec xlat mov (bad) jns lcall or pop push std addr16 daa sbb in data16 scas insb fist adc clc push fs xchg insb mov and mov xor das arpl lods inc (bad) xor add mov push pop mov cltd and pushf icebp arpl jp fidivr ljmp ja and cwtl das cld mov cmp cmpsl jg mov clc sub jae sbb outsl loope xchg xor ja out js cmp insl cmp popf dec pop cmpl test pop inc das jb outsl pop outsl xchg insl fwait test aam (bad) ss std js test fdivl and jge rcll das xor fs xchg nop mov mov iret jnp das popa xchg leave or pop loope dec (bad) hlt test cld rcrl xchg (bad) imul adc xchg or outsb mov and mov cmc push and and inc sub dec push and jb mov xchg adc hlt mov mov adc dec mov cli lcall lea jmp (bad) jnp (bad) push imull inc (bad) mov das in and mov jns adc mov and sbb dec (bad) mov aaa xchg push lea inc fbld outsl xchg lds dec inc jg and loop xchg push pop xchg sbb push xor xor aas sbb movsb or shrl test test pop mov inc and add xor bound mov fs jl and jmp (bad) jmp (bad) pop popa sbb icebp jmp inc mov loop mov jg inc dec xchg jge sub ds sbb or fs push push push in add dec out push xchg and or outsb test cmp mov mov inc nop/reserved jb adc xor loope xor and mov mov sbb decl aam dec test mov mov inc lods add lret jecxz mov sbb test jecxz mov mov and test sub push lea mov leave cmp out sbb rol dec or lock fs inc repnz lret imul scas adc loopne pushf fwait dec mov lods (bad) mov inc cmpsb inc sbb lods insl xchg test cmp lea decb and pop imul into or (bad) fist (bad) mov mov dec pop test sbb cmp repnz xor dec push out inc adc gs in dec adc sub imul loop sbb mov jl mov fwait mov sbb fs and inc repnz int xchg fsubp ret sub fisttpl push ss popf add add pop or or std xor rcrl fsubrp mov fimul movsb xchg mov pushf dec stos test lcall xor daa push (bad) fsubr je sbb (bad) push mov adc or pop and add xor and adcl xor mov scas in jns inc scas cmp mov inc fwait jge mov jno addr16 loope into loopne or inc pop inc push or das psllw rcrb hlt pop sbb mov mov stc cmpsb mov mov fdivrs cmpsb jmp lods or mov shrl fimul clc repz mov sbb lds jg mov out dec mov pop dec enter xor clc loope mov aad cmp aam sub jns loopne lods (bad) inc mov mov adc addr16 cld cmp sub jmpw push movsb inc je es push adc call (bad) inc or sbb jge pushf sub std cmc sbb xor ja mov ss jmp cmp add imul imul dec dec cmpsb loopne popf xchg sub xchg and pushf mov mov les pop pop test sub xchg push ret sbb dec rolb dec aaa (bad) hlt sbb scas lock xchg (bad) aam fsubp cmp or mov push sub dec repnz les loop fcmovu mov cltd test (bad) int add adc pop neg cld mov lea sbb popf movsb icebp push pusha xlat icebp imul jle xchg jmp decl dec sti negl inc jg xchg repnz add clc sbb xlat xor mov out xlat stos mov xchg test adc pusha cmp mov neg out pop mov mov hlt jl outsb sub xchg lods hlt adc repnz add in sbb hlt jo xchg add add daa dec in mov and push xchg gs out and jbe,pt fisubl adc pop sbb xchg daa aam mov (bad) push xchg xor lds push xor jge fmul jnp xchg and pop inc inc les add jae daa pop int aaa mov mov inc or cwtl outsb leave mov jecxz sub clc jle inc outsb ljmp loop push dec sub adc out cmp sahf pop mov dec inc into ss add pushf js adc bound popa ds mov pop rorl je mov loopne or mov fs cmp outsl daa or adc add mov push lret inc xchg leave in ror lret loope xor jns push push ljmp jnp push call outsl into push iret aam imul jb (bad) mul mov add aad jnp addr16 jae ljmp gs gs in inc mov inc test sbb mov sub dec cltd insl or addr16 push mov mov fldt aad mov add sub mov enter sbb dec pop lahf pop mov popf sahf push lock (bad) decb sub dec push inc popa cwtl pop adc add cmp or sarl repz mov loop aas and ret in xorb and shlb stc jg test cmp insb sbb cld dec xchg jno jle,pt dec out scas loop jb mov add out fbld cmp push mov adc cmp data16 mov pop cld test cs out xor push inc imul push and push stos vmaxps inc (bad) mov xor jns enter jp sbb insl add push xor in iret cmp mov fsubrs mov ret xchg xor cmp loop into leave and sti xor jb das push jb jp add xchg notb mov ds pop jne in sub mov mov or repz data16 xchg mov aaa jo mov imul cmp sub and je jp pop popa pop es push mov (bad) out and stos gs cmpl inc fdivrs repz (bad) adc ss mov sbb cltd sbb sbb mov dec pop push pop outsl imul adc lret xor movsb (bad) imul xor sbb push and sbb dec push scas pop fistp rcrb insl mov ret cmp insb jo push stc xchg das dec js xor add jmp push dec (bad) pshufw jle pop and xor aas jg or imul sbb mov cmc sbb add je jge xor mov shlb lea loopne push dec fisubr push push sbb mov pop cmp fcoml sub mov mov and or lahf inc dec mov push imul adc (bad) mov and sbb mov and jo roll jno leave jae out negl mov inc pushf and (bad) dec rcrl dec pop inc sbb sbb push clc inc mov jnp mov cmpsl adc addr16 (bad) ficoml (bad) sbb out xchg ja pop sub add adc arpl test pop adc imul stc and mov push ret cli hlt sbb sbb fist in mull into cmp ret out push push xchg sbb jmp xorl mov xor movsl fwait adc int3 lcall cmp push pushf daa push jg ret add mov sub (bad) cmpsl idivb mov adc dec (bad) lods lods call (bad) and inc mov pop mov push sbb push in (bad) push push (bad) into add aam mov pop test pop out or and arpl jnp das stos xchg flds fwait (bad) push aas mov decb in inc push sub and xchg out lods call into insl es pushw adc mov pop push xchg or pop dec nop out push inc mov mov sbbb add aad mov cmc xchg popa sub add sub ret repz mov fnstcw mov inc popa (bad) or push mov sub into in add ret loop das std mov push xor push fwait or inc mov lods cmp std dec mov jp mov fsubrs stos js,pn cmp decl adc out test (bad) lock push ret push pop sbb mov lea (bad) sahf xchg mov aas aad ss lcall cmp push fs test dec push sub hlt push popf hlt push sub xor or aaa sbb cmp hlt push mov fidivrl adc add and xorb cmpsb dec push jnp push pop cwtl xchg test (bad) and push adc adc dec pop and pop xor mov rcrl sbb xor adc lea (bad) xchg mov sub into mov push mov or loope dec mov ljmp adc stos xchg stos (bad) push mov addr16 imul adc xchg loopne push adc (bad) mov je lods movsl pushf or mov adc ficoml roll es mov xor pop std in in out jns cmp xor and sbb add pusha sbb cli push hlt xchg cmc jmp int and clc jae popf call dec call test aaa mov out jmp fsubs mov pusha sbb aad sarb imul insl fisubl dec test mov mov jp jp xchg aaa shl ret xchg push test push lret test in scas lods jle outsb and inc jp pushf ds addr16 jp lret or mov mov in repnz (bad) sub stc scas js push push or sub mov pop lods or push fsubrs aas data16 xlat push push out stc outsb or fabs aad rcl xchg mov stos cmp inc test inc adc or inc nop sub lcall popf mov fnstcw aas xor mov and ret mov cmpsb adc pushf das mov mov inc adc add pop pushw adc stos (bad) into and jb and loope mov out or xor cli cmc add aas mov (bad) mov cmp decb psraw pop xchg outsb xchg pop xor bound shl fldcw inc mov or data16 mov fiadd or fldt cmpsl in inc lock lret imul dec xchg shr in xchg idivl jge pop (bad) aam adc add sarl fnstsw jne adc scas pop (bad) fsubrs push lret nop dec push call jle out mov or sub enter mov mov and push rcrb inc xor pop cmp aam aaa cmp (bad) cmc xor lods cmp mov adc ss fwait pop xchg cltd push xchg idivb int inc jle pop xchg mov loopne cld (bad) xchg or int3 mov (bad) push pop dec cmc xor push jge fsubl mov push inc xor cmp xor jl sub jmp mov mov (bad) cmp lret jae xchg insl in out xor sbb sub xor jmp loope dec dec fildl test pusha fild scas mov outsb mov enter xor stc cmpsb (bad) aas xchg lahf call je insl cmp jb stos push (bad) dec sbb add cmpsl and pop mov arpl dec jmp sti inc jns or les adc clc adc pop enter xchg xchg xorb (bad) ja ret jmp mov mov cmp pop mov xchg call push jb stc sub mov dec sbb inc sbb adc mov adc mov cmpb aaa xchg js adc test ljmp aad in add mov and pop dec int mov push cmp pop (bad) fsubl mov adc adc fsubrs jge fsts out jae (bad) aaa add rorl xchg mov or fistp jecxz nop cmp pop aaa mov adc push hlt cwtl and jb testb iret and cli dec pop or pushf les pop add push lods sub pop and adc enter mov dec jno add mov in cmpsl dec mov insb adc pusha sbb xchg cmp hlt (bad) (bad) lds out fiadd repz lret je inc add das or dec nop push cmpsb jb sahf out sbb mov adc iret inc mov mov rorb xlat mov sub xor pop lods mov pop mov mov pushf mov sub or mov pop sbb push dec and sbb and loopne bswap dec push mov cltd or or cmp fnstsw test xor mov (bad) push xor mov mov xchg sbb mov jp cltd or test xor test push inc inc jecxz int ret mov (bad) enter (bad) pop or lods xchg dec or in not adc fnstsw rcll insl sub xor out cli mov cwtl sbb int3 sbb add sbb dec std nop sub into sahf repnz test inc int sub addr16 (bad) lock pop xchg inc mov push mov mov cmp test mov cmc out adc push dec sti rorl xor fisubl or jnp fwait mov jge movsl or (bad) jo shrl push sub ja cmp lods lret mov mov or out sub (bad) lret mov push xor dec add xchg jno add mov insb inc fdivrp aaa ficoml xchg cli sbb xchg insl fisttpl (bad) in push pop push rcr xchg or push scas cs pusha or enter nop xchg push gs ret add fsub lcall stc (bad) fdivrl out mov dec movsb mov or mov insl xchg iret je jno mov iret xchg outsl cmovb jl xor inc sub cmc stos xor jnp aad (bad) insl int3 sbb mov sbb dec adc cmp js loopne mov test dec insb inc mov lods popa out ret clc push out ds mov mov movsl mov out dec xchg xchg dec jns jae mov cmp loop shlb mov lret pop dec (bad) jne in pop jle xor cmp xchg xor ffreep mov xor vphaddubq sbb push and inc movb dec int3 daa test xor sbb pop inc imul push mov jnp add ds insl dec jle nop push adc scas adc aaa push dec sub fist or lret xchg inc and dec lods cmc mov xorl sarl mov mov sarb push dec dec out inc hlt ds leave pop imul sub cmp iret enter inc clc rcrb aad push jbe dec gs lcall (bad) stos add jl push push mov insb mov and sarb xor sti jecxz inc scas (bad) rorl xchg daa (bad) fsubr mov mov test in pop daa dec or cmpsb mov (bad) idivl in cli clc mov scas mov out or add test js add push cmpsl int3 incl rcrb xor push (bad) mov mov xor pop sub pop fcoms sub pop aad out repnz rorl scas jge pop pop add movl bound pusha inc sarb sti push jb cmpsl and adc mov cmc mov insl cmc fs mov adc pop sbb scas or mov jl xchg pop xchg xor lea ljmp lret inc stos adc xchg pop cli mov aam or fs jge inc popa mov cmpsb popa stos sub mov stc cmp shll dec mov or push repz push je cmp and iret jne mov ss cmp and mov aaa inc jno dec icebp mov outsb jg push inc ret mov mov out jno loop mov cld mov rcrl push in hlt js js cli fstpl xor jae in fnsave (bad) pop push push inc add mov fs push test hlt lret mov out daa inc arpl (bad) mov decb xchg jmp shrl push xlat stos mov pop mov stc test jge lods xchg in or or push inc leave test fadds xor sub sbb xor pop jl ljmp lret lret jno cmc rcl ljmp movsb test add stos adc add rol roll inc or (bad) movl stos mov add dec repz aas sub aaa cltd sar dec push mov arpl or fnstenv xor mov out jle pop sub in and add push push cmp shll cmpl aas xchg ljmp push jo sbb outsl mov lea test popa xchg icebp test cwtl or push leave or adc ret xchg jp lea or push mov out cld scas sub out cltd shlb push sbb mov xor cmpsb pop jae or inc into ficompl cmpsl jno hlt adc dec cmpsl (bad) xor shlb adc sahf std daa (bad) and add cmpsb jo mov xchg std inc and add mov enter cs call in xchg pop inc aaa fstl enter pop iret mov pop pop mov (bad) adc mov daa arpl push bts cld stos inc xchg add sub jge and into adc ret sbb movsb fiaddl lahf dec out xchg imul sahf popa cmp and jle data16 push popa frstor sbb jbe jmp int add jmp mov fistpl jle add in xor fisttpll int3 xor inc cmpsl dec dec mov add jle sub mov xchg adc (bad) push inc dec fwait add fs scas mov mov cltd lods arpl pop sub add cmp fs lret add stc and sbb ljmp out lds sub bnd xorl shlb roll sbb leave add ret fmuls (bad) ss jecxz int3 clc xor sbb mov add (bad) shrb out inc xor or cmp mov cmp push std mov xchg xor dec aas mov movb inc jbe (bad) cli stos push test fwait xchg sub (bad) aas mov repz adc aam xor out and mov ret fwait addr16 in data16 rcrl sbb (bad) popf xchg ds dec lock dec adc jbe test xor outsl mov cmp cld sbb (bad) mov mov jmp shl mov (bad) adc xchg (bad) pop pusha nop inc dec fs loopne mov xor cs inc sbb jno cmpsb push sbb fbld mov cmpsl xor jg test hlt pop xor test in fmull sahf lods sub mov stos jmp sti out stos mov sbb jae adc mov mov push test aaa enter pop xor jno add xlat mov outsb mov cmp cltd or inc fcmovnu cmpsb cmp hlt xchg xor push movsb (bad) and pop push (bad) je iret pop icebp inc insb xor (bad) andl mov lcall std scas dec push lds dec popa dec (bad) (bad) stos and ds adc sarl and test mov dec cltd cmp pop dec out fldcw mov mov dec adc sbb push dec cli push addl nop sahf cmc and test sbb sbb mov sbb negb dec lret fmul (bad) dec cmpsl jp inc repnz jo mov mul push jo mov mov fistp jecxz dec adc push cmp pushfw inc pop jge xchg hlt mov sbb push es push testb add sahf imul push mov or sbb call sahf sub loopne xlat fsubr xor xchg repz push sub push sub imul xor div rcrl push or es or std add ds fisub nop data16 loop mov in (bad) mov mov jne cmp jb dec (bad) sbb notb or mov or test adc (bad) lock sbb or push pop sbb push sub dec cmp shrl mov (bad) fwait idivb loopne sti adc xor push cmp sub jno ffreep aaa fistpl pushw or out pop dec push mov test notb nop pop in rorb jg pop push jb daa js adc iret nop sub fisttp push push outsb push sub dec imul mov add inc pextrw and push mov adc jge sub (bad) jne int3 mov cmp jne jbe negb fistpll jne adc jle (bad) mov repz divl lahf push push outsl xchg pop insb outsl pop loop mov fdivrs lea add (bad) iret sbb pop xchg cli or add and push in test cmpsb push insb (bad) icebp add mov mov sbb or or outsb addr16 stos xor or cmp sarl sub in cmp lock gs cmpsb out pop mov jmp jmp dec push vrcpps add mov push mov mov mov mov test and push in test pushf adc scas and sbbb fcomps (bad) pop sub sbb xchg int3 loop in (bad) (bad) cld mov aas jne add inc adc dec dec lods loope xorl lret or sub scas pop xor cmp mov outsl lods xchg js xor cmc loope roll jno sbb int3 push clc mov adc js add mov stos bound pop clc repnz popf rcll test idivb pop xchg mov adc sbb pop fnstcw sbb pop adc lds cmc fcompl mov (bad) lcall test popf fdiv xchg mov add pop imul adc push mov sbb sub testl les xchg outsb gs mov push add repz dec (bad) movsl sub jnp orb xchg cmp adc push push movsl call pop sub sbb loopne movzbl icebp cmp lret clc loope (bad) jo xchg jp sbb push das pusha mov sub repz bound shrl sub or iret xor cmpsb push stos xchg cmp cmp aam xlat jae fwait dec leave (bad) pop mov in pop push in imul xchg sbb jge dec adc in push push mov push mov sub lea movl push push push push push movl call test js cmpl je mov cmpl mov jb mov push push push lea push call add mov lea cmpl lea push cmovae mov push push push push movl call mov mov push mov call test js pushl lea call xor movl movl mov lea movb push lea push call add test jne or jmp mov lea cmpl cmovae mov push push call mov mov mov test js cmpl lea cmovae push push call mov mov mov test js cmpl lea cmovae push push call mov mov test js lea movl mov push lea push push call mov test js lea movl push lea push call test jne call mov jmp mov push push mov call mov lea push push push mov call push lea push push call mov movl mov lea add lea mov mov mov mov mov mov mov push mov push call mov mov push mov call mov test js lea movl mov push push push call mov test jns mov mov push call jmp mov push push push mov call mov mov push mov call mov push mov call test js xor lea call lea call lea call mov pop mov mov mov pop ret push mov push call add ret clc xchg add adc imul stc decl out ljmp cmp push fisubrl movsl test and fildl jae mov jmp mov add jmp mov jmp int3 int3 int3 lea jmp lea jmp clc xor adc cmp adc imul rcr sub sbb push fildl clc ss sub clc push pop pusha iret sbbl jl inc es fcom flds stos outsb lahf test add push lret jnp movsl and jge or xchg repz or daa sub fmuls or pop pop inc hlt test cmp je loope jmp xchg or stc or cmp (bad) jp,pt mov or inc enter mov cltd sbb ljmp int3 std cmp push aaa sbb in lret xor jne push mov pop es add xor xchg pop add popf pop pop dec ja and jae cmp mov out adc (bad) sub jne mov les insb sbb jg push lahf push rep or mov cmpl inc jmp xchg add jmp das xor cmp xchg and negl mov test jo sub imul flds or fisttp add imul addr16 or jecxz mov mov cmp add movsb push sub push cmpsb mov adcl (bad) jmp mov cmpb out xchg adc fcoms or lock adc and sub adc push xor mov lds lret push mov stc mov fsubs sub js out xor ja int3 movsb aas arpl jns push ljmp icebp mov cmp loopne xchg sbb jns mov outsb addr16 inc enter cmp add lock mov fdivrs mov out in sarb rorb stos outsl sbb jp adc push stos lcall js (bad) mov pop mov sub push aam dec insb inc push jp lds sti ss jmp lret in adc shr test (bad) pop cltd and xchg rcll (bad) or negl lods adc (bad) push mov in jne movsl mov and scas enter clc or call fnsave je inc adc arpl and in addl imul jbe pushf imul inc into jns gs adc stc adc dec or mov std mov pop dec add and cmp jg cmp push daa inc adc outsb aas xchg loop cs add sub (bad) adc jo stc cmp inc cmp push mov incb (bad) cmp sub mov push jecxz push mov or icebp out lds in sub lds mov iret negb pop lcall aam mov js test pop ljmp (bad) (bad) ds xorl inc xor or cmp mov adc mov outsb cwtl int imul or xor xchg push cld mov mov imul adc mov (bad) outsb sub xor cli mov xlat pop fidivrl iret lahf aas fsts test push rcrb and add idiv push cmp xchg rcr sub xor imul dec add pop inc sti mov gs pop sub fsubrl and xlat mov mov ss enter push pop mov fisubr mov xchg xchg mov les or dec pop arpl mov push leave jnp jmp fwait ret dec mov and cmc ret pop jge es jnp icebp in jnp mov and and mov xor shl jmp jnp mov loopne fldcw sub jle inc pop into inc sbb adc nop inc adc repz loope ss gs and outsl ds repnz sbb cld mov insl adc je in jo pop xchg ss mov mov clc imul jae cltd dec es ret sub lea cld nop sbbb dec inc ss aaa int3 test or jno sbb dec loop mov outsb mov push sub mov bound jmp pop push mov fnsetpm(287 cltd xlat push (bad) push int xor pop aaa mov and jns cs cmpsb test xor ret xchg (bad) rol je lods jne inc popa dec jmp popa arpl test orl fdivr lcall add int3 sub test jge and mov icebp addr16 mov jge in popa push test in hlt int (bad) jnp jmp (bad) mov jp movsb pop mov frstor les sbb sub cmp or pop popf mov or pop mov jmp mov add jmp mov add jmp push mov push call add ret mov jmp mov add jmp mov add jmp mov jmp push mov push call add ret mov jmp mov add jmp mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 dec or mov pop xchg xor aad fdivrl sub in popa mov cmpsb hlt je out inc lock in cmc lock pop ljmp push pop pusha ljmp sbb mov mov jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lods xor leave and dec into std xchg and pop cmp pop cmpsb mov xor cmc lock pop ljmp push pop pusha and fisub push stc cltd addr16 mov and test stos pop xor frstor imul popf push push pop (bad) adc pusha dec and imul xchg (bad) popf bound mov out in cmp mov icebp cs in push cmp dec ss jbe cwtl popa jp cs cmp mov inc mov cli sbb (bad) outsl jo jle or loop push popa and mov test fs cmp push sbb cmp fstl push push sub (bad) inc dec das andl cmp jbe xor cmp test sahf imul rcr inc sbb mov mov adc insb add in js sub mov (bad) daa (bad) loopne imul sub mov xchg jo xchg out mov test loop add ds add or add mov ret loop jb mov dec arpl addr16 cmpsb adc (bad) or into mov decb test or pusha js inc jge enter andb jle lea cwtl (bad) and gs (bad) fldlg2 fs (bad) gs in cmp int xchg clc dec sbb xchg fnstsw cmp push lds out push loop dec daa cmp punpcklqdq mov cmp and xchg xchg pop pop xor mov icebp test outsl dec push mov lcall push fstps mov mov xlat mov sbb outsb mov loopne jmp jp cli idivl lret not shll jne stos out jecxz mov push mov loope mov push xchg pop sub (bad) push adc cmp test mov pop mov sub push test dec insb sub mov pop pop movsl into and lret mov push pop jecxz pop cltd int adc adc nop cmp test insb shlb push bound stos sbb popa je aas sarb pop scas cwtl adc int3 rep into lods inc scas int3 adc cmp data16 cld push ret pop push cmpsb in jo pop stos xchg adcl fisttpl xlat sbb shll jl mov (bad) movsb jae xchg push and jle (bad) scas sub daa sbb mov bound jae leave cmpb addr16 movzwl es out insb ss jmp lret outsb loop (bad) push fildl int jne inc cmp pop (bad) int3 call pushf mov aad int xchg cmp int fiadd mov in pop push dec stc ja mov pop mov and jb mov fist aad nop sub (bad) and repz adc in mov push pop cmp push push inc xor (bad) pop sbb lret stc fprem and jno cmp xor sarb cmp xor or pushf jno xor mov pushl xor adc mov mov xor push roll pop js jg (bad) jae fwait add sbb cmc or addr16 push mov xchg loop daa ja push fldt in (bad) jge ss std adc mov ja out in dec add pusha cmp aas adc je inc xor dec rorl fbld adc mov mov hlt pop aad push stos ret fst pop dec test nop ja mov add icebp jg inc lods dec repz dec jnp xchg mov mov mov out dec cmp push mov sub cmc push clc jge dec pop enter movsl mov or icebp dec mov fdivp push pop in fstl (bad) mov mov mov icebp adc inc adc iret repnz xor test dec rcl inc xchg or push adc push inc movq mov fcom repz in jl lahf or inc cli cmp adc push mov int clc stos inc mov sbb sub dec popa cwtl sbb pop sarl call fwait jle mov js mov push mov add or jno adc scas das pop mov inc jo cmp addr16 jg mov mov cmp jae repnz sub adc hlt femms (bad) xor add mov aaa inc aam rcrl fbstp jge data16 dec mov popf es inc rcll cli lcall pop xor sub aad xchg arpl xchg aas adc icebp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp lods cmp cmp outsl pushf out dec mov add jmp mov add jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 scas cmp push inc into jg mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 dec in cld test (bad) lahf xor aad fmull dec std decl ss decl ss decl ss decl ss ljmp imul ss (bad) mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 clc hlt sub (bad) (bad) xor stc in sahf dec dec adc int fs decl ret lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 scas cmp and sbb xor hlt lods adc movsl mov dec int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp scas cmp mov jg lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 lea jmp scas cmp pop int3 jg arpl xor xchg ljmp jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 int3 int3 int3 scas cmp push adc jg arpl xor ljmp jmp int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lods xor and dec into popf mov nop fbld lods adc add std dec int3 int3 int3 int3 lea jmp lea jmp clc fdivl adc cmp xchg (bad) xor stc lea jmp lea jmp lea jmp lea jmp scas cmp push lret jg mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp int3 int3 int3 mov jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov jmp int3 int3 int3 int3 int3 int3 mov push mov push call add ret lods cmp push (bad) insb jg push lret movsl test daa pop (bad) mov aam push cli fildl jae mov inc loopne call add ret push mov push call add ret mov jmp int3 int3 int3 int3 int3 int3 int3 int3 dec hlt pop cld pushf inc push scas aad fdivrl jmp int3 int3 int3 int3 int3 int3 int3 lea jmp mov jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp clc pop das adc cmp xchg (bad) xor stc lods pop mov aam push cli mov jmp int3 int3 int3 int3 int3 int3 clc mov dec xchg (bad) xor stc mov jmp int3 int3 int3 int3 int3 int3 lea jmp lea jmp mov jmp int3 int3 int3 lea jmp lea jmp scas cmp sbb leave xor and lods adc mov int3 int3 push mov push call add ret clc test adc cmp xchg (bad) xor xchg or outsl enter movsb std lods adc jno std ljmp data16 mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp lea jmp mov jmp lods xor leave and dec into dec mov nop fbld ss jp add or xor add aas jae pushf pop sub andl jns or loopne jbe mov mov inc insb push psllq jmp inc cmc jge jl lret pop movsl and and or mov add adc mov push mov dec xchg (bad) cmp or ret or xor lods ss jno add orl mov gs nop mov lret pop dec pop (bad) fild jle int3 adc and ljmp and addb mov aam fldcw (bad) das push or dec arpl stos cli dec not arpl mov loop xor stos push xchg adc xor in xchg (bad) icebp int shlb adc aas xor lcall push xlat es decl mov jae,pt jbe ficoml dec sbb test pop dec add pop xchg aaa les rcl fcoms dec fldt cmc cltd cld leave add stos inc enter es mov ds sub xor pop or adc jge jo shll dec stc (bad) dec push inc jnp lods push gs jns cmp jg dec jp adc mov bound xchg popf pop das repz cmc int dec ret stos and add bnd lret mov dec test cmp lods (bad) xor xorl and and rorl push (bad) push push adc add sub test cmp push cmp lods xor pop jo test xor dec xor cmc jnp idivl dec mov or fildll mov repz push test add icebp daa add mov inc dec cmc jae je ljmp push mov push std sti fbstp dec sti repz mov dec int pop rcr sbb inc imul lcall lea sub fs (bad) and imul or rorb (bad) (bad) (bad) xor clc jae hlt and std mov mov lods xor inc lods add dec je test xor cmp add test mov (bad) or mov xlat mov xlat arpl ja push xchg outsb xchg aad jl leave jb push (bad) ds addr16 sbb test (bad) ss xchg repz incb push sbb (bad) cmpsb mov or add add mov stos iret movsb fs sbb fisttp sub lods stc push xor das add add push xor push mov and lahf hlt jnp mov jle add stc mov pop in aam pop cwtl dec loop and lahf mov or test jno (bad) adc cs xchg fiadd and sbbb cli xchg xor mov push fs jns leave cwtl sbb jns fs imul sahf lea cwtl xor aaa out ret lcall bound stos int3 or and in mov add call jecxz in sbb scas mov into imul scas (bad) popf xchg jbe add mov enter daa inc cltd push adc push xchg cs mov roll pop lcall bound push jg arpl mov push leave jnp out lds out dec fistpl dec pop and mov outsl rorl hlt sbb jnp int3 stos neg sti or and cli loope inc stos aam jae cmp lret sub mov jle lock sarb xor xlat daa sub push hlt and fstpt aaa xlat dec sub dec test jne push imul mov mov xchg pusha push dec add test cmp jp outsb mov or mov lods lahf sbb jp and and sub mov mov aad mov mov subb xchg loope mov lock push push mov dec dec addr16 mov push jnp jecxz lret sub icebp test neg and addr16 mov scas rclb dec jg (bad) pop xchg les out dec adc jnp loopne mov cs sub mov jno adc cli lcall movsl xor sub in xchg ja cmpl xchg aas adc icebp addr16 pushf icebp sbb add pop insb adc push mov ret stc and pop cli sahf icebp (bad) in adc pop fdivr sub pop add aas or stos inc mov mov repz out xchg mov and lcall into lods xchg repz popa or push clc pusha jb mov xchg sub jne outsb pop sub in cli cmp inc es popf daa adc leave mov mov shll xor and lock call js lods jne sbb and xchg or sbb or jmp mov jo sub lds cmp incl aaa pop jnp int push js mov ror (bad) aas xchg fadds mov sub fidiv lods sbb gs arpl cmpsl dec mov xor dec dec xchg in nop pop fstpl jne bound loopne neg push adc jmp stc popf mov cmp add add es loop notb in dec xchg ret inc mov ds push cld (bad) arpl or rorl push mov divb rcrl mov mov test (bad) lods xchg and cmp (bad) fucomi lret out sti or ss jecxz jl inc mov inc shll cmp in jnp dec sub popa out pop popf push jp xchg loopne cmpsb mov and push push rolb sbb add fwait ret lahf aaa add scas sarb push test cs ret loope add cmp aam in cwtl fwait cld xor gs mov jno orl mov aas sbb call inc mov imul inc dec rcr insb mov dec int xchg (bad) xor loopne sahf add cmpb mov cmp mov or mov lds add cmp out xlat lds inc pop and dec inc mov js xchg aad and adc adc dec aas add (bad) cmp mov fsts inc mov scas push into mov add popf insl out mov sbbl dec in psubd pop enter pop lcall pop pop jbe out fistp daa shrl fisubr add mov inc mov aam xchg std cmpsl mov jge dec cmp lahf (bad) dec or fsubrl or jg and int stc addl inc dec int or fsubrs data16 pop xor mov mov or stos mov outsb mov sub cmp popa ret adc cmp push sbb jae push inc call mov mov mov push mov jle or bound inc popa xor into sbb mov fimull test addr16 rorl int3 adc pop mov inc ds daa xor test pop xor push push std inc cmp pop cmpsl shll or jno js lock lret sbb pop jge sbb (bad) popf push out cmp jge or stc sbb icebp pushf repz int3 lods (bad) mov orl rcrb mov out fnstcw jecxz int andb xlat ficompl lret xchg push mov movsl lea call jmp lds xchg (bad) pushf lods nop add cmp (bad) inc xor call outsl sbb sahf pop lea fcmovb ja stc dec mov jmp std lcall xor rcll rcrb imul xchg and sub leave or movsl mov psllq loopne hlt int arpl lock push roll fnop ret imul (bad) repz js push repnz int3 hlt jge mov mov sub xchg stc fwait test pop in ret mov lahf std or insb addr16 test mov jp mov insb lret aaa stc pop push lods dec js push ljmp push push cmp cmp mov mov jge rorb pop xchg movsb pop out jecxz xchg mov pusha fdivr ljmp push loopne sub cmp sbb fbstp loopne cmp frstor jmp sub jl movsl cld test mov jp mov pop jge ss sub add xchg ror sbb xchg mov fistpll mov mov jg lret push mov adc jmp ficomp adc aad clc ret and stc arpl rclb inc sarl fcoms inc or xchg adc jns jmp add mov cmp bound lahf insl lret int outsb mov addr16 repnz (bad) xchg push inc push or push repnz push imul outsb arpl jmp ret push arpl inc loop push call mov sbb aas jl and les mov xlat mov jecxz xlat das or push ret jl sbb or int jecxz out andl sub cmp jno out mov test daa jb mov adc rorb push dec aad out xchg iret pop out push (bad) daa rol lret mov add aam pop inc cmc xchg xor clc mov push jb nop sbb js es pusha mov or arpl mov test (bad) in and mov sbb dec call xor stos into mov or xchg outsb aad repnz jae xlat sti mov ret notl fidivrl xchg jnp jp (bad) sti cmpsb inc into clc lods mov sahf sbb orl xchg xor xchg push mov cmpsb clc mov lcall daa pushf mov xchg (bad) push loope pop fistpll jmp pop pushf sub mov mov scas hlt mov iret cmp pop fisub popa cld add jne aam jbe xor xorb mov xchg fdivr nop xor push iret inc icebp int adc test push jp out jecxz mov mov add leave cmpsl repnz jmp lret mov mov (bad) lock jl enter adc jo in sub inc xor xor xor dec cmp add xorl push cmpsl outsb ja fmuls jl stc ds test pop shrl xorw xor out hlt mov dec (bad) aam inc incl fadds mov (bad) std mov jo movsl leave incb insl mov imul mov daa jns and cli insb (bad) (bad) push lods xor in pop inc in pop sbb daa test (bad) xchg fldenv dec out add (bad) cmp insl test in test (bad) repnz dec sub adc andl push pop xor shrl daa (bad) (bad) push or push cltd sbb (bad) xlat push dec ljmp mov daa and test pop push mov sbb cs inc jns out mov mov mov adc bound sub rorb ret push fistpl jae aad daa ret adc dec sub pop mov inc fdiv and dec in mov xchg (bad) rep js shrw mov mov push push jo faddl xor shll dec das leave lods adc cmp loop,pn loope (bad) push ja dec cmp push or int3 adc dec test and and inc cwtl cmpsl fwait push xchg test mulb and cmpl mov shrl andb or in sbb jne stos or mov rcr out or ss imulb lcall dec add mov data16 xor outsb ret xchg loope lea or push (bad) cwtl or clc jl rolb leave adcl ret jb jecxz fmuls test mov loope cmc cmp pop mov outsb jecxz mov andw sarb in push dec cli dec inc sbb mov negl icebp mov test addr16 les push out out popf aad (bad) fdivl pop (bad) clc mov cmp cmpsb add mov pop sti add mov xor sbb mov dec lea lds push or inc cmpsb lret adc dec push fadds push inc pushf rcrl and ret (bad) dec mov push xchg movb or cs sbb and aas mov or repz (bad) shrd (bad) arpl fwait adc ss test dec xor (bad) jmp dec loopne push sbb lock push icebp (bad) push sti mov divl inc test or or aas sub or repz dec jae into (bad) popf jle movsl popf sub out pusha das cwtl adc inc ja imul je roll test test mov shrl sti movsb gs pop sarb sbb sub mov nop fs fistp insl dec and (bad) fldenv and pop jp mov test lret mov xchg xor cs mov xchg jp jg sbb push dec mov xchg sub faddl mov dec bound insl pop ret out loopne xchg push into nop cmp jns or insl pop jbe add rcll dec test shrl in insb inc cld cmp scas icebp enter fisub fnstenv jp fdivrp cmp xchg out sbb mov mov dec cmp jle test lret mov subl jns sbb lret xchg mov cmc dec stc lret lcall lcall fs cmpsl dec push into add out mov mov mov out fdivrl xchg jecxz jns mov inc cmp mov inc cli jb into in jae inc repnz or imul lcall xor sbb pushf inc lock out push dec or xor jo xchg add sbb jns jnp push mov sub lods aaa cld mov adc mov je out dec sbb jp mov (bad) jns mov sbb test adc aam adc xchg adcl pop mov or sbb insb cmp sbb inc nop and cmc dec lcall xchg xchg pop sub lret jmp or icebp popa xchg loope hlt adc test add jno call sub int xor icebp ficom sbb push push popa adc daa or jmp push jle loop xor icebp pop daa fisttp xchg inc sub mov fmull fdiv out mov xchg xchg insl pop (bad) fmuls popf mov in jmp sbb cmp cs sar fmull (bad) xor icebp loop sub test and cld xchg aad or sahf loop and hlt sub decb xor pop cmp test inc fsub mov jbe cmp js sbb jnp daa dec xchg sbb lea jmp lods and mov push dec mov xchg ss jp aas xchg sbb xor and lea mov xor call mov jmp lods and mov push dec mov xchg xor xchg sbb inc or dec in xor call mov jmp mov jmp mov add push pushl call pop pop ret mov lea mov xor call mov jmp mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp pushl pushl call pop pop ret mov lea mov xor call mov jmp push pushl call pop pop ret mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp mov lea mov xor call mov jmp lea jmp mov lea mov xor call mov jmp int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movb mov movb mov mov pop ret int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov mov mov mov call movl mov add mov mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add mov movb mov mov mov mov mov movl mov movl mov call movb mov add push call add movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov cmpl jne lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov push mov mov call movl lea call movl jmp mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push call add push call add push push mov add call lea mov lea mov mov call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push mov add call movl lea call movl mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl mov mov mov mov mov mov mov mov push lea call mov mov lea push mov add call movb movl movl lea call movl mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov push mov push mov push mov call mov push mov call mov pop ret int3 int3 int3 int3 int3 push mov mov call mov pop ret push lea sub push push mov push mov sub movl movl lea mov mov call lea call movl cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov xor shl mov mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and movsbl or xor shl mov mov jmp cmpl ja push push lea call lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or mov shl mov mov lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov shr and or xor shl mov mov lea push mov call mov or mov movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push mov jmp mov add mov mov cmp jae mov movsbl cmp je mov movsbl cmp jne mov jmp jmp xor pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp adc xchg mov orl mov enter and sub push push mov push mov sub mov movl xorps movsd movl mov mov mov sub mov cmpl jg mov push mov mov push lea push call add mov movb lea push push lea push call add mov jmp mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov mov mov mov mov mov cmpl jb movl jmp movl movzbl test je mov mov mov mov mov lea push push mov push call add mov movl lea call movl cmpl je mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp sub movsd movsd lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push lea sub push push mov push mov sub mov movl movb mov mov mov jmp mov add mov mov mov cmp je movzbl test jne mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp je movl jmp movl movzbl test jne mov movsbl cmp jne mov mov cmp jne movl jmp movl mov mov jmp movzbl test je mov push mov call jmp mov mov mov mov movsbl cmp jne movl jmp movl mov mov movzbl test je mov add mov movzbl test je mov neg mov jmp mov mov mov xor mov div mov movl mov mov cmp jae mov mov mov mov add mov movsbl cmp jl movsbl cmp jle mov mov mov mov mov mov lea mov mov push movzbl push lea call movl lea call mov cmp je mov sub push call add push mov push lea call movl lea mov movl mov push push lea push call add mov mov mov movb push mov push lea push call add mov mov mov movb push mov push mov push mov call mov movb lea call movb lea call movl lea call movl mov jmp mov cmp jb mov push mov call jmp imul movsbl lea mov jmp movzbl test je mov neg push lea call movl lea push mov call mov call movl lea call jmp mov cmp ja mov push lea call movl lea push mov call mov call movl lea call jmp mov push lea call movl lea push mov call mov call movl lea call mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea call movl lea push mov push mov call movzbl test jne movb movl lea call movl mov jmp lea push lea call movb lea push mov call mov call movb lea call movb movl lea call movl mov mov mov mov pop ret int3 push mov push push mov push mov sub mov mov mov mov sub sub push mov call mov mov add mov mov mov sub mov mov cmp je mov mov mov mov add mov movsbl cmp jne jmp jmp movsbl cmp jne mov cmp jne push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov add mov movsbl mov mov sub mov cmpl ja mov movzbl jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp push mov call jmp lea push mov push lea push mov push mov call movzbl test jne xor jmp mov push lea push call add mov mov mov movl mov push mov call movl lea call movl jmp push lea call movl mov push mov push lea push mov call mov movl lea call movl mov jmp jmp movzbl push mov call jmp mov mov mov mov pop ret xchg clc cld stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc std stos adc or or or or or or add or or or or or or or or or or or or or or or or or or or or or or or or or or or or or or add or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov push mov push mov push mov push mov call movzbl test jne xor jmp mov cmpl jb mov cmpl ja mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov movsbl mov mov mov add mov mov cmpl jne mov mov movsbl mov mov mov add mov mov cmpl jne lea push mov push mov push mov push mov call movzbl test je mov mov and shl mov and lea mov mov jmp xor jmp jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov mov sub cmp jge push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp mov movl movl jmp mov add mov cmpl jge mov mov mov mov mov mov add mov mov mov mov shl mov mov movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp movsbl cmp jl movsbl cmp jg movsbl mov mov lea mov mov jmp push lea call movl mov mov push mov push lea push mov call mov movl lea call movl mov jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp jne xor jmp mov mov mov mov mov mov add mov mov mov mov pop ret int3 int3 int3 int3 push mov sub mov mov mov mov sub cmp jge xor jmp mov mov mov mov mov sub mov cmpl je mov mov mov movsbl mov add movsbl cmp je xor jmp jmp mov mov add mov mov mov mov pop ret push mov sub mov mov push mov add call mov add call mov mov add mov mov mov mov mov mov mov add mov movzbl push mov push mov push mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov mov movzbl test jne movb mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov movl push call add push call add push push mov add call movl mov add call movl mov mov mov mov mov add mov mov cmpl jne movl jmp movl mov mov movzbl test jne mov call jmp mov mov lea mov mov push mov call mov call mov lea push mov call mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov movzbl test je mov call movzbl test jne mov call movzbl test jne movl mov mov mov mov push lea call movl push lea push lea push mov call movl lea call movl xor jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov push lea call mov mov mov movl mov push mov call mov call movl lea call mov call mov mov movsbl cmp jne lea push mov call mov jmp movl mov test je mov mov mov push mov call mov call mov mov add mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call jmp lea push mov call mov cmpl jne movzbl test je lea push mov call mov jmp cmpl je cmpl je movl jmp movl mov mov movzbl test je movzbl test je push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp cmpl jne jmp jmp mov mov mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov call mov movsbl cmp jne mov mov movsbl cmp jne jmp jmp mov call movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns cmp adc sbb pop and jbe in inc (bad) (bad) cmpsl sbb es add push into inc mov xchg cmp jae ja jp ja int3 push jno mov fsts (bad) mov mov rorl jno cmp cmc test xor inc sub fsubr stc push aas clc or outsb sbb imul jp xor jns adc mov test jmp bound sti cs lahf repz insb cmp cmpb push ja cmp into mov inc xchg inc cmpsl or jge cmp in and and push movsb pop add mov mov or dec negb mov inc cld aaa inc lock into xlat xchg pushf and in or clc mov mov cmp je mov call mov movsbl cmp je movsbl cmp jne jmp jmp mov mov pop ret int3 int3 push jns cmp adc sbb jmp xor sbb mov xchg dec mov shrb hlt or fwait and pop je ret push lock aad xchg testl mov and pcmpeqb rcrb pop cmp jp imull xor push (bad) roll xchg hlt mov push cltd jle rorl test lods lods dec mov jge add out icebp out outsl jle push cmp cmp (bad) jle add and ljmp add lea sub push push mov push mov sub mov movl lea mov mov call lea call movl push lea call mov mov mov movb mov push mov call mov call movb lea call lea push mov call movzbl test je movb cmpl jne movzbl test je lea push mov call mov jmp movzbl test jne jmp cmpl jne lea mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test je movb movl lea call movl mov jmp cmpl je jmp push call add push call add push push lea call lea push lea push mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp lea push mov call mov call mov mov mov lea mov mov push mov call mov call mov mov call movzbl test jne push mov call mov movl lea call movl mov jmp lea push mov call movzbl test je cmpl je cmpl je cmpl je push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov jmp movb cmpl jne movzbl test je lea push mov call mov jmp cmpl jne movb movl lea call movl mov jmp jmp push lea call movb push lea push lea push mov call mov movb lea call movl lea call movl mov mov mov add mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov movb mov mov mov cmp je mov call mov movsbl cmp jne mov call jmp movsbl cmp jne jmp jmp movsbl cmp jne movl jmp movl mov mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub mov mov call mov mov mov mov mov call mov movb movsbl mov cmpl ja mov movzbl jmp mov movl jmp mov movl jmp mov movl jmp mov movl jmp mov movl mov call mov jmp mov movl mov call mov jmp mov movl mov call jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl push push mov call mov jmp mov movl jmp mov movl jmp mov movl jmp movb movzbl test jne mov movl mov mov mov mov mov mov pop ret cwtl push lods adc or lods adc push lods adc or lods adc or lods adc push lods adc push lods adc push lods adc or lods adc push lods adc or or or or or or or or or or add add add add or or or or or or pop or or or or or or or int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push push mov push mov sub mov lea push mov call movb mov movzbl test je mov add mov mov mov mov mov mov cmpl jne movl jmp movl mov mov movzbl test jne push mov add push mov call mov call push call add push call add push push mov add call mov mov mov sub mov cmpl ja mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp lea push mov call mov jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call movl lea push mov call mov call movl lea call jmp push lea call mov mov mov movl mov push mov call mov call movl lea call jmp push lea call movl push lea push lea push mov call mov movl lea call movl mov jmp mov movzbl test je mov mov mov mov mov call mov mov mov mov mov mov pop ret adc adc adc (bad) adc out adc int3 int3 int3 int3 push mov sub mov mov add mov mov mov mov add mov mov mov mov mov mov mov test je lea push mov call movzbl test jne mov push mov add call mov cmp je cmpl jne jmp jmp mov push mov add call xor mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov push mov mov movzbl test je mov push mov call mov cmpl je jmp mov push mov call mov pop ret int3 int3 int3 int3 int3 int3 push mov sub mov mov mov mov cmp je mov mov mov mov movsbl cmp je movsbl cmp je movsbl cmp je movsbl cmp jne mov mov add mov mov jmp jmp jmp mov pop ret int3 push mov push push push sub mov mov mov mov orl mov test je mov cmp je mov mov sub data16 cmp jb and lea lea push push push push call add mov mov test je add cmp jne mov test je xor nopl lea mov lea lea mov push push pushl push call mov mov mov movl sub add mov mov data16 mov mov test jle mov mov add imul test mov je add mov nopl mov mov mov sub mov mul shr imul neg mov add mov inc cmp jb jmp data16 mov data16 mov mov mov sub lea and xor mov mov sub mov mul shr imul neg mov add mov inc cmp jb mov inc cmp mov jne mov inc lea mov test jne mov test je mov test je mov nopw and lea mov test je lea push push push push call addl mov test je add test jne mov call xor add pop pop pop pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 mov mov mov mov mov mov movl cmp je push mov push call mov add mov cmp jne pop push call pop ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 call cmpl je sub call mov mov sub sar cmp ja shl cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add movl movl movl ret jmp mov jmp mov jmp mov jmp mov jmp mov jmp sti mov bound xchg jbe fidivrl or test jne ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov mov pop ret nopw mov test je mov ret push mov call pop mov ret int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push jns (bad) mov cmp add in mov ja mov mov jnp incb push xor push xchg cltd sub bnd push mov mov add shll ss adc push pop mov sub in and or mov ficom jnp test mov push mul popa arpl pop mov out leave pop das add call (bad) adc xchg cmpsb movsb add cmpsl and scas in mov pop push pop push lret out and adc xchg icebp xchg jge mov fcmovbe push fistpl mov mov add les cmp push divl mov push div outsl and and insl inc jns jae jl pop dec (bad) out outsl sub repnz jno pop jecxz sbb icebp pop mov arpl popa pop repnz cmpsb mov into fwait mov add imul (bad) iretw lea icebp nop insl xchg adc inc inc pop ja pop ret loopne mov sbb adc in or mov pop jae cmp dec arpl cmp (bad) jmp or ds mov int test andb dec sub loopne aam jne mov mov dec (bad) into xchg mov add jo cwtl sbb lahf jl stc data16 and js incl stc xor jmp stos sub xchg and and imul mov and mov movsb xchg fisubr repnz lcall sbb fcos in (bad) int inc mov mov jbe movl mov push cmp adc lret xor (bad) out not roll jmp mov lods lock sahf repnz repnz push pop jae cld xchg or jecxz push in mov insb cmp cmp out call lock jle test aas cltd cmp dec out add lret mov jne addr16 cmp jno inc fnsave xchg or fcomp and jae jge (bad) or out jns adc stos cmp imul mov imul add nop jecxz inc nop out dec lds aam out pmovmskb arpl cmc xchg push rcrb pushf mov sbb lods orl sub or jmp (bad) outsl xchg movsb out or insl cmp jbe (bad) push xchg push and jle cmp test mov mov imull test and gs pop mov jne mov mov pop mov nop nop add sbb es fwait sbb xor pop xchg cld sbb cld bound pop shl icebp push lods lcall mov jmp jb cli inc inc cmc mov or in into int pop xor pop add test sub mov aas test xchg out insl sub fildl jle test lods xchg jo movsb arpl out int3 mov cmp adc xor test mov js or fcomps and aaa das jno mov adc sbb movsbl pop cmpsb pop sub outsb (bad) cmp out scas mov and (bad) sbb rolb cmp dec stc insb cld pop loope aaa mov mov nop xor rcll xchg cmc out mov leave mov scas mov pop lods mov mov mov mov cwtl mov movsb pusha and popa int fnstenv dec add jae ds jecxz inc dec adc aaa push popf mov subl rcrb push test sbb (bad) xchg sbb adc jl cmp mov cwtl scas mov adc add (bad) lret cmp inc in pop jle jp adc jp outsl lods divl mov cmpl cltd js,pn jae cltd or mov xor cwtl mov xor movsb pop inc sbb jae mov dec in int3 inc cmp cmc adc pop test mov das jns sub xchg movq or ds adc lea mov dec mov aaa mov or mov and sbb addr16 jecxz movsb push mov mov dec mov fucom aam and jo push pop mov insl xchg test inc test cmp inc mov gs cwtl pushf dec cld je data16 into fs cmp (bad) addr16 ret push xchg cwtl sar jg (bad) mov add imul push pop inc mov ret pop or inc es cmpsl mov inc mov mov mov addr16 and push xor negl pop dec mov lods iret loope test xchg push lret mov cli lahf in test mov mov mov mov sub dec sbb sahf movsb ljmp push scas sbb dec imul cwtl icebp add mov rcr ds jno rorb fidivrl xor push enter movb mov leave ret test inc addr16 cmp and dec clc mov and mov mov jo sub xchg lods popf fwait cmp lret push cld mov xchg in loop jp lahf aad inc repz mov ds cmpsl in sub fild push inc jae xor inc cmp or add push int3 shll ljmp nop popa ss cmp jl shll mov (bad) push test mov and cwtl je stos adc and sbb into mov add mov mov sti pop sti lods jp sbb cwtl pusha fwait jns push cmc popf jp (bad) xor mov push cmc jp leave mov xchg or std daa ljmp shl repnz or outsl js into dec ljmp das jp dec lea cmp scas divb or sbb jno pop and lret popa lock popf lret xor aam mov or test inc mov jns ret lahf mov cmp test push std test das xor (bad) mov and loop insl imul (bad) mov enter cs (bad) adc iret enter mov add jmp out dec sbb lret dec repz or inc ja xor push jmp mov out push mov nop adc xor mov lret in (bad) ljmp lea sub int3 mov (bad) and cmp cmpsl push xor jne xchg sbb add bndldx cs fxch mov aad imul push cwtl orl dec inc mov mov inc push fisubrl fildl shlb jmp cmp mov testb lret (bad) jne aad adcl push push mov add (bad) xchg inc mov cli xor cmp inc lods inc jae (bad) (bad) mov push lods andb cwtl shll xchg inc jmp jo js data16 int3 gs repz mov xor in int3 lock or loopne mov mov test arpl jmp les adc jns das imul jae xchg xorl jmp cmp push push mov xchg mov subl ds jp sub enter (bad) jg in dec (bad) movsb cmp sbb sub jg xchg mov xchg iret mov jne repz loope cmc or xor push and ret aad mov ffree leave rclb int sub fwait dec xor and scas xor sub cmpsb roll inc and subb loopne fidivl mov sbb jae insb add xchg ss inc mov rclb loope xor out cmp mov test fcmovnb cmpsl pop or or pop lock xchg bswap aas out fwait sbb sbb loopne dec push mov mov mov push in cmp das lods out pop das xchg clc xor lock cwtl test cmp (bad) aad mov adc xor sub mov sbb ret mov lods dec movsb rorl ja icebp push xor dec add and sub xchg xor push jno or stos ss xchg xlat mov push movsb inc adc jne mov xchg enter cmpsl rcrb cmp fbld mov nop fdivl loope pop push fsubs adc lcall rclb xchg fs enter adc out (bad) and es pop out jecxz push cmpsb scas jp sbb jl jecxz xor ret imull push add push adc aad or inc subl cwtl push xchg push test fwait pop ds jb cmpsb cmp xor xor stc lea shrb pop adc ds sbb adc aas and pop ljmp aas sbb lret fs rorb pop jmp mov or lock xchg outsb inc inc aas sbb pop push lea dec mov dec aaa pop push test xor outsl mov push push or mov adc jbe cmp inc inc pop xorl daa bound mov or jbe mov fdivrl in int3 rcr movsb fwait cmp test jl cld push fsubp mov lahf or xchg jns call jge mov sub out sub xchg push sbb push sbb scas cmpsb mov or mov xlat adc (bad) jge int3 out ret xchg test mov cmp imul gs add test daa mov jne ja cmpsl lods push push xchg dec lcall bound xor outsb or adc push cltd push mov jle jg jae pushf ja xor das outsl out push adc cmpsb xor xchg aas and insb pop push mov imul loop mov arpl loope lret pop fistpll mov mov cmp mov jns (bad) aam mov or lods out loopne (bad) xchg sbb cltd cmove lret (bad) adc xchg xchg test push jb imul sbb cwtl dec or mov sbb (bad) and in sbb pop lock lods leave repz lock pop adc dec rcr dec xlat stc loop movb negl mov ja and sub inc or jns icebp mov add test frstor loope stos arpl add pop fist push cwtl add movsl push lods xor mov mov inc add aas cli fiaddl sub push ja adc lock mov or and lods or (bad) call or daa cmp mov fcomps nop aaa push daa sub mov dec in mov and xchg pusha sahf dec fstl (bad) cmc nop and mov mov rorl rcrl pop add popa mov js jl shl outsl fmull fs cmp dec jo xchg cmp cltd das fldlg2 xlat (bad) and fdivl pop cmp adc cmpsb xor xchg adcl gs xlat and mov or xchg clc jmp sarl in mov inc jl outsb int3 aas push mov cmp mov sbb push insl push cmpsl jg hlt push fs sbb mov lods sub aas push das push or and adc lret lret (bad) (bad) lods imul stc mov xchg js mov shr xor in pop inc sbb mov std cltd loope dec sbb in xlat lret ja xor out pop pop iret add xor addr16 cmp sarb mov add ljmp mov add xlat push and cltd mov (bad) pushf push inc je out push (bad) cmpsb stos cli cs sbb and out aad lret data16 or movsb xchg mov cmp dec lods pushf jns fnsave push xlat inc jecxz fsubl div daa out sti push (bad) orb (bad) movl push popf cwtl mov cmp in add mov mov push cltd das cmpsl mov mov dec iret loope in inc pushf mov adc jnp negl push mov xor nop fcomip lods sub ficoml inc sub mov mov and jmp mov mov jmp mov and xchg sbb (bad) clc test mov lock or out nop mov sub ret out xor sub in fsubl outsb pushw jle add pusha jbe adc mov or loope mov jo gs addl jae mov in icebp mov (bad) mov and adc xor rcl pavgw push push sbb pop dec mov rolb cmp push (bad) sarb sarb xchg sbb lahf pop loope insb push sub mov xor mov mov sub lea mov xor xchg cmova cmpl orb stos push xchg stos rolb pushf movsb jmp fcoms stc ret lret icebp fstp mov das pushf mov and push orl mov sub dec movsl nop cmp fcmovnu arpl sub cld (bad) aam pop xor xchg (bad) insb xor pop mov xorb jecxz call out jl adc loopne bound adc fs and int (bad) lock mov (bad) dec xchg mov mov sarb mov mov (bad) imull ret das mov pop inc push (bad) jae repz jae and mov addr16 cmp mov adc mov cmp nop cmp inc cmc and movsb popa sub mov leave pop mov pop movsb pop sub xor dec or iret les scas outsb pop test scas xchg inc imul xchg paddusw andl inc xchg pop xchg jae mov fldenv in inc jge mov cs sbb or insl inc or cmp mov andb das cmp xor pop enter xor (bad) lds push xchg jp and out (bad) (bad) cmc sbb push push cmpl movl lret dec stos subl adc cmp lods pop cmp les jnp pop adc jp gs rorb fsubs add fcoml mov pop sbb inc adc (bad) jmp cmp insl nop add nop xchg mov fmul xchg sub add (bad) cmc mov xor and imul or mov fbstp sub fldt push call sub mov mov movsl fwait movsb pop sbb jns (bad) add jbe je (bad) fildl mov nop sbb or pop imul (bad) adc pushf dec mov je fwait lods dec loopne mov pusha mov (bad) mov stos jl (bad) sub sarb xchg push sbb sub sbb ret mov inc aas pop jns dec push sub pushf dec mov popa imul jge jge push xchg les lret icebp xor popa and mov pop repz add push outsb daa cmp push add pushf inc pop push cld clc idivl (bad) imul adc adc mov push aam (bad) xlat sub inc cmc movsb dec jo arpl cmp xor mov inc dec nop icebp mov or mov mov mov sub cltd mov lret popa xchg jae inc mov sbb or cmp add leave test adc lcall shlb loopne xor int sti (bad) or push inc pop or ret sahf je push mov cmp scas mov mov int3 adc or andb jmp in xchg mov mov loop andb sbb fs stos movsb out f2xm1 sub mov mov push push cmc mov clc sub ret or jl pop je inc stc jae outsb insl or xchg (bad) fcomip dec adc in mov xchg or mov in cmc mov xchg dec push jnp repz loopne or sub and dec ja push and or out popa push loopne fistpl cmp fdivl cwtl inc inc pop ljmp repz mov and stos js outsb sbb int3 mov fcmove dec repnz mov mov dec stos push push pop popf sub xor sbb mov dec addr16 cmp jne sbb xchg test loop jmp fiaddl loopne lock scas mov sbb mov je bound mov hlt rcl adc inc lods imul xor or mov aam std sbbl mov fdivp or xchg sub stc pop sbb lods lahf or lods push lahf pop pushf lods mov iret or mov cmp sbb je push xor fs pusha adc cmpsb fsub lcall dec mov pop xor mov mov jmp inc mov loopne cwtl inc jb ds push or into jo (bad) or test add cmp aam rcrb test aas repz jmp fsubr roll dec cs in stc (bad) insb inc sub mov rol sub leave inc stos popf push xor stos push sbb fisttpll xchg jmp bswap jne lods adc xchg mov aaa adc (bad) divb divl mov add (bad) lcall push mov js jbe mov mov push fisub push fdivr sub lahf (bad) insl rcrl lea lret jmp arpl inc push dec fcoml mov mov cld js (bad) pusha and cmpsb and insb and mov stc adcl das cld push roll mov (bad) dec lea cld repz mov mov fbld mov arpl std inc push push (bad) xchg rol test xor inc les adc ds adc dec push lcall mov js xchg inc sub or adc xor lcall (bad) xor insl (bad) jne int mov mov dec sub ja mov jecxz pop dec add or xorl jp stos (bad) push fcoml movsl xor (bad) push call mov ds outsl jnp inc mov fmuls (bad) pop outsl js xchg xor sbb push push inc jo shrl mov cmp cld movsb inc dec out and iret xchg mov stos bnd fs add jmp ss mov pop adc dec hlt nop jbe ftst sbb imul movsb mov loop adc icebp data16 fnsave decb adc dec cs jecxz mov das fdiv mov cmpsb fistpl les fsubrs xchg lods (bad) push push cmp pop cmp fldl movsb mov lds and sub pop mov test fwait das rep mov ds aad stc insl inc inc mov cmp rcrl xchg pop xor adc or mov mov daa mov jg push jnp stos pusha das sbb and add iret push jnp add push negl pop fcoml div mov int xchg lods fidiv jecxz idivl dec mov push xlat (bad) cmpsl push test repnz pop push (bad) jns daa xchg orl and insb data16 ja jecxz add sub addr16 imul inc and mov xchg push test mov loopne pusha sub cmp (bad) mov test imul mov dec xor inc mov hlt loopne mov lea xor xchg ret jecxz xor push push cli and mov push stc mov xlat fs fucomp xchg movsl or mov and push adc push mov xlat xlat mov sub push pop push (bad) cmp imulb and jge ficompl ds inc pop dec popf pop add mov cmp in je sbb mov add xor push xchg inc fcoml sub push xor outsl mov (bad) fldenv aaa or ret test inc repnz push packsswb sbb jne push inc dec addr16 std lret out loope mov sbb testb add inc dec int3 inc push mov jle xlat mov mov data16 xchg or ja movsl lea push jge sub sti out arpl stc rclb andl push int dec das test gs pop mov out aam push outsb push out out or sub lret inc mov shlb stc inc and cltd (bad) ds repz add pop imul pop test xor ljmp incb dec daa pop jo popa cmp xchg mov stos or fistp call sbb jle mov punpckhbw dec int pop jno jnp pop pop repz or mov mov addr16 rcll fisubr push icebp and cmp je inc cmpsl adc ret rcrl push nop xchg or idivb dec les xor dec ret lods mov pushf mov fstl mov pop (bad) jecxz and ss iret jecxz ss ljmp push and cmpsl (bad) lcall mov fcmovnb ss ljmp inc out ja fistp (bad) cld ret movsl popf and rclb inc or std leave outsb push iret inc iret mov incb icebp test sub imul pop mov ret stos adcb mov cmp dec adc cmpsb sub mov (bad) addr16 sti add inc or cmp repz out sub xor sub jg adc rcll push jno adc test imul in negb imulb (bad) cmpsl rorl cmp das cmp mov mov pop jp inc xchg mov mov out repnz sbb dec pusha icebp scas cld leave mov nop sub adc mov std xorl notl rolb out shlb xchg adc (bad) or xchg and int fs notb lds (bad) jbe and sub sahf add sub add ret shll mov mov ja inc mov push fsubrs dec push push jae,pt xor movsb jl fstpl sahf sahf jmp cli call jo xchg (bad) ficomp lret mov mov lret mov or pop stc out insl dec add jge or sub test aas dec mov outsl cmp pushf adc ss leave rorl cmp rcll pop adcb and xor push int3 add cmp dec mov dec loop push or cmp dec ja push cltd ja push or push inc and or xor pop or ds bound data16 add stc xchg or lret rclb arpl adc rclb jg xlat mov push adc test jmp jnp sarl loop or sbb popa push test push dec cs sahf xchg mov inc jns xor fwait cld aam mov fldl pop push pop mov jp enter gs test mov jo xchg sub rcrb pop mov repnz cmp and push (bad) sbb pop or lods add sub dec dec push (bad) repz ds mov out loop cmc push mov fistpl or adc (bad) jae or scas and jecxz scas imul push gs imul lods push sbb jno jecxz mov out dec push push jl repz gs (bad) inc inc fcmovnb (bad) stc jnp lds xchg pop or stos mov xchg fdivs pop dec or sub mov mov idivb fdiv sub jmp jl stos je add (bad) (bad) jo out and scas fwait inc mov mov cli cmc xchg pop inc or sub test clc test call rorl mov push sbb shrl dec fcmovne fiadd ret pop fldl mov in pop xchg (bad) in inc mov arpl lea insl push xchg xchg movsl std cli testb sbb pop stc mov sub int3 lods (bad) enter sub pusha ja xor (bad) enter jmp mov or hlt mov movsl movsl jp pop xor ljmp lret push sub fist imul iret pop xor and cltd into pop sbb inc push xchg sbb jno pop cmpsl push adc (bad) cld shrb jo out sbb (bad) in mov imul push pop das popf mov lods sbb aam adc leave xchg xor mov adc imull jp add xor push stos pop ret fs cmp (bad) outsl pop mov (bad) cmp loop add scas test or pop (bad) mov push jb jl cmp xor pusha or popf fild mov xchg jmp or arpl ret mov and adc into arpl add jo mov push cmp jecxz fildll jg enter dec sbb bound enter adc insl mov push in hlt mov stos push sub idiv aam mul push movsl xor insl sti add sub mov aaa or push jecxz sti push inc push das sub and fxam aam jg (bad) xchg out mov test addr16 xchg stos or sahf or test outsl (bad) dec (bad) fisttpl sub test aad adc fnsave test inc rorb mov jnp mov (bad) xchg ljmp or pop movsb xlat icebp jae inc mov and icebp mov push gs (bad) and mov mov scas stos push fisttpll movsl repnz out push outsb loope rclb dec sub sahf dec (bad) repz out jp push mov pop leave push outsb inc in and cmp fbld int adc cmp mov jmp xchg pop jae std sbb xchg ss lahf fs iret sub jns add leave fnstcw mov in and pop jg mov roll es xchg dec cld pop or mov sbb (bad) mov sarb lret adc in repnz add add fnop adc jmp inc dec ficomp insb push and or pop or inc cli sarb bound cwtl mov jae or (bad) repnz add shll dec (bad) imul jne pop hlt daa es leave dec jbe xor in das sub (bad) mov subl hlt or lea add dec out add test mov aaa (bad) loopne cmp leave adc ljmp pop or aaa sbb ret lock notb xchg or inc rcll out repz mov xor or add jg loopne cltd das mov push mov mov xor xchg sbb xor pushf sub jp mov mov jns loop in in rcrb cmp in lock sbbl out popa adc sbb das imul ja xor lcall cltd mov hlt out fld popa mov not push jg pop and mov xorl gs xlat mov fldl aaa mov xchg adc dec mov stc jge fstl pop jmp insb in cmpl bnd xchg jmp push (bad) mov push fistpl (bad) aam lock mov adc mov sub not dec outsb sbb fwait loope ljmp push mov and popf xchg push iret int3 sbb push (bad) push lea jg xchg jmp int pushf push test push xchg dec push mov cmpsl lret mov inc fisubl mov mov and push jmp mov sub repz out rcr mov jecxz cmp ljmp jb (bad) pop mov in mov sti xchg sahf mov dec jecxz aas roll pop mov xor pop in add fs bswap add fsubrl jg fsubs (bad) mov adc mov fmull add push and call xchg adc cmp addr16 jle fisubrl jecxz sub dec adc cmpsb sahf xchg dec dec data16 (bad) and hlt test cmp repnz jae xchg (bad) movsb fs or (bad) jnp xchg popf mov xchg adc add inc ss xchg cltd cmp inc (bad) jge mov (bad) push mov testl mov lods test rcrl mov pop loope rcl shrl cmp in js out fs out or ds push into push sahf or xchg xor add (bad) iret sub lahf rorb test imul lcall je xor inc or push clc fbstp jl pop add xor loope decb sbb fs mov imul xorl jno mov sub stos jl xchg inc mov pop mov hlt enter nop popa test jno dec mov loop (bad) iret mov orl sub jp out cmp or out mov popf dec xchg ds push cmpl mov push push jne adc xor into ja dec addr16 test test add sub outsl jp mov sub push movsl push out insl scas jmp sbbl xor out mov (bad) std scas adc jg inc pop idivl mov mov sub dec xchg (bad) call pop pop jp mov mov sti ret sahf scas outsb iret jg inc outsb push push stc or stos das fnstenv and xlat and cmp fsubrs mov out mov fildl adc lret in imul adc sarb pop loop out add out xchg cmpsl add sbb orl or in jnp pop into add dec and xchg cmp xchg pop sahf mov pop jae,pt mov xchg xchg push add jae dec js sar or xor xchg ffree pop jecxz addr16 stos mov dec (bad) insl outsl mul push dec and sahf jb insl cmp fs jnp loope call lods outsl addr16 sbb add sbb mov push movb andl sub hlt or cmp fmul add pop (bad) cmp jecxz cs push sbb clc into inc mov jge push inc mov mov scas dec js jne mov or (bad) and (bad) imul or leave inc enter int leave cmp and movsb xor or imul mov xlat or leave pop cwtl xchg sub cld in cld inc fmull and scas jnp (bad) outsl es push adc je sub ss daa in sub mov mov pop sbb fldenv adc mov sti icebp inc dec test test sub jbe mov jg (bad) xor popa aaa push stc lret call rorb xchg pop add loop mov lods aad cmp int in rol dec (bad) icebp aad push inc pop mov inc adc rcrl add out popf dec cmp jmp test int or (bad) dec push mov lret or jb test adc inc sub jecxz mov sub mov cmovo stos mov unpckhps (bad) decb xchg ja xchg outsl mov mov jb mov and gs jo pop lods mov outsb fs push push cld sub cs sti jb (bad) push push and xorl pop daa movsb (bad) xor fstl mov stos mov pop xchg rcr leave stc mov (bad) mov cmp xlat mov hlt jno loop sub or xchg cmovo mov mov pop sbb push icebp pusha ss bound pop xchg lret sub xchg adcl dec jl cmpsl std popf or xchg ds mov and pusha lock nop clc icebp mov outsb dec sbb js cli out mov jae add and jae je adc cld sub xchg test xor or push aaa add insb and ret mov out aam dec ret mov mov mov xor adc ret and jo inc dec mov dec in call stos movsl cwtl pop cmp push xor into mov mov imul inc sarb mov push dec dec addl outsl dec sub mov mov sub jl out dec push or cmp (bad) inc (bad) sbb mov clc sub inc jle loopne mov popl xchg mov rolb jo test mov nop pop adc mov xor xchg push sarb subb cmc pop sbb int3 gs sub cmpsl jge into ret inc cmp (bad) outsb or hlt in hlt fistl and (bad) sub jae mov add (bad) mov cmp sbb loopne xor xchg xor in push mov mov fsubs (bad) daa cmpsb or loope xchg movsb jle mov rolb dec into xchg out imul (bad) mov bound push xchg clc (bad) sarb jmp sub pop data16 shlb notb (bad) sub mov mov xor in pusha iret sub xor outsl mov pusha jle in sub pop mov sti sbb sub dec (bad) data16 cmpsl sahf pop push sub pushf or test ss or (bad) inc cwtl mov dec lret or xor inc arpl jp jg xlat pop icebp mov mov leave out inc mov in xchg (bad) lret adc push mov and xor cmpsb scas cli jp inc mov jge int3 mov mov mov adc push fdivrp icebp into (bad) xchg mov inc jmp jecxz inc shr adc jge rcl add movsl in adc andb stc push popl or xchg pop jnp paddd xlat mov or mov jnp cmp or add rol lock test mov cmp je out repz cmc in data16 mov jae cmc call lods jmp mov pusha pusha imulb push les and dec enter fs ja,pt into and dec (bad) mov out popf scas fisttpll xor cmc jne sahf jmp pop and fnstsw or clc push ret sbb push sub in fcomp andl sbb (bad) movd xchg add pop iret andl xchg add push and xor mov test jns jl mov and mov mull xchg lahf loop pop adc lret cmp xlat pop into pop cmpsb dec push inc inc call xchg repnz and idiv inc inc fsubrl sub cmpsl mov iret add imul jl lds ljmp add sbb cmp in sub adc and (bad) sub pushf jmp lds push jp (bad) scas mov lcall enter loop jb cli mov out dec adc out add cld ds leave mov mov ja lret in pop sbb jl loop lds dec mov xor mov fistl loope add mov test xor loop imul jp orb test loope sbb stos or add adc popf mov subps jmp in pop outsl popf aad repz sub pop cmp inc xchg inc ja pop pusha ja and out xchg ret lods mov add iret sub enter cmp mov mov mov or inc xchg add mov outsl cmp aad push cmp pusha inc cmpsl popf and movsb or cmp ds popf sti shld sub and sbbb xchg dec adc cmpsb insb (bad) notb push inc cli pop aas insl pop loopne pop clc sub repnz jo and sbb shrl insb jg pop add xor pop adc hlt mov gs mov mov inc sbb sub lahf popa jl sbb fcoms imul cmc popa lods sbb sub or (bad) xor shlb lds sti cmp sbb mov xor inc xchg jbe popa xor (bad) adc mov or fmull dec (bad) jne mov in inc cmp lods fwait xchg sbb stos or in hlt lods sbb pop mov loopne cltd inc imul dec and rcrb sub xchg inc sbb aad mov scas mov cmc test adc in mov sahf push push xor push (bad) mov lods sbb out (bad) xor cmp mov inc mov sti jmp mov pop popf popa jge dec jb jns push pop fwait push ret loopne pop insb dec dec push lods add inc mov sub jg dec mov xor xchg ret int3 jge shll or sbb and mov cmpb push push stc xor cmp loop cmpsb mov je ret and (bad) fdivl sub or aas push ja dec xchg out xor jns lcall inc jg (bad) fcompl insb in cmpsb and fild xchg mov and iret and in aaa sub xchg push imul std fidivr outsb pop lret out push mov pop pop pop cmp mov sub (bad) push mov pop test negb cs mov inc jbe xor test jb push jo xor jno cmp xor jecxz dec insb push hlt adcb mov lret shlb and call rclb js fldcw cli push sti push data16 xor adc add xchg (bad) stos cltd cmp fwait cmp aaa std sbb xlat xchg adc iret lahf xchg call jmp call dec pop jle or aam movsl (bad) adc adcl bound jo sub in aam lret push and jle lds mov push test stos into push (bad) fadd sub test push push test adc mov sbb sub sub lret inc daa enter jmp xor pop cmp dec jo mov loope jb js or jbe in sbb fs mov insl push dec cmpb ret inc push (bad) push ljmp mov imul pop add shr lods mov adc mov outsl mov loope add test fsubs mov pop ret inc ljmp fistl xor or push aas push decb cwtl cmp popf add jmp jo push jp sarb sahf out test pop (bad) xor imul test movsl daa xor fbstp in lahf leave sbb inc xor or (bad) xcrypt-ecb cmpsl int3 mov add popa hlt lods pop hlt sbb xor xchg jne,pn mov mov dec aam je in mov inc jecxz (bad) add ljmp mov hlt jge sarl sbb add aam or inc adc xchg inc cmp ds dec in stos dec mov jno mov out xchg cmp or rcrl (bad) movsl adc jbe xchg jns mov xchg icebp dec dec test mov cs push push adc pop aam xchg xor xchg xchg cmp mov sar xor dec xchg ds or mov cmp or (bad) ja and jno in ficomp je and mov mov lds push into stc fs addr16 outsl ds ret aas xchg lds inc idiv jns sti cmp or adc jmp jmp in ja push dec leave ficom inc repz movsl mov dec xchg add out insb mov out dec xchg (bad) push rcl pop or mov dec insl sub sti ljmp add jmp adc mov scas push (bad) cmp out or pop xchg cltd cmp (bad) and sub cmp lcall jnp inc ret push flds ret scas ss mov pop in mov fmulp fldl cmp mov rsqrtps pop and out cmpsb or push push fadd mov pop outsl fwait dec add out adc mov mov ja pop mov inc push mov mov pop int3 std push popf out push lds add cmp dec push pop (bad) sbb (bad) pop jbe mov jl jle sti loop or sbb ljmp mov shlb (bad) xor push mov cmp rcrb sar mov jns pusha imul dec cmp into dec loopne js jp dec imul fcoms repz fnclex mov std push addr16 jl imul enter dec sti sahf pop aaa iret xchg sub fs pushf xchg sbb arpl shlb and movsb xor ss call push push loopne sub pop jle (bad) fildl mov mov hlt jp xchg insl xor fnstenv gs test fisub loop (bad) mov dec test pop jge ficoml or sbb bnd aam jp fs jecxz sub imul lret inc push xchg mov xchg les mov adc xchg cmpsb cmp repnz and mov pop movsl dec ret sbb mov dec and in jecxz xchg iret xor inc xchg pop jge sub jp push cld aas pop jmp or insb xlat popf cmp scas aam loopne jg loopne push xchg mov fstl and scas pop push dec rcl out pop xor jg push adcb jge jae and xor jmp loop push test cwtl rorb xchg repz fildll fiaddl cmp ja push test jns adc mov fwait es add loopne jo xchg or mov dec xor mov sbb daa jne sahf jle pop sbb xchg std sbb fistl pop push jb lcall out mov bound (bad) aaa ljmp fwait lds jp int3 mov cmp jge fidiv pushf mov bound in jecxz (bad) mov lock jl xlat data16 or leave (bad) rorb pop pop mov xchg mov pop mov cmp or loop and sub shlb push pop add or mov int3 int pop call daa (bad) pusha and ds cmp (bad) adc insb ret pop loopne push inc and ljmp xchg or xchg and mov ror push fwait pop push lods negb rorl stos int jecxz mov lds jne pop push stc jl rcrb adcl mov imul mov mov inc push sbb xor cmp popl outsl lock push ret cmpsb mov loopne ds lret cmpsl test pop bnd insb sub sub xchg into cwtl out fdivs jnp jmp scas jp dec call push popa xchg orl mov push jb out mov cltd push add shlb ficoml adc mov fcmovbe push (bad) incl lret cmp adc outsb pop pop inc jne test sub test jb movsl sbb jne sarl and cmp jl sbb mull mov outsb addr16 adc cld add (bad) gs add mov sub cwtl add push das test or pushf jge movsb push mov push inc xlat jae ss adc rcll xchg ss fcoml add mov das or pop ss insb mov repnz in add dec popa dec test cmpl rcll jnp lcall aaa popf dec dec (bad) fsubr sbb mov icebp repz leave pop ja mov push mov jo leave (bad) push inc xchg mov loop push insl xchg je inc movsl cmp pop jmp push inc in pop es loopne adc push or pop js mov in sbb xchg jecxz fnstcw and mov sbb jg inc fisubl insb stc lahf leave sub jne mov scas stos movsl add inc pop dec and insl loop pop sbb cs inc pop ljmp xchg js (bad) (bad) add add loop shr aad sbb les repz dec jmp sub js adc out dec dec fsts mov fisttp rcrl fstpl lcall hlt sbb push mov vcvtsd2si sahf or sbb das add adc dec dec das orl js jns shlb mov jb pop inc adc lock jno jne xor daa sbb add lahf divb push pusha push mov mov inc jns or or clc xor add push clc lret pop mov fist add (bad) pop cmc ret ret push jb push loop aas out mov jb mov jb mov and and ljmp xlat add rcrb xchg cmp (bad) fisubrl adc inc inc adc cmp dec add xchg inc aad fisttpl insb push out repnz inc stc ret mov mov aaa mov xor cmp xchg rcll fwait mov cs sbb sub sbb or stos ret js frstor enter mov mov and aaa dec leave movsl scas (bad) jae or mov push sti cmp and test pop rcrl pop sbb pop insb sub call pop loopne sub push in mov cwtl lods sarb jle lret sub int3 pop inc xchg int3 inc in jnp aad xor xacquire imul insl mov sub pushf sarb push add stos xor jb cwtl lcall add ret mov push rcrl lret mov icebp pop mov dec lcall fs add sub mov imul and pop (bad) jg or outsb or jecxz cmp fsubrl push movsl mov es inc ret push aad cmp cmpsl push dec push adc mov (bad) in leave fdivr mov xchg mov adc test xchg lea inc cmp lahf push imul jp clc cwtl push cmp lahf xor push push mov adc pop cmc scas xor sbb sub mov add ret cmp (bad) cmp mov push aaa call mov pop js xor cmpsb mov xchg cmpsl inc pop xor pop ljmp dec mov pop (bad) mov pop dec lock lock into gs std das sub pushf imul mov jbe dec fistl ja scas fsts fs cmpl sub jns in push xor test movl mov jecxz add push ljmp add xor test xor pop arpl adc dec enter mov es ret sti dec insl mov movsl repnz pop cmp xchg sbb test inc mov add push xor cmpsl dec fwait lcall mov into mov imul loopne mov (bad) jne add mov push test push xor ja sbb fwait lods or in mov or cmp in les insb add xchg and cmc hlt pop dec das push enter repz jg lahf test adc push movsl jno sub (bad) (bad) scas cmpsb test mov dec out cmpsl jne das leave (bad) das lea iret test mov cmc popa cs pusha push aam std and (bad) outsl popa push sub shll iret sub jae mov rcr or inc lods pop xor and jae cltd clc stos jno push out lcall add add ljmp inc stos popf scas scas sub jle jecxz dec inc jno xor movsb jno mov jo xchg mov adc cmp clc sti mov mov (bad) or mov pushf mov fs jns scas dec inc fiaddl xor sbb mov mov rorl fstl push repnz ret (bad) fsub xchg aam out or enter jmp jg adc imul mov jmp mov enter sarb icebp adc push and lahf (bad) fabs mov (bad) (bad) mov repnz dec adc icebp jae mov mull adcb push xchg inc pop bound push (bad) fcoms add cmp lret pop lock cltd ds repnz cmp outsl test out rolb mov pop fisubr loopne scas xor (bad) scas inc cmp (bad) popa push (bad) jae cmp mov inc sbb sbb repnz inc inc cmc cmp cltd xlat in push inc mov out xor (bad) pushf addr16 jp test sbb ljmp repz lods fmuls fistl sbb sbb xor daa xchg inc enter je fisubrl lds ljmp xchg mov xorl xor sub xor mov negl sbb out push cmp mov test aad jg stos jg (bad) cmp mov adc (bad) jns sbb mov pusha push lods jne imul add xchg mov addb test pop push loopne call sbb sub cs add xor imull rorl xchg add sub jne bound mov jmp rcrl xchg das push clc test movsb inc xchg cmpsb mov inc mov and add add movb jbe sub fwait sbb outsb out push (bad) xor cld nop add leave insb add mov loopne or mov bswap loopne arpl fsubr jmp pushf sub nop mov dec inc loop aad push cwtl ret jb clc sbb pop push adc xor in add arpl push xlat repnz ss aas into mov std lret inc in inc ljmp cmp jbe leave popf stc jb sub fisttp or lock nop push adc hlt push push push iret mov mov shl pop push push in jl lgs push imull leave jne rcrb fsubrs or in ja cmpb xchg int3 jno lea pop sbb (bad) push mov sub push push mov test jne call mov call call call mov mov call push call push call add mov call push push mov call push call test je lea push call mov mov mov mov mov movl jmp push lea push push call add movl lea push call mov mov mov mov mov push mov movl call call lea push push call test je mov sub mov mov sub mov call push mov call imul push call call imul push call push lea push push call add cmpl jb mov push call mov add mov cmp jb mov inc cmp jb test jne mov cmp jae sub cmp jb cmp ja mov push call add pop mov pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov mov push cmpl jb mov push call mov cmp jne cmpl xorps movups movl movups movl movl movl jb mov lea push lea push push push call test jne mov test je mov cmpl je cmpl je mov test jne jmp mov mov push call cmp jne pop xor pop mov pop ret push call pop pop mov pop ret int3 int3 int3 int3 push mov sub cmpb jne lea push push call test jne movb mov mov pop ret xor mov pop ret int3 int3 int3 int3 int3 push jns enter mov leave push sub mov sbb outsl xchg test xchg aam les insl xchg xor jbe repnz mov pop mov add out sub adc pop adc cmp mov ret add xchg and lret mov cli xchg addl cwtl add dec ret dec mov lods pop lds ljmp add daa cmp (bad) cmp pop repnz inc mov bound (bad) sbb xor add dec cmpsb jb,pn loope xchg adc lret xor jne scas mov mov popf inc xchg cmp sbb cmpsb stos repz mov lock aam adc xchg jb mov outsb cltd or mov cmp cmp lock in adc cmp inc nop mov ja adc pop jmp leave pop inc sbb icebp nop out push mov fnstcw sbb enter subb test xchg arpl psubb scas inc mov (bad) lock dec mov xlat mov cmp pusha push jmp mov xor adc (bad) jb cltd daa lods std push add jbe (bad) and clc addl xchg aam inc dec xor pop nop push xlat fstpl scas or out or icebp insl outsb testb add out jle (bad) rdpmc add lods mov push out cmp pop mov clc pop lods push pusha jge test enter adc dec or sub push imul sbb xchg (bad) sbb (bad) sub out mov or cmpsb and xchg aaa push ret in push enter (bad) imul enter add mov jecxz out jp dec daa leave and stc fstps add mov fsubl lret mov cmp pusha iret imul mov shll or cwtl int3 jne daa stos loopne sub mov dec inc jno or cwtl and int xchg stc sub adc mov pop xchg outsb fnstenv push (bad) sub enter in inc xchg pop scas cmp jg push pop or sub cmp cs or cmpsb leave mov mov jo daa mov (bad) jb lods pop mov std jbe cmp push mov xor mov jbe test jecxz clc jno adc xor cli inc xor and mov sti inc jge test adc andl ss xchg nop mov or or add nop jg mov mov inc mov or jne mov shr test stos rorl daa out daa (bad) sti mov mov insb sbb sarl je push les les inc xchg push sub mov shrb imul sbb sbb add sti bound mov int3 lret push and mov popf mov in and bound add neg and push loopne out movsl sarl xor dec popf xor movsl xchg jp lret xchg cmp inc rolb cwtl push in adc sbb sub lods es xor cmp lods or and ss sub inc inc enter aas inc cs pop adc mov stos mov imul add xchg divl inc pop rolb addl stos dec (bad) pop mov jmp imul out out push and lods mov aaa out sbbl mov loope mov and ret lea faddp into jle arpl adc scas push xor push cmpsb stos and shr nop enter add dec adc ss dec sbb int mov enter sbb leave int3 cmp dec add inc lret out xchg data16 mov (bad) outsb fcmovb and out dec sar das cmp loopne,pt ror sbb push repz loopne loopne inc mov es gs ja lea and nop push lods inc ss fstl iret cld out mov (bad) sbb movsl popa lock push lods cmpsl cmp cmp mov mov push mov cmpl jne movl xor pop pop ret push push push push push call mov test jne call pop xor pop pop ret push push push pushl call pushl pushl call mov test jne push push call jmp call mov push movb call test pop pop sete pop pop ret 